// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR Resource: Citation
export {};
//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"Citation.js","sourceRoot":"./src/","sources":["fhirJson/Citation.ts"],"names":[],"mappings":"AAAA,oBAAoB;AACpB,gDAAgD;AAChD,kCAAkC;AAClC,0BAA0B","sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4b.core version: 4.3.0\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR Resource: Citation\r\n\r\nimport * as fhir from '../fhirJson.js';\r\n\r\n\r\n/**\r\n * A human-readable display of the citation.\r\n */\r\nexport interface CitationSummary extends fhir.BackboneElement { \r\n  /**\r\n   * Format for display of the citation.\r\n   */\r\n  style?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * The human-readable display of the citation.\r\n   */\r\n  text: string|null;\r\n  /**\r\n   * Extended properties for primitive element: Citation.summary.text\r\n   */\r\n  _text?:fhir.FhirElement;\r\n}\r\n\r\n/**\r\n * The assignment to an organizing scheme.\r\n */\r\nexport interface CitationClassification extends fhir.BackboneElement { \r\n  /**\r\n   * The kind of classifier (e.g. publication type, keyword).\r\n   */\r\n  type?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * The specific classification value.\r\n   */\r\n  classifier?: (fhir.CodeableConcept|null)[]|undefined;\r\n}\r\n\r\n/**\r\n * An effective date or period for a status of the citation.\r\n */\r\nexport interface CitationStatusDate extends fhir.BackboneElement { \r\n  /**\r\n   * Classification of the status.\r\n   */\r\n  activity: fhir.CodeableConcept|null;\r\n  /**\r\n   * Either occurred or expected.\r\n   */\r\n  actual?: boolean|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Citation.statusDate.actual\r\n   */\r\n  _actual?:fhir.FhirElement;\r\n  /**\r\n   * For an instance, place the same value in both start and end elements.\r\n   */\r\n  period: fhir.Period|null;\r\n}\r\n\r\n/**\r\n * Artifact related to the Citation Resource.\r\n */\r\nexport interface CitationRelatesTo extends fhir.BackboneElement { \r\n  /**\r\n   * How the Citation resource relates to the target artifact.\r\n   */\r\n  relationshipType: fhir.CodeableConcept|null;\r\n  /**\r\n   * The clasification of the related artifact.\r\n   */\r\n  targetClassifier?: (fhir.CodeableConcept|null)[]|undefined;\r\n  /**\r\n   * The article or artifact that the Citation Resource is related to.\r\n   */\r\n  targetUri?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Citation.relatesTo.target[x]\r\n   */\r\n  _targetUri?:fhir.FhirElement;\r\n  /**\r\n   * The article or artifact that the Citation Resource is related to.\r\n   */\r\n  targetIdentifier?: fhir.Identifier|undefined;\r\n  /**\r\n   * The article or artifact that the Citation Resource is related to.\r\n   */\r\n  targetReference?: fhir.Reference|undefined;\r\n  /**\r\n   * The article or artifact that the Citation Resource is related to.\r\n   */\r\n  targetAttachment?: fhir.Attachment|undefined;\r\n}\r\n\r\n/**\r\n * The defined version of the cited artifact.\r\n */\r\nexport interface CitationCitedArtifactVersion extends fhir.BackboneElement { \r\n  /**\r\n   * The version number or other version identifier.\r\n   */\r\n  value: string|null;\r\n  /**\r\n   * Extended properties for primitive element: Citation.citedArtifact.version.value\r\n   */\r\n  _value?:fhir.FhirElement;\r\n  /**\r\n   * Citation for the main version of the cited artifact.\r\n   */\r\n  baseCitation?: fhir.Reference|undefined;\r\n}\r\n\r\n/**\r\n * An effective date or period for a status of the cited artifact.\r\n */\r\nexport interface CitationCitedArtifactStatusDate extends fhir.BackboneElement { \r\n  /**\r\n   * Classification of the status.\r\n   */\r\n  activity: fhir.CodeableConcept|null;\r\n  /**\r\n   * Either occurred or expected.\r\n   */\r\n  actual?: boolean|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Citation.citedArtifact.statusDate.actual\r\n   */\r\n  _actual?:fhir.FhirElement;\r\n  /**\r\n   * For an instance, place the same value in both start and end elements.\r\n   */\r\n  period: fhir.Period|null;\r\n}\r\n\r\n/**\r\n * The title details of the article or artifact.\r\n */\r\nexport interface CitationCitedArtifactTitle extends fhir.BackboneElement { \r\n  /**\r\n   * Used to express the reason or specific aspect for the title.\r\n   */\r\n  type?: (fhir.CodeableConcept|null)[]|undefined;\r\n  /**\r\n   * Used to express the specific language.\r\n   */\r\n  language?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * The title of the article or artifact.\r\n   */\r\n  text: string|null;\r\n  /**\r\n   * Extended properties for primitive element: Citation.citedArtifact.title.text\r\n   */\r\n  _text?:fhir.FhirElement;\r\n}\r\n\r\n/**\r\n * Summary of the article or artifact.\r\n */\r\nexport interface CitationCitedArtifactAbstract extends fhir.BackboneElement { \r\n  /**\r\n   * Used to express the reason or specific aspect for the abstract.\r\n   */\r\n  type?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * Used to express the specific language.\r\n   */\r\n  language?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * Abstract content.\r\n   */\r\n  text: string|null;\r\n  /**\r\n   * Extended properties for primitive element: Citation.citedArtifact.abstract.text\r\n   */\r\n  _text?:fhir.FhirElement;\r\n  /**\r\n   * Copyright notice for the abstract.\r\n   */\r\n  copyright?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Citation.citedArtifact.abstract.copyright\r\n   */\r\n  _copyright?:fhir.FhirElement;\r\n}\r\n\r\n/**\r\n * The component of the article or artifact.\r\n */\r\nexport interface CitationCitedArtifactPart extends fhir.BackboneElement { \r\n  /**\r\n   * The kind of component.\r\n   */\r\n  type?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * The specification of the component.\r\n   */\r\n  value?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Citation.citedArtifact.part.value\r\n   */\r\n  _value?:fhir.FhirElement;\r\n  /**\r\n   * The citation for the full article or artifact.\r\n   */\r\n  baseCitation?: fhir.Reference|undefined;\r\n}\r\n\r\n/**\r\n * The artifact related to the cited artifact.\r\n */\r\nexport interface CitationCitedArtifactRelatesTo extends fhir.BackboneElement { \r\n  /**\r\n   * How the cited artifact relates to the target artifact.\r\n   */\r\n  relationshipType: fhir.CodeableConcept|null;\r\n  /**\r\n   * The clasification of the related artifact.\r\n   */\r\n  targetClassifier?: (fhir.CodeableConcept|null)[]|undefined;\r\n  /**\r\n   * The article or artifact that the cited artifact is related to.\r\n   */\r\n  targetUri?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Citation.citedArtifact.relatesTo.target[x]\r\n   */\r\n  _targetUri?:fhir.FhirElement;\r\n  /**\r\n   * The article or artifact that the cited artifact is related to.\r\n   */\r\n  targetIdentifier?: fhir.Identifier|undefined;\r\n  /**\r\n   * The article or artifact that the cited artifact is related to.\r\n   */\r\n  targetReference?: fhir.Reference|undefined;\r\n  /**\r\n   * The article or artifact that the cited artifact is related to.\r\n   */\r\n  targetAttachment?: fhir.Attachment|undefined;\r\n}\r\n\r\n/**\r\n * The collection the cited article or artifact is published in.\r\n */\r\nexport interface CitationCitedArtifactPublicationFormPublishedIn extends fhir.BackboneElement { \r\n  /**\r\n   * Journals and newspapers are coded as Periodical.\r\n   */\r\n  type?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * Journal identifiers include ISSN, ISO Abbreviation and NLMuniqueID; Book identifiers include ISBN.\r\n   */\r\n  identifier?: (fhir.Identifier|null)[]|undefined;\r\n  /**\r\n   * ClinicalTrials.gov is a name of a database.\r\n   */\r\n  title?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Citation.citedArtifact.publicationForm.publishedIn.title\r\n   */\r\n  _title?:fhir.FhirElement;\r\n  /**\r\n   * Name of the publisher.\r\n   */\r\n  publisher?: fhir.Reference|undefined;\r\n  /**\r\n   * Geographic location of the publisher.\r\n   */\r\n  publisherLocation?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Citation.citedArtifact.publicationForm.publishedIn.publisherLocation\r\n   */\r\n  _publisherLocation?:fhir.FhirElement;\r\n}\r\n\r\n/**\r\n * Defining the date on which the issue of the journal was published.\r\n */\r\nexport interface CitationCitedArtifactPublicationFormPeriodicReleaseDateOfPublication extends fhir.BackboneElement { \r\n  /**\r\n   * Date on which the issue of the journal was published.\r\n   */\r\n  date?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Citation.citedArtifact.publicationForm.periodicRelease.dateOfPublication.date\r\n   */\r\n  _date?:fhir.FhirElement;\r\n  /**\r\n   * Year on which the issue of the journal was published.\r\n   */\r\n  year?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Citation.citedArtifact.publicationForm.periodicRelease.dateOfPublication.year\r\n   */\r\n  _year?:fhir.FhirElement;\r\n  /**\r\n   * Month on which the issue of the journal was published.\r\n   */\r\n  month?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Citation.citedArtifact.publicationForm.periodicRelease.dateOfPublication.month\r\n   */\r\n  _month?:fhir.FhirElement;\r\n  /**\r\n   * Day on which the issue of the journal was published.\r\n   */\r\n  day?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Citation.citedArtifact.publicationForm.periodicRelease.dateOfPublication.day\r\n   */\r\n  _day?:fhir.FhirElement;\r\n  /**\r\n   * Spring, Summer, Fall/Autumn, Winter.\r\n   */\r\n  season?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Citation.citedArtifact.publicationForm.periodicRelease.dateOfPublication.season\r\n   */\r\n  _season?:fhir.FhirElement;\r\n  /**\r\n   * Text representation of the date of which the issue of the journal was published.\r\n   */\r\n  text?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Citation.citedArtifact.publicationForm.periodicRelease.dateOfPublication.text\r\n   */\r\n  _text?:fhir.FhirElement;\r\n}\r\n\r\n/**\r\n * The specific issue in which the cited article resides.\r\n */\r\nexport interface CitationCitedArtifactPublicationFormPeriodicRelease extends fhir.BackboneElement { \r\n  /**\r\n   * National Library of Medicine uses the codes \"Internet\" or \"Print\".\r\n   */\r\n  citedMedium?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * Volume number of journal in which the article is published.\r\n   */\r\n  volume?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Citation.citedArtifact.publicationForm.periodicRelease.volume\r\n   */\r\n  _volume?:fhir.FhirElement;\r\n  /**\r\n   * Issue, part or supplement of journal in which the article is published.\r\n   */\r\n  issue?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Citation.citedArtifact.publicationForm.periodicRelease.issue\r\n   */\r\n  _issue?:fhir.FhirElement;\r\n  /**\r\n   * Defining the date on which the issue of the journal was published.\r\n   */\r\n  dateOfPublication?: fhir.CitationCitedArtifactPublicationFormPeriodicReleaseDateOfPublication|undefined;\r\n}\r\n\r\n/**\r\n * A common use is a journal article with a publication date and pagination for a print version and a different publication date for the online version of the same article.\r\n */\r\nexport interface CitationCitedArtifactPublicationForm extends fhir.BackboneElement { \r\n  /**\r\n   * The collection the cited article or artifact is published in.\r\n   */\r\n  publishedIn?: fhir.CitationCitedArtifactPublicationFormPublishedIn|undefined;\r\n  /**\r\n   * The specific issue in which the cited article resides.\r\n   */\r\n  periodicRelease?: fhir.CitationCitedArtifactPublicationFormPeriodicRelease|undefined;\r\n  /**\r\n   * The date the article was added to the database, or the date the article was released (which may differ from the journal issue publication date).\r\n   */\r\n  articleDate?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Citation.citedArtifact.publicationForm.articleDate\r\n   */\r\n  _articleDate?:fhir.FhirElement;\r\n  /**\r\n   * The date the article was last revised or updated in the database.\r\n   */\r\n  lastRevisionDate?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Citation.citedArtifact.publicationForm.lastRevisionDate\r\n   */\r\n  _lastRevisionDate?:fhir.FhirElement;\r\n  /**\r\n   * Language is provided to support indexing and accessibility (typically, services such as text to speech use the language tag). The html language tag in the narrative applies  to the narrative. The language tag on the resource may be used to specify the language of other presentations generated from the data in the resource. Not all the content has to be in the base language. The Resource.language should not be assumed to apply to the narrative automatically. If a language is specified, it should it also be specified on the div element in the html (see rules in HTML5 for information about the relationship between xml:lang and the html lang attribute).\r\n   */\r\n  language?: (fhir.CodeableConcept|null)[]|undefined;\r\n  /**\r\n   * Entry number or identifier for inclusion in a database.\r\n   */\r\n  accessionNumber?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Citation.citedArtifact.publicationForm.accessionNumber\r\n   */\r\n  _accessionNumber?:fhir.FhirElement;\r\n  /**\r\n   * Used for full display of pagination.\r\n   */\r\n  pageString?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Citation.citedArtifact.publicationForm.pageString\r\n   */\r\n  _pageString?:fhir.FhirElement;\r\n  /**\r\n   * Used for isolated representation of first page.\r\n   */\r\n  firstPage?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Citation.citedArtifact.publicationForm.firstPage\r\n   */\r\n  _firstPage?:fhir.FhirElement;\r\n  /**\r\n   * Used for isolated representation of last page.\r\n   */\r\n  lastPage?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Citation.citedArtifact.publicationForm.lastPage\r\n   */\r\n  _lastPage?:fhir.FhirElement;\r\n  /**\r\n   * Actual or approximate number of pages or screens.\r\n   */\r\n  pageCount?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Citation.citedArtifact.publicationForm.pageCount\r\n   */\r\n  _pageCount?:fhir.FhirElement;\r\n  /**\r\n   * Copyright notice for the full article or artifact.\r\n   */\r\n  copyright?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Citation.citedArtifact.publicationForm.copyright\r\n   */\r\n  _copyright?:fhir.FhirElement;\r\n}\r\n\r\n/**\r\n * Used for any URL for the article or artifact cited.\r\n */\r\nexport interface CitationCitedArtifactWebLocation extends fhir.BackboneElement { \r\n  /**\r\n   * Code the reason for different URLs, e.g. abstract and full-text.\r\n   */\r\n  type?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * Persistent URLs, like doi, are preferred.\r\n   */\r\n  url?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Citation.citedArtifact.webLocation.url\r\n   */\r\n  _url?:fhir.FhirElement;\r\n}\r\n\r\n/**\r\n * Provenance and copyright of classification.\r\n */\r\nexport interface CitationCitedArtifactClassificationWhoClassified extends fhir.BackboneElement { \r\n  /**\r\n   * Person who created the classification.\r\n   */\r\n  person?: fhir.Reference|undefined;\r\n  /**\r\n   * Organization who created the classification.\r\n   */\r\n  organization?: fhir.Reference|undefined;\r\n  /**\r\n   * The publisher of the classification, not the publisher of the article or artifact being cited.\r\n   */\r\n  publisher?: fhir.Reference|undefined;\r\n  /**\r\n   * Rights management statement for the classification.\r\n   */\r\n  classifierCopyright?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Citation.citedArtifact.classification.whoClassified.classifierCopyright\r\n   */\r\n  _classifierCopyright?:fhir.FhirElement;\r\n  /**\r\n   * Acceptable to re-use the classification.\r\n   */\r\n  freeToShare?: boolean|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Citation.citedArtifact.classification.whoClassified.freeToShare\r\n   */\r\n  _freeToShare?:fhir.FhirElement;\r\n}\r\n\r\n/**\r\n * The assignment to an organizing scheme.\r\n */\r\nexport interface CitationCitedArtifactClassification extends fhir.BackboneElement { \r\n  /**\r\n   * The kind of classifier (e.g. publication type, keyword).\r\n   */\r\n  type?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * The specific classification value.\r\n   */\r\n  classifier?: (fhir.CodeableConcept|null)[]|undefined;\r\n  /**\r\n   * Provenance and copyright of classification.\r\n   */\r\n  whoClassified?: fhir.CitationCitedArtifactClassificationWhoClassified|undefined;\r\n}\r\n\r\n/**\r\n * Organization affiliated with the entity.\r\n */\r\nexport interface CitationCitedArtifactContributorshipEntryAffiliationInfo extends fhir.BackboneElement { \r\n  /**\r\n   * Display for the organization.\r\n   */\r\n  affiliation?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Citation.citedArtifact.contributorship.entry.affiliationInfo.affiliation\r\n   */\r\n  _affiliation?:fhir.FhirElement;\r\n  /**\r\n   * Role within the organization, such as professional title.\r\n   */\r\n  role?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Citation.citedArtifact.contributorship.entry.affiliationInfo.role\r\n   */\r\n  _role?:fhir.FhirElement;\r\n  /**\r\n   * Identifier for the organization.\r\n   */\r\n  identifier?: (fhir.Identifier|null)[]|undefined;\r\n}\r\n\r\n/**\r\n * Contributions with accounting for time or number.\r\n */\r\nexport interface CitationCitedArtifactContributorshipEntryContributionInstance extends fhir.BackboneElement { \r\n  /**\r\n   * The specific contribution.\r\n   */\r\n  type: fhir.CodeableConcept|null;\r\n  /**\r\n   * The time that the contribution was made.\r\n   */\r\n  time?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Citation.citedArtifact.contributorship.entry.contributionInstance.time\r\n   */\r\n  _time?:fhir.FhirElement;\r\n}\r\n\r\n/**\r\n * Used to report contributorship in individualized ways.\r\n */\r\nexport interface CitationCitedArtifactContributorshipEntry extends fhir.BackboneElement { \r\n  /**\r\n   * humanName.family can match MEDLINE-based lastName (used for surname or single name), humanName.given can match MEDLINE-based forename (used for remainder of name except for suffix), humanName.suffix can match MEDLINE-based suffix (eg 2nd, 3rd, Jr, Sr).\r\n   */\r\n  name?: fhir.HumanName|undefined;\r\n  /**\r\n   * This element is used in Medline based citations, but not supported fully by FHIR HumanName datatype.\r\n   */\r\n  initials?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Citation.citedArtifact.contributorship.entry.initials\r\n   */\r\n  _initials?:fhir.FhirElement;\r\n  /**\r\n   * This element is used in Medline based citations, but not supported fully by FHIR HumanName datatype.\r\n   */\r\n  collectiveName?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Citation.citedArtifact.contributorship.entry.collectiveName\r\n   */\r\n  _collectiveName?:fhir.FhirElement;\r\n  /**\r\n   * Avoids needing to disambiguate common last names or changes of name. ORCID is commonly used as author identifier.\r\n   */\r\n  identifier?: (fhir.Identifier|null)[]|undefined;\r\n  /**\r\n   * Organization affiliated with the entity.\r\n   */\r\n  affiliationInfo?: (fhir.CitationCitedArtifactContributorshipEntryAffiliationInfo|null)[]|undefined;\r\n  /**\r\n   * Physical mailing address for the author or contributor.\r\n   */\r\n  address?: (fhir.Address|null)[]|undefined;\r\n  /**\r\n   * Email or telephone contact methods for the author or contributor.\r\n   */\r\n  telecom?: (fhir.ContactPoint|null)[]|undefined;\r\n  /**\r\n   * The CreDiT taxonomy provides a way to encode contribution information inside article XML files. The purpose of CRediT is to provide transparency in contributions to scholarly published work, to enable improved systems of attribution, credit, and accountability.\r\n   */\r\n  contributionType?: (fhir.CodeableConcept|null)[]|undefined;\r\n  /**\r\n   * The role of the contributor (e.g. author, editor, reviewer).\r\n   */\r\n  role?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * Contributions with accounting for time or number.\r\n   */\r\n  contributionInstance?: (fhir.CitationCitedArtifactContributorshipEntryContributionInstance|null)[]|undefined;\r\n  /**\r\n   * Indication of which contributor is the corresponding contributor for the role.\r\n   */\r\n  correspondingContact?: boolean|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Citation.citedArtifact.contributorship.entry.correspondingContact\r\n   */\r\n  _correspondingContact?:fhir.FhirElement;\r\n  /**\r\n   * Used to code order of authors.\r\n   */\r\n  listOrder?: number|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Citation.citedArtifact.contributorship.entry.listOrder\r\n   */\r\n  _listOrder?:fhir.FhirElement;\r\n}\r\n\r\n/**\r\n * Used to record a display of the author/contributor list without separate coding for each list member.\r\n */\r\nexport interface CitationCitedArtifactContributorshipSummary extends fhir.BackboneElement { \r\n  /**\r\n   * Used most commonly to express an author list or a contributorship statement.\r\n   */\r\n  type?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * The format for the display string.\r\n   */\r\n  style?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * Used to code the producer or rule for creating the display string.\r\n   */\r\n  source?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * The display string for the author list, contributor list, or contributorship statement.\r\n   */\r\n  value: string|null;\r\n  /**\r\n   * Extended properties for primitive element: Citation.citedArtifact.contributorship.summary.value\r\n   */\r\n  _value?:fhir.FhirElement;\r\n}\r\n\r\n/**\r\n * This element is used to list authors and other contributors, their contact information, specific contributions, and summary statements.\r\n */\r\nexport interface CitationCitedArtifactContributorship extends fhir.BackboneElement { \r\n  /**\r\n   * If list is incomplete \"et al\" can be appended to Contributorship.summary.value for display purposes.\r\n   */\r\n  complete?: boolean|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Citation.citedArtifact.contributorship.complete\r\n   */\r\n  _complete?:fhir.FhirElement;\r\n  /**\r\n   * Used to report contributorship in individualized ways.\r\n   */\r\n  entry?: (fhir.CitationCitedArtifactContributorshipEntry|null)[]|undefined;\r\n  /**\r\n   * Used to record a display of the author/contributor list without separate coding for each list member.\r\n   */\r\n  summary?: (fhir.CitationCitedArtifactContributorshipSummary|null)[]|undefined;\r\n}\r\n\r\n/**\r\n * The article or artifact being described.\r\n */\r\nexport interface CitationCitedArtifact extends fhir.BackboneElement { \r\n  /**\r\n   * May include DOI, PMID, PMCID, etc. This element will contain unique identifiers that support de-duplication of citations. This identifier can be valid for only one citation resource.\r\n   */\r\n  identifier?: (fhir.Identifier|null)[]|undefined;\r\n  /**\r\n   * May include trial registry identifiers, e.g. NCT04372602 from clinicaltrials.gov. This identifier can be valid for multiple citation resources.\r\n   */\r\n  relatedIdentifier?: (fhir.Identifier|null)[]|undefined;\r\n  /**\r\n   * When the cited artifact was accessed.\r\n   */\r\n  dateAccessed?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Citation.citedArtifact.dateAccessed\r\n   */\r\n  _dateAccessed?:fhir.FhirElement;\r\n  /**\r\n   * The defined version of the cited artifact.\r\n   */\r\n  version?: fhir.CitationCitedArtifactVersion|undefined;\r\n  /**\r\n   * The status of the cited artifact.\r\n   */\r\n  currentState?: (fhir.CodeableConcept|null)[]|undefined;\r\n  /**\r\n   * An effective date or period for a status of the cited artifact.\r\n   */\r\n  statusDate?: (fhir.CitationCitedArtifactStatusDate|null)[]|undefined;\r\n  /**\r\n   * The title details of the article or artifact.\r\n   */\r\n  title?: (fhir.CitationCitedArtifactTitle|null)[]|undefined;\r\n  /**\r\n   * Summary of the article or artifact.\r\n   */\r\n  abstract?: (fhir.CitationCitedArtifactAbstract|null)[]|undefined;\r\n  /**\r\n   * The component of the article or artifact.\r\n   */\r\n  part?: fhir.CitationCitedArtifactPart|undefined;\r\n  /**\r\n   * The artifact related to the cited artifact.\r\n   */\r\n  relatesTo?: (fhir.CitationCitedArtifactRelatesTo|null)[]|undefined;\r\n  /**\r\n   * A common use is a journal article with a publication date and pagination for a print version and a different publication date for the online version of the same article.\r\n   */\r\n  publicationForm?: (fhir.CitationCitedArtifactPublicationForm|null)[]|undefined;\r\n  /**\r\n   * Used for any URL for the article or artifact cited.\r\n   */\r\n  webLocation?: (fhir.CitationCitedArtifactWebLocation|null)[]|undefined;\r\n  /**\r\n   * The assignment to an organizing scheme.\r\n   */\r\n  classification?: (fhir.CitationCitedArtifactClassification|null)[]|undefined;\r\n  /**\r\n   * This element is used to list authors and other contributors, their contact information, specific contributions, and summary statements.\r\n   */\r\n  contributorship?: fhir.CitationCitedArtifactContributorship|undefined;\r\n  /**\r\n   * Any additional information or content for the article or artifact.\r\n   */\r\n  note?: (fhir.Annotation|null)[]|undefined;\r\n}\r\n\r\n/**\r\n * The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources.\r\n */\r\nexport interface Citation extends fhir.DomainResource { \r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  resourceType: \"Citation\"|null;\r\n  /**\r\n   * Can be a urn:uuid: or a urn:oid: but real http: addresses are preferred. Multiple instances may share the same URL if they have a distinct version.\r\n   */\r\n  url?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Citation.url\r\n   */\r\n  _url?:fhir.FhirElement;\r\n  /**\r\n   * May include DOI, PMID, PMCID, etc. This element will contain unique identifiers that support de-duplication of citations. This identifier can be valid for only one citation resource.\r\n   */\r\n  identifier?: (fhir.Identifier|null)[]|undefined;\r\n  /**\r\n   * There may be different citation instances that have the same identifier but different versions.  The version can be appended to the url in a reference to allow a reference to a particular business version of the citation with the format [url]|[version].\r\n   */\r\n  version?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Citation.version\r\n   */\r\n  _version?:fhir.FhirElement;\r\n  /**\r\n   * The name is not expected to be globally unique. The name should be a simple alphanumeric type name to ensure that it is machine-processing friendly.\r\n   */\r\n  name?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Citation.name\r\n   */\r\n  _name?:fhir.FhirElement;\r\n  /**\r\n   * This name does not need to be machine-processing friendly and may contain punctuation, white-space, etc.\r\n   */\r\n  title?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Citation.title\r\n   */\r\n  _title?:fhir.FhirElement;\r\n  /**\r\n   * Allows filtering of summarys s that are appropriate for use versus not.\r\n   */\r\n  status: 'active'|'draft'|'retired'|'unknown'|null;\r\n  /**\r\n   * Extended properties for primitive element: Citation.status\r\n   */\r\n  _status?:fhir.FhirElement;\r\n  /**\r\n   * Allows filtering of citations that are appropriate for use versus not.\r\n   */\r\n  experimental?: boolean|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Citation.experimental\r\n   */\r\n  _experimental?:fhir.FhirElement;\r\n  /**\r\n   * Note that this is not the same as the resource last-modified-date, since the resource may be a secondary representation of the citation. Additional specific dates may be added as extensions or be found by consulting Provenances associated with past versions of the resource.\r\n   */\r\n  date?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Citation.date\r\n   */\r\n  _date?:fhir.FhirElement;\r\n  /**\r\n   * Usually an organization but may be an individual. The publisher (or steward) of the citation is the organization or individual primarily responsible for the maintenance and upkeep of the citation. This is not necessarily the same individual or organization that developed and initially authored the content. The publisher is the primary point of contact for questions or issues with the citation. This item SHOULD be populated unless the information is available from context.\r\n   */\r\n  publisher?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Citation.publisher\r\n   */\r\n  _publisher?:fhir.FhirElement;\r\n  /**\r\n   * May be a web site, an email address, a telephone number, etc.\r\n   */\r\n  contact?: (fhir.ContactDetail|null)[]|undefined;\r\n  /**\r\n   * This description can be used to capture details such as why the citation was built, comments about misuse, instructions for clinical use and interpretation, literature references, examples from the paper world, etc. It is not a rendering of the citation as conveyed in the 'text' field of the resource itself. This item SHOULD be populated unless the information is available from context (e.g. the language of the citation is presumed to be the predominant language in the place the citation was created).\r\n   */\r\n  description?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Citation.description\r\n   */\r\n  _description?:fhir.FhirElement;\r\n  /**\r\n   * When multiple useContexts are specified, there is no expectation that all or any of the contexts apply.\r\n   */\r\n  useContext?: (fhir.UsageContext|null)[]|undefined;\r\n  /**\r\n   * It may be possible for the citation to be used in jurisdictions other than those for which it was originally designed or intended.\r\n   */\r\n  jurisdiction?: (fhir.CodeableConcept|null)[]|undefined;\r\n  /**\r\n   * This element does not describe the usage of the citation. Instead, it provides traceability of ''why'' the resource is either needed or ''why'' it is defined as it is.  This may be used to point to source materials or specifications that drove the structure of this citation.\r\n   */\r\n  purpose?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Citation.purpose\r\n   */\r\n  _purpose?:fhir.FhirElement;\r\n  /**\r\n   * Use and/or publishing restrictions for the Citation, not for the cited artifact.\r\n   */\r\n  copyright?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Citation.copyright\r\n   */\r\n  _copyright?:fhir.FhirElement;\r\n  /**\r\n   * The 'date' element may be more recent than the approval date because of minor changes or editorial corrections.\r\n   */\r\n  approvalDate?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Citation.approvalDate\r\n   */\r\n  _approvalDate?:fhir.FhirElement;\r\n  /**\r\n   * If specified, this date follows the original approval date.\r\n   */\r\n  lastReviewDate?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Citation.lastReviewDate\r\n   */\r\n  _lastReviewDate?:fhir.FhirElement;\r\n  /**\r\n   * The effective period for a citation  determines when the content is applicable for usage and is independent of publication and review dates. For example, a measure intended to be used for the year 2016 might be published in 2015.\r\n   */\r\n  effectivePeriod?: fhir.Period|undefined;\r\n  /**\r\n   * Who authored the Citation.\r\n   */\r\n  author?: (fhir.ContactDetail|null)[]|undefined;\r\n  /**\r\n   * Who edited the Citation.\r\n   */\r\n  editor?: (fhir.ContactDetail|null)[]|undefined;\r\n  /**\r\n   * Who reviewed the Citation.\r\n   */\r\n  reviewer?: (fhir.ContactDetail|null)[]|undefined;\r\n  /**\r\n   * Who endorsed the Citation.\r\n   */\r\n  endorser?: (fhir.ContactDetail|null)[]|undefined;\r\n  /**\r\n   * A human-readable display of the citation.\r\n   */\r\n  summary?: (fhir.CitationSummary|null)[]|undefined;\r\n  /**\r\n   * The assignment to an organizing scheme.\r\n   */\r\n  classification?: (fhir.CitationClassification|null)[]|undefined;\r\n  /**\r\n   * Used for general notes and annotations not coded elsewhere.\r\n   */\r\n  note?: (fhir.Annotation|null)[]|undefined;\r\n  /**\r\n   * The status of the citation.\r\n   */\r\n  currentState?: (fhir.CodeableConcept|null)[]|undefined;\r\n  /**\r\n   * An effective date or period for a status of the citation.\r\n   */\r\n  statusDate?: (fhir.CitationStatusDate|null)[]|undefined;\r\n  /**\r\n   * Artifact related to the Citation Resource.\r\n   */\r\n  relatesTo?: (fhir.CitationRelatesTo|null)[]|undefined;\r\n  /**\r\n   * The article or artifact being described.\r\n   */\r\n  citedArtifact?: fhir.CitationCitedArtifact|undefined;\r\n}\r\n"]}