// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR Resource: RegulatedAuthorization
export {};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVndWxhdGVkQXV0aG9yaXphdGlvbi5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJKc29uL1JlZ3VsYXRlZEF1dGhvcml6YXRpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLGdEQUFnRDtBQUNoRCxrQ0FBa0M7QUFDbEMsd0NBQXdDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0Yi5jb3JlIHZlcnNpb246IDQuMy4wXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBSZXNvdXJjZTogUmVndWxhdGVkQXV0aG9yaXphdGlvblxyXG5cclxuaW1wb3J0ICogYXMgZmhpciBmcm9tICcuLi9maGlySnNvbi5qcyc7XHJcblxyXG5cclxuLyoqXHJcbiAqIFRoZSBjYXNlIG9yIHJlZ3VsYXRvcnkgcHJvY2VkdXJlIGZvciBncmFudGluZyBvciBhbWVuZGluZyBhIHJlZ3VsYXRlZCBhdXRob3JpemF0aW9uLiBBbiBhdXRob3JpemF0aW9uIGlzIGdyYW50ZWQgaW4gcmVzcG9uc2UgdG8gc3VibWlzc2lvbnMvYXBwbGljYXRpb25zIGJ5IHRob3NlIHNlZWtpbmcgYXV0aG9yaXphdGlvbi4gQSBjYXNlIGlzIHRoZSBhZG1pbmlzdHJhdGl2ZSBwcm9jZXNzIHRoYXQgZGVhbHMgd2l0aCB0aGUgYXBwbGljYXRpb24ocykgdGhhdCByZWxhdGUgdG8gdGhpcyBhbmQgYXNzZXNzZXMgdGhlbS4gTm90ZTogVGhpcyBhcmVhIGlzIHN1YmplY3QgdG8gb25nb2luZyByZXZpZXcgYW5kIHRoZSB3b3JrZ3JvdXAgaXMgc2Vla2luZyBpbXBsZW1lbnRlciBmZWVkYmFjayBvbiBpdHMgdXNlIChzZWUgbGluayBhdCBib3R0b20gb2YgcGFnZSkuXHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIFJlZ3VsYXRlZEF1dGhvcml6YXRpb25DYXNlIGV4dGVuZHMgZmhpci5CYWNrYm9uZUVsZW1lbnQgeyBcclxuICAvKipcclxuICAgKiBJZGVudGlmaWVyIGJ5IHdoaWNoIHRoaXMgY2FzZSBjYW4gYmUgcmVmZXJlbmNlZC5cclxuICAgKi9cclxuICBpZGVudGlmaWVyPzogZmhpci5JZGVudGlmaWVyfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBUaGUgZGVmaW5pbmcgdHlwZSBvZiBjYXNlLlxyXG4gICAqL1xyXG4gIHR5cGU/OiBmaGlyLkNvZGVhYmxlQ29uY2VwdHx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogVGhlIHN0YXR1cyBhc3NvY2lhdGVkIHdpdGggdGhlIGNhc2UuXHJcbiAgICovXHJcbiAgc3RhdHVzPzogZmhpci5Db2RlYWJsZUNvbmNlcHR8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIFJlbGV2YW50IGRhdGUgZm9yIHRoaXMgY2FzZS5cclxuICAgKi9cclxuICBkYXRlUGVyaW9kPzogZmhpci5QZXJpb2R8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIFJlbGV2YW50IGRhdGUgZm9yIHRoaXMgY2FzZS5cclxuICAgKi9cclxuICBkYXRlRGF0ZVRpbWU/OiBzdHJpbmd8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBSZWd1bGF0ZWRBdXRob3JpemF0aW9uLmNhc2UuZGF0ZVt4XVxyXG4gICAqL1xyXG4gIF9kYXRlRGF0ZVRpbWU/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbiAgLyoqXHJcbiAgICogQSByZWd1bGF0b3J5IHN1Ym1pc3Npb24gZnJvbSBhbiBvcmdhbml6YXRpb24gdG8gYSByZWd1bGF0b3IsIGFzIHBhcnQgb2YgYW4gYXNzZXNzaW5nIGNhc2UuIE11bHRpcGxlIGFwcGxpY2F0aW9ucyBtYXkgb2NjdXIgb3ZlciB0aW1lLCB3aXRoIG1vcmUgb3IgZGlmZmVyZW50IGluZm9ybWF0aW9uIHRvIHN1cHBvcnQgb3IgbW9kaWZ5IHRoZSBzdWJtaXNzaW9uIG9yIHRoZSBhdXRob3JpemF0aW9uLiBUaGUgYXBwbGljYXRpb25zIGNhbiBiZSBjb25zaWRlcmVkIGFzIHN0ZXBzIHdpdGhpbiB0aGUgbG9uZ2VyIHJ1bm5pbmcgY2FzZSBvciBwcm9jZWR1cmUgZm9yIHRoaXMgYXV0aG9yaXphdGlvbiBwcm9jZXNzLlxyXG4gICAqL1xyXG4gIGFwcGxpY2F0aW9uPzogKGZoaXIuUmVndWxhdGVkQXV0aG9yaXphdGlvbkNhc2V8bnVsbClbXXx1bmRlZmluZWQ7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBSZWd1bGF0b3J5IGFwcHJvdmFsLCBjbGVhcmFuY2Ugb3IgbGljZW5jaW5nIHJlbGF0ZWQgdG8gYSByZWd1bGF0ZWQgcHJvZHVjdCwgdHJlYXRtZW50LCBmYWNpbGl0eSBvciBhY3Rpdml0eSB0aGF0IGlzIGNpdGVkIGluIGEgZ3VpZGFuY2UsIHJlZ3VsYXRpb24sIHJ1bGUgb3IgbGVnaXNsYXRpdmUgYWN0LiBBbiBleGFtcGxlIGlzIE1hcmtldCBBdXRob3JpemF0aW9uIHJlbGF0aW5nIHRvIGEgTWVkaWNpbmFsIFByb2R1Y3QuXHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIFJlZ3VsYXRlZEF1dGhvcml6YXRpb24gZXh0ZW5kcyBmaGlyLkRvbWFpblJlc291cmNlIHsgXHJcbiAgLyoqXHJcbiAgICogUmVzb3VyY2UgVHlwZSBOYW1lXHJcbiAgICovXHJcbiAgcmVzb3VyY2VUeXBlOiBcIlJlZ3VsYXRlZEF1dGhvcml6YXRpb25cInxudWxsO1xyXG4gIC8qKlxyXG4gICAqIEJ1c2luZXNzIGlkZW50aWZpZXIgZm9yIHRoZSBhdXRob3JpemF0aW9uLCB0eXBpY2FsbHkgYXNzaWduZWQgYnkgdGhlIGF1dGhvcml6aW5nIGJvZHkuXHJcbiAgICovXHJcbiAgaWRlbnRpZmllcj86IChmaGlyLklkZW50aWZpZXJ8bnVsbClbXXx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogVGhlIHByb2R1Y3QgdHlwZSwgdHJlYXRtZW50LCBmYWNpbGl0eSBvciBhY3Rpdml0eSB0aGF0IGlzIGJlaW5nIGF1dGhvcml6ZWQuXHJcbiAgICovXHJcbiAgc3ViamVjdD86IChmaGlyLlJlZmVyZW5jZXxudWxsKVtdfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBPdmVyYWxsIHR5cGUgb2YgdGhpcyBhdXRob3JpemF0aW9uLCBmb3IgZXhhbXBsZSBkcnVnIG1hcmtldGluZyBhcHByb3ZhbCwgb3JwaGFuIGRydWcgZGVzaWduYXRpb24uXHJcbiAgICovXHJcbiAgdHlwZT86IGZoaXIuQ29kZWFibGVDb25jZXB0fHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBHZW5lcmFsIHRleHR1YWwgc3VwcG9ydGluZyBpbmZvcm1hdGlvbi5cclxuICAgKi9cclxuICBkZXNjcmlwdGlvbj86IHN0cmluZ3x1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IFJlZ3VsYXRlZEF1dGhvcml6YXRpb24uZGVzY3JpcHRpb25cclxuICAgKi9cclxuICBfZGVzY3JpcHRpb24/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbiAgLyoqXHJcbiAgICogVGhlIHRlcnJpdG9yeSAoZS5nLiwgY291bnRyeSwganVyaXNkaWN0aW9uIGV0Yy4pIGluIHdoaWNoIHRoZSBhdXRob3JpemF0aW9uIGhhcyBiZWVuIGdyYW50ZWQuXHJcbiAgICovXHJcbiAgcmVnaW9uPzogKGZoaXIuQ29kZWFibGVDb25jZXB0fG51bGwpW118dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIFRoZSBzdGF0dXMgdGhhdCBpcyBhdXRob3Jpc2VkIGUuZy4gYXBwcm92ZWQuIEludGVybWVkaWF0ZSBzdGF0ZXMgYW5kIGFjdGlvbnMgY2FuIGJlIHRyYWNrZWQgd2l0aCBjYXNlcyBhbmQgYXBwbGljYXRpb25zLlxyXG4gICAqL1xyXG4gIHN0YXR1cz86IGZoaXIuQ29kZWFibGVDb25jZXB0fHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBUaGUgZGF0ZSBhdCB3aGljaCB0aGUgY3VycmVudCBzdGF0dXMgd2FzIGFzc2lnbmVkLlxyXG4gICAqL1xyXG4gIHN0YXR1c0RhdGU/OiBzdHJpbmd8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBSZWd1bGF0ZWRBdXRob3JpemF0aW9uLnN0YXR1c0RhdGVcclxuICAgKi9cclxuICBfc3RhdHVzRGF0ZT86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBUaGUgdGltZSBwZXJpb2QgaW4gd2hpY2ggdGhlIHJlZ3VsYXRvcnkgYXBwcm92YWwsIGNsZWFyYW5jZSBvciBsaWNlbmNpbmcgaXMgaW4gZWZmZWN0LiBBcyBhbiBleGFtcGxlLCBhIE1hcmtldGluZyBBdXRob3JpemF0aW9uIGluY2x1ZGVzIHRoZSBkYXRlIG9mIGF1dGhvcml6YXRpb24gYW5kL29yIGFuIGV4cGlyYXRpb24gZGF0ZS5cclxuICAgKi9cclxuICB2YWxpZGl0eVBlcmlvZD86IGZoaXIuUGVyaW9kfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBDb25kaXRpb24gZm9yIHdoaWNoIHRoZSB1c2Ugb2YgdGhlIHJlZ3VsYXRlZCBwcm9kdWN0IGFwcGxpZXMuXHJcbiAgICovXHJcbiAgaW5kaWNhdGlvbj86IGZoaXIuQ29kZWFibGVSZWZlcmVuY2V8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIFRoZSBpbnRlbmRlZCB1c2Ugb2YgdGhlIHByb2R1Y3QsIGUuZy4gcHJldmVudGlvbiwgdHJlYXRtZW50LCBkaWFnbm9zaXMuXHJcbiAgICovXHJcbiAgaW50ZW5kZWRVc2U/OiBmaGlyLkNvZGVhYmxlQ29uY2VwdHx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogVGhlIGxlZ2FsIG9yIHJlZ3VsYXRvcnkgZnJhbWV3b3JrIGFnYWluc3Qgd2hpY2ggdGhpcyBhdXRob3JpemF0aW9uIGlzIGdyYW50ZWQsIG9yIG90aGVyIHJlYXNvbnMgZm9yIGl0LlxyXG4gICAqL1xyXG4gIGJhc2lzPzogKGZoaXIuQ29kZWFibGVDb25jZXB0fG51bGwpW118dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIFRoZSBvcmdhbml6YXRpb24gdGhhdCBoYXMgYmVlbiBncmFudGVkIHRoaXMgYXV0aG9yaXphdGlvbiwgYnkgc29tZSBhdXRob3JpdGF0aXZlIGJvZHkgKHRoZSAncmVndWxhdG9yJykuXHJcbiAgICovXHJcbiAgaG9sZGVyPzogZmhpci5SZWZlcmVuY2V8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIFRoZSByZWd1bGF0b3J5IGF1dGhvcml0eSBvciBhdXRob3JpemluZyBib2R5IGdyYW50aW5nIHRoZSBhdXRob3JpemF0aW9uLiBGb3IgZXhhbXBsZSwgRXVyb3BlYW4gTWVkaWNpbmVzIEFnZW5jeSAoRU1BKSwgRm9vZCBhbmQgRHJ1ZyBBZG1pbmlzdHJhdGlvbiAoRkRBKSwgSGVhbHRoIENhbmFkYSAoSEMpLCBldGMuXHJcbiAgICovXHJcbiAgcmVndWxhdG9yPzogZmhpci5SZWZlcmVuY2V8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIFRoZSBjYXNlIG9yIHJlZ3VsYXRvcnkgcHJvY2VkdXJlIGZvciBncmFudGluZyBvciBhbWVuZGluZyBhIHJlZ3VsYXRlZCBhdXRob3JpemF0aW9uLiBBbiBhdXRob3JpemF0aW9uIGlzIGdyYW50ZWQgaW4gcmVzcG9uc2UgdG8gc3VibWlzc2lvbnMvYXBwbGljYXRpb25zIGJ5IHRob3NlIHNlZWtpbmcgYXV0aG9yaXphdGlvbi4gQSBjYXNlIGlzIHRoZSBhZG1pbmlzdHJhdGl2ZSBwcm9jZXNzIHRoYXQgZGVhbHMgd2l0aCB0aGUgYXBwbGljYXRpb24ocykgdGhhdCByZWxhdGUgdG8gdGhpcyBhbmQgYXNzZXNzZXMgdGhlbS4gTm90ZTogVGhpcyBhcmVhIGlzIHN1YmplY3QgdG8gb25nb2luZyByZXZpZXcgYW5kIHRoZSB3b3JrZ3JvdXAgaXMgc2Vla2luZyBpbXBsZW1lbnRlciBmZWVkYmFjayBvbiBpdHMgdXNlIChzZWUgbGluayBhdCBib3R0b20gb2YgcGFnZSkuXHJcbiAgICovXHJcbiAgY2FzZT86IGZoaXIuUmVndWxhdGVkQXV0aG9yaXphdGlvbkNhc2V8dW5kZWZpbmVkO1xyXG59XHJcbiJdfQ==