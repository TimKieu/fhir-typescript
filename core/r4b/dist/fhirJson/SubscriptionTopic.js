// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR Resource: SubscriptionTopic
export {};
//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"SubscriptionTopic.js","sourceRoot":"./src/","sources":["fhirJson/SubscriptionTopic.ts"],"names":[],"mappings":"AAAA,oBAAoB;AACpB,gDAAgD;AAChD,kCAAkC;AAClC,mCAAmC","sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4b.core version: 4.3.0\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR Resource: SubscriptionTopic\r\n\r\nimport * as fhir from '../fhirJson.js';\r\n\r\n\r\n/**\r\n * The FHIR query based rules that the server should use to determine when to trigger a notification for this subscription topic.\r\n */\r\nexport interface SubscriptionTopicResourceTriggerQueryCriteria extends fhir.BackboneElement { \r\n  /**\r\n   * The rules are search criteria (without the [base] part). Like Bundle.entry.request.url, it has no leading \"/\".\r\n   */\r\n  previous?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: SubscriptionTopic.resourceTrigger.queryCriteria.previous\r\n   */\r\n  _previous?:fhir.FhirElement;\r\n  /**\r\n   * For \"create\" interactions, should the \"previous\" criteria count as an automatic pass or an automatic fail.\r\n   */\r\n  resultForCreate?: 'test-fails'|'test-passes'|undefined;\r\n  /**\r\n   * Extended properties for primitive element: SubscriptionTopic.resourceTrigger.queryCriteria.resultForCreate\r\n   */\r\n  _resultForCreate?:fhir.FhirElement;\r\n  /**\r\n   * The rules are search criteria (without the [base] part). Like Bundle.entry.request.url, it has no leading \"/\".\r\n   */\r\n  current?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: SubscriptionTopic.resourceTrigger.queryCriteria.current\r\n   */\r\n  _current?:fhir.FhirElement;\r\n  /**\r\n   * For \"delete\" interactions, should the \"current\" criteria count as an automatic pass or an automatic fail.\r\n   */\r\n  resultForDelete?: 'test-fails'|'test-passes'|undefined;\r\n  /**\r\n   * Extended properties for primitive element: SubscriptionTopic.resourceTrigger.queryCriteria.resultForDelete\r\n   */\r\n  _resultForDelete?:fhir.FhirElement;\r\n  /**\r\n   * If set to true, both current and previous criteria must evaluate true to  trigger a notification for this topic.  Otherwise a notification for this topic will be triggered if either one evaluates to true.\r\n   */\r\n  requireBoth?: boolean|undefined;\r\n  /**\r\n   * Extended properties for primitive element: SubscriptionTopic.resourceTrigger.queryCriteria.requireBoth\r\n   */\r\n  _requireBoth?:fhir.FhirElement;\r\n}\r\n\r\n/**\r\n * A definition of a resource-based event that triggers a notification based on the SubscriptionTopic. The criteria may be just a human readable description and/or a full FHIR search string or FHIRPath expression. Multiple triggers are considered OR joined (e.g., a resource update matching ANY of the definitions will trigger a notification).\r\n */\r\nexport interface SubscriptionTopicResourceTrigger extends fhir.BackboneElement { \r\n  /**\r\n   * Implementation of particular subscription topics might not use a computable definition and instead base their design on the definition.\r\n   */\r\n  description?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: SubscriptionTopic.resourceTrigger.description\r\n   */\r\n  _description?:fhir.FhirElement;\r\n  /**\r\n   * URL of the Resource that is the type used in this resource trigger.  Relative URLs are relative to the StructureDefinition root of the implemented FHIR version (e.g., http://hl7.org/fhir/StructureDefinition). For example, \"Patient\" maps to http://hl7.org/fhir/StructureDefinition/Patient.  For more information, see &lt;a href=\"elementdefinition-definitions.html#ElementDefinition.type.code\"&gt;ElementDefinition.type.code&lt;/a&gt;.\r\n   */\r\n  resource: string|null;\r\n  /**\r\n   * Extended properties for primitive element: SubscriptionTopic.resourceTrigger.resource\r\n   */\r\n  _resource?:fhir.FhirElement;\r\n  /**\r\n   * The FHIR RESTful interaction which can be used to trigger a notification for the SubscriptionTopic. Multiple values are considered OR joined (e.g., CREATE or UPDATE).\r\n   */\r\n  supportedInteraction?: (('create'|'delete'|'update')|null)[]|undefined;\r\n  /**\r\n   * Extended properties for primitive element: SubscriptionTopic.resourceTrigger.supportedInteraction\r\n   */\r\n  _supportedInteraction?:(fhir.FhirElement|null)[];\r\n  /**\r\n   * The FHIR query based rules that the server should use to determine when to trigger a notification for this subscription topic.\r\n   */\r\n  queryCriteria?: fhir.SubscriptionTopicResourceTriggerQueryCriteria|undefined;\r\n  /**\r\n   * FHIRPath expression with %previous and %current vars.\r\n   */\r\n  fhirPathCriteria?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: SubscriptionTopic.resourceTrigger.fhirPathCriteria\r\n   */\r\n  _fhirPathCriteria?:fhir.FhirElement;\r\n}\r\n\r\n/**\r\n * Event definition which can be used to trigger the SubscriptionTopic.\r\n */\r\nexport interface SubscriptionTopicEventTrigger extends fhir.BackboneElement { \r\n  /**\r\n   * Implementation of particular subscription topics might not use a computable definition and instead base their design on the definition.\r\n   */\r\n  description?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: SubscriptionTopic.eventTrigger.description\r\n   */\r\n  _description?:fhir.FhirElement;\r\n  /**\r\n   * A well-defined event which can be used to trigger notifications from the SubscriptionTopic.\r\n   */\r\n  event: fhir.CodeableConcept|null;\r\n  /**\r\n   * URL of the Resource that is the focus type used in this event trigger.  Relative URLs are relative to the StructureDefinition root of the implemented FHIR version (e.g., http://hl7.org/fhir/StructureDefinition). For example, \"Patient\" maps to http://hl7.org/fhir/StructureDefinition/Patient.  For more information, see &lt;a href=\"elementdefinition-definitions.html#ElementDefinition.type.code\"&gt;ElementDefinition.type.code&lt;/a&gt;.\r\n   */\r\n  resource: string|null;\r\n  /**\r\n   * Extended properties for primitive element: SubscriptionTopic.eventTrigger.resource\r\n   */\r\n  _resource?:fhir.FhirElement;\r\n}\r\n\r\n/**\r\n * List of properties by which Subscriptions on the SubscriptionTopic can be filtered. May be defined Search Parameters (e.g., Encounter.patient) or parameters defined within this SubscriptionTopic context (e.g., hub.event).\r\n */\r\nexport interface SubscriptionTopicCanFilterBy extends fhir.BackboneElement { \r\n  /**\r\n   * Description of how this filtering parameter is intended to be used.\r\n   */\r\n  description?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: SubscriptionTopic.canFilterBy.description\r\n   */\r\n  _description?:fhir.FhirElement;\r\n  /**\r\n   * URL of the Resource that is the type used in this filter. Relative URLs are relative to the StructureDefinition root of the implemented FHIR version (e.g., http://hl7.org/fhir/StructureDefinition). For example, \"Patient\" maps to http://hl7.org/fhir/StructureDefinition/Patient. For more information, see &lt;a href=\"elementdefinition-definitions.html#ElementDefinition.type.code\"&gt;ElementDefinition.type.code&lt;/a&gt;.\r\n   */\r\n  resource?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: SubscriptionTopic.canFilterBy.resource\r\n   */\r\n  _resource?:fhir.FhirElement;\r\n  /**\r\n   * Chained parameters are allowed (like \"patient.gender\") - but can not use colons or modifiers.\r\n   */\r\n  filterParameter: string|null;\r\n  /**\r\n   * Extended properties for primitive element: SubscriptionTopic.canFilterBy.filterParameter\r\n   */\r\n  _filterParameter?:fhir.FhirElement;\r\n  /**\r\n   * Chained parameters are allowed (like \"patient.gender\") - but can not use colons or modifiers.\r\n   */\r\n  filterDefinition?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: SubscriptionTopic.canFilterBy.filterDefinition\r\n   */\r\n  _filterDefinition?:fhir.FhirElement;\r\n  /**\r\n   * Allowable operators to apply when determining matches (Search Modifiers).  If the filterParameter is a SearchParameter, this list of modifiers SHALL be a strict subset of the modifiers defined on that SearchParameter.\r\n   */\r\n  modifier?: (('='|'above'|'ap'|'below'|'eb'|'eq'|'ge'|'gt'|'in'|'le'|'lt'|'ne'|'not-in'|'of-type'|'sa')|null)[]|undefined;\r\n  /**\r\n   * Extended properties for primitive element: SubscriptionTopic.canFilterBy.modifier\r\n   */\r\n  _modifier?:(fhir.FhirElement|null)[];\r\n}\r\n\r\n/**\r\n * List of properties to describe the shape (e.g., resources) included in notifications from this Subscription Topic.\r\n */\r\nexport interface SubscriptionTopicNotificationShape extends fhir.BackboneElement { \r\n  /**\r\n   * URL of the Resource that is the type used in this shape. Relative URLs are relative to the StructureDefinition root of the implemented FHIR version (e.g., http://hl7.org/fhir/StructureDefinition). For example, \"Patient\" maps to http://hl7.org/fhir/StructureDefinition/Patient. For more information, see &lt;a href=\"elementdefinition-definitions.html#ElementDefinition.type.code\"&gt;ElementDefinition.type.code&lt;/a&gt;.\r\n   */\r\n  resource: string|null;\r\n  /**\r\n   * Extended properties for primitive element: SubscriptionTopic.notificationShape.resource\r\n   */\r\n  _resource?:fhir.FhirElement;\r\n  /**\r\n   * Search-style _include directives, rooted in the resource for this shape. Servers SHOULD include resources listed here, if they exist and the user is authorized to receive them.  Clients SHOULD be prepared to receive these additional resources, but SHALL function properly without them.\r\n   */\r\n  include?: (string|null)[]|undefined;\r\n  /**\r\n   * Extended properties for primitive element: SubscriptionTopic.notificationShape.include\r\n   */\r\n  _include?:(fhir.FhirElement|null)[];\r\n  /**\r\n   * Search-style _revinclude directives, rooted in the resource for this shape. Servers SHOULD include resources listed here, if they exist and the user is authorized to receive them.  Clients SHOULD be prepared to receive these additional resources, but SHALL function properly without them.\r\n   */\r\n  revInclude?: (string|null)[]|undefined;\r\n  /**\r\n   * Extended properties for primitive element: SubscriptionTopic.notificationShape.revInclude\r\n   */\r\n  _revInclude?:(fhir.FhirElement|null)[];\r\n}\r\n\r\n/**\r\n * Describes a stream of resource state changes or events and annotated with labels useful to filter projections from this topic.\r\n */\r\nexport interface SubscriptionTopic extends fhir.DomainResource { \r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  resourceType: \"SubscriptionTopic\"|null;\r\n  /**\r\n   * Can be a urn:uuid: or a urn:oid: but real http: addresses are preferred.  Multiple instances may share the same URL if they have a distinct version.\r\n   * The determination of when to create a new version of a resource (same url, new version) vs. defining a new artifact is up to the author.  Considerations for making this decision are found in [Technical and Business Versions](resource.html#versions). \r\n   * In some cases, the resource can no longer be found at the stated url, but the url itself cannot change. Implementations can use the [meta.source](resource.html#meta) element to indicate where the current master source of the resource can be found.\r\n   */\r\n  url: string|null;\r\n  /**\r\n   * Extended properties for primitive element: SubscriptionTopic.url\r\n   */\r\n  _url?:fhir.FhirElement;\r\n  /**\r\n   * Note: This is a business identifier, not a resource identifier (see [discussion](resource.html#identifiers)).  It is best practice for the identifier to only appear on a single resource instance, however business practices may occasionally dictate that multiple resource instances with the same identifier can exist - possibly even with different resource types.  For example, multiple Patient and a Person resource instance might share the same social insurance number.\r\n   */\r\n  identifier?: (fhir.Identifier|null)[]|undefined;\r\n  /**\r\n   * There may be multiple different instances of a subscription topic that have the same identifier but different versions.\r\n   */\r\n  version?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: SubscriptionTopic.version\r\n   */\r\n  _version?:fhir.FhirElement;\r\n  /**\r\n   * A short, descriptive, user-friendly title for the SubscriptionTopic, for example, \"admission\".\r\n   */\r\n  title?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: SubscriptionTopic.title\r\n   */\r\n  _title?:fhir.FhirElement;\r\n  /**\r\n   * The canonical URL pointing to another FHIR-defined SubscriptionTopic that is adhered to in whole or in part by this SubscriptionTopic.\r\n   */\r\n  derivedFrom?: (string|null)[]|undefined;\r\n  /**\r\n   * Extended properties for primitive element: SubscriptionTopic.derivedFrom\r\n   */\r\n  _derivedFrom?:(fhir.FhirElement|null)[];\r\n  /**\r\n   * A nominal state-transition diagram can be found in the [[definition.html#statemachine | Definition pattern]] documentation\r\n   * Unknown does not represent \"other\" - one of the defined statuses must apply.  Unknown is used when the authoring system is not sure what the current status is.\r\n   */\r\n  status: 'active'|'draft'|'retired'|'unknown'|null;\r\n  /**\r\n   * Extended properties for primitive element: SubscriptionTopic.status\r\n   */\r\n  _status?:fhir.FhirElement;\r\n  /**\r\n   * Allows filtering of SubscriptionTopic that are appropriate for use vs. not.\r\n   */\r\n  experimental?: boolean|undefined;\r\n  /**\r\n   * Extended properties for primitive element: SubscriptionTopic.experimental\r\n   */\r\n  _experimental?:fhir.FhirElement;\r\n  /**\r\n   * For draft definitions, indicates the date of initial creation.  For active definitions, represents the date of activation.  For withdrawn definitions, indicates the date of withdrawal.\r\n   */\r\n  date?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: SubscriptionTopic.date\r\n   */\r\n  _date?:fhir.FhirElement;\r\n  /**\r\n   * Helps establish the \"authority/credibility\" of the SubscriptionTopic.  May also allow for contact.\r\n   */\r\n  publisher?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: SubscriptionTopic.publisher\r\n   */\r\n  _publisher?:fhir.FhirElement;\r\n  /**\r\n   * May be a web site, an email address, a telephone number, etc.\r\n   */\r\n  contact?: (fhir.ContactDetail|null)[]|undefined;\r\n  /**\r\n   * This description can be used to capture details such as why the Topic was built, comments about misuse, instructions for clinical use and interpretation, literature references, examples from the paper world, etc. It is not a rendering of the module as conveyed in the text field of the resource itself. This item SHOULD be populated unless the information is available from context.\r\n   */\r\n  description?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: SubscriptionTopic.description\r\n   */\r\n  _description?:fhir.FhirElement;\r\n  /**\r\n   * When multiple usageContexts are specified, there is no expectation for whether all or any of the contexts apply.\r\n   */\r\n  useContext?: (fhir.UsageContext|null)[]|undefined;\r\n  /**\r\n   * A jurisdiction in which the Topic is intended to be used.\r\n   */\r\n  jurisdiction?: (fhir.CodeableConcept|null)[]|undefined;\r\n  /**\r\n   * This element does not describe the usage of the Topic.  Rather it is for traceability of ''why'' the resource is either needed or ''why'' it is defined as it is.  This may be used to point to source materials or specifications that drove the structure of this Topic.\r\n   */\r\n  purpose?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: SubscriptionTopic.purpose\r\n   */\r\n  _purpose?:fhir.FhirElement;\r\n  /**\r\n   * A copyright statement relating to the SubscriptionTopic and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the SubscriptionTopic.\r\n   */\r\n  copyright?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: SubscriptionTopic.copyright\r\n   */\r\n  _copyright?:fhir.FhirElement;\r\n  /**\r\n   * The date may be more recent than the approval date because of minor changes / editorial corrections.\r\n   */\r\n  approvalDate?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: SubscriptionTopic.approvalDate\r\n   */\r\n  _approvalDate?:fhir.FhirElement;\r\n  /**\r\n   * If specified, this is usually after the approval date.\r\n   */\r\n  lastReviewDate?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: SubscriptionTopic.lastReviewDate\r\n   */\r\n  _lastReviewDate?:fhir.FhirElement;\r\n  /**\r\n   * The effective period for a SubscriptionTopic  determines when the content is applicable for usage and is independent of publication and review dates. For example, a measure intended to be used for the year 2016 would be published in 2015.\r\n   */\r\n  effectivePeriod?: fhir.Period|undefined;\r\n  /**\r\n   * A definition of a resource-based event that triggers a notification based on the SubscriptionTopic. The criteria may be just a human readable description and/or a full FHIR search string or FHIRPath expression. Multiple triggers are considered OR joined (e.g., a resource update matching ANY of the definitions will trigger a notification).\r\n   */\r\n  resourceTrigger?: (fhir.SubscriptionTopicResourceTrigger|null)[]|undefined;\r\n  /**\r\n   * Event definition which can be used to trigger the SubscriptionTopic.\r\n   */\r\n  eventTrigger?: (fhir.SubscriptionTopicEventTrigger|null)[]|undefined;\r\n  /**\r\n   * List of properties by which Subscriptions on the SubscriptionTopic can be filtered. May be defined Search Parameters (e.g., Encounter.patient) or parameters defined within this SubscriptionTopic context (e.g., hub.event).\r\n   */\r\n  canFilterBy?: (fhir.SubscriptionTopicCanFilterBy|null)[]|undefined;\r\n  /**\r\n   * List of properties to describe the shape (e.g., resources) included in notifications from this Subscription Topic.\r\n   */\r\n  notificationShape?: (fhir.SubscriptionTopicNotificationShape|null)[]|undefined;\r\n}\r\n"]}