// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR Resource: Endpoint
export {};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRW5kcG9pbnQuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlySnNvbi9FbmRwb2ludC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsZ0RBQWdEO0FBQ2hELGtDQUFrQztBQUNsQywwQkFBMEIiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjRiLmNvcmUgdmVyc2lvbjogNC4zLjBcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFJlc291cmNlOiBFbmRwb2ludFxyXG5cclxuaW1wb3J0ICogYXMgZmhpciBmcm9tICcuLi9maGlySnNvbi5qcyc7XHJcblxyXG5cclxuLyoqXHJcbiAqIFRoZSB0ZWNobmljYWwgZGV0YWlscyBvZiBhbiBlbmRwb2ludCB0aGF0IGNhbiBiZSB1c2VkIGZvciBlbGVjdHJvbmljIHNlcnZpY2VzLCBzdWNoIGFzIGZvciB3ZWIgc2VydmljZXMgcHJvdmlkaW5nIFhEUy5iIG9yIGEgUkVTVCBlbmRwb2ludCBmb3IgYW5vdGhlciBGSElSIHNlcnZlci4gVGhpcyBtYXkgaW5jbHVkZSBhbnkgc2VjdXJpdHkgY29udGV4dCBpbmZvcm1hdGlvbi5cclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgRW5kcG9pbnQgZXh0ZW5kcyBmaGlyLkRvbWFpblJlc291cmNlIHsgXHJcbiAgLyoqXHJcbiAgICogUmVzb3VyY2UgVHlwZSBOYW1lXHJcbiAgICovXHJcbiAgcmVzb3VyY2VUeXBlOiBcIkVuZHBvaW50XCJ8bnVsbDtcclxuICAvKipcclxuICAgKiBJZGVudGlmaWVyIGZvciB0aGUgb3JnYW5pemF0aW9uIHRoYXQgaXMgdXNlZCB0byBpZGVudGlmeSB0aGUgZW5kcG9pbnQgYWNyb3NzIG11bHRpcGxlIGRpc3BhcmF0ZSBzeXN0ZW1zLlxyXG4gICAqL1xyXG4gIGlkZW50aWZpZXI/OiAoZmhpci5JZGVudGlmaWVyfG51bGwpW118dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIFRoaXMgZWxlbWVudCBpcyBsYWJlbGVkIGFzIGEgbW9kaWZpZXIgYmVjYXVzZSB0aGUgc3RhdHVzIGNvbnRhaW5zIGNvZGVzIHRoYXQgbWFyayB0aGUgZW5kcG9pbnQgYXMgbm90IGN1cnJlbnRseSB2YWxpZC5cclxuICAgKi9cclxuICBzdGF0dXM6ICdhY3RpdmUnfCdlbnRlcmVkLWluLWVycm9yJ3wnZXJyb3InfCdvZmYnfCdzdXNwZW5kZWQnfCd0ZXN0J3xudWxsO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBFbmRwb2ludC5zdGF0dXNcclxuICAgKi9cclxuICBfc3RhdHVzPzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIEZvciBhZGRpdGlvbmFsIGNvbm5lY3Rpdml0eSBkZXRhaWxzIGZvciB0aGUgcHJvdG9jb2wsIGV4dGVuc2lvbnMgd2lsbCBiZSB1c2VkIGF0IHRoaXMgcG9pbnQsIGFzIGluIHRoZSBYRFMgZXhhbXBsZS5cclxuICAgKi9cclxuICBjb25uZWN0aW9uVHlwZTogZmhpci5Db2Rpbmd8bnVsbDtcclxuICAvKipcclxuICAgKiBBIGZyaWVuZGx5IG5hbWUgdGhhdCB0aGlzIGVuZHBvaW50IGNhbiBiZSByZWZlcnJlZCB0byB3aXRoLlxyXG4gICAqL1xyXG4gIG5hbWU/OiBzdHJpbmd8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBFbmRwb2ludC5uYW1lXHJcbiAgICovXHJcbiAgX25hbWU/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbiAgLyoqXHJcbiAgICogVGhpcyBwcm9wZXJ0eSBpcyBub3QgdHlwaWNhbGx5IHVzZWQgd2hlbiBzZWFyY2hpbmcgZm9yIEVuZHBvaW50IHJlc291cmNlcyBmb3IgdXNhZ2UuIFRoZSB0eXBpY2FsIHVzYWdlIGlzIHZpYSB0aGUgcmVmZXJlbmNlIGZyb20gYW4gYXBwbGljYWJsZSBPcmdhbml6YXRpb24vTG9jYXRpb24vUHJhY3RpdGlvbmVyIHJlc291cmNlLCB3aGljaCBpcyB3aGVyZSB0aGUgY29udGV4dCBpcyBwcm92aWRlZC4gTXVsdGlwbGUgTG9jYXRpb25zIG1heSByZWZlcmVuY2UgYSBzaW5nbGUgZW5kcG9pbnQsIGFuZCBkb24ndCBoYXZlIHRvIGJlIHdpdGhpbiB0aGUgc2FtZSBvcmdhbml6YXRpb24gcmVzb3VyY2UsIGJ1dCBtb3N0IGxpa2VseSB3aXRoaW4gdGhlIHNhbWUgb3JnYW5pemF0aW9uYWwgaGllcmFyY2h5LlxyXG4gICAqL1xyXG4gIG1hbmFnaW5nT3JnYW5pemF0aW9uPzogZmhpci5SZWZlcmVuY2V8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIENvbnRhY3QgZGV0YWlscyBmb3IgYSBodW1hbiB0byBjb250YWN0IGFib3V0IHRoZSBzdWJzY3JpcHRpb24uIFRoZSBwcmltYXJ5IHVzZSBvZiB0aGlzIGZvciBzeXN0ZW0gYWRtaW5pc3RyYXRvciB0cm91Ymxlc2hvb3RpbmcuXHJcbiAgICovXHJcbiAgY29udGFjdD86IChmaGlyLkNvbnRhY3RQb2ludHxudWxsKVtdfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBUaGUgaW50ZXJ2YWwgZHVyaW5nIHdoaWNoIHRoZSBlbmRwb2ludCBpcyBleHBlY3RlZCB0byBiZSBvcGVyYXRpb25hbC5cclxuICAgKi9cclxuICBwZXJpb2Q/OiBmaGlyLlBlcmlvZHx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogVGhlIHBheWxvYWRGb3JtYXQgZGVzY3JpYmVzIHRoZSBzZXJpYWxpemF0aW9uIGZvcm1hdCBvZiB0aGUgZGF0YSwgd2hlcmUgdGhlIHBheWxvYWRUeXBlIGluZGljYXRlcyB0aGUgc3BlY2lmaWMgZG9jdW1lbnQvc2NoZW1hIHRoYXQgaXMgYmVpbmcgdHJhbnNmZXJyZWQ7IGUuZy4gRGlzY2hhcmdlU3VtbWFyeSBvciBDYXJlUGxhbi5cclxuICAgKi9cclxuICBwYXlsb2FkVHlwZTogKGZoaXIuQ29kZWFibGVDb25jZXB0fG51bGwpW118bnVsbDtcclxuICAvKipcclxuICAgKiBTZW5kaW5nIHRoZSBwYXlsb2FkIGhhcyBvYnZpb3VzIHNlY3VyaXR5IGNvbnNlcXVlbmNlcy4gVGhlIHNlcnZlciBpcyByZXNwb25zaWJsZSBmb3IgZW5zdXJpbmcgdGhhdCB0aGUgY29udGVudCBpcyBhcHByb3ByaWF0ZWx5IHNlY3VyZWQuXHJcbiAgICovXHJcbiAgcGF5bG9hZE1pbWVUeXBlPzogKHN0cmluZ3xudWxsKVtdfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogRW5kcG9pbnQucGF5bG9hZE1pbWVUeXBlXHJcbiAgICovXHJcbiAgX3BheWxvYWRNaW1lVHlwZT86KGZoaXIuRmhpckVsZW1lbnR8bnVsbClbXTtcclxuICAvKipcclxuICAgKiBGb3IgcmVzdC1ob29rLCBhbmQgd2Vic29ja2V0LCB0aGUgZW5kLXBvaW50IG11c3QgYmUgYW4gaHR0cDogb3IgaHR0cHM6IFVSTDsgZm9yIGVtYWlsLCBhIG1haWx0bzogdXJsLCBmb3Igc21zLCBhIHRlbDogdXJsLCBhbmQgZm9yIG1lc3NhZ2UgdGhlIGVuZHBvaW50IGNhbiBiZSBpbiBhbnkgZm9ybSBvZiB1cmwgdGhlIHNlcnZlciB1bmRlcnN0YW5kcyAodXN1YWxseSwgaHR0cDogb3IgbWxscDopLiBUaGUgVVJJIGlzIGFsbG93ZWQgdG8gYmUgcmVsYXRpdmU7IGluIHdoaWNoIGNhc2UsIGl0IGlzIHJlbGF0aXZlIHRvIHRoZSBzZXJ2ZXIgZW5kLXBvaW50IChzaW5jZSB0aGVyZSBtYXkgYmUgbW9yZSB0aGFuIG9uZSwgY2xpZW50cyBzaG91bGQgYXZvaWQgdXNpbmcgcmVsYXRpdmUgVVJJcylcclxuICAgKiBUaGlzIGFkZHJlc3Mgd2lsbCBiZSB0byB0aGUgc2VydmljZSBiYXNlLCB3aXRob3V0IGFueSBwYXJhbWV0ZXJzLCBvciBzdWItc2VydmljZXMgb3IgcmVzb3VyY2VzIHRhY2tlZCBvbi5cclxuICAgKiBFLmcuIGZvciBhIFdBRE8tUlMgZW5kcG9pbnQsIHRoZSB1cmwgc2hvdWxkIGJlIFwiaHR0cHM6Ly9wYWNzLmhvc3BpdGFsLm9yZy93YWRvLXJzXCJcclxuICAgKiBhbmQgbm90IFwiaHR0cHM6Ly9wYWNzLmhvc3BpdGFsLm9yZy93YWRvLXJzL3N0dWRpZXMvMS4yLjI1MC4xLjU5LjQwMjExLjEyMzQ1Njc4LjY3ODkxMC9zZXJpZXMvMS4yLjI1MC4xLjU5LjQwMjExLjc4OTAwMTI3Ni4xNDU1NjE3Mi42Nzc4OS9pbnN0YW5jZXMvLi4uXCIuXHJcbiAgICovXHJcbiAgYWRkcmVzczogc3RyaW5nfG51bGw7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IEVuZHBvaW50LmFkZHJlc3NcclxuICAgKi9cclxuICBfYWRkcmVzcz86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBFeGFjdGx5IHdoYXQgdGhlc2UgbWVhbiBkZXBlbmRzIG9uIHRoZSBjaGFubmVsIHR5cGUuIFRoZSBjYW4gY29udmV5IGFkZGl0aW9uYWwgaW5mb3JtYXRpb24gdG8gdGhlIHJlY2lwaWVudCBhbmQvb3IgbWVldCBzZWN1cml0eSByZXF1aXJlbWVudHMuXHJcbiAgICovXHJcbiAgaGVhZGVyPzogKHN0cmluZ3xudWxsKVtdfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogRW5kcG9pbnQuaGVhZGVyXHJcbiAgICovXHJcbiAgX2hlYWRlcj86KGZoaXIuRmhpckVsZW1lbnR8bnVsbClbXTtcclxufVxyXG4iXX0=