// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR Resource: SubscriptionStatus
export {};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3Vic2NyaXB0aW9uU3RhdHVzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpckpzb24vU3Vic2NyaXB0aW9uU3RhdHVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQixnREFBZ0Q7QUFDaEQsa0NBQWtDO0FBQ2xDLG9DQUFvQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNGIuY29yZSB2ZXJzaW9uOiA0LjMuMFxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgUmVzb3VyY2U6IFN1YnNjcmlwdGlvblN0YXR1c1xyXG5cclxuaW1wb3J0ICogYXMgZmhpciBmcm9tICcuLi9maGlySnNvbi5qcyc7XHJcblxyXG5cclxuLyoqXHJcbiAqIERldGFpbGVkIGluZm9ybWF0aW9uIGFib3V0IGV2ZW50cyByZWxldmFudCB0byB0aGlzIHN1YnNjcmlwdGlvbiBub3RpZmljYXRpb24uXHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIFN1YnNjcmlwdGlvblN0YXR1c05vdGlmaWNhdGlvbkV2ZW50IGV4dGVuZHMgZmhpci5CYWNrYm9uZUVsZW1lbnQgeyBcclxuICAvKipcclxuICAgKiBUaGUgc2VxdWVudGlhbCBudW1iZXIgb2YgdGhpcyBldmVudCBpbiB0aGlzIHN1YnNjcmlwdGlvbiBjb250ZXh0LiBOb3RlIHRoYXQgdGhpcyB2YWx1ZSBpcyBhIDY0LWJpdCBpbnRlZ2VyIHZhbHVlLCBlbmNvZGVkIGFzIGEgc3RyaW5nLlxyXG4gICAqL1xyXG4gIGV2ZW50TnVtYmVyOiBzdHJpbmd8bnVsbDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogU3Vic2NyaXB0aW9uU3RhdHVzLm5vdGlmaWNhdGlvbkV2ZW50LmV2ZW50TnVtYmVyXHJcbiAgICovXHJcbiAgX2V2ZW50TnVtYmVyPzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIFRoZSBhY3R1YWwgdGltZSB0aGlzIGV2ZW50IG9jY3VyZWQgb24gdGhlIHNlcnZlci5cclxuICAgKi9cclxuICB0aW1lc3RhbXA/OiBzdHJpbmd8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBTdWJzY3JpcHRpb25TdGF0dXMubm90aWZpY2F0aW9uRXZlbnQudGltZXN0YW1wXHJcbiAgICovXHJcbiAgX3RpbWVzdGFtcD86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBUaGUgZm9jdXMgb2YgdGhpcyBldmVudC4gV2hpbGUgdGhpcyB3aWxsIHVzdWFsbHkgYmUgYSByZWZlcmVuY2UgdG8gdGhlIGZvY3VzIHJlc291cmNlIG9mIHRoZSBldmVudCwgaXQgTUFZIGNvbnRhaW4gYSByZWZlcmVuY2UgdG8gYSBub24tRkhJUiBvYmplY3QuXHJcbiAgICovXHJcbiAgZm9jdXM/OiBmaGlyLlJlZmVyZW5jZXx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogQWRkaXRpb25hbCBjb250ZXh0IGluZm9ybWF0aW9uIGZvciB0aGlzIGV2ZW50LiBHZW5lcmFsbHksIHRoaXMgd2lsbCBjb250YWluIHJlZmVyZW5jZXMgdG8gYWRkaXRpb25hbCByZXNvdXJjZXMgaW5jbHVkZWQgd2l0aCB0aGUgZXZlbnQgKGUuZy4sIHRoZSBQYXRpZW50IHJlbGV2YW50IHRvIGFuIEVuY291bnRlciksIGhvd2V2ZXIgaXQgTUFZIHJlZmVyIHRvIG5vbi1GSElSIG9iamVjdHMuXHJcbiAgICovXHJcbiAgYWRkaXRpb25hbENvbnRleHQ/OiAoZmhpci5SZWZlcmVuY2V8bnVsbClbXXx1bmRlZmluZWQ7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBUaGUgU3Vic2NyaXB0aW9uU3RhdHVzIHJlc291cmNlIGRlc2NyaWJlcyB0aGUgc3RhdGUgb2YgYSBTdWJzY3JpcHRpb24gZHVyaW5nIG5vdGlmaWNhdGlvbnMuXHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIFN1YnNjcmlwdGlvblN0YXR1cyBleHRlbmRzIGZoaXIuRG9tYWluUmVzb3VyY2UgeyBcclxuICAvKipcclxuICAgKiBSZXNvdXJjZSBUeXBlIE5hbWVcclxuICAgKi9cclxuICByZXNvdXJjZVR5cGU6IFwiU3Vic2NyaXB0aW9uU3RhdHVzXCJ8bnVsbDtcclxuICAvKipcclxuICAgKiBUaGUgc3RhdHVzIG9mIHRoZSBzdWJzY3JpcHRpb24sIHdoaWNoIG1hcmtzIHRoZSBzZXJ2ZXIgc3RhdGUgZm9yIG1hbmFnaW5nIHRoZSBzdWJzY3JpcHRpb24uXHJcbiAgICovXHJcbiAgc3RhdHVzPzogJ2FjdGl2ZSd8J2Vycm9yJ3wnb2ZmJ3wncmVxdWVzdGVkJ3x1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IFN1YnNjcmlwdGlvblN0YXR1cy5zdGF0dXNcclxuICAgKi9cclxuICBfc3RhdHVzPzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIFRoZSB0eXBlIG9mIGV2ZW50IGJlaW5nIGNvbnZleWVkIHdpdGggdGhpcyBub3RpZmljYWl0b24uXHJcbiAgICovXHJcbiAgdHlwZTogJ2V2ZW50LW5vdGlmaWNhdGlvbid8J2hhbmRzaGFrZSd8J2hlYXJ0YmVhdCd8J3F1ZXJ5LWV2ZW50J3wncXVlcnktc3RhdHVzJ3xudWxsO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBTdWJzY3JpcHRpb25TdGF0dXMudHlwZVxyXG4gICAqL1xyXG4gIF90eXBlPzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIFRoZSB0b3RhbCBudW1iZXIgb2YgYWN0dWFsIGV2ZW50cyB3aGljaCBoYXZlIGJlZW4gZ2VuZXJhdGVkIHNpbmNlIHRoZSBTdWJzY3JpcHRpb24gd2FzIGNyZWF0ZWQgKGluY2x1c2l2ZSBvZiB0aGlzIG5vdGlmaWNhdGlvbikgLSByZWdhcmRsZXNzIG9mIGhvdyBtYW55IGhhdmUgYmVlbiBzdWNjZXNzZnVsbHkgY29tbXVuaWNhdGVkLiAgVGhpcyBudW1iZXIgaXMgTk9UIGluY3JlbWVudGVkIGZvciBoYW5kc2hha2UgYW5kIGhlYXJ0YmVhdCBub3RpZmljYXRpb25zLlxyXG4gICAqL1xyXG4gIGV2ZW50c1NpbmNlU3Vic2NyaXB0aW9uU3RhcnQ/OiBzdHJpbmd8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBTdWJzY3JpcHRpb25TdGF0dXMuZXZlbnRzU2luY2VTdWJzY3JpcHRpb25TdGFydFxyXG4gICAqL1xyXG4gIF9ldmVudHNTaW5jZVN1YnNjcmlwdGlvblN0YXJ0PzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIERldGFpbGVkIGluZm9ybWF0aW9uIGFib3V0IGV2ZW50cyByZWxldmFudCB0byB0aGlzIHN1YnNjcmlwdGlvbiBub3RpZmljYXRpb24uXHJcbiAgICovXHJcbiAgbm90aWZpY2F0aW9uRXZlbnQ/OiAoZmhpci5TdWJzY3JpcHRpb25TdGF0dXNOb3RpZmljYXRpb25FdmVudHxudWxsKVtdfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBUaGUgcmVmZXJlbmNlIHRvIHRoZSBTdWJzY3JpcHRpb24gd2hpY2ggZ2VuZXJhdGVkIHRoaXMgbm90aWZpY2F0aW9uLlxyXG4gICAqL1xyXG4gIHN1YnNjcmlwdGlvbjogZmhpci5SZWZlcmVuY2V8bnVsbDtcclxuICAvKipcclxuICAgKiBUaGlzIHZhbHVlIFNIT1VMRCBOT1QgYmUgcHJlc2VudCB3aGVuIHVzaW5nIGBlbXB0eWAgcGF5bG9hZHMsIE1BWSBiZSBwcmVzZW50IHdoZW4gdXNpbmcgYGlkLW9ubHlgIHBheWxvYWRzLCBhbmQgU0hPVUxEIGJlIHByZXNlbnQgd2hlbiB1c2luZyBgZnVsbC1yZXNvdXJjZWAgcGF5bG9hZHMuXHJcbiAgICovXHJcbiAgdG9waWM/OiBzdHJpbmd8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBTdWJzY3JpcHRpb25TdGF0dXMudG9waWNcclxuICAgKi9cclxuICBfdG9waWM/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbiAgLyoqXHJcbiAgICogUmVjb21tZW5kZWQgcHJhY3RpY2U6IGNsZWFyIGVycm9ycyB3aGVuIHN0YXR1cyBpcyB1cGRhdGVkLlxyXG4gICAqL1xyXG4gIGVycm9yPzogKGZoaXIuQ29kZWFibGVDb25jZXB0fG51bGwpW118dW5kZWZpbmVkO1xyXG59XHJcbiJdfQ==