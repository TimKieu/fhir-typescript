// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ComplexType: ParameterDefinition
export {};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUGFyYW1ldGVyRGVmaW5pdGlvbi5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJKc29uL1BhcmFtZXRlckRlZmluaXRpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLGdEQUFnRDtBQUNoRCxrQ0FBa0M7QUFDbEMsd0NBQXdDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0Yi5jb3JlIHZlcnNpb246IDQuMy4wXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBDb21wbGV4VHlwZTogUGFyYW1ldGVyRGVmaW5pdGlvblxyXG5cclxuaW1wb3J0ICogYXMgZmhpciBmcm9tICcuLi9maGlySnNvbi5qcyc7XHJcblxyXG5cclxuLyoqXHJcbiAqIFRoZSBwYXJhbWV0ZXJzIHRvIHRoZSBtb2R1bGUuIFRoaXMgY29sbGVjdGlvbiBzcGVjaWZpZXMgYm90aCB0aGUgaW5wdXQgYW5kIG91dHB1dCBwYXJhbWV0ZXJzLiBJbnB1dCBwYXJhbWV0ZXJzIGFyZSBwcm92aWRlZCBieSB0aGUgY2FsbGVyIGFzIHBhcnQgb2YgdGhlICRldmFsdWF0ZSBvcGVyYXRpb24uIE91dHB1dCBwYXJhbWV0ZXJzIGFyZSBpbmNsdWRlZCBpbiB0aGUgR3VpZGFuY2VSZXNwb25zZS5cclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgUGFyYW1ldGVyRGVmaW5pdGlvbiBleHRlbmRzIGZoaXIuRmhpckVsZW1lbnQgeyBcclxuICAvKipcclxuICAgKiBUaGUgbmFtZSBvZiB0aGUgcGFyYW1ldGVyIHVzZWQgdG8gYWxsb3cgYWNjZXNzIHRvIHRoZSB2YWx1ZSBvZiB0aGUgcGFyYW1ldGVyIGluIGV2YWx1YXRpb24gY29udGV4dHMuXHJcbiAgICovXHJcbiAgbmFtZT86IHN0cmluZ3x1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IFBhcmFtZXRlckRlZmluaXRpb24ubmFtZVxyXG4gICAqL1xyXG4gIF9uYW1lPzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIFdoZXRoZXIgdGhlIHBhcmFtZXRlciBpcyBpbnB1dCBvciBvdXRwdXQgZm9yIHRoZSBtb2R1bGUuXHJcbiAgICovXHJcbiAgdXNlOiAnaW4nfCdvdXQnfG51bGw7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IFBhcmFtZXRlckRlZmluaXRpb24udXNlXHJcbiAgICovXHJcbiAgX3VzZT86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBUaGUgbWluaW11bSBudW1iZXIgb2YgdGltZXMgdGhpcyBwYXJhbWV0ZXIgU0hBTEwgYXBwZWFyIGluIHRoZSByZXF1ZXN0IG9yIHJlc3BvbnNlLlxyXG4gICAqL1xyXG4gIG1pbj86IG51bWJlcnx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IFBhcmFtZXRlckRlZmluaXRpb24ubWluXHJcbiAgICovXHJcbiAgX21pbj86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBUaGUgbWF4aW11bSBudW1iZXIgb2YgdGltZXMgdGhpcyBlbGVtZW50IGlzIHBlcm1pdHRlZCB0byBhcHBlYXIgaW4gdGhlIHJlcXVlc3Qgb3IgcmVzcG9uc2UuXHJcbiAgICovXHJcbiAgbWF4Pzogc3RyaW5nfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogUGFyYW1ldGVyRGVmaW5pdGlvbi5tYXhcclxuICAgKi9cclxuICBfbWF4PzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIEEgYnJpZWYgZGlzY3Vzc2lvbiBvZiB3aGF0IHRoZSBwYXJhbWV0ZXIgaXMgZm9yIGFuZCBob3cgaXQgaXMgdXNlZCBieSB0aGUgbW9kdWxlLlxyXG4gICAqL1xyXG4gIGRvY3VtZW50YXRpb24/OiBzdHJpbmd8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBQYXJhbWV0ZXJEZWZpbml0aW9uLmRvY3VtZW50YXRpb25cclxuICAgKi9cclxuICBfZG9jdW1lbnRhdGlvbj86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBUaGUgdHlwZSBvZiB0aGUgcGFyYW1ldGVyLlxyXG4gICAqL1xyXG4gIHR5cGU6ICdBY2NvdW50J3wnQWN0aXZpdHlEZWZpbml0aW9uJ3wnQWRkcmVzcyd8J0FkbWluaXN0cmFibGVQcm9kdWN0RGVmaW5pdGlvbid8J0FkdmVyc2VFdmVudCd8J0FnZSd8J0FsbGVyZ3lJbnRvbGVyYW5jZSd8J0Fubm90YXRpb24nfCdBbnknfCdBcHBvaW50bWVudCd8J0FwcG9pbnRtZW50UmVzcG9uc2UnfCdBdHRhY2htZW50J3wnQXVkaXRFdmVudCd8J0JhY2tib25lRWxlbWVudCd8J2Jhc2U2NEJpbmFyeSd8J0Jhc2ljJ3wnQmluYXJ5J3wnQmlvbG9naWNhbGx5RGVyaXZlZFByb2R1Y3QnfCdCb2R5U3RydWN0dXJlJ3wnYm9vbGVhbid8J0J1bmRsZSd8J2Nhbm9uaWNhbCd8J0NhcGFiaWxpdHlTdGF0ZW1lbnQnfCdDYXJlUGxhbid8J0NhcmVUZWFtJ3wnQ2F0YWxvZ0VudHJ5J3wnQ2hhcmdlSXRlbSd8J0NoYXJnZUl0ZW1EZWZpbml0aW9uJ3wnQ2l0YXRpb24nfCdDbGFpbSd8J0NsYWltUmVzcG9uc2UnfCdDbGluaWNhbEltcHJlc3Npb24nfCdDbGluaWNhbFVzZURlZmluaXRpb24nfCdjb2RlJ3wnQ29kZWFibGVDb25jZXB0J3wnQ29kZWFibGVSZWZlcmVuY2UnfCdDb2RlU3lzdGVtJ3wnQ29kaW5nJ3wnQ29tbXVuaWNhdGlvbid8J0NvbW11bmljYXRpb25SZXF1ZXN0J3wnQ29tcGFydG1lbnREZWZpbml0aW9uJ3wnQ29tcG9zaXRpb24nfCdDb25jZXB0TWFwJ3wnQ29uZGl0aW9uJ3wnQ29uc2VudCd8J0NvbnRhY3REZXRhaWwnfCdDb250YWN0UG9pbnQnfCdDb250cmFjdCd8J0NvbnRyaWJ1dG9yJ3wnQ291bnQnfCdDb3ZlcmFnZSd8J0NvdmVyYWdlRWxpZ2liaWxpdHlSZXF1ZXN0J3wnQ292ZXJhZ2VFbGlnaWJpbGl0eVJlc3BvbnNlJ3wnRGF0YVJlcXVpcmVtZW50J3wnZGF0ZSd8J2RhdGVUaW1lJ3wnZGVjaW1hbCd8J0RldGVjdGVkSXNzdWUnfCdEZXZpY2UnfCdEZXZpY2VEZWZpbml0aW9uJ3wnRGV2aWNlTWV0cmljJ3wnRGV2aWNlUmVxdWVzdCd8J0RldmljZVVzZVN0YXRlbWVudCd8J0RpYWdub3N0aWNSZXBvcnQnfCdEaXN0YW5jZSd8J0RvY3VtZW50TWFuaWZlc3QnfCdEb2N1bWVudFJlZmVyZW5jZSd8J0RvbWFpblJlc291cmNlJ3wnRG9zYWdlJ3wnRHVyYXRpb24nfCdFbGVtZW50J3wnRWxlbWVudERlZmluaXRpb24nfCdFbmNvdW50ZXInfCdFbmRwb2ludCd8J0Vucm9sbG1lbnRSZXF1ZXN0J3wnRW5yb2xsbWVudFJlc3BvbnNlJ3wnRXBpc29kZU9mQ2FyZSd8J0V2ZW50RGVmaW5pdGlvbid8J0V2aWRlbmNlJ3wnRXZpZGVuY2VSZXBvcnQnfCdFdmlkZW5jZVZhcmlhYmxlJ3wnRXhhbXBsZVNjZW5hcmlvJ3wnRXhwbGFuYXRpb25PZkJlbmVmaXQnfCdFeHByZXNzaW9uJ3wnRXh0ZW5zaW9uJ3wnRmFtaWx5TWVtYmVySGlzdG9yeSd8J0ZsYWcnfCdHb2FsJ3wnR3JhcGhEZWZpbml0aW9uJ3wnR3JvdXAnfCdHdWlkYW5jZVJlc3BvbnNlJ3wnSGVhbHRoY2FyZVNlcnZpY2UnfCdIdW1hbk5hbWUnfCdpZCd8J0lkZW50aWZpZXInfCdJbWFnaW5nU3R1ZHknfCdJbW11bml6YXRpb24nfCdJbW11bml6YXRpb25FdmFsdWF0aW9uJ3wnSW1tdW5pemF0aW9uUmVjb21tZW5kYXRpb24nfCdJbXBsZW1lbnRhdGlvbkd1aWRlJ3wnSW5ncmVkaWVudCd8J2luc3RhbnQnfCdJbnN1cmFuY2VQbGFuJ3wnaW50ZWdlcid8J0ludm9pY2UnfCdMaWJyYXJ5J3wnTGlua2FnZSd8J0xpc3QnfCdMb2NhdGlvbid8J01hbnVmYWN0dXJlZEl0ZW1EZWZpbml0aW9uJ3wnbWFya2Rvd24nfCdNYXJrZXRpbmdTdGF0dXMnfCdNZWFzdXJlJ3wnTWVhc3VyZVJlcG9ydCd8J01lZGlhJ3wnTWVkaWNhdGlvbid8J01lZGljYXRpb25BZG1pbmlzdHJhdGlvbid8J01lZGljYXRpb25EaXNwZW5zZSd8J01lZGljYXRpb25Lbm93bGVkZ2UnfCdNZWRpY2F0aW9uUmVxdWVzdCd8J01lZGljYXRpb25TdGF0ZW1lbnQnfCdNZWRpY2luYWxQcm9kdWN0RGVmaW5pdGlvbid8J01lc3NhZ2VEZWZpbml0aW9uJ3wnTWVzc2FnZUhlYWRlcid8J01ldGEnfCdNb2xlY3VsYXJTZXF1ZW5jZSd8J01vbmV5J3wnTW9uZXlRdWFudGl0eSd8J05hbWluZ1N5c3RlbSd8J05hcnJhdGl2ZSd8J051dHJpdGlvbk9yZGVyJ3wnTnV0cml0aW9uUHJvZHVjdCd8J09ic2VydmF0aW9uJ3wnT2JzZXJ2YXRpb25EZWZpbml0aW9uJ3wnb2lkJ3wnT3BlcmF0aW9uRGVmaW5pdGlvbid8J09wZXJhdGlvbk91dGNvbWUnfCdPcmdhbml6YXRpb24nfCdPcmdhbml6YXRpb25BZmZpbGlhdGlvbid8J1BhY2thZ2VkUHJvZHVjdERlZmluaXRpb24nfCdQYXJhbWV0ZXJEZWZpbml0aW9uJ3wnUGFyYW1ldGVycyd8J1BhdGllbnQnfCdQYXltZW50Tm90aWNlJ3wnUGF5bWVudFJlY29uY2lsaWF0aW9uJ3wnUGVyaW9kJ3wnUGVyc29uJ3wnUGxhbkRlZmluaXRpb24nfCdQb3B1bGF0aW9uJ3wncG9zaXRpdmVJbnQnfCdQcmFjdGl0aW9uZXInfCdQcmFjdGl0aW9uZXJSb2xlJ3wnUHJvY2VkdXJlJ3wnUHJvZENoYXJhY3RlcmlzdGljJ3wnUHJvZHVjdFNoZWxmTGlmZSd8J1Byb3ZlbmFuY2UnfCdRdWFudGl0eSd8J1F1ZXN0aW9ubmFpcmUnfCdRdWVzdGlvbm5haXJlUmVzcG9uc2UnfCdSYW5nZSd8J1JhdGlvJ3wnUmF0aW9SYW5nZSd8J1JlZmVyZW5jZSd8J1JlZ3VsYXRlZEF1dGhvcml6YXRpb24nfCdSZWxhdGVkQXJ0aWZhY3QnfCdSZWxhdGVkUGVyc29uJ3wnUmVxdWVzdEdyb3VwJ3wnUmVzZWFyY2hEZWZpbml0aW9uJ3wnUmVzZWFyY2hFbGVtZW50RGVmaW5pdGlvbid8J1Jlc2VhcmNoU3R1ZHknfCdSZXNlYXJjaFN1YmplY3QnfCdSZXNvdXJjZSd8J1Jpc2tBc3Nlc3NtZW50J3wnU2FtcGxlZERhdGEnfCdTY2hlZHVsZSd8J1NlYXJjaFBhcmFtZXRlcid8J1NlcnZpY2VSZXF1ZXN0J3wnU2lnbmF0dXJlJ3wnU2ltcGxlUXVhbnRpdHknfCdTbG90J3wnU3BlY2ltZW4nfCdTcGVjaW1lbkRlZmluaXRpb24nfCdzdHJpbmcnfCdTdHJ1Y3R1cmVEZWZpbml0aW9uJ3wnU3RydWN0dXJlTWFwJ3wnU3Vic2NyaXB0aW9uJ3wnU3Vic2NyaXB0aW9uU3RhdHVzJ3wnU3Vic2NyaXB0aW9uVG9waWMnfCdTdWJzdGFuY2UnfCdTdWJzdGFuY2VEZWZpbml0aW9uJ3wnU3VwcGx5RGVsaXZlcnknfCdTdXBwbHlSZXF1ZXN0J3wnVGFzayd8J1Rlcm1pbm9sb2d5Q2FwYWJpbGl0aWVzJ3wnVGVzdFJlcG9ydCd8J1Rlc3RTY3JpcHQnfCd0aW1lJ3wnVGltaW5nJ3wnVHJpZ2dlckRlZmluaXRpb24nfCdUeXBlJ3wndW5zaWduZWRJbnQnfCd1cmknfCd1cmwnfCdVc2FnZUNvbnRleHQnfCd1dWlkJ3wnVmFsdWVTZXQnfCdWZXJpZmljYXRpb25SZXN1bHQnfCdWaXNpb25QcmVzY3JpcHRpb24nfCd4aHRtbCd8bnVsbDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogUGFyYW1ldGVyRGVmaW5pdGlvbi50eXBlXHJcbiAgICovXHJcbiAgX3R5cGU/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbiAgLyoqXHJcbiAgICogSWYgc3BlY2lmaWVkLCB0aGlzIGluZGljYXRlcyBhIHByb2ZpbGUgdGhhdCB0aGUgaW5wdXQgZGF0YSBtdXN0IGNvbmZvcm0gdG8sIG9yIHRoYXQgdGhlIG91dHB1dCBkYXRhIHdpbGwgY29uZm9ybSB0by5cclxuICAgKi9cclxuICBwcm9maWxlPzogc3RyaW5nfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogUGFyYW1ldGVyRGVmaW5pdGlvbi5wcm9maWxlXHJcbiAgICovXHJcbiAgX3Byb2ZpbGU/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbn1cclxuIl19