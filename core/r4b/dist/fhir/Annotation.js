// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ComplexType: Annotation
import * as fhir from '../fhir.js';
/**
 * A  text note which also  contains information about who made the statement and when.
 */
export class Annotation extends fhir.FhirElement {
    /**
     * Default constructor for Annotation - initializes any required elements to null if a value is not provided.
     */
    constructor(source = {}, options = {}) {
        super(source, options);
        if (source['author']) {
            this.author = source.author;
        }
        else if (source['authorReference']) {
            this.author = new fhir.Reference(source.authorReference, options);
        }
        else if (source['authorString'] !== undefined) {
            this.author = new fhir.FhirString({ value: source.authorString }, options);
        }
        if (source['time'] !== undefined) {
            this.time = new fhir.FhirDateTime({ value: source.time }, options);
        }
        if (source['_time']) {
            if (this.time) {
                this.time.addExtendedProperties(source._time);
            }
            else {
                this.time = new fhir.FhirDateTime(source._time, options);
            }
        }
        if (source['text'] !== undefined) {
            this.text = new fhir.FhirMarkdown({ value: source.text }, options);
        }
        else {
            this.text = null;
        }
        if (source['_text']) {
            if (this.text) {
                this.text.addExtendedProperties(source._text);
            }
            else {
                this.text = new fhir.FhirMarkdown(source._text, options);
            }
        }
    }
    /**
     * Function to perform basic model validation (e.g., check if required elements are present).
     */
    doModelValidation(exp = '') {
        let iss = super.doModelValidation(exp);
        if (exp === '') {
            exp = 'Annotation';
        }
        iss.push(...this.vOS('author', exp));
        iss.push(...this.vOS('time', exp));
        iss.push(...this.vRS('text', exp));
        return iss;
    }
}
/**
 * Mapping of this datatype to a FHIR equivalent
 */
Annotation._fts_dataType = 'Annotation';
/**
 * Internal flag to properly serialize choice-type element Annotation.author[x]
 */
Annotation._fts_authorIsChoice = true;
//# sourceMappingURL=data:application/json;base64,