// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/cited-artifact-classification-type|4.3.0
/**
 * Cited Artifact Classification Type
 */
export const CitedArtifactClassificationTypeCodings = {
    /**
     * chemical: Chemical
     */
    Chemical: {
        display: "Chemical",
        code: "chemical",
        system: "http://terminology.hl7.org/CodeSystem/cited-artifact-classification-type",
    },
    /**
     * citation-subset: Citation subset
     */
    CitationSubset: {
        display: "Citation subset",
        code: "citation-subset",
        system: "http://terminology.hl7.org/CodeSystem/cited-artifact-classification-type",
    },
    /**
     * coverage: The spatial or temporal topic of the resource, spatial applicability of the resource, or jurisdiction under which the resource is relevant
     */
    Coverage: {
        display: "Coverage",
        code: "coverage",
        system: "http://terminology.hl7.org/CodeSystem/cited-artifact-classification-type",
    },
    /**
     * keyword: Keyword
     */
    Keyword: {
        display: "Keyword",
        code: "keyword",
        system: "http://terminology.hl7.org/CodeSystem/cited-artifact-classification-type",
    },
    /**
     * knowledge-artifact-type: Knowledge Artifact Type
     */
    KnowledgeArtifactType: {
        display: "Knowledge Artifact Type",
        code: "knowledge-artifact-type",
        system: "http://terminology.hl7.org/CodeSystem/cited-artifact-classification-type",
    },
    /**
     * mesh-heading: MeSH heading
     */
    MeSHHeading: {
        display: "MeSH heading",
        code: "mesh-heading",
        system: "http://terminology.hl7.org/CodeSystem/cited-artifact-classification-type",
    },
    /**
     * publication-type: Publication type
     */
    PublicationType: {
        display: "Publication type",
        code: "publication-type",
        system: "http://terminology.hl7.org/CodeSystem/cited-artifact-classification-type",
    },
    /**
     * publishing-model: Used for PubModel attribute in Medline
     */
    PublishingModel: {
        display: "Publishing Model",
        code: "publishing-model",
        system: "http://terminology.hl7.org/CodeSystem/cited-artifact-classification-type",
    },
    /**
     * supplemental-mesh-disease: Supplemental MeSH for Disease
     */
    SupplementalMeSHForDisease: {
        display: "Supplemental MeSH for Disease",
        code: "supplemental-mesh-disease",
        system: "http://terminology.hl7.org/CodeSystem/cited-artifact-classification-type",
    },
    /**
     * supplemental-mesh-organism: Supplemental MeSH for Organism
     */
    SupplementalMeSHForOrganism: {
        display: "Supplemental MeSH for Organism",
        code: "supplemental-mesh-organism",
        system: "http://terminology.hl7.org/CodeSystem/cited-artifact-classification-type",
    },
    /**
     * supplemental-mesh-protocol: Supplemental MeSH for Protocol
     */
    SupplementalMeSHForProtocol: {
        display: "Supplemental MeSH for Protocol",
        code: "supplemental-mesh-protocol",
        system: "http://terminology.hl7.org/CodeSystem/cited-artifact-classification-type",
    },
};
//# sourceMappingURL=data:application/json;base64,