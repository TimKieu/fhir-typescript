// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/contributor-summary-type|4.3.0
/**
 * Used to code author list statement, contributorship statement, and such.
 */
export const ContributorSummaryTypeCodes = {
    /**
     * acknowledgement-list: Display of the list of acknowledged parties as a complete string.
     */
    AcknowledgmentList: "acknowledgement-list",
    /**
     * acknowledgment-statement: Statement of acknowledgment of contributions beyond those compiled for formal contributorship statements.
     */
    AcknowledgmentStatement: "acknowledgment-statement",
    /**
     * author-string: Display of the author list as a complete string.
     */
    AuthorString: "author-string",
    /**
     * competing-interests-statement: Statement of completing interests related to the creation of the cited artifact. Also called conflicts of interest or declaration of interests.
     */
    CompetingInterestsStatement: "competing-interests-statement",
    /**
     * contributorship-list: Display of the list of contributors as a complete string.
     */
    ContributorshipList: "contributorship-list",
    /**
     * contributorship-statement: Compiled summary of contributions.
     */
    ContributorshipStatement: "contributorship-statement",
    /**
     * funding-statement: Statement of financial support for the creation of the cited artifact.
     */
    FundingStatement: "funding-statement",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29udHJpYnV0b3JTdW1tYXJ5VHlwZUNvZGVzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9Db250cmlidXRvclN1bW1hcnlUeXBlQ29kZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLGdEQUFnRDtBQUNoRCxrQ0FBa0M7QUFDbEMsNkVBQTZFO0FBRTdFOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sMkJBQTJCLEdBQUc7SUFDekM7O09BRUc7SUFDSCxrQkFBa0IsRUFBRSxzQkFBc0I7SUFDMUM7O09BRUc7SUFDSCx1QkFBdUIsRUFBRSwwQkFBMEI7SUFDbkQ7O09BRUc7SUFDSCxZQUFZLEVBQUUsZUFBZTtJQUM3Qjs7T0FFRztJQUNILDJCQUEyQixFQUFFLCtCQUErQjtJQUM1RDs7T0FFRztJQUNILG1CQUFtQixFQUFFLHNCQUFzQjtJQUMzQzs7T0FFRztJQUNILHdCQUF3QixFQUFFLDJCQUEyQjtJQUNyRDs7T0FFRztJQUNILGdCQUFnQixFQUFFLG1CQUFtQjtDQUM3QixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0Yi5jb3JlIHZlcnNpb246IDQuMy4wXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9jb250cmlidXRvci1zdW1tYXJ5LXR5cGV8NC4zLjBcclxuXHJcbi8qKlxyXG4gKiBVc2VkIHRvIGNvZGUgYXV0aG9yIGxpc3Qgc3RhdGVtZW50LCBjb250cmlidXRvcnNoaXAgc3RhdGVtZW50LCBhbmQgc3VjaC5cclxuICovXHJcbmV4cG9ydCBjb25zdCBDb250cmlidXRvclN1bW1hcnlUeXBlQ29kZXMgPSB7XHJcbiAgLyoqXHJcbiAgICogYWNrbm93bGVkZ2VtZW50LWxpc3Q6IERpc3BsYXkgb2YgdGhlIGxpc3Qgb2YgYWNrbm93bGVkZ2VkIHBhcnRpZXMgYXMgYSBjb21wbGV0ZSBzdHJpbmcuXHJcbiAgICovXHJcbiAgQWNrbm93bGVkZ21lbnRMaXN0OiBcImFja25vd2xlZGdlbWVudC1saXN0XCIsXHJcbiAgLyoqXHJcbiAgICogYWNrbm93bGVkZ21lbnQtc3RhdGVtZW50OiBTdGF0ZW1lbnQgb2YgYWNrbm93bGVkZ21lbnQgb2YgY29udHJpYnV0aW9ucyBiZXlvbmQgdGhvc2UgY29tcGlsZWQgZm9yIGZvcm1hbCBjb250cmlidXRvcnNoaXAgc3RhdGVtZW50cy5cclxuICAgKi9cclxuICBBY2tub3dsZWRnbWVudFN0YXRlbWVudDogXCJhY2tub3dsZWRnbWVudC1zdGF0ZW1lbnRcIixcclxuICAvKipcclxuICAgKiBhdXRob3Itc3RyaW5nOiBEaXNwbGF5IG9mIHRoZSBhdXRob3IgbGlzdCBhcyBhIGNvbXBsZXRlIHN0cmluZy5cclxuICAgKi9cclxuICBBdXRob3JTdHJpbmc6IFwiYXV0aG9yLXN0cmluZ1wiLFxyXG4gIC8qKlxyXG4gICAqIGNvbXBldGluZy1pbnRlcmVzdHMtc3RhdGVtZW50OiBTdGF0ZW1lbnQgb2YgY29tcGxldGluZyBpbnRlcmVzdHMgcmVsYXRlZCB0byB0aGUgY3JlYXRpb24gb2YgdGhlIGNpdGVkIGFydGlmYWN0LiBBbHNvIGNhbGxlZCBjb25mbGljdHMgb2YgaW50ZXJlc3Qgb3IgZGVjbGFyYXRpb24gb2YgaW50ZXJlc3RzLlxyXG4gICAqL1xyXG4gIENvbXBldGluZ0ludGVyZXN0c1N0YXRlbWVudDogXCJjb21wZXRpbmctaW50ZXJlc3RzLXN0YXRlbWVudFwiLFxyXG4gIC8qKlxyXG4gICAqIGNvbnRyaWJ1dG9yc2hpcC1saXN0OiBEaXNwbGF5IG9mIHRoZSBsaXN0IG9mIGNvbnRyaWJ1dG9ycyBhcyBhIGNvbXBsZXRlIHN0cmluZy5cclxuICAgKi9cclxuICBDb250cmlidXRvcnNoaXBMaXN0OiBcImNvbnRyaWJ1dG9yc2hpcC1saXN0XCIsXHJcbiAgLyoqXHJcbiAgICogY29udHJpYnV0b3JzaGlwLXN0YXRlbWVudDogQ29tcGlsZWQgc3VtbWFyeSBvZiBjb250cmlidXRpb25zLlxyXG4gICAqL1xyXG4gIENvbnRyaWJ1dG9yc2hpcFN0YXRlbWVudDogXCJjb250cmlidXRvcnNoaXAtc3RhdGVtZW50XCIsXHJcbiAgLyoqXHJcbiAgICogZnVuZGluZy1zdGF0ZW1lbnQ6IFN0YXRlbWVudCBvZiBmaW5hbmNpYWwgc3VwcG9ydCBmb3IgdGhlIGNyZWF0aW9uIG9mIHRoZSBjaXRlZCBhcnRpZmFjdC5cclxuICAgKi9cclxuICBGdW5kaW5nU3RhdGVtZW50OiBcImZ1bmRpbmctc3RhdGVtZW50XCIsXHJcbn0gYXMgY29uc3Q7XHJcblxyXG4vKipcclxuICogVXNlZCB0byBjb2RlIGF1dGhvciBsaXN0IHN0YXRlbWVudCwgY29udHJpYnV0b3JzaGlwIHN0YXRlbWVudCwgYW5kIHN1Y2guXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBDb250cmlidXRvclN1bW1hcnlUeXBlQ29kZVR5cGUgPSB0eXBlb2YgQ29udHJpYnV0b3JTdW1tYXJ5VHlwZUNvZGVzW2tleW9mIHR5cGVvZiBDb250cmlidXRvclN1bW1hcnlUeXBlQ29kZXNdO1xyXG4iXX0=