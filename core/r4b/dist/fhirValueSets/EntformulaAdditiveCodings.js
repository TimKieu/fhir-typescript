// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/entformula-additive|4.3.0
/**
 * EnteralFormulaAdditiveType: Codes for the type of modular component such as protein, carbohydrate or fiber to be provided in addition to or mixed with the base formula. This value set is provided as a suggestive example.
 */
export const EntformulaAdditiveCodings = {
    /**
     * carbohydrate: Modular carbohydrate enteral formula component
     */
    Carbohydrate: {
        display: "Carbohydrate",
        code: "carbohydrate",
        system: "http://terminology.hl7.org/CodeSystem/entformula-additive",
    },
    /**
     * fiber: Modular fiber enteral formula component
     */
    Fiber: {
        display: "Fiber",
        code: "fiber",
        system: "http://terminology.hl7.org/CodeSystem/entformula-additive",
    },
    /**
     * lipid: Modular lipid enteral formula component
     */
    Lipid: {
        display: "Lipid",
        code: "lipid",
        system: "http://terminology.hl7.org/CodeSystem/entformula-additive",
    },
    /**
     * protein: Modular protein enteral formula component
     */
    Protein: {
        display: "Protein",
        code: "protein",
        system: "http://terminology.hl7.org/CodeSystem/entformula-additive",
    },
    /**
     * water: Added water
     */
    Water: {
        display: "Water",
        code: "water",
        system: "http://terminology.hl7.org/CodeSystem/entformula-additive",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRW50Zm9ybXVsYUFkZGl0aXZlQ29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvRW50Zm9ybXVsYUFkZGl0aXZlQ29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsZ0RBQWdEO0FBQ2hELGtDQUFrQztBQUNsQyx3RUFBd0U7QUE4QnhFOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0seUJBQXlCLEdBQWdDO0lBQ3BFOztPQUVHO0lBQ0gsWUFBWSxFQUFFO1FBQ1osT0FBTyxFQUFFLGNBQWM7UUFDdkIsSUFBSSxFQUFFLGNBQWM7UUFDcEIsTUFBTSxFQUFFLDJEQUEyRDtLQUNwRTtJQUNEOztPQUVHO0lBQ0gsS0FBSyxFQUFFO1FBQ0wsT0FBTyxFQUFFLE9BQU87UUFDaEIsSUFBSSxFQUFFLE9BQU87UUFDYixNQUFNLEVBQUUsMkRBQTJEO0tBQ3BFO0lBQ0Q7O09BRUc7SUFDSCxLQUFLLEVBQUU7UUFDTCxPQUFPLEVBQUUsT0FBTztRQUNoQixJQUFJLEVBQUUsT0FBTztRQUNiLE1BQU0sRUFBRSwyREFBMkQ7S0FDcEU7SUFDRDs7T0FFRztJQUNILE9BQU8sRUFBRTtRQUNQLE9BQU8sRUFBRSxTQUFTO1FBQ2xCLElBQUksRUFBRSxTQUFTO1FBQ2YsTUFBTSxFQUFFLDJEQUEyRDtLQUNwRTtJQUNEOztPQUVHO0lBQ0gsS0FBSyxFQUFFO1FBQ0wsT0FBTyxFQUFFLE9BQU87UUFDaEIsSUFBSSxFQUFFLE9BQU87UUFDYixNQUFNLEVBQUUsMkRBQTJEO0tBQ3BFO0NBQ08sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNGIuY29yZSB2ZXJzaW9uOiA0LjMuMFxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvZW50Zm9ybXVsYS1hZGRpdGl2ZXw0LjMuMFxyXG5cclxuaW1wb3J0IHsgQ29kaW5nQXJncyB9IGZyb20gJy4uL2ZoaXIvQ29kaW5nLmpzJ1xyXG5cclxuLyoqXHJcbiAqIEVudGVyYWxGb3JtdWxhQWRkaXRpdmVUeXBlOiBDb2RlcyBmb3IgdGhlIHR5cGUgb2YgbW9kdWxhciBjb21wb25lbnQgc3VjaCBhcyBwcm90ZWluLCBjYXJib2h5ZHJhdGUgb3IgZmliZXIgdG8gYmUgcHJvdmlkZWQgaW4gYWRkaXRpb24gdG8gb3IgbWl4ZWQgd2l0aCB0aGUgYmFzZSBmb3JtdWxhLiBUaGlzIHZhbHVlIHNldCBpcyBwcm92aWRlZCBhcyBhIHN1Z2dlc3RpdmUgZXhhbXBsZS5cclxuICovXHJcbmV4cG9ydCB0eXBlIEVudGZvcm11bGFBZGRpdGl2ZUNvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogY2FyYm9oeWRyYXRlOiBNb2R1bGFyIGNhcmJvaHlkcmF0ZSBlbnRlcmFsIGZvcm11bGEgY29tcG9uZW50XHJcbiAgICovXHJcbiAgQ2FyYm9oeWRyYXRlOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIGZpYmVyOiBNb2R1bGFyIGZpYmVyIGVudGVyYWwgZm9ybXVsYSBjb21wb25lbnRcclxuICAgKi9cclxuICBGaWJlcjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBsaXBpZDogTW9kdWxhciBsaXBpZCBlbnRlcmFsIGZvcm11bGEgY29tcG9uZW50XHJcbiAgICovXHJcbiAgTGlwaWQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogcHJvdGVpbjogTW9kdWxhciBwcm90ZWluIGVudGVyYWwgZm9ybXVsYSBjb21wb25lbnRcclxuICAgKi9cclxuICBQcm90ZWluOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIHdhdGVyOiBBZGRlZCB3YXRlclxyXG4gICAqL1xyXG4gIFdhdGVyOiBDb2RpbmdBcmdzO1xyXG59XHJcblxyXG4vKipcclxuICogRW50ZXJhbEZvcm11bGFBZGRpdGl2ZVR5cGU6IENvZGVzIGZvciB0aGUgdHlwZSBvZiBtb2R1bGFyIGNvbXBvbmVudCBzdWNoIGFzIHByb3RlaW4sIGNhcmJvaHlkcmF0ZSBvciBmaWJlciB0byBiZSBwcm92aWRlZCBpbiBhZGRpdGlvbiB0byBvciBtaXhlZCB3aXRoIHRoZSBiYXNlIGZvcm11bGEuIFRoaXMgdmFsdWUgc2V0IGlzIHByb3ZpZGVkIGFzIGEgc3VnZ2VzdGl2ZSBleGFtcGxlLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IEVudGZvcm11bGFBZGRpdGl2ZUNvZGluZ3M6RW50Zm9ybXVsYUFkZGl0aXZlQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBjYXJib2h5ZHJhdGU6IE1vZHVsYXIgY2FyYm9oeWRyYXRlIGVudGVyYWwgZm9ybXVsYSBjb21wb25lbnRcclxuICAgKi9cclxuICBDYXJib2h5ZHJhdGU6IHtcclxuICAgIGRpc3BsYXk6IFwiQ2FyYm9oeWRyYXRlXCIsXHJcbiAgICBjb2RlOiBcImNhcmJvaHlkcmF0ZVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vZW50Zm9ybXVsYS1hZGRpdGl2ZVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogZmliZXI6IE1vZHVsYXIgZmliZXIgZW50ZXJhbCBmb3JtdWxhIGNvbXBvbmVudFxyXG4gICAqL1xyXG4gIEZpYmVyOiB7XHJcbiAgICBkaXNwbGF5OiBcIkZpYmVyXCIsXHJcbiAgICBjb2RlOiBcImZpYmVyXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9lbnRmb3JtdWxhLWFkZGl0aXZlXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBsaXBpZDogTW9kdWxhciBsaXBpZCBlbnRlcmFsIGZvcm11bGEgY29tcG9uZW50XHJcbiAgICovXHJcbiAgTGlwaWQ6IHtcclxuICAgIGRpc3BsYXk6IFwiTGlwaWRcIixcclxuICAgIGNvZGU6IFwibGlwaWRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2VudGZvcm11bGEtYWRkaXRpdmVcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIHByb3RlaW46IE1vZHVsYXIgcHJvdGVpbiBlbnRlcmFsIGZvcm11bGEgY29tcG9uZW50XHJcbiAgICovXHJcbiAgUHJvdGVpbjoge1xyXG4gICAgZGlzcGxheTogXCJQcm90ZWluXCIsXHJcbiAgICBjb2RlOiBcInByb3RlaW5cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2VudGZvcm11bGEtYWRkaXRpdmVcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIHdhdGVyOiBBZGRlZCB3YXRlclxyXG4gICAqL1xyXG4gIFdhdGVyOiB7XHJcbiAgICBkaXNwbGF5OiBcIldhdGVyXCIsXHJcbiAgICBjb2RlOiBcIndhdGVyXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9lbnRmb3JtdWxhLWFkZGl0aXZlXCIsXHJcbiAgfSxcclxufSBhcyBjb25zdDtcclxuIl19