// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/research-study-reason-stopped|4.3.0
/**
 * Codes for why the study ended prematurely.
 */
export const ResearchStudyReasonStoppedCodings = {
    /**
     * accrual-goal-met: The study prematurely ended because the accrual goal was met.
     */
    AccrualGoalMet: {
        display: "Accrual Goal Met",
        code: "accrual-goal-met",
        system: "http://terminology.hl7.org/CodeSystem/research-study-reason-stopped",
    },
    /**
     * closed-due-to-lack-of-study-progress: The study prematurely ended due to lack of study progress.
     */
    ClosedDueToLackOfStudyProgress: {
        display: "Closed due to lack of study progress",
        code: "closed-due-to-lack-of-study-progress",
        system: "http://terminology.hl7.org/CodeSystem/research-study-reason-stopped",
    },
    /**
     * closed-due-to-toxicity: The study prematurely ended due to toxicity.
     */
    ClosedDueToToxicity: {
        display: "Closed due to toxicity",
        code: "closed-due-to-toxicity",
        system: "http://terminology.hl7.org/CodeSystem/research-study-reason-stopped",
    },
    /**
     * temporarily-closed-per-study-design: The study prematurely ended temporarily per study design.
     */
    TemporarilyClosedPerStudyDesign: {
        display: "Temporarily closed per study design",
        code: "temporarily-closed-per-study-design",
        system: "http://terminology.hl7.org/CodeSystem/research-study-reason-stopped",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVzZWFyY2hTdHVkeVJlYXNvblN0b3BwZWRDb2RpbmdzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9SZXNlYXJjaFN0dWR5UmVhc29uU3RvcHBlZENvZGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLGdEQUFnRDtBQUNoRCxrQ0FBa0M7QUFDbEMsa0ZBQWtGO0FBMEJsRjs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLGlDQUFpQyxHQUF3QztJQUNwRjs7T0FFRztJQUNILGNBQWMsRUFBRTtRQUNkLE9BQU8sRUFBRSxrQkFBa0I7UUFDM0IsSUFBSSxFQUFFLGtCQUFrQjtRQUN4QixNQUFNLEVBQUUscUVBQXFFO0tBQzlFO0lBQ0Q7O09BRUc7SUFDSCw4QkFBOEIsRUFBRTtRQUM5QixPQUFPLEVBQUUsc0NBQXNDO1FBQy9DLElBQUksRUFBRSxzQ0FBc0M7UUFDNUMsTUFBTSxFQUFFLHFFQUFxRTtLQUM5RTtJQUNEOztPQUVHO0lBQ0gsbUJBQW1CLEVBQUU7UUFDbkIsT0FBTyxFQUFFLHdCQUF3QjtRQUNqQyxJQUFJLEVBQUUsd0JBQXdCO1FBQzlCLE1BQU0sRUFBRSxxRUFBcUU7S0FDOUU7SUFDRDs7T0FFRztJQUNILCtCQUErQixFQUFFO1FBQy9CLE9BQU8sRUFBRSxxQ0FBcUM7UUFDOUMsSUFBSSxFQUFFLHFDQUFxQztRQUMzQyxNQUFNLEVBQUUscUVBQXFFO0tBQzlFO0NBQ08sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNGIuY29yZSB2ZXJzaW9uOiA0LjMuMFxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvcmVzZWFyY2gtc3R1ZHktcmVhc29uLXN0b3BwZWR8NC4zLjBcclxuXHJcbmltcG9ydCB7IENvZGluZ0FyZ3MgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiBDb2RlcyBmb3Igd2h5IHRoZSBzdHVkeSBlbmRlZCBwcmVtYXR1cmVseS5cclxuICovXHJcbmV4cG9ydCB0eXBlIFJlc2VhcmNoU3R1ZHlSZWFzb25TdG9wcGVkQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBhY2NydWFsLWdvYWwtbWV0OiBUaGUgc3R1ZHkgcHJlbWF0dXJlbHkgZW5kZWQgYmVjYXVzZSB0aGUgYWNjcnVhbCBnb2FsIHdhcyBtZXQuXHJcbiAgICovXHJcbiAgQWNjcnVhbEdvYWxNZXQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogY2xvc2VkLWR1ZS10by1sYWNrLW9mLXN0dWR5LXByb2dyZXNzOiBUaGUgc3R1ZHkgcHJlbWF0dXJlbHkgZW5kZWQgZHVlIHRvIGxhY2sgb2Ygc3R1ZHkgcHJvZ3Jlc3MuXHJcbiAgICovXHJcbiAgQ2xvc2VkRHVlVG9MYWNrT2ZTdHVkeVByb2dyZXNzOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIGNsb3NlZC1kdWUtdG8tdG94aWNpdHk6IFRoZSBzdHVkeSBwcmVtYXR1cmVseSBlbmRlZCBkdWUgdG8gdG94aWNpdHkuXHJcbiAgICovXHJcbiAgQ2xvc2VkRHVlVG9Ub3hpY2l0eTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiB0ZW1wb3JhcmlseS1jbG9zZWQtcGVyLXN0dWR5LWRlc2lnbjogVGhlIHN0dWR5IHByZW1hdHVyZWx5IGVuZGVkIHRlbXBvcmFyaWx5IHBlciBzdHVkeSBkZXNpZ24uXHJcbiAgICovXHJcbiAgVGVtcG9yYXJpbHlDbG9zZWRQZXJTdHVkeURlc2lnbjogQ29kaW5nQXJncztcclxufVxyXG5cclxuLyoqXHJcbiAqIENvZGVzIGZvciB3aHkgdGhlIHN0dWR5IGVuZGVkIHByZW1hdHVyZWx5LlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IFJlc2VhcmNoU3R1ZHlSZWFzb25TdG9wcGVkQ29kaW5nczpSZXNlYXJjaFN0dWR5UmVhc29uU3RvcHBlZENvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogYWNjcnVhbC1nb2FsLW1ldDogVGhlIHN0dWR5IHByZW1hdHVyZWx5IGVuZGVkIGJlY2F1c2UgdGhlIGFjY3J1YWwgZ29hbCB3YXMgbWV0LlxyXG4gICAqL1xyXG4gIEFjY3J1YWxHb2FsTWV0OiB7XHJcbiAgICBkaXNwbGF5OiBcIkFjY3J1YWwgR29hbCBNZXRcIixcclxuICAgIGNvZGU6IFwiYWNjcnVhbC1nb2FsLW1ldFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vcmVzZWFyY2gtc3R1ZHktcmVhc29uLXN0b3BwZWRcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIGNsb3NlZC1kdWUtdG8tbGFjay1vZi1zdHVkeS1wcm9ncmVzczogVGhlIHN0dWR5IHByZW1hdHVyZWx5IGVuZGVkIGR1ZSB0byBsYWNrIG9mIHN0dWR5IHByb2dyZXNzLlxyXG4gICAqL1xyXG4gIENsb3NlZER1ZVRvTGFja09mU3R1ZHlQcm9ncmVzczoge1xyXG4gICAgZGlzcGxheTogXCJDbG9zZWQgZHVlIHRvIGxhY2sgb2Ygc3R1ZHkgcHJvZ3Jlc3NcIixcclxuICAgIGNvZGU6IFwiY2xvc2VkLWR1ZS10by1sYWNrLW9mLXN0dWR5LXByb2dyZXNzXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9yZXNlYXJjaC1zdHVkeS1yZWFzb24tc3RvcHBlZFwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogY2xvc2VkLWR1ZS10by10b3hpY2l0eTogVGhlIHN0dWR5IHByZW1hdHVyZWx5IGVuZGVkIGR1ZSB0byB0b3hpY2l0eS5cclxuICAgKi9cclxuICBDbG9zZWREdWVUb1RveGljaXR5OiB7XHJcbiAgICBkaXNwbGF5OiBcIkNsb3NlZCBkdWUgdG8gdG94aWNpdHlcIixcclxuICAgIGNvZGU6IFwiY2xvc2VkLWR1ZS10by10b3hpY2l0eVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vcmVzZWFyY2gtc3R1ZHktcmVhc29uLXN0b3BwZWRcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIHRlbXBvcmFyaWx5LWNsb3NlZC1wZXItc3R1ZHktZGVzaWduOiBUaGUgc3R1ZHkgcHJlbWF0dXJlbHkgZW5kZWQgdGVtcG9yYXJpbHkgcGVyIHN0dWR5IGRlc2lnbi5cclxuICAgKi9cclxuICBUZW1wb3JhcmlseUNsb3NlZFBlclN0dWR5RGVzaWduOiB7XHJcbiAgICBkaXNwbGF5OiBcIlRlbXBvcmFyaWx5IGNsb3NlZCBwZXIgc3R1ZHkgZGVzaWduXCIsXHJcbiAgICBjb2RlOiBcInRlbXBvcmFyaWx5LWNsb3NlZC1wZXItc3R1ZHktZGVzaWduXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9yZXNlYXJjaC1zdHVkeS1yZWFzb24tc3RvcHBlZFwiLFxyXG4gIH0sXHJcbn0gYXMgY29uc3Q7XHJcbiJdfQ==