// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/citation-status-type|4.3.0
/**
 * Citation status type
 */
export const CitationStatusTypeCodes = {
    /**
     * medline-completed: Medline Citation Status of Completed
     */
    MedlineCitationStatusOfCompleted: "medline-completed",
    /**
     * medline-in-data-review: Medline Citation Status of In-Data-Review
     */
    MedlineCitationStatusOfInDataReview: "medline-in-data-review",
    /**
     * medline-in-process: Medline Citation Status of In-Process
     */
    MedlineCitationStatusOfInProcess: "medline-in-process",
    /**
     * medline-medline: Medline Citation Status of MEDLINE
     */
    MedlineCitationStatusOfMEDLINE: "medline-medline",
    /**
     * medline-oldmedline: Medline Citation Status of OLDMEDLINE
     */
    MedlineCitationStatusOfOLDMEDLINE: "medline-oldmedline",
    /**
     * medline-publisher: Medline Citation Status of Publisher
     */
    MedlineCitationStatusOfPublisher: "medline-publisher",
    /**
     * medline-pubmed-not-medline: Medline Citation Status of PubMed-not-MEDLINE
     */
    MedlineCitationStatusOfPubMedNotMEDLINE: "medline-pubmed-not-medline",
    /**
     * pubmed-publication-status-aheadofprint: electronically published, but followed by print
     */
    PubMedPublicationStatusOfAheadofprint: "pubmed-publication-status-aheadofprint",
    /**
     * pubmed-publication-status-epublish: electronically published only, never published in print
     */
    PubMedPublicationStatusOfEpublish: "pubmed-publication-status-epublish",
    /**
     * pubmed-publication-status-ppublish: published in print
     */
    PubMedPublicationStatusOfPpublish: "pubmed-publication-status-ppublish",
    /**
     * pubmed-pubstatus-accepted: PubMed Pubstatus of Accepted
     */
    PubMedPubstatusOfAccepted: "pubmed-pubstatus-accepted",
    /**
     * pubmed-pubstatus-aheadofprint: PubMed Pubstatus of aheadofprint
     */
    PubMedPubstatusOfAheadofprint: "pubmed-pubstatus-aheadofprint",
    /**
     * pubmed-pubstatus-ecollection: PubMed Pubstatus of Ecollection
     */
    PubMedPubstatusOfEcollection: "pubmed-pubstatus-ecollection",
    /**
     * pubmed-pubstatus-entrez: PubMed Pubstatus of Entrez
     */
    PubMedPubstatusOfEntrez: "pubmed-pubstatus-entrez",
    /**
     * pubmed-pubstatus-epublish: PubMed Pubstatus of Epublish
     */
    PubMedPubstatusOfEpublish: "pubmed-pubstatus-epublish",
    /**
     * pubmed-pubstatus-medline: PubMed Pubstatus of Medline
     */
    PubMedPubstatusOfMedline: "pubmed-pubstatus-medline",
    /**
     * pubmed-pubstatus-medliner: PubMed Pubstatus of Medliner
     */
    PubMedPubstatusOfMedliner: "pubmed-pubstatus-medliner",
    /**
     * pubmed-pubstatus-pmc: PubMed Pubstatus of PMC
     */
    PubMedPubstatusOfPMC: "pubmed-pubstatus-pmc",
    /**
     * pubmed-pubstatus-pmc-release: PubMed Pubstatus of PMC release
     */
    PubMedPubstatusOfPMCRelease: "pubmed-pubstatus-pmc-release",
    /**
     * pubmed-pubstatus-pmcr: PubMed Pubstatus of PMCr
     */
    PubMedPubstatusOfPMCr: "pubmed-pubstatus-pmcr",
    /**
     * pubmed-pubstatus-ppublish: PubMed Pubstatus of Ppublish
     */
    PubMedPubstatusOfPpublish: "pubmed-pubstatus-ppublish",
    /**
     * pubmed-pubstatus-premedline: PubMed Pubstatus of Premedline
     */
    PubMedPubstatusOfPremedline: "pubmed-pubstatus-premedline",
    /**
     * pubmed-pubstatus-pubmed: PubMed Pubstatus of PubMed
     */
    PubMedPubstatusOfPubMed: "pubmed-pubstatus-pubmed",
    /**
     * pubmed-pubstatus-pubmedr: PubMed Pubstatus of PubMedr
     */
    PubMedPubstatusOfPubMedr: "pubmed-pubstatus-pubmedr",
    /**
     * pubmed-pubstatus-received: PubMed Pubstatus of Received
     */
    PubMedPubstatusOfReceived: "pubmed-pubstatus-received",
    /**
     * pubmed-pubstatus-retracted: PubMed Pubstatus of Retracted
     */
    PubMedPubstatusOfRetracted: "pubmed-pubstatus-retracted",
    /**
     * pubmed-pubstatus-revised: PubMed Pubstatus of Revised
     */
    PubMedPubstatusOfRevised: "pubmed-pubstatus-revised",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2l0YXRpb25TdGF0dXNUeXBlQ29kZXMuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL0NpdGF0aW9uU3RhdHVzVHlwZUNvZGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQixnREFBZ0Q7QUFDaEQsa0NBQWtDO0FBQ2xDLHlFQUF5RTtBQUV6RTs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLHVCQUF1QixHQUFHO0lBQ3JDOztPQUVHO0lBQ0gsZ0NBQWdDLEVBQUUsbUJBQW1CO0lBQ3JEOztPQUVHO0lBQ0gsbUNBQW1DLEVBQUUsd0JBQXdCO0lBQzdEOztPQUVHO0lBQ0gsZ0NBQWdDLEVBQUUsb0JBQW9CO0lBQ3REOztPQUVHO0lBQ0gsOEJBQThCLEVBQUUsaUJBQWlCO0lBQ2pEOztPQUVHO0lBQ0gsaUNBQWlDLEVBQUUsb0JBQW9CO0lBQ3ZEOztPQUVHO0lBQ0gsZ0NBQWdDLEVBQUUsbUJBQW1CO0lBQ3JEOztPQUVHO0lBQ0gsdUNBQXVDLEVBQUUsNEJBQTRCO0lBQ3JFOztPQUVHO0lBQ0gscUNBQXFDLEVBQUUsd0NBQXdDO0lBQy9FOztPQUVHO0lBQ0gsaUNBQWlDLEVBQUUsb0NBQW9DO0lBQ3ZFOztPQUVHO0lBQ0gsaUNBQWlDLEVBQUUsb0NBQW9DO0lBQ3ZFOztPQUVHO0lBQ0gseUJBQXlCLEVBQUUsMkJBQTJCO0lBQ3REOztPQUVHO0lBQ0gsNkJBQTZCLEVBQUUsK0JBQStCO0lBQzlEOztPQUVHO0lBQ0gsNEJBQTRCLEVBQUUsOEJBQThCO0lBQzVEOztPQUVHO0lBQ0gsdUJBQXVCLEVBQUUseUJBQXlCO0lBQ2xEOztPQUVHO0lBQ0gseUJBQXlCLEVBQUUsMkJBQTJCO0lBQ3REOztPQUVHO0lBQ0gsd0JBQXdCLEVBQUUsMEJBQTBCO0lBQ3BEOztPQUVHO0lBQ0gseUJBQXlCLEVBQUUsMkJBQTJCO0lBQ3REOztPQUVHO0lBQ0gsb0JBQW9CLEVBQUUsc0JBQXNCO0lBQzVDOztPQUVHO0lBQ0gsMkJBQTJCLEVBQUUsOEJBQThCO0lBQzNEOztPQUVHO0lBQ0gscUJBQXFCLEVBQUUsdUJBQXVCO0lBQzlDOztPQUVHO0lBQ0gseUJBQXlCLEVBQUUsMkJBQTJCO0lBQ3REOztPQUVHO0lBQ0gsMkJBQTJCLEVBQUUsNkJBQTZCO0lBQzFEOztPQUVHO0lBQ0gsdUJBQXVCLEVBQUUseUJBQXlCO0lBQ2xEOztPQUVHO0lBQ0gsd0JBQXdCLEVBQUUsMEJBQTBCO0lBQ3BEOztPQUVHO0lBQ0gseUJBQXlCLEVBQUUsMkJBQTJCO0lBQ3REOztPQUVHO0lBQ0gsMEJBQTBCLEVBQUUsNEJBQTRCO0lBQ3hEOztPQUVHO0lBQ0gsd0JBQXdCLEVBQUUsMEJBQTBCO0NBQzVDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjRiLmNvcmUgdmVyc2lvbjogNC4zLjBcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L2NpdGF0aW9uLXN0YXR1cy10eXBlfDQuMy4wXHJcblxyXG4vKipcclxuICogQ2l0YXRpb24gc3RhdHVzIHR5cGVcclxuICovXHJcbmV4cG9ydCBjb25zdCBDaXRhdGlvblN0YXR1c1R5cGVDb2RlcyA9IHtcclxuICAvKipcclxuICAgKiBtZWRsaW5lLWNvbXBsZXRlZDogTWVkbGluZSBDaXRhdGlvbiBTdGF0dXMgb2YgQ29tcGxldGVkXHJcbiAgICovXHJcbiAgTWVkbGluZUNpdGF0aW9uU3RhdHVzT2ZDb21wbGV0ZWQ6IFwibWVkbGluZS1jb21wbGV0ZWRcIixcclxuICAvKipcclxuICAgKiBtZWRsaW5lLWluLWRhdGEtcmV2aWV3OiBNZWRsaW5lIENpdGF0aW9uIFN0YXR1cyBvZiBJbi1EYXRhLVJldmlld1xyXG4gICAqL1xyXG4gIE1lZGxpbmVDaXRhdGlvblN0YXR1c09mSW5EYXRhUmV2aWV3OiBcIm1lZGxpbmUtaW4tZGF0YS1yZXZpZXdcIixcclxuICAvKipcclxuICAgKiBtZWRsaW5lLWluLXByb2Nlc3M6IE1lZGxpbmUgQ2l0YXRpb24gU3RhdHVzIG9mIEluLVByb2Nlc3NcclxuICAgKi9cclxuICBNZWRsaW5lQ2l0YXRpb25TdGF0dXNPZkluUHJvY2VzczogXCJtZWRsaW5lLWluLXByb2Nlc3NcIixcclxuICAvKipcclxuICAgKiBtZWRsaW5lLW1lZGxpbmU6IE1lZGxpbmUgQ2l0YXRpb24gU3RhdHVzIG9mIE1FRExJTkVcclxuICAgKi9cclxuICBNZWRsaW5lQ2l0YXRpb25TdGF0dXNPZk1FRExJTkU6IFwibWVkbGluZS1tZWRsaW5lXCIsXHJcbiAgLyoqXHJcbiAgICogbWVkbGluZS1vbGRtZWRsaW5lOiBNZWRsaW5lIENpdGF0aW9uIFN0YXR1cyBvZiBPTERNRURMSU5FXHJcbiAgICovXHJcbiAgTWVkbGluZUNpdGF0aW9uU3RhdHVzT2ZPTERNRURMSU5FOiBcIm1lZGxpbmUtb2xkbWVkbGluZVwiLFxyXG4gIC8qKlxyXG4gICAqIG1lZGxpbmUtcHVibGlzaGVyOiBNZWRsaW5lIENpdGF0aW9uIFN0YXR1cyBvZiBQdWJsaXNoZXJcclxuICAgKi9cclxuICBNZWRsaW5lQ2l0YXRpb25TdGF0dXNPZlB1Ymxpc2hlcjogXCJtZWRsaW5lLXB1Ymxpc2hlclwiLFxyXG4gIC8qKlxyXG4gICAqIG1lZGxpbmUtcHVibWVkLW5vdC1tZWRsaW5lOiBNZWRsaW5lIENpdGF0aW9uIFN0YXR1cyBvZiBQdWJNZWQtbm90LU1FRExJTkVcclxuICAgKi9cclxuICBNZWRsaW5lQ2l0YXRpb25TdGF0dXNPZlB1Yk1lZE5vdE1FRExJTkU6IFwibWVkbGluZS1wdWJtZWQtbm90LW1lZGxpbmVcIixcclxuICAvKipcclxuICAgKiBwdWJtZWQtcHVibGljYXRpb24tc3RhdHVzLWFoZWFkb2ZwcmludDogZWxlY3Ryb25pY2FsbHkgcHVibGlzaGVkLCBidXQgZm9sbG93ZWQgYnkgcHJpbnRcclxuICAgKi9cclxuICBQdWJNZWRQdWJsaWNhdGlvblN0YXR1c09mQWhlYWRvZnByaW50OiBcInB1Ym1lZC1wdWJsaWNhdGlvbi1zdGF0dXMtYWhlYWRvZnByaW50XCIsXHJcbiAgLyoqXHJcbiAgICogcHVibWVkLXB1YmxpY2F0aW9uLXN0YXR1cy1lcHVibGlzaDogZWxlY3Ryb25pY2FsbHkgcHVibGlzaGVkIG9ubHksIG5ldmVyIHB1Ymxpc2hlZCBpbiBwcmludFxyXG4gICAqL1xyXG4gIFB1Yk1lZFB1YmxpY2F0aW9uU3RhdHVzT2ZFcHVibGlzaDogXCJwdWJtZWQtcHVibGljYXRpb24tc3RhdHVzLWVwdWJsaXNoXCIsXHJcbiAgLyoqXHJcbiAgICogcHVibWVkLXB1YmxpY2F0aW9uLXN0YXR1cy1wcHVibGlzaDogcHVibGlzaGVkIGluIHByaW50XHJcbiAgICovXHJcbiAgUHViTWVkUHVibGljYXRpb25TdGF0dXNPZlBwdWJsaXNoOiBcInB1Ym1lZC1wdWJsaWNhdGlvbi1zdGF0dXMtcHB1Ymxpc2hcIixcclxuICAvKipcclxuICAgKiBwdWJtZWQtcHVic3RhdHVzLWFjY2VwdGVkOiBQdWJNZWQgUHVic3RhdHVzIG9mIEFjY2VwdGVkXHJcbiAgICovXHJcbiAgUHViTWVkUHVic3RhdHVzT2ZBY2NlcHRlZDogXCJwdWJtZWQtcHVic3RhdHVzLWFjY2VwdGVkXCIsXHJcbiAgLyoqXHJcbiAgICogcHVibWVkLXB1YnN0YXR1cy1haGVhZG9mcHJpbnQ6IFB1Yk1lZCBQdWJzdGF0dXMgb2YgYWhlYWRvZnByaW50XHJcbiAgICovXHJcbiAgUHViTWVkUHVic3RhdHVzT2ZBaGVhZG9mcHJpbnQ6IFwicHVibWVkLXB1YnN0YXR1cy1haGVhZG9mcHJpbnRcIixcclxuICAvKipcclxuICAgKiBwdWJtZWQtcHVic3RhdHVzLWVjb2xsZWN0aW9uOiBQdWJNZWQgUHVic3RhdHVzIG9mIEVjb2xsZWN0aW9uXHJcbiAgICovXHJcbiAgUHViTWVkUHVic3RhdHVzT2ZFY29sbGVjdGlvbjogXCJwdWJtZWQtcHVic3RhdHVzLWVjb2xsZWN0aW9uXCIsXHJcbiAgLyoqXHJcbiAgICogcHVibWVkLXB1YnN0YXR1cy1lbnRyZXo6IFB1Yk1lZCBQdWJzdGF0dXMgb2YgRW50cmV6XHJcbiAgICovXHJcbiAgUHViTWVkUHVic3RhdHVzT2ZFbnRyZXo6IFwicHVibWVkLXB1YnN0YXR1cy1lbnRyZXpcIixcclxuICAvKipcclxuICAgKiBwdWJtZWQtcHVic3RhdHVzLWVwdWJsaXNoOiBQdWJNZWQgUHVic3RhdHVzIG9mIEVwdWJsaXNoXHJcbiAgICovXHJcbiAgUHViTWVkUHVic3RhdHVzT2ZFcHVibGlzaDogXCJwdWJtZWQtcHVic3RhdHVzLWVwdWJsaXNoXCIsXHJcbiAgLyoqXHJcbiAgICogcHVibWVkLXB1YnN0YXR1cy1tZWRsaW5lOiBQdWJNZWQgUHVic3RhdHVzIG9mIE1lZGxpbmVcclxuICAgKi9cclxuICBQdWJNZWRQdWJzdGF0dXNPZk1lZGxpbmU6IFwicHVibWVkLXB1YnN0YXR1cy1tZWRsaW5lXCIsXHJcbiAgLyoqXHJcbiAgICogcHVibWVkLXB1YnN0YXR1cy1tZWRsaW5lcjogUHViTWVkIFB1YnN0YXR1cyBvZiBNZWRsaW5lclxyXG4gICAqL1xyXG4gIFB1Yk1lZFB1YnN0YXR1c09mTWVkbGluZXI6IFwicHVibWVkLXB1YnN0YXR1cy1tZWRsaW5lclwiLFxyXG4gIC8qKlxyXG4gICAqIHB1Ym1lZC1wdWJzdGF0dXMtcG1jOiBQdWJNZWQgUHVic3RhdHVzIG9mIFBNQ1xyXG4gICAqL1xyXG4gIFB1Yk1lZFB1YnN0YXR1c09mUE1DOiBcInB1Ym1lZC1wdWJzdGF0dXMtcG1jXCIsXHJcbiAgLyoqXHJcbiAgICogcHVibWVkLXB1YnN0YXR1cy1wbWMtcmVsZWFzZTogUHViTWVkIFB1YnN0YXR1cyBvZiBQTUMgcmVsZWFzZVxyXG4gICAqL1xyXG4gIFB1Yk1lZFB1YnN0YXR1c09mUE1DUmVsZWFzZTogXCJwdWJtZWQtcHVic3RhdHVzLXBtYy1yZWxlYXNlXCIsXHJcbiAgLyoqXHJcbiAgICogcHVibWVkLXB1YnN0YXR1cy1wbWNyOiBQdWJNZWQgUHVic3RhdHVzIG9mIFBNQ3JcclxuICAgKi9cclxuICBQdWJNZWRQdWJzdGF0dXNPZlBNQ3I6IFwicHVibWVkLXB1YnN0YXR1cy1wbWNyXCIsXHJcbiAgLyoqXHJcbiAgICogcHVibWVkLXB1YnN0YXR1cy1wcHVibGlzaDogUHViTWVkIFB1YnN0YXR1cyBvZiBQcHVibGlzaFxyXG4gICAqL1xyXG4gIFB1Yk1lZFB1YnN0YXR1c09mUHB1Ymxpc2g6IFwicHVibWVkLXB1YnN0YXR1cy1wcHVibGlzaFwiLFxyXG4gIC8qKlxyXG4gICAqIHB1Ym1lZC1wdWJzdGF0dXMtcHJlbWVkbGluZTogUHViTWVkIFB1YnN0YXR1cyBvZiBQcmVtZWRsaW5lXHJcbiAgICovXHJcbiAgUHViTWVkUHVic3RhdHVzT2ZQcmVtZWRsaW5lOiBcInB1Ym1lZC1wdWJzdGF0dXMtcHJlbWVkbGluZVwiLFxyXG4gIC8qKlxyXG4gICAqIHB1Ym1lZC1wdWJzdGF0dXMtcHVibWVkOiBQdWJNZWQgUHVic3RhdHVzIG9mIFB1Yk1lZFxyXG4gICAqL1xyXG4gIFB1Yk1lZFB1YnN0YXR1c09mUHViTWVkOiBcInB1Ym1lZC1wdWJzdGF0dXMtcHVibWVkXCIsXHJcbiAgLyoqXHJcbiAgICogcHVibWVkLXB1YnN0YXR1cy1wdWJtZWRyOiBQdWJNZWQgUHVic3RhdHVzIG9mIFB1Yk1lZHJcclxuICAgKi9cclxuICBQdWJNZWRQdWJzdGF0dXNPZlB1Yk1lZHI6IFwicHVibWVkLXB1YnN0YXR1cy1wdWJtZWRyXCIsXHJcbiAgLyoqXHJcbiAgICogcHVibWVkLXB1YnN0YXR1cy1yZWNlaXZlZDogUHViTWVkIFB1YnN0YXR1cyBvZiBSZWNlaXZlZFxyXG4gICAqL1xyXG4gIFB1Yk1lZFB1YnN0YXR1c09mUmVjZWl2ZWQ6IFwicHVibWVkLXB1YnN0YXR1cy1yZWNlaXZlZFwiLFxyXG4gIC8qKlxyXG4gICAqIHB1Ym1lZC1wdWJzdGF0dXMtcmV0cmFjdGVkOiBQdWJNZWQgUHVic3RhdHVzIG9mIFJldHJhY3RlZFxyXG4gICAqL1xyXG4gIFB1Yk1lZFB1YnN0YXR1c09mUmV0cmFjdGVkOiBcInB1Ym1lZC1wdWJzdGF0dXMtcmV0cmFjdGVkXCIsXHJcbiAgLyoqXHJcbiAgICogcHVibWVkLXB1YnN0YXR1cy1yZXZpc2VkOiBQdWJNZWQgUHVic3RhdHVzIG9mIFJldmlzZWRcclxuICAgKi9cclxuICBQdWJNZWRQdWJzdGF0dXNPZlJldmlzZWQ6IFwicHVibWVkLXB1YnN0YXR1cy1yZXZpc2VkXCIsXHJcbn0gYXMgY29uc3Q7XHJcblxyXG4vKipcclxuICogQ2l0YXRpb24gc3RhdHVzIHR5cGVcclxuICovXHJcbmV4cG9ydCB0eXBlIENpdGF0aW9uU3RhdHVzVHlwZUNvZGVUeXBlID0gdHlwZW9mIENpdGF0aW9uU3RhdHVzVHlwZUNvZGVzW2tleW9mIHR5cGVvZiBDaXRhdGlvblN0YXR1c1R5cGVDb2Rlc107XHJcbiJdfQ==