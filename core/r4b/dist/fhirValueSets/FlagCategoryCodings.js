// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/flag-category|4.3.0
/**
 * Example list of general categories for flagged issues. (Not complete or necessarily appropriate.)
 */
export const FlagCategoryCodings = {
    /**
     * admin: Flags related to administrative and financial processes.
     */
    Administrative: {
        display: "Administrative",
        code: "admin",
        system: "http://terminology.hl7.org/CodeSystem/flag-category",
    },
    /**
     * advance-directive: Flags related to subject's advance directives.
     */
    AdvanceDirective: {
        display: "Advance Directive",
        code: "advance-directive",
        system: "http://terminology.hl7.org/CodeSystem/flag-category",
    },
    /**
     * behavioral: Flags related to behavior.
     */
    Behavioral: {
        display: "Behavioral",
        code: "behavioral",
        system: "http://terminology.hl7.org/CodeSystem/flag-category",
    },
    /**
     * clinical: Flags related to the subject's clinical data.
     */
    Clinical: {
        display: "Clinical",
        code: "clinical",
        system: "http://terminology.hl7.org/CodeSystem/flag-category",
    },
    /**
     * contact: Flags related to coming into contact with the patient.
     */
    SubjectContact: {
        display: "Subject Contact",
        code: "contact",
        system: "http://terminology.hl7.org/CodeSystem/flag-category",
    },
    /**
     * diet: Flags related to the subject's dietary needs.
     */
    Diet: {
        display: "Diet",
        code: "diet",
        system: "http://terminology.hl7.org/CodeSystem/flag-category",
    },
    /**
     * drug: Flags related to the subject's medications.
     */
    Drug: {
        display: "Drug",
        code: "drug",
        system: "http://terminology.hl7.org/CodeSystem/flag-category",
    },
    /**
     * lab: Flags related to performing laboratory tests and related processes (e.g. phlebotomy).
     */
    Lab: {
        display: "Lab",
        code: "lab",
        system: "http://terminology.hl7.org/CodeSystem/flag-category",
    },
    /**
     * research: Flags related to research.
     */
    Research: {
        display: "Research",
        code: "research",
        system: "http://terminology.hl7.org/CodeSystem/flag-category",
    },
    /**
     * safety: Flags related to safety precautions.
     */
    Safety: {
        display: "Safety",
        code: "safety",
        system: "http://terminology.hl7.org/CodeSystem/flag-category",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRmxhZ0NhdGVnb3J5Q29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvRmxhZ0NhdGVnb3J5Q29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsZ0RBQWdEO0FBQ2hELGtDQUFrQztBQUNsQyxrRUFBa0U7QUFrRGxFOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sbUJBQW1CLEdBQTBCO0lBQ3hEOztPQUVHO0lBQ0gsY0FBYyxFQUFFO1FBQ2QsT0FBTyxFQUFFLGdCQUFnQjtRQUN6QixJQUFJLEVBQUUsT0FBTztRQUNiLE1BQU0sRUFBRSxxREFBcUQ7S0FDOUQ7SUFDRDs7T0FFRztJQUNILGdCQUFnQixFQUFFO1FBQ2hCLE9BQU8sRUFBRSxtQkFBbUI7UUFDNUIsSUFBSSxFQUFFLG1CQUFtQjtRQUN6QixNQUFNLEVBQUUscURBQXFEO0tBQzlEO0lBQ0Q7O09BRUc7SUFDSCxVQUFVLEVBQUU7UUFDVixPQUFPLEVBQUUsWUFBWTtRQUNyQixJQUFJLEVBQUUsWUFBWTtRQUNsQixNQUFNLEVBQUUscURBQXFEO0tBQzlEO0lBQ0Q7O09BRUc7SUFDSCxRQUFRLEVBQUU7UUFDUixPQUFPLEVBQUUsVUFBVTtRQUNuQixJQUFJLEVBQUUsVUFBVTtRQUNoQixNQUFNLEVBQUUscURBQXFEO0tBQzlEO0lBQ0Q7O09BRUc7SUFDSCxjQUFjLEVBQUU7UUFDZCxPQUFPLEVBQUUsaUJBQWlCO1FBQzFCLElBQUksRUFBRSxTQUFTO1FBQ2YsTUFBTSxFQUFFLHFEQUFxRDtLQUM5RDtJQUNEOztPQUVHO0lBQ0gsSUFBSSxFQUFFO1FBQ0osT0FBTyxFQUFFLE1BQU07UUFDZixJQUFJLEVBQUUsTUFBTTtRQUNaLE1BQU0sRUFBRSxxREFBcUQ7S0FDOUQ7SUFDRDs7T0FFRztJQUNILElBQUksRUFBRTtRQUNKLE9BQU8sRUFBRSxNQUFNO1FBQ2YsSUFBSSxFQUFFLE1BQU07UUFDWixNQUFNLEVBQUUscURBQXFEO0tBQzlEO0lBQ0Q7O09BRUc7SUFDSCxHQUFHLEVBQUU7UUFDSCxPQUFPLEVBQUUsS0FBSztRQUNkLElBQUksRUFBRSxLQUFLO1FBQ1gsTUFBTSxFQUFFLHFEQUFxRDtLQUM5RDtJQUNEOztPQUVHO0lBQ0gsUUFBUSxFQUFFO1FBQ1IsT0FBTyxFQUFFLFVBQVU7UUFDbkIsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLHFEQUFxRDtLQUM5RDtJQUNEOztPQUVHO0lBQ0gsTUFBTSxFQUFFO1FBQ04sT0FBTyxFQUFFLFFBQVE7UUFDakIsSUFBSSxFQUFFLFFBQVE7UUFDZCxNQUFNLEVBQUUscURBQXFEO0tBQzlEO0NBQ08sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNGIuY29yZSB2ZXJzaW9uOiA0LjMuMFxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvZmxhZy1jYXRlZ29yeXw0LjMuMFxyXG5cclxuaW1wb3J0IHsgQ29kaW5nQXJncyB9IGZyb20gJy4uL2ZoaXIvQ29kaW5nLmpzJ1xyXG5cclxuLyoqXHJcbiAqIEV4YW1wbGUgbGlzdCBvZiBnZW5lcmFsIGNhdGVnb3JpZXMgZm9yIGZsYWdnZWQgaXNzdWVzLiAoTm90IGNvbXBsZXRlIG9yIG5lY2Vzc2FyaWx5IGFwcHJvcHJpYXRlLilcclxuICovXHJcbmV4cG9ydCB0eXBlIEZsYWdDYXRlZ29yeUNvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogYWRtaW46IEZsYWdzIHJlbGF0ZWQgdG8gYWRtaW5pc3RyYXRpdmUgYW5kIGZpbmFuY2lhbCBwcm9jZXNzZXMuXHJcbiAgICovXHJcbiAgQWRtaW5pc3RyYXRpdmU6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogYWR2YW5jZS1kaXJlY3RpdmU6IEZsYWdzIHJlbGF0ZWQgdG8gc3ViamVjdCdzIGFkdmFuY2UgZGlyZWN0aXZlcy5cclxuICAgKi9cclxuICBBZHZhbmNlRGlyZWN0aXZlOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIGJlaGF2aW9yYWw6IEZsYWdzIHJlbGF0ZWQgdG8gYmVoYXZpb3IuXHJcbiAgICovXHJcbiAgQmVoYXZpb3JhbDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBjbGluaWNhbDogRmxhZ3MgcmVsYXRlZCB0byB0aGUgc3ViamVjdCdzIGNsaW5pY2FsIGRhdGEuXHJcbiAgICovXHJcbiAgQ2xpbmljYWw6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogY29udGFjdDogRmxhZ3MgcmVsYXRlZCB0byBjb21pbmcgaW50byBjb250YWN0IHdpdGggdGhlIHBhdGllbnQuXHJcbiAgICovXHJcbiAgU3ViamVjdENvbnRhY3Q6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogZGlldDogRmxhZ3MgcmVsYXRlZCB0byB0aGUgc3ViamVjdCdzIGRpZXRhcnkgbmVlZHMuXHJcbiAgICovXHJcbiAgRGlldDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBkcnVnOiBGbGFncyByZWxhdGVkIHRvIHRoZSBzdWJqZWN0J3MgbWVkaWNhdGlvbnMuXHJcbiAgICovXHJcbiAgRHJ1ZzogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBsYWI6IEZsYWdzIHJlbGF0ZWQgdG8gcGVyZm9ybWluZyBsYWJvcmF0b3J5IHRlc3RzIGFuZCByZWxhdGVkIHByb2Nlc3NlcyAoZS5nLiBwaGxlYm90b215KS5cclxuICAgKi9cclxuICBMYWI6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogcmVzZWFyY2g6IEZsYWdzIHJlbGF0ZWQgdG8gcmVzZWFyY2guXHJcbiAgICovXHJcbiAgUmVzZWFyY2g6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogc2FmZXR5OiBGbGFncyByZWxhdGVkIHRvIHNhZmV0eSBwcmVjYXV0aW9ucy5cclxuICAgKi9cclxuICBTYWZldHk6IENvZGluZ0FyZ3M7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBFeGFtcGxlIGxpc3Qgb2YgZ2VuZXJhbCBjYXRlZ29yaWVzIGZvciBmbGFnZ2VkIGlzc3Vlcy4gKE5vdCBjb21wbGV0ZSBvciBuZWNlc3NhcmlseSBhcHByb3ByaWF0ZS4pXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgRmxhZ0NhdGVnb3J5Q29kaW5nczpGbGFnQ2F0ZWdvcnlDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIGFkbWluOiBGbGFncyByZWxhdGVkIHRvIGFkbWluaXN0cmF0aXZlIGFuZCBmaW5hbmNpYWwgcHJvY2Vzc2VzLlxyXG4gICAqL1xyXG4gIEFkbWluaXN0cmF0aXZlOiB7XHJcbiAgICBkaXNwbGF5OiBcIkFkbWluaXN0cmF0aXZlXCIsXHJcbiAgICBjb2RlOiBcImFkbWluXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9mbGFnLWNhdGVnb3J5XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBhZHZhbmNlLWRpcmVjdGl2ZTogRmxhZ3MgcmVsYXRlZCB0byBzdWJqZWN0J3MgYWR2YW5jZSBkaXJlY3RpdmVzLlxyXG4gICAqL1xyXG4gIEFkdmFuY2VEaXJlY3RpdmU6IHtcclxuICAgIGRpc3BsYXk6IFwiQWR2YW5jZSBEaXJlY3RpdmVcIixcclxuICAgIGNvZGU6IFwiYWR2YW5jZS1kaXJlY3RpdmVcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2ZsYWctY2F0ZWdvcnlcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIGJlaGF2aW9yYWw6IEZsYWdzIHJlbGF0ZWQgdG8gYmVoYXZpb3IuXHJcbiAgICovXHJcbiAgQmVoYXZpb3JhbDoge1xyXG4gICAgZGlzcGxheTogXCJCZWhhdmlvcmFsXCIsXHJcbiAgICBjb2RlOiBcImJlaGF2aW9yYWxcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2ZsYWctY2F0ZWdvcnlcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIGNsaW5pY2FsOiBGbGFncyByZWxhdGVkIHRvIHRoZSBzdWJqZWN0J3MgY2xpbmljYWwgZGF0YS5cclxuICAgKi9cclxuICBDbGluaWNhbDoge1xyXG4gICAgZGlzcGxheTogXCJDbGluaWNhbFwiLFxyXG4gICAgY29kZTogXCJjbGluaWNhbFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vZmxhZy1jYXRlZ29yeVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogY29udGFjdDogRmxhZ3MgcmVsYXRlZCB0byBjb21pbmcgaW50byBjb250YWN0IHdpdGggdGhlIHBhdGllbnQuXHJcbiAgICovXHJcbiAgU3ViamVjdENvbnRhY3Q6IHtcclxuICAgIGRpc3BsYXk6IFwiU3ViamVjdCBDb250YWN0XCIsXHJcbiAgICBjb2RlOiBcImNvbnRhY3RcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2ZsYWctY2F0ZWdvcnlcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIGRpZXQ6IEZsYWdzIHJlbGF0ZWQgdG8gdGhlIHN1YmplY3QncyBkaWV0YXJ5IG5lZWRzLlxyXG4gICAqL1xyXG4gIERpZXQ6IHtcclxuICAgIGRpc3BsYXk6IFwiRGlldFwiLFxyXG4gICAgY29kZTogXCJkaWV0XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9mbGFnLWNhdGVnb3J5XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBkcnVnOiBGbGFncyByZWxhdGVkIHRvIHRoZSBzdWJqZWN0J3MgbWVkaWNhdGlvbnMuXHJcbiAgICovXHJcbiAgRHJ1Zzoge1xyXG4gICAgZGlzcGxheTogXCJEcnVnXCIsXHJcbiAgICBjb2RlOiBcImRydWdcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2ZsYWctY2F0ZWdvcnlcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIGxhYjogRmxhZ3MgcmVsYXRlZCB0byBwZXJmb3JtaW5nIGxhYm9yYXRvcnkgdGVzdHMgYW5kIHJlbGF0ZWQgcHJvY2Vzc2VzIChlLmcuIHBobGVib3RvbXkpLlxyXG4gICAqL1xyXG4gIExhYjoge1xyXG4gICAgZGlzcGxheTogXCJMYWJcIixcclxuICAgIGNvZGU6IFwibGFiXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9mbGFnLWNhdGVnb3J5XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiByZXNlYXJjaDogRmxhZ3MgcmVsYXRlZCB0byByZXNlYXJjaC5cclxuICAgKi9cclxuICBSZXNlYXJjaDoge1xyXG4gICAgZGlzcGxheTogXCJSZXNlYXJjaFwiLFxyXG4gICAgY29kZTogXCJyZXNlYXJjaFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vZmxhZy1jYXRlZ29yeVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogc2FmZXR5OiBGbGFncyByZWxhdGVkIHRvIHNhZmV0eSBwcmVjYXV0aW9ucy5cclxuICAgKi9cclxuICBTYWZldHk6IHtcclxuICAgIGRpc3BsYXk6IFwiU2FmZXR5XCIsXHJcbiAgICBjb2RlOiBcInNhZmV0eVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vZmxhZy1jYXRlZ29yeVwiLFxyXG4gIH0sXHJcbn0gYXMgY29uc3Q7XHJcbiJdfQ==