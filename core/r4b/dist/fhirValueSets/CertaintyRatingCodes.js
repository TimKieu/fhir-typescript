// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/certainty-rating|4.3.0
/**
 * The assessment of quality, confidence, or certainty.
 */
export const CertaintyRatingCodes = {
    /**
     * absent: possible reason for increasing quality rating was checked and found to be absent.
     */
    Absent: "absent",
    /**
     * downcode1: reduce quality rating by 1.
     */
    ReduceRating1: "downcode1",
    /**
     * downcode2: reduce quality rating by 2.
     */
    ReduceRating2: "downcode2",
    /**
     * downcode3: reduce quality rating by 3.
     */
    ReduceRating3: "downcode3",
    /**
     * extremely-serious-concern: extremely serious concern.
     */
    ExtremelySeriousConcern: "extremely-serious-concern",
    /**
     * high: High quality evidence.
     */
    HighQuality: "high",
    /**
     * low: Low quality evidence.
     */
    LowQuality: "low",
    /**
     * moderate: Moderate quality evidence.
     */
    ModerateQuality: "moderate",
    /**
     * no-change: no change to quality rating.
     */
    NoChangeToRating: "no-change",
    /**
     * no-concern: no serious concern.
     */
    NoSeriousConcern: "no-concern",
    /**
     * present: possible reason for increasing quality rating was checked and found to be present.
     */
    Present: "present",
    /**
     * serious-concern: serious concern.
     */
    SeriousConcern: "serious-concern",
    /**
     * upcode1: increase quality rating by 1.
     */
    IncreaseRatingPlus1: "upcode1",
    /**
     * upcode2: increase quality rating by 2.
     */
    IncreaseRatingPlus2: "upcode2",
    /**
     * very-low: Very low quality evidence.
     */
    VeryLowQuality: "very-low",
    /**
     * very-serious-concern: very serious concern.
     */
    VerySeriousConcern: "very-serious-concern",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2VydGFpbnR5UmF0aW5nQ29kZXMuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL0NlcnRhaW50eVJhdGluZ0NvZGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQixnREFBZ0Q7QUFDaEQsa0NBQWtDO0FBQ2xDLHFFQUFxRTtBQUVyRTs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLG9CQUFvQixHQUFHO0lBQ2xDOztPQUVHO0lBQ0gsTUFBTSxFQUFFLFFBQVE7SUFDaEI7O09BRUc7SUFDSCxhQUFhLEVBQUUsV0FBVztJQUMxQjs7T0FFRztJQUNILGFBQWEsRUFBRSxXQUFXO0lBQzFCOztPQUVHO0lBQ0gsYUFBYSxFQUFFLFdBQVc7SUFDMUI7O09BRUc7SUFDSCx1QkFBdUIsRUFBRSwyQkFBMkI7SUFDcEQ7O09BRUc7SUFDSCxXQUFXLEVBQUUsTUFBTTtJQUNuQjs7T0FFRztJQUNILFVBQVUsRUFBRSxLQUFLO0lBQ2pCOztPQUVHO0lBQ0gsZUFBZSxFQUFFLFVBQVU7SUFDM0I7O09BRUc7SUFDSCxnQkFBZ0IsRUFBRSxXQUFXO0lBQzdCOztPQUVHO0lBQ0gsZ0JBQWdCLEVBQUUsWUFBWTtJQUM5Qjs7T0FFRztJQUNILE9BQU8sRUFBRSxTQUFTO0lBQ2xCOztPQUVHO0lBQ0gsY0FBYyxFQUFFLGlCQUFpQjtJQUNqQzs7T0FFRztJQUNILG1CQUFtQixFQUFFLFNBQVM7SUFDOUI7O09BRUc7SUFDSCxtQkFBbUIsRUFBRSxTQUFTO0lBQzlCOztPQUVHO0lBQ0gsY0FBYyxFQUFFLFVBQVU7SUFDMUI7O09BRUc7SUFDSCxrQkFBa0IsRUFBRSxzQkFBc0I7Q0FDbEMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNGIuY29yZSB2ZXJzaW9uOiA0LjMuMFxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvY2VydGFpbnR5LXJhdGluZ3w0LjMuMFxyXG5cclxuLyoqXHJcbiAqIFRoZSBhc3Nlc3NtZW50IG9mIHF1YWxpdHksIGNvbmZpZGVuY2UsIG9yIGNlcnRhaW50eS5cclxuICovXHJcbmV4cG9ydCBjb25zdCBDZXJ0YWludHlSYXRpbmdDb2RlcyA9IHtcclxuICAvKipcclxuICAgKiBhYnNlbnQ6IHBvc3NpYmxlIHJlYXNvbiBmb3IgaW5jcmVhc2luZyBxdWFsaXR5IHJhdGluZyB3YXMgY2hlY2tlZCBhbmQgZm91bmQgdG8gYmUgYWJzZW50LlxyXG4gICAqL1xyXG4gIEFic2VudDogXCJhYnNlbnRcIixcclxuICAvKipcclxuICAgKiBkb3duY29kZTE6IHJlZHVjZSBxdWFsaXR5IHJhdGluZyBieSAxLlxyXG4gICAqL1xyXG4gIFJlZHVjZVJhdGluZzE6IFwiZG93bmNvZGUxXCIsXHJcbiAgLyoqXHJcbiAgICogZG93bmNvZGUyOiByZWR1Y2UgcXVhbGl0eSByYXRpbmcgYnkgMi5cclxuICAgKi9cclxuICBSZWR1Y2VSYXRpbmcyOiBcImRvd25jb2RlMlwiLFxyXG4gIC8qKlxyXG4gICAqIGRvd25jb2RlMzogcmVkdWNlIHF1YWxpdHkgcmF0aW5nIGJ5IDMuXHJcbiAgICovXHJcbiAgUmVkdWNlUmF0aW5nMzogXCJkb3duY29kZTNcIixcclxuICAvKipcclxuICAgKiBleHRyZW1lbHktc2VyaW91cy1jb25jZXJuOiBleHRyZW1lbHkgc2VyaW91cyBjb25jZXJuLlxyXG4gICAqL1xyXG4gIEV4dHJlbWVseVNlcmlvdXNDb25jZXJuOiBcImV4dHJlbWVseS1zZXJpb3VzLWNvbmNlcm5cIixcclxuICAvKipcclxuICAgKiBoaWdoOiBIaWdoIHF1YWxpdHkgZXZpZGVuY2UuXHJcbiAgICovXHJcbiAgSGlnaFF1YWxpdHk6IFwiaGlnaFwiLFxyXG4gIC8qKlxyXG4gICAqIGxvdzogTG93IHF1YWxpdHkgZXZpZGVuY2UuXHJcbiAgICovXHJcbiAgTG93UXVhbGl0eTogXCJsb3dcIixcclxuICAvKipcclxuICAgKiBtb2RlcmF0ZTogTW9kZXJhdGUgcXVhbGl0eSBldmlkZW5jZS5cclxuICAgKi9cclxuICBNb2RlcmF0ZVF1YWxpdHk6IFwibW9kZXJhdGVcIixcclxuICAvKipcclxuICAgKiBuby1jaGFuZ2U6IG5vIGNoYW5nZSB0byBxdWFsaXR5IHJhdGluZy5cclxuICAgKi9cclxuICBOb0NoYW5nZVRvUmF0aW5nOiBcIm5vLWNoYW5nZVwiLFxyXG4gIC8qKlxyXG4gICAqIG5vLWNvbmNlcm46IG5vIHNlcmlvdXMgY29uY2Vybi5cclxuICAgKi9cclxuICBOb1NlcmlvdXNDb25jZXJuOiBcIm5vLWNvbmNlcm5cIixcclxuICAvKipcclxuICAgKiBwcmVzZW50OiBwb3NzaWJsZSByZWFzb24gZm9yIGluY3JlYXNpbmcgcXVhbGl0eSByYXRpbmcgd2FzIGNoZWNrZWQgYW5kIGZvdW5kIHRvIGJlIHByZXNlbnQuXHJcbiAgICovXHJcbiAgUHJlc2VudDogXCJwcmVzZW50XCIsXHJcbiAgLyoqXHJcbiAgICogc2VyaW91cy1jb25jZXJuOiBzZXJpb3VzIGNvbmNlcm4uXHJcbiAgICovXHJcbiAgU2VyaW91c0NvbmNlcm46IFwic2VyaW91cy1jb25jZXJuXCIsXHJcbiAgLyoqXHJcbiAgICogdXBjb2RlMTogaW5jcmVhc2UgcXVhbGl0eSByYXRpbmcgYnkgMS5cclxuICAgKi9cclxuICBJbmNyZWFzZVJhdGluZ1BsdXMxOiBcInVwY29kZTFcIixcclxuICAvKipcclxuICAgKiB1cGNvZGUyOiBpbmNyZWFzZSBxdWFsaXR5IHJhdGluZyBieSAyLlxyXG4gICAqL1xyXG4gIEluY3JlYXNlUmF0aW5nUGx1czI6IFwidXBjb2RlMlwiLFxyXG4gIC8qKlxyXG4gICAqIHZlcnktbG93OiBWZXJ5IGxvdyBxdWFsaXR5IGV2aWRlbmNlLlxyXG4gICAqL1xyXG4gIFZlcnlMb3dRdWFsaXR5OiBcInZlcnktbG93XCIsXHJcbiAgLyoqXHJcbiAgICogdmVyeS1zZXJpb3VzLWNvbmNlcm46IHZlcnkgc2VyaW91cyBjb25jZXJuLlxyXG4gICAqL1xyXG4gIFZlcnlTZXJpb3VzQ29uY2VybjogXCJ2ZXJ5LXNlcmlvdXMtY29uY2VyblwiLFxyXG59IGFzIGNvbnN0O1xyXG5cclxuLyoqXHJcbiAqIFRoZSBhc3Nlc3NtZW50IG9mIHF1YWxpdHksIGNvbmZpZGVuY2UsIG9yIGNlcnRhaW50eS5cclxuICovXHJcbmV4cG9ydCB0eXBlIENlcnRhaW50eVJhdGluZ0NvZGVUeXBlID0gdHlwZW9mIENlcnRhaW50eVJhdGluZ0NvZGVzW2tleW9mIHR5cGVvZiBDZXJ0YWludHlSYXRpbmdDb2Rlc107XHJcbiJdfQ==