// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/knowledge-resource-types|4.3.0
/**
 * A list of all the knowledge resource types defined in this version of the FHIR specification.
 */
export const KnowledgeResourceTypesCodes = {
    /**
     * ActivityDefinition: The definition of a specific activity to be taken, independent of any particular patient or context.
     */
    ActivityDefinition: "ActivityDefinition",
    /**
     * CodeSystem: A set of codes drawn from one or more code systems.
     */
    CodeSystem: "CodeSystem",
    /**
     * ConceptMap: A map from one set of concepts to one or more other concepts.
     */
    ConceptMap: "ConceptMap",
    /**
     * Library: Represents a library of quality improvement components.
     */
    Library: "Library",
    /**
     * Measure: A quality measure definition.
     */
    Measure: "Measure",
    /**
     * PlanDefinition: The definition of a plan for a series of actions, independent of any specific patient or context.
     */
    PlanDefinition: "PlanDefinition",
    /**
     * StructureDefinition: Structural Definition.
     */
    StructureDefinition: "StructureDefinition",
    /**
     * StructureMap: A Map of relationships between 2 structures that can be used to transform data.
     */
    StructureMap: "StructureMap",
    /**
     * ValueSet: A set of codes drawn from one or more code systems.
     */
    ValueSet: "ValueSet",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiS25vd2xlZGdlUmVzb3VyY2VUeXBlc0NvZGVzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9Lbm93bGVkZ2VSZXNvdXJjZVR5cGVzQ29kZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLGdEQUFnRDtBQUNoRCxrQ0FBa0M7QUFDbEMsNkVBQTZFO0FBRTdFOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sMkJBQTJCLEdBQUc7SUFDekM7O09BRUc7SUFDSCxrQkFBa0IsRUFBRSxvQkFBb0I7SUFDeEM7O09BRUc7SUFDSCxVQUFVLEVBQUUsWUFBWTtJQUN4Qjs7T0FFRztJQUNILFVBQVUsRUFBRSxZQUFZO0lBQ3hCOztPQUVHO0lBQ0gsT0FBTyxFQUFFLFNBQVM7SUFDbEI7O09BRUc7SUFDSCxPQUFPLEVBQUUsU0FBUztJQUNsQjs7T0FFRztJQUNILGNBQWMsRUFBRSxnQkFBZ0I7SUFDaEM7O09BRUc7SUFDSCxtQkFBbUIsRUFBRSxxQkFBcUI7SUFDMUM7O09BRUc7SUFDSCxZQUFZLEVBQUUsY0FBYztJQUM1Qjs7T0FFRztJQUNILFFBQVEsRUFBRSxVQUFVO0NBQ1osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNGIuY29yZSB2ZXJzaW9uOiA0LjMuMFxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQva25vd2xlZGdlLXJlc291cmNlLXR5cGVzfDQuMy4wXHJcblxyXG4vKipcclxuICogQSBsaXN0IG9mIGFsbCB0aGUga25vd2xlZGdlIHJlc291cmNlIHR5cGVzIGRlZmluZWQgaW4gdGhpcyB2ZXJzaW9uIG9mIHRoZSBGSElSIHNwZWNpZmljYXRpb24uXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgS25vd2xlZGdlUmVzb3VyY2VUeXBlc0NvZGVzID0ge1xyXG4gIC8qKlxyXG4gICAqIEFjdGl2aXR5RGVmaW5pdGlvbjogVGhlIGRlZmluaXRpb24gb2YgYSBzcGVjaWZpYyBhY3Rpdml0eSB0byBiZSB0YWtlbiwgaW5kZXBlbmRlbnQgb2YgYW55IHBhcnRpY3VsYXIgcGF0aWVudCBvciBjb250ZXh0LlxyXG4gICAqL1xyXG4gIEFjdGl2aXR5RGVmaW5pdGlvbjogXCJBY3Rpdml0eURlZmluaXRpb25cIixcclxuICAvKipcclxuICAgKiBDb2RlU3lzdGVtOiBBIHNldCBvZiBjb2RlcyBkcmF3biBmcm9tIG9uZSBvciBtb3JlIGNvZGUgc3lzdGVtcy5cclxuICAgKi9cclxuICBDb2RlU3lzdGVtOiBcIkNvZGVTeXN0ZW1cIixcclxuICAvKipcclxuICAgKiBDb25jZXB0TWFwOiBBIG1hcCBmcm9tIG9uZSBzZXQgb2YgY29uY2VwdHMgdG8gb25lIG9yIG1vcmUgb3RoZXIgY29uY2VwdHMuXHJcbiAgICovXHJcbiAgQ29uY2VwdE1hcDogXCJDb25jZXB0TWFwXCIsXHJcbiAgLyoqXHJcbiAgICogTGlicmFyeTogUmVwcmVzZW50cyBhIGxpYnJhcnkgb2YgcXVhbGl0eSBpbXByb3ZlbWVudCBjb21wb25lbnRzLlxyXG4gICAqL1xyXG4gIExpYnJhcnk6IFwiTGlicmFyeVwiLFxyXG4gIC8qKlxyXG4gICAqIE1lYXN1cmU6IEEgcXVhbGl0eSBtZWFzdXJlIGRlZmluaXRpb24uXHJcbiAgICovXHJcbiAgTWVhc3VyZTogXCJNZWFzdXJlXCIsXHJcbiAgLyoqXHJcbiAgICogUGxhbkRlZmluaXRpb246IFRoZSBkZWZpbml0aW9uIG9mIGEgcGxhbiBmb3IgYSBzZXJpZXMgb2YgYWN0aW9ucywgaW5kZXBlbmRlbnQgb2YgYW55IHNwZWNpZmljIHBhdGllbnQgb3IgY29udGV4dC5cclxuICAgKi9cclxuICBQbGFuRGVmaW5pdGlvbjogXCJQbGFuRGVmaW5pdGlvblwiLFxyXG4gIC8qKlxyXG4gICAqIFN0cnVjdHVyZURlZmluaXRpb246IFN0cnVjdHVyYWwgRGVmaW5pdGlvbi5cclxuICAgKi9cclxuICBTdHJ1Y3R1cmVEZWZpbml0aW9uOiBcIlN0cnVjdHVyZURlZmluaXRpb25cIixcclxuICAvKipcclxuICAgKiBTdHJ1Y3R1cmVNYXA6IEEgTWFwIG9mIHJlbGF0aW9uc2hpcHMgYmV0d2VlbiAyIHN0cnVjdHVyZXMgdGhhdCBjYW4gYmUgdXNlZCB0byB0cmFuc2Zvcm0gZGF0YS5cclxuICAgKi9cclxuICBTdHJ1Y3R1cmVNYXA6IFwiU3RydWN0dXJlTWFwXCIsXHJcbiAgLyoqXHJcbiAgICogVmFsdWVTZXQ6IEEgc2V0IG9mIGNvZGVzIGRyYXduIGZyb20gb25lIG9yIG1vcmUgY29kZSBzeXN0ZW1zLlxyXG4gICAqL1xyXG4gIFZhbHVlU2V0OiBcIlZhbHVlU2V0XCIsXHJcbn0gYXMgY29uc3Q7XHJcblxyXG4vKipcclxuICogQSBsaXN0IG9mIGFsbCB0aGUga25vd2xlZGdlIHJlc291cmNlIHR5cGVzIGRlZmluZWQgaW4gdGhpcyB2ZXJzaW9uIG9mIHRoZSBGSElSIHNwZWNpZmljYXRpb24uXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBLbm93bGVkZ2VSZXNvdXJjZVR5cGVzQ29kZVR5cGUgPSB0eXBlb2YgS25vd2xlZGdlUmVzb3VyY2VUeXBlc0NvZGVzW2tleW9mIHR5cGVvZiBLbm93bGVkZ2VSZXNvdXJjZVR5cGVzQ29kZXNdO1xyXG4iXX0=