// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/encounter-diet|4.3.0
/**
 * This value set defines a set of codes that can be used to indicate dietary preferences or restrictions a patient may have.
 */
export const EncounterDietCodings = {
    /**
     * dairy-free: Excludes dairy products.
     */
    DairyFree: {
        display: "Dairy Free",
        code: "dairy-free",
        system: "http://terminology.hl7.org/CodeSystem/diet",
    },
    /**
     * gluten-free: Excludes ingredients containing gluten.
     */
    GlutenFree: {
        display: "Gluten Free",
        code: "gluten-free",
        system: "http://terminology.hl7.org/CodeSystem/diet",
    },
    /**
     * halal: Foods that conform to Islamic law.
     */
    Halal: {
        display: "Halal",
        code: "halal",
        system: "http://terminology.hl7.org/CodeSystem/diet",
    },
    /**
     * kosher: Foods that conform to Jewish dietary law.
     */
    Kosher: {
        display: "Kosher",
        code: "kosher",
        system: "http://terminology.hl7.org/CodeSystem/diet",
    },
    /**
     * nut-free: Excludes ingredients containing nuts.
     */
    NutFree: {
        display: "Nut Free",
        code: "nut-free",
        system: "http://terminology.hl7.org/CodeSystem/diet",
    },
    /**
     * vegan: Food without meat, poultry, seafood, eggs, dairy products and other animal-derived substances.
     */
    Vegan: {
        display: "Vegan",
        code: "vegan",
        system: "http://terminology.hl7.org/CodeSystem/diet",
    },
    /**
     * vegetarian: Food without meat, poultry or seafood.
     */
    Vegetarian: {
        display: "Vegetarian",
        code: "vegetarian",
        system: "http://terminology.hl7.org/CodeSystem/diet",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRW5jb3VudGVyRGlldENvZGluZ3MuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL0VuY291bnRlckRpZXRDb2RpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQixnREFBZ0Q7QUFDaEQsa0NBQWtDO0FBQ2xDLG1FQUFtRTtBQXNDbkU7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxvQkFBb0IsR0FBMkI7SUFDMUQ7O09BRUc7SUFDSCxTQUFTLEVBQUU7UUFDVCxPQUFPLEVBQUUsWUFBWTtRQUNyQixJQUFJLEVBQUUsWUFBWTtRQUNsQixNQUFNLEVBQUUsNENBQTRDO0tBQ3JEO0lBQ0Q7O09BRUc7SUFDSCxVQUFVLEVBQUU7UUFDVixPQUFPLEVBQUUsYUFBYTtRQUN0QixJQUFJLEVBQUUsYUFBYTtRQUNuQixNQUFNLEVBQUUsNENBQTRDO0tBQ3JEO0lBQ0Q7O09BRUc7SUFDSCxLQUFLLEVBQUU7UUFDTCxPQUFPLEVBQUUsT0FBTztRQUNoQixJQUFJLEVBQUUsT0FBTztRQUNiLE1BQU0sRUFBRSw0Q0FBNEM7S0FDckQ7SUFDRDs7T0FFRztJQUNILE1BQU0sRUFBRTtRQUNOLE9BQU8sRUFBRSxRQUFRO1FBQ2pCLElBQUksRUFBRSxRQUFRO1FBQ2QsTUFBTSxFQUFFLDRDQUE0QztLQUNyRDtJQUNEOztPQUVHO0lBQ0gsT0FBTyxFQUFFO1FBQ1AsT0FBTyxFQUFFLFVBQVU7UUFDbkIsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLDRDQUE0QztLQUNyRDtJQUNEOztPQUVHO0lBQ0gsS0FBSyxFQUFFO1FBQ0wsT0FBTyxFQUFFLE9BQU87UUFDaEIsSUFBSSxFQUFFLE9BQU87UUFDYixNQUFNLEVBQUUsNENBQTRDO0tBQ3JEO0lBQ0Q7O09BRUc7SUFDSCxVQUFVLEVBQUU7UUFDVixPQUFPLEVBQUUsWUFBWTtRQUNyQixJQUFJLEVBQUUsWUFBWTtRQUNsQixNQUFNLEVBQUUsNENBQTRDO0tBQ3JEO0NBQ08sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNGIuY29yZSB2ZXJzaW9uOiA0LjMuMFxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvZW5jb3VudGVyLWRpZXR8NC4zLjBcclxuXHJcbmltcG9ydCB7IENvZGluZ0FyZ3MgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiBUaGlzIHZhbHVlIHNldCBkZWZpbmVzIGEgc2V0IG9mIGNvZGVzIHRoYXQgY2FuIGJlIHVzZWQgdG8gaW5kaWNhdGUgZGlldGFyeSBwcmVmZXJlbmNlcyBvciByZXN0cmljdGlvbnMgYSBwYXRpZW50IG1heSBoYXZlLlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgRW5jb3VudGVyRGlldENvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogZGFpcnktZnJlZTogRXhjbHVkZXMgZGFpcnkgcHJvZHVjdHMuXHJcbiAgICovXHJcbiAgRGFpcnlGcmVlOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIGdsdXRlbi1mcmVlOiBFeGNsdWRlcyBpbmdyZWRpZW50cyBjb250YWluaW5nIGdsdXRlbi5cclxuICAgKi9cclxuICBHbHV0ZW5GcmVlOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIGhhbGFsOiBGb29kcyB0aGF0IGNvbmZvcm0gdG8gSXNsYW1pYyBsYXcuXHJcbiAgICovXHJcbiAgSGFsYWw6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICoga29zaGVyOiBGb29kcyB0aGF0IGNvbmZvcm0gdG8gSmV3aXNoIGRpZXRhcnkgbGF3LlxyXG4gICAqL1xyXG4gIEtvc2hlcjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBudXQtZnJlZTogRXhjbHVkZXMgaW5ncmVkaWVudHMgY29udGFpbmluZyBudXRzLlxyXG4gICAqL1xyXG4gIE51dEZyZWU6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogdmVnYW46IEZvb2Qgd2l0aG91dCBtZWF0LCBwb3VsdHJ5LCBzZWFmb29kLCBlZ2dzLCBkYWlyeSBwcm9kdWN0cyBhbmQgb3RoZXIgYW5pbWFsLWRlcml2ZWQgc3Vic3RhbmNlcy5cclxuICAgKi9cclxuICBWZWdhbjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiB2ZWdldGFyaWFuOiBGb29kIHdpdGhvdXQgbWVhdCwgcG91bHRyeSBvciBzZWFmb29kLlxyXG4gICAqL1xyXG4gIFZlZ2V0YXJpYW46IENvZGluZ0FyZ3M7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBUaGlzIHZhbHVlIHNldCBkZWZpbmVzIGEgc2V0IG9mIGNvZGVzIHRoYXQgY2FuIGJlIHVzZWQgdG8gaW5kaWNhdGUgZGlldGFyeSBwcmVmZXJlbmNlcyBvciByZXN0cmljdGlvbnMgYSBwYXRpZW50IG1heSBoYXZlLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IEVuY291bnRlckRpZXRDb2RpbmdzOkVuY291bnRlckRpZXRDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIGRhaXJ5LWZyZWU6IEV4Y2x1ZGVzIGRhaXJ5IHByb2R1Y3RzLlxyXG4gICAqL1xyXG4gIERhaXJ5RnJlZToge1xyXG4gICAgZGlzcGxheTogXCJEYWlyeSBGcmVlXCIsXHJcbiAgICBjb2RlOiBcImRhaXJ5LWZyZWVcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2RpZXRcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIGdsdXRlbi1mcmVlOiBFeGNsdWRlcyBpbmdyZWRpZW50cyBjb250YWluaW5nIGdsdXRlbi5cclxuICAgKi9cclxuICBHbHV0ZW5GcmVlOiB7XHJcbiAgICBkaXNwbGF5OiBcIkdsdXRlbiBGcmVlXCIsXHJcbiAgICBjb2RlOiBcImdsdXRlbi1mcmVlXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9kaWV0XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBoYWxhbDogRm9vZHMgdGhhdCBjb25mb3JtIHRvIElzbGFtaWMgbGF3LlxyXG4gICAqL1xyXG4gIEhhbGFsOiB7XHJcbiAgICBkaXNwbGF5OiBcIkhhbGFsXCIsXHJcbiAgICBjb2RlOiBcImhhbGFsXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9kaWV0XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBrb3NoZXI6IEZvb2RzIHRoYXQgY29uZm9ybSB0byBKZXdpc2ggZGlldGFyeSBsYXcuXHJcbiAgICovXHJcbiAgS29zaGVyOiB7XHJcbiAgICBkaXNwbGF5OiBcIktvc2hlclwiLFxyXG4gICAgY29kZTogXCJrb3NoZXJcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2RpZXRcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIG51dC1mcmVlOiBFeGNsdWRlcyBpbmdyZWRpZW50cyBjb250YWluaW5nIG51dHMuXHJcbiAgICovXHJcbiAgTnV0RnJlZToge1xyXG4gICAgZGlzcGxheTogXCJOdXQgRnJlZVwiLFxyXG4gICAgY29kZTogXCJudXQtZnJlZVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vZGlldFwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogdmVnYW46IEZvb2Qgd2l0aG91dCBtZWF0LCBwb3VsdHJ5LCBzZWFmb29kLCBlZ2dzLCBkYWlyeSBwcm9kdWN0cyBhbmQgb3RoZXIgYW5pbWFsLWRlcml2ZWQgc3Vic3RhbmNlcy5cclxuICAgKi9cclxuICBWZWdhbjoge1xyXG4gICAgZGlzcGxheTogXCJWZWdhblwiLFxyXG4gICAgY29kZTogXCJ2ZWdhblwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vZGlldFwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogdmVnZXRhcmlhbjogRm9vZCB3aXRob3V0IG1lYXQsIHBvdWx0cnkgb3Igc2VhZm9vZC5cclxuICAgKi9cclxuICBWZWdldGFyaWFuOiB7XHJcbiAgICBkaXNwbGF5OiBcIlZlZ2V0YXJpYW5cIixcclxuICAgIGNvZGU6IFwidmVnZXRhcmlhblwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vZGlldFwiLFxyXG4gIH0sXHJcbn0gYXMgY29uc3Q7XHJcbiJdfQ==