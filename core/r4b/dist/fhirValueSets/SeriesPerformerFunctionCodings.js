// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/series-performer-function|4.3.0
/**
 * Performer function of an agent in an imaging study series
 */
export const SeriesPerformerFunctionCodings = {
    /**
     * Code: CON
     */
    Consultant: {
        display: "consultant",
        code: "CON",
        system: "http://terminology.hl7.org/CodeSystem/v3-ParticipationType",
    },
    /**
     * Code: PRF
     */
    Performer: {
        display: "performer",
        code: "PRF",
        system: "http://terminology.hl7.org/CodeSystem/v3-ParticipationType",
    },
    /**
     * Code: REF
     */
    Referrer: {
        display: "referrer",
        code: "REF",
        system: "http://terminology.hl7.org/CodeSystem/v3-ParticipationType",
    },
    /**
     * Code: SPRF
     */
    SecondaryPerformer: {
        display: "secondary performer",
        code: "SPRF",
        system: "http://terminology.hl7.org/CodeSystem/v3-ParticipationType",
    },
    /**
     * Code: VRF
     */
    Verifier: {
        display: "verifier",
        code: "VRF",
        system: "http://terminology.hl7.org/CodeSystem/v3-ParticipationType",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2VyaWVzUGVyZm9ybWVyRnVuY3Rpb25Db2RpbmdzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9TZXJpZXNQZXJmb3JtZXJGdW5jdGlvbkNvZGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLGdEQUFnRDtBQUNoRCxrQ0FBa0M7QUFDbEMsOEVBQThFO0FBOEI5RTs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLDhCQUE4QixHQUFxQztJQUM5RTs7T0FFRztJQUNILFVBQVUsRUFBRTtRQUNWLE9BQU8sRUFBRSxZQUFZO1FBQ3JCLElBQUksRUFBRSxLQUFLO1FBQ1gsTUFBTSxFQUFFLDREQUE0RDtLQUNyRTtJQUNEOztPQUVHO0lBQ0gsU0FBUyxFQUFFO1FBQ1QsT0FBTyxFQUFFLFdBQVc7UUFDcEIsSUFBSSxFQUFFLEtBQUs7UUFDWCxNQUFNLEVBQUUsNERBQTREO0tBQ3JFO0lBQ0Q7O09BRUc7SUFDSCxRQUFRLEVBQUU7UUFDUixPQUFPLEVBQUUsVUFBVTtRQUNuQixJQUFJLEVBQUUsS0FBSztRQUNYLE1BQU0sRUFBRSw0REFBNEQ7S0FDckU7SUFDRDs7T0FFRztJQUNILGtCQUFrQixFQUFFO1FBQ2xCLE9BQU8sRUFBRSxxQkFBcUI7UUFDOUIsSUFBSSxFQUFFLE1BQU07UUFDWixNQUFNLEVBQUUsNERBQTREO0tBQ3JFO0lBQ0Q7O09BRUc7SUFDSCxRQUFRLEVBQUU7UUFDUixPQUFPLEVBQUUsVUFBVTtRQUNuQixJQUFJLEVBQUUsS0FBSztRQUNYLE1BQU0sRUFBRSw0REFBNEQ7S0FDckU7Q0FDTyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0Yi5jb3JlIHZlcnNpb246IDQuMy4wXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9zZXJpZXMtcGVyZm9ybWVyLWZ1bmN0aW9ufDQuMy4wXHJcblxyXG5pbXBvcnQgeyBDb2RpbmdBcmdzIH0gZnJvbSAnLi4vZmhpci9Db2RpbmcuanMnXHJcblxyXG4vKipcclxuICogUGVyZm9ybWVyIGZ1bmN0aW9uIG9mIGFuIGFnZW50IGluIGFuIGltYWdpbmcgc3R1ZHkgc2VyaWVzXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBTZXJpZXNQZXJmb3JtZXJGdW5jdGlvbkNvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogQ09OXHJcbiAgICovXHJcbiAgQ29uc3VsdGFudDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiBQUkZcclxuICAgKi9cclxuICBQZXJmb3JtZXI6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogUkVGXHJcbiAgICovXHJcbiAgUmVmZXJyZXI6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogU1BSRlxyXG4gICAqL1xyXG4gIFNlY29uZGFyeVBlcmZvcm1lcjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiBWUkZcclxuICAgKi9cclxuICBWZXJpZmllcjogQ29kaW5nQXJncztcclxufVxyXG5cclxuLyoqXHJcbiAqIFBlcmZvcm1lciBmdW5jdGlvbiBvZiBhbiBhZ2VudCBpbiBhbiBpbWFnaW5nIHN0dWR5IHNlcmllc1xyXG4gKi9cclxuZXhwb3J0IGNvbnN0IFNlcmllc1BlcmZvcm1lckZ1bmN0aW9uQ29kaW5nczpTZXJpZXNQZXJmb3JtZXJGdW5jdGlvbkNvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogQ09OXHJcbiAgICovXHJcbiAgQ29uc3VsdGFudDoge1xyXG4gICAgZGlzcGxheTogXCJjb25zdWx0YW50XCIsXHJcbiAgICBjb2RlOiBcIkNPTlwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vdjMtUGFydGljaXBhdGlvblR5cGVcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IFBSRlxyXG4gICAqL1xyXG4gIFBlcmZvcm1lcjoge1xyXG4gICAgZGlzcGxheTogXCJwZXJmb3JtZXJcIixcclxuICAgIGNvZGU6IFwiUFJGXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS92My1QYXJ0aWNpcGF0aW9uVHlwZVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogUkVGXHJcbiAgICovXHJcbiAgUmVmZXJyZXI6IHtcclxuICAgIGRpc3BsYXk6IFwicmVmZXJyZXJcIixcclxuICAgIGNvZGU6IFwiUkVGXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS92My1QYXJ0aWNpcGF0aW9uVHlwZVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogU1BSRlxyXG4gICAqL1xyXG4gIFNlY29uZGFyeVBlcmZvcm1lcjoge1xyXG4gICAgZGlzcGxheTogXCJzZWNvbmRhcnkgcGVyZm9ybWVyXCIsXHJcbiAgICBjb2RlOiBcIlNQUkZcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL3YzLVBhcnRpY2lwYXRpb25UeXBlXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiBWUkZcclxuICAgKi9cclxuICBWZXJpZmllcjoge1xyXG4gICAgZGlzcGxheTogXCJ2ZXJpZmllclwiLFxyXG4gICAgY29kZTogXCJWUkZcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL3YzLVBhcnRpY2lwYXRpb25UeXBlXCIsXHJcbiAgfSxcclxufSBhcyBjb25zdDtcclxuIl19