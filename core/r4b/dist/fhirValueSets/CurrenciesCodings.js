// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/currencies|4.3.0
/**
 * Currency codes from ISO 4217 (see https://www.iso.org/iso-4217-currency-codes.html)
 */
export const CurrenciesCodings = {
    /**
     * Code: AED
     */
    UnitedArabEmiratesDirham: {
        display: "United Arab Emirates dirham",
        code: "AED",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: AFN
     */
    AfghanAfghani: {
        display: "Afghan afghani",
        code: "AFN",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: ALL
     */
    AlbanianLek: {
        display: "Albanian lek",
        code: "ALL",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: AMD
     */
    ArmenianDram: {
        display: "Armenian dram",
        code: "AMD",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: ANG
     */
    NetherlandsAntilleanGuilder: {
        display: "Netherlands Antillean guilder",
        code: "ANG",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: AOA
     */
    AngolanKwanza: {
        display: "Angolan kwanza",
        code: "AOA",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: ARS
     */
    ArgentinePeso: {
        display: "Argentine peso",
        code: "ARS",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: AUD
     */
    AustralianDollar: {
        display: "Australian dollar",
        code: "AUD",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: AWG
     */
    ArubanFlorin: {
        display: "Aruban florin",
        code: "AWG",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: AZN
     */
    AzerbaijaniManat: {
        display: "Azerbaijani manat",
        code: "AZN",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: BAM
     */
    BosniaAndHerzegovinaConvertibleMark: {
        display: "Bosnia and Herzegovina convertible mark",
        code: "BAM",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: BBD
     */
    BarbadosDollar: {
        display: "Barbados dollar",
        code: "BBD",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: BDT
     */
    BangladeshiTaka: {
        display: "Bangladeshi taka",
        code: "BDT",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: BGN
     */
    BulgarianLev: {
        display: "Bulgarian lev",
        code: "BGN",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: BHD
     */
    BahrainiDinar: {
        display: "Bahraini dinar",
        code: "BHD",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: BIF
     */
    BurundianFranc: {
        display: "Burundian franc",
        code: "BIF",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: BMD
     */
    BermudianDollar: {
        display: "Bermudian dollar",
        code: "BMD",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: BND
     */
    BruneiDollar: {
        display: "Brunei dollar",
        code: "BND",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: BOB
     */
    Boliviano: {
        display: "Boliviano",
        code: "BOB",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: BOV
     */
    BolivianMvdolFundsCode: {
        display: "Bolivian Mvdol (funds code)",
        code: "BOV",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: BRL
     */
    BrazilianReal: {
        display: "Brazilian real",
        code: "BRL",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: BSD
     */
    BahamianDollar: {
        display: "Bahamian dollar",
        code: "BSD",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: BTN
     */
    BhutaneseNgultrum: {
        display: "Bhutanese ngultrum",
        code: "BTN",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: BWP
     */
    BotswanaPula: {
        display: "Botswana pula",
        code: "BWP",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: BYN
     */
    BelarusianRuble: {
        display: "Belarusian ruble",
        code: "BYN",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: BZD
     */
    BelizeDollar: {
        display: "Belize dollar",
        code: "BZD",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: CAD
     */
    CanadianDollar: {
        display: "Canadian dollar",
        code: "CAD",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: CDF
     */
    CongoleseFranc: {
        display: "Congolese franc",
        code: "CDF",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: CHE
     */
    WIREuroComplementaryCurrency: {
        display: "WIR Euro (complementary currency)",
        code: "CHE",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: CHF
     */
    SwissFranc: {
        display: "Swiss franc",
        code: "CHF",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: CHW
     */
    WIRFrancComplementaryCurrency: {
        display: "WIR Franc (complementary currency)",
        code: "CHW",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: CLF
     */
    UnidadDeFomentoFundsCode: {
        display: "Unidad de Fomento (funds code)",
        code: "CLF",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: CLP
     */
    ChileanPeso: {
        display: "Chilean peso",
        code: "CLP",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: CNY
     */
    RenminbiChineseYuan8: {
        display: "Renminbi (Chinese) yuan[8]",
        code: "CNY",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: COP
     */
    ColombianPeso: {
        display: "Colombian peso",
        code: "COP",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: COU
     */
    UnidadDeValorRealUVRFundsCode9: {
        display: "Unidad de Valor Real (UVR) (funds code)[9]",
        code: "COU",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: CRC
     */
    CostaRicanColon: {
        display: "Costa Rican colon",
        code: "CRC",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: CUC
     */
    CubanConvertiblePeso: {
        display: "Cuban convertible peso",
        code: "CUC",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: CUP
     */
    CubanPeso: {
        display: "Cuban peso",
        code: "CUP",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: CVE
     */
    CapeVerdeEscudo: {
        display: "Cape Verde escudo",
        code: "CVE",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: CZK
     */
    CzechKoruna: {
        display: "Czech koruna",
        code: "CZK",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: DJF
     */
    DjiboutianFranc: {
        display: "Djiboutian franc",
        code: "DJF",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: DKK
     */
    DanishKrone: {
        display: "Danish krone",
        code: "DKK",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: DOP
     */
    DominicanPeso: {
        display: "Dominican peso",
        code: "DOP",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: DZD
     */
    AlgerianDinar: {
        display: "Algerian dinar",
        code: "DZD",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: EGP
     */
    EgyptianPound: {
        display: "Egyptian pound",
        code: "EGP",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: ERN
     */
    EritreanNakfa: {
        display: "Eritrean nakfa",
        code: "ERN",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: ETB
     */
    EthiopianBirr: {
        display: "Ethiopian birr",
        code: "ETB",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: EUR
     */
    Euro: {
        display: "Euro",
        code: "EUR",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: FJD
     */
    FijiDollar: {
        display: "Fiji dollar",
        code: "FJD",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: FKP
     */
    FalklandIslandsPound: {
        display: "Falkland Islands pound",
        code: "FKP",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: GBP
     */
    PoundSterling: {
        display: "Pound sterling",
        code: "GBP",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: GEL
     */
    GeorgianLari: {
        display: "Georgian lari",
        code: "GEL",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: GGP
     */
    GuernseyPound: {
        display: "Guernsey Pound",
        code: "GGP",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: GHS
     */
    GhanaianCedi: {
        display: "Ghanaian cedi",
        code: "GHS",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: GIP
     */
    GibraltarPound: {
        display: "Gibraltar pound",
        code: "GIP",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: GMD
     */
    GambianDalasi: {
        display: "Gambian dalasi",
        code: "GMD",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: GNF
     */
    GuineanFranc: {
        display: "Guinean franc",
        code: "GNF",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: GTQ
     */
    GuatemalanQuetzal: {
        display: "Guatemalan quetzal",
        code: "GTQ",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: GYD
     */
    GuyaneseDollar: {
        display: "Guyanese dollar",
        code: "GYD",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: HKD
     */
    HongKongDollar: {
        display: "Hong Kong dollar",
        code: "HKD",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: HNL
     */
    HonduranLempira: {
        display: "Honduran lempira",
        code: "HNL",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: HRK
     */
    CroatianKuna: {
        display: "Croatian kuna",
        code: "HRK",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: HTG
     */
    HaitianGourde: {
        display: "Haitian gourde",
        code: "HTG",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: HUF
     */
    HungarianForint: {
        display: "Hungarian forint",
        code: "HUF",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: IDR
     */
    IndonesianRupiah: {
        display: "Indonesian rupiah",
        code: "IDR",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: ILS
     */
    IsraeliNewShekel: {
        display: "Israeli new shekel",
        code: "ILS",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: IMP
     */
    IsleOfManPound: {
        display: "Isle of Man Pound",
        code: "IMP",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: INR
     */
    IndianRupee: {
        display: "Indian rupee",
        code: "INR",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: IQD
     */
    IraqiDinar: {
        display: "Iraqi dinar",
        code: "IQD",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: IRR
     */
    IranianRial: {
        display: "Iranian rial",
        code: "IRR",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: ISK
     */
    IcelandicKrC3na: {
        display: "Icelandic krC3na",
        code: "ISK",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: JEP
     */
    JerseyPound: {
        display: "Jersey Pound",
        code: "JEP",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: JMD
     */
    JamaicanDollar: {
        display: "Jamaican dollar",
        code: "JMD",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: JOD
     */
    JordanianDinar: {
        display: "Jordanian dinar",
        code: "JOD",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: JPY
     */
    JapaneseYen: {
        display: "Japanese yen",
        code: "JPY",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: KES
     */
    KenyanShilling: {
        display: "Kenyan shilling",
        code: "KES",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: KGS
     */
    KyrgyzstaniSom: {
        display: "Kyrgyzstani som",
        code: "KGS",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: KHR
     */
    CambodianRiel: {
        display: "Cambodian riel",
        code: "KHR",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: KMF
     */
    ComoroFranc: {
        display: "Comoro franc",
        code: "KMF",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: KPW
     */
    NorthKoreanWon: {
        display: "North Korean won",
        code: "KPW",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: KRW
     */
    SouthKoreanWon: {
        display: "South Korean won",
        code: "KRW",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: KWD
     */
    KuwaitiDinar: {
        display: "Kuwaiti dinar",
        code: "KWD",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: KYD
     */
    CaymanIslandsDollar: {
        display: "Cayman Islands dollar",
        code: "KYD",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: KZT
     */
    KazakhstaniTenge: {
        display: "Kazakhstani tenge",
        code: "KZT",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: LAK
     */
    LaoKip: {
        display: "Lao kip",
        code: "LAK",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: LBP
     */
    LebanesePound: {
        display: "Lebanese pound",
        code: "LBP",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: LKR
     */
    SriLankanRupee: {
        display: "Sri Lankan rupee",
        code: "LKR",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: LRD
     */
    LiberianDollar: {
        display: "Liberian dollar",
        code: "LRD",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: LSL
     */
    LesothoLoti: {
        display: "Lesotho loti",
        code: "LSL",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: LYD
     */
    LibyanDinar: {
        display: "Libyan dinar",
        code: "LYD",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: MAD
     */
    MoroccanDirham: {
        display: "Moroccan dirham",
        code: "MAD",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: MDL
     */
    MoldovanLeu: {
        display: "Moldovan leu",
        code: "MDL",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: MGA
     */
    MalagasyAriary: {
        display: "Malagasy ariary",
        code: "MGA",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: MKD
     */
    MacedonianDenar: {
        display: "Macedonian denar",
        code: "MKD",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: MMK
     */
    MyanmarKyat: {
        display: "Myanmar kyat",
        code: "MMK",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: MNT
     */
    MongolianTC6grC6g: {
        display: "Mongolian tC6grC6g",
        code: "MNT",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: MOP
     */
    MacanesePataca: {
        display: "Macanese pataca",
        code: "MOP",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: MRU
     */
    MauritanianOuguiya: {
        display: "Mauritanian ouguiya",
        code: "MRU",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: MUR
     */
    MauritianRupee: {
        display: "Mauritian rupee",
        code: "MUR",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: MVR
     */
    MaldivianRufiyaa: {
        display: "Maldivian rufiyaa",
        code: "MVR",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: MWK
     */
    MalawianKwacha: {
        display: "Malawian kwacha",
        code: "MWK",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: MXN
     */
    MexicanPeso: {
        display: "Mexican peso",
        code: "MXN",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: MXV
     */
    MexicanUnidadDeInversionUDIFundsCode: {
        display: "Mexican Unidad de Inversion (UDI) (funds code)",
        code: "MXV",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: MYR
     */
    MalaysianRinggit: {
        display: "Malaysian ringgit",
        code: "MYR",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: MZN
     */
    MozambicanMetical: {
        display: "Mozambican metical",
        code: "MZN",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: NAD
     */
    NamibianDollar: {
        display: "Namibian dollar",
        code: "NAD",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: NGN
     */
    NigerianNaira: {
        display: "Nigerian naira",
        code: "NGN",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: NIO
     */
    NicaraguanCC3rdoba: {
        display: "Nicaraguan cC3rdoba",
        code: "NIO",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: NOK
     */
    NorwegianKrone: {
        display: "Norwegian krone",
        code: "NOK",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: NPR
     */
    NepaleseRupee: {
        display: "Nepalese rupee",
        code: "NPR",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: NZD
     */
    NewZealandDollar: {
        display: "New Zealand dollar",
        code: "NZD",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: OMR
     */
    OmaniRial: {
        display: "Omani rial",
        code: "OMR",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: PAB
     */
    PanamanianBalboa: {
        display: "Panamanian balboa",
        code: "PAB",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: PEN
     */
    PeruvianSol: {
        display: "Peruvian Sol",
        code: "PEN",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: PGK
     */
    PapuaNewGuineanKina: {
        display: "Papua New Guinean kina",
        code: "PGK",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: PHP
     */
    PhilippinePiso13: {
        display: "Philippine piso[13]",
        code: "PHP",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: PKR
     */
    PakistaniRupee: {
        display: "Pakistani rupee",
        code: "PKR",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: PLN
     */
    PolishZEoty: {
        display: "Polish zEoty",
        code: "PLN",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: PYG
     */
    ParaguayanGuaranC: {
        display: "Paraguayan guaranC-",
        code: "PYG",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: QAR
     */
    QatariRiyal: {
        display: "Qatari riyal",
        code: "QAR",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: RON
     */
    RomanianLeu: {
        display: "Romanian leu",
        code: "RON",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: RSD
     */
    SerbianDinar: {
        display: "Serbian dinar",
        code: "RSD",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: RUB
     */
    RussianRuble: {
        display: "Russian ruble",
        code: "RUB",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: RWF
     */
    RwandanFranc: {
        display: "Rwandan franc",
        code: "RWF",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: SAR
     */
    SaudiRiyal: {
        display: "Saudi riyal",
        code: "SAR",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: SBD
     */
    SolomonIslandsDollar: {
        display: "Solomon Islands dollar",
        code: "SBD",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: SCR
     */
    SeychellesRupee: {
        display: "Seychelles rupee",
        code: "SCR",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: SDG
     */
    SudanesePound: {
        display: "Sudanese pound",
        code: "SDG",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: SEK
     */
    SwedishKronaKronor: {
        display: "Swedish krona/kronor",
        code: "SEK",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: SGD
     */
    SingaporeDollar: {
        display: "Singapore dollar",
        code: "SGD",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: SHP
     */
    SaintHelenaPound: {
        display: "Saint Helena pound",
        code: "SHP",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: SLL
     */
    SierraLeoneanLeone: {
        display: "Sierra Leonean leone",
        code: "SLL",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: SOS
     */
    SomaliShilling: {
        display: "Somali shilling",
        code: "SOS",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: SRD
     */
    SurinameseDollar: {
        display: "Surinamese dollar",
        code: "SRD",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: SSP
     */
    SouthSudanesePound: {
        display: "South Sudanese pound",
        code: "SSP",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: STN
     */
    SCNumberOTomCAndPrCNcipeDobra: {
        display: "SC#o TomC) and PrC-ncipe dobra",
        code: "STN",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: SVC
     */
    SalvadoranColC3n: {
        display: "Salvadoran colC3n",
        code: "SVC",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: SYP
     */
    SyrianPound: {
        display: "Syrian pound",
        code: "SYP",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: SZL
     */
    SwaziLilangeni: {
        display: "Swazi lilangeni",
        code: "SZL",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: THB
     */
    ThaiBaht: {
        display: "Thai baht",
        code: "THB",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: TJS
     */
    TajikistaniSomoni: {
        display: "Tajikistani somoni",
        code: "TJS",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: TMT
     */
    TurkmenistanManat: {
        display: "Turkmenistan manat",
        code: "TMT",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: TND
     */
    TunisianDinar: {
        display: "Tunisian dinar",
        code: "TND",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: TOP
     */
    TonganPaJAnga: {
        display: "Tongan paJ;anga",
        code: "TOP",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: TRY
     */
    TurkishLira: {
        display: "Turkish lira",
        code: "TRY",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: TTD
     */
    TrinidadAndTobagoDollar: {
        display: "Trinidad and Tobago dollar",
        code: "TTD",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: TVD
     */
    TuvaluDollar: {
        display: "Tuvalu Dollar",
        code: "TVD",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: TWD
     */
    NewTaiwanDollar: {
        display: "New Taiwan dollar",
        code: "TWD",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: TZS
     */
    TanzanianShilling: {
        display: "Tanzanian shilling",
        code: "TZS",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: UAH
     */
    UkrainianHryvnia: {
        display: "Ukrainian hryvnia",
        code: "UAH",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: UGX
     */
    UgandanShilling: {
        display: "Ugandan shilling",
        code: "UGX",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: USD
     */
    UnitedStatesDollar: {
        display: "United States dollar",
        code: "USD",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: USN
     */
    UnitedStatesDollarNextDayFundsCode: {
        display: "United States dollar (next day) (funds code)",
        code: "USN",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: UYI
     */
    UruguayPesoEnUnidadesIndexadasURUIURUIFundsCode: {
        display: "Uruguay Peso en Unidades Indexadas (URUIURUI) (funds code)",
        code: "UYI",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: UYU
     */
    UruguayanPeso: {
        display: "Uruguayan peso",
        code: "UYU",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: UZS
     */
    UzbekistanSom: {
        display: "Uzbekistan som",
        code: "UZS",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: VEF
     */
    VenezuelanBolCVar: {
        display: "Venezuelan bolC-var",
        code: "VEF",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: VND
     */
    VietnameseDNumberAPercentNg: {
        display: "Vietnamese D#a;%ng",
        code: "VND",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: VUV
     */
    VanuatuVatu: {
        display: "Vanuatu vatu",
        code: "VUV",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: WST
     */
    SamoanTala: {
        display: "Samoan tala",
        code: "WST",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: XAF
     */
    CFAFrancBEAC: {
        display: "CFA franc BEAC",
        code: "XAF",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: XAG
     */
    SilverOneTroyOunce: {
        display: "Silver (one troy ounce)",
        code: "XAG",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: XAU
     */
    GoldOneTroyOunce: {
        display: "Gold (one troy ounce)",
        code: "XAU",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: XBA
     */
    EuropeanCompositeUnitEURCOBondMarketUnit: {
        display: "European Composite Unit (EURCO) (bond market unit)",
        code: "XBA",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: XBB
     */
    EuropeanMonetaryUnitEMU6BondMarketUnit: {
        display: "European Monetary Unit (E.M.U.-6) (bond market unit)",
        code: "XBB",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: XBC
     */
    EuropeanUnitOfAccount9EUA9BondMarketUnit: {
        display: "European Unit of Account 9 (E.U.A.-9) (bond market unit)",
        code: "XBC",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: XBD
     */
    EuropeanUnitOfAccount17EUA17BondMarketUnit: {
        display: "European Unit of Account 17 (E.U.A.-17) (bond market unit)",
        code: "XBD",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: XCD
     */
    EastCaribbeanDollar: {
        display: "East Caribbean dollar",
        code: "XCD",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: XDR
     */
    SpecialDrawingRights: {
        display: "Special drawing rights",
        code: "XDR",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: XOF
     */
    CFAFrancBCEAO: {
        display: "CFA franc BCEAO",
        code: "XOF",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: XPD
     */
    PalladiumOneTroyOunce: {
        display: "Palladium (one troy ounce)",
        code: "XPD",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: XPF
     */
    CFPFrancFrancPacifique: {
        display: "CFP franc (franc Pacifique)",
        code: "XPF",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: XPT
     */
    PlatinumOneTroyOunce: {
        display: "Platinum (one troy ounce)",
        code: "XPT",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: XSU
     */
    SUCRE: {
        display: "SUCRE",
        code: "XSU",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: XTS
     */
    CodeReservedForTestingPurposes: {
        display: "Code reserved for testing purposes",
        code: "XTS",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: XUA
     */
    ADBUnitOfAccount: {
        display: "ADB Unit of Account",
        code: "XUA",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: XXX
     */
    NoCurrency: {
        display: "No currency",
        code: "XXX",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: YER
     */
    YemeniRial: {
        display: "Yemeni rial",
        code: "YER",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: ZAR
     */
    SouthAfricanRand: {
        display: "South African rand",
        code: "ZAR",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: ZMW
     */
    ZambianKwacha: {
        display: "Zambian kwacha",
        code: "ZMW",
        system: "urn:iso:std:iso:4217",
    },
    /**
     * Code: ZWL
     */
    ZimbabweanDollarA10: {
        display: "Zimbabwean dollar A/10",
        code: "ZWL",
        system: "urn:iso:std:iso:4217",
    },
};
//# sourceMappingURL=data:application/json;base64,