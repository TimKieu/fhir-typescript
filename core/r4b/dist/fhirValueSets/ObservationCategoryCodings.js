// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/observation-category|4.3.0
/**
 * Observation Category codes.
 */
export const ObservationCategoryCodings = {
    /**
     * activity: Observations that measure or record any bodily activity that enhances or maintains physical fitness and overall health and wellness.  Not under direct supervision of practitioner such as a physical therapist. (e.g., laps swum, steps, sleep data)
     */
    Activity: {
        display: "Activity",
        code: "activity",
        system: "http://terminology.hl7.org/CodeSystem/observation-category",
    },
    /**
     * exam: Observations generated by physical exam findings including direct observations made by a clinician and use of simple instruments and the result of simple maneuvers performed directly on the patient's body.
     */
    Exam: {
        display: "Exam",
        code: "exam",
        system: "http://terminology.hl7.org/CodeSystem/observation-category",
    },
    /**
     * imaging: Observations generated by imaging. The scope includes observations regarding plain x-ray, ultrasound, CT, MRI, angiography, echocardiography, and nuclear medicine.
     */
    Imaging: {
        display: "Imaging",
        code: "imaging",
        system: "http://terminology.hl7.org/CodeSystem/observation-category",
    },
    /**
     * laboratory: The results of observations generated by laboratories.  Laboratory results are typically generated by laboratories providing analytic services in areas such as chemistry, hematology, serology, histology, cytology, anatomic pathology (including digital pathology), microbiology, and/or virology. These observations are based on analysis of specimens obtained from the patient and submitted to the laboratory.
     */
    Laboratory: {
        display: "Laboratory",
        code: "laboratory",
        system: "http://terminology.hl7.org/CodeSystem/observation-category",
    },
    /**
     * procedure: Observations generated by other procedures.  This category includes observations resulting from interventional and non-interventional procedures excluding laboratory and imaging (e.g., cardiology catheterization, endoscopy, electrodiagnostics, etc.).  Procedure results are typically generated by a clinician to provide more granular information about component observations made during a procedure.  An example would be when a gastroenterologist reports the size of a polyp observed during a colonoscopy.
     */
    Procedure: {
        display: "Procedure",
        code: "procedure",
        system: "http://terminology.hl7.org/CodeSystem/observation-category",
    },
    /**
     * social-history: Social History Observations define the patient's occupational, personal (e.g., lifestyle), social, familial, and environmental history and health risk factors that may impact the patient's health.
     */
    SocialHistory: {
        display: "Social History",
        code: "social-history",
        system: "http://terminology.hl7.org/CodeSystem/observation-category",
    },
    /**
     * survey: Assessment tool/survey instrument observations (e.g., Apgar Scores, Montreal Cognitive Assessment (MoCA)).
     */
    Survey: {
        display: "Survey",
        code: "survey",
        system: "http://terminology.hl7.org/CodeSystem/observation-category",
    },
    /**
     * therapy: Observations generated by non-interventional treatment protocols (e.g. occupational, physical, radiation, nutritional and medication therapy)
     */
    Therapy: {
        display: "Therapy",
        code: "therapy",
        system: "http://terminology.hl7.org/CodeSystem/observation-category",
    },
    /**
     * vital-signs:  Clinical observations measure the body's basic functions such as blood pressure, heart rate, respiratory rate, height, weight, body mass index, head circumference, pulse oximetry, temperature, and body surface area.
     */
    VitalSigns: {
        display: "Vital Signs",
        code: "vital-signs",
        system: "http://terminology.hl7.org/CodeSystem/observation-category",
    },
};
//# sourceMappingURL=data:application/json;base64,