// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/testscript-profile-destination-types|4.3.0
/**
 * This value set defines a set of codes that are used to indicate the profile type of a test system when acting as the destination within a TestScript.
 */
export const TestscriptProfileDestinationTypesCodings = {
    /**
     * FHIR-SDC-FormManager: A FHIR server acting as a Structured Data Capture Form Manager.
     */
    FHIRSDCFormManager: {
        display: "FHIR SDC FormManager",
        code: "FHIR-SDC-FormManager",
        system: "http://terminology.hl7.org/CodeSystem/testscript-profile-destination-types",
    },
    /**
     * FHIR-SDC-FormProcessor: A FHIR server acting as a Structured Data Capture Form Processor.
     */
    FHIRSDCFormProcessor: {
        display: "FHIR SDC FormProcessor",
        code: "FHIR-SDC-FormProcessor",
        system: "http://terminology.hl7.org/CodeSystem/testscript-profile-destination-types",
    },
    /**
     * FHIR-SDC-FormReceiver: A FHIR server acting as a Structured Data Capture Form Receiver.
     */
    FHIRSDCFormReceiver: {
        display: "FHIR SDC FormReceiver",
        code: "FHIR-SDC-FormReceiver",
        system: "http://terminology.hl7.org/CodeSystem/testscript-profile-destination-types",
    },
    /**
     * FHIR-Server: General FHIR server used to respond to operations sent from a FHIR client.
     */
    FHIRServer: {
        display: "FHIR Server",
        code: "FHIR-Server",
        system: "http://terminology.hl7.org/CodeSystem/testscript-profile-destination-types",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGVzdHNjcmlwdFByb2ZpbGVEZXN0aW5hdGlvblR5cGVzQ29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvVGVzdHNjcmlwdFByb2ZpbGVEZXN0aW5hdGlvblR5cGVzQ29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsZ0RBQWdEO0FBQ2hELGtDQUFrQztBQUNsQyx5RkFBeUY7QUEwQnpGOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sd0NBQXdDLEdBQStDO0lBQ2xHOztPQUVHO0lBQ0gsa0JBQWtCLEVBQUU7UUFDbEIsT0FBTyxFQUFFLHNCQUFzQjtRQUMvQixJQUFJLEVBQUUsc0JBQXNCO1FBQzVCLE1BQU0sRUFBRSw0RUFBNEU7S0FDckY7SUFDRDs7T0FFRztJQUNILG9CQUFvQixFQUFFO1FBQ3BCLE9BQU8sRUFBRSx3QkFBd0I7UUFDakMsSUFBSSxFQUFFLHdCQUF3QjtRQUM5QixNQUFNLEVBQUUsNEVBQTRFO0tBQ3JGO0lBQ0Q7O09BRUc7SUFDSCxtQkFBbUIsRUFBRTtRQUNuQixPQUFPLEVBQUUsdUJBQXVCO1FBQ2hDLElBQUksRUFBRSx1QkFBdUI7UUFDN0IsTUFBTSxFQUFFLDRFQUE0RTtLQUNyRjtJQUNEOztPQUVHO0lBQ0gsVUFBVSxFQUFFO1FBQ1YsT0FBTyxFQUFFLGFBQWE7UUFDdEIsSUFBSSxFQUFFLGFBQWE7UUFDbkIsTUFBTSxFQUFFLDRFQUE0RTtLQUNyRjtDQUNPLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjRiLmNvcmUgdmVyc2lvbjogNC4zLjBcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L3Rlc3RzY3JpcHQtcHJvZmlsZS1kZXN0aW5hdGlvbi10eXBlc3w0LjMuMFxyXG5cclxuaW1wb3J0IHsgQ29kaW5nQXJncyB9IGZyb20gJy4uL2ZoaXIvQ29kaW5nLmpzJ1xyXG5cclxuLyoqXHJcbiAqIFRoaXMgdmFsdWUgc2V0IGRlZmluZXMgYSBzZXQgb2YgY29kZXMgdGhhdCBhcmUgdXNlZCB0byBpbmRpY2F0ZSB0aGUgcHJvZmlsZSB0eXBlIG9mIGEgdGVzdCBzeXN0ZW0gd2hlbiBhY3RpbmcgYXMgdGhlIGRlc3RpbmF0aW9uIHdpdGhpbiBhIFRlc3RTY3JpcHQuXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBUZXN0c2NyaXB0UHJvZmlsZURlc3RpbmF0aW9uVHlwZXNDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIEZISVItU0RDLUZvcm1NYW5hZ2VyOiBBIEZISVIgc2VydmVyIGFjdGluZyBhcyBhIFN0cnVjdHVyZWQgRGF0YSBDYXB0dXJlIEZvcm0gTWFuYWdlci5cclxuICAgKi9cclxuICBGSElSU0RDRm9ybU1hbmFnZXI6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogRkhJUi1TREMtRm9ybVByb2Nlc3NvcjogQSBGSElSIHNlcnZlciBhY3RpbmcgYXMgYSBTdHJ1Y3R1cmVkIERhdGEgQ2FwdHVyZSBGb3JtIFByb2Nlc3Nvci5cclxuICAgKi9cclxuICBGSElSU0RDRm9ybVByb2Nlc3NvcjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBGSElSLVNEQy1Gb3JtUmVjZWl2ZXI6IEEgRkhJUiBzZXJ2ZXIgYWN0aW5nIGFzIGEgU3RydWN0dXJlZCBEYXRhIENhcHR1cmUgRm9ybSBSZWNlaXZlci5cclxuICAgKi9cclxuICBGSElSU0RDRm9ybVJlY2VpdmVyOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIEZISVItU2VydmVyOiBHZW5lcmFsIEZISVIgc2VydmVyIHVzZWQgdG8gcmVzcG9uZCB0byBvcGVyYXRpb25zIHNlbnQgZnJvbSBhIEZISVIgY2xpZW50LlxyXG4gICAqL1xyXG4gIEZISVJTZXJ2ZXI6IENvZGluZ0FyZ3M7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBUaGlzIHZhbHVlIHNldCBkZWZpbmVzIGEgc2V0IG9mIGNvZGVzIHRoYXQgYXJlIHVzZWQgdG8gaW5kaWNhdGUgdGhlIHByb2ZpbGUgdHlwZSBvZiBhIHRlc3Qgc3lzdGVtIHdoZW4gYWN0aW5nIGFzIHRoZSBkZXN0aW5hdGlvbiB3aXRoaW4gYSBUZXN0U2NyaXB0LlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IFRlc3RzY3JpcHRQcm9maWxlRGVzdGluYXRpb25UeXBlc0NvZGluZ3M6VGVzdHNjcmlwdFByb2ZpbGVEZXN0aW5hdGlvblR5cGVzQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBGSElSLVNEQy1Gb3JtTWFuYWdlcjogQSBGSElSIHNlcnZlciBhY3RpbmcgYXMgYSBTdHJ1Y3R1cmVkIERhdGEgQ2FwdHVyZSBGb3JtIE1hbmFnZXIuXHJcbiAgICovXHJcbiAgRkhJUlNEQ0Zvcm1NYW5hZ2VyOiB7XHJcbiAgICBkaXNwbGF5OiBcIkZISVIgU0RDIEZvcm1NYW5hZ2VyXCIsXHJcbiAgICBjb2RlOiBcIkZISVItU0RDLUZvcm1NYW5hZ2VyXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS90ZXN0c2NyaXB0LXByb2ZpbGUtZGVzdGluYXRpb24tdHlwZXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIEZISVItU0RDLUZvcm1Qcm9jZXNzb3I6IEEgRkhJUiBzZXJ2ZXIgYWN0aW5nIGFzIGEgU3RydWN0dXJlZCBEYXRhIENhcHR1cmUgRm9ybSBQcm9jZXNzb3IuXHJcbiAgICovXHJcbiAgRkhJUlNEQ0Zvcm1Qcm9jZXNzb3I6IHtcclxuICAgIGRpc3BsYXk6IFwiRkhJUiBTREMgRm9ybVByb2Nlc3NvclwiLFxyXG4gICAgY29kZTogXCJGSElSLVNEQy1Gb3JtUHJvY2Vzc29yXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS90ZXN0c2NyaXB0LXByb2ZpbGUtZGVzdGluYXRpb24tdHlwZXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIEZISVItU0RDLUZvcm1SZWNlaXZlcjogQSBGSElSIHNlcnZlciBhY3RpbmcgYXMgYSBTdHJ1Y3R1cmVkIERhdGEgQ2FwdHVyZSBGb3JtIFJlY2VpdmVyLlxyXG4gICAqL1xyXG4gIEZISVJTRENGb3JtUmVjZWl2ZXI6IHtcclxuICAgIGRpc3BsYXk6IFwiRkhJUiBTREMgRm9ybVJlY2VpdmVyXCIsXHJcbiAgICBjb2RlOiBcIkZISVItU0RDLUZvcm1SZWNlaXZlclwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vdGVzdHNjcmlwdC1wcm9maWxlLWRlc3RpbmF0aW9uLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBGSElSLVNlcnZlcjogR2VuZXJhbCBGSElSIHNlcnZlciB1c2VkIHRvIHJlc3BvbmQgdG8gb3BlcmF0aW9ucyBzZW50IGZyb20gYSBGSElSIGNsaWVudC5cclxuICAgKi9cclxuICBGSElSU2VydmVyOiB7XHJcbiAgICBkaXNwbGF5OiBcIkZISVIgU2VydmVyXCIsXHJcbiAgICBjb2RlOiBcIkZISVItU2VydmVyXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS90ZXN0c2NyaXB0LXByb2ZpbGUtZGVzdGluYXRpb24tdHlwZXNcIixcclxuICB9LFxyXG59IGFzIGNvbnN0O1xyXG4iXX0=