// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/artifact-contribution-type|4.3.0
/**
 * Citation contribution.
 */
export const ArtifactContributionTypeCodings = {
    /**
     * conceptualization: Conceptualization (see https://jats4r.org/credit-taxonomy).
     */
    Conceptualization: {
        display: "Conceptualization",
        code: "conceptualization",
        system: "http://terminology.hl7.org/CodeSystem/artifact-contribution-type",
    },
    /**
     * data-curation: Data curation (see https://jats4r.org/credit-taxonomy).
     */
    DataCuration: {
        display: "Data curation",
        code: "data-curation",
        system: "http://terminology.hl7.org/CodeSystem/artifact-contribution-type",
    },
    /**
     * formal-analysis: Formal analysis (see https://jats4r.org/credit-taxonomy).
     */
    FormalAnalysis: {
        display: "Formal analysis",
        code: "formal-analysis",
        system: "http://terminology.hl7.org/CodeSystem/artifact-contribution-type",
    },
    /**
     * funding-acquisition: Funding acquisition (see https://jats4r.org/credit-taxonomy).
     */
    FundingAcquisition: {
        display: "Funding acquisition",
        code: "funding-acquisition",
        system: "http://terminology.hl7.org/CodeSystem/artifact-contribution-type",
    },
    /**
     * investigation: Investigation (see https://jats4r.org/credit-taxonomy).
     */
    Investigation: {
        display: "Investigation",
        code: "investigation",
        system: "http://terminology.hl7.org/CodeSystem/artifact-contribution-type",
    },
    /**
     * methodology: Methodology (see https://jats4r.org/credit-taxonomy).
     */
    Methodology: {
        display: "Methodology",
        code: "methodology",
        system: "http://terminology.hl7.org/CodeSystem/artifact-contribution-type",
    },
    /**
     * project-administration: Project administration (see https://jats4r.org/credit-taxonomy).
     */
    ProjectAdministration: {
        display: "Project administration",
        code: "project-administration",
        system: "http://terminology.hl7.org/CodeSystem/artifact-contribution-type",
    },
    /**
     * resources: Resources (see https://jats4r.org/credit-taxonomy).
     */
    Resources: {
        display: "Resources",
        code: "resources",
        system: "http://terminology.hl7.org/CodeSystem/artifact-contribution-type",
    },
    /**
     * software: Software (see https://jats4r.org/credit-taxonomy).
     */
    Software: {
        display: "Software",
        code: "software",
        system: "http://terminology.hl7.org/CodeSystem/artifact-contribution-type",
    },
    /**
     * supervision: Supervision (see https://jats4r.org/credit-taxonomy).
     */
    Supervision: {
        display: "Supervision",
        code: "supervision",
        system: "http://terminology.hl7.org/CodeSystem/artifact-contribution-type",
    },
    /**
     * validation: Validation (see https://jats4r.org/credit-taxonomy).
     */
    Validation: {
        display: "Validation",
        code: "validation",
        system: "http://terminology.hl7.org/CodeSystem/artifact-contribution-type",
    },
    /**
     * visualization: Visualization (see https://jats4r.org/credit-taxonomy).
     */
    Visualization: {
        display: "Visualization",
        code: "visualization",
        system: "http://terminology.hl7.org/CodeSystem/artifact-contribution-type",
    },
    /**
     * writing-original-draft: Writing - original draft (see https://jats4r.org/credit-taxonomy).
     */
    WritingOriginalDraft: {
        display: "Writing - original draft",
        code: "writing-original-draft",
        system: "http://terminology.hl7.org/CodeSystem/artifact-contribution-type",
    },
    /**
     * writing-review-editing: Writing - review &amp; editing (see https://jats4r.org/credit-taxonomy).
     */
    WritingReviewAndEditing: {
        display: "Writing - review & editing",
        code: "writing-review-editing",
        system: "http://terminology.hl7.org/CodeSystem/artifact-contribution-type",
    },
};
//# sourceMappingURL=data:application/json;base64,