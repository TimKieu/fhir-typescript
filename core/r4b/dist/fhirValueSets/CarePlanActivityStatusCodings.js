// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/care-plan-activity-status|4.3.0
/**
 * Codes that reflect the current state of a care plan activity within its overall life cycle.
 */
export const CarePlanActivityStatusCodings = {
    /**
     * cancelled: The planned care plan activity has been withdrawn.
     */
    Cancelled: {
        display: "Cancelled",
        code: "cancelled",
        system: "http://hl7.org/fhir/care-plan-activity-status",
    },
    /**
     * completed: Care plan activity has been completed (more or less) as planned.
     */
    Completed: {
        display: "Completed",
        code: "completed",
        system: "http://hl7.org/fhir/care-plan-activity-status",
    },
    /**
     * entered-in-error: Care plan activity was entered in error and voided.
     */
    EnteredInError: {
        display: "Entered in Error",
        code: "entered-in-error",
        system: "http://hl7.org/fhir/care-plan-activity-status",
    },
    /**
     * in-progress: Care plan activity has been started but is not yet complete.
     */
    InProgress: {
        display: "In Progress",
        code: "in-progress",
        system: "http://hl7.org/fhir/care-plan-activity-status",
    },
    /**
     * not-started: Care plan activity is planned but no action has yet been taken.
     */
    NotStarted: {
        display: "Not Started",
        code: "not-started",
        system: "http://hl7.org/fhir/care-plan-activity-status",
    },
    /**
     * on-hold: Care plan activity was started but has temporarily ceased with an expectation of resumption at a future time.
     */
    OnHold: {
        display: "On Hold",
        code: "on-hold",
        system: "http://hl7.org/fhir/care-plan-activity-status",
    },
    /**
     * scheduled: Appointment or other booking has occurred but activity has not yet begun.
     */
    Scheduled: {
        display: "Scheduled",
        code: "scheduled",
        system: "http://hl7.org/fhir/care-plan-activity-status",
    },
    /**
     * stopped: The planned care plan activity has been ended prior to completion after the activity was started.
     */
    Stopped: {
        display: "Stopped",
        code: "stopped",
        system: "http://hl7.org/fhir/care-plan-activity-status",
    },
    /**
     * unknown: The current state of the care plan activity is not known.  Note: This concept is not to be used for "other" - one of the listed statuses is presumed to apply, but the authoring/source system does not know which one.
     */
    Unknown: {
        display: "Unknown",
        code: "unknown",
        system: "http://hl7.org/fhir/care-plan-activity-status",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2FyZVBsYW5BY3Rpdml0eVN0YXR1c0NvZGluZ3MuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL0NhcmVQbGFuQWN0aXZpdHlTdGF0dXNDb2RpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQixnREFBZ0Q7QUFDaEQsa0NBQWtDO0FBQ2xDLDhFQUE4RTtBQThDOUU7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSw2QkFBNkIsR0FBb0M7SUFDNUU7O09BRUc7SUFDSCxTQUFTLEVBQUU7UUFDVCxPQUFPLEVBQUUsV0FBVztRQUNwQixJQUFJLEVBQUUsV0FBVztRQUNqQixNQUFNLEVBQUUsK0NBQStDO0tBQ3hEO0lBQ0Q7O09BRUc7SUFDSCxTQUFTLEVBQUU7UUFDVCxPQUFPLEVBQUUsV0FBVztRQUNwQixJQUFJLEVBQUUsV0FBVztRQUNqQixNQUFNLEVBQUUsK0NBQStDO0tBQ3hEO0lBQ0Q7O09BRUc7SUFDSCxjQUFjLEVBQUU7UUFDZCxPQUFPLEVBQUUsa0JBQWtCO1FBQzNCLElBQUksRUFBRSxrQkFBa0I7UUFDeEIsTUFBTSxFQUFFLCtDQUErQztLQUN4RDtJQUNEOztPQUVHO0lBQ0gsVUFBVSxFQUFFO1FBQ1YsT0FBTyxFQUFFLGFBQWE7UUFDdEIsSUFBSSxFQUFFLGFBQWE7UUFDbkIsTUFBTSxFQUFFLCtDQUErQztLQUN4RDtJQUNEOztPQUVHO0lBQ0gsVUFBVSxFQUFFO1FBQ1YsT0FBTyxFQUFFLGFBQWE7UUFDdEIsSUFBSSxFQUFFLGFBQWE7UUFDbkIsTUFBTSxFQUFFLCtDQUErQztLQUN4RDtJQUNEOztPQUVHO0lBQ0gsTUFBTSxFQUFFO1FBQ04sT0FBTyxFQUFFLFNBQVM7UUFDbEIsSUFBSSxFQUFFLFNBQVM7UUFDZixNQUFNLEVBQUUsK0NBQStDO0tBQ3hEO0lBQ0Q7O09BRUc7SUFDSCxTQUFTLEVBQUU7UUFDVCxPQUFPLEVBQUUsV0FBVztRQUNwQixJQUFJLEVBQUUsV0FBVztRQUNqQixNQUFNLEVBQUUsK0NBQStDO0tBQ3hEO0lBQ0Q7O09BRUc7SUFDSCxPQUFPLEVBQUU7UUFDUCxPQUFPLEVBQUUsU0FBUztRQUNsQixJQUFJLEVBQUUsU0FBUztRQUNmLE1BQU0sRUFBRSwrQ0FBK0M7S0FDeEQ7SUFDRDs7T0FFRztJQUNILE9BQU8sRUFBRTtRQUNQLE9BQU8sRUFBRSxTQUFTO1FBQ2xCLElBQUksRUFBRSxTQUFTO1FBQ2YsTUFBTSxFQUFFLCtDQUErQztLQUN4RDtDQUNPLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjRiLmNvcmUgdmVyc2lvbjogNC4zLjBcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L2NhcmUtcGxhbi1hY3Rpdml0eS1zdGF0dXN8NC4zLjBcclxuXHJcbmltcG9ydCB7IENvZGluZ0FyZ3MgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiBDb2RlcyB0aGF0IHJlZmxlY3QgdGhlIGN1cnJlbnQgc3RhdGUgb2YgYSBjYXJlIHBsYW4gYWN0aXZpdHkgd2l0aGluIGl0cyBvdmVyYWxsIGxpZmUgY3ljbGUuXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBDYXJlUGxhbkFjdGl2aXR5U3RhdHVzQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBjYW5jZWxsZWQ6IFRoZSBwbGFubmVkIGNhcmUgcGxhbiBhY3Rpdml0eSBoYXMgYmVlbiB3aXRoZHJhd24uXHJcbiAgICovXHJcbiAgQ2FuY2VsbGVkOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIGNvbXBsZXRlZDogQ2FyZSBwbGFuIGFjdGl2aXR5IGhhcyBiZWVuIGNvbXBsZXRlZCAobW9yZSBvciBsZXNzKSBhcyBwbGFubmVkLlxyXG4gICAqL1xyXG4gIENvbXBsZXRlZDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBlbnRlcmVkLWluLWVycm9yOiBDYXJlIHBsYW4gYWN0aXZpdHkgd2FzIGVudGVyZWQgaW4gZXJyb3IgYW5kIHZvaWRlZC5cclxuICAgKi9cclxuICBFbnRlcmVkSW5FcnJvcjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBpbi1wcm9ncmVzczogQ2FyZSBwbGFuIGFjdGl2aXR5IGhhcyBiZWVuIHN0YXJ0ZWQgYnV0IGlzIG5vdCB5ZXQgY29tcGxldGUuXHJcbiAgICovXHJcbiAgSW5Qcm9ncmVzczogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBub3Qtc3RhcnRlZDogQ2FyZSBwbGFuIGFjdGl2aXR5IGlzIHBsYW5uZWQgYnV0IG5vIGFjdGlvbiBoYXMgeWV0IGJlZW4gdGFrZW4uXHJcbiAgICovXHJcbiAgTm90U3RhcnRlZDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBvbi1ob2xkOiBDYXJlIHBsYW4gYWN0aXZpdHkgd2FzIHN0YXJ0ZWQgYnV0IGhhcyB0ZW1wb3JhcmlseSBjZWFzZWQgd2l0aCBhbiBleHBlY3RhdGlvbiBvZiByZXN1bXB0aW9uIGF0IGEgZnV0dXJlIHRpbWUuXHJcbiAgICovXHJcbiAgT25Ib2xkOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIHNjaGVkdWxlZDogQXBwb2ludG1lbnQgb3Igb3RoZXIgYm9va2luZyBoYXMgb2NjdXJyZWQgYnV0IGFjdGl2aXR5IGhhcyBub3QgeWV0IGJlZ3VuLlxyXG4gICAqL1xyXG4gIFNjaGVkdWxlZDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBzdG9wcGVkOiBUaGUgcGxhbm5lZCBjYXJlIHBsYW4gYWN0aXZpdHkgaGFzIGJlZW4gZW5kZWQgcHJpb3IgdG8gY29tcGxldGlvbiBhZnRlciB0aGUgYWN0aXZpdHkgd2FzIHN0YXJ0ZWQuXHJcbiAgICovXHJcbiAgU3RvcHBlZDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiB1bmtub3duOiBUaGUgY3VycmVudCBzdGF0ZSBvZiB0aGUgY2FyZSBwbGFuIGFjdGl2aXR5IGlzIG5vdCBrbm93bi4gIE5vdGU6IFRoaXMgY29uY2VwdCBpcyBub3QgdG8gYmUgdXNlZCBmb3IgXCJvdGhlclwiIC0gb25lIG9mIHRoZSBsaXN0ZWQgc3RhdHVzZXMgaXMgcHJlc3VtZWQgdG8gYXBwbHksIGJ1dCB0aGUgYXV0aG9yaW5nL3NvdXJjZSBzeXN0ZW0gZG9lcyBub3Qga25vdyB3aGljaCBvbmUuXHJcbiAgICovXHJcbiAgVW5rbm93bjogQ29kaW5nQXJncztcclxufVxyXG5cclxuLyoqXHJcbiAqIENvZGVzIHRoYXQgcmVmbGVjdCB0aGUgY3VycmVudCBzdGF0ZSBvZiBhIGNhcmUgcGxhbiBhY3Rpdml0eSB3aXRoaW4gaXRzIG92ZXJhbGwgbGlmZSBjeWNsZS5cclxuICovXHJcbmV4cG9ydCBjb25zdCBDYXJlUGxhbkFjdGl2aXR5U3RhdHVzQ29kaW5nczpDYXJlUGxhbkFjdGl2aXR5U3RhdHVzQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBjYW5jZWxsZWQ6IFRoZSBwbGFubmVkIGNhcmUgcGxhbiBhY3Rpdml0eSBoYXMgYmVlbiB3aXRoZHJhd24uXHJcbiAgICovXHJcbiAgQ2FuY2VsbGVkOiB7XHJcbiAgICBkaXNwbGF5OiBcIkNhbmNlbGxlZFwiLFxyXG4gICAgY29kZTogXCJjYW5jZWxsZWRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2NhcmUtcGxhbi1hY3Rpdml0eS1zdGF0dXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIGNvbXBsZXRlZDogQ2FyZSBwbGFuIGFjdGl2aXR5IGhhcyBiZWVuIGNvbXBsZXRlZCAobW9yZSBvciBsZXNzKSBhcyBwbGFubmVkLlxyXG4gICAqL1xyXG4gIENvbXBsZXRlZDoge1xyXG4gICAgZGlzcGxheTogXCJDb21wbGV0ZWRcIixcclxuICAgIGNvZGU6IFwiY29tcGxldGVkXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9jYXJlLXBsYW4tYWN0aXZpdHktc3RhdHVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBlbnRlcmVkLWluLWVycm9yOiBDYXJlIHBsYW4gYWN0aXZpdHkgd2FzIGVudGVyZWQgaW4gZXJyb3IgYW5kIHZvaWRlZC5cclxuICAgKi9cclxuICBFbnRlcmVkSW5FcnJvcjoge1xyXG4gICAgZGlzcGxheTogXCJFbnRlcmVkIGluIEVycm9yXCIsXHJcbiAgICBjb2RlOiBcImVudGVyZWQtaW4tZXJyb3JcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2NhcmUtcGxhbi1hY3Rpdml0eS1zdGF0dXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIGluLXByb2dyZXNzOiBDYXJlIHBsYW4gYWN0aXZpdHkgaGFzIGJlZW4gc3RhcnRlZCBidXQgaXMgbm90IHlldCBjb21wbGV0ZS5cclxuICAgKi9cclxuICBJblByb2dyZXNzOiB7XHJcbiAgICBkaXNwbGF5OiBcIkluIFByb2dyZXNzXCIsXHJcbiAgICBjb2RlOiBcImluLXByb2dyZXNzXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9jYXJlLXBsYW4tYWN0aXZpdHktc3RhdHVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBub3Qtc3RhcnRlZDogQ2FyZSBwbGFuIGFjdGl2aXR5IGlzIHBsYW5uZWQgYnV0IG5vIGFjdGlvbiBoYXMgeWV0IGJlZW4gdGFrZW4uXHJcbiAgICovXHJcbiAgTm90U3RhcnRlZDoge1xyXG4gICAgZGlzcGxheTogXCJOb3QgU3RhcnRlZFwiLFxyXG4gICAgY29kZTogXCJub3Qtc3RhcnRlZFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvY2FyZS1wbGFuLWFjdGl2aXR5LXN0YXR1c1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogb24taG9sZDogQ2FyZSBwbGFuIGFjdGl2aXR5IHdhcyBzdGFydGVkIGJ1dCBoYXMgdGVtcG9yYXJpbHkgY2Vhc2VkIHdpdGggYW4gZXhwZWN0YXRpb24gb2YgcmVzdW1wdGlvbiBhdCBhIGZ1dHVyZSB0aW1lLlxyXG4gICAqL1xyXG4gIE9uSG9sZDoge1xyXG4gICAgZGlzcGxheTogXCJPbiBIb2xkXCIsXHJcbiAgICBjb2RlOiBcIm9uLWhvbGRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2NhcmUtcGxhbi1hY3Rpdml0eS1zdGF0dXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIHNjaGVkdWxlZDogQXBwb2ludG1lbnQgb3Igb3RoZXIgYm9va2luZyBoYXMgb2NjdXJyZWQgYnV0IGFjdGl2aXR5IGhhcyBub3QgeWV0IGJlZ3VuLlxyXG4gICAqL1xyXG4gIFNjaGVkdWxlZDoge1xyXG4gICAgZGlzcGxheTogXCJTY2hlZHVsZWRcIixcclxuICAgIGNvZGU6IFwic2NoZWR1bGVkXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9jYXJlLXBsYW4tYWN0aXZpdHktc3RhdHVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBzdG9wcGVkOiBUaGUgcGxhbm5lZCBjYXJlIHBsYW4gYWN0aXZpdHkgaGFzIGJlZW4gZW5kZWQgcHJpb3IgdG8gY29tcGxldGlvbiBhZnRlciB0aGUgYWN0aXZpdHkgd2FzIHN0YXJ0ZWQuXHJcbiAgICovXHJcbiAgU3RvcHBlZDoge1xyXG4gICAgZGlzcGxheTogXCJTdG9wcGVkXCIsXHJcbiAgICBjb2RlOiBcInN0b3BwZWRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2NhcmUtcGxhbi1hY3Rpdml0eS1zdGF0dXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIHVua25vd246IFRoZSBjdXJyZW50IHN0YXRlIG9mIHRoZSBjYXJlIHBsYW4gYWN0aXZpdHkgaXMgbm90IGtub3duLiAgTm90ZTogVGhpcyBjb25jZXB0IGlzIG5vdCB0byBiZSB1c2VkIGZvciBcIm90aGVyXCIgLSBvbmUgb2YgdGhlIGxpc3RlZCBzdGF0dXNlcyBpcyBwcmVzdW1lZCB0byBhcHBseSwgYnV0IHRoZSBhdXRob3Jpbmcvc291cmNlIHN5c3RlbSBkb2VzIG5vdCBrbm93IHdoaWNoIG9uZS5cclxuICAgKi9cclxuICBVbmtub3duOiB7XHJcbiAgICBkaXNwbGF5OiBcIlVua25vd25cIixcclxuICAgIGNvZGU6IFwidW5rbm93blwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvY2FyZS1wbGFuLWFjdGl2aXR5LXN0YXR1c1wiLFxyXG4gIH0sXHJcbn0gYXMgY29uc3Q7XHJcbiJdfQ==