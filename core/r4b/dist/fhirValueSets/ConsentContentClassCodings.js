// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/consent-content-class|4.3.0
/**
 * This value set includes the FHIR resource types, along with some other important content class codes
 */
export const ConsentContentClassCodings = {
    /**
     * Account: A financial tool for tracking value accrued for a particular purpose.  In the healthcare field, used to track charges for a patient, cost centers, etc.
     */
    Account: {
        display: "Account",
        code: "Account",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * ActivityDefinition: This resource allows for the definition of some activity to be performed, independent of a particular patient, practitioner, or other performance context.
     */
    ActivityDefinition: {
        display: "ActivityDefinition",
        code: "ActivityDefinition",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * AdministrableProductDefinition: A medicinal product in the final form which is suitable for administering to a patient (after any mixing of multiple components, dissolution etc. has been performed).
     */
    AdministrableProductDefinition: {
        display: "AdministrableProductDefinition",
        code: "AdministrableProductDefinition",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * AdverseEvent: Actual or  potential/avoided event causing unintended physical injury resulting from or contributed to by medical care, a research study or other healthcare setting factors that requires additional monitoring, treatment, or hospitalization, or that results in death.
     */
    AdverseEvent: {
        display: "AdverseEvent",
        code: "AdverseEvent",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * AllergyIntolerance: Risk of harmful or undesirable, physiological response which is unique to an individual and associated with exposure to a substance.
     */
    AllergyIntolerance: {
        display: "AllergyIntolerance",
        code: "AllergyIntolerance",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * Code: application/hl7-cda+xml
     */
    CDADocuments: {
        display: "CDA Documents",
        code: "application/hl7-cda+xml",
        system: "urn:ietf:bcp:13",
    },
    /**
     * Appointment: A booking of a healthcare event among patient(s), practitioner(s), related person(s) and/or device(s) for a specific date/time. This may result in one or more Encounter(s).
     */
    Appointment: {
        display: "Appointment",
        code: "Appointment",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * AppointmentResponse: A reply to an appointment request for a patient and/or practitioner(s), such as a confirmation or rejection.
     */
    AppointmentResponse: {
        display: "AppointmentResponse",
        code: "AppointmentResponse",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * AuditEvent: A record of an event made for purposes of maintaining a security log. Typical uses include detection of intrusion attempts and monitoring for inappropriate usage.
     */
    AuditEvent: {
        display: "AuditEvent",
        code: "AuditEvent",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * Basic: Basic is used for handling concepts not yet defined in FHIR, narrative-only resources that don't map to an existing resource, and custom resources not appropriate for inclusion in the FHIR specification.
     */
    Basic: {
        display: "Basic",
        code: "Basic",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * Binary: A resource that represents the data of a single raw artifact as digital content accessible in its native format.  A Binary resource can contain any content, whether text, image, pdf, zip archive, etc.
     */
    Binary: {
        display: "Binary",
        code: "Binary",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * BiologicallyDerivedProduct: A material substance originating from a biological entity intended to be transplanted or infused
     * into another (possibly the same) biological entity.
     */
    BiologicallyDerivedProduct: {
        display: "BiologicallyDerivedProduct",
        code: "BiologicallyDerivedProduct",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * BodyStructure: Record details about an anatomical structure.  This resource may be used when a coded concept does not provide the necessary detail needed for the use case.
     */
    BodyStructure: {
        display: "BodyStructure",
        code: "BodyStructure",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * Bundle: A container for a collection of resources.
     */
    Bundle: {
        display: "Bundle",
        code: "Bundle",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * CapabilityStatement: A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.
     */
    CapabilityStatement: {
        display: "CapabilityStatement",
        code: "CapabilityStatement",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * CarePlan: Describes the intention of how one or more practitioners intend to deliver care for a particular patient, group or community for a period of time, possibly limited to care for a specific condition or set of conditions.
     */
    CarePlan: {
        display: "CarePlan",
        code: "CarePlan",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * CareTeam: The Care Team includes all the people and organizations who plan to participate in the coordination and delivery of care for a patient.
     */
    CareTeam: {
        display: "CareTeam",
        code: "CareTeam",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * CatalogEntry: Catalog entries are wrappers that contextualize items included in a catalog.
     */
    CatalogEntry: {
        display: "CatalogEntry",
        code: "CatalogEntry",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * ChargeItem: The resource ChargeItem describes the provision of healthcare provider products for a certain patient, therefore referring not only to the product, but containing in addition details of the provision, like date, time, amounts and participating organizations and persons. Main Usage of the ChargeItem is to enable the billing process and internal cost allocation.
     */
    ChargeItem: {
        display: "ChargeItem",
        code: "ChargeItem",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * ChargeItemDefinition: The ChargeItemDefinition resource provides the properties that apply to the (billing) codes necessary to calculate costs and prices. The properties may differ largely depending on type and realm, therefore this resource gives only a rough structure and requires profiling for each type of billing code system.
     */
    ChargeItemDefinition: {
        display: "ChargeItemDefinition",
        code: "ChargeItemDefinition",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * Citation: The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources.
     */
    Citation: {
        display: "Citation",
        code: "Citation",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * Claim: A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.
     */
    Claim: {
        display: "Claim",
        code: "Claim",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * ClaimResponse: This resource provides the adjudication details from the processing of a Claim resource.
     */
    ClaimResponse: {
        display: "ClaimResponse",
        code: "ClaimResponse",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * ClinicalImpression: A record of a clinical assessment performed to determine what problem(s) may affect the patient and before planning the treatments or management strategies that are best to manage a patient's condition. Assessments are often 1:1 with a clinical consultation / encounter,  but this varies greatly depending on the clinical workflow. This resource is called "ClinicalImpression" rather than "ClinicalAssessment" to avoid confusion with the recording of assessment tools such as Apgar score.
     */
    ClinicalImpression: {
        display: "ClinicalImpression",
        code: "ClinicalImpression",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * ClinicalUseDefinition: A single issue - either an indication, contraindication, interaction or an undesirable effect for a medicinal product, medication, device or procedure.
     */
    ClinicalUseDefinition: {
        display: "ClinicalUseDefinition",
        code: "ClinicalUseDefinition",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * CodeSystem: The CodeSystem resource is used to declare the existence of and describe a code system or code system supplement and its key properties, and optionally define a part or all of its content.
     */
    CodeSystem: {
        display: "CodeSystem",
        code: "CodeSystem",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * Communication: An occurrence of information being transmitted; e.g. an alert that was sent to a responsible provider, a public health agency that was notified about a reportable condition.
     */
    Communication: {
        display: "Communication",
        code: "Communication",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * CommunicationRequest: A request to convey information; e.g. the CDS system proposes that an alert be sent to a responsible provider, the CDS system proposes that the public health agency be notified about a reportable condition.
     */
    CommunicationRequest: {
        display: "CommunicationRequest",
        code: "CommunicationRequest",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * CompartmentDefinition: A compartment definition that defines how resources are accessed on a server.
     */
    CompartmentDefinition: {
        display: "CompartmentDefinition",
        code: "CompartmentDefinition",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * Composition: A set of healthcare-related information that is assembled together into a single logical package that provides a single coherent statement of meaning, establishes its own context and that has clinical attestation with regard to who is making the statement. A Composition defines the structure and narrative content necessary for a document. However, a Composition alone does not constitute a document. Rather, the Composition must be the first entry in a Bundle where Bundle.type=document, and any other resources referenced from Composition must be included as subsequent entries in the Bundle (for example Patient, Practitioner, Encounter, etc.).
     */
    Composition: {
        display: "Composition",
        code: "Composition",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * ConceptMap: A statement of relationships from one set of concepts to one or more other concepts - either concepts in code systems, or data element/data element concepts, or classes in class models.
     */
    ConceptMap: {
        display: "ConceptMap",
        code: "ConceptMap",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * Condition: A clinical condition, problem, diagnosis, or other event, situation, issue, or clinical concept that has risen to a level of concern.
     */
    Condition: {
        display: "Condition",
        code: "Condition",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * Consent: A record of a healthcare consumer’s  choices, which permits or denies identified recipient(s) or recipient role(s) to perform one or more actions within a given policy context, for specific purposes and periods of time.
     */
    Consent: {
        display: "Consent",
        code: "Consent",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * Contract: Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.
     */
    Contract: {
        display: "Contract",
        code: "Contract",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * Coverage: Financial instrument which may be used to reimburse or pay for health care products and services. Includes both insurance and self-payment.
     */
    Coverage: {
        display: "Coverage",
        code: "Coverage",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * CoverageEligibilityRequest: The CoverageEligibilityRequest provides patient and insurance coverage information to an insurer for them to respond, in the form of an CoverageEligibilityResponse, with information regarding whether the stated coverage is valid and in-force and optionally to provide the insurance details of the policy.
     */
    CoverageEligibilityRequest: {
        display: "CoverageEligibilityRequest",
        code: "CoverageEligibilityRequest",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * CoverageEligibilityResponse: This resource provides eligibility and plan details from the processing of an CoverageEligibilityRequest resource.
     */
    CoverageEligibilityResponse: {
        display: "CoverageEligibilityResponse",
        code: "CoverageEligibilityResponse",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * DetectedIssue: Indicates an actual or potential clinical issue with or between one or more active or proposed clinical actions for a patient; e.g. Drug-drug interaction, Ineffective treatment frequency, Procedure-condition conflict, etc.
     */
    DetectedIssue: {
        display: "DetectedIssue",
        code: "DetectedIssue",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * Device: A type of a manufactured item that is used in the provision of healthcare without being substantially changed through that activity. The device may be a medical or non-medical device.
     */
    Device: {
        display: "Device",
        code: "Device",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * DeviceDefinition: The characteristics, operational status and capabilities of a medical-related component of a medical device.
     */
    DeviceDefinition: {
        display: "DeviceDefinition",
        code: "DeviceDefinition",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * DeviceMetric: Describes a measurement, calculation or setting capability of a medical device.
     */
    DeviceMetric: {
        display: "DeviceMetric",
        code: "DeviceMetric",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * DeviceRequest: Represents a request for a patient to employ a medical device. The device may be an implantable device, or an external assistive device, such as a walker.
     */
    DeviceRequest: {
        display: "DeviceRequest",
        code: "DeviceRequest",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * DeviceUseStatement: A record of a device being used by a patient where the record is the result of a report from the patient or another clinician.
     */
    DeviceUseStatement: {
        display: "DeviceUseStatement",
        code: "DeviceUseStatement",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * DiagnosticReport: The findings and interpretation of diagnostic  tests performed on patients, groups of patients, devices, and locations, and/or specimens derived from these. The report includes clinical context such as requesting and provider information, and some mix of atomic results, images, textual and coded interpretations, and formatted representation of diagnostic reports.
     */
    DiagnosticReport: {
        display: "DiagnosticReport",
        code: "DiagnosticReport",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * DocumentManifest: A collection of documents compiled for a purpose together with metadata that applies to the collection.
     */
    DocumentManifest: {
        display: "DocumentManifest",
        code: "DocumentManifest",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * DocumentReference: A reference to a document of any kind for any purpose. Provides metadata about the document so that the document can be discovered and managed. The scope of a document is any seralized object with a mime-type, so includes formal patient centric documents (CDA), cliical notes, scanned paper, and non-patient specific documents like policy text.
     */
    DocumentReference: {
        display: "DocumentReference",
        code: "DocumentReference",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * DomainResource: --- Abstract Type! ---A resource that includes narrative, extensions, and contained resources.
     */
    DomainResource: {
        display: "DomainResource",
        code: "DomainResource",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * Encounter: An interaction between a patient and healthcare provider(s) for the purpose of providing healthcare service(s) or assessing the health status of a patient.
     */
    Encounter: {
        display: "Encounter",
        code: "Encounter",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * Endpoint: The technical details of an endpoint that can be used for electronic services, such as for web services providing XDS.b or a REST endpoint for another FHIR server. This may include any security context information.
     */
    Endpoint: {
        display: "Endpoint",
        code: "Endpoint",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * EnrollmentRequest: This resource provides the insurance enrollment details to the insurer regarding a specified coverage.
     */
    EnrollmentRequest: {
        display: "EnrollmentRequest",
        code: "EnrollmentRequest",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * EnrollmentResponse: This resource provides enrollment and plan details from the processing of an EnrollmentRequest resource.
     */
    EnrollmentResponse: {
        display: "EnrollmentResponse",
        code: "EnrollmentResponse",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * EpisodeOfCare: An association between a patient and an organization / healthcare provider(s) during which time encounters may occur. The managing organization assumes a level of responsibility for the patient during this time.
     */
    EpisodeOfCare: {
        display: "EpisodeOfCare",
        code: "EpisodeOfCare",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * EventDefinition: The EventDefinition resource provides a reusable description of when a particular event can occur.
     */
    EventDefinition: {
        display: "EventDefinition",
        code: "EventDefinition",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * Evidence: The Evidence Resource provides a machine-interpretable expression of an evidence concept including the evidence variables (eg population, exposures/interventions, comparators, outcomes, measured variables, confounding variables), the statistics, and the certainty of this evidence.
     */
    Evidence: {
        display: "Evidence",
        code: "Evidence",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * EvidenceReport: The EvidenceReport Resource is a specialized container for a collection of resources and codable concepts, adapted to support compositions of Evidence, EvidenceVariable, and Citation resources and related concepts.
     */
    EvidenceReport: {
        display: "EvidenceReport",
        code: "EvidenceReport",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * EvidenceVariable: The EvidenceVariable resource describes an element that knowledge (Evidence) is about.
     */
    EvidenceVariable: {
        display: "EvidenceVariable",
        code: "EvidenceVariable",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * ExampleScenario: Example of workflow instance.
     */
    ExampleScenario: {
        display: "ExampleScenario",
        code: "ExampleScenario",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * ExplanationOfBenefit: This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.
     */
    ExplanationOfBenefit: {
        display: "ExplanationOfBenefit",
        code: "ExplanationOfBenefit",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * FamilyMemberHistory: Significant health conditions for a person related to the patient relevant in the context of care for the patient.
     */
    FamilyMemberHistory: {
        display: "FamilyMemberHistory",
        code: "FamilyMemberHistory",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * Flag: Prospective warnings of potential issues when providing care to the patient.
     */
    Flag: {
        display: "Flag",
        code: "Flag",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * Goal: Describes the intended objective(s) for a patient, group or organization care, for example, weight loss, restoring an activity of daily living, obtaining herd immunity via immunization, meeting a process improvement objective, etc.
     */
    Goal: {
        display: "Goal",
        code: "Goal",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * GraphDefinition: A formal computable definition of a graph of resources - that is, a coherent set of resources that form a graph by following references. The Graph Definition resource defines a set and makes rules about the set.
     */
    GraphDefinition: {
        display: "GraphDefinition",
        code: "GraphDefinition",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * Group: Represents a defined collection of entities that may be discussed or acted upon collectively but which are not expected to act collectively, and are not formally or legally recognized; i.e. a collection of entities that isn't an Organization.
     */
    Group: {
        display: "Group",
        code: "Group",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * GuidanceResponse: A guidance response is the formal response to a guidance request, including any output parameters returned by the evaluation, as well as the description of any proposed actions to be taken.
     */
    GuidanceResponse: {
        display: "GuidanceResponse",
        code: "GuidanceResponse",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * HealthcareService: The details of a healthcare service available at a location.
     */
    HealthcareService: {
        display: "HealthcareService",
        code: "HealthcareService",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * Code: http://hl7.org/fhir/StructureDefinition/lipidprofile
     */
    LipidLabReport: {
        display: "Lipid Lab Report",
        code: "http://hl7.org/fhir/StructureDefinition/lipidprofile",
        system: "urn:ietf:rfc:3986",
    },
    /**
     * ImagingStudy: Representation of the content produced in a DICOM imaging study. A study comprises a set of series, each of which includes a set of Service-Object Pair Instances (SOP Instances - images or other data) acquired or produced in a common context.  A series is of only one modality (e.g. X-ray, CT, MR, ultrasound), but a study may have multiple series of different modalities.
     */
    ImagingStudy: {
        display: "ImagingStudy",
        code: "ImagingStudy",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * Immunization: Describes the event of a patient being administered a vaccine or a record of an immunization as reported by a patient, a clinician or another party.
     */
    Immunization: {
        display: "Immunization",
        code: "Immunization",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * ImmunizationEvaluation: Describes a comparison of an immunization event against published recommendations to determine if the administration is "valid" in relation to those  recommendations.
     */
    ImmunizationEvaluation: {
        display: "ImmunizationEvaluation",
        code: "ImmunizationEvaluation",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * ImmunizationRecommendation: A patient's point-in-time set of recommendations (i.e. forecasting) according to a published schedule with optional supporting justification.
     */
    ImmunizationRecommendation: {
        display: "ImmunizationRecommendation",
        code: "ImmunizationRecommendation",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * ImplementationGuide: A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.
     */
    ImplementationGuide: {
        display: "ImplementationGuide",
        code: "ImplementationGuide",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * Ingredient: An ingredient of a manufactured item or pharmaceutical product.
     */
    Ingredient: {
        display: "Ingredient",
        code: "Ingredient",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * InsurancePlan: Details of a Health Insurance product/plan provided by an organization.
     */
    InsurancePlan: {
        display: "InsurancePlan",
        code: "InsurancePlan",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * Invoice: Invoice containing collected ChargeItems from an Account with calculated individual and total price for Billing purpose.
     */
    Invoice: {
        display: "Invoice",
        code: "Invoice",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * Library: The Library resource is a general-purpose container for knowledge asset definitions. It can be used to describe and expose existing knowledge assets such as logic libraries and information model descriptions, as well as to describe a collection of knowledge assets.
     */
    Library: {
        display: "Library",
        code: "Library",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * Linkage: Identifies two or more records (resource instances) that refer to the same real-world "occurrence".
     */
    Linkage: {
        display: "Linkage",
        code: "Linkage",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * List: A list is a curated collection of resources.
     */
    List: {
        display: "List",
        code: "List",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * Location: Details and position information for a physical place where services are provided and resources and participants may be stored, found, contained, or accommodated.
     */
    Location: {
        display: "Location",
        code: "Location",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * ManufacturedItemDefinition: The definition and characteristics of a medicinal manufactured item, such as a tablet or capsule, as contained in a packaged medicinal product.
     */
    ManufacturedItemDefinition: {
        display: "ManufacturedItemDefinition",
        code: "ManufacturedItemDefinition",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * Measure: The Measure resource provides the definition of a quality measure.
     */
    Measure: {
        display: "Measure",
        code: "Measure",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * MeasureReport: The MeasureReport resource contains the results of the calculation of a measure; and optionally a reference to the resources involved in that calculation.
     */
    MeasureReport: {
        display: "MeasureReport",
        code: "MeasureReport",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * Media: A photo, video, or audio recording acquired or used in healthcare. The actual content may be inline or provided by direct reference.
     */
    Media: {
        display: "Media",
        code: "Media",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * Medication: This resource is primarily used for the identification and definition of a medication for the purposes of prescribing, dispensing, and administering a medication as well as for making statements about medication use.
     */
    Medication: {
        display: "Medication",
        code: "Medication",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * MedicationAdministration: Describes the event of a patient consuming or otherwise being administered a medication.  This may be as simple as swallowing a tablet or it may be a long running infusion.  Related resources tie this event to the authorizing prescription, and the specific encounter between patient and health care practitioner.
     */
    MedicationAdministration: {
        display: "MedicationAdministration",
        code: "MedicationAdministration",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * MedicationDispense: Indicates that a medication product is to be or has been dispensed for a named person/patient.  This includes a description of the medication product (supply) provided and the instructions for administering the medication.  The medication dispense is the result of a pharmacy system responding to a medication order.
     */
    MedicationDispense: {
        display: "MedicationDispense",
        code: "MedicationDispense",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * MedicationKnowledge: Information about a medication that is used to support knowledge.
     */
    MedicationKnowledge: {
        display: "MedicationKnowledge",
        code: "MedicationKnowledge",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * MedicationRequest: An order or request for both supply of the medication and the instructions for administration of the medication to a patient. The resource is called "MedicationRequest" rather than "MedicationPrescription" or "MedicationOrder" to generalize the use across inpatient and outpatient settings, including care plans, etc., and to harmonize with workflow patterns.
     */
    MedicationRequest: {
        display: "MedicationRequest",
        code: "MedicationRequest",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * MedicationStatement: A record of a medication that is being consumed by a patient.   A MedicationStatement may indicate that the patient may be taking the medication now or has taken the medication in the past or will be taking the medication in the future.  The source of this information can be the patient, significant other (such as a family member or spouse), or a clinician.  A common scenario where this information is captured is during the history taking process during a patient visit or stay.   The medication information may come from sources such as the patient's memory, from a prescription bottle,  or from a list of medications the patient, clinician or other party maintains.
     * The primary difference between a medication statement and a medication administration is that the medication administration has complete administration information and is based on actual administration information from the person who administered the medication.  A medication statement is often, if not always, less specific.  There is no required date/time when the medication was administered, in fact we only know that a source has reported the patient is taking this medication, where details such as time, quantity, or rate or even medication product may be incomplete or missing or less precise.  As stated earlier, the medication statement information may come from the patient's memory, from a prescription bottle or from a list of medications the patient, clinician or other party maintains.  Medication administration is more formal and is not missing detailed information.
     */
    MedicationStatement: {
        display: "MedicationStatement",
        code: "MedicationStatement",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * MedicinalProductDefinition: Detailed definition of a medicinal product, typically for uses other than direct patient care (e.g. regulatory use, drug catalogs, to support prescribing, adverse events management etc.).
     */
    MedicinalProductDefinition: {
        display: "MedicinalProductDefinition",
        code: "MedicinalProductDefinition",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * MessageDefinition: Defines the characteristics of a message that can be shared between systems, including the type of event that initiates the message, the content to be transmitted and what response(s), if any, are permitted.
     */
    MessageDefinition: {
        display: "MessageDefinition",
        code: "MessageDefinition",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * MessageHeader: The header for a message exchange that is either requesting or responding to an action.  The reference(s) that are the subject of the action as well as other information related to the action are typically transmitted in a bundle in which the MessageHeader resource instance is the first resource in the bundle.
     */
    MessageHeader: {
        display: "MessageHeader",
        code: "MessageHeader",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * MolecularSequence: Raw data describing a biological sequence.
     */
    MolecularSequence: {
        display: "MolecularSequence",
        code: "MolecularSequence",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * NamingSystem: A curated namespace that issues unique symbols within that namespace for the identification of concepts, people, devices, etc.  Represents a "System" used within the Identifier and Coding data types.
     */
    NamingSystem: {
        display: "NamingSystem",
        code: "NamingSystem",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * NutritionOrder: A request to supply a diet, formula feeding (enteral) or oral nutritional supplement to a patient/resident.
     */
    NutritionOrder: {
        display: "NutritionOrder",
        code: "NutritionOrder",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * NutritionProduct: A food or fluid product that is consumed by patients.
     */
    NutritionProduct: {
        display: "NutritionProduct",
        code: "NutritionProduct",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * Observation: Measurements and simple assertions made about a patient, device or other subject.
     */
    Observation: {
        display: "Observation",
        code: "Observation",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * ObservationDefinition: Set of definitional characteristics for a kind of observation or measurement produced or consumed by an orderable health care service.
     */
    ObservationDefinition: {
        display: "ObservationDefinition",
        code: "ObservationDefinition",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * OperationDefinition: A formal computable definition of an operation (on the RESTful interface) or a named query (using the search interaction).
     */
    OperationDefinition: {
        display: "OperationDefinition",
        code: "OperationDefinition",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * OperationOutcome: A collection of error, warning, or information messages that result from a system action.
     */
    OperationOutcome: {
        display: "OperationOutcome",
        code: "OperationOutcome",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * Organization: A formally or informally recognized grouping of people or organizations formed for the purpose of achieving some form of collective action.  Includes companies, institutions, corporations, departments, community groups, healthcare practice groups, payer/insurer, etc.
     */
    Organization: {
        display: "Organization",
        code: "Organization",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * OrganizationAffiliation: Defines an affiliation/assotiation/relationship between 2 distinct oganizations, that is not a part-of relationship/sub-division relationship.
     */
    OrganizationAffiliation: {
        display: "OrganizationAffiliation",
        code: "OrganizationAffiliation",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * PackagedProductDefinition: A medically related item or items, in a container or package.
     */
    PackagedProductDefinition: {
        display: "PackagedProductDefinition",
        code: "PackagedProductDefinition",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * Parameters: This resource is a non-persisted resource used to pass information into and back from an [operation](operations.html). It has no other use, and there is no RESTful endpoint associated with it.
     */
    Parameters: {
        display: "Parameters",
        code: "Parameters",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * Patient: Demographics and other administrative information about an individual or animal receiving care or other health-related services.
     */
    Patient: {
        display: "Patient",
        code: "Patient",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * PaymentNotice: This resource provides the status of the payment for goods and services rendered, and the request and response resource references.
     */
    PaymentNotice: {
        display: "PaymentNotice",
        code: "PaymentNotice",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * PaymentReconciliation: This resource provides the details including amount of a payment and allocates the payment items being paid.
     */
    PaymentReconciliation: {
        display: "PaymentReconciliation",
        code: "PaymentReconciliation",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * Person: Demographics and administrative information about a person independent of a specific health-related context.
     */
    Person: {
        display: "Person",
        code: "Person",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * PlanDefinition: This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical and non-clinical artifacts such as clinical decision support rules, order sets, protocols, and drug quality specifications.
     */
    PlanDefinition: {
        display: "PlanDefinition",
        code: "PlanDefinition",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * Practitioner: A person who is directly or indirectly involved in the provisioning of healthcare.
     */
    Practitioner: {
        display: "Practitioner",
        code: "Practitioner",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * PractitionerRole: A specific set of Roles/Locations/specialties/services that a practitioner may perform at an organization for a period of time.
     */
    PractitionerRole: {
        display: "PractitionerRole",
        code: "PractitionerRole",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * Procedure: An action that is or was performed on or for a patient. This can be a physical intervention like an operation, or less invasive like long term services, counseling, or hypnotherapy.
     */
    Procedure: {
        display: "Procedure",
        code: "Procedure",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * Provenance: Provenance of a resource is a record that describes entities and processes involved in producing and delivering or otherwise influencing that resource. Provenance provides a critical foundation for assessing authenticity, enabling trust, and allowing reproducibility. Provenance assertions are a form of contextual metadata and can themselves become important records with their own provenance. Provenance statement indicates clinical significance in terms of confidence in authenticity, reliability, and trustworthiness, integrity, and stage in lifecycle (e.g. Document Completion - has the artifact been legally authenticated), all of which may impact security, privacy, and trust policies.
     */
    Provenance: {
        display: "Provenance",
        code: "Provenance",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * Questionnaire: A structured set of questions intended to guide the collection of answers from end-users. Questionnaires provide detailed control over order, presentation, phraseology and grouping to allow coherent, consistent data collection.
     */
    Questionnaire: {
        display: "Questionnaire",
        code: "Questionnaire",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * QuestionnaireResponse: A structured set of questions and their answers. The questions are ordered and grouped into coherent subsets, corresponding to the structure of the grouping of the questionnaire being responded to.
     */
    QuestionnaireResponse: {
        display: "QuestionnaireResponse",
        code: "QuestionnaireResponse",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * RegulatedAuthorization: Regulatory approval, clearance or licencing related to a regulated product, treatment, facility or activity that is cited in a guidance, regulation, rule or legislative act. An example is Market Authorization relating to a Medicinal Product.
     */
    RegulatedAuthorization: {
        display: "RegulatedAuthorization",
        code: "RegulatedAuthorization",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * RelatedPerson: Information about a person that is involved in the care for a patient, but who is not the target of healthcare, nor has a formal responsibility in the care process.
     */
    RelatedPerson: {
        display: "RelatedPerson",
        code: "RelatedPerson",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * RequestGroup: A group of related requests that can be used to capture intended activities that have inter-dependencies such as "give this medication after that one".
     */
    RequestGroup: {
        display: "RequestGroup",
        code: "RequestGroup",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * ResearchDefinition: The ResearchDefinition resource describes the conditional state (population and any exposures being compared within the population) and outcome (if specified) that the knowledge (evidence, assertion, recommendation) is about.
     */
    ResearchDefinition: {
        display: "ResearchDefinition",
        code: "ResearchDefinition",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * ResearchElementDefinition: The ResearchElementDefinition resource describes a "PICO" element that knowledge (evidence, assertion, recommendation) is about.
     */
    ResearchElementDefinition: {
        display: "ResearchElementDefinition",
        code: "ResearchElementDefinition",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * ResearchStudy: A process where a researcher or organization plans and then executes a series of steps intended to increase the field of healthcare-related knowledge.  This includes studies of safety, efficacy, comparative effectiveness and other information about medications, devices, therapies and other interventional and investigative techniques.  A ResearchStudy involves the gathering of information about human or animal subjects.
     */
    ResearchStudy: {
        display: "ResearchStudy",
        code: "ResearchStudy",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * ResearchSubject: A physical entity which is the primary unit of operational and/or administrative interest in a study.
     */
    ResearchSubject: {
        display: "ResearchSubject",
        code: "ResearchSubject",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * Resource: --- Abstract Type! ---This is the base resource type for everything.
     */
    Resource: {
        display: "Resource",
        code: "Resource",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * RiskAssessment: An assessment of the likely outcome(s) for a patient or other subject as well as the likelihood of each outcome.
     */
    RiskAssessment: {
        display: "RiskAssessment",
        code: "RiskAssessment",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * Schedule: A container for slots of time that may be available for booking appointments.
     */
    Schedule: {
        display: "Schedule",
        code: "Schedule",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * SearchParameter: A search parameter that defines a named search item that can be used to search/filter on a resource.
     */
    SearchParameter: {
        display: "SearchParameter",
        code: "SearchParameter",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * ServiceRequest: A record of a request for service such as diagnostic investigations, treatments, or operations to be performed.
     */
    ServiceRequest: {
        display: "ServiceRequest",
        code: "ServiceRequest",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * Slot: A slot of time on a schedule that may be available for booking appointments.
     */
    Slot: {
        display: "Slot",
        code: "Slot",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * Specimen: A sample to be used for analysis.
     */
    Specimen: {
        display: "Specimen",
        code: "Specimen",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * SpecimenDefinition: A kind of specimen with associated set of requirements.
     */
    SpecimenDefinition: {
        display: "SpecimenDefinition",
        code: "SpecimenDefinition",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * StructureDefinition: A definition of a FHIR structure. This resource is used to describe the underlying resources, data types defined in FHIR, and also for describing extensions and constraints on resources and data types.
     */
    StructureDefinition: {
        display: "StructureDefinition",
        code: "StructureDefinition",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * StructureMap: A Map of relationships between 2 structures that can be used to transform data.
     */
    StructureMap: {
        display: "StructureMap",
        code: "StructureMap",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * Subscription: The subscription resource is used to define a push-based subscription from a server to another system. Once a subscription is registered with the server, the server checks every resource that is created or updated, and if the resource matches the given criteria, it sends a message on the defined "channel" so that another system can take an appropriate action.
     */
    Subscription: {
        display: "Subscription",
        code: "Subscription",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * SubscriptionStatus: The SubscriptionStatus resource describes the state of a Subscription during notifications.
     */
    SubscriptionStatus: {
        display: "SubscriptionStatus",
        code: "SubscriptionStatus",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * SubscriptionTopic: Describes a stream of resource state changes identified by trigger criteria and annotated with labels useful to filter projections from this topic.
     */
    SubscriptionTopic: {
        display: "SubscriptionTopic",
        code: "SubscriptionTopic",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * Substance: A homogeneous material with a definite composition.
     */
    Substance: {
        display: "Substance",
        code: "Substance",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * SubstanceDefinition: The detailed description of a substance, typically at a level beyond what is used for prescribing.
     */
    SubstanceDefinition: {
        display: "SubstanceDefinition",
        code: "SubstanceDefinition",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * SupplyDelivery: Record of delivery of what is supplied.
     */
    SupplyDelivery: {
        display: "SupplyDelivery",
        code: "SupplyDelivery",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * SupplyRequest: A record of a request for a medication, substance or device used in the healthcare setting.
     */
    SupplyRequest: {
        display: "SupplyRequest",
        code: "SupplyRequest",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * Task: A task to be performed.
     */
    Task: {
        display: "Task",
        code: "Task",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * TerminologyCapabilities: A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.
     */
    TerminologyCapabilities: {
        display: "TerminologyCapabilities",
        code: "TerminologyCapabilities",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * TestReport: A summary of information based on the results of executing a TestScript.
     */
    TestReport: {
        display: "TestReport",
        code: "TestReport",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * TestScript: A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.
     */
    TestScript: {
        display: "TestScript",
        code: "TestScript",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * Code: urn:hl7-org:sdwg:ccda-nonXMLBody:1.1
     */
    ForDocumentsFollowingCCDA11ConstraintsUsingANonStructuredBody: {
        display: "For documents following C-CDA 1.1 constraints using a non structured body.",
        code: "urn:hl7-org:sdwg:ccda-nonXMLBody:1.1",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:hl7-org:sdwg:ccda-nonXMLBody:2.1
     */
    ForDocumentsFollowingCCDA21ConstraintsUsingANonStructuredBody: {
        display: "For documents following C-CDA 2.1 constraints using a non structured body.",
        code: "urn:hl7-org:sdwg:ccda-nonXMLBody:2.1",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:hl7-org:sdwg:ccda-structuredBody:1.1
     */
    ForDocumentsFollowingCCDA11ConstraintsUsingAStructuredBody: {
        display: "For documents following C-CDA 1.1 constraints using a structured body.",
        code: "urn:hl7-org:sdwg:ccda-structuredBody:1.1",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:hl7-org:sdwg:ccda-structuredBody:2.1
     */
    ForDocumentsFollowingCCDA21ConstraintsUsingAStructuredBody: {
        display: "For documents following C-CDA 2.1 constraints using a structured body.",
        code: "urn:hl7-org:sdwg:ccda-structuredBody:2.1",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:card:CRC:2012
     */
    CardiologyCRC: {
        display: "Cardiology CRC",
        code: "urn:ihe:card:CRC:2012",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:card:EPRC-IE:2014
     */
    CardiologyEPRCIE: {
        display: "Cardiology EPRC-IE",
        code: "urn:ihe:card:EPRC-IE:2014",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:card:imaging:2011
     */
    CardiacImagingReport: {
        display: "Cardiac Imaging Report",
        code: "urn:ihe:card:imaging:2011",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:dent:CDA:ImagingReportStructuredHeadings:2013
     */
    DentalCDA: {
        display: "Dental CDA",
        code: "urn:ihe:dent:CDA:ImagingReportStructuredHeadings:2013",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:dent:PDF
     */
    DentalPDF: {
        display: "Dental PDF",
        code: "urn:ihe:dent:PDF",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:dent:TEXT
     */
    DentalText: {
        display: "Dental Text",
        code: "urn:ihe:dent:TEXT",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:iti:appc:2016:consent
     */
    AdvancedPatientPrivacyConsents: {
        display: "Advanced Patient Privacy Consents",
        code: "urn:ihe:iti:appc:2016:consent",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:iti:bppc-sd:2007
     */
    BasicPatientPrivacyConsentsWithScannedDocument: {
        display: "Basic Patient Privacy Consents with Scanned Document",
        code: "urn:ihe:iti:bppc-sd:2007",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:iti:bppc:2007
     */
    BasicPatientPrivacyConsents: {
        display: "Basic Patient Privacy Consents",
        code: "urn:ihe:iti:bppc:2007",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:iti:dsg:detached:2014
     */
    DSGDetachedDocument: {
        display: "DSG Detached Document",
        code: "urn:ihe:iti:dsg:detached:2014",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:iti:dsg:enveloping:2014
     */
    DSGEnvelopingDocument: {
        display: "DSG Enveloping Document",
        code: "urn:ihe:iti:dsg:enveloping:2014",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:iti:xds-sd:pdf:2008
     */
    PDFEmbeddedInCDAPerXDSSDProfile: {
        display: "PDF embedded in CDA per XDS-SD profile",
        code: "urn:ihe:iti:xds-sd:pdf:2008",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:iti:xds-sd:text:2008
     */
    TextEmbeddedInCDAPerXDSSDProfile: {
        display: "Text embedded in CDA per XDS-SD profile",
        code: "urn:ihe:iti:xds-sd:text:2008",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:iti:xds:2017:mimeTypeSufficient
     */
    MimeTypeSufficient: {
        display: "mimeType Sufficient",
        code: "urn:ihe:iti:xds:2017:mimeTypeSufficient",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:iti:xdw:2011:workflowDoc
     */
    XDWWorkflowDocument: {
        display: "XDW Workflow Document",
        code: "urn:ihe:iti:xdw:2011:workflowDoc",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:lab:xd-lab:2008
     */
    CDALaboratoryReport: {
        display: "CDA Laboratory Report",
        code: "urn:ihe:lab:xd-lab:2008",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:pat:apsr:all:2010
     */
    AnatomicPathologyStructuredReportAll: {
        display: "Anatomic Pathology Structured Report All",
        code: "urn:ihe:pat:apsr:all:2010",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:pat:apsr:cancer:all:2010
     */
    AnatomicPathologyStructuredReportCancerAll: {
        display: "Anatomic Pathology Structured Report Cancer All",
        code: "urn:ihe:pat:apsr:cancer:all:2010",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:pat:apsr:cancer:breast:2010
     */
    AnatomicPathologyStructuredReportCancerBreast: {
        display: "Anatomic Pathology Structured Report Cancer Breast",
        code: "urn:ihe:pat:apsr:cancer:breast:2010",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:pat:apsr:cancer:cervix:2010
     */
    AnatomicPathologyStructuredReportCancerCervix: {
        display: "Anatomic Pathology Structured Report Cancer Cervix",
        code: "urn:ihe:pat:apsr:cancer:cervix:2010",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:pat:apsr:cancer:colon:2010
     */
    AnatomicPathologyStructuredReportCancerColon: {
        display: "Anatomic Pathology Structured Report Cancer Colon",
        code: "urn:ihe:pat:apsr:cancer:colon:2010",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:pat:apsr:cancer:endometrium:2010
     */
    AnatomicPathologyStructuredReportCancerEndometrium: {
        display: "Anatomic Pathology Structured Report Cancer Endometrium",
        code: "urn:ihe:pat:apsr:cancer:endometrium:2010",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:pat:apsr:cancer:esophagus:2010
     */
    AnatomicPathologyStructuredReportCancerEsophagus: {
        display: "Anatomic Pathology Structured Report Cancer Esophagus",
        code: "urn:ihe:pat:apsr:cancer:esophagus:2010",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:pat:apsr:cancer:kidney:2010
     */
    AnatomicPathologyStructuredReportCancerKidney: {
        display: "Anatomic Pathology Structured Report Cancer Kidney",
        code: "urn:ihe:pat:apsr:cancer:kidney:2010",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:pat:apsr:cancer:larynx:2010
     */
    AnatomicPathologyStructuredReportCancerLarynx: {
        display: "Anatomic Pathology Structured Report Cancer Larynx",
        code: "urn:ihe:pat:apsr:cancer:larynx:2010",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:pat:apsr:cancer:lip_oral_cavity:2010
     */
    AnatomicPathologyStructuredReportCancerLipOralCavity: {
        display: "Anatomic Pathology Structured Report Cancer Lip Oral Cavity",
        code: "urn:ihe:pat:apsr:cancer:lip_oral_cavity:2010",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:pat:apsr:cancer:liver:2010
     */
    AnatomicPathologyStructuredReportCancerLiver: {
        display: "Anatomic Pathology Structured Report Cancer Liver",
        code: "urn:ihe:pat:apsr:cancer:liver:2010",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:pat:apsr:cancer:lung:2010
     */
    AnatomicPathologyStructuredReportCancerLung: {
        display: "Anatomic Pathology Structured Report Cancer Lung",
        code: "urn:ihe:pat:apsr:cancer:lung:2010",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:pat:apsr:cancer:ovary:2010
     */
    AnatomicPathologyStructuredReportCancerOvary: {
        display: "Anatomic Pathology Structured Report Cancer Ovary",
        code: "urn:ihe:pat:apsr:cancer:ovary:2010",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:pat:apsr:cancer:pancreas:2010
     */
    AnatomicPathologyStructuredReportCancerPancreas: {
        display: "Anatomic Pathology Structured Report Cancer Pancreas",
        code: "urn:ihe:pat:apsr:cancer:pancreas:2010",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:pat:apsr:cancer:pharynx:2010
     */
    AnatomicPathologyStructuredReportCancerPharynx: {
        display: "Anatomic Pathology Structured Report Cancer Pharynx",
        code: "urn:ihe:pat:apsr:cancer:pharynx:2010",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:pat:apsr:cancer:prostate:2010
     */
    AnatomicPathologyStructuredReportCancerProstate: {
        display: "Anatomic Pathology Structured Report Cancer Prostate",
        code: "urn:ihe:pat:apsr:cancer:prostate:2010",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:pat:apsr:cancer:salivary_gland:2010
     */
    AnatomicPathologyStructuredReportCancerSalivaryGland: {
        display: "Anatomic Pathology Structured Report Cancer Salivary Gland",
        code: "urn:ihe:pat:apsr:cancer:salivary_gland:2010",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:pat:apsr:cancer:skin:2010
     */
    AnatomicPathologyStructuredReportCancerSkin: {
        display: "Anatomic Pathology Structured Report Cancer Skin",
        code: "urn:ihe:pat:apsr:cancer:skin:2010",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:pat:apsr:cancer:stomach:2010
     */
    AnatomicPathologyStructuredReportCancerStomach: {
        display: "Anatomic Pathology Structured Report Cancer Stomach",
        code: "urn:ihe:pat:apsr:cancer:stomach:2010",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:pat:apsr:cancer:testis:2010
     */
    AnatomicPathologyStructuredReportCancerTestis: {
        display: "Anatomic Pathology Structured Report Cancer Testis",
        code: "urn:ihe:pat:apsr:cancer:testis:2010",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:pat:apsr:cancer:thyroid:2010
     */
    AnatomicPathologyStructuredReportCancerThyroid: {
        display: "Anatomic Pathology Structured Report Cancer Thyroid",
        code: "urn:ihe:pat:apsr:cancer:thyroid:2010",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:pat:apsr:cancer:urinary_bladder:2010
     */
    AnatomicPathologyStructuredReportCancerUrinaryBladder: {
        display: "Anatomic Pathology Structured Report Cancer Urinary Bladder",
        code: "urn:ihe:pat:apsr:cancer:urinary_bladder:2010",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:pcc:apr:edu:2008
     */
    AntepartumRecordAPREducation: {
        display: "Antepartum Record (APR) - Education",
        code: "urn:ihe:pcc:apr:edu:2008",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:pcc:apr:handp:2008
     */
    AntepartumRecordAPRHistoryAndPhysical: {
        display: "Antepartum Record (APR) - History and Physical",
        code: "urn:ihe:pcc:apr:handp:2008",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:pcc:apr:lab:2008
     */
    AntepartumRecordAPRLaboratory: {
        display: "Antepartum Record (APR) - Laboratory",
        code: "urn:ihe:pcc:apr:lab:2008",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:pcc:aps:2007
     */
    IHEAntepartumSummary: {
        display: "IHE Antepartum Summary",
        code: "urn:ihe:pcc:aps:2007",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:pcc:cm:2008
     */
    CareManagementCM: {
        display: "Care Management (CM)",
        code: "urn:ihe:pcc:cm:2008",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:pcc:crc:2008
     */
    CancerRegistryContentCRC: {
        display: "Cancer Registry Content (CRC)",
        code: "urn:ihe:pcc:crc:2008",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:pcc:ctn:2007
     */
    PCCCTN: {
        display: "PCC CTN",
        code: "urn:ihe:pcc:ctn:2007",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:pcc:edes:2007
     */
    EmergencyDepartmentEncounterSummaryEDES: {
        display: "Emergency Department Encounter Summary (EDES)",
        code: "urn:ihe:pcc:edes:2007",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:pcc:edpn:2007
     */
    PCCEDPN: {
        display: "PCC EDPN",
        code: "urn:ihe:pcc:edpn:2007",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:pcc:edr:2007
     */
    EmergencyDepartmentReferralEDR: {
        display: "Emergency Department Referral (EDR)",
        code: "urn:ihe:pcc:edr:2007",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:pcc:ets:2011
     */
    PCCETS: {
        display: "PCC ETS",
        code: "urn:ihe:pcc:ets:2011",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:pcc:hp:2008
     */
    PCCHP: {
        display: "PCC HP",
        code: "urn:ihe:pcc:hp:2008",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:pcc:ic:2008
     */
    ImmunizationContentIC: {
        display: "Immunization Content (IC)",
        code: "urn:ihe:pcc:ic:2008",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:pcc:its:2011
     */
    PCCITS: {
        display: "PCC ITS",
        code: "urn:ihe:pcc:its:2011",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:pcc:ldhp:2009
     */
    PCCLDHP: {
        display: "PCC LDHP",
        code: "urn:ihe:pcc:ldhp:2009",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:pcc:lds:2009
     */
    PCCLDS: {
        display: "PCC LDS",
        code: "urn:ihe:pcc:lds:2009",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:pcc:mds:2009
     */
    PCCMDS: {
        display: "PCC MDS",
        code: "urn:ihe:pcc:mds:2009",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:pcc:nds:2010
     */
    PCCNDS: {
        display: "PCC NDS",
        code: "urn:ihe:pcc:nds:2010",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:pcc:nn:2007
     */
    PCCNN: {
        display: "PCC NN",
        code: "urn:ihe:pcc:nn:2007",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:pcc:ppvs:2010
     */
    PCCPPVS: {
        display: "PCC PPVS",
        code: "urn:ihe:pcc:ppvs:2010",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:pcc:ript:2017
     */
    RoutineInterfacilityPatientTransportRIPT: {
        display: "Routine Interfacility Patient Transport (RIPT)",
        code: "urn:ihe:pcc:ript:2017",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:pcc:tn:2007
     */
    PCCTN: {
        display: "PCC TN",
        code: "urn:ihe:pcc:tn:2007",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:pcc:trs:2011
     */
    PCCTRS: {
        display: "PCC TRS",
        code: "urn:ihe:pcc:trs:2011",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:pcc:xds-ms:2007
     */
    XDSMedicalSummaries: {
        display: "XDS Medical Summaries",
        code: "urn:ihe:pcc:xds-ms:2007",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:pcc:xphr:2007
     */
    PersonalHealthRecordsAlsoKnownAsHL7CCDAndHITSPC32: {
        display: "Personal Health Records. Also known as HL7 CCD and HITSP C32",
        code: "urn:ihe:pcc:xphr:2007",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:pharm:dis:2010
     */
    PharmacyDIS: {
        display: "Pharmacy DIS",
        code: "urn:ihe:pharm:dis:2010",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:pharm:padv:2010
     */
    PharmacyPADV: {
        display: "Pharmacy PADV",
        code: "urn:ihe:pharm:padv:2010",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:pharm:pml:2013
     */
    PharmacyPML: {
        display: "Pharmacy PML",
        code: "urn:ihe:pharm:pml:2013",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:pharm:pre:2010
     */
    PharmacyPre: {
        display: "Pharmacy Pre",
        code: "urn:ihe:pharm:pre:2010",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:rad:CDA:ImagingReportStructuredHeadings:2013
     */
    RadiologyXDSIStructuredCDA: {
        display: "Radiology XDS-I Structured CDA",
        code: "urn:ihe:rad:CDA:ImagingReportStructuredHeadings:2013",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:rad:PDF
     */
    RadiologyXDSIPDF: {
        display: "Radiology XDS-I PDF",
        code: "urn:ihe:rad:PDF",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * Code: urn:ihe:rad:TEXT
     */
    RadiologyXDSIText: {
        display: "Radiology XDS-I Text",
        code: "urn:ihe:rad:TEXT",
        system: "http://ihe.net/fhir/ValueSet/IHE.FormatCode.codesystem",
    },
    /**
     * ValueSet: A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [[[CodeSystem]]] definitions and their use in [coded elements](terminologies.html).
     */
    ValueSet: {
        display: "ValueSet",
        code: "ValueSet",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * VerificationResult: Describes validation requirements, source(s), status and dates for one or more elements.
     */
    VerificationResult: {
        display: "VerificationResult",
        code: "VerificationResult",
        system: "http://hl7.org/fhir/resource-types",
    },
    /**
     * VisionPrescription: An authorization for the provision of glasses and/or contact lenses to a patient.
     */
    VisionPrescription: {
        display: "VisionPrescription",
        code: "VisionPrescription",
        system: "http://hl7.org/fhir/resource-types",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29uc2VudENvbnRlbnRDbGFzc0NvZGluZ3MuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL0NvbnNlbnRDb250ZW50Q2xhc3NDb2RpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQixnREFBZ0Q7QUFDaEQsa0NBQWtDO0FBQ2xDLDBFQUEwRTtBQXczQjFFOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sMEJBQTBCLEdBQWlDO0lBQ3RFOztPQUVHO0lBQ0gsT0FBTyxFQUFFO1FBQ1AsT0FBTyxFQUFFLFNBQVM7UUFDbEIsSUFBSSxFQUFFLFNBQVM7UUFDZixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxrQkFBa0IsRUFBRTtRQUNsQixPQUFPLEVBQUUsb0JBQW9CO1FBQzdCLElBQUksRUFBRSxvQkFBb0I7UUFDMUIsTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gsOEJBQThCLEVBQUU7UUFDOUIsT0FBTyxFQUFFLGdDQUFnQztRQUN6QyxJQUFJLEVBQUUsZ0NBQWdDO1FBQ3RDLE1BQU0sRUFBRSxvQ0FBb0M7S0FDN0M7SUFDRDs7T0FFRztJQUNILFlBQVksRUFBRTtRQUNaLE9BQU8sRUFBRSxjQUFjO1FBQ3ZCLElBQUksRUFBRSxjQUFjO1FBQ3BCLE1BQU0sRUFBRSxvQ0FBb0M7S0FDN0M7SUFDRDs7T0FFRztJQUNILGtCQUFrQixFQUFFO1FBQ2xCLE9BQU8sRUFBRSxvQkFBb0I7UUFDN0IsSUFBSSxFQUFFLG9CQUFvQjtRQUMxQixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxZQUFZLEVBQUU7UUFDWixPQUFPLEVBQUUsZUFBZTtRQUN4QixJQUFJLEVBQUUseUJBQXlCO1FBQy9CLE1BQU0sRUFBRSxpQkFBaUI7S0FDMUI7SUFDRDs7T0FFRztJQUNILFdBQVcsRUFBRTtRQUNYLE9BQU8sRUFBRSxhQUFhO1FBQ3RCLElBQUksRUFBRSxhQUFhO1FBQ25CLE1BQU0sRUFBRSxvQ0FBb0M7S0FDN0M7SUFDRDs7T0FFRztJQUNILG1CQUFtQixFQUFFO1FBQ25CLE9BQU8sRUFBRSxxQkFBcUI7UUFDOUIsSUFBSSxFQUFFLHFCQUFxQjtRQUMzQixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxVQUFVLEVBQUU7UUFDVixPQUFPLEVBQUUsWUFBWTtRQUNyQixJQUFJLEVBQUUsWUFBWTtRQUNsQixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxLQUFLLEVBQUU7UUFDTCxPQUFPLEVBQUUsT0FBTztRQUNoQixJQUFJLEVBQUUsT0FBTztRQUNiLE1BQU0sRUFBRSxvQ0FBb0M7S0FDN0M7SUFDRDs7T0FFRztJQUNILE1BQU0sRUFBRTtRQUNOLE9BQU8sRUFBRSxRQUFRO1FBQ2pCLElBQUksRUFBRSxRQUFRO1FBQ2QsTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOzs7T0FHRztJQUNILDBCQUEwQixFQUFFO1FBQzFCLE9BQU8sRUFBRSw0QkFBNEI7UUFDckMsSUFBSSxFQUFFLDRCQUE0QjtRQUNsQyxNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxhQUFhLEVBQUU7UUFDYixPQUFPLEVBQUUsZUFBZTtRQUN4QixJQUFJLEVBQUUsZUFBZTtRQUNyQixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxNQUFNLEVBQUU7UUFDTixPQUFPLEVBQUUsUUFBUTtRQUNqQixJQUFJLEVBQUUsUUFBUTtRQUNkLE1BQU0sRUFBRSxvQ0FBb0M7S0FDN0M7SUFDRDs7T0FFRztJQUNILG1CQUFtQixFQUFFO1FBQ25CLE9BQU8sRUFBRSxxQkFBcUI7UUFDOUIsSUFBSSxFQUFFLHFCQUFxQjtRQUMzQixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxRQUFRLEVBQUU7UUFDUixPQUFPLEVBQUUsVUFBVTtRQUNuQixJQUFJLEVBQUUsVUFBVTtRQUNoQixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxRQUFRLEVBQUU7UUFDUixPQUFPLEVBQUUsVUFBVTtRQUNuQixJQUFJLEVBQUUsVUFBVTtRQUNoQixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxZQUFZLEVBQUU7UUFDWixPQUFPLEVBQUUsY0FBYztRQUN2QixJQUFJLEVBQUUsY0FBYztRQUNwQixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxVQUFVLEVBQUU7UUFDVixPQUFPLEVBQUUsWUFBWTtRQUNyQixJQUFJLEVBQUUsWUFBWTtRQUNsQixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxvQkFBb0IsRUFBRTtRQUNwQixPQUFPLEVBQUUsc0JBQXNCO1FBQy9CLElBQUksRUFBRSxzQkFBc0I7UUFDNUIsTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gsUUFBUSxFQUFFO1FBQ1IsT0FBTyxFQUFFLFVBQVU7UUFDbkIsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gsS0FBSyxFQUFFO1FBQ0wsT0FBTyxFQUFFLE9BQU87UUFDaEIsSUFBSSxFQUFFLE9BQU87UUFDYixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxhQUFhLEVBQUU7UUFDYixPQUFPLEVBQUUsZUFBZTtRQUN4QixJQUFJLEVBQUUsZUFBZTtRQUNyQixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxrQkFBa0IsRUFBRTtRQUNsQixPQUFPLEVBQUUsb0JBQW9CO1FBQzdCLElBQUksRUFBRSxvQkFBb0I7UUFDMUIsTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gscUJBQXFCLEVBQUU7UUFDckIsT0FBTyxFQUFFLHVCQUF1QjtRQUNoQyxJQUFJLEVBQUUsdUJBQXVCO1FBQzdCLE1BQU0sRUFBRSxvQ0FBb0M7S0FDN0M7SUFDRDs7T0FFRztJQUNILFVBQVUsRUFBRTtRQUNWLE9BQU8sRUFBRSxZQUFZO1FBQ3JCLElBQUksRUFBRSxZQUFZO1FBQ2xCLE1BQU0sRUFBRSxvQ0FBb0M7S0FDN0M7SUFDRDs7T0FFRztJQUNILGFBQWEsRUFBRTtRQUNiLE9BQU8sRUFBRSxlQUFlO1FBQ3hCLElBQUksRUFBRSxlQUFlO1FBQ3JCLE1BQU0sRUFBRSxvQ0FBb0M7S0FDN0M7SUFDRDs7T0FFRztJQUNILG9CQUFvQixFQUFFO1FBQ3BCLE9BQU8sRUFBRSxzQkFBc0I7UUFDL0IsSUFBSSxFQUFFLHNCQUFzQjtRQUM1QixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxxQkFBcUIsRUFBRTtRQUNyQixPQUFPLEVBQUUsdUJBQXVCO1FBQ2hDLElBQUksRUFBRSx1QkFBdUI7UUFDN0IsTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gsV0FBVyxFQUFFO1FBQ1gsT0FBTyxFQUFFLGFBQWE7UUFDdEIsSUFBSSxFQUFFLGFBQWE7UUFDbkIsTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gsVUFBVSxFQUFFO1FBQ1YsT0FBTyxFQUFFLFlBQVk7UUFDckIsSUFBSSxFQUFFLFlBQVk7UUFDbEIsTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gsU0FBUyxFQUFFO1FBQ1QsT0FBTyxFQUFFLFdBQVc7UUFDcEIsSUFBSSxFQUFFLFdBQVc7UUFDakIsTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gsT0FBTyxFQUFFO1FBQ1AsT0FBTyxFQUFFLFNBQVM7UUFDbEIsSUFBSSxFQUFFLFNBQVM7UUFDZixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxRQUFRLEVBQUU7UUFDUixPQUFPLEVBQUUsVUFBVTtRQUNuQixJQUFJLEVBQUUsVUFBVTtRQUNoQixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxRQUFRLEVBQUU7UUFDUixPQUFPLEVBQUUsVUFBVTtRQUNuQixJQUFJLEVBQUUsVUFBVTtRQUNoQixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCwwQkFBMEIsRUFBRTtRQUMxQixPQUFPLEVBQUUsNEJBQTRCO1FBQ3JDLElBQUksRUFBRSw0QkFBNEI7UUFDbEMsTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gsMkJBQTJCLEVBQUU7UUFDM0IsT0FBTyxFQUFFLDZCQUE2QjtRQUN0QyxJQUFJLEVBQUUsNkJBQTZCO1FBQ25DLE1BQU0sRUFBRSxvQ0FBb0M7S0FDN0M7SUFDRDs7T0FFRztJQUNILGFBQWEsRUFBRTtRQUNiLE9BQU8sRUFBRSxlQUFlO1FBQ3hCLElBQUksRUFBRSxlQUFlO1FBQ3JCLE1BQU0sRUFBRSxvQ0FBb0M7S0FDN0M7SUFDRDs7T0FFRztJQUNILE1BQU0sRUFBRTtRQUNOLE9BQU8sRUFBRSxRQUFRO1FBQ2pCLElBQUksRUFBRSxRQUFRO1FBQ2QsTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gsZ0JBQWdCLEVBQUU7UUFDaEIsT0FBTyxFQUFFLGtCQUFrQjtRQUMzQixJQUFJLEVBQUUsa0JBQWtCO1FBQ3hCLE1BQU0sRUFBRSxvQ0FBb0M7S0FDN0M7SUFDRDs7T0FFRztJQUNILFlBQVksRUFBRTtRQUNaLE9BQU8sRUFBRSxjQUFjO1FBQ3ZCLElBQUksRUFBRSxjQUFjO1FBQ3BCLE1BQU0sRUFBRSxvQ0FBb0M7S0FDN0M7SUFDRDs7T0FFRztJQUNILGFBQWEsRUFBRTtRQUNiLE9BQU8sRUFBRSxlQUFlO1FBQ3hCLElBQUksRUFBRSxlQUFlO1FBQ3JCLE1BQU0sRUFBRSxvQ0FBb0M7S0FDN0M7SUFDRDs7T0FFRztJQUNILGtCQUFrQixFQUFFO1FBQ2xCLE9BQU8sRUFBRSxvQkFBb0I7UUFDN0IsSUFBSSxFQUFFLG9CQUFvQjtRQUMxQixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxnQkFBZ0IsRUFBRTtRQUNoQixPQUFPLEVBQUUsa0JBQWtCO1FBQzNCLElBQUksRUFBRSxrQkFBa0I7UUFDeEIsTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gsZ0JBQWdCLEVBQUU7UUFDaEIsT0FBTyxFQUFFLGtCQUFrQjtRQUMzQixJQUFJLEVBQUUsa0JBQWtCO1FBQ3hCLE1BQU0sRUFBRSxvQ0FBb0M7S0FDN0M7SUFDRDs7T0FFRztJQUNILGlCQUFpQixFQUFFO1FBQ2pCLE9BQU8sRUFBRSxtQkFBbUI7UUFDNUIsSUFBSSxFQUFFLG1CQUFtQjtRQUN6QixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxjQUFjLEVBQUU7UUFDZCxPQUFPLEVBQUUsZ0JBQWdCO1FBQ3pCLElBQUksRUFBRSxnQkFBZ0I7UUFDdEIsTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gsU0FBUyxFQUFFO1FBQ1QsT0FBTyxFQUFFLFdBQVc7UUFDcEIsSUFBSSxFQUFFLFdBQVc7UUFDakIsTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gsUUFBUSxFQUFFO1FBQ1IsT0FBTyxFQUFFLFVBQVU7UUFDbkIsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gsaUJBQWlCLEVBQUU7UUFDakIsT0FBTyxFQUFFLG1CQUFtQjtRQUM1QixJQUFJLEVBQUUsbUJBQW1CO1FBQ3pCLE1BQU0sRUFBRSxvQ0FBb0M7S0FDN0M7SUFDRDs7T0FFRztJQUNILGtCQUFrQixFQUFFO1FBQ2xCLE9BQU8sRUFBRSxvQkFBb0I7UUFDN0IsSUFBSSxFQUFFLG9CQUFvQjtRQUMxQixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxhQUFhLEVBQUU7UUFDYixPQUFPLEVBQUUsZUFBZTtRQUN4QixJQUFJLEVBQUUsZUFBZTtRQUNyQixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxlQUFlLEVBQUU7UUFDZixPQUFPLEVBQUUsaUJBQWlCO1FBQzFCLElBQUksRUFBRSxpQkFBaUI7UUFDdkIsTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gsUUFBUSxFQUFFO1FBQ1IsT0FBTyxFQUFFLFVBQVU7UUFDbkIsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gsY0FBYyxFQUFFO1FBQ2QsT0FBTyxFQUFFLGdCQUFnQjtRQUN6QixJQUFJLEVBQUUsZ0JBQWdCO1FBQ3RCLE1BQU0sRUFBRSxvQ0FBb0M7S0FDN0M7SUFDRDs7T0FFRztJQUNILGdCQUFnQixFQUFFO1FBQ2hCLE9BQU8sRUFBRSxrQkFBa0I7UUFDM0IsSUFBSSxFQUFFLGtCQUFrQjtRQUN4QixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxlQUFlLEVBQUU7UUFDZixPQUFPLEVBQUUsaUJBQWlCO1FBQzFCLElBQUksRUFBRSxpQkFBaUI7UUFDdkIsTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gsb0JBQW9CLEVBQUU7UUFDcEIsT0FBTyxFQUFFLHNCQUFzQjtRQUMvQixJQUFJLEVBQUUsc0JBQXNCO1FBQzVCLE1BQU0sRUFBRSxvQ0FBb0M7S0FDN0M7SUFDRDs7T0FFRztJQUNILG1CQUFtQixFQUFFO1FBQ25CLE9BQU8sRUFBRSxxQkFBcUI7UUFDOUIsSUFBSSxFQUFFLHFCQUFxQjtRQUMzQixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxJQUFJLEVBQUU7UUFDSixPQUFPLEVBQUUsTUFBTTtRQUNmLElBQUksRUFBRSxNQUFNO1FBQ1osTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gsSUFBSSxFQUFFO1FBQ0osT0FBTyxFQUFFLE1BQU07UUFDZixJQUFJLEVBQUUsTUFBTTtRQUNaLE1BQU0sRUFBRSxvQ0FBb0M7S0FDN0M7SUFDRDs7T0FFRztJQUNILGVBQWUsRUFBRTtRQUNmLE9BQU8sRUFBRSxpQkFBaUI7UUFDMUIsSUFBSSxFQUFFLGlCQUFpQjtRQUN2QixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxLQUFLLEVBQUU7UUFDTCxPQUFPLEVBQUUsT0FBTztRQUNoQixJQUFJLEVBQUUsT0FBTztRQUNiLE1BQU0sRUFBRSxvQ0FBb0M7S0FDN0M7SUFDRDs7T0FFRztJQUNILGdCQUFnQixFQUFFO1FBQ2hCLE9BQU8sRUFBRSxrQkFBa0I7UUFDM0IsSUFBSSxFQUFFLGtCQUFrQjtRQUN4QixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxpQkFBaUIsRUFBRTtRQUNqQixPQUFPLEVBQUUsbUJBQW1CO1FBQzVCLElBQUksRUFBRSxtQkFBbUI7UUFDekIsTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gsY0FBYyxFQUFFO1FBQ2QsT0FBTyxFQUFFLGtCQUFrQjtRQUMzQixJQUFJLEVBQUUsc0RBQXNEO1FBQzVELE1BQU0sRUFBRSxtQkFBbUI7S0FDNUI7SUFDRDs7T0FFRztJQUNILFlBQVksRUFBRTtRQUNaLE9BQU8sRUFBRSxjQUFjO1FBQ3ZCLElBQUksRUFBRSxjQUFjO1FBQ3BCLE1BQU0sRUFBRSxvQ0FBb0M7S0FDN0M7SUFDRDs7T0FFRztJQUNILFlBQVksRUFBRTtRQUNaLE9BQU8sRUFBRSxjQUFjO1FBQ3ZCLElBQUksRUFBRSxjQUFjO1FBQ3BCLE1BQU0sRUFBRSxvQ0FBb0M7S0FDN0M7SUFDRDs7T0FFRztJQUNILHNCQUFzQixFQUFFO1FBQ3RCLE9BQU8sRUFBRSx3QkFBd0I7UUFDakMsSUFBSSxFQUFFLHdCQUF3QjtRQUM5QixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCwwQkFBMEIsRUFBRTtRQUMxQixPQUFPLEVBQUUsNEJBQTRCO1FBQ3JDLElBQUksRUFBRSw0QkFBNEI7UUFDbEMsTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gsbUJBQW1CLEVBQUU7UUFDbkIsT0FBTyxFQUFFLHFCQUFxQjtRQUM5QixJQUFJLEVBQUUscUJBQXFCO1FBQzNCLE1BQU0sRUFBRSxvQ0FBb0M7S0FDN0M7SUFDRDs7T0FFRztJQUNILFVBQVUsRUFBRTtRQUNWLE9BQU8sRUFBRSxZQUFZO1FBQ3JCLElBQUksRUFBRSxZQUFZO1FBQ2xCLE1BQU0sRUFBRSxvQ0FBb0M7S0FDN0M7SUFDRDs7T0FFRztJQUNILGFBQWEsRUFBRTtRQUNiLE9BQU8sRUFBRSxlQUFlO1FBQ3hCLElBQUksRUFBRSxlQUFlO1FBQ3JCLE1BQU0sRUFBRSxvQ0FBb0M7S0FDN0M7SUFDRDs7T0FFRztJQUNILE9BQU8sRUFBRTtRQUNQLE9BQU8sRUFBRSxTQUFTO1FBQ2xCLElBQUksRUFBRSxTQUFTO1FBQ2YsTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gsT0FBTyxFQUFFO1FBQ1AsT0FBTyxFQUFFLFNBQVM7UUFDbEIsSUFBSSxFQUFFLFNBQVM7UUFDZixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxPQUFPLEVBQUU7UUFDUCxPQUFPLEVBQUUsU0FBUztRQUNsQixJQUFJLEVBQUUsU0FBUztRQUNmLE1BQU0sRUFBRSxvQ0FBb0M7S0FDN0M7SUFDRDs7T0FFRztJQUNILElBQUksRUFBRTtRQUNKLE9BQU8sRUFBRSxNQUFNO1FBQ2YsSUFBSSxFQUFFLE1BQU07UUFDWixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxRQUFRLEVBQUU7UUFDUixPQUFPLEVBQUUsVUFBVTtRQUNuQixJQUFJLEVBQUUsVUFBVTtRQUNoQixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCwwQkFBMEIsRUFBRTtRQUMxQixPQUFPLEVBQUUsNEJBQTRCO1FBQ3JDLElBQUksRUFBRSw0QkFBNEI7UUFDbEMsTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gsT0FBTyxFQUFFO1FBQ1AsT0FBTyxFQUFFLFNBQVM7UUFDbEIsSUFBSSxFQUFFLFNBQVM7UUFDZixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxhQUFhLEVBQUU7UUFDYixPQUFPLEVBQUUsZUFBZTtRQUN4QixJQUFJLEVBQUUsZUFBZTtRQUNyQixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxLQUFLLEVBQUU7UUFDTCxPQUFPLEVBQUUsT0FBTztRQUNoQixJQUFJLEVBQUUsT0FBTztRQUNiLE1BQU0sRUFBRSxvQ0FBb0M7S0FDN0M7SUFDRDs7T0FFRztJQUNILFVBQVUsRUFBRTtRQUNWLE9BQU8sRUFBRSxZQUFZO1FBQ3JCLElBQUksRUFBRSxZQUFZO1FBQ2xCLE1BQU0sRUFBRSxvQ0FBb0M7S0FDN0M7SUFDRDs7T0FFRztJQUNILHdCQUF3QixFQUFFO1FBQ3hCLE9BQU8sRUFBRSwwQkFBMEI7UUFDbkMsSUFBSSxFQUFFLDBCQUEwQjtRQUNoQyxNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxrQkFBa0IsRUFBRTtRQUNsQixPQUFPLEVBQUUsb0JBQW9CO1FBQzdCLElBQUksRUFBRSxvQkFBb0I7UUFDMUIsTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gsbUJBQW1CLEVBQUU7UUFDbkIsT0FBTyxFQUFFLHFCQUFxQjtRQUM5QixJQUFJLEVBQUUscUJBQXFCO1FBQzNCLE1BQU0sRUFBRSxvQ0FBb0M7S0FDN0M7SUFDRDs7T0FFRztJQUNILGlCQUFpQixFQUFFO1FBQ2pCLE9BQU8sRUFBRSxtQkFBbUI7UUFDNUIsSUFBSSxFQUFFLG1CQUFtQjtRQUN6QixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7OztPQUdHO0lBQ0gsbUJBQW1CLEVBQUU7UUFDbkIsT0FBTyxFQUFFLHFCQUFxQjtRQUM5QixJQUFJLEVBQUUscUJBQXFCO1FBQzNCLE1BQU0sRUFBRSxvQ0FBb0M7S0FDN0M7SUFDRDs7T0FFRztJQUNILDBCQUEwQixFQUFFO1FBQzFCLE9BQU8sRUFBRSw0QkFBNEI7UUFDckMsSUFBSSxFQUFFLDRCQUE0QjtRQUNsQyxNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxpQkFBaUIsRUFBRTtRQUNqQixPQUFPLEVBQUUsbUJBQW1CO1FBQzVCLElBQUksRUFBRSxtQkFBbUI7UUFDekIsTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gsYUFBYSxFQUFFO1FBQ2IsT0FBTyxFQUFFLGVBQWU7UUFDeEIsSUFBSSxFQUFFLGVBQWU7UUFDckIsTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gsaUJBQWlCLEVBQUU7UUFDakIsT0FBTyxFQUFFLG1CQUFtQjtRQUM1QixJQUFJLEVBQUUsbUJBQW1CO1FBQ3pCLE1BQU0sRUFBRSxvQ0FBb0M7S0FDN0M7SUFDRDs7T0FFRztJQUNILFlBQVksRUFBRTtRQUNaLE9BQU8sRUFBRSxjQUFjO1FBQ3ZCLElBQUksRUFBRSxjQUFjO1FBQ3BCLE1BQU0sRUFBRSxvQ0FBb0M7S0FDN0M7SUFDRDs7T0FFRztJQUNILGNBQWMsRUFBRTtRQUNkLE9BQU8sRUFBRSxnQkFBZ0I7UUFDekIsSUFBSSxFQUFFLGdCQUFnQjtRQUN0QixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxnQkFBZ0IsRUFBRTtRQUNoQixPQUFPLEVBQUUsa0JBQWtCO1FBQzNCLElBQUksRUFBRSxrQkFBa0I7UUFDeEIsTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gsV0FBVyxFQUFFO1FBQ1gsT0FBTyxFQUFFLGFBQWE7UUFDdEIsSUFBSSxFQUFFLGFBQWE7UUFDbkIsTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gscUJBQXFCLEVBQUU7UUFDckIsT0FBTyxFQUFFLHVCQUF1QjtRQUNoQyxJQUFJLEVBQUUsdUJBQXVCO1FBQzdCLE1BQU0sRUFBRSxvQ0FBb0M7S0FDN0M7SUFDRDs7T0FFRztJQUNILG1CQUFtQixFQUFFO1FBQ25CLE9BQU8sRUFBRSxxQkFBcUI7UUFDOUIsSUFBSSxFQUFFLHFCQUFxQjtRQUMzQixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxnQkFBZ0IsRUFBRTtRQUNoQixPQUFPLEVBQUUsa0JBQWtCO1FBQzNCLElBQUksRUFBRSxrQkFBa0I7UUFDeEIsTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gsWUFBWSxFQUFFO1FBQ1osT0FBTyxFQUFFLGNBQWM7UUFDdkIsSUFBSSxFQUFFLGNBQWM7UUFDcEIsTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gsdUJBQXVCLEVBQUU7UUFDdkIsT0FBTyxFQUFFLHlCQUF5QjtRQUNsQyxJQUFJLEVBQUUseUJBQXlCO1FBQy9CLE1BQU0sRUFBRSxvQ0FBb0M7S0FDN0M7SUFDRDs7T0FFRztJQUNILHlCQUF5QixFQUFFO1FBQ3pCLE9BQU8sRUFBRSwyQkFBMkI7UUFDcEMsSUFBSSxFQUFFLDJCQUEyQjtRQUNqQyxNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxVQUFVLEVBQUU7UUFDVixPQUFPLEVBQUUsWUFBWTtRQUNyQixJQUFJLEVBQUUsWUFBWTtRQUNsQixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxPQUFPLEVBQUU7UUFDUCxPQUFPLEVBQUUsU0FBUztRQUNsQixJQUFJLEVBQUUsU0FBUztRQUNmLE1BQU0sRUFBRSxvQ0FBb0M7S0FDN0M7SUFDRDs7T0FFRztJQUNILGFBQWEsRUFBRTtRQUNiLE9BQU8sRUFBRSxlQUFlO1FBQ3hCLElBQUksRUFBRSxlQUFlO1FBQ3JCLE1BQU0sRUFBRSxvQ0FBb0M7S0FDN0M7SUFDRDs7T0FFRztJQUNILHFCQUFxQixFQUFFO1FBQ3JCLE9BQU8sRUFBRSx1QkFBdUI7UUFDaEMsSUFBSSxFQUFFLHVCQUF1QjtRQUM3QixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxNQUFNLEVBQUU7UUFDTixPQUFPLEVBQUUsUUFBUTtRQUNqQixJQUFJLEVBQUUsUUFBUTtRQUNkLE1BQU0sRUFBRSxvQ0FBb0M7S0FDN0M7SUFDRDs7T0FFRztJQUNILGNBQWMsRUFBRTtRQUNkLE9BQU8sRUFBRSxnQkFBZ0I7UUFDekIsSUFBSSxFQUFFLGdCQUFnQjtRQUN0QixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxZQUFZLEVBQUU7UUFDWixPQUFPLEVBQUUsY0FBYztRQUN2QixJQUFJLEVBQUUsY0FBYztRQUNwQixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxnQkFBZ0IsRUFBRTtRQUNoQixPQUFPLEVBQUUsa0JBQWtCO1FBQzNCLElBQUksRUFBRSxrQkFBa0I7UUFDeEIsTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gsU0FBUyxFQUFFO1FBQ1QsT0FBTyxFQUFFLFdBQVc7UUFDcEIsSUFBSSxFQUFFLFdBQVc7UUFDakIsTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gsVUFBVSxFQUFFO1FBQ1YsT0FBTyxFQUFFLFlBQVk7UUFDckIsSUFBSSxFQUFFLFlBQVk7UUFDbEIsTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gsYUFBYSxFQUFFO1FBQ2IsT0FBTyxFQUFFLGVBQWU7UUFDeEIsSUFBSSxFQUFFLGVBQWU7UUFDckIsTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gscUJBQXFCLEVBQUU7UUFDckIsT0FBTyxFQUFFLHVCQUF1QjtRQUNoQyxJQUFJLEVBQUUsdUJBQXVCO1FBQzdCLE1BQU0sRUFBRSxvQ0FBb0M7S0FDN0M7SUFDRDs7T0FFRztJQUNILHNCQUFzQixFQUFFO1FBQ3RCLE9BQU8sRUFBRSx3QkFBd0I7UUFDakMsSUFBSSxFQUFFLHdCQUF3QjtRQUM5QixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxhQUFhLEVBQUU7UUFDYixPQUFPLEVBQUUsZUFBZTtRQUN4QixJQUFJLEVBQUUsZUFBZTtRQUNyQixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxZQUFZLEVBQUU7UUFDWixPQUFPLEVBQUUsY0FBYztRQUN2QixJQUFJLEVBQUUsY0FBYztRQUNwQixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxrQkFBa0IsRUFBRTtRQUNsQixPQUFPLEVBQUUsb0JBQW9CO1FBQzdCLElBQUksRUFBRSxvQkFBb0I7UUFDMUIsTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gseUJBQXlCLEVBQUU7UUFDekIsT0FBTyxFQUFFLDJCQUEyQjtRQUNwQyxJQUFJLEVBQUUsMkJBQTJCO1FBQ2pDLE1BQU0sRUFBRSxvQ0FBb0M7S0FDN0M7SUFDRDs7T0FFRztJQUNILGFBQWEsRUFBRTtRQUNiLE9BQU8sRUFBRSxlQUFlO1FBQ3hCLElBQUksRUFBRSxlQUFlO1FBQ3JCLE1BQU0sRUFBRSxvQ0FBb0M7S0FDN0M7SUFDRDs7T0FFRztJQUNILGVBQWUsRUFBRTtRQUNmLE9BQU8sRUFBRSxpQkFBaUI7UUFDMUIsSUFBSSxFQUFFLGlCQUFpQjtRQUN2QixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxRQUFRLEVBQUU7UUFDUixPQUFPLEVBQUUsVUFBVTtRQUNuQixJQUFJLEVBQUUsVUFBVTtRQUNoQixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxjQUFjLEVBQUU7UUFDZCxPQUFPLEVBQUUsZ0JBQWdCO1FBQ3pCLElBQUksRUFBRSxnQkFBZ0I7UUFDdEIsTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gsUUFBUSxFQUFFO1FBQ1IsT0FBTyxFQUFFLFVBQVU7UUFDbkIsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gsZUFBZSxFQUFFO1FBQ2YsT0FBTyxFQUFFLGlCQUFpQjtRQUMxQixJQUFJLEVBQUUsaUJBQWlCO1FBQ3ZCLE1BQU0sRUFBRSxvQ0FBb0M7S0FDN0M7SUFDRDs7T0FFRztJQUNILGNBQWMsRUFBRTtRQUNkLE9BQU8sRUFBRSxnQkFBZ0I7UUFDekIsSUFBSSxFQUFFLGdCQUFnQjtRQUN0QixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxJQUFJLEVBQUU7UUFDSixPQUFPLEVBQUUsTUFBTTtRQUNmLElBQUksRUFBRSxNQUFNO1FBQ1osTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gsUUFBUSxFQUFFO1FBQ1IsT0FBTyxFQUFFLFVBQVU7UUFDbkIsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gsa0JBQWtCLEVBQUU7UUFDbEIsT0FBTyxFQUFFLG9CQUFvQjtRQUM3QixJQUFJLEVBQUUsb0JBQW9CO1FBQzFCLE1BQU0sRUFBRSxvQ0FBb0M7S0FDN0M7SUFDRDs7T0FFRztJQUNILG1CQUFtQixFQUFFO1FBQ25CLE9BQU8sRUFBRSxxQkFBcUI7UUFDOUIsSUFBSSxFQUFFLHFCQUFxQjtRQUMzQixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxZQUFZLEVBQUU7UUFDWixPQUFPLEVBQUUsY0FBYztRQUN2QixJQUFJLEVBQUUsY0FBYztRQUNwQixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxZQUFZLEVBQUU7UUFDWixPQUFPLEVBQUUsY0FBYztRQUN2QixJQUFJLEVBQUUsY0FBYztRQUNwQixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxrQkFBa0IsRUFBRTtRQUNsQixPQUFPLEVBQUUsb0JBQW9CO1FBQzdCLElBQUksRUFBRSxvQkFBb0I7UUFDMUIsTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gsaUJBQWlCLEVBQUU7UUFDakIsT0FBTyxFQUFFLG1CQUFtQjtRQUM1QixJQUFJLEVBQUUsbUJBQW1CO1FBQ3pCLE1BQU0sRUFBRSxvQ0FBb0M7S0FDN0M7SUFDRDs7T0FFRztJQUNILFNBQVMsRUFBRTtRQUNULE9BQU8sRUFBRSxXQUFXO1FBQ3BCLElBQUksRUFBRSxXQUFXO1FBQ2pCLE1BQU0sRUFBRSxvQ0FBb0M7S0FDN0M7SUFDRDs7T0FFRztJQUNILG1CQUFtQixFQUFFO1FBQ25CLE9BQU8sRUFBRSxxQkFBcUI7UUFDOUIsSUFBSSxFQUFFLHFCQUFxQjtRQUMzQixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxjQUFjLEVBQUU7UUFDZCxPQUFPLEVBQUUsZ0JBQWdCO1FBQ3pCLElBQUksRUFBRSxnQkFBZ0I7UUFDdEIsTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gsYUFBYSxFQUFFO1FBQ2IsT0FBTyxFQUFFLGVBQWU7UUFDeEIsSUFBSSxFQUFFLGVBQWU7UUFDckIsTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gsSUFBSSxFQUFFO1FBQ0osT0FBTyxFQUFFLE1BQU07UUFDZixJQUFJLEVBQUUsTUFBTTtRQUNaLE1BQU0sRUFBRSxvQ0FBb0M7S0FDN0M7SUFDRDs7T0FFRztJQUNILHVCQUF1QixFQUFFO1FBQ3ZCLE9BQU8sRUFBRSx5QkFBeUI7UUFDbEMsSUFBSSxFQUFFLHlCQUF5QjtRQUMvQixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxVQUFVLEVBQUU7UUFDVixPQUFPLEVBQUUsWUFBWTtRQUNyQixJQUFJLEVBQUUsWUFBWTtRQUNsQixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxVQUFVLEVBQUU7UUFDVixPQUFPLEVBQUUsWUFBWTtRQUNyQixJQUFJLEVBQUUsWUFBWTtRQUNsQixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCw2REFBNkQsRUFBRTtRQUM3RCxPQUFPLEVBQUUsNEVBQTRFO1FBQ3JGLElBQUksRUFBRSxzQ0FBc0M7UUFDNUMsTUFBTSxFQUFFLHdEQUF3RDtLQUNqRTtJQUNEOztPQUVHO0lBQ0gsNkRBQTZELEVBQUU7UUFDN0QsT0FBTyxFQUFFLDRFQUE0RTtRQUNyRixJQUFJLEVBQUUsc0NBQXNDO1FBQzVDLE1BQU0sRUFBRSx3REFBd0Q7S0FDakU7SUFDRDs7T0FFRztJQUNILDBEQUEwRCxFQUFFO1FBQzFELE9BQU8sRUFBRSx3RUFBd0U7UUFDakYsSUFBSSxFQUFFLDBDQUEwQztRQUNoRCxNQUFNLEVBQUUsd0RBQXdEO0tBQ2pFO0lBQ0Q7O09BRUc7SUFDSCwwREFBMEQsRUFBRTtRQUMxRCxPQUFPLEVBQUUsd0VBQXdFO1FBQ2pGLElBQUksRUFBRSwwQ0FBMEM7UUFDaEQsTUFBTSxFQUFFLHdEQUF3RDtLQUNqRTtJQUNEOztPQUVHO0lBQ0gsYUFBYSxFQUFFO1FBQ2IsT0FBTyxFQUFFLGdCQUFnQjtRQUN6QixJQUFJLEVBQUUsdUJBQXVCO1FBQzdCLE1BQU0sRUFBRSx3REFBd0Q7S0FDakU7SUFDRDs7T0FFRztJQUNILGdCQUFnQixFQUFFO1FBQ2hCLE9BQU8sRUFBRSxvQkFBb0I7UUFDN0IsSUFBSSxFQUFFLDJCQUEyQjtRQUNqQyxNQUFNLEVBQUUsd0RBQXdEO0tBQ2pFO0lBQ0Q7O09BRUc7SUFDSCxvQkFBb0IsRUFBRTtRQUNwQixPQUFPLEVBQUUsd0JBQXdCO1FBQ2pDLElBQUksRUFBRSwyQkFBMkI7UUFDakMsTUFBTSxFQUFFLHdEQUF3RDtLQUNqRTtJQUNEOztPQUVHO0lBQ0gsU0FBUyxFQUFFO1FBQ1QsT0FBTyxFQUFFLFlBQVk7UUFDckIsSUFBSSxFQUFFLHVEQUF1RDtRQUM3RCxNQUFNLEVBQUUsd0RBQXdEO0tBQ2pFO0lBQ0Q7O09BRUc7SUFDSCxTQUFTLEVBQUU7UUFDVCxPQUFPLEVBQUUsWUFBWTtRQUNyQixJQUFJLEVBQUUsa0JBQWtCO1FBQ3hCLE1BQU0sRUFBRSx3REFBd0Q7S0FDakU7SUFDRDs7T0FFRztJQUNILFVBQVUsRUFBRTtRQUNWLE9BQU8sRUFBRSxhQUFhO1FBQ3RCLElBQUksRUFBRSxtQkFBbUI7UUFDekIsTUFBTSxFQUFFLHdEQUF3RDtLQUNqRTtJQUNEOztPQUVHO0lBQ0gsOEJBQThCLEVBQUU7UUFDOUIsT0FBTyxFQUFFLG1DQUFtQztRQUM1QyxJQUFJLEVBQUUsK0JBQStCO1FBQ3JDLE1BQU0sRUFBRSx3REFBd0Q7S0FDakU7SUFDRDs7T0FFRztJQUNILDhDQUE4QyxFQUFFO1FBQzlDLE9BQU8sRUFBRSxzREFBc0Q7UUFDL0QsSUFBSSxFQUFFLDBCQUEwQjtRQUNoQyxNQUFNLEVBQUUsd0RBQXdEO0tBQ2pFO0lBQ0Q7O09BRUc7SUFDSCwyQkFBMkIsRUFBRTtRQUMzQixPQUFPLEVBQUUsZ0NBQWdDO1FBQ3pDLElBQUksRUFBRSx1QkFBdUI7UUFDN0IsTUFBTSxFQUFFLHdEQUF3RDtLQUNqRTtJQUNEOztPQUVHO0lBQ0gsbUJBQW1CLEVBQUU7UUFDbkIsT0FBTyxFQUFFLHVCQUF1QjtRQUNoQyxJQUFJLEVBQUUsK0JBQStCO1FBQ3JDLE1BQU0sRUFBRSx3REFBd0Q7S0FDakU7SUFDRDs7T0FFRztJQUNILHFCQUFxQixFQUFFO1FBQ3JCLE9BQU8sRUFBRSx5QkFBeUI7UUFDbEMsSUFBSSxFQUFFLGlDQUFpQztRQUN2QyxNQUFNLEVBQUUsd0RBQXdEO0tBQ2pFO0lBQ0Q7O09BRUc7SUFDSCwrQkFBK0IsRUFBRTtRQUMvQixPQUFPLEVBQUUsd0NBQXdDO1FBQ2pELElBQUksRUFBRSw2QkFBNkI7UUFDbkMsTUFBTSxFQUFFLHdEQUF3RDtLQUNqRTtJQUNEOztPQUVHO0lBQ0gsZ0NBQWdDLEVBQUU7UUFDaEMsT0FBTyxFQUFFLHlDQUF5QztRQUNsRCxJQUFJLEVBQUUsOEJBQThCO1FBQ3BDLE1BQU0sRUFBRSx3REFBd0Q7S0FDakU7SUFDRDs7T0FFRztJQUNILGtCQUFrQixFQUFFO1FBQ2xCLE9BQU8sRUFBRSxxQkFBcUI7UUFDOUIsSUFBSSxFQUFFLHlDQUF5QztRQUMvQyxNQUFNLEVBQUUsd0RBQXdEO0tBQ2pFO0lBQ0Q7O09BRUc7SUFDSCxtQkFBbUIsRUFBRTtRQUNuQixPQUFPLEVBQUUsdUJBQXVCO1FBQ2hDLElBQUksRUFBRSxrQ0FBa0M7UUFDeEMsTUFBTSxFQUFFLHdEQUF3RDtLQUNqRTtJQUNEOztPQUVHO0lBQ0gsbUJBQW1CLEVBQUU7UUFDbkIsT0FBTyxFQUFFLHVCQUF1QjtRQUNoQyxJQUFJLEVBQUUseUJBQXlCO1FBQy9CLE1BQU0sRUFBRSx3REFBd0Q7S0FDakU7SUFDRDs7T0FFRztJQUNILG9DQUFvQyxFQUFFO1FBQ3BDLE9BQU8sRUFBRSwwQ0FBMEM7UUFDbkQsSUFBSSxFQUFFLDJCQUEyQjtRQUNqQyxNQUFNLEVBQUUsd0RBQXdEO0tBQ2pFO0lBQ0Q7O09BRUc7SUFDSCwwQ0FBMEMsRUFBRTtRQUMxQyxPQUFPLEVBQUUsaURBQWlEO1FBQzFELElBQUksRUFBRSxrQ0FBa0M7UUFDeEMsTUFBTSxFQUFFLHdEQUF3RDtLQUNqRTtJQUNEOztPQUVHO0lBQ0gsNkNBQTZDLEVBQUU7UUFDN0MsT0FBTyxFQUFFLG9EQUFvRDtRQUM3RCxJQUFJLEVBQUUscUNBQXFDO1FBQzNDLE1BQU0sRUFBRSx3REFBd0Q7S0FDakU7SUFDRDs7T0FFRztJQUNILDZDQUE2QyxFQUFFO1FBQzdDLE9BQU8sRUFBRSxvREFBb0Q7UUFDN0QsSUFBSSxFQUFFLHFDQUFxQztRQUMzQyxNQUFNLEVBQUUsd0RBQXdEO0tBQ2pFO0lBQ0Q7O09BRUc7SUFDSCw0Q0FBNEMsRUFBRTtRQUM1QyxPQUFPLEVBQUUsbURBQW1EO1FBQzVELElBQUksRUFBRSxvQ0FBb0M7UUFDMUMsTUFBTSxFQUFFLHdEQUF3RDtLQUNqRTtJQUNEOztPQUVHO0lBQ0gsa0RBQWtELEVBQUU7UUFDbEQsT0FBTyxFQUFFLHlEQUF5RDtRQUNsRSxJQUFJLEVBQUUsMENBQTBDO1FBQ2hELE1BQU0sRUFBRSx3REFBd0Q7S0FDakU7SUFDRDs7T0FFRztJQUNILGdEQUFnRCxFQUFFO1FBQ2hELE9BQU8sRUFBRSx1REFBdUQ7UUFDaEUsSUFBSSxFQUFFLHdDQUF3QztRQUM5QyxNQUFNLEVBQUUsd0RBQXdEO0tBQ2pFO0lBQ0Q7O09BRUc7SUFDSCw2Q0FBNkMsRUFBRTtRQUM3QyxPQUFPLEVBQUUsb0RBQW9EO1FBQzdELElBQUksRUFBRSxxQ0FBcUM7UUFDM0MsTUFBTSxFQUFFLHdEQUF3RDtLQUNqRTtJQUNEOztPQUVHO0lBQ0gsNkNBQTZDLEVBQUU7UUFDN0MsT0FBTyxFQUFFLG9EQUFvRDtRQUM3RCxJQUFJLEVBQUUscUNBQXFDO1FBQzNDLE1BQU0sRUFBRSx3REFBd0Q7S0FDakU7SUFDRDs7T0FFRztJQUNILG9EQUFvRCxFQUFFO1FBQ3BELE9BQU8sRUFBRSw2REFBNkQ7UUFDdEUsSUFBSSxFQUFFLDhDQUE4QztRQUNwRCxNQUFNLEVBQUUsd0RBQXdEO0tBQ2pFO0lBQ0Q7O09BRUc7SUFDSCw0Q0FBNEMsRUFBRTtRQUM1QyxPQUFPLEVBQUUsbURBQW1EO1FBQzVELElBQUksRUFBRSxvQ0FBb0M7UUFDMUMsTUFBTSxFQUFFLHdEQUF3RDtLQUNqRTtJQUNEOztPQUVHO0lBQ0gsMkNBQTJDLEVBQUU7UUFDM0MsT0FBTyxFQUFFLGtEQUFrRDtRQUMzRCxJQUFJLEVBQUUsbUNBQW1DO1FBQ3pDLE1BQU0sRUFBRSx3REFBd0Q7S0FDakU7SUFDRDs7T0FFRztJQUNILDRDQUE0QyxFQUFFO1FBQzVDLE9BQU8sRUFBRSxtREFBbUQ7UUFDNUQsSUFBSSxFQUFFLG9DQUFvQztRQUMxQyxNQUFNLEVBQUUsd0RBQXdEO0tBQ2pFO0lBQ0Q7O09BRUc7SUFDSCwrQ0FBK0MsRUFBRTtRQUMvQyxPQUFPLEVBQUUsc0RBQXNEO1FBQy9ELElBQUksRUFBRSx1Q0FBdUM7UUFDN0MsTUFBTSxFQUFFLHdEQUF3RDtLQUNqRTtJQUNEOztPQUVHO0lBQ0gsOENBQThDLEVBQUU7UUFDOUMsT0FBTyxFQUFFLHFEQUFxRDtRQUM5RCxJQUFJLEVBQUUsc0NBQXNDO1FBQzVDLE1BQU0sRUFBRSx3REFBd0Q7S0FDakU7SUFDRDs7T0FFRztJQUNILCtDQUErQyxFQUFFO1FBQy9DLE9BQU8sRUFBRSxzREFBc0Q7UUFDL0QsSUFBSSxFQUFFLHVDQUF1QztRQUM3QyxNQUFNLEVBQUUsd0RBQXdEO0tBQ2pFO0lBQ0Q7O09BRUc7SUFDSCxvREFBb0QsRUFBRTtRQUNwRCxPQUFPLEVBQUUsNERBQTREO1FBQ3JFLElBQUksRUFBRSw2Q0FBNkM7UUFDbkQsTUFBTSxFQUFFLHdEQUF3RDtLQUNqRTtJQUNEOztPQUVHO0lBQ0gsMkNBQTJDLEVBQUU7UUFDM0MsT0FBTyxFQUFFLGtEQUFrRDtRQUMzRCxJQUFJLEVBQUUsbUNBQW1DO1FBQ3pDLE1BQU0sRUFBRSx3REFBd0Q7S0FDakU7SUFDRDs7T0FFRztJQUNILDhDQUE4QyxFQUFFO1FBQzlDLE9BQU8sRUFBRSxxREFBcUQ7UUFDOUQsSUFBSSxFQUFFLHNDQUFzQztRQUM1QyxNQUFNLEVBQUUsd0RBQXdEO0tBQ2pFO0lBQ0Q7O09BRUc7SUFDSCw2Q0FBNkMsRUFBRTtRQUM3QyxPQUFPLEVBQUUsb0RBQW9EO1FBQzdELElBQUksRUFBRSxxQ0FBcUM7UUFDM0MsTUFBTSxFQUFFLHdEQUF3RDtLQUNqRTtJQUNEOztPQUVHO0lBQ0gsOENBQThDLEVBQUU7UUFDOUMsT0FBTyxFQUFFLHFEQUFxRDtRQUM5RCxJQUFJLEVBQUUsc0NBQXNDO1FBQzVDLE1BQU0sRUFBRSx3REFBd0Q7S0FDakU7SUFDRDs7T0FFRztJQUNILHFEQUFxRCxFQUFFO1FBQ3JELE9BQU8sRUFBRSw2REFBNkQ7UUFDdEUsSUFBSSxFQUFFLDhDQUE4QztRQUNwRCxNQUFNLEVBQUUsd0RBQXdEO0tBQ2pFO0lBQ0Q7O09BRUc7SUFDSCw0QkFBNEIsRUFBRTtRQUM1QixPQUFPLEVBQUUscUNBQXFDO1FBQzlDLElBQUksRUFBRSwwQkFBMEI7UUFDaEMsTUFBTSxFQUFFLHdEQUF3RDtLQUNqRTtJQUNEOztPQUVHO0lBQ0gscUNBQXFDLEVBQUU7UUFDckMsT0FBTyxFQUFFLGdEQUFnRDtRQUN6RCxJQUFJLEVBQUUsNEJBQTRCO1FBQ2xDLE1BQU0sRUFBRSx3REFBd0Q7S0FDakU7SUFDRDs7T0FFRztJQUNILDZCQUE2QixFQUFFO1FBQzdCLE9BQU8sRUFBRSxzQ0FBc0M7UUFDL0MsSUFBSSxFQUFFLDBCQUEwQjtRQUNoQyxNQUFNLEVBQUUsd0RBQXdEO0tBQ2pFO0lBQ0Q7O09BRUc7SUFDSCxvQkFBb0IsRUFBRTtRQUNwQixPQUFPLEVBQUUsd0JBQXdCO1FBQ2pDLElBQUksRUFBRSxzQkFBc0I7UUFDNUIsTUFBTSxFQUFFLHdEQUF3RDtLQUNqRTtJQUNEOztPQUVHO0lBQ0gsZ0JBQWdCLEVBQUU7UUFDaEIsT0FBTyxFQUFFLHNCQUFzQjtRQUMvQixJQUFJLEVBQUUscUJBQXFCO1FBQzNCLE1BQU0sRUFBRSx3REFBd0Q7S0FDakU7SUFDRDs7T0FFRztJQUNILHdCQUF3QixFQUFFO1FBQ3hCLE9BQU8sRUFBRSwrQkFBK0I7UUFDeEMsSUFBSSxFQUFFLHNCQUFzQjtRQUM1QixNQUFNLEVBQUUsd0RBQXdEO0tBQ2pFO0lBQ0Q7O09BRUc7SUFDSCxNQUFNLEVBQUU7UUFDTixPQUFPLEVBQUUsU0FBUztRQUNsQixJQUFJLEVBQUUsc0JBQXNCO1FBQzVCLE1BQU0sRUFBRSx3REFBd0Q7S0FDakU7SUFDRDs7T0FFRztJQUNILHVDQUF1QyxFQUFFO1FBQ3ZDLE9BQU8sRUFBRSwrQ0FBK0M7UUFDeEQsSUFBSSxFQUFFLHVCQUF1QjtRQUM3QixNQUFNLEVBQUUsd0RBQXdEO0tBQ2pFO0lBQ0Q7O09BRUc7SUFDSCxPQUFPLEVBQUU7UUFDUCxPQUFPLEVBQUUsVUFBVTtRQUNuQixJQUFJLEVBQUUsdUJBQXVCO1FBQzdCLE1BQU0sRUFBRSx3REFBd0Q7S0FDakU7SUFDRDs7T0FFRztJQUNILDhCQUE4QixFQUFFO1FBQzlCLE9BQU8sRUFBRSxxQ0FBcUM7UUFDOUMsSUFBSSxFQUFFLHNCQUFzQjtRQUM1QixNQUFNLEVBQUUsd0RBQXdEO0tBQ2pFO0lBQ0Q7O09BRUc7SUFDSCxNQUFNLEVBQUU7UUFDTixPQUFPLEVBQUUsU0FBUztRQUNsQixJQUFJLEVBQUUsc0JBQXNCO1FBQzVCLE1BQU0sRUFBRSx3REFBd0Q7S0FDakU7SUFDRDs7T0FFRztJQUNILEtBQUssRUFBRTtRQUNMLE9BQU8sRUFBRSxRQUFRO1FBQ2pCLElBQUksRUFBRSxxQkFBcUI7UUFDM0IsTUFBTSxFQUFFLHdEQUF3RDtLQUNqRTtJQUNEOztPQUVHO0lBQ0gscUJBQXFCLEVBQUU7UUFDckIsT0FBTyxFQUFFLDJCQUEyQjtRQUNwQyxJQUFJLEVBQUUscUJBQXFCO1FBQzNCLE1BQU0sRUFBRSx3REFBd0Q7S0FDakU7SUFDRDs7T0FFRztJQUNILE1BQU0sRUFBRTtRQUNOLE9BQU8sRUFBRSxTQUFTO1FBQ2xCLElBQUksRUFBRSxzQkFBc0I7UUFDNUIsTUFBTSxFQUFFLHdEQUF3RDtLQUNqRTtJQUNEOztPQUVHO0lBQ0gsT0FBTyxFQUFFO1FBQ1AsT0FBTyxFQUFFLFVBQVU7UUFDbkIsSUFBSSxFQUFFLHVCQUF1QjtRQUM3QixNQUFNLEVBQUUsd0RBQXdEO0tBQ2pFO0lBQ0Q7O09BRUc7SUFDSCxNQUFNLEVBQUU7UUFDTixPQUFPLEVBQUUsU0FBUztRQUNsQixJQUFJLEVBQUUsc0JBQXNCO1FBQzVCLE1BQU0sRUFBRSx3REFBd0Q7S0FDakU7SUFDRDs7T0FFRztJQUNILE1BQU0sRUFBRTtRQUNOLE9BQU8sRUFBRSxTQUFTO1FBQ2xCLElBQUksRUFBRSxzQkFBc0I7UUFDNUIsTUFBTSxFQUFFLHdEQUF3RDtLQUNqRTtJQUNEOztPQUVHO0lBQ0gsTUFBTSxFQUFFO1FBQ04sT0FBTyxFQUFFLFNBQVM7UUFDbEIsSUFBSSxFQUFFLHNCQUFzQjtRQUM1QixNQUFNLEVBQUUsd0RBQXdEO0tBQ2pFO0lBQ0Q7O09BRUc7SUFDSCxLQUFLLEVBQUU7UUFDTCxPQUFPLEVBQUUsUUFBUTtRQUNqQixJQUFJLEVBQUUscUJBQXFCO1FBQzNCLE1BQU0sRUFBRSx3REFBd0Q7S0FDakU7SUFDRDs7T0FFRztJQUNILE9BQU8sRUFBRTtRQUNQLE9BQU8sRUFBRSxVQUFVO1FBQ25CLElBQUksRUFBRSx1QkFBdUI7UUFDN0IsTUFBTSxFQUFFLHdEQUF3RDtLQUNqRTtJQUNEOztPQUVHO0lBQ0gsd0NBQXdDLEVBQUU7UUFDeEMsT0FBTyxFQUFFLGdEQUFnRDtRQUN6RCxJQUFJLEVBQUUsdUJBQXVCO1FBQzdCLE1BQU0sRUFBRSx3REFBd0Q7S0FDakU7SUFDRDs7T0FFRztJQUNILEtBQUssRUFBRTtRQUNMLE9BQU8sRUFBRSxRQUFRO1FBQ2pCLElBQUksRUFBRSxxQkFBcUI7UUFDM0IsTUFBTSxFQUFFLHdEQUF3RDtLQUNqRTtJQUNEOztPQUVHO0lBQ0gsTUFBTSxFQUFFO1FBQ04sT0FBTyxFQUFFLFNBQVM7UUFDbEIsSUFBSSxFQUFFLHNCQUFzQjtRQUM1QixNQUFNLEVBQUUsd0RBQXdEO0tBQ2pFO0lBQ0Q7O09BRUc7SUFDSCxtQkFBbUIsRUFBRTtRQUNuQixPQUFPLEVBQUUsdUJBQXVCO1FBQ2hDLElBQUksRUFBRSx5QkFBeUI7UUFDL0IsTUFBTSxFQUFFLHdEQUF3RDtLQUNqRTtJQUNEOztPQUVHO0lBQ0gsaURBQWlELEVBQUU7UUFDakQsT0FBTyxFQUFFLDhEQUE4RDtRQUN2RSxJQUFJLEVBQUUsdUJBQXVCO1FBQzdCLE1BQU0sRUFBRSx3REFBd0Q7S0FDakU7SUFDRDs7T0FFRztJQUNILFdBQVcsRUFBRTtRQUNYLE9BQU8sRUFBRSxjQUFjO1FBQ3ZCLElBQUksRUFBRSx3QkFBd0I7UUFDOUIsTUFBTSxFQUFFLHdEQUF3RDtLQUNqRTtJQUNEOztPQUVHO0lBQ0gsWUFBWSxFQUFFO1FBQ1osT0FBTyxFQUFFLGVBQWU7UUFDeEIsSUFBSSxFQUFFLHlCQUF5QjtRQUMvQixNQUFNLEVBQUUsd0RBQXdEO0tBQ2pFO0lBQ0Q7O09BRUc7SUFDSCxXQUFXLEVBQUU7UUFDWCxPQUFPLEVBQUUsY0FBYztRQUN2QixJQUFJLEVBQUUsd0JBQXdCO1FBQzlCLE1BQU0sRUFBRSx3REFBd0Q7S0FDakU7SUFDRDs7T0FFRztJQUNILFdBQVcsRUFBRTtRQUNYLE9BQU8sRUFBRSxjQUFjO1FBQ3ZCLElBQUksRUFBRSx3QkFBd0I7UUFDOUIsTUFBTSxFQUFFLHdEQUF3RDtLQUNqRTtJQUNEOztPQUVHO0lBQ0gsMEJBQTBCLEVBQUU7UUFDMUIsT0FBTyxFQUFFLGdDQUFnQztRQUN6QyxJQUFJLEVBQUUsc0RBQXNEO1FBQzVELE1BQU0sRUFBRSx3REFBd0Q7S0FDakU7SUFDRDs7T0FFRztJQUNILGdCQUFnQixFQUFFO1FBQ2hCLE9BQU8sRUFBRSxxQkFBcUI7UUFDOUIsSUFBSSxFQUFFLGlCQUFpQjtRQUN2QixNQUFNLEVBQUUsd0RBQXdEO0tBQ2pFO0lBQ0Q7O09BRUc7SUFDSCxpQkFBaUIsRUFBRTtRQUNqQixPQUFPLEVBQUUsc0JBQXNCO1FBQy9CLElBQUksRUFBRSxrQkFBa0I7UUFDeEIsTUFBTSxFQUFFLHdEQUF3RDtLQUNqRTtJQUNEOztPQUVHO0lBQ0gsUUFBUSxFQUFFO1FBQ1IsT0FBTyxFQUFFLFVBQVU7UUFDbkIsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gsa0JBQWtCLEVBQUU7UUFDbEIsT0FBTyxFQUFFLG9CQUFvQjtRQUM3QixJQUFJLEVBQUUsb0JBQW9CO1FBQzFCLE1BQU0sRUFBRSxvQ0FBb0M7S0FDN0M7SUFDRDs7T0FFRztJQUNILGtCQUFrQixFQUFFO1FBQ2xCLE9BQU8sRUFBRSxvQkFBb0I7UUFDN0IsSUFBSSxFQUFFLG9CQUFvQjtRQUMxQixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0NBQ08sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNGIuY29yZSB2ZXJzaW9uOiA0LjMuMFxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvY29uc2VudC1jb250ZW50LWNsYXNzfDQuMy4wXHJcblxyXG5pbXBvcnQgeyBDb2RpbmdBcmdzIH0gZnJvbSAnLi4vZmhpci9Db2RpbmcuanMnXHJcblxyXG4vKipcclxuICogVGhpcyB2YWx1ZSBzZXQgaW5jbHVkZXMgdGhlIEZISVIgcmVzb3VyY2UgdHlwZXMsIGFsb25nIHdpdGggc29tZSBvdGhlciBpbXBvcnRhbnQgY29udGVudCBjbGFzcyBjb2Rlc1xyXG4gKi9cclxuZXhwb3J0IHR5cGUgQ29uc2VudENvbnRlbnRDbGFzc0NvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogQWNjb3VudDogQSBmaW5hbmNpYWwgdG9vbCBmb3IgdHJhY2tpbmcgdmFsdWUgYWNjcnVlZCBmb3IgYSBwYXJ0aWN1bGFyIHB1cnBvc2UuICBJbiB0aGUgaGVhbHRoY2FyZSBmaWVsZCwgdXNlZCB0byB0cmFjayBjaGFyZ2VzIGZvciBhIHBhdGllbnQsIGNvc3QgY2VudGVycywgZXRjLlxyXG4gICAqL1xyXG4gIEFjY291bnQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQWN0aXZpdHlEZWZpbml0aW9uOiBUaGlzIHJlc291cmNlIGFsbG93cyBmb3IgdGhlIGRlZmluaXRpb24gb2Ygc29tZSBhY3Rpdml0eSB0byBiZSBwZXJmb3JtZWQsIGluZGVwZW5kZW50IG9mIGEgcGFydGljdWxhciBwYXRpZW50LCBwcmFjdGl0aW9uZXIsIG9yIG90aGVyIHBlcmZvcm1hbmNlIGNvbnRleHQuXHJcbiAgICovXHJcbiAgQWN0aXZpdHlEZWZpbml0aW9uOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIEFkbWluaXN0cmFibGVQcm9kdWN0RGVmaW5pdGlvbjogQSBtZWRpY2luYWwgcHJvZHVjdCBpbiB0aGUgZmluYWwgZm9ybSB3aGljaCBpcyBzdWl0YWJsZSBmb3IgYWRtaW5pc3RlcmluZyB0byBhIHBhdGllbnQgKGFmdGVyIGFueSBtaXhpbmcgb2YgbXVsdGlwbGUgY29tcG9uZW50cywgZGlzc29sdXRpb24gZXRjLiBoYXMgYmVlbiBwZXJmb3JtZWQpLlxyXG4gICAqL1xyXG4gIEFkbWluaXN0cmFibGVQcm9kdWN0RGVmaW5pdGlvbjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBBZHZlcnNlRXZlbnQ6IEFjdHVhbCBvciAgcG90ZW50aWFsL2F2b2lkZWQgZXZlbnQgY2F1c2luZyB1bmludGVuZGVkIHBoeXNpY2FsIGluanVyeSByZXN1bHRpbmcgZnJvbSBvciBjb250cmlidXRlZCB0byBieSBtZWRpY2FsIGNhcmUsIGEgcmVzZWFyY2ggc3R1ZHkgb3Igb3RoZXIgaGVhbHRoY2FyZSBzZXR0aW5nIGZhY3RvcnMgdGhhdCByZXF1aXJlcyBhZGRpdGlvbmFsIG1vbml0b3JpbmcsIHRyZWF0bWVudCwgb3IgaG9zcGl0YWxpemF0aW9uLCBvciB0aGF0IHJlc3VsdHMgaW4gZGVhdGguXHJcbiAgICovXHJcbiAgQWR2ZXJzZUV2ZW50OiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIEFsbGVyZ3lJbnRvbGVyYW5jZTogUmlzayBvZiBoYXJtZnVsIG9yIHVuZGVzaXJhYmxlLCBwaHlzaW9sb2dpY2FsIHJlc3BvbnNlIHdoaWNoIGlzIHVuaXF1ZSB0byBhbiBpbmRpdmlkdWFsIGFuZCBhc3NvY2lhdGVkIHdpdGggZXhwb3N1cmUgdG8gYSBzdWJzdGFuY2UuXHJcbiAgICovXHJcbiAgQWxsZXJneUludG9sZXJhbmNlOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IGFwcGxpY2F0aW9uL2hsNy1jZGEreG1sXHJcbiAgICovXHJcbiAgQ0RBRG9jdW1lbnRzOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIEFwcG9pbnRtZW50OiBBIGJvb2tpbmcgb2YgYSBoZWFsdGhjYXJlIGV2ZW50IGFtb25nIHBhdGllbnQocyksIHByYWN0aXRpb25lcihzKSwgcmVsYXRlZCBwZXJzb24ocykgYW5kL29yIGRldmljZShzKSBmb3IgYSBzcGVjaWZpYyBkYXRlL3RpbWUuIFRoaXMgbWF5IHJlc3VsdCBpbiBvbmUgb3IgbW9yZSBFbmNvdW50ZXIocykuXHJcbiAgICovXHJcbiAgQXBwb2ludG1lbnQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQXBwb2ludG1lbnRSZXNwb25zZTogQSByZXBseSB0byBhbiBhcHBvaW50bWVudCByZXF1ZXN0IGZvciBhIHBhdGllbnQgYW5kL29yIHByYWN0aXRpb25lcihzKSwgc3VjaCBhcyBhIGNvbmZpcm1hdGlvbiBvciByZWplY3Rpb24uXHJcbiAgICovXHJcbiAgQXBwb2ludG1lbnRSZXNwb25zZTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBBdWRpdEV2ZW50OiBBIHJlY29yZCBvZiBhbiBldmVudCBtYWRlIGZvciBwdXJwb3NlcyBvZiBtYWludGFpbmluZyBhIHNlY3VyaXR5IGxvZy4gVHlwaWNhbCB1c2VzIGluY2x1ZGUgZGV0ZWN0aW9uIG9mIGludHJ1c2lvbiBhdHRlbXB0cyBhbmQgbW9uaXRvcmluZyBmb3IgaW5hcHByb3ByaWF0ZSB1c2FnZS5cclxuICAgKi9cclxuICBBdWRpdEV2ZW50OiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIEJhc2ljOiBCYXNpYyBpcyB1c2VkIGZvciBoYW5kbGluZyBjb25jZXB0cyBub3QgeWV0IGRlZmluZWQgaW4gRkhJUiwgbmFycmF0aXZlLW9ubHkgcmVzb3VyY2VzIHRoYXQgZG9uJ3QgbWFwIHRvIGFuIGV4aXN0aW5nIHJlc291cmNlLCBhbmQgY3VzdG9tIHJlc291cmNlcyBub3QgYXBwcm9wcmlhdGUgZm9yIGluY2x1c2lvbiBpbiB0aGUgRkhJUiBzcGVjaWZpY2F0aW9uLlxyXG4gICAqL1xyXG4gIEJhc2ljOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIEJpbmFyeTogQSByZXNvdXJjZSB0aGF0IHJlcHJlc2VudHMgdGhlIGRhdGEgb2YgYSBzaW5nbGUgcmF3IGFydGlmYWN0IGFzIGRpZ2l0YWwgY29udGVudCBhY2Nlc3NpYmxlIGluIGl0cyBuYXRpdmUgZm9ybWF0LiAgQSBCaW5hcnkgcmVzb3VyY2UgY2FuIGNvbnRhaW4gYW55IGNvbnRlbnQsIHdoZXRoZXIgdGV4dCwgaW1hZ2UsIHBkZiwgemlwIGFyY2hpdmUsIGV0Yy5cclxuICAgKi9cclxuICBCaW5hcnk6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQmlvbG9naWNhbGx5RGVyaXZlZFByb2R1Y3Q6IEEgbWF0ZXJpYWwgc3Vic3RhbmNlIG9yaWdpbmF0aW5nIGZyb20gYSBiaW9sb2dpY2FsIGVudGl0eSBpbnRlbmRlZCB0byBiZSB0cmFuc3BsYW50ZWQgb3IgaW5mdXNlZFxyXG4gICAqIGludG8gYW5vdGhlciAocG9zc2libHkgdGhlIHNhbWUpIGJpb2xvZ2ljYWwgZW50aXR5LlxyXG4gICAqL1xyXG4gIEJpb2xvZ2ljYWxseURlcml2ZWRQcm9kdWN0OiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIEJvZHlTdHJ1Y3R1cmU6IFJlY29yZCBkZXRhaWxzIGFib3V0IGFuIGFuYXRvbWljYWwgc3RydWN0dXJlLiAgVGhpcyByZXNvdXJjZSBtYXkgYmUgdXNlZCB3aGVuIGEgY29kZWQgY29uY2VwdCBkb2VzIG5vdCBwcm92aWRlIHRoZSBuZWNlc3NhcnkgZGV0YWlsIG5lZWRlZCBmb3IgdGhlIHVzZSBjYXNlLlxyXG4gICAqL1xyXG4gIEJvZHlTdHJ1Y3R1cmU6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQnVuZGxlOiBBIGNvbnRhaW5lciBmb3IgYSBjb2xsZWN0aW9uIG9mIHJlc291cmNlcy5cclxuICAgKi9cclxuICBCdW5kbGU6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ2FwYWJpbGl0eVN0YXRlbWVudDogQSBDYXBhYmlsaXR5IFN0YXRlbWVudCBkb2N1bWVudHMgYSBzZXQgb2YgY2FwYWJpbGl0aWVzIChiZWhhdmlvcnMpIG9mIGEgRkhJUiBTZXJ2ZXIgZm9yIGEgcGFydGljdWxhciB2ZXJzaW9uIG9mIEZISVIgdGhhdCBtYXkgYmUgdXNlZCBhcyBhIHN0YXRlbWVudCBvZiBhY3R1YWwgc2VydmVyIGZ1bmN0aW9uYWxpdHkgb3IgYSBzdGF0ZW1lbnQgb2YgcmVxdWlyZWQgb3IgZGVzaXJlZCBzZXJ2ZXIgaW1wbGVtZW50YXRpb24uXHJcbiAgICovXHJcbiAgQ2FwYWJpbGl0eVN0YXRlbWVudDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDYXJlUGxhbjogRGVzY3JpYmVzIHRoZSBpbnRlbnRpb24gb2YgaG93IG9uZSBvciBtb3JlIHByYWN0aXRpb25lcnMgaW50ZW5kIHRvIGRlbGl2ZXIgY2FyZSBmb3IgYSBwYXJ0aWN1bGFyIHBhdGllbnQsIGdyb3VwIG9yIGNvbW11bml0eSBmb3IgYSBwZXJpb2Qgb2YgdGltZSwgcG9zc2libHkgbGltaXRlZCB0byBjYXJlIGZvciBhIHNwZWNpZmljIGNvbmRpdGlvbiBvciBzZXQgb2YgY29uZGl0aW9ucy5cclxuICAgKi9cclxuICBDYXJlUGxhbjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDYXJlVGVhbTogVGhlIENhcmUgVGVhbSBpbmNsdWRlcyBhbGwgdGhlIHBlb3BsZSBhbmQgb3JnYW5pemF0aW9ucyB3aG8gcGxhbiB0byBwYXJ0aWNpcGF0ZSBpbiB0aGUgY29vcmRpbmF0aW9uIGFuZCBkZWxpdmVyeSBvZiBjYXJlIGZvciBhIHBhdGllbnQuXHJcbiAgICovXHJcbiAgQ2FyZVRlYW06IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ2F0YWxvZ0VudHJ5OiBDYXRhbG9nIGVudHJpZXMgYXJlIHdyYXBwZXJzIHRoYXQgY29udGV4dHVhbGl6ZSBpdGVtcyBpbmNsdWRlZCBpbiBhIGNhdGFsb2cuXHJcbiAgICovXHJcbiAgQ2F0YWxvZ0VudHJ5OiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENoYXJnZUl0ZW06IFRoZSByZXNvdXJjZSBDaGFyZ2VJdGVtIGRlc2NyaWJlcyB0aGUgcHJvdmlzaW9uIG9mIGhlYWx0aGNhcmUgcHJvdmlkZXIgcHJvZHVjdHMgZm9yIGEgY2VydGFpbiBwYXRpZW50LCB0aGVyZWZvcmUgcmVmZXJyaW5nIG5vdCBvbmx5IHRvIHRoZSBwcm9kdWN0LCBidXQgY29udGFpbmluZyBpbiBhZGRpdGlvbiBkZXRhaWxzIG9mIHRoZSBwcm92aXNpb24sIGxpa2UgZGF0ZSwgdGltZSwgYW1vdW50cyBhbmQgcGFydGljaXBhdGluZyBvcmdhbml6YXRpb25zIGFuZCBwZXJzb25zLiBNYWluIFVzYWdlIG9mIHRoZSBDaGFyZ2VJdGVtIGlzIHRvIGVuYWJsZSB0aGUgYmlsbGluZyBwcm9jZXNzIGFuZCBpbnRlcm5hbCBjb3N0IGFsbG9jYXRpb24uXHJcbiAgICovXHJcbiAgQ2hhcmdlSXRlbTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDaGFyZ2VJdGVtRGVmaW5pdGlvbjogVGhlIENoYXJnZUl0ZW1EZWZpbml0aW9uIHJlc291cmNlIHByb3ZpZGVzIHRoZSBwcm9wZXJ0aWVzIHRoYXQgYXBwbHkgdG8gdGhlIChiaWxsaW5nKSBjb2RlcyBuZWNlc3NhcnkgdG8gY2FsY3VsYXRlIGNvc3RzIGFuZCBwcmljZXMuIFRoZSBwcm9wZXJ0aWVzIG1heSBkaWZmZXIgbGFyZ2VseSBkZXBlbmRpbmcgb24gdHlwZSBhbmQgcmVhbG0sIHRoZXJlZm9yZSB0aGlzIHJlc291cmNlIGdpdmVzIG9ubHkgYSByb3VnaCBzdHJ1Y3R1cmUgYW5kIHJlcXVpcmVzIHByb2ZpbGluZyBmb3IgZWFjaCB0eXBlIG9mIGJpbGxpbmcgY29kZSBzeXN0ZW0uXHJcbiAgICovXHJcbiAgQ2hhcmdlSXRlbURlZmluaXRpb246IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ2l0YXRpb246IFRoZSBDaXRhdGlvbiBSZXNvdXJjZSBlbmFibGVzIHJlZmVyZW5jZSB0byBhbnkga25vd2xlZGdlIGFydGlmYWN0IGZvciBwdXJwb3NlcyBvZiBpZGVudGlmaWNhdGlvbiBhbmQgYXR0cmlidXRpb24uIFRoZSBDaXRhdGlvbiBSZXNvdXJjZSBzdXBwb3J0cyBleGlzdGluZyByZWZlcmVuY2Ugc3RydWN0dXJlcyBhbmQgZGV2ZWxvcGluZyBwdWJsaWNhdGlvbiBwcmFjdGljZXMgc3VjaCBhcyB2ZXJzaW9uaW5nLCBleHByZXNzaW5nIGNvbXBsZXggY29udHJpYnV0b3JzaGlwIHJvbGVzLCBhbmQgcmVmZXJlbmNpbmcgY29tcHV0YWJsZSByZXNvdXJjZXMuXHJcbiAgICovXHJcbiAgQ2l0YXRpb246IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ2xhaW06IEEgcHJvdmlkZXIgaXNzdWVkIGxpc3Qgb2YgcHJvZmVzc2lvbmFsIHNlcnZpY2VzIGFuZCBwcm9kdWN0cyB3aGljaCBoYXZlIGJlZW4gcHJvdmlkZWQsIG9yIGFyZSB0byBiZSBwcm92aWRlZCwgdG8gYSBwYXRpZW50IHdoaWNoIGlzIHNlbnQgdG8gYW4gaW5zdXJlciBmb3IgcmVpbWJ1cnNlbWVudC5cclxuICAgKi9cclxuICBDbGFpbTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDbGFpbVJlc3BvbnNlOiBUaGlzIHJlc291cmNlIHByb3ZpZGVzIHRoZSBhZGp1ZGljYXRpb24gZGV0YWlscyBmcm9tIHRoZSBwcm9jZXNzaW5nIG9mIGEgQ2xhaW0gcmVzb3VyY2UuXHJcbiAgICovXHJcbiAgQ2xhaW1SZXNwb25zZTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDbGluaWNhbEltcHJlc3Npb246IEEgcmVjb3JkIG9mIGEgY2xpbmljYWwgYXNzZXNzbWVudCBwZXJmb3JtZWQgdG8gZGV0ZXJtaW5lIHdoYXQgcHJvYmxlbShzKSBtYXkgYWZmZWN0IHRoZSBwYXRpZW50IGFuZCBiZWZvcmUgcGxhbm5pbmcgdGhlIHRyZWF0bWVudHMgb3IgbWFuYWdlbWVudCBzdHJhdGVnaWVzIHRoYXQgYXJlIGJlc3QgdG8gbWFuYWdlIGEgcGF0aWVudCdzIGNvbmRpdGlvbi4gQXNzZXNzbWVudHMgYXJlIG9mdGVuIDE6MSB3aXRoIGEgY2xpbmljYWwgY29uc3VsdGF0aW9uIC8gZW5jb3VudGVyLCAgYnV0IHRoaXMgdmFyaWVzIGdyZWF0bHkgZGVwZW5kaW5nIG9uIHRoZSBjbGluaWNhbCB3b3JrZmxvdy4gVGhpcyByZXNvdXJjZSBpcyBjYWxsZWQgXCJDbGluaWNhbEltcHJlc3Npb25cIiByYXRoZXIgdGhhbiBcIkNsaW5pY2FsQXNzZXNzbWVudFwiIHRvIGF2b2lkIGNvbmZ1c2lvbiB3aXRoIHRoZSByZWNvcmRpbmcgb2YgYXNzZXNzbWVudCB0b29scyBzdWNoIGFzIEFwZ2FyIHNjb3JlLlxyXG4gICAqL1xyXG4gIENsaW5pY2FsSW1wcmVzc2lvbjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDbGluaWNhbFVzZURlZmluaXRpb246IEEgc2luZ2xlIGlzc3VlIC0gZWl0aGVyIGFuIGluZGljYXRpb24sIGNvbnRyYWluZGljYXRpb24sIGludGVyYWN0aW9uIG9yIGFuIHVuZGVzaXJhYmxlIGVmZmVjdCBmb3IgYSBtZWRpY2luYWwgcHJvZHVjdCwgbWVkaWNhdGlvbiwgZGV2aWNlIG9yIHByb2NlZHVyZS5cclxuICAgKi9cclxuICBDbGluaWNhbFVzZURlZmluaXRpb246IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZVN5c3RlbTogVGhlIENvZGVTeXN0ZW0gcmVzb3VyY2UgaXMgdXNlZCB0byBkZWNsYXJlIHRoZSBleGlzdGVuY2Ugb2YgYW5kIGRlc2NyaWJlIGEgY29kZSBzeXN0ZW0gb3IgY29kZSBzeXN0ZW0gc3VwcGxlbWVudCBhbmQgaXRzIGtleSBwcm9wZXJ0aWVzLCBhbmQgb3B0aW9uYWxseSBkZWZpbmUgYSBwYXJ0IG9yIGFsbCBvZiBpdHMgY29udGVudC5cclxuICAgKi9cclxuICBDb2RlU3lzdGVtOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvbW11bmljYXRpb246IEFuIG9jY3VycmVuY2Ugb2YgaW5mb3JtYXRpb24gYmVpbmcgdHJhbnNtaXR0ZWQ7IGUuZy4gYW4gYWxlcnQgdGhhdCB3YXMgc2VudCB0byBhIHJlc3BvbnNpYmxlIHByb3ZpZGVyLCBhIHB1YmxpYyBoZWFsdGggYWdlbmN5IHRoYXQgd2FzIG5vdGlmaWVkIGFib3V0IGEgcmVwb3J0YWJsZSBjb25kaXRpb24uXHJcbiAgICovXHJcbiAgQ29tbXVuaWNhdGlvbjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb21tdW5pY2F0aW9uUmVxdWVzdDogQSByZXF1ZXN0IHRvIGNvbnZleSBpbmZvcm1hdGlvbjsgZS5nLiB0aGUgQ0RTIHN5c3RlbSBwcm9wb3NlcyB0aGF0IGFuIGFsZXJ0IGJlIHNlbnQgdG8gYSByZXNwb25zaWJsZSBwcm92aWRlciwgdGhlIENEUyBzeXN0ZW0gcHJvcG9zZXMgdGhhdCB0aGUgcHVibGljIGhlYWx0aCBhZ2VuY3kgYmUgbm90aWZpZWQgYWJvdXQgYSByZXBvcnRhYmxlIGNvbmRpdGlvbi5cclxuICAgKi9cclxuICBDb21tdW5pY2F0aW9uUmVxdWVzdDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb21wYXJ0bWVudERlZmluaXRpb246IEEgY29tcGFydG1lbnQgZGVmaW5pdGlvbiB0aGF0IGRlZmluZXMgaG93IHJlc291cmNlcyBhcmUgYWNjZXNzZWQgb24gYSBzZXJ2ZXIuXHJcbiAgICovXHJcbiAgQ29tcGFydG1lbnREZWZpbml0aW9uOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvbXBvc2l0aW9uOiBBIHNldCBvZiBoZWFsdGhjYXJlLXJlbGF0ZWQgaW5mb3JtYXRpb24gdGhhdCBpcyBhc3NlbWJsZWQgdG9nZXRoZXIgaW50byBhIHNpbmdsZSBsb2dpY2FsIHBhY2thZ2UgdGhhdCBwcm92aWRlcyBhIHNpbmdsZSBjb2hlcmVudCBzdGF0ZW1lbnQgb2YgbWVhbmluZywgZXN0YWJsaXNoZXMgaXRzIG93biBjb250ZXh0IGFuZCB0aGF0IGhhcyBjbGluaWNhbCBhdHRlc3RhdGlvbiB3aXRoIHJlZ2FyZCB0byB3aG8gaXMgbWFraW5nIHRoZSBzdGF0ZW1lbnQuIEEgQ29tcG9zaXRpb24gZGVmaW5lcyB0aGUgc3RydWN0dXJlIGFuZCBuYXJyYXRpdmUgY29udGVudCBuZWNlc3NhcnkgZm9yIGEgZG9jdW1lbnQuIEhvd2V2ZXIsIGEgQ29tcG9zaXRpb24gYWxvbmUgZG9lcyBub3QgY29uc3RpdHV0ZSBhIGRvY3VtZW50LiBSYXRoZXIsIHRoZSBDb21wb3NpdGlvbiBtdXN0IGJlIHRoZSBmaXJzdCBlbnRyeSBpbiBhIEJ1bmRsZSB3aGVyZSBCdW5kbGUudHlwZT1kb2N1bWVudCwgYW5kIGFueSBvdGhlciByZXNvdXJjZXMgcmVmZXJlbmNlZCBmcm9tIENvbXBvc2l0aW9uIG11c3QgYmUgaW5jbHVkZWQgYXMgc3Vic2VxdWVudCBlbnRyaWVzIGluIHRoZSBCdW5kbGUgKGZvciBleGFtcGxlIFBhdGllbnQsIFByYWN0aXRpb25lciwgRW5jb3VudGVyLCBldGMuKS5cclxuICAgKi9cclxuICBDb21wb3NpdGlvbjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb25jZXB0TWFwOiBBIHN0YXRlbWVudCBvZiByZWxhdGlvbnNoaXBzIGZyb20gb25lIHNldCBvZiBjb25jZXB0cyB0byBvbmUgb3IgbW9yZSBvdGhlciBjb25jZXB0cyAtIGVpdGhlciBjb25jZXB0cyBpbiBjb2RlIHN5c3RlbXMsIG9yIGRhdGEgZWxlbWVudC9kYXRhIGVsZW1lbnQgY29uY2VwdHMsIG9yIGNsYXNzZXMgaW4gY2xhc3MgbW9kZWxzLlxyXG4gICAqL1xyXG4gIENvbmNlcHRNYXA6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29uZGl0aW9uOiBBIGNsaW5pY2FsIGNvbmRpdGlvbiwgcHJvYmxlbSwgZGlhZ25vc2lzLCBvciBvdGhlciBldmVudCwgc2l0dWF0aW9uLCBpc3N1ZSwgb3IgY2xpbmljYWwgY29uY2VwdCB0aGF0IGhhcyByaXNlbiB0byBhIGxldmVsIG9mIGNvbmNlcm4uXHJcbiAgICovXHJcbiAgQ29uZGl0aW9uOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvbnNlbnQ6IEEgcmVjb3JkIG9mIGEgaGVhbHRoY2FyZSBjb25zdW1lcuKAmXMgIGNob2ljZXMsIHdoaWNoIHBlcm1pdHMgb3IgZGVuaWVzIGlkZW50aWZpZWQgcmVjaXBpZW50KHMpIG9yIHJlY2lwaWVudCByb2xlKHMpIHRvIHBlcmZvcm0gb25lIG9yIG1vcmUgYWN0aW9ucyB3aXRoaW4gYSBnaXZlbiBwb2xpY3kgY29udGV4dCwgZm9yIHNwZWNpZmljIHB1cnBvc2VzIGFuZCBwZXJpb2RzIG9mIHRpbWUuXHJcbiAgICovXHJcbiAgQ29uc2VudDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb250cmFjdDogTGVnYWxseSBlbmZvcmNlYWJsZSwgZm9ybWFsbHkgcmVjb3JkZWQgdW5pbGF0ZXJhbCBvciBiaWxhdGVyYWwgZGlyZWN0aXZlIGkuZS4sIGEgcG9saWN5IG9yIGFncmVlbWVudC5cclxuICAgKi9cclxuICBDb250cmFjdDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb3ZlcmFnZTogRmluYW5jaWFsIGluc3RydW1lbnQgd2hpY2ggbWF5IGJlIHVzZWQgdG8gcmVpbWJ1cnNlIG9yIHBheSBmb3IgaGVhbHRoIGNhcmUgcHJvZHVjdHMgYW5kIHNlcnZpY2VzLiBJbmNsdWRlcyBib3RoIGluc3VyYW5jZSBhbmQgc2VsZi1wYXltZW50LlxyXG4gICAqL1xyXG4gIENvdmVyYWdlOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvdmVyYWdlRWxpZ2liaWxpdHlSZXF1ZXN0OiBUaGUgQ292ZXJhZ2VFbGlnaWJpbGl0eVJlcXVlc3QgcHJvdmlkZXMgcGF0aWVudCBhbmQgaW5zdXJhbmNlIGNvdmVyYWdlIGluZm9ybWF0aW9uIHRvIGFuIGluc3VyZXIgZm9yIHRoZW0gdG8gcmVzcG9uZCwgaW4gdGhlIGZvcm0gb2YgYW4gQ292ZXJhZ2VFbGlnaWJpbGl0eVJlc3BvbnNlLCB3aXRoIGluZm9ybWF0aW9uIHJlZ2FyZGluZyB3aGV0aGVyIHRoZSBzdGF0ZWQgY292ZXJhZ2UgaXMgdmFsaWQgYW5kIGluLWZvcmNlIGFuZCBvcHRpb25hbGx5IHRvIHByb3ZpZGUgdGhlIGluc3VyYW5jZSBkZXRhaWxzIG9mIHRoZSBwb2xpY3kuXHJcbiAgICovXHJcbiAgQ292ZXJhZ2VFbGlnaWJpbGl0eVJlcXVlc3Q6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ292ZXJhZ2VFbGlnaWJpbGl0eVJlc3BvbnNlOiBUaGlzIHJlc291cmNlIHByb3ZpZGVzIGVsaWdpYmlsaXR5IGFuZCBwbGFuIGRldGFpbHMgZnJvbSB0aGUgcHJvY2Vzc2luZyBvZiBhbiBDb3ZlcmFnZUVsaWdpYmlsaXR5UmVxdWVzdCByZXNvdXJjZS5cclxuICAgKi9cclxuICBDb3ZlcmFnZUVsaWdpYmlsaXR5UmVzcG9uc2U6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogRGV0ZWN0ZWRJc3N1ZTogSW5kaWNhdGVzIGFuIGFjdHVhbCBvciBwb3RlbnRpYWwgY2xpbmljYWwgaXNzdWUgd2l0aCBvciBiZXR3ZWVuIG9uZSBvciBtb3JlIGFjdGl2ZSBvciBwcm9wb3NlZCBjbGluaWNhbCBhY3Rpb25zIGZvciBhIHBhdGllbnQ7IGUuZy4gRHJ1Zy1kcnVnIGludGVyYWN0aW9uLCBJbmVmZmVjdGl2ZSB0cmVhdG1lbnQgZnJlcXVlbmN5LCBQcm9jZWR1cmUtY29uZGl0aW9uIGNvbmZsaWN0LCBldGMuXHJcbiAgICovXHJcbiAgRGV0ZWN0ZWRJc3N1ZTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBEZXZpY2U6IEEgdHlwZSBvZiBhIG1hbnVmYWN0dXJlZCBpdGVtIHRoYXQgaXMgdXNlZCBpbiB0aGUgcHJvdmlzaW9uIG9mIGhlYWx0aGNhcmUgd2l0aG91dCBiZWluZyBzdWJzdGFudGlhbGx5IGNoYW5nZWQgdGhyb3VnaCB0aGF0IGFjdGl2aXR5LiBUaGUgZGV2aWNlIG1heSBiZSBhIG1lZGljYWwgb3Igbm9uLW1lZGljYWwgZGV2aWNlLlxyXG4gICAqL1xyXG4gIERldmljZTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBEZXZpY2VEZWZpbml0aW9uOiBUaGUgY2hhcmFjdGVyaXN0aWNzLCBvcGVyYXRpb25hbCBzdGF0dXMgYW5kIGNhcGFiaWxpdGllcyBvZiBhIG1lZGljYWwtcmVsYXRlZCBjb21wb25lbnQgb2YgYSBtZWRpY2FsIGRldmljZS5cclxuICAgKi9cclxuICBEZXZpY2VEZWZpbml0aW9uOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIERldmljZU1ldHJpYzogRGVzY3JpYmVzIGEgbWVhc3VyZW1lbnQsIGNhbGN1bGF0aW9uIG9yIHNldHRpbmcgY2FwYWJpbGl0eSBvZiBhIG1lZGljYWwgZGV2aWNlLlxyXG4gICAqL1xyXG4gIERldmljZU1ldHJpYzogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBEZXZpY2VSZXF1ZXN0OiBSZXByZXNlbnRzIGEgcmVxdWVzdCBmb3IgYSBwYXRpZW50IHRvIGVtcGxveSBhIG1lZGljYWwgZGV2aWNlLiBUaGUgZGV2aWNlIG1heSBiZSBhbiBpbXBsYW50YWJsZSBkZXZpY2UsIG9yIGFuIGV4dGVybmFsIGFzc2lzdGl2ZSBkZXZpY2UsIHN1Y2ggYXMgYSB3YWxrZXIuXHJcbiAgICovXHJcbiAgRGV2aWNlUmVxdWVzdDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBEZXZpY2VVc2VTdGF0ZW1lbnQ6IEEgcmVjb3JkIG9mIGEgZGV2aWNlIGJlaW5nIHVzZWQgYnkgYSBwYXRpZW50IHdoZXJlIHRoZSByZWNvcmQgaXMgdGhlIHJlc3VsdCBvZiBhIHJlcG9ydCBmcm9tIHRoZSBwYXRpZW50IG9yIGFub3RoZXIgY2xpbmljaWFuLlxyXG4gICAqL1xyXG4gIERldmljZVVzZVN0YXRlbWVudDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBEaWFnbm9zdGljUmVwb3J0OiBUaGUgZmluZGluZ3MgYW5kIGludGVycHJldGF0aW9uIG9mIGRpYWdub3N0aWMgIHRlc3RzIHBlcmZvcm1lZCBvbiBwYXRpZW50cywgZ3JvdXBzIG9mIHBhdGllbnRzLCBkZXZpY2VzLCBhbmQgbG9jYXRpb25zLCBhbmQvb3Igc3BlY2ltZW5zIGRlcml2ZWQgZnJvbSB0aGVzZS4gVGhlIHJlcG9ydCBpbmNsdWRlcyBjbGluaWNhbCBjb250ZXh0IHN1Y2ggYXMgcmVxdWVzdGluZyBhbmQgcHJvdmlkZXIgaW5mb3JtYXRpb24sIGFuZCBzb21lIG1peCBvZiBhdG9taWMgcmVzdWx0cywgaW1hZ2VzLCB0ZXh0dWFsIGFuZCBjb2RlZCBpbnRlcnByZXRhdGlvbnMsIGFuZCBmb3JtYXR0ZWQgcmVwcmVzZW50YXRpb24gb2YgZGlhZ25vc3RpYyByZXBvcnRzLlxyXG4gICAqL1xyXG4gIERpYWdub3N0aWNSZXBvcnQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogRG9jdW1lbnRNYW5pZmVzdDogQSBjb2xsZWN0aW9uIG9mIGRvY3VtZW50cyBjb21waWxlZCBmb3IgYSBwdXJwb3NlIHRvZ2V0aGVyIHdpdGggbWV0YWRhdGEgdGhhdCBhcHBsaWVzIHRvIHRoZSBjb2xsZWN0aW9uLlxyXG4gICAqL1xyXG4gIERvY3VtZW50TWFuaWZlc3Q6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogRG9jdW1lbnRSZWZlcmVuY2U6IEEgcmVmZXJlbmNlIHRvIGEgZG9jdW1lbnQgb2YgYW55IGtpbmQgZm9yIGFueSBwdXJwb3NlLiBQcm92aWRlcyBtZXRhZGF0YSBhYm91dCB0aGUgZG9jdW1lbnQgc28gdGhhdCB0aGUgZG9jdW1lbnQgY2FuIGJlIGRpc2NvdmVyZWQgYW5kIG1hbmFnZWQuIFRoZSBzY29wZSBvZiBhIGRvY3VtZW50IGlzIGFueSBzZXJhbGl6ZWQgb2JqZWN0IHdpdGggYSBtaW1lLXR5cGUsIHNvIGluY2x1ZGVzIGZvcm1hbCBwYXRpZW50IGNlbnRyaWMgZG9jdW1lbnRzIChDREEpLCBjbGlpY2FsIG5vdGVzLCBzY2FubmVkIHBhcGVyLCBhbmQgbm9uLXBhdGllbnQgc3BlY2lmaWMgZG9jdW1lbnRzIGxpa2UgcG9saWN5IHRleHQuXHJcbiAgICovXHJcbiAgRG9jdW1lbnRSZWZlcmVuY2U6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogRG9tYWluUmVzb3VyY2U6IC0tLSBBYnN0cmFjdCBUeXBlISAtLS1BIHJlc291cmNlIHRoYXQgaW5jbHVkZXMgbmFycmF0aXZlLCBleHRlbnNpb25zLCBhbmQgY29udGFpbmVkIHJlc291cmNlcy5cclxuICAgKi9cclxuICBEb21haW5SZXNvdXJjZTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBFbmNvdW50ZXI6IEFuIGludGVyYWN0aW9uIGJldHdlZW4gYSBwYXRpZW50IGFuZCBoZWFsdGhjYXJlIHByb3ZpZGVyKHMpIGZvciB0aGUgcHVycG9zZSBvZiBwcm92aWRpbmcgaGVhbHRoY2FyZSBzZXJ2aWNlKHMpIG9yIGFzc2Vzc2luZyB0aGUgaGVhbHRoIHN0YXR1cyBvZiBhIHBhdGllbnQuXHJcbiAgICovXHJcbiAgRW5jb3VudGVyOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIEVuZHBvaW50OiBUaGUgdGVjaG5pY2FsIGRldGFpbHMgb2YgYW4gZW5kcG9pbnQgdGhhdCBjYW4gYmUgdXNlZCBmb3IgZWxlY3Ryb25pYyBzZXJ2aWNlcywgc3VjaCBhcyBmb3Igd2ViIHNlcnZpY2VzIHByb3ZpZGluZyBYRFMuYiBvciBhIFJFU1QgZW5kcG9pbnQgZm9yIGFub3RoZXIgRkhJUiBzZXJ2ZXIuIFRoaXMgbWF5IGluY2x1ZGUgYW55IHNlY3VyaXR5IGNvbnRleHQgaW5mb3JtYXRpb24uXHJcbiAgICovXHJcbiAgRW5kcG9pbnQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogRW5yb2xsbWVudFJlcXVlc3Q6IFRoaXMgcmVzb3VyY2UgcHJvdmlkZXMgdGhlIGluc3VyYW5jZSBlbnJvbGxtZW50IGRldGFpbHMgdG8gdGhlIGluc3VyZXIgcmVnYXJkaW5nIGEgc3BlY2lmaWVkIGNvdmVyYWdlLlxyXG4gICAqL1xyXG4gIEVucm9sbG1lbnRSZXF1ZXN0OiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIEVucm9sbG1lbnRSZXNwb25zZTogVGhpcyByZXNvdXJjZSBwcm92aWRlcyBlbnJvbGxtZW50IGFuZCBwbGFuIGRldGFpbHMgZnJvbSB0aGUgcHJvY2Vzc2luZyBvZiBhbiBFbnJvbGxtZW50UmVxdWVzdCByZXNvdXJjZS5cclxuICAgKi9cclxuICBFbnJvbGxtZW50UmVzcG9uc2U6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogRXBpc29kZU9mQ2FyZTogQW4gYXNzb2NpYXRpb24gYmV0d2VlbiBhIHBhdGllbnQgYW5kIGFuIG9yZ2FuaXphdGlvbiAvIGhlYWx0aGNhcmUgcHJvdmlkZXIocykgZHVyaW5nIHdoaWNoIHRpbWUgZW5jb3VudGVycyBtYXkgb2NjdXIuIFRoZSBtYW5hZ2luZyBvcmdhbml6YXRpb24gYXNzdW1lcyBhIGxldmVsIG9mIHJlc3BvbnNpYmlsaXR5IGZvciB0aGUgcGF0aWVudCBkdXJpbmcgdGhpcyB0aW1lLlxyXG4gICAqL1xyXG4gIEVwaXNvZGVPZkNhcmU6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogRXZlbnREZWZpbml0aW9uOiBUaGUgRXZlbnREZWZpbml0aW9uIHJlc291cmNlIHByb3ZpZGVzIGEgcmV1c2FibGUgZGVzY3JpcHRpb24gb2Ygd2hlbiBhIHBhcnRpY3VsYXIgZXZlbnQgY2FuIG9jY3VyLlxyXG4gICAqL1xyXG4gIEV2ZW50RGVmaW5pdGlvbjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBFdmlkZW5jZTogVGhlIEV2aWRlbmNlIFJlc291cmNlIHByb3ZpZGVzIGEgbWFjaGluZS1pbnRlcnByZXRhYmxlIGV4cHJlc3Npb24gb2YgYW4gZXZpZGVuY2UgY29uY2VwdCBpbmNsdWRpbmcgdGhlIGV2aWRlbmNlIHZhcmlhYmxlcyAoZWcgcG9wdWxhdGlvbiwgZXhwb3N1cmVzL2ludGVydmVudGlvbnMsIGNvbXBhcmF0b3JzLCBvdXRjb21lcywgbWVhc3VyZWQgdmFyaWFibGVzLCBjb25mb3VuZGluZyB2YXJpYWJsZXMpLCB0aGUgc3RhdGlzdGljcywgYW5kIHRoZSBjZXJ0YWludHkgb2YgdGhpcyBldmlkZW5jZS5cclxuICAgKi9cclxuICBFdmlkZW5jZTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBFdmlkZW5jZVJlcG9ydDogVGhlIEV2aWRlbmNlUmVwb3J0IFJlc291cmNlIGlzIGEgc3BlY2lhbGl6ZWQgY29udGFpbmVyIGZvciBhIGNvbGxlY3Rpb24gb2YgcmVzb3VyY2VzIGFuZCBjb2RhYmxlIGNvbmNlcHRzLCBhZGFwdGVkIHRvIHN1cHBvcnQgY29tcG9zaXRpb25zIG9mIEV2aWRlbmNlLCBFdmlkZW5jZVZhcmlhYmxlLCBhbmQgQ2l0YXRpb24gcmVzb3VyY2VzIGFuZCByZWxhdGVkIGNvbmNlcHRzLlxyXG4gICAqL1xyXG4gIEV2aWRlbmNlUmVwb3J0OiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIEV2aWRlbmNlVmFyaWFibGU6IFRoZSBFdmlkZW5jZVZhcmlhYmxlIHJlc291cmNlIGRlc2NyaWJlcyBhbiBlbGVtZW50IHRoYXQga25vd2xlZGdlIChFdmlkZW5jZSkgaXMgYWJvdXQuXHJcbiAgICovXHJcbiAgRXZpZGVuY2VWYXJpYWJsZTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBFeGFtcGxlU2NlbmFyaW86IEV4YW1wbGUgb2Ygd29ya2Zsb3cgaW5zdGFuY2UuXHJcbiAgICovXHJcbiAgRXhhbXBsZVNjZW5hcmlvOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIEV4cGxhbmF0aW9uT2ZCZW5lZml0OiBUaGlzIHJlc291cmNlIHByb3ZpZGVzOiB0aGUgY2xhaW0gZGV0YWlsczsgYWRqdWRpY2F0aW9uIGRldGFpbHMgZnJvbSB0aGUgcHJvY2Vzc2luZyBvZiBhIENsYWltOyBhbmQgb3B0aW9uYWxseSBhY2NvdW50IGJhbGFuY2UgaW5mb3JtYXRpb24sIGZvciBpbmZvcm1pbmcgdGhlIHN1YnNjcmliZXIgb2YgdGhlIGJlbmVmaXRzIHByb3ZpZGVkLlxyXG4gICAqL1xyXG4gIEV4cGxhbmF0aW9uT2ZCZW5lZml0OiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIEZhbWlseU1lbWJlckhpc3Rvcnk6IFNpZ25pZmljYW50IGhlYWx0aCBjb25kaXRpb25zIGZvciBhIHBlcnNvbiByZWxhdGVkIHRvIHRoZSBwYXRpZW50IHJlbGV2YW50IGluIHRoZSBjb250ZXh0IG9mIGNhcmUgZm9yIHRoZSBwYXRpZW50LlxyXG4gICAqL1xyXG4gIEZhbWlseU1lbWJlckhpc3Rvcnk6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogRmxhZzogUHJvc3BlY3RpdmUgd2FybmluZ3Mgb2YgcG90ZW50aWFsIGlzc3VlcyB3aGVuIHByb3ZpZGluZyBjYXJlIHRvIHRoZSBwYXRpZW50LlxyXG4gICAqL1xyXG4gIEZsYWc6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogR29hbDogRGVzY3JpYmVzIHRoZSBpbnRlbmRlZCBvYmplY3RpdmUocykgZm9yIGEgcGF0aWVudCwgZ3JvdXAgb3Igb3JnYW5pemF0aW9uIGNhcmUsIGZvciBleGFtcGxlLCB3ZWlnaHQgbG9zcywgcmVzdG9yaW5nIGFuIGFjdGl2aXR5IG9mIGRhaWx5IGxpdmluZywgb2J0YWluaW5nIGhlcmQgaW1tdW5pdHkgdmlhIGltbXVuaXphdGlvbiwgbWVldGluZyBhIHByb2Nlc3MgaW1wcm92ZW1lbnQgb2JqZWN0aXZlLCBldGMuXHJcbiAgICovXHJcbiAgR29hbDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBHcmFwaERlZmluaXRpb246IEEgZm9ybWFsIGNvbXB1dGFibGUgZGVmaW5pdGlvbiBvZiBhIGdyYXBoIG9mIHJlc291cmNlcyAtIHRoYXQgaXMsIGEgY29oZXJlbnQgc2V0IG9mIHJlc291cmNlcyB0aGF0IGZvcm0gYSBncmFwaCBieSBmb2xsb3dpbmcgcmVmZXJlbmNlcy4gVGhlIEdyYXBoIERlZmluaXRpb24gcmVzb3VyY2UgZGVmaW5lcyBhIHNldCBhbmQgbWFrZXMgcnVsZXMgYWJvdXQgdGhlIHNldC5cclxuICAgKi9cclxuICBHcmFwaERlZmluaXRpb246IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogR3JvdXA6IFJlcHJlc2VudHMgYSBkZWZpbmVkIGNvbGxlY3Rpb24gb2YgZW50aXRpZXMgdGhhdCBtYXkgYmUgZGlzY3Vzc2VkIG9yIGFjdGVkIHVwb24gY29sbGVjdGl2ZWx5IGJ1dCB3aGljaCBhcmUgbm90IGV4cGVjdGVkIHRvIGFjdCBjb2xsZWN0aXZlbHksIGFuZCBhcmUgbm90IGZvcm1hbGx5IG9yIGxlZ2FsbHkgcmVjb2duaXplZDsgaS5lLiBhIGNvbGxlY3Rpb24gb2YgZW50aXRpZXMgdGhhdCBpc24ndCBhbiBPcmdhbml6YXRpb24uXHJcbiAgICovXHJcbiAgR3JvdXA6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogR3VpZGFuY2VSZXNwb25zZTogQSBndWlkYW5jZSByZXNwb25zZSBpcyB0aGUgZm9ybWFsIHJlc3BvbnNlIHRvIGEgZ3VpZGFuY2UgcmVxdWVzdCwgaW5jbHVkaW5nIGFueSBvdXRwdXQgcGFyYW1ldGVycyByZXR1cm5lZCBieSB0aGUgZXZhbHVhdGlvbiwgYXMgd2VsbCBhcyB0aGUgZGVzY3JpcHRpb24gb2YgYW55IHByb3Bvc2VkIGFjdGlvbnMgdG8gYmUgdGFrZW4uXHJcbiAgICovXHJcbiAgR3VpZGFuY2VSZXNwb25zZTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBIZWFsdGhjYXJlU2VydmljZTogVGhlIGRldGFpbHMgb2YgYSBoZWFsdGhjYXJlIHNlcnZpY2UgYXZhaWxhYmxlIGF0IGEgbG9jYXRpb24uXHJcbiAgICovXHJcbiAgSGVhbHRoY2FyZVNlcnZpY2U6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogaHR0cDovL2hsNy5vcmcvZmhpci9TdHJ1Y3R1cmVEZWZpbml0aW9uL2xpcGlkcHJvZmlsZVxyXG4gICAqL1xyXG4gIExpcGlkTGFiUmVwb3J0OiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIEltYWdpbmdTdHVkeTogUmVwcmVzZW50YXRpb24gb2YgdGhlIGNvbnRlbnQgcHJvZHVjZWQgaW4gYSBESUNPTSBpbWFnaW5nIHN0dWR5LiBBIHN0dWR5IGNvbXByaXNlcyBhIHNldCBvZiBzZXJpZXMsIGVhY2ggb2Ygd2hpY2ggaW5jbHVkZXMgYSBzZXQgb2YgU2VydmljZS1PYmplY3QgUGFpciBJbnN0YW5jZXMgKFNPUCBJbnN0YW5jZXMgLSBpbWFnZXMgb3Igb3RoZXIgZGF0YSkgYWNxdWlyZWQgb3IgcHJvZHVjZWQgaW4gYSBjb21tb24gY29udGV4dC4gIEEgc2VyaWVzIGlzIG9mIG9ubHkgb25lIG1vZGFsaXR5IChlLmcuIFgtcmF5LCBDVCwgTVIsIHVsdHJhc291bmQpLCBidXQgYSBzdHVkeSBtYXkgaGF2ZSBtdWx0aXBsZSBzZXJpZXMgb2YgZGlmZmVyZW50IG1vZGFsaXRpZXMuXHJcbiAgICovXHJcbiAgSW1hZ2luZ1N0dWR5OiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIEltbXVuaXphdGlvbjogRGVzY3JpYmVzIHRoZSBldmVudCBvZiBhIHBhdGllbnQgYmVpbmcgYWRtaW5pc3RlcmVkIGEgdmFjY2luZSBvciBhIHJlY29yZCBvZiBhbiBpbW11bml6YXRpb24gYXMgcmVwb3J0ZWQgYnkgYSBwYXRpZW50LCBhIGNsaW5pY2lhbiBvciBhbm90aGVyIHBhcnR5LlxyXG4gICAqL1xyXG4gIEltbXVuaXphdGlvbjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBJbW11bml6YXRpb25FdmFsdWF0aW9uOiBEZXNjcmliZXMgYSBjb21wYXJpc29uIG9mIGFuIGltbXVuaXphdGlvbiBldmVudCBhZ2FpbnN0IHB1Ymxpc2hlZCByZWNvbW1lbmRhdGlvbnMgdG8gZGV0ZXJtaW5lIGlmIHRoZSBhZG1pbmlzdHJhdGlvbiBpcyBcInZhbGlkXCIgaW4gcmVsYXRpb24gdG8gdGhvc2UgIHJlY29tbWVuZGF0aW9ucy5cclxuICAgKi9cclxuICBJbW11bml6YXRpb25FdmFsdWF0aW9uOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIEltbXVuaXphdGlvblJlY29tbWVuZGF0aW9uOiBBIHBhdGllbnQncyBwb2ludC1pbi10aW1lIHNldCBvZiByZWNvbW1lbmRhdGlvbnMgKGkuZS4gZm9yZWNhc3RpbmcpIGFjY29yZGluZyB0byBhIHB1Ymxpc2hlZCBzY2hlZHVsZSB3aXRoIG9wdGlvbmFsIHN1cHBvcnRpbmcganVzdGlmaWNhdGlvbi5cclxuICAgKi9cclxuICBJbW11bml6YXRpb25SZWNvbW1lbmRhdGlvbjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBJbXBsZW1lbnRhdGlvbkd1aWRlOiBBIHNldCBvZiBydWxlcyBvZiBob3cgYSBwYXJ0aWN1bGFyIGludGVyb3BlcmFiaWxpdHkgb3Igc3RhbmRhcmRzIHByb2JsZW0gaXMgc29sdmVkIC0gdHlwaWNhbGx5IHRocm91Z2ggdGhlIHVzZSBvZiBGSElSIHJlc291cmNlcy4gVGhpcyByZXNvdXJjZSBpcyB1c2VkIHRvIGdhdGhlciBhbGwgdGhlIHBhcnRzIG9mIGFuIGltcGxlbWVudGF0aW9uIGd1aWRlIGludG8gYSBsb2dpY2FsIHdob2xlIGFuZCB0byBwdWJsaXNoIGEgY29tcHV0YWJsZSBkZWZpbml0aW9uIG9mIGFsbCB0aGUgcGFydHMuXHJcbiAgICovXHJcbiAgSW1wbGVtZW50YXRpb25HdWlkZTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBJbmdyZWRpZW50OiBBbiBpbmdyZWRpZW50IG9mIGEgbWFudWZhY3R1cmVkIGl0ZW0gb3IgcGhhcm1hY2V1dGljYWwgcHJvZHVjdC5cclxuICAgKi9cclxuICBJbmdyZWRpZW50OiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIEluc3VyYW5jZVBsYW46IERldGFpbHMgb2YgYSBIZWFsdGggSW5zdXJhbmNlIHByb2R1Y3QvcGxhbiBwcm92aWRlZCBieSBhbiBvcmdhbml6YXRpb24uXHJcbiAgICovXHJcbiAgSW5zdXJhbmNlUGxhbjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBJbnZvaWNlOiBJbnZvaWNlIGNvbnRhaW5pbmcgY29sbGVjdGVkIENoYXJnZUl0ZW1zIGZyb20gYW4gQWNjb3VudCB3aXRoIGNhbGN1bGF0ZWQgaW5kaXZpZHVhbCBhbmQgdG90YWwgcHJpY2UgZm9yIEJpbGxpbmcgcHVycG9zZS5cclxuICAgKi9cclxuICBJbnZvaWNlOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIExpYnJhcnk6IFRoZSBMaWJyYXJ5IHJlc291cmNlIGlzIGEgZ2VuZXJhbC1wdXJwb3NlIGNvbnRhaW5lciBmb3Iga25vd2xlZGdlIGFzc2V0IGRlZmluaXRpb25zLiBJdCBjYW4gYmUgdXNlZCB0byBkZXNjcmliZSBhbmQgZXhwb3NlIGV4aXN0aW5nIGtub3dsZWRnZSBhc3NldHMgc3VjaCBhcyBsb2dpYyBsaWJyYXJpZXMgYW5kIGluZm9ybWF0aW9uIG1vZGVsIGRlc2NyaXB0aW9ucywgYXMgd2VsbCBhcyB0byBkZXNjcmliZSBhIGNvbGxlY3Rpb24gb2Yga25vd2xlZGdlIGFzc2V0cy5cclxuICAgKi9cclxuICBMaWJyYXJ5OiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIExpbmthZ2U6IElkZW50aWZpZXMgdHdvIG9yIG1vcmUgcmVjb3JkcyAocmVzb3VyY2UgaW5zdGFuY2VzKSB0aGF0IHJlZmVyIHRvIHRoZSBzYW1lIHJlYWwtd29ybGQgXCJvY2N1cnJlbmNlXCIuXHJcbiAgICovXHJcbiAgTGlua2FnZTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBMaXN0OiBBIGxpc3QgaXMgYSBjdXJhdGVkIGNvbGxlY3Rpb24gb2YgcmVzb3VyY2VzLlxyXG4gICAqL1xyXG4gIExpc3Q6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogTG9jYXRpb246IERldGFpbHMgYW5kIHBvc2l0aW9uIGluZm9ybWF0aW9uIGZvciBhIHBoeXNpY2FsIHBsYWNlIHdoZXJlIHNlcnZpY2VzIGFyZSBwcm92aWRlZCBhbmQgcmVzb3VyY2VzIGFuZCBwYXJ0aWNpcGFudHMgbWF5IGJlIHN0b3JlZCwgZm91bmQsIGNvbnRhaW5lZCwgb3IgYWNjb21tb2RhdGVkLlxyXG4gICAqL1xyXG4gIExvY2F0aW9uOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIE1hbnVmYWN0dXJlZEl0ZW1EZWZpbml0aW9uOiBUaGUgZGVmaW5pdGlvbiBhbmQgY2hhcmFjdGVyaXN0aWNzIG9mIGEgbWVkaWNpbmFsIG1hbnVmYWN0dXJlZCBpdGVtLCBzdWNoIGFzIGEgdGFibGV0IG9yIGNhcHN1bGUsIGFzIGNvbnRhaW5lZCBpbiBhIHBhY2thZ2VkIG1lZGljaW5hbCBwcm9kdWN0LlxyXG4gICAqL1xyXG4gIE1hbnVmYWN0dXJlZEl0ZW1EZWZpbml0aW9uOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIE1lYXN1cmU6IFRoZSBNZWFzdXJlIHJlc291cmNlIHByb3ZpZGVzIHRoZSBkZWZpbml0aW9uIG9mIGEgcXVhbGl0eSBtZWFzdXJlLlxyXG4gICAqL1xyXG4gIE1lYXN1cmU6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogTWVhc3VyZVJlcG9ydDogVGhlIE1lYXN1cmVSZXBvcnQgcmVzb3VyY2UgY29udGFpbnMgdGhlIHJlc3VsdHMgb2YgdGhlIGNhbGN1bGF0aW9uIG9mIGEgbWVhc3VyZTsgYW5kIG9wdGlvbmFsbHkgYSByZWZlcmVuY2UgdG8gdGhlIHJlc291cmNlcyBpbnZvbHZlZCBpbiB0aGF0IGNhbGN1bGF0aW9uLlxyXG4gICAqL1xyXG4gIE1lYXN1cmVSZXBvcnQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogTWVkaWE6IEEgcGhvdG8sIHZpZGVvLCBvciBhdWRpbyByZWNvcmRpbmcgYWNxdWlyZWQgb3IgdXNlZCBpbiBoZWFsdGhjYXJlLiBUaGUgYWN0dWFsIGNvbnRlbnQgbWF5IGJlIGlubGluZSBvciBwcm92aWRlZCBieSBkaXJlY3QgcmVmZXJlbmNlLlxyXG4gICAqL1xyXG4gIE1lZGlhOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIE1lZGljYXRpb246IFRoaXMgcmVzb3VyY2UgaXMgcHJpbWFyaWx5IHVzZWQgZm9yIHRoZSBpZGVudGlmaWNhdGlvbiBhbmQgZGVmaW5pdGlvbiBvZiBhIG1lZGljYXRpb24gZm9yIHRoZSBwdXJwb3NlcyBvZiBwcmVzY3JpYmluZywgZGlzcGVuc2luZywgYW5kIGFkbWluaXN0ZXJpbmcgYSBtZWRpY2F0aW9uIGFzIHdlbGwgYXMgZm9yIG1ha2luZyBzdGF0ZW1lbnRzIGFib3V0IG1lZGljYXRpb24gdXNlLlxyXG4gICAqL1xyXG4gIE1lZGljYXRpb246IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogTWVkaWNhdGlvbkFkbWluaXN0cmF0aW9uOiBEZXNjcmliZXMgdGhlIGV2ZW50IG9mIGEgcGF0aWVudCBjb25zdW1pbmcgb3Igb3RoZXJ3aXNlIGJlaW5nIGFkbWluaXN0ZXJlZCBhIG1lZGljYXRpb24uICBUaGlzIG1heSBiZSBhcyBzaW1wbGUgYXMgc3dhbGxvd2luZyBhIHRhYmxldCBvciBpdCBtYXkgYmUgYSBsb25nIHJ1bm5pbmcgaW5mdXNpb24uICBSZWxhdGVkIHJlc291cmNlcyB0aWUgdGhpcyBldmVudCB0byB0aGUgYXV0aG9yaXppbmcgcHJlc2NyaXB0aW9uLCBhbmQgdGhlIHNwZWNpZmljIGVuY291bnRlciBiZXR3ZWVuIHBhdGllbnQgYW5kIGhlYWx0aCBjYXJlIHByYWN0aXRpb25lci5cclxuICAgKi9cclxuICBNZWRpY2F0aW9uQWRtaW5pc3RyYXRpb246IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogTWVkaWNhdGlvbkRpc3BlbnNlOiBJbmRpY2F0ZXMgdGhhdCBhIG1lZGljYXRpb24gcHJvZHVjdCBpcyB0byBiZSBvciBoYXMgYmVlbiBkaXNwZW5zZWQgZm9yIGEgbmFtZWQgcGVyc29uL3BhdGllbnQuICBUaGlzIGluY2x1ZGVzIGEgZGVzY3JpcHRpb24gb2YgdGhlIG1lZGljYXRpb24gcHJvZHVjdCAoc3VwcGx5KSBwcm92aWRlZCBhbmQgdGhlIGluc3RydWN0aW9ucyBmb3IgYWRtaW5pc3RlcmluZyB0aGUgbWVkaWNhdGlvbi4gIFRoZSBtZWRpY2F0aW9uIGRpc3BlbnNlIGlzIHRoZSByZXN1bHQgb2YgYSBwaGFybWFjeSBzeXN0ZW0gcmVzcG9uZGluZyB0byBhIG1lZGljYXRpb24gb3JkZXIuXHJcbiAgICovXHJcbiAgTWVkaWNhdGlvbkRpc3BlbnNlOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIE1lZGljYXRpb25Lbm93bGVkZ2U6IEluZm9ybWF0aW9uIGFib3V0IGEgbWVkaWNhdGlvbiB0aGF0IGlzIHVzZWQgdG8gc3VwcG9ydCBrbm93bGVkZ2UuXHJcbiAgICovXHJcbiAgTWVkaWNhdGlvbktub3dsZWRnZTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBNZWRpY2F0aW9uUmVxdWVzdDogQW4gb3JkZXIgb3IgcmVxdWVzdCBmb3IgYm90aCBzdXBwbHkgb2YgdGhlIG1lZGljYXRpb24gYW5kIHRoZSBpbnN0cnVjdGlvbnMgZm9yIGFkbWluaXN0cmF0aW9uIG9mIHRoZSBtZWRpY2F0aW9uIHRvIGEgcGF0aWVudC4gVGhlIHJlc291cmNlIGlzIGNhbGxlZCBcIk1lZGljYXRpb25SZXF1ZXN0XCIgcmF0aGVyIHRoYW4gXCJNZWRpY2F0aW9uUHJlc2NyaXB0aW9uXCIgb3IgXCJNZWRpY2F0aW9uT3JkZXJcIiB0byBnZW5lcmFsaXplIHRoZSB1c2UgYWNyb3NzIGlucGF0aWVudCBhbmQgb3V0cGF0aWVudCBzZXR0aW5ncywgaW5jbHVkaW5nIGNhcmUgcGxhbnMsIGV0Yy4sIGFuZCB0byBoYXJtb25pemUgd2l0aCB3b3JrZmxvdyBwYXR0ZXJucy5cclxuICAgKi9cclxuICBNZWRpY2F0aW9uUmVxdWVzdDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBNZWRpY2F0aW9uU3RhdGVtZW50OiBBIHJlY29yZCBvZiBhIG1lZGljYXRpb24gdGhhdCBpcyBiZWluZyBjb25zdW1lZCBieSBhIHBhdGllbnQuICAgQSBNZWRpY2F0aW9uU3RhdGVtZW50IG1heSBpbmRpY2F0ZSB0aGF0IHRoZSBwYXRpZW50IG1heSBiZSB0YWtpbmcgdGhlIG1lZGljYXRpb24gbm93IG9yIGhhcyB0YWtlbiB0aGUgbWVkaWNhdGlvbiBpbiB0aGUgcGFzdCBvciB3aWxsIGJlIHRha2luZyB0aGUgbWVkaWNhdGlvbiBpbiB0aGUgZnV0dXJlLiAgVGhlIHNvdXJjZSBvZiB0aGlzIGluZm9ybWF0aW9uIGNhbiBiZSB0aGUgcGF0aWVudCwgc2lnbmlmaWNhbnQgb3RoZXIgKHN1Y2ggYXMgYSBmYW1pbHkgbWVtYmVyIG9yIHNwb3VzZSksIG9yIGEgY2xpbmljaWFuLiAgQSBjb21tb24gc2NlbmFyaW8gd2hlcmUgdGhpcyBpbmZvcm1hdGlvbiBpcyBjYXB0dXJlZCBpcyBkdXJpbmcgdGhlIGhpc3RvcnkgdGFraW5nIHByb2Nlc3MgZHVyaW5nIGEgcGF0aWVudCB2aXNpdCBvciBzdGF5LiAgIFRoZSBtZWRpY2F0aW9uIGluZm9ybWF0aW9uIG1heSBjb21lIGZyb20gc291cmNlcyBzdWNoIGFzIHRoZSBwYXRpZW50J3MgbWVtb3J5LCBmcm9tIGEgcHJlc2NyaXB0aW9uIGJvdHRsZSwgIG9yIGZyb20gYSBsaXN0IG9mIG1lZGljYXRpb25zIHRoZSBwYXRpZW50LCBjbGluaWNpYW4gb3Igb3RoZXIgcGFydHkgbWFpbnRhaW5zLiBcclxuICAgKiBUaGUgcHJpbWFyeSBkaWZmZXJlbmNlIGJldHdlZW4gYSBtZWRpY2F0aW9uIHN0YXRlbWVudCBhbmQgYSBtZWRpY2F0aW9uIGFkbWluaXN0cmF0aW9uIGlzIHRoYXQgdGhlIG1lZGljYXRpb24gYWRtaW5pc3RyYXRpb24gaGFzIGNvbXBsZXRlIGFkbWluaXN0cmF0aW9uIGluZm9ybWF0aW9uIGFuZCBpcyBiYXNlZCBvbiBhY3R1YWwgYWRtaW5pc3RyYXRpb24gaW5mb3JtYXRpb24gZnJvbSB0aGUgcGVyc29uIHdobyBhZG1pbmlzdGVyZWQgdGhlIG1lZGljYXRpb24uICBBIG1lZGljYXRpb24gc3RhdGVtZW50IGlzIG9mdGVuLCBpZiBub3QgYWx3YXlzLCBsZXNzIHNwZWNpZmljLiAgVGhlcmUgaXMgbm8gcmVxdWlyZWQgZGF0ZS90aW1lIHdoZW4gdGhlIG1lZGljYXRpb24gd2FzIGFkbWluaXN0ZXJlZCwgaW4gZmFjdCB3ZSBvbmx5IGtub3cgdGhhdCBhIHNvdXJjZSBoYXMgcmVwb3J0ZWQgdGhlIHBhdGllbnQgaXMgdGFraW5nIHRoaXMgbWVkaWNhdGlvbiwgd2hlcmUgZGV0YWlscyBzdWNoIGFzIHRpbWUsIHF1YW50aXR5LCBvciByYXRlIG9yIGV2ZW4gbWVkaWNhdGlvbiBwcm9kdWN0IG1heSBiZSBpbmNvbXBsZXRlIG9yIG1pc3Npbmcgb3IgbGVzcyBwcmVjaXNlLiAgQXMgc3RhdGVkIGVhcmxpZXIsIHRoZSBtZWRpY2F0aW9uIHN0YXRlbWVudCBpbmZvcm1hdGlvbiBtYXkgY29tZSBmcm9tIHRoZSBwYXRpZW50J3MgbWVtb3J5LCBmcm9tIGEgcHJlc2NyaXB0aW9uIGJvdHRsZSBvciBmcm9tIGEgbGlzdCBvZiBtZWRpY2F0aW9ucyB0aGUgcGF0aWVudCwgY2xpbmljaWFuIG9yIG90aGVyIHBhcnR5IG1haW50YWlucy4gIE1lZGljYXRpb24gYWRtaW5pc3RyYXRpb24gaXMgbW9yZSBmb3JtYWwgYW5kIGlzIG5vdCBtaXNzaW5nIGRldGFpbGVkIGluZm9ybWF0aW9uLlxyXG4gICAqL1xyXG4gIE1lZGljYXRpb25TdGF0ZW1lbnQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogTWVkaWNpbmFsUHJvZHVjdERlZmluaXRpb246IERldGFpbGVkIGRlZmluaXRpb24gb2YgYSBtZWRpY2luYWwgcHJvZHVjdCwgdHlwaWNhbGx5IGZvciB1c2VzIG90aGVyIHRoYW4gZGlyZWN0IHBhdGllbnQgY2FyZSAoZS5nLiByZWd1bGF0b3J5IHVzZSwgZHJ1ZyBjYXRhbG9ncywgdG8gc3VwcG9ydCBwcmVzY3JpYmluZywgYWR2ZXJzZSBldmVudHMgbWFuYWdlbWVudCBldGMuKS5cclxuICAgKi9cclxuICBNZWRpY2luYWxQcm9kdWN0RGVmaW5pdGlvbjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBNZXNzYWdlRGVmaW5pdGlvbjogRGVmaW5lcyB0aGUgY2hhcmFjdGVyaXN0aWNzIG9mIGEgbWVzc2FnZSB0aGF0IGNhbiBiZSBzaGFyZWQgYmV0d2VlbiBzeXN0ZW1zLCBpbmNsdWRpbmcgdGhlIHR5cGUgb2YgZXZlbnQgdGhhdCBpbml0aWF0ZXMgdGhlIG1lc3NhZ2UsIHRoZSBjb250ZW50IHRvIGJlIHRyYW5zbWl0dGVkIGFuZCB3aGF0IHJlc3BvbnNlKHMpLCBpZiBhbnksIGFyZSBwZXJtaXR0ZWQuXHJcbiAgICovXHJcbiAgTWVzc2FnZURlZmluaXRpb246IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogTWVzc2FnZUhlYWRlcjogVGhlIGhlYWRlciBmb3IgYSBtZXNzYWdlIGV4Y2hhbmdlIHRoYXQgaXMgZWl0aGVyIHJlcXVlc3Rpbmcgb3IgcmVzcG9uZGluZyB0byBhbiBhY3Rpb24uICBUaGUgcmVmZXJlbmNlKHMpIHRoYXQgYXJlIHRoZSBzdWJqZWN0IG9mIHRoZSBhY3Rpb24gYXMgd2VsbCBhcyBvdGhlciBpbmZvcm1hdGlvbiByZWxhdGVkIHRvIHRoZSBhY3Rpb24gYXJlIHR5cGljYWxseSB0cmFuc21pdHRlZCBpbiBhIGJ1bmRsZSBpbiB3aGljaCB0aGUgTWVzc2FnZUhlYWRlciByZXNvdXJjZSBpbnN0YW5jZSBpcyB0aGUgZmlyc3QgcmVzb3VyY2UgaW4gdGhlIGJ1bmRsZS5cclxuICAgKi9cclxuICBNZXNzYWdlSGVhZGVyOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIE1vbGVjdWxhclNlcXVlbmNlOiBSYXcgZGF0YSBkZXNjcmliaW5nIGEgYmlvbG9naWNhbCBzZXF1ZW5jZS5cclxuICAgKi9cclxuICBNb2xlY3VsYXJTZXF1ZW5jZTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBOYW1pbmdTeXN0ZW06IEEgY3VyYXRlZCBuYW1lc3BhY2UgdGhhdCBpc3N1ZXMgdW5pcXVlIHN5bWJvbHMgd2l0aGluIHRoYXQgbmFtZXNwYWNlIGZvciB0aGUgaWRlbnRpZmljYXRpb24gb2YgY29uY2VwdHMsIHBlb3BsZSwgZGV2aWNlcywgZXRjLiAgUmVwcmVzZW50cyBhIFwiU3lzdGVtXCIgdXNlZCB3aXRoaW4gdGhlIElkZW50aWZpZXIgYW5kIENvZGluZyBkYXRhIHR5cGVzLlxyXG4gICAqL1xyXG4gIE5hbWluZ1N5c3RlbTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBOdXRyaXRpb25PcmRlcjogQSByZXF1ZXN0IHRvIHN1cHBseSBhIGRpZXQsIGZvcm11bGEgZmVlZGluZyAoZW50ZXJhbCkgb3Igb3JhbCBudXRyaXRpb25hbCBzdXBwbGVtZW50IHRvIGEgcGF0aWVudC9yZXNpZGVudC5cclxuICAgKi9cclxuICBOdXRyaXRpb25PcmRlcjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBOdXRyaXRpb25Qcm9kdWN0OiBBIGZvb2Qgb3IgZmx1aWQgcHJvZHVjdCB0aGF0IGlzIGNvbnN1bWVkIGJ5IHBhdGllbnRzLlxyXG4gICAqL1xyXG4gIE51dHJpdGlvblByb2R1Y3Q6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogT2JzZXJ2YXRpb246IE1lYXN1cmVtZW50cyBhbmQgc2ltcGxlIGFzc2VydGlvbnMgbWFkZSBhYm91dCBhIHBhdGllbnQsIGRldmljZSBvciBvdGhlciBzdWJqZWN0LlxyXG4gICAqL1xyXG4gIE9ic2VydmF0aW9uOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIE9ic2VydmF0aW9uRGVmaW5pdGlvbjogU2V0IG9mIGRlZmluaXRpb25hbCBjaGFyYWN0ZXJpc3RpY3MgZm9yIGEga2luZCBvZiBvYnNlcnZhdGlvbiBvciBtZWFzdXJlbWVudCBwcm9kdWNlZCBvciBjb25zdW1lZCBieSBhbiBvcmRlcmFibGUgaGVhbHRoIGNhcmUgc2VydmljZS5cclxuICAgKi9cclxuICBPYnNlcnZhdGlvbkRlZmluaXRpb246IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogT3BlcmF0aW9uRGVmaW5pdGlvbjogQSBmb3JtYWwgY29tcHV0YWJsZSBkZWZpbml0aW9uIG9mIGFuIG9wZXJhdGlvbiAob24gdGhlIFJFU1RmdWwgaW50ZXJmYWNlKSBvciBhIG5hbWVkIHF1ZXJ5ICh1c2luZyB0aGUgc2VhcmNoIGludGVyYWN0aW9uKS5cclxuICAgKi9cclxuICBPcGVyYXRpb25EZWZpbml0aW9uOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIE9wZXJhdGlvbk91dGNvbWU6IEEgY29sbGVjdGlvbiBvZiBlcnJvciwgd2FybmluZywgb3IgaW5mb3JtYXRpb24gbWVzc2FnZXMgdGhhdCByZXN1bHQgZnJvbSBhIHN5c3RlbSBhY3Rpb24uXHJcbiAgICovXHJcbiAgT3BlcmF0aW9uT3V0Y29tZTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBPcmdhbml6YXRpb246IEEgZm9ybWFsbHkgb3IgaW5mb3JtYWxseSByZWNvZ25pemVkIGdyb3VwaW5nIG9mIHBlb3BsZSBvciBvcmdhbml6YXRpb25zIGZvcm1lZCBmb3IgdGhlIHB1cnBvc2Ugb2YgYWNoaWV2aW5nIHNvbWUgZm9ybSBvZiBjb2xsZWN0aXZlIGFjdGlvbi4gIEluY2x1ZGVzIGNvbXBhbmllcywgaW5zdGl0dXRpb25zLCBjb3Jwb3JhdGlvbnMsIGRlcGFydG1lbnRzLCBjb21tdW5pdHkgZ3JvdXBzLCBoZWFsdGhjYXJlIHByYWN0aWNlIGdyb3VwcywgcGF5ZXIvaW5zdXJlciwgZXRjLlxyXG4gICAqL1xyXG4gIE9yZ2FuaXphdGlvbjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBPcmdhbml6YXRpb25BZmZpbGlhdGlvbjogRGVmaW5lcyBhbiBhZmZpbGlhdGlvbi9hc3NvdGlhdGlvbi9yZWxhdGlvbnNoaXAgYmV0d2VlbiAyIGRpc3RpbmN0IG9nYW5pemF0aW9ucywgdGhhdCBpcyBub3QgYSBwYXJ0LW9mIHJlbGF0aW9uc2hpcC9zdWItZGl2aXNpb24gcmVsYXRpb25zaGlwLlxyXG4gICAqL1xyXG4gIE9yZ2FuaXphdGlvbkFmZmlsaWF0aW9uOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIFBhY2thZ2VkUHJvZHVjdERlZmluaXRpb246IEEgbWVkaWNhbGx5IHJlbGF0ZWQgaXRlbSBvciBpdGVtcywgaW4gYSBjb250YWluZXIgb3IgcGFja2FnZS5cclxuICAgKi9cclxuICBQYWNrYWdlZFByb2R1Y3REZWZpbml0aW9uOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIFBhcmFtZXRlcnM6IFRoaXMgcmVzb3VyY2UgaXMgYSBub24tcGVyc2lzdGVkIHJlc291cmNlIHVzZWQgdG8gcGFzcyBpbmZvcm1hdGlvbiBpbnRvIGFuZCBiYWNrIGZyb20gYW4gW29wZXJhdGlvbl0ob3BlcmF0aW9ucy5odG1sKS4gSXQgaGFzIG5vIG90aGVyIHVzZSwgYW5kIHRoZXJlIGlzIG5vIFJFU1RmdWwgZW5kcG9pbnQgYXNzb2NpYXRlZCB3aXRoIGl0LlxyXG4gICAqL1xyXG4gIFBhcmFtZXRlcnM6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogUGF0aWVudDogRGVtb2dyYXBoaWNzIGFuZCBvdGhlciBhZG1pbmlzdHJhdGl2ZSBpbmZvcm1hdGlvbiBhYm91dCBhbiBpbmRpdmlkdWFsIG9yIGFuaW1hbCByZWNlaXZpbmcgY2FyZSBvciBvdGhlciBoZWFsdGgtcmVsYXRlZCBzZXJ2aWNlcy5cclxuICAgKi9cclxuICBQYXRpZW50OiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIFBheW1lbnROb3RpY2U6IFRoaXMgcmVzb3VyY2UgcHJvdmlkZXMgdGhlIHN0YXR1cyBvZiB0aGUgcGF5bWVudCBmb3IgZ29vZHMgYW5kIHNlcnZpY2VzIHJlbmRlcmVkLCBhbmQgdGhlIHJlcXVlc3QgYW5kIHJlc3BvbnNlIHJlc291cmNlIHJlZmVyZW5jZXMuXHJcbiAgICovXHJcbiAgUGF5bWVudE5vdGljZTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBQYXltZW50UmVjb25jaWxpYXRpb246IFRoaXMgcmVzb3VyY2UgcHJvdmlkZXMgdGhlIGRldGFpbHMgaW5jbHVkaW5nIGFtb3VudCBvZiBhIHBheW1lbnQgYW5kIGFsbG9jYXRlcyB0aGUgcGF5bWVudCBpdGVtcyBiZWluZyBwYWlkLlxyXG4gICAqL1xyXG4gIFBheW1lbnRSZWNvbmNpbGlhdGlvbjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBQZXJzb246IERlbW9ncmFwaGljcyBhbmQgYWRtaW5pc3RyYXRpdmUgaW5mb3JtYXRpb24gYWJvdXQgYSBwZXJzb24gaW5kZXBlbmRlbnQgb2YgYSBzcGVjaWZpYyBoZWFsdGgtcmVsYXRlZCBjb250ZXh0LlxyXG4gICAqL1xyXG4gIFBlcnNvbjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBQbGFuRGVmaW5pdGlvbjogVGhpcyByZXNvdXJjZSBhbGxvd3MgZm9yIHRoZSBkZWZpbml0aW9uIG9mIHZhcmlvdXMgdHlwZXMgb2YgcGxhbnMgYXMgYSBzaGFyYWJsZSwgY29uc3VtYWJsZSwgYW5kIGV4ZWN1dGFibGUgYXJ0aWZhY3QuIFRoZSByZXNvdXJjZSBpcyBnZW5lcmFsIGVub3VnaCB0byBzdXBwb3J0IHRoZSBkZXNjcmlwdGlvbiBvZiBhIGJyb2FkIHJhbmdlIG9mIGNsaW5pY2FsIGFuZCBub24tY2xpbmljYWwgYXJ0aWZhY3RzIHN1Y2ggYXMgY2xpbmljYWwgZGVjaXNpb24gc3VwcG9ydCBydWxlcywgb3JkZXIgc2V0cywgcHJvdG9jb2xzLCBhbmQgZHJ1ZyBxdWFsaXR5IHNwZWNpZmljYXRpb25zLlxyXG4gICAqL1xyXG4gIFBsYW5EZWZpbml0aW9uOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIFByYWN0aXRpb25lcjogQSBwZXJzb24gd2hvIGlzIGRpcmVjdGx5IG9yIGluZGlyZWN0bHkgaW52b2x2ZWQgaW4gdGhlIHByb3Zpc2lvbmluZyBvZiBoZWFsdGhjYXJlLlxyXG4gICAqL1xyXG4gIFByYWN0aXRpb25lcjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBQcmFjdGl0aW9uZXJSb2xlOiBBIHNwZWNpZmljIHNldCBvZiBSb2xlcy9Mb2NhdGlvbnMvc3BlY2lhbHRpZXMvc2VydmljZXMgdGhhdCBhIHByYWN0aXRpb25lciBtYXkgcGVyZm9ybSBhdCBhbiBvcmdhbml6YXRpb24gZm9yIGEgcGVyaW9kIG9mIHRpbWUuXHJcbiAgICovXHJcbiAgUHJhY3RpdGlvbmVyUm9sZTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBQcm9jZWR1cmU6IEFuIGFjdGlvbiB0aGF0IGlzIG9yIHdhcyBwZXJmb3JtZWQgb24gb3IgZm9yIGEgcGF0aWVudC4gVGhpcyBjYW4gYmUgYSBwaHlzaWNhbCBpbnRlcnZlbnRpb24gbGlrZSBhbiBvcGVyYXRpb24sIG9yIGxlc3MgaW52YXNpdmUgbGlrZSBsb25nIHRlcm0gc2VydmljZXMsIGNvdW5zZWxpbmcsIG9yIGh5cG5vdGhlcmFweS5cclxuICAgKi9cclxuICBQcm9jZWR1cmU6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogUHJvdmVuYW5jZTogUHJvdmVuYW5jZSBvZiBhIHJlc291cmNlIGlzIGEgcmVjb3JkIHRoYXQgZGVzY3JpYmVzIGVudGl0aWVzIGFuZCBwcm9jZXNzZXMgaW52b2x2ZWQgaW4gcHJvZHVjaW5nIGFuZCBkZWxpdmVyaW5nIG9yIG90aGVyd2lzZSBpbmZsdWVuY2luZyB0aGF0IHJlc291cmNlLiBQcm92ZW5hbmNlIHByb3ZpZGVzIGEgY3JpdGljYWwgZm91bmRhdGlvbiBmb3IgYXNzZXNzaW5nIGF1dGhlbnRpY2l0eSwgZW5hYmxpbmcgdHJ1c3QsIGFuZCBhbGxvd2luZyByZXByb2R1Y2liaWxpdHkuIFByb3ZlbmFuY2UgYXNzZXJ0aW9ucyBhcmUgYSBmb3JtIG9mIGNvbnRleHR1YWwgbWV0YWRhdGEgYW5kIGNhbiB0aGVtc2VsdmVzIGJlY29tZSBpbXBvcnRhbnQgcmVjb3JkcyB3aXRoIHRoZWlyIG93biBwcm92ZW5hbmNlLiBQcm92ZW5hbmNlIHN0YXRlbWVudCBpbmRpY2F0ZXMgY2xpbmljYWwgc2lnbmlmaWNhbmNlIGluIHRlcm1zIG9mIGNvbmZpZGVuY2UgaW4gYXV0aGVudGljaXR5LCByZWxpYWJpbGl0eSwgYW5kIHRydXN0d29ydGhpbmVzcywgaW50ZWdyaXR5LCBhbmQgc3RhZ2UgaW4gbGlmZWN5Y2xlIChlLmcuIERvY3VtZW50IENvbXBsZXRpb24gLSBoYXMgdGhlIGFydGlmYWN0IGJlZW4gbGVnYWxseSBhdXRoZW50aWNhdGVkKSwgYWxsIG9mIHdoaWNoIG1heSBpbXBhY3Qgc2VjdXJpdHksIHByaXZhY3ksIGFuZCB0cnVzdCBwb2xpY2llcy5cclxuICAgKi9cclxuICBQcm92ZW5hbmNlOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIFF1ZXN0aW9ubmFpcmU6IEEgc3RydWN0dXJlZCBzZXQgb2YgcXVlc3Rpb25zIGludGVuZGVkIHRvIGd1aWRlIHRoZSBjb2xsZWN0aW9uIG9mIGFuc3dlcnMgZnJvbSBlbmQtdXNlcnMuIFF1ZXN0aW9ubmFpcmVzIHByb3ZpZGUgZGV0YWlsZWQgY29udHJvbCBvdmVyIG9yZGVyLCBwcmVzZW50YXRpb24sIHBocmFzZW9sb2d5IGFuZCBncm91cGluZyB0byBhbGxvdyBjb2hlcmVudCwgY29uc2lzdGVudCBkYXRhIGNvbGxlY3Rpb24uXHJcbiAgICovXHJcbiAgUXVlc3Rpb25uYWlyZTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBRdWVzdGlvbm5haXJlUmVzcG9uc2U6IEEgc3RydWN0dXJlZCBzZXQgb2YgcXVlc3Rpb25zIGFuZCB0aGVpciBhbnN3ZXJzLiBUaGUgcXVlc3Rpb25zIGFyZSBvcmRlcmVkIGFuZCBncm91cGVkIGludG8gY29oZXJlbnQgc3Vic2V0cywgY29ycmVzcG9uZGluZyB0byB0aGUgc3RydWN0dXJlIG9mIHRoZSBncm91cGluZyBvZiB0aGUgcXVlc3Rpb25uYWlyZSBiZWluZyByZXNwb25kZWQgdG8uXHJcbiAgICovXHJcbiAgUXVlc3Rpb25uYWlyZVJlc3BvbnNlOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIFJlZ3VsYXRlZEF1dGhvcml6YXRpb246IFJlZ3VsYXRvcnkgYXBwcm92YWwsIGNsZWFyYW5jZSBvciBsaWNlbmNpbmcgcmVsYXRlZCB0byBhIHJlZ3VsYXRlZCBwcm9kdWN0LCB0cmVhdG1lbnQsIGZhY2lsaXR5IG9yIGFjdGl2aXR5IHRoYXQgaXMgY2l0ZWQgaW4gYSBndWlkYW5jZSwgcmVndWxhdGlvbiwgcnVsZSBvciBsZWdpc2xhdGl2ZSBhY3QuIEFuIGV4YW1wbGUgaXMgTWFya2V0IEF1dGhvcml6YXRpb24gcmVsYXRpbmcgdG8gYSBNZWRpY2luYWwgUHJvZHVjdC5cclxuICAgKi9cclxuICBSZWd1bGF0ZWRBdXRob3JpemF0aW9uOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIFJlbGF0ZWRQZXJzb246IEluZm9ybWF0aW9uIGFib3V0IGEgcGVyc29uIHRoYXQgaXMgaW52b2x2ZWQgaW4gdGhlIGNhcmUgZm9yIGEgcGF0aWVudCwgYnV0IHdobyBpcyBub3QgdGhlIHRhcmdldCBvZiBoZWFsdGhjYXJlLCBub3IgaGFzIGEgZm9ybWFsIHJlc3BvbnNpYmlsaXR5IGluIHRoZSBjYXJlIHByb2Nlc3MuXHJcbiAgICovXHJcbiAgUmVsYXRlZFBlcnNvbjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBSZXF1ZXN0R3JvdXA6IEEgZ3JvdXAgb2YgcmVsYXRlZCByZXF1ZXN0cyB0aGF0IGNhbiBiZSB1c2VkIHRvIGNhcHR1cmUgaW50ZW5kZWQgYWN0aXZpdGllcyB0aGF0IGhhdmUgaW50ZXItZGVwZW5kZW5jaWVzIHN1Y2ggYXMgXCJnaXZlIHRoaXMgbWVkaWNhdGlvbiBhZnRlciB0aGF0IG9uZVwiLlxyXG4gICAqL1xyXG4gIFJlcXVlc3RHcm91cDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBSZXNlYXJjaERlZmluaXRpb246IFRoZSBSZXNlYXJjaERlZmluaXRpb24gcmVzb3VyY2UgZGVzY3JpYmVzIHRoZSBjb25kaXRpb25hbCBzdGF0ZSAocG9wdWxhdGlvbiBhbmQgYW55IGV4cG9zdXJlcyBiZWluZyBjb21wYXJlZCB3aXRoaW4gdGhlIHBvcHVsYXRpb24pIGFuZCBvdXRjb21lIChpZiBzcGVjaWZpZWQpIHRoYXQgdGhlIGtub3dsZWRnZSAoZXZpZGVuY2UsIGFzc2VydGlvbiwgcmVjb21tZW5kYXRpb24pIGlzIGFib3V0LlxyXG4gICAqL1xyXG4gIFJlc2VhcmNoRGVmaW5pdGlvbjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBSZXNlYXJjaEVsZW1lbnREZWZpbml0aW9uOiBUaGUgUmVzZWFyY2hFbGVtZW50RGVmaW5pdGlvbiByZXNvdXJjZSBkZXNjcmliZXMgYSBcIlBJQ09cIiBlbGVtZW50IHRoYXQga25vd2xlZGdlIChldmlkZW5jZSwgYXNzZXJ0aW9uLCByZWNvbW1lbmRhdGlvbikgaXMgYWJvdXQuXHJcbiAgICovXHJcbiAgUmVzZWFyY2hFbGVtZW50RGVmaW5pdGlvbjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBSZXNlYXJjaFN0dWR5OiBBIHByb2Nlc3Mgd2hlcmUgYSByZXNlYXJjaGVyIG9yIG9yZ2FuaXphdGlvbiBwbGFucyBhbmQgdGhlbiBleGVjdXRlcyBhIHNlcmllcyBvZiBzdGVwcyBpbnRlbmRlZCB0byBpbmNyZWFzZSB0aGUgZmllbGQgb2YgaGVhbHRoY2FyZS1yZWxhdGVkIGtub3dsZWRnZS4gIFRoaXMgaW5jbHVkZXMgc3R1ZGllcyBvZiBzYWZldHksIGVmZmljYWN5LCBjb21wYXJhdGl2ZSBlZmZlY3RpdmVuZXNzIGFuZCBvdGhlciBpbmZvcm1hdGlvbiBhYm91dCBtZWRpY2F0aW9ucywgZGV2aWNlcywgdGhlcmFwaWVzIGFuZCBvdGhlciBpbnRlcnZlbnRpb25hbCBhbmQgaW52ZXN0aWdhdGl2ZSB0ZWNobmlxdWVzLiAgQSBSZXNlYXJjaFN0dWR5IGludm9sdmVzIHRoZSBnYXRoZXJpbmcgb2YgaW5mb3JtYXRpb24gYWJvdXQgaHVtYW4gb3IgYW5pbWFsIHN1YmplY3RzLlxyXG4gICAqL1xyXG4gIFJlc2VhcmNoU3R1ZHk6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogUmVzZWFyY2hTdWJqZWN0OiBBIHBoeXNpY2FsIGVudGl0eSB3aGljaCBpcyB0aGUgcHJpbWFyeSB1bml0IG9mIG9wZXJhdGlvbmFsIGFuZC9vciBhZG1pbmlzdHJhdGl2ZSBpbnRlcmVzdCBpbiBhIHN0dWR5LlxyXG4gICAqL1xyXG4gIFJlc2VhcmNoU3ViamVjdDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBSZXNvdXJjZTogLS0tIEFic3RyYWN0IFR5cGUhIC0tLVRoaXMgaXMgdGhlIGJhc2UgcmVzb3VyY2UgdHlwZSBmb3IgZXZlcnl0aGluZy5cclxuICAgKi9cclxuICBSZXNvdXJjZTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBSaXNrQXNzZXNzbWVudDogQW4gYXNzZXNzbWVudCBvZiB0aGUgbGlrZWx5IG91dGNvbWUocykgZm9yIGEgcGF0aWVudCBvciBvdGhlciBzdWJqZWN0IGFzIHdlbGwgYXMgdGhlIGxpa2VsaWhvb2Qgb2YgZWFjaCBvdXRjb21lLlxyXG4gICAqL1xyXG4gIFJpc2tBc3Nlc3NtZW50OiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIFNjaGVkdWxlOiBBIGNvbnRhaW5lciBmb3Igc2xvdHMgb2YgdGltZSB0aGF0IG1heSBiZSBhdmFpbGFibGUgZm9yIGJvb2tpbmcgYXBwb2ludG1lbnRzLlxyXG4gICAqL1xyXG4gIFNjaGVkdWxlOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIFNlYXJjaFBhcmFtZXRlcjogQSBzZWFyY2ggcGFyYW1ldGVyIHRoYXQgZGVmaW5lcyBhIG5hbWVkIHNlYXJjaCBpdGVtIHRoYXQgY2FuIGJlIHVzZWQgdG8gc2VhcmNoL2ZpbHRlciBvbiBhIHJlc291cmNlLlxyXG4gICAqL1xyXG4gIFNlYXJjaFBhcmFtZXRlcjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBTZXJ2aWNlUmVxdWVzdDogQSByZWNvcmQgb2YgYSByZXF1ZXN0IGZvciBzZXJ2aWNlIHN1Y2ggYXMgZGlhZ25vc3RpYyBpbnZlc3RpZ2F0aW9ucywgdHJlYXRtZW50cywgb3Igb3BlcmF0aW9ucyB0byBiZSBwZXJmb3JtZWQuXHJcbiAgICovXHJcbiAgU2VydmljZVJlcXVlc3Q6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogU2xvdDogQSBzbG90IG9mIHRpbWUgb24gYSBzY2hlZHVsZSB0aGF0IG1heSBiZSBhdmFpbGFibGUgZm9yIGJvb2tpbmcgYXBwb2ludG1lbnRzLlxyXG4gICAqL1xyXG4gIFNsb3Q6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogU3BlY2ltZW46IEEgc2FtcGxlIHRvIGJlIHVzZWQgZm9yIGFuYWx5c2lzLlxyXG4gICAqL1xyXG4gIFNwZWNpbWVuOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIFNwZWNpbWVuRGVmaW5pdGlvbjogQSBraW5kIG9mIHNwZWNpbWVuIHdpdGggYXNzb2NpYXRlZCBzZXQgb2YgcmVxdWlyZW1lbnRzLlxyXG4gICAqL1xyXG4gIFNwZWNpbWVuRGVmaW5pdGlvbjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBTdHJ1Y3R1cmVEZWZpbml0aW9uOiBBIGRlZmluaXRpb24gb2YgYSBGSElSIHN0cnVjdHVyZS4gVGhpcyByZXNvdXJjZSBpcyB1c2VkIHRvIGRlc2NyaWJlIHRoZSB1bmRlcmx5aW5nIHJlc291cmNlcywgZGF0YSB0eXBlcyBkZWZpbmVkIGluIEZISVIsIGFuZCBhbHNvIGZvciBkZXNjcmliaW5nIGV4dGVuc2lvbnMgYW5kIGNvbnN0cmFpbnRzIG9uIHJlc291cmNlcyBhbmQgZGF0YSB0eXBlcy5cclxuICAgKi9cclxuICBTdHJ1Y3R1cmVEZWZpbml0aW9uOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIFN0cnVjdHVyZU1hcDogQSBNYXAgb2YgcmVsYXRpb25zaGlwcyBiZXR3ZWVuIDIgc3RydWN0dXJlcyB0aGF0IGNhbiBiZSB1c2VkIHRvIHRyYW5zZm9ybSBkYXRhLlxyXG4gICAqL1xyXG4gIFN0cnVjdHVyZU1hcDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBTdWJzY3JpcHRpb246IFRoZSBzdWJzY3JpcHRpb24gcmVzb3VyY2UgaXMgdXNlZCB0byBkZWZpbmUgYSBwdXNoLWJhc2VkIHN1YnNjcmlwdGlvbiBmcm9tIGEgc2VydmVyIHRvIGFub3RoZXIgc3lzdGVtLiBPbmNlIGEgc3Vic2NyaXB0aW9uIGlzIHJlZ2lzdGVyZWQgd2l0aCB0aGUgc2VydmVyLCB0aGUgc2VydmVyIGNoZWNrcyBldmVyeSByZXNvdXJjZSB0aGF0IGlzIGNyZWF0ZWQgb3IgdXBkYXRlZCwgYW5kIGlmIHRoZSByZXNvdXJjZSBtYXRjaGVzIHRoZSBnaXZlbiBjcml0ZXJpYSwgaXQgc2VuZHMgYSBtZXNzYWdlIG9uIHRoZSBkZWZpbmVkIFwiY2hhbm5lbFwiIHNvIHRoYXQgYW5vdGhlciBzeXN0ZW0gY2FuIHRha2UgYW4gYXBwcm9wcmlhdGUgYWN0aW9uLlxyXG4gICAqL1xyXG4gIFN1YnNjcmlwdGlvbjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBTdWJzY3JpcHRpb25TdGF0dXM6IFRoZSBTdWJzY3JpcHRpb25TdGF0dXMgcmVzb3VyY2UgZGVzY3JpYmVzIHRoZSBzdGF0ZSBvZiBhIFN1YnNjcmlwdGlvbiBkdXJpbmcgbm90aWZpY2F0aW9ucy5cclxuICAgKi9cclxuICBTdWJzY3JpcHRpb25TdGF0dXM6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogU3Vic2NyaXB0aW9uVG9waWM6IERlc2NyaWJlcyBhIHN0cmVhbSBvZiByZXNvdXJjZSBzdGF0ZSBjaGFuZ2VzIGlkZW50aWZpZWQgYnkgdHJpZ2dlciBjcml0ZXJpYSBhbmQgYW5ub3RhdGVkIHdpdGggbGFiZWxzIHVzZWZ1bCB0byBmaWx0ZXIgcHJvamVjdGlvbnMgZnJvbSB0aGlzIHRvcGljLlxyXG4gICAqL1xyXG4gIFN1YnNjcmlwdGlvblRvcGljOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIFN1YnN0YW5jZTogQSBob21vZ2VuZW91cyBtYXRlcmlhbCB3aXRoIGEgZGVmaW5pdGUgY29tcG9zaXRpb24uXHJcbiAgICovXHJcbiAgU3Vic3RhbmNlOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIFN1YnN0YW5jZURlZmluaXRpb246IFRoZSBkZXRhaWxlZCBkZXNjcmlwdGlvbiBvZiBhIHN1YnN0YW5jZSwgdHlwaWNhbGx5IGF0IGEgbGV2ZWwgYmV5b25kIHdoYXQgaXMgdXNlZCBmb3IgcHJlc2NyaWJpbmcuXHJcbiAgICovXHJcbiAgU3Vic3RhbmNlRGVmaW5pdGlvbjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBTdXBwbHlEZWxpdmVyeTogUmVjb3JkIG9mIGRlbGl2ZXJ5IG9mIHdoYXQgaXMgc3VwcGxpZWQuXHJcbiAgICovXHJcbiAgU3VwcGx5RGVsaXZlcnk6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogU3VwcGx5UmVxdWVzdDogQSByZWNvcmQgb2YgYSByZXF1ZXN0IGZvciBhIG1lZGljYXRpb24sIHN1YnN0YW5jZSBvciBkZXZpY2UgdXNlZCBpbiB0aGUgaGVhbHRoY2FyZSBzZXR0aW5nLlxyXG4gICAqL1xyXG4gIFN1cHBseVJlcXVlc3Q6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogVGFzazogQSB0YXNrIHRvIGJlIHBlcmZvcm1lZC5cclxuICAgKi9cclxuICBUYXNrOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIFRlcm1pbm9sb2d5Q2FwYWJpbGl0aWVzOiBBIFRlcm1pbm9sb2d5Q2FwYWJpbGl0aWVzIHJlc291cmNlIGRvY3VtZW50cyBhIHNldCBvZiBjYXBhYmlsaXRpZXMgKGJlaGF2aW9ycykgb2YgYSBGSElSIFRlcm1pbm9sb2d5IFNlcnZlciB0aGF0IG1heSBiZSB1c2VkIGFzIGEgc3RhdGVtZW50IG9mIGFjdHVhbCBzZXJ2ZXIgZnVuY3Rpb25hbGl0eSBvciBhIHN0YXRlbWVudCBvZiByZXF1aXJlZCBvciBkZXNpcmVkIHNlcnZlciBpbXBsZW1lbnRhdGlvbi5cclxuICAgKi9cclxuICBUZXJtaW5vbG9neUNhcGFiaWxpdGllczogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBUZXN0UmVwb3J0OiBBIHN1bW1hcnkgb2YgaW5mb3JtYXRpb24gYmFzZWQgb24gdGhlIHJlc3VsdHMgb2YgZXhlY3V0aW5nIGEgVGVzdFNjcmlwdC5cclxuICAgKi9cclxuICBUZXN0UmVwb3J0OiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIFRlc3RTY3JpcHQ6IEEgc3RydWN0dXJlZCBzZXQgb2YgdGVzdHMgYWdhaW5zdCBhIEZISVIgc2VydmVyIG9yIGNsaWVudCBpbXBsZW1lbnRhdGlvbiB0byBkZXRlcm1pbmUgY29tcGxpYW5jZSBhZ2FpbnN0IHRoZSBGSElSIHNwZWNpZmljYXRpb24uXHJcbiAgICovXHJcbiAgVGVzdFNjcmlwdDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aGw3LW9yZzpzZHdnOmNjZGEtbm9uWE1MQm9keToxLjFcclxuICAgKi9cclxuICBGb3JEb2N1bWVudHNGb2xsb3dpbmdDQ0RBMTFDb25zdHJhaW50c1VzaW5nQU5vblN0cnVjdHVyZWRCb2R5OiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IHVybjpobDctb3JnOnNkd2c6Y2NkYS1ub25YTUxCb2R5OjIuMVxyXG4gICAqL1xyXG4gIEZvckRvY3VtZW50c0ZvbGxvd2luZ0NDREEyMUNvbnN0cmFpbnRzVXNpbmdBTm9uU3RydWN0dXJlZEJvZHk6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogdXJuOmhsNy1vcmc6c2R3ZzpjY2RhLXN0cnVjdHVyZWRCb2R5OjEuMVxyXG4gICAqL1xyXG4gIEZvckRvY3VtZW50c0ZvbGxvd2luZ0NDREExMUNvbnN0cmFpbnRzVXNpbmdBU3RydWN0dXJlZEJvZHk6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogdXJuOmhsNy1vcmc6c2R3ZzpjY2RhLXN0cnVjdHVyZWRCb2R5OjIuMVxyXG4gICAqL1xyXG4gIEZvckRvY3VtZW50c0ZvbGxvd2luZ0NDREEyMUNvbnN0cmFpbnRzVXNpbmdBU3RydWN0dXJlZEJvZHk6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogdXJuOmloZTpjYXJkOkNSQzoyMDEyXHJcbiAgICovXHJcbiAgQ2FyZGlvbG9neUNSQzogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aWhlOmNhcmQ6RVBSQy1JRToyMDE0XHJcbiAgICovXHJcbiAgQ2FyZGlvbG9neUVQUkNJRTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aWhlOmNhcmQ6aW1hZ2luZzoyMDExXHJcbiAgICovXHJcbiAgQ2FyZGlhY0ltYWdpbmdSZXBvcnQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogdXJuOmloZTpkZW50OkNEQTpJbWFnaW5nUmVwb3J0U3RydWN0dXJlZEhlYWRpbmdzOjIwMTNcclxuICAgKi9cclxuICBEZW50YWxDREE6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogdXJuOmloZTpkZW50OlBERlxyXG4gICAqL1xyXG4gIERlbnRhbFBERjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aWhlOmRlbnQ6VEVYVFxyXG4gICAqL1xyXG4gIERlbnRhbFRleHQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogdXJuOmloZTppdGk6YXBwYzoyMDE2OmNvbnNlbnRcclxuICAgKi9cclxuICBBZHZhbmNlZFBhdGllbnRQcml2YWN5Q29uc2VudHM6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogdXJuOmloZTppdGk6YnBwYy1zZDoyMDA3XHJcbiAgICovXHJcbiAgQmFzaWNQYXRpZW50UHJpdmFjeUNvbnNlbnRzV2l0aFNjYW5uZWREb2N1bWVudDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aWhlOml0aTpicHBjOjIwMDdcclxuICAgKi9cclxuICBCYXNpY1BhdGllbnRQcml2YWN5Q29uc2VudHM6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogdXJuOmloZTppdGk6ZHNnOmRldGFjaGVkOjIwMTRcclxuICAgKi9cclxuICBEU0dEZXRhY2hlZERvY3VtZW50OiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IHVybjppaGU6aXRpOmRzZzplbnZlbG9waW5nOjIwMTRcclxuICAgKi9cclxuICBEU0dFbnZlbG9waW5nRG9jdW1lbnQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogdXJuOmloZTppdGk6eGRzLXNkOnBkZjoyMDA4XHJcbiAgICovXHJcbiAgUERGRW1iZWRkZWRJbkNEQVBlclhEU1NEUHJvZmlsZTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aWhlOml0aTp4ZHMtc2Q6dGV4dDoyMDA4XHJcbiAgICovXHJcbiAgVGV4dEVtYmVkZGVkSW5DREFQZXJYRFNTRFByb2ZpbGU6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogdXJuOmloZTppdGk6eGRzOjIwMTc6bWltZVR5cGVTdWZmaWNpZW50XHJcbiAgICovXHJcbiAgTWltZVR5cGVTdWZmaWNpZW50OiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IHVybjppaGU6aXRpOnhkdzoyMDExOndvcmtmbG93RG9jXHJcbiAgICovXHJcbiAgWERXV29ya2Zsb3dEb2N1bWVudDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aWhlOmxhYjp4ZC1sYWI6MjAwOFxyXG4gICAqL1xyXG4gIENEQUxhYm9yYXRvcnlSZXBvcnQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogdXJuOmloZTpwYXQ6YXBzcjphbGw6MjAxMFxyXG4gICAqL1xyXG4gIEFuYXRvbWljUGF0aG9sb2d5U3RydWN0dXJlZFJlcG9ydEFsbDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aWhlOnBhdDphcHNyOmNhbmNlcjphbGw6MjAxMFxyXG4gICAqL1xyXG4gIEFuYXRvbWljUGF0aG9sb2d5U3RydWN0dXJlZFJlcG9ydENhbmNlckFsbDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aWhlOnBhdDphcHNyOmNhbmNlcjpicmVhc3Q6MjAxMFxyXG4gICAqL1xyXG4gIEFuYXRvbWljUGF0aG9sb2d5U3RydWN0dXJlZFJlcG9ydENhbmNlckJyZWFzdDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aWhlOnBhdDphcHNyOmNhbmNlcjpjZXJ2aXg6MjAxMFxyXG4gICAqL1xyXG4gIEFuYXRvbWljUGF0aG9sb2d5U3RydWN0dXJlZFJlcG9ydENhbmNlckNlcnZpeDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aWhlOnBhdDphcHNyOmNhbmNlcjpjb2xvbjoyMDEwXHJcbiAgICovXHJcbiAgQW5hdG9taWNQYXRob2xvZ3lTdHJ1Y3R1cmVkUmVwb3J0Q2FuY2VyQ29sb246IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogdXJuOmloZTpwYXQ6YXBzcjpjYW5jZXI6ZW5kb21ldHJpdW06MjAxMFxyXG4gICAqL1xyXG4gIEFuYXRvbWljUGF0aG9sb2d5U3RydWN0dXJlZFJlcG9ydENhbmNlckVuZG9tZXRyaXVtOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IHVybjppaGU6cGF0OmFwc3I6Y2FuY2VyOmVzb3BoYWd1czoyMDEwXHJcbiAgICovXHJcbiAgQW5hdG9taWNQYXRob2xvZ3lTdHJ1Y3R1cmVkUmVwb3J0Q2FuY2VyRXNvcGhhZ3VzOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IHVybjppaGU6cGF0OmFwc3I6Y2FuY2VyOmtpZG5leToyMDEwXHJcbiAgICovXHJcbiAgQW5hdG9taWNQYXRob2xvZ3lTdHJ1Y3R1cmVkUmVwb3J0Q2FuY2VyS2lkbmV5OiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IHVybjppaGU6cGF0OmFwc3I6Y2FuY2VyOmxhcnlueDoyMDEwXHJcbiAgICovXHJcbiAgQW5hdG9taWNQYXRob2xvZ3lTdHJ1Y3R1cmVkUmVwb3J0Q2FuY2VyTGFyeW54OiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IHVybjppaGU6cGF0OmFwc3I6Y2FuY2VyOmxpcF9vcmFsX2Nhdml0eToyMDEwXHJcbiAgICovXHJcbiAgQW5hdG9taWNQYXRob2xvZ3lTdHJ1Y3R1cmVkUmVwb3J0Q2FuY2VyTGlwT3JhbENhdml0eTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aWhlOnBhdDphcHNyOmNhbmNlcjpsaXZlcjoyMDEwXHJcbiAgICovXHJcbiAgQW5hdG9taWNQYXRob2xvZ3lTdHJ1Y3R1cmVkUmVwb3J0Q2FuY2VyTGl2ZXI6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogdXJuOmloZTpwYXQ6YXBzcjpjYW5jZXI6bHVuZzoyMDEwXHJcbiAgICovXHJcbiAgQW5hdG9taWNQYXRob2xvZ3lTdHJ1Y3R1cmVkUmVwb3J0Q2FuY2VyTHVuZzogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aWhlOnBhdDphcHNyOmNhbmNlcjpvdmFyeToyMDEwXHJcbiAgICovXHJcbiAgQW5hdG9taWNQYXRob2xvZ3lTdHJ1Y3R1cmVkUmVwb3J0Q2FuY2VyT3Zhcnk6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogdXJuOmloZTpwYXQ6YXBzcjpjYW5jZXI6cGFuY3JlYXM6MjAxMFxyXG4gICAqL1xyXG4gIEFuYXRvbWljUGF0aG9sb2d5U3RydWN0dXJlZFJlcG9ydENhbmNlclBhbmNyZWFzOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IHVybjppaGU6cGF0OmFwc3I6Y2FuY2VyOnBoYXJ5bng6MjAxMFxyXG4gICAqL1xyXG4gIEFuYXRvbWljUGF0aG9sb2d5U3RydWN0dXJlZFJlcG9ydENhbmNlclBoYXJ5bng6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogdXJuOmloZTpwYXQ6YXBzcjpjYW5jZXI6cHJvc3RhdGU6MjAxMFxyXG4gICAqL1xyXG4gIEFuYXRvbWljUGF0aG9sb2d5U3RydWN0dXJlZFJlcG9ydENhbmNlclByb3N0YXRlOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IHVybjppaGU6cGF0OmFwc3I6Y2FuY2VyOnNhbGl2YXJ5X2dsYW5kOjIwMTBcclxuICAgKi9cclxuICBBbmF0b21pY1BhdGhvbG9neVN0cnVjdHVyZWRSZXBvcnRDYW5jZXJTYWxpdmFyeUdsYW5kOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IHVybjppaGU6cGF0OmFwc3I6Y2FuY2VyOnNraW46MjAxMFxyXG4gICAqL1xyXG4gIEFuYXRvbWljUGF0aG9sb2d5U3RydWN0dXJlZFJlcG9ydENhbmNlclNraW46IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogdXJuOmloZTpwYXQ6YXBzcjpjYW5jZXI6c3RvbWFjaDoyMDEwXHJcbiAgICovXHJcbiAgQW5hdG9taWNQYXRob2xvZ3lTdHJ1Y3R1cmVkUmVwb3J0Q2FuY2VyU3RvbWFjaDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aWhlOnBhdDphcHNyOmNhbmNlcjp0ZXN0aXM6MjAxMFxyXG4gICAqL1xyXG4gIEFuYXRvbWljUGF0aG9sb2d5U3RydWN0dXJlZFJlcG9ydENhbmNlclRlc3RpczogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aWhlOnBhdDphcHNyOmNhbmNlcjp0aHlyb2lkOjIwMTBcclxuICAgKi9cclxuICBBbmF0b21pY1BhdGhvbG9neVN0cnVjdHVyZWRSZXBvcnRDYW5jZXJUaHlyb2lkOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IHVybjppaGU6cGF0OmFwc3I6Y2FuY2VyOnVyaW5hcnlfYmxhZGRlcjoyMDEwXHJcbiAgICovXHJcbiAgQW5hdG9taWNQYXRob2xvZ3lTdHJ1Y3R1cmVkUmVwb3J0Q2FuY2VyVXJpbmFyeUJsYWRkZXI6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogdXJuOmloZTpwY2M6YXByOmVkdToyMDA4XHJcbiAgICovXHJcbiAgQW50ZXBhcnR1bVJlY29yZEFQUkVkdWNhdGlvbjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aWhlOnBjYzphcHI6aGFuZHA6MjAwOFxyXG4gICAqL1xyXG4gIEFudGVwYXJ0dW1SZWNvcmRBUFJIaXN0b3J5QW5kUGh5c2ljYWw6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogdXJuOmloZTpwY2M6YXByOmxhYjoyMDA4XHJcbiAgICovXHJcbiAgQW50ZXBhcnR1bVJlY29yZEFQUkxhYm9yYXRvcnk6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogdXJuOmloZTpwY2M6YXBzOjIwMDdcclxuICAgKi9cclxuICBJSEVBbnRlcGFydHVtU3VtbWFyeTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aWhlOnBjYzpjbToyMDA4XHJcbiAgICovXHJcbiAgQ2FyZU1hbmFnZW1lbnRDTTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aWhlOnBjYzpjcmM6MjAwOFxyXG4gICAqL1xyXG4gIENhbmNlclJlZ2lzdHJ5Q29udGVudENSQzogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aWhlOnBjYzpjdG46MjAwN1xyXG4gICAqL1xyXG4gIFBDQ0NUTjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aWhlOnBjYzplZGVzOjIwMDdcclxuICAgKi9cclxuICBFbWVyZ2VuY3lEZXBhcnRtZW50RW5jb3VudGVyU3VtbWFyeUVERVM6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogdXJuOmloZTpwY2M6ZWRwbjoyMDA3XHJcbiAgICovXHJcbiAgUENDRURQTjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aWhlOnBjYzplZHI6MjAwN1xyXG4gICAqL1xyXG4gIEVtZXJnZW5jeURlcGFydG1lbnRSZWZlcnJhbEVEUjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aWhlOnBjYzpldHM6MjAxMVxyXG4gICAqL1xyXG4gIFBDQ0VUUzogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aWhlOnBjYzpocDoyMDA4XHJcbiAgICovXHJcbiAgUENDSFA6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogdXJuOmloZTpwY2M6aWM6MjAwOFxyXG4gICAqL1xyXG4gIEltbXVuaXphdGlvbkNvbnRlbnRJQzogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aWhlOnBjYzppdHM6MjAxMVxyXG4gICAqL1xyXG4gIFBDQ0lUUzogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aWhlOnBjYzpsZGhwOjIwMDlcclxuICAgKi9cclxuICBQQ0NMREhQOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IHVybjppaGU6cGNjOmxkczoyMDA5XHJcbiAgICovXHJcbiAgUENDTERTOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IHVybjppaGU6cGNjOm1kczoyMDA5XHJcbiAgICovXHJcbiAgUENDTURTOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IHVybjppaGU6cGNjOm5kczoyMDEwXHJcbiAgICovXHJcbiAgUENDTkRTOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IHVybjppaGU6cGNjOm5uOjIwMDdcclxuICAgKi9cclxuICBQQ0NOTjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aWhlOnBjYzpwcHZzOjIwMTBcclxuICAgKi9cclxuICBQQ0NQUFZTOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IHVybjppaGU6cGNjOnJpcHQ6MjAxN1xyXG4gICAqL1xyXG4gIFJvdXRpbmVJbnRlcmZhY2lsaXR5UGF0aWVudFRyYW5zcG9ydFJJUFQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogdXJuOmloZTpwY2M6dG46MjAwN1xyXG4gICAqL1xyXG4gIFBDQ1ROOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IHVybjppaGU6cGNjOnRyczoyMDExXHJcbiAgICovXHJcbiAgUENDVFJTOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IHVybjppaGU6cGNjOnhkcy1tczoyMDA3XHJcbiAgICovXHJcbiAgWERTTWVkaWNhbFN1bW1hcmllczogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aWhlOnBjYzp4cGhyOjIwMDdcclxuICAgKi9cclxuICBQZXJzb25hbEhlYWx0aFJlY29yZHNBbHNvS25vd25Bc0hMN0NDREFuZEhJVFNQQzMyOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IHVybjppaGU6cGhhcm06ZGlzOjIwMTBcclxuICAgKi9cclxuICBQaGFybWFjeURJUzogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aWhlOnBoYXJtOnBhZHY6MjAxMFxyXG4gICAqL1xyXG4gIFBoYXJtYWN5UEFEVjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aWhlOnBoYXJtOnBtbDoyMDEzXHJcbiAgICovXHJcbiAgUGhhcm1hY3lQTUw6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogdXJuOmloZTpwaGFybTpwcmU6MjAxMFxyXG4gICAqL1xyXG4gIFBoYXJtYWN5UHJlOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IHVybjppaGU6cmFkOkNEQTpJbWFnaW5nUmVwb3J0U3RydWN0dXJlZEhlYWRpbmdzOjIwMTNcclxuICAgKi9cclxuICBSYWRpb2xvZ3lYRFNJU3RydWN0dXJlZENEQTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aWhlOnJhZDpQREZcclxuICAgKi9cclxuICBSYWRpb2xvZ3lYRFNJUERGOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IHVybjppaGU6cmFkOlRFWFRcclxuICAgKi9cclxuICBSYWRpb2xvZ3lYRFNJVGV4dDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBWYWx1ZVNldDogQSBWYWx1ZVNldCByZXNvdXJjZSBpbnN0YW5jZSBzcGVjaWZpZXMgYSBzZXQgb2YgY29kZXMgZHJhd24gZnJvbSBvbmUgb3IgbW9yZSBjb2RlIHN5c3RlbXMsIGludGVuZGVkIGZvciB1c2UgaW4gYSBwYXJ0aWN1bGFyIGNvbnRleHQuIFZhbHVlIHNldHMgbGluayBiZXR3ZWVuIFtbW0NvZGVTeXN0ZW1dXV0gZGVmaW5pdGlvbnMgYW5kIHRoZWlyIHVzZSBpbiBbY29kZWQgZWxlbWVudHNdKHRlcm1pbm9sb2dpZXMuaHRtbCkuXHJcbiAgICovXHJcbiAgVmFsdWVTZXQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogVmVyaWZpY2F0aW9uUmVzdWx0OiBEZXNjcmliZXMgdmFsaWRhdGlvbiByZXF1aXJlbWVudHMsIHNvdXJjZShzKSwgc3RhdHVzIGFuZCBkYXRlcyBmb3Igb25lIG9yIG1vcmUgZWxlbWVudHMuXHJcbiAgICovXHJcbiAgVmVyaWZpY2F0aW9uUmVzdWx0OiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIFZpc2lvblByZXNjcmlwdGlvbjogQW4gYXV0aG9yaXphdGlvbiBmb3IgdGhlIHByb3Zpc2lvbiBvZiBnbGFzc2VzIGFuZC9vciBjb250YWN0IGxlbnNlcyB0byBhIHBhdGllbnQuXHJcbiAgICovXHJcbiAgVmlzaW9uUHJlc2NyaXB0aW9uOiBDb2RpbmdBcmdzO1xyXG59XHJcblxyXG4vKipcclxuICogVGhpcyB2YWx1ZSBzZXQgaW5jbHVkZXMgdGhlIEZISVIgcmVzb3VyY2UgdHlwZXMsIGFsb25nIHdpdGggc29tZSBvdGhlciBpbXBvcnRhbnQgY29udGVudCBjbGFzcyBjb2Rlc1xyXG4gKi9cclxuZXhwb3J0IGNvbnN0IENvbnNlbnRDb250ZW50Q2xhc3NDb2RpbmdzOkNvbnNlbnRDb250ZW50Q2xhc3NDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIEFjY291bnQ6IEEgZmluYW5jaWFsIHRvb2wgZm9yIHRyYWNraW5nIHZhbHVlIGFjY3J1ZWQgZm9yIGEgcGFydGljdWxhciBwdXJwb3NlLiAgSW4gdGhlIGhlYWx0aGNhcmUgZmllbGQsIHVzZWQgdG8gdHJhY2sgY2hhcmdlcyBmb3IgYSBwYXRpZW50LCBjb3N0IGNlbnRlcnMsIGV0Yy5cclxuICAgKi9cclxuICBBY2NvdW50OiB7XHJcbiAgICBkaXNwbGF5OiBcIkFjY291bnRcIixcclxuICAgIGNvZGU6IFwiQWNjb3VudFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVzb3VyY2UtdHlwZXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIEFjdGl2aXR5RGVmaW5pdGlvbjogVGhpcyByZXNvdXJjZSBhbGxvd3MgZm9yIHRoZSBkZWZpbml0aW9uIG9mIHNvbWUgYWN0aXZpdHkgdG8gYmUgcGVyZm9ybWVkLCBpbmRlcGVuZGVudCBvZiBhIHBhcnRpY3VsYXIgcGF0aWVudCwgcHJhY3RpdGlvbmVyLCBvciBvdGhlciBwZXJmb3JtYW5jZSBjb250ZXh0LlxyXG4gICAqL1xyXG4gIEFjdGl2aXR5RGVmaW5pdGlvbjoge1xyXG4gICAgZGlzcGxheTogXCJBY3Rpdml0eURlZmluaXRpb25cIixcclxuICAgIGNvZGU6IFwiQWN0aXZpdHlEZWZpbml0aW9uXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNvdXJjZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQWRtaW5pc3RyYWJsZVByb2R1Y3REZWZpbml0aW9uOiBBIG1lZGljaW5hbCBwcm9kdWN0IGluIHRoZSBmaW5hbCBmb3JtIHdoaWNoIGlzIHN1aXRhYmxlIGZvciBhZG1pbmlzdGVyaW5nIHRvIGEgcGF0aWVudCAoYWZ0ZXIgYW55IG1peGluZyBvZiBtdWx0aXBsZSBjb21wb25lbnRzLCBkaXNzb2x1dGlvbiBldGMuIGhhcyBiZWVuIHBlcmZvcm1lZCkuXHJcbiAgICovXHJcbiAgQWRtaW5pc3RyYWJsZVByb2R1Y3REZWZpbml0aW9uOiB7XHJcbiAgICBkaXNwbGF5OiBcIkFkbWluaXN0cmFibGVQcm9kdWN0RGVmaW5pdGlvblwiLFxyXG4gICAgY29kZTogXCJBZG1pbmlzdHJhYmxlUHJvZHVjdERlZmluaXRpb25cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc291cmNlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBBZHZlcnNlRXZlbnQ6IEFjdHVhbCBvciAgcG90ZW50aWFsL2F2b2lkZWQgZXZlbnQgY2F1c2luZyB1bmludGVuZGVkIHBoeXNpY2FsIGluanVyeSByZXN1bHRpbmcgZnJvbSBvciBjb250cmlidXRlZCB0byBieSBtZWRpY2FsIGNhcmUsIGEgcmVzZWFyY2ggc3R1ZHkgb3Igb3RoZXIgaGVhbHRoY2FyZSBzZXR0aW5nIGZhY3RvcnMgdGhhdCByZXF1aXJlcyBhZGRpdGlvbmFsIG1vbml0b3JpbmcsIHRyZWF0bWVudCwgb3IgaG9zcGl0YWxpemF0aW9uLCBvciB0aGF0IHJlc3VsdHMgaW4gZGVhdGguXHJcbiAgICovXHJcbiAgQWR2ZXJzZUV2ZW50OiB7XHJcbiAgICBkaXNwbGF5OiBcIkFkdmVyc2VFdmVudFwiLFxyXG4gICAgY29kZTogXCJBZHZlcnNlRXZlbnRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc291cmNlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBBbGxlcmd5SW50b2xlcmFuY2U6IFJpc2sgb2YgaGFybWZ1bCBvciB1bmRlc2lyYWJsZSwgcGh5c2lvbG9naWNhbCByZXNwb25zZSB3aGljaCBpcyB1bmlxdWUgdG8gYW4gaW5kaXZpZHVhbCBhbmQgYXNzb2NpYXRlZCB3aXRoIGV4cG9zdXJlIHRvIGEgc3Vic3RhbmNlLlxyXG4gICAqL1xyXG4gIEFsbGVyZ3lJbnRvbGVyYW5jZToge1xyXG4gICAgZGlzcGxheTogXCJBbGxlcmd5SW50b2xlcmFuY2VcIixcclxuICAgIGNvZGU6IFwiQWxsZXJneUludG9sZXJhbmNlXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNvdXJjZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogYXBwbGljYXRpb24vaGw3LWNkYSt4bWxcclxuICAgKi9cclxuICBDREFEb2N1bWVudHM6IHtcclxuICAgIGRpc3BsYXk6IFwiQ0RBIERvY3VtZW50c1wiLFxyXG4gICAgY29kZTogXCJhcHBsaWNhdGlvbi9obDctY2RhK3htbFwiLFxyXG4gICAgc3lzdGVtOiBcInVybjppZXRmOmJjcDoxM1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQXBwb2ludG1lbnQ6IEEgYm9va2luZyBvZiBhIGhlYWx0aGNhcmUgZXZlbnQgYW1vbmcgcGF0aWVudChzKSwgcHJhY3RpdGlvbmVyKHMpLCByZWxhdGVkIHBlcnNvbihzKSBhbmQvb3IgZGV2aWNlKHMpIGZvciBhIHNwZWNpZmljIGRhdGUvdGltZS4gVGhpcyBtYXkgcmVzdWx0IGluIG9uZSBvciBtb3JlIEVuY291bnRlcihzKS5cclxuICAgKi9cclxuICBBcHBvaW50bWVudDoge1xyXG4gICAgZGlzcGxheTogXCJBcHBvaW50bWVudFwiLFxyXG4gICAgY29kZTogXCJBcHBvaW50bWVudFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVzb3VyY2UtdHlwZXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIEFwcG9pbnRtZW50UmVzcG9uc2U6IEEgcmVwbHkgdG8gYW4gYXBwb2ludG1lbnQgcmVxdWVzdCBmb3IgYSBwYXRpZW50IGFuZC9vciBwcmFjdGl0aW9uZXIocyksIHN1Y2ggYXMgYSBjb25maXJtYXRpb24gb3IgcmVqZWN0aW9uLlxyXG4gICAqL1xyXG4gIEFwcG9pbnRtZW50UmVzcG9uc2U6IHtcclxuICAgIGRpc3BsYXk6IFwiQXBwb2ludG1lbnRSZXNwb25zZVwiLFxyXG4gICAgY29kZTogXCJBcHBvaW50bWVudFJlc3BvbnNlXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNvdXJjZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQXVkaXRFdmVudDogQSByZWNvcmQgb2YgYW4gZXZlbnQgbWFkZSBmb3IgcHVycG9zZXMgb2YgbWFpbnRhaW5pbmcgYSBzZWN1cml0eSBsb2cuIFR5cGljYWwgdXNlcyBpbmNsdWRlIGRldGVjdGlvbiBvZiBpbnRydXNpb24gYXR0ZW1wdHMgYW5kIG1vbml0b3JpbmcgZm9yIGluYXBwcm9wcmlhdGUgdXNhZ2UuXHJcbiAgICovXHJcbiAgQXVkaXRFdmVudDoge1xyXG4gICAgZGlzcGxheTogXCJBdWRpdEV2ZW50XCIsXHJcbiAgICBjb2RlOiBcIkF1ZGl0RXZlbnRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc291cmNlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBCYXNpYzogQmFzaWMgaXMgdXNlZCBmb3IgaGFuZGxpbmcgY29uY2VwdHMgbm90IHlldCBkZWZpbmVkIGluIEZISVIsIG5hcnJhdGl2ZS1vbmx5IHJlc291cmNlcyB0aGF0IGRvbid0IG1hcCB0byBhbiBleGlzdGluZyByZXNvdXJjZSwgYW5kIGN1c3RvbSByZXNvdXJjZXMgbm90IGFwcHJvcHJpYXRlIGZvciBpbmNsdXNpb24gaW4gdGhlIEZISVIgc3BlY2lmaWNhdGlvbi5cclxuICAgKi9cclxuICBCYXNpYzoge1xyXG4gICAgZGlzcGxheTogXCJCYXNpY1wiLFxyXG4gICAgY29kZTogXCJCYXNpY1wiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVzb3VyY2UtdHlwZXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIEJpbmFyeTogQSByZXNvdXJjZSB0aGF0IHJlcHJlc2VudHMgdGhlIGRhdGEgb2YgYSBzaW5nbGUgcmF3IGFydGlmYWN0IGFzIGRpZ2l0YWwgY29udGVudCBhY2Nlc3NpYmxlIGluIGl0cyBuYXRpdmUgZm9ybWF0LiAgQSBCaW5hcnkgcmVzb3VyY2UgY2FuIGNvbnRhaW4gYW55IGNvbnRlbnQsIHdoZXRoZXIgdGV4dCwgaW1hZ2UsIHBkZiwgemlwIGFyY2hpdmUsIGV0Yy5cclxuICAgKi9cclxuICBCaW5hcnk6IHtcclxuICAgIGRpc3BsYXk6IFwiQmluYXJ5XCIsXHJcbiAgICBjb2RlOiBcIkJpbmFyeVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVzb3VyY2UtdHlwZXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIEJpb2xvZ2ljYWxseURlcml2ZWRQcm9kdWN0OiBBIG1hdGVyaWFsIHN1YnN0YW5jZSBvcmlnaW5hdGluZyBmcm9tIGEgYmlvbG9naWNhbCBlbnRpdHkgaW50ZW5kZWQgdG8gYmUgdHJhbnNwbGFudGVkIG9yIGluZnVzZWRcclxuICAgKiBpbnRvIGFub3RoZXIgKHBvc3NpYmx5IHRoZSBzYW1lKSBiaW9sb2dpY2FsIGVudGl0eS5cclxuICAgKi9cclxuICBCaW9sb2dpY2FsbHlEZXJpdmVkUHJvZHVjdDoge1xyXG4gICAgZGlzcGxheTogXCJCaW9sb2dpY2FsbHlEZXJpdmVkUHJvZHVjdFwiLFxyXG4gICAgY29kZTogXCJCaW9sb2dpY2FsbHlEZXJpdmVkUHJvZHVjdFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVzb3VyY2UtdHlwZXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIEJvZHlTdHJ1Y3R1cmU6IFJlY29yZCBkZXRhaWxzIGFib3V0IGFuIGFuYXRvbWljYWwgc3RydWN0dXJlLiAgVGhpcyByZXNvdXJjZSBtYXkgYmUgdXNlZCB3aGVuIGEgY29kZWQgY29uY2VwdCBkb2VzIG5vdCBwcm92aWRlIHRoZSBuZWNlc3NhcnkgZGV0YWlsIG5lZWRlZCBmb3IgdGhlIHVzZSBjYXNlLlxyXG4gICAqL1xyXG4gIEJvZHlTdHJ1Y3R1cmU6IHtcclxuICAgIGRpc3BsYXk6IFwiQm9keVN0cnVjdHVyZVwiLFxyXG4gICAgY29kZTogXCJCb2R5U3RydWN0dXJlXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNvdXJjZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQnVuZGxlOiBBIGNvbnRhaW5lciBmb3IgYSBjb2xsZWN0aW9uIG9mIHJlc291cmNlcy5cclxuICAgKi9cclxuICBCdW5kbGU6IHtcclxuICAgIGRpc3BsYXk6IFwiQnVuZGxlXCIsXHJcbiAgICBjb2RlOiBcIkJ1bmRsZVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVzb3VyY2UtdHlwZXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENhcGFiaWxpdHlTdGF0ZW1lbnQ6IEEgQ2FwYWJpbGl0eSBTdGF0ZW1lbnQgZG9jdW1lbnRzIGEgc2V0IG9mIGNhcGFiaWxpdGllcyAoYmVoYXZpb3JzKSBvZiBhIEZISVIgU2VydmVyIGZvciBhIHBhcnRpY3VsYXIgdmVyc2lvbiBvZiBGSElSIHRoYXQgbWF5IGJlIHVzZWQgYXMgYSBzdGF0ZW1lbnQgb2YgYWN0dWFsIHNlcnZlciBmdW5jdGlvbmFsaXR5IG9yIGEgc3RhdGVtZW50IG9mIHJlcXVpcmVkIG9yIGRlc2lyZWQgc2VydmVyIGltcGxlbWVudGF0aW9uLlxyXG4gICAqL1xyXG4gIENhcGFiaWxpdHlTdGF0ZW1lbnQ6IHtcclxuICAgIGRpc3BsYXk6IFwiQ2FwYWJpbGl0eVN0YXRlbWVudFwiLFxyXG4gICAgY29kZTogXCJDYXBhYmlsaXR5U3RhdGVtZW50XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNvdXJjZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ2FyZVBsYW46IERlc2NyaWJlcyB0aGUgaW50ZW50aW9uIG9mIGhvdyBvbmUgb3IgbW9yZSBwcmFjdGl0aW9uZXJzIGludGVuZCB0byBkZWxpdmVyIGNhcmUgZm9yIGEgcGFydGljdWxhciBwYXRpZW50LCBncm91cCBvciBjb21tdW5pdHkgZm9yIGEgcGVyaW9kIG9mIHRpbWUsIHBvc3NpYmx5IGxpbWl0ZWQgdG8gY2FyZSBmb3IgYSBzcGVjaWZpYyBjb25kaXRpb24gb3Igc2V0IG9mIGNvbmRpdGlvbnMuXHJcbiAgICovXHJcbiAgQ2FyZVBsYW46IHtcclxuICAgIGRpc3BsYXk6IFwiQ2FyZVBsYW5cIixcclxuICAgIGNvZGU6IFwiQ2FyZVBsYW5cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc291cmNlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDYXJlVGVhbTogVGhlIENhcmUgVGVhbSBpbmNsdWRlcyBhbGwgdGhlIHBlb3BsZSBhbmQgb3JnYW5pemF0aW9ucyB3aG8gcGxhbiB0byBwYXJ0aWNpcGF0ZSBpbiB0aGUgY29vcmRpbmF0aW9uIGFuZCBkZWxpdmVyeSBvZiBjYXJlIGZvciBhIHBhdGllbnQuXHJcbiAgICovXHJcbiAgQ2FyZVRlYW06IHtcclxuICAgIGRpc3BsYXk6IFwiQ2FyZVRlYW1cIixcclxuICAgIGNvZGU6IFwiQ2FyZVRlYW1cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc291cmNlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDYXRhbG9nRW50cnk6IENhdGFsb2cgZW50cmllcyBhcmUgd3JhcHBlcnMgdGhhdCBjb250ZXh0dWFsaXplIGl0ZW1zIGluY2x1ZGVkIGluIGEgY2F0YWxvZy5cclxuICAgKi9cclxuICBDYXRhbG9nRW50cnk6IHtcclxuICAgIGRpc3BsYXk6IFwiQ2F0YWxvZ0VudHJ5XCIsXHJcbiAgICBjb2RlOiBcIkNhdGFsb2dFbnRyeVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVzb3VyY2UtdHlwZXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENoYXJnZUl0ZW06IFRoZSByZXNvdXJjZSBDaGFyZ2VJdGVtIGRlc2NyaWJlcyB0aGUgcHJvdmlzaW9uIG9mIGhlYWx0aGNhcmUgcHJvdmlkZXIgcHJvZHVjdHMgZm9yIGEgY2VydGFpbiBwYXRpZW50LCB0aGVyZWZvcmUgcmVmZXJyaW5nIG5vdCBvbmx5IHRvIHRoZSBwcm9kdWN0LCBidXQgY29udGFpbmluZyBpbiBhZGRpdGlvbiBkZXRhaWxzIG9mIHRoZSBwcm92aXNpb24sIGxpa2UgZGF0ZSwgdGltZSwgYW1vdW50cyBhbmQgcGFydGljaXBhdGluZyBvcmdhbml6YXRpb25zIGFuZCBwZXJzb25zLiBNYWluIFVzYWdlIG9mIHRoZSBDaGFyZ2VJdGVtIGlzIHRvIGVuYWJsZSB0aGUgYmlsbGluZyBwcm9jZXNzIGFuZCBpbnRlcm5hbCBjb3N0IGFsbG9jYXRpb24uXHJcbiAgICovXHJcbiAgQ2hhcmdlSXRlbToge1xyXG4gICAgZGlzcGxheTogXCJDaGFyZ2VJdGVtXCIsXHJcbiAgICBjb2RlOiBcIkNoYXJnZUl0ZW1cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc291cmNlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDaGFyZ2VJdGVtRGVmaW5pdGlvbjogVGhlIENoYXJnZUl0ZW1EZWZpbml0aW9uIHJlc291cmNlIHByb3ZpZGVzIHRoZSBwcm9wZXJ0aWVzIHRoYXQgYXBwbHkgdG8gdGhlIChiaWxsaW5nKSBjb2RlcyBuZWNlc3NhcnkgdG8gY2FsY3VsYXRlIGNvc3RzIGFuZCBwcmljZXMuIFRoZSBwcm9wZXJ0aWVzIG1heSBkaWZmZXIgbGFyZ2VseSBkZXBlbmRpbmcgb24gdHlwZSBhbmQgcmVhbG0sIHRoZXJlZm9yZSB0aGlzIHJlc291cmNlIGdpdmVzIG9ubHkgYSByb3VnaCBzdHJ1Y3R1cmUgYW5kIHJlcXVpcmVzIHByb2ZpbGluZyBmb3IgZWFjaCB0eXBlIG9mIGJpbGxpbmcgY29kZSBzeXN0ZW0uXHJcbiAgICovXHJcbiAgQ2hhcmdlSXRlbURlZmluaXRpb246IHtcclxuICAgIGRpc3BsYXk6IFwiQ2hhcmdlSXRlbURlZmluaXRpb25cIixcclxuICAgIGNvZGU6IFwiQ2hhcmdlSXRlbURlZmluaXRpb25cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc291cmNlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDaXRhdGlvbjogVGhlIENpdGF0aW9uIFJlc291cmNlIGVuYWJsZXMgcmVmZXJlbmNlIHRvIGFueSBrbm93bGVkZ2UgYXJ0aWZhY3QgZm9yIHB1cnBvc2VzIG9mIGlkZW50aWZpY2F0aW9uIGFuZCBhdHRyaWJ1dGlvbi4gVGhlIENpdGF0aW9uIFJlc291cmNlIHN1cHBvcnRzIGV4aXN0aW5nIHJlZmVyZW5jZSBzdHJ1Y3R1cmVzIGFuZCBkZXZlbG9waW5nIHB1YmxpY2F0aW9uIHByYWN0aWNlcyBzdWNoIGFzIHZlcnNpb25pbmcsIGV4cHJlc3NpbmcgY29tcGxleCBjb250cmlidXRvcnNoaXAgcm9sZXMsIGFuZCByZWZlcmVuY2luZyBjb21wdXRhYmxlIHJlc291cmNlcy5cclxuICAgKi9cclxuICBDaXRhdGlvbjoge1xyXG4gICAgZGlzcGxheTogXCJDaXRhdGlvblwiLFxyXG4gICAgY29kZTogXCJDaXRhdGlvblwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVzb3VyY2UtdHlwZXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENsYWltOiBBIHByb3ZpZGVyIGlzc3VlZCBsaXN0IG9mIHByb2Zlc3Npb25hbCBzZXJ2aWNlcyBhbmQgcHJvZHVjdHMgd2hpY2ggaGF2ZSBiZWVuIHByb3ZpZGVkLCBvciBhcmUgdG8gYmUgcHJvdmlkZWQsIHRvIGEgcGF0aWVudCB3aGljaCBpcyBzZW50IHRvIGFuIGluc3VyZXIgZm9yIHJlaW1idXJzZW1lbnQuXHJcbiAgICovXHJcbiAgQ2xhaW06IHtcclxuICAgIGRpc3BsYXk6IFwiQ2xhaW1cIixcclxuICAgIGNvZGU6IFwiQ2xhaW1cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc291cmNlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDbGFpbVJlc3BvbnNlOiBUaGlzIHJlc291cmNlIHByb3ZpZGVzIHRoZSBhZGp1ZGljYXRpb24gZGV0YWlscyBmcm9tIHRoZSBwcm9jZXNzaW5nIG9mIGEgQ2xhaW0gcmVzb3VyY2UuXHJcbiAgICovXHJcbiAgQ2xhaW1SZXNwb25zZToge1xyXG4gICAgZGlzcGxheTogXCJDbGFpbVJlc3BvbnNlXCIsXHJcbiAgICBjb2RlOiBcIkNsYWltUmVzcG9uc2VcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc291cmNlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDbGluaWNhbEltcHJlc3Npb246IEEgcmVjb3JkIG9mIGEgY2xpbmljYWwgYXNzZXNzbWVudCBwZXJmb3JtZWQgdG8gZGV0ZXJtaW5lIHdoYXQgcHJvYmxlbShzKSBtYXkgYWZmZWN0IHRoZSBwYXRpZW50IGFuZCBiZWZvcmUgcGxhbm5pbmcgdGhlIHRyZWF0bWVudHMgb3IgbWFuYWdlbWVudCBzdHJhdGVnaWVzIHRoYXQgYXJlIGJlc3QgdG8gbWFuYWdlIGEgcGF0aWVudCdzIGNvbmRpdGlvbi4gQXNzZXNzbWVudHMgYXJlIG9mdGVuIDE6MSB3aXRoIGEgY2xpbmljYWwgY29uc3VsdGF0aW9uIC8gZW5jb3VudGVyLCAgYnV0IHRoaXMgdmFyaWVzIGdyZWF0bHkgZGVwZW5kaW5nIG9uIHRoZSBjbGluaWNhbCB3b3JrZmxvdy4gVGhpcyByZXNvdXJjZSBpcyBjYWxsZWQgXCJDbGluaWNhbEltcHJlc3Npb25cIiByYXRoZXIgdGhhbiBcIkNsaW5pY2FsQXNzZXNzbWVudFwiIHRvIGF2b2lkIGNvbmZ1c2lvbiB3aXRoIHRoZSByZWNvcmRpbmcgb2YgYXNzZXNzbWVudCB0b29scyBzdWNoIGFzIEFwZ2FyIHNjb3JlLlxyXG4gICAqL1xyXG4gIENsaW5pY2FsSW1wcmVzc2lvbjoge1xyXG4gICAgZGlzcGxheTogXCJDbGluaWNhbEltcHJlc3Npb25cIixcclxuICAgIGNvZGU6IFwiQ2xpbmljYWxJbXByZXNzaW9uXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNvdXJjZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ2xpbmljYWxVc2VEZWZpbml0aW9uOiBBIHNpbmdsZSBpc3N1ZSAtIGVpdGhlciBhbiBpbmRpY2F0aW9uLCBjb250cmFpbmRpY2F0aW9uLCBpbnRlcmFjdGlvbiBvciBhbiB1bmRlc2lyYWJsZSBlZmZlY3QgZm9yIGEgbWVkaWNpbmFsIHByb2R1Y3QsIG1lZGljYXRpb24sIGRldmljZSBvciBwcm9jZWR1cmUuXHJcbiAgICovXHJcbiAgQ2xpbmljYWxVc2VEZWZpbml0aW9uOiB7XHJcbiAgICBkaXNwbGF5OiBcIkNsaW5pY2FsVXNlRGVmaW5pdGlvblwiLFxyXG4gICAgY29kZTogXCJDbGluaWNhbFVzZURlZmluaXRpb25cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc291cmNlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlU3lzdGVtOiBUaGUgQ29kZVN5c3RlbSByZXNvdXJjZSBpcyB1c2VkIHRvIGRlY2xhcmUgdGhlIGV4aXN0ZW5jZSBvZiBhbmQgZGVzY3JpYmUgYSBjb2RlIHN5c3RlbSBvciBjb2RlIHN5c3RlbSBzdXBwbGVtZW50IGFuZCBpdHMga2V5IHByb3BlcnRpZXMsIGFuZCBvcHRpb25hbGx5IGRlZmluZSBhIHBhcnQgb3IgYWxsIG9mIGl0cyBjb250ZW50LlxyXG4gICAqL1xyXG4gIENvZGVTeXN0ZW06IHtcclxuICAgIGRpc3BsYXk6IFwiQ29kZVN5c3RlbVwiLFxyXG4gICAgY29kZTogXCJDb2RlU3lzdGVtXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNvdXJjZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29tbXVuaWNhdGlvbjogQW4gb2NjdXJyZW5jZSBvZiBpbmZvcm1hdGlvbiBiZWluZyB0cmFuc21pdHRlZDsgZS5nLiBhbiBhbGVydCB0aGF0IHdhcyBzZW50IHRvIGEgcmVzcG9uc2libGUgcHJvdmlkZXIsIGEgcHVibGljIGhlYWx0aCBhZ2VuY3kgdGhhdCB3YXMgbm90aWZpZWQgYWJvdXQgYSByZXBvcnRhYmxlIGNvbmRpdGlvbi5cclxuICAgKi9cclxuICBDb21tdW5pY2F0aW9uOiB7XHJcbiAgICBkaXNwbGF5OiBcIkNvbW11bmljYXRpb25cIixcclxuICAgIGNvZGU6IFwiQ29tbXVuaWNhdGlvblwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVzb3VyY2UtdHlwZXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvbW11bmljYXRpb25SZXF1ZXN0OiBBIHJlcXVlc3QgdG8gY29udmV5IGluZm9ybWF0aW9uOyBlLmcuIHRoZSBDRFMgc3lzdGVtIHByb3Bvc2VzIHRoYXQgYW4gYWxlcnQgYmUgc2VudCB0byBhIHJlc3BvbnNpYmxlIHByb3ZpZGVyLCB0aGUgQ0RTIHN5c3RlbSBwcm9wb3NlcyB0aGF0IHRoZSBwdWJsaWMgaGVhbHRoIGFnZW5jeSBiZSBub3RpZmllZCBhYm91dCBhIHJlcG9ydGFibGUgY29uZGl0aW9uLlxyXG4gICAqL1xyXG4gIENvbW11bmljYXRpb25SZXF1ZXN0OiB7XHJcbiAgICBkaXNwbGF5OiBcIkNvbW11bmljYXRpb25SZXF1ZXN0XCIsXHJcbiAgICBjb2RlOiBcIkNvbW11bmljYXRpb25SZXF1ZXN0XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNvdXJjZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29tcGFydG1lbnREZWZpbml0aW9uOiBBIGNvbXBhcnRtZW50IGRlZmluaXRpb24gdGhhdCBkZWZpbmVzIGhvdyByZXNvdXJjZXMgYXJlIGFjY2Vzc2VkIG9uIGEgc2VydmVyLlxyXG4gICAqL1xyXG4gIENvbXBhcnRtZW50RGVmaW5pdGlvbjoge1xyXG4gICAgZGlzcGxheTogXCJDb21wYXJ0bWVudERlZmluaXRpb25cIixcclxuICAgIGNvZGU6IFwiQ29tcGFydG1lbnREZWZpbml0aW9uXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNvdXJjZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29tcG9zaXRpb246IEEgc2V0IG9mIGhlYWx0aGNhcmUtcmVsYXRlZCBpbmZvcm1hdGlvbiB0aGF0IGlzIGFzc2VtYmxlZCB0b2dldGhlciBpbnRvIGEgc2luZ2xlIGxvZ2ljYWwgcGFja2FnZSB0aGF0IHByb3ZpZGVzIGEgc2luZ2xlIGNvaGVyZW50IHN0YXRlbWVudCBvZiBtZWFuaW5nLCBlc3RhYmxpc2hlcyBpdHMgb3duIGNvbnRleHQgYW5kIHRoYXQgaGFzIGNsaW5pY2FsIGF0dGVzdGF0aW9uIHdpdGggcmVnYXJkIHRvIHdobyBpcyBtYWtpbmcgdGhlIHN0YXRlbWVudC4gQSBDb21wb3NpdGlvbiBkZWZpbmVzIHRoZSBzdHJ1Y3R1cmUgYW5kIG5hcnJhdGl2ZSBjb250ZW50IG5lY2Vzc2FyeSBmb3IgYSBkb2N1bWVudC4gSG93ZXZlciwgYSBDb21wb3NpdGlvbiBhbG9uZSBkb2VzIG5vdCBjb25zdGl0dXRlIGEgZG9jdW1lbnQuIFJhdGhlciwgdGhlIENvbXBvc2l0aW9uIG11c3QgYmUgdGhlIGZpcnN0IGVudHJ5IGluIGEgQnVuZGxlIHdoZXJlIEJ1bmRsZS50eXBlPWRvY3VtZW50LCBhbmQgYW55IG90aGVyIHJlc291cmNlcyByZWZlcmVuY2VkIGZyb20gQ29tcG9zaXRpb24gbXVzdCBiZSBpbmNsdWRlZCBhcyBzdWJzZXF1ZW50IGVudHJpZXMgaW4gdGhlIEJ1bmRsZSAoZm9yIGV4YW1wbGUgUGF0aWVudCwgUHJhY3RpdGlvbmVyLCBFbmNvdW50ZXIsIGV0Yy4pLlxyXG4gICAqL1xyXG4gIENvbXBvc2l0aW9uOiB7XHJcbiAgICBkaXNwbGF5OiBcIkNvbXBvc2l0aW9uXCIsXHJcbiAgICBjb2RlOiBcIkNvbXBvc2l0aW9uXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNvdXJjZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29uY2VwdE1hcDogQSBzdGF0ZW1lbnQgb2YgcmVsYXRpb25zaGlwcyBmcm9tIG9uZSBzZXQgb2YgY29uY2VwdHMgdG8gb25lIG9yIG1vcmUgb3RoZXIgY29uY2VwdHMgLSBlaXRoZXIgY29uY2VwdHMgaW4gY29kZSBzeXN0ZW1zLCBvciBkYXRhIGVsZW1lbnQvZGF0YSBlbGVtZW50IGNvbmNlcHRzLCBvciBjbGFzc2VzIGluIGNsYXNzIG1vZGVscy5cclxuICAgKi9cclxuICBDb25jZXB0TWFwOiB7XHJcbiAgICBkaXNwbGF5OiBcIkNvbmNlcHRNYXBcIixcclxuICAgIGNvZGU6IFwiQ29uY2VwdE1hcFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVzb3VyY2UtdHlwZXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvbmRpdGlvbjogQSBjbGluaWNhbCBjb25kaXRpb24sIHByb2JsZW0sIGRpYWdub3Npcywgb3Igb3RoZXIgZXZlbnQsIHNpdHVhdGlvbiwgaXNzdWUsIG9yIGNsaW5pY2FsIGNvbmNlcHQgdGhhdCBoYXMgcmlzZW4gdG8gYSBsZXZlbCBvZiBjb25jZXJuLlxyXG4gICAqL1xyXG4gIENvbmRpdGlvbjoge1xyXG4gICAgZGlzcGxheTogXCJDb25kaXRpb25cIixcclxuICAgIGNvZGU6IFwiQ29uZGl0aW9uXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNvdXJjZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29uc2VudDogQSByZWNvcmQgb2YgYSBoZWFsdGhjYXJlIGNvbnN1bWVy4oCZcyAgY2hvaWNlcywgd2hpY2ggcGVybWl0cyBvciBkZW5pZXMgaWRlbnRpZmllZCByZWNpcGllbnQocykgb3IgcmVjaXBpZW50IHJvbGUocykgdG8gcGVyZm9ybSBvbmUgb3IgbW9yZSBhY3Rpb25zIHdpdGhpbiBhIGdpdmVuIHBvbGljeSBjb250ZXh0LCBmb3Igc3BlY2lmaWMgcHVycG9zZXMgYW5kIHBlcmlvZHMgb2YgdGltZS5cclxuICAgKi9cclxuICBDb25zZW50OiB7XHJcbiAgICBkaXNwbGF5OiBcIkNvbnNlbnRcIixcclxuICAgIGNvZGU6IFwiQ29uc2VudFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVzb3VyY2UtdHlwZXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvbnRyYWN0OiBMZWdhbGx5IGVuZm9yY2VhYmxlLCBmb3JtYWxseSByZWNvcmRlZCB1bmlsYXRlcmFsIG9yIGJpbGF0ZXJhbCBkaXJlY3RpdmUgaS5lLiwgYSBwb2xpY3kgb3IgYWdyZWVtZW50LlxyXG4gICAqL1xyXG4gIENvbnRyYWN0OiB7XHJcbiAgICBkaXNwbGF5OiBcIkNvbnRyYWN0XCIsXHJcbiAgICBjb2RlOiBcIkNvbnRyYWN0XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNvdXJjZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ292ZXJhZ2U6IEZpbmFuY2lhbCBpbnN0cnVtZW50IHdoaWNoIG1heSBiZSB1c2VkIHRvIHJlaW1idXJzZSBvciBwYXkgZm9yIGhlYWx0aCBjYXJlIHByb2R1Y3RzIGFuZCBzZXJ2aWNlcy4gSW5jbHVkZXMgYm90aCBpbnN1cmFuY2UgYW5kIHNlbGYtcGF5bWVudC5cclxuICAgKi9cclxuICBDb3ZlcmFnZToge1xyXG4gICAgZGlzcGxheTogXCJDb3ZlcmFnZVwiLFxyXG4gICAgY29kZTogXCJDb3ZlcmFnZVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVzb3VyY2UtdHlwZXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvdmVyYWdlRWxpZ2liaWxpdHlSZXF1ZXN0OiBUaGUgQ292ZXJhZ2VFbGlnaWJpbGl0eVJlcXVlc3QgcHJvdmlkZXMgcGF0aWVudCBhbmQgaW5zdXJhbmNlIGNvdmVyYWdlIGluZm9ybWF0aW9uIHRvIGFuIGluc3VyZXIgZm9yIHRoZW0gdG8gcmVzcG9uZCwgaW4gdGhlIGZvcm0gb2YgYW4gQ292ZXJhZ2VFbGlnaWJpbGl0eVJlc3BvbnNlLCB3aXRoIGluZm9ybWF0aW9uIHJlZ2FyZGluZyB3aGV0aGVyIHRoZSBzdGF0ZWQgY292ZXJhZ2UgaXMgdmFsaWQgYW5kIGluLWZvcmNlIGFuZCBvcHRpb25hbGx5IHRvIHByb3ZpZGUgdGhlIGluc3VyYW5jZSBkZXRhaWxzIG9mIHRoZSBwb2xpY3kuXHJcbiAgICovXHJcbiAgQ292ZXJhZ2VFbGlnaWJpbGl0eVJlcXVlc3Q6IHtcclxuICAgIGRpc3BsYXk6IFwiQ292ZXJhZ2VFbGlnaWJpbGl0eVJlcXVlc3RcIixcclxuICAgIGNvZGU6IFwiQ292ZXJhZ2VFbGlnaWJpbGl0eVJlcXVlc3RcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc291cmNlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb3ZlcmFnZUVsaWdpYmlsaXR5UmVzcG9uc2U6IFRoaXMgcmVzb3VyY2UgcHJvdmlkZXMgZWxpZ2liaWxpdHkgYW5kIHBsYW4gZGV0YWlscyBmcm9tIHRoZSBwcm9jZXNzaW5nIG9mIGFuIENvdmVyYWdlRWxpZ2liaWxpdHlSZXF1ZXN0IHJlc291cmNlLlxyXG4gICAqL1xyXG4gIENvdmVyYWdlRWxpZ2liaWxpdHlSZXNwb25zZToge1xyXG4gICAgZGlzcGxheTogXCJDb3ZlcmFnZUVsaWdpYmlsaXR5UmVzcG9uc2VcIixcclxuICAgIGNvZGU6IFwiQ292ZXJhZ2VFbGlnaWJpbGl0eVJlc3BvbnNlXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNvdXJjZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogRGV0ZWN0ZWRJc3N1ZTogSW5kaWNhdGVzIGFuIGFjdHVhbCBvciBwb3RlbnRpYWwgY2xpbmljYWwgaXNzdWUgd2l0aCBvciBiZXR3ZWVuIG9uZSBvciBtb3JlIGFjdGl2ZSBvciBwcm9wb3NlZCBjbGluaWNhbCBhY3Rpb25zIGZvciBhIHBhdGllbnQ7IGUuZy4gRHJ1Zy1kcnVnIGludGVyYWN0aW9uLCBJbmVmZmVjdGl2ZSB0cmVhdG1lbnQgZnJlcXVlbmN5LCBQcm9jZWR1cmUtY29uZGl0aW9uIGNvbmZsaWN0LCBldGMuXHJcbiAgICovXHJcbiAgRGV0ZWN0ZWRJc3N1ZToge1xyXG4gICAgZGlzcGxheTogXCJEZXRlY3RlZElzc3VlXCIsXHJcbiAgICBjb2RlOiBcIkRldGVjdGVkSXNzdWVcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc291cmNlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBEZXZpY2U6IEEgdHlwZSBvZiBhIG1hbnVmYWN0dXJlZCBpdGVtIHRoYXQgaXMgdXNlZCBpbiB0aGUgcHJvdmlzaW9uIG9mIGhlYWx0aGNhcmUgd2l0aG91dCBiZWluZyBzdWJzdGFudGlhbGx5IGNoYW5nZWQgdGhyb3VnaCB0aGF0IGFjdGl2aXR5LiBUaGUgZGV2aWNlIG1heSBiZSBhIG1lZGljYWwgb3Igbm9uLW1lZGljYWwgZGV2aWNlLlxyXG4gICAqL1xyXG4gIERldmljZToge1xyXG4gICAgZGlzcGxheTogXCJEZXZpY2VcIixcclxuICAgIGNvZGU6IFwiRGV2aWNlXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNvdXJjZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogRGV2aWNlRGVmaW5pdGlvbjogVGhlIGNoYXJhY3RlcmlzdGljcywgb3BlcmF0aW9uYWwgc3RhdHVzIGFuZCBjYXBhYmlsaXRpZXMgb2YgYSBtZWRpY2FsLXJlbGF0ZWQgY29tcG9uZW50IG9mIGEgbWVkaWNhbCBkZXZpY2UuXHJcbiAgICovXHJcbiAgRGV2aWNlRGVmaW5pdGlvbjoge1xyXG4gICAgZGlzcGxheTogXCJEZXZpY2VEZWZpbml0aW9uXCIsXHJcbiAgICBjb2RlOiBcIkRldmljZURlZmluaXRpb25cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc291cmNlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBEZXZpY2VNZXRyaWM6IERlc2NyaWJlcyBhIG1lYXN1cmVtZW50LCBjYWxjdWxhdGlvbiBvciBzZXR0aW5nIGNhcGFiaWxpdHkgb2YgYSBtZWRpY2FsIGRldmljZS5cclxuICAgKi9cclxuICBEZXZpY2VNZXRyaWM6IHtcclxuICAgIGRpc3BsYXk6IFwiRGV2aWNlTWV0cmljXCIsXHJcbiAgICBjb2RlOiBcIkRldmljZU1ldHJpY1wiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVzb3VyY2UtdHlwZXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIERldmljZVJlcXVlc3Q6IFJlcHJlc2VudHMgYSByZXF1ZXN0IGZvciBhIHBhdGllbnQgdG8gZW1wbG95IGEgbWVkaWNhbCBkZXZpY2UuIFRoZSBkZXZpY2UgbWF5IGJlIGFuIGltcGxhbnRhYmxlIGRldmljZSwgb3IgYW4gZXh0ZXJuYWwgYXNzaXN0aXZlIGRldmljZSwgc3VjaCBhcyBhIHdhbGtlci5cclxuICAgKi9cclxuICBEZXZpY2VSZXF1ZXN0OiB7XHJcbiAgICBkaXNwbGF5OiBcIkRldmljZVJlcXVlc3RcIixcclxuICAgIGNvZGU6IFwiRGV2aWNlUmVxdWVzdFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVzb3VyY2UtdHlwZXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIERldmljZVVzZVN0YXRlbWVudDogQSByZWNvcmQgb2YgYSBkZXZpY2UgYmVpbmcgdXNlZCBieSBhIHBhdGllbnQgd2hlcmUgdGhlIHJlY29yZCBpcyB0aGUgcmVzdWx0IG9mIGEgcmVwb3J0IGZyb20gdGhlIHBhdGllbnQgb3IgYW5vdGhlciBjbGluaWNpYW4uXHJcbiAgICovXHJcbiAgRGV2aWNlVXNlU3RhdGVtZW50OiB7XHJcbiAgICBkaXNwbGF5OiBcIkRldmljZVVzZVN0YXRlbWVudFwiLFxyXG4gICAgY29kZTogXCJEZXZpY2VVc2VTdGF0ZW1lbnRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc291cmNlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBEaWFnbm9zdGljUmVwb3J0OiBUaGUgZmluZGluZ3MgYW5kIGludGVycHJldGF0aW9uIG9mIGRpYWdub3N0aWMgIHRlc3RzIHBlcmZvcm1lZCBvbiBwYXRpZW50cywgZ3JvdXBzIG9mIHBhdGllbnRzLCBkZXZpY2VzLCBhbmQgbG9jYXRpb25zLCBhbmQvb3Igc3BlY2ltZW5zIGRlcml2ZWQgZnJvbSB0aGVzZS4gVGhlIHJlcG9ydCBpbmNsdWRlcyBjbGluaWNhbCBjb250ZXh0IHN1Y2ggYXMgcmVxdWVzdGluZyBhbmQgcHJvdmlkZXIgaW5mb3JtYXRpb24sIGFuZCBzb21lIG1peCBvZiBhdG9taWMgcmVzdWx0cywgaW1hZ2VzLCB0ZXh0dWFsIGFuZCBjb2RlZCBpbnRlcnByZXRhdGlvbnMsIGFuZCBmb3JtYXR0ZWQgcmVwcmVzZW50YXRpb24gb2YgZGlhZ25vc3RpYyByZXBvcnRzLlxyXG4gICAqL1xyXG4gIERpYWdub3N0aWNSZXBvcnQ6IHtcclxuICAgIGRpc3BsYXk6IFwiRGlhZ25vc3RpY1JlcG9ydFwiLFxyXG4gICAgY29kZTogXCJEaWFnbm9zdGljUmVwb3J0XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNvdXJjZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogRG9jdW1lbnRNYW5pZmVzdDogQSBjb2xsZWN0aW9uIG9mIGRvY3VtZW50cyBjb21waWxlZCBmb3IgYSBwdXJwb3NlIHRvZ2V0aGVyIHdpdGggbWV0YWRhdGEgdGhhdCBhcHBsaWVzIHRvIHRoZSBjb2xsZWN0aW9uLlxyXG4gICAqL1xyXG4gIERvY3VtZW50TWFuaWZlc3Q6IHtcclxuICAgIGRpc3BsYXk6IFwiRG9jdW1lbnRNYW5pZmVzdFwiLFxyXG4gICAgY29kZTogXCJEb2N1bWVudE1hbmlmZXN0XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNvdXJjZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogRG9jdW1lbnRSZWZlcmVuY2U6IEEgcmVmZXJlbmNlIHRvIGEgZG9jdW1lbnQgb2YgYW55IGtpbmQgZm9yIGFueSBwdXJwb3NlLiBQcm92aWRlcyBtZXRhZGF0YSBhYm91dCB0aGUgZG9jdW1lbnQgc28gdGhhdCB0aGUgZG9jdW1lbnQgY2FuIGJlIGRpc2NvdmVyZWQgYW5kIG1hbmFnZWQuIFRoZSBzY29wZSBvZiBhIGRvY3VtZW50IGlzIGFueSBzZXJhbGl6ZWQgb2JqZWN0IHdpdGggYSBtaW1lLXR5cGUsIHNvIGluY2x1ZGVzIGZvcm1hbCBwYXRpZW50IGNlbnRyaWMgZG9jdW1lbnRzIChDREEpLCBjbGlpY2FsIG5vdGVzLCBzY2FubmVkIHBhcGVyLCBhbmQgbm9uLXBhdGllbnQgc3BlY2lmaWMgZG9jdW1lbnRzIGxpa2UgcG9saWN5IHRleHQuXHJcbiAgICovXHJcbiAgRG9jdW1lbnRSZWZlcmVuY2U6IHtcclxuICAgIGRpc3BsYXk6IFwiRG9jdW1lbnRSZWZlcmVuY2VcIixcclxuICAgIGNvZGU6IFwiRG9jdW1lbnRSZWZlcmVuY2VcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc291cmNlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBEb21haW5SZXNvdXJjZTogLS0tIEFic3RyYWN0IFR5cGUhIC0tLUEgcmVzb3VyY2UgdGhhdCBpbmNsdWRlcyBuYXJyYXRpdmUsIGV4dGVuc2lvbnMsIGFuZCBjb250YWluZWQgcmVzb3VyY2VzLlxyXG4gICAqL1xyXG4gIERvbWFpblJlc291cmNlOiB7XHJcbiAgICBkaXNwbGF5OiBcIkRvbWFpblJlc291cmNlXCIsXHJcbiAgICBjb2RlOiBcIkRvbWFpblJlc291cmNlXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNvdXJjZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogRW5jb3VudGVyOiBBbiBpbnRlcmFjdGlvbiBiZXR3ZWVuIGEgcGF0aWVudCBhbmQgaGVhbHRoY2FyZSBwcm92aWRlcihzKSBmb3IgdGhlIHB1cnBvc2Ugb2YgcHJvdmlkaW5nIGhlYWx0aGNhcmUgc2VydmljZShzKSBvciBhc3Nlc3NpbmcgdGhlIGhlYWx0aCBzdGF0dXMgb2YgYSBwYXRpZW50LlxyXG4gICAqL1xyXG4gIEVuY291bnRlcjoge1xyXG4gICAgZGlzcGxheTogXCJFbmNvdW50ZXJcIixcclxuICAgIGNvZGU6IFwiRW5jb3VudGVyXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNvdXJjZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogRW5kcG9pbnQ6IFRoZSB0ZWNobmljYWwgZGV0YWlscyBvZiBhbiBlbmRwb2ludCB0aGF0IGNhbiBiZSB1c2VkIGZvciBlbGVjdHJvbmljIHNlcnZpY2VzLCBzdWNoIGFzIGZvciB3ZWIgc2VydmljZXMgcHJvdmlkaW5nIFhEUy5iIG9yIGEgUkVTVCBlbmRwb2ludCBmb3IgYW5vdGhlciBGSElSIHNlcnZlci4gVGhpcyBtYXkgaW5jbHVkZSBhbnkgc2VjdXJpdHkgY29udGV4dCBpbmZvcm1hdGlvbi5cclxuICAgKi9cclxuICBFbmRwb2ludDoge1xyXG4gICAgZGlzcGxheTogXCJFbmRwb2ludFwiLFxyXG4gICAgY29kZTogXCJFbmRwb2ludFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVzb3VyY2UtdHlwZXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIEVucm9sbG1lbnRSZXF1ZXN0OiBUaGlzIHJlc291cmNlIHByb3ZpZGVzIHRoZSBpbnN1cmFuY2UgZW5yb2xsbWVudCBkZXRhaWxzIHRvIHRoZSBpbnN1cmVyIHJlZ2FyZGluZyBhIHNwZWNpZmllZCBjb3ZlcmFnZS5cclxuICAgKi9cclxuICBFbnJvbGxtZW50UmVxdWVzdDoge1xyXG4gICAgZGlzcGxheTogXCJFbnJvbGxtZW50UmVxdWVzdFwiLFxyXG4gICAgY29kZTogXCJFbnJvbGxtZW50UmVxdWVzdFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVzb3VyY2UtdHlwZXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIEVucm9sbG1lbnRSZXNwb25zZTogVGhpcyByZXNvdXJjZSBwcm92aWRlcyBlbnJvbGxtZW50IGFuZCBwbGFuIGRldGFpbHMgZnJvbSB0aGUgcHJvY2Vzc2luZyBvZiBhbiBFbnJvbGxtZW50UmVxdWVzdCByZXNvdXJjZS5cclxuICAgKi9cclxuICBFbnJvbGxtZW50UmVzcG9uc2U6IHtcclxuICAgIGRpc3BsYXk6IFwiRW5yb2xsbWVudFJlc3BvbnNlXCIsXHJcbiAgICBjb2RlOiBcIkVucm9sbG1lbnRSZXNwb25zZVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVzb3VyY2UtdHlwZXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIEVwaXNvZGVPZkNhcmU6IEFuIGFzc29jaWF0aW9uIGJldHdlZW4gYSBwYXRpZW50IGFuZCBhbiBvcmdhbml6YXRpb24gLyBoZWFsdGhjYXJlIHByb3ZpZGVyKHMpIGR1cmluZyB3aGljaCB0aW1lIGVuY291bnRlcnMgbWF5IG9jY3VyLiBUaGUgbWFuYWdpbmcgb3JnYW5pemF0aW9uIGFzc3VtZXMgYSBsZXZlbCBvZiByZXNwb25zaWJpbGl0eSBmb3IgdGhlIHBhdGllbnQgZHVyaW5nIHRoaXMgdGltZS5cclxuICAgKi9cclxuICBFcGlzb2RlT2ZDYXJlOiB7XHJcbiAgICBkaXNwbGF5OiBcIkVwaXNvZGVPZkNhcmVcIixcclxuICAgIGNvZGU6IFwiRXBpc29kZU9mQ2FyZVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVzb3VyY2UtdHlwZXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIEV2ZW50RGVmaW5pdGlvbjogVGhlIEV2ZW50RGVmaW5pdGlvbiByZXNvdXJjZSBwcm92aWRlcyBhIHJldXNhYmxlIGRlc2NyaXB0aW9uIG9mIHdoZW4gYSBwYXJ0aWN1bGFyIGV2ZW50IGNhbiBvY2N1ci5cclxuICAgKi9cclxuICBFdmVudERlZmluaXRpb246IHtcclxuICAgIGRpc3BsYXk6IFwiRXZlbnREZWZpbml0aW9uXCIsXHJcbiAgICBjb2RlOiBcIkV2ZW50RGVmaW5pdGlvblwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVzb3VyY2UtdHlwZXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIEV2aWRlbmNlOiBUaGUgRXZpZGVuY2UgUmVzb3VyY2UgcHJvdmlkZXMgYSBtYWNoaW5lLWludGVycHJldGFibGUgZXhwcmVzc2lvbiBvZiBhbiBldmlkZW5jZSBjb25jZXB0IGluY2x1ZGluZyB0aGUgZXZpZGVuY2UgdmFyaWFibGVzIChlZyBwb3B1bGF0aW9uLCBleHBvc3VyZXMvaW50ZXJ2ZW50aW9ucywgY29tcGFyYXRvcnMsIG91dGNvbWVzLCBtZWFzdXJlZCB2YXJpYWJsZXMsIGNvbmZvdW5kaW5nIHZhcmlhYmxlcyksIHRoZSBzdGF0aXN0aWNzLCBhbmQgdGhlIGNlcnRhaW50eSBvZiB0aGlzIGV2aWRlbmNlLlxyXG4gICAqL1xyXG4gIEV2aWRlbmNlOiB7XHJcbiAgICBkaXNwbGF5OiBcIkV2aWRlbmNlXCIsXHJcbiAgICBjb2RlOiBcIkV2aWRlbmNlXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNvdXJjZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogRXZpZGVuY2VSZXBvcnQ6IFRoZSBFdmlkZW5jZVJlcG9ydCBSZXNvdXJjZSBpcyBhIHNwZWNpYWxpemVkIGNvbnRhaW5lciBmb3IgYSBjb2xsZWN0aW9uIG9mIHJlc291cmNlcyBhbmQgY29kYWJsZSBjb25jZXB0cywgYWRhcHRlZCB0byBzdXBwb3J0IGNvbXBvc2l0aW9ucyBvZiBFdmlkZW5jZSwgRXZpZGVuY2VWYXJpYWJsZSwgYW5kIENpdGF0aW9uIHJlc291cmNlcyBhbmQgcmVsYXRlZCBjb25jZXB0cy5cclxuICAgKi9cclxuICBFdmlkZW5jZVJlcG9ydDoge1xyXG4gICAgZGlzcGxheTogXCJFdmlkZW5jZVJlcG9ydFwiLFxyXG4gICAgY29kZTogXCJFdmlkZW5jZVJlcG9ydFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVzb3VyY2UtdHlwZXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIEV2aWRlbmNlVmFyaWFibGU6IFRoZSBFdmlkZW5jZVZhcmlhYmxlIHJlc291cmNlIGRlc2NyaWJlcyBhbiBlbGVtZW50IHRoYXQga25vd2xlZGdlIChFdmlkZW5jZSkgaXMgYWJvdXQuXHJcbiAgICovXHJcbiAgRXZpZGVuY2VWYXJpYWJsZToge1xyXG4gICAgZGlzcGxheTogXCJFdmlkZW5jZVZhcmlhYmxlXCIsXHJcbiAgICBjb2RlOiBcIkV2aWRlbmNlVmFyaWFibGVcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc291cmNlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBFeGFtcGxlU2NlbmFyaW86IEV4YW1wbGUgb2Ygd29ya2Zsb3cgaW5zdGFuY2UuXHJcbiAgICovXHJcbiAgRXhhbXBsZVNjZW5hcmlvOiB7XHJcbiAgICBkaXNwbGF5OiBcIkV4YW1wbGVTY2VuYXJpb1wiLFxyXG4gICAgY29kZTogXCJFeGFtcGxlU2NlbmFyaW9cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc291cmNlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBFeHBsYW5hdGlvbk9mQmVuZWZpdDogVGhpcyByZXNvdXJjZSBwcm92aWRlczogdGhlIGNsYWltIGRldGFpbHM7IGFkanVkaWNhdGlvbiBkZXRhaWxzIGZyb20gdGhlIHByb2Nlc3Npbmcgb2YgYSBDbGFpbTsgYW5kIG9wdGlvbmFsbHkgYWNjb3VudCBiYWxhbmNlIGluZm9ybWF0aW9uLCBmb3IgaW5mb3JtaW5nIHRoZSBzdWJzY3JpYmVyIG9mIHRoZSBiZW5lZml0cyBwcm92aWRlZC5cclxuICAgKi9cclxuICBFeHBsYW5hdGlvbk9mQmVuZWZpdDoge1xyXG4gICAgZGlzcGxheTogXCJFeHBsYW5hdGlvbk9mQmVuZWZpdFwiLFxyXG4gICAgY29kZTogXCJFeHBsYW5hdGlvbk9mQmVuZWZpdFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVzb3VyY2UtdHlwZXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIEZhbWlseU1lbWJlckhpc3Rvcnk6IFNpZ25pZmljYW50IGhlYWx0aCBjb25kaXRpb25zIGZvciBhIHBlcnNvbiByZWxhdGVkIHRvIHRoZSBwYXRpZW50IHJlbGV2YW50IGluIHRoZSBjb250ZXh0IG9mIGNhcmUgZm9yIHRoZSBwYXRpZW50LlxyXG4gICAqL1xyXG4gIEZhbWlseU1lbWJlckhpc3Rvcnk6IHtcclxuICAgIGRpc3BsYXk6IFwiRmFtaWx5TWVtYmVySGlzdG9yeVwiLFxyXG4gICAgY29kZTogXCJGYW1pbHlNZW1iZXJIaXN0b3J5XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNvdXJjZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogRmxhZzogUHJvc3BlY3RpdmUgd2FybmluZ3Mgb2YgcG90ZW50aWFsIGlzc3VlcyB3aGVuIHByb3ZpZGluZyBjYXJlIHRvIHRoZSBwYXRpZW50LlxyXG4gICAqL1xyXG4gIEZsYWc6IHtcclxuICAgIGRpc3BsYXk6IFwiRmxhZ1wiLFxyXG4gICAgY29kZTogXCJGbGFnXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNvdXJjZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogR29hbDogRGVzY3JpYmVzIHRoZSBpbnRlbmRlZCBvYmplY3RpdmUocykgZm9yIGEgcGF0aWVudCwgZ3JvdXAgb3Igb3JnYW5pemF0aW9uIGNhcmUsIGZvciBleGFtcGxlLCB3ZWlnaHQgbG9zcywgcmVzdG9yaW5nIGFuIGFjdGl2aXR5IG9mIGRhaWx5IGxpdmluZywgb2J0YWluaW5nIGhlcmQgaW1tdW5pdHkgdmlhIGltbXVuaXphdGlvbiwgbWVldGluZyBhIHByb2Nlc3MgaW1wcm92ZW1lbnQgb2JqZWN0aXZlLCBldGMuXHJcbiAgICovXHJcbiAgR29hbDoge1xyXG4gICAgZGlzcGxheTogXCJHb2FsXCIsXHJcbiAgICBjb2RlOiBcIkdvYWxcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc291cmNlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBHcmFwaERlZmluaXRpb246IEEgZm9ybWFsIGNvbXB1dGFibGUgZGVmaW5pdGlvbiBvZiBhIGdyYXBoIG9mIHJlc291cmNlcyAtIHRoYXQgaXMsIGEgY29oZXJlbnQgc2V0IG9mIHJlc291cmNlcyB0aGF0IGZvcm0gYSBncmFwaCBieSBmb2xsb3dpbmcgcmVmZXJlbmNlcy4gVGhlIEdyYXBoIERlZmluaXRpb24gcmVzb3VyY2UgZGVmaW5lcyBhIHNldCBhbmQgbWFrZXMgcnVsZXMgYWJvdXQgdGhlIHNldC5cclxuICAgKi9cclxuICBHcmFwaERlZmluaXRpb246IHtcclxuICAgIGRpc3BsYXk6IFwiR3JhcGhEZWZpbml0aW9uXCIsXHJcbiAgICBjb2RlOiBcIkdyYXBoRGVmaW5pdGlvblwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVzb3VyY2UtdHlwZXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIEdyb3VwOiBSZXByZXNlbnRzIGEgZGVmaW5lZCBjb2xsZWN0aW9uIG9mIGVudGl0aWVzIHRoYXQgbWF5IGJlIGRpc2N1c3NlZCBvciBhY3RlZCB1cG9uIGNvbGxlY3RpdmVseSBidXQgd2hpY2ggYXJlIG5vdCBleHBlY3RlZCB0byBhY3QgY29sbGVjdGl2ZWx5LCBhbmQgYXJlIG5vdCBmb3JtYWxseSBvciBsZWdhbGx5IHJlY29nbml6ZWQ7IGkuZS4gYSBjb2xsZWN0aW9uIG9mIGVudGl0aWVzIHRoYXQgaXNuJ3QgYW4gT3JnYW5pemF0aW9uLlxyXG4gICAqL1xyXG4gIEdyb3VwOiB7XHJcbiAgICBkaXNwbGF5OiBcIkdyb3VwXCIsXHJcbiAgICBjb2RlOiBcIkdyb3VwXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNvdXJjZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogR3VpZGFuY2VSZXNwb25zZTogQSBndWlkYW5jZSByZXNwb25zZSBpcyB0aGUgZm9ybWFsIHJlc3BvbnNlIHRvIGEgZ3VpZGFuY2UgcmVxdWVzdCwgaW5jbHVkaW5nIGFueSBvdXRwdXQgcGFyYW1ldGVycyByZXR1cm5lZCBieSB0aGUgZXZhbHVhdGlvbiwgYXMgd2VsbCBhcyB0aGUgZGVzY3JpcHRpb24gb2YgYW55IHByb3Bvc2VkIGFjdGlvbnMgdG8gYmUgdGFrZW4uXHJcbiAgICovXHJcbiAgR3VpZGFuY2VSZXNwb25zZToge1xyXG4gICAgZGlzcGxheTogXCJHdWlkYW5jZVJlc3BvbnNlXCIsXHJcbiAgICBjb2RlOiBcIkd1aWRhbmNlUmVzcG9uc2VcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc291cmNlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBIZWFsdGhjYXJlU2VydmljZTogVGhlIGRldGFpbHMgb2YgYSBoZWFsdGhjYXJlIHNlcnZpY2UgYXZhaWxhYmxlIGF0IGEgbG9jYXRpb24uXHJcbiAgICovXHJcbiAgSGVhbHRoY2FyZVNlcnZpY2U6IHtcclxuICAgIGRpc3BsYXk6IFwiSGVhbHRoY2FyZVNlcnZpY2VcIixcclxuICAgIGNvZGU6IFwiSGVhbHRoY2FyZVNlcnZpY2VcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc291cmNlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiBodHRwOi8vaGw3Lm9yZy9maGlyL1N0cnVjdHVyZURlZmluaXRpb24vbGlwaWRwcm9maWxlXHJcbiAgICovXHJcbiAgTGlwaWRMYWJSZXBvcnQ6IHtcclxuICAgIGRpc3BsYXk6IFwiTGlwaWQgTGFiIFJlcG9ydFwiLFxyXG4gICAgY29kZTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL1N0cnVjdHVyZURlZmluaXRpb24vbGlwaWRwcm9maWxlXCIsXHJcbiAgICBzeXN0ZW06IFwidXJuOmlldGY6cmZjOjM5ODZcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIEltYWdpbmdTdHVkeTogUmVwcmVzZW50YXRpb24gb2YgdGhlIGNvbnRlbnQgcHJvZHVjZWQgaW4gYSBESUNPTSBpbWFnaW5nIHN0dWR5LiBBIHN0dWR5IGNvbXByaXNlcyBhIHNldCBvZiBzZXJpZXMsIGVhY2ggb2Ygd2hpY2ggaW5jbHVkZXMgYSBzZXQgb2YgU2VydmljZS1PYmplY3QgUGFpciBJbnN0YW5jZXMgKFNPUCBJbnN0YW5jZXMgLSBpbWFnZXMgb3Igb3RoZXIgZGF0YSkgYWNxdWlyZWQgb3IgcHJvZHVjZWQgaW4gYSBjb21tb24gY29udGV4dC4gIEEgc2VyaWVzIGlzIG9mIG9ubHkgb25lIG1vZGFsaXR5IChlLmcuIFgtcmF5LCBDVCwgTVIsIHVsdHJhc291bmQpLCBidXQgYSBzdHVkeSBtYXkgaGF2ZSBtdWx0aXBsZSBzZXJpZXMgb2YgZGlmZmVyZW50IG1vZGFsaXRpZXMuXHJcbiAgICovXHJcbiAgSW1hZ2luZ1N0dWR5OiB7XHJcbiAgICBkaXNwbGF5OiBcIkltYWdpbmdTdHVkeVwiLFxyXG4gICAgY29kZTogXCJJbWFnaW5nU3R1ZHlcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc291cmNlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBJbW11bml6YXRpb246IERlc2NyaWJlcyB0aGUgZXZlbnQgb2YgYSBwYXRpZW50IGJlaW5nIGFkbWluaXN0ZXJlZCBhIHZhY2NpbmUgb3IgYSByZWNvcmQgb2YgYW4gaW1tdW5pemF0aW9uIGFzIHJlcG9ydGVkIGJ5IGEgcGF0aWVudCwgYSBjbGluaWNpYW4gb3IgYW5vdGhlciBwYXJ0eS5cclxuICAgKi9cclxuICBJbW11bml6YXRpb246IHtcclxuICAgIGRpc3BsYXk6IFwiSW1tdW5pemF0aW9uXCIsXHJcbiAgICBjb2RlOiBcIkltbXVuaXphdGlvblwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVzb3VyY2UtdHlwZXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIEltbXVuaXphdGlvbkV2YWx1YXRpb246IERlc2NyaWJlcyBhIGNvbXBhcmlzb24gb2YgYW4gaW1tdW5pemF0aW9uIGV2ZW50IGFnYWluc3QgcHVibGlzaGVkIHJlY29tbWVuZGF0aW9ucyB0byBkZXRlcm1pbmUgaWYgdGhlIGFkbWluaXN0cmF0aW9uIGlzIFwidmFsaWRcIiBpbiByZWxhdGlvbiB0byB0aG9zZSAgcmVjb21tZW5kYXRpb25zLlxyXG4gICAqL1xyXG4gIEltbXVuaXphdGlvbkV2YWx1YXRpb246IHtcclxuICAgIGRpc3BsYXk6IFwiSW1tdW5pemF0aW9uRXZhbHVhdGlvblwiLFxyXG4gICAgY29kZTogXCJJbW11bml6YXRpb25FdmFsdWF0aW9uXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNvdXJjZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogSW1tdW5pemF0aW9uUmVjb21tZW5kYXRpb246IEEgcGF0aWVudCdzIHBvaW50LWluLXRpbWUgc2V0IG9mIHJlY29tbWVuZGF0aW9ucyAoaS5lLiBmb3JlY2FzdGluZykgYWNjb3JkaW5nIHRvIGEgcHVibGlzaGVkIHNjaGVkdWxlIHdpdGggb3B0aW9uYWwgc3VwcG9ydGluZyBqdXN0aWZpY2F0aW9uLlxyXG4gICAqL1xyXG4gIEltbXVuaXphdGlvblJlY29tbWVuZGF0aW9uOiB7XHJcbiAgICBkaXNwbGF5OiBcIkltbXVuaXphdGlvblJlY29tbWVuZGF0aW9uXCIsXHJcbiAgICBjb2RlOiBcIkltbXVuaXphdGlvblJlY29tbWVuZGF0aW9uXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNvdXJjZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogSW1wbGVtZW50YXRpb25HdWlkZTogQSBzZXQgb2YgcnVsZXMgb2YgaG93IGEgcGFydGljdWxhciBpbnRlcm9wZXJhYmlsaXR5IG9yIHN0YW5kYXJkcyBwcm9ibGVtIGlzIHNvbHZlZCAtIHR5cGljYWxseSB0aHJvdWdoIHRoZSB1c2Ugb2YgRkhJUiByZXNvdXJjZXMuIFRoaXMgcmVzb3VyY2UgaXMgdXNlZCB0byBnYXRoZXIgYWxsIHRoZSBwYXJ0cyBvZiBhbiBpbXBsZW1lbnRhdGlvbiBndWlkZSBpbnRvIGEgbG9naWNhbCB3aG9sZSBhbmQgdG8gcHVibGlzaCBhIGNvbXB1dGFibGUgZGVmaW5pdGlvbiBvZiBhbGwgdGhlIHBhcnRzLlxyXG4gICAqL1xyXG4gIEltcGxlbWVudGF0aW9uR3VpZGU6IHtcclxuICAgIGRpc3BsYXk6IFwiSW1wbGVtZW50YXRpb25HdWlkZVwiLFxyXG4gICAgY29kZTogXCJJbXBsZW1lbnRhdGlvbkd1aWRlXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNvdXJjZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogSW5ncmVkaWVudDogQW4gaW5ncmVkaWVudCBvZiBhIG1hbnVmYWN0dXJlZCBpdGVtIG9yIHBoYXJtYWNldXRpY2FsIHByb2R1Y3QuXHJcbiAgICovXHJcbiAgSW5ncmVkaWVudDoge1xyXG4gICAgZGlzcGxheTogXCJJbmdyZWRpZW50XCIsXHJcbiAgICBjb2RlOiBcIkluZ3JlZGllbnRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc291cmNlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBJbnN1cmFuY2VQbGFuOiBEZXRhaWxzIG9mIGEgSGVhbHRoIEluc3VyYW5jZSBwcm9kdWN0L3BsYW4gcHJvdmlkZWQgYnkgYW4gb3JnYW5pemF0aW9uLlxyXG4gICAqL1xyXG4gIEluc3VyYW5jZVBsYW46IHtcclxuICAgIGRpc3BsYXk6IFwiSW5zdXJhbmNlUGxhblwiLFxyXG4gICAgY29kZTogXCJJbnN1cmFuY2VQbGFuXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNvdXJjZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogSW52b2ljZTogSW52b2ljZSBjb250YWluaW5nIGNvbGxlY3RlZCBDaGFyZ2VJdGVtcyBmcm9tIGFuIEFjY291bnQgd2l0aCBjYWxjdWxhdGVkIGluZGl2aWR1YWwgYW5kIHRvdGFsIHByaWNlIGZvciBCaWxsaW5nIHB1cnBvc2UuXHJcbiAgICovXHJcbiAgSW52b2ljZToge1xyXG4gICAgZGlzcGxheTogXCJJbnZvaWNlXCIsXHJcbiAgICBjb2RlOiBcIkludm9pY2VcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc291cmNlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBMaWJyYXJ5OiBUaGUgTGlicmFyeSByZXNvdXJjZSBpcyBhIGdlbmVyYWwtcHVycG9zZSBjb250YWluZXIgZm9yIGtub3dsZWRnZSBhc3NldCBkZWZpbml0aW9ucy4gSXQgY2FuIGJlIHVzZWQgdG8gZGVzY3JpYmUgYW5kIGV4cG9zZSBleGlzdGluZyBrbm93bGVkZ2UgYXNzZXRzIHN1Y2ggYXMgbG9naWMgbGlicmFyaWVzIGFuZCBpbmZvcm1hdGlvbiBtb2RlbCBkZXNjcmlwdGlvbnMsIGFzIHdlbGwgYXMgdG8gZGVzY3JpYmUgYSBjb2xsZWN0aW9uIG9mIGtub3dsZWRnZSBhc3NldHMuXHJcbiAgICovXHJcbiAgTGlicmFyeToge1xyXG4gICAgZGlzcGxheTogXCJMaWJyYXJ5XCIsXHJcbiAgICBjb2RlOiBcIkxpYnJhcnlcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc291cmNlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBMaW5rYWdlOiBJZGVudGlmaWVzIHR3byBvciBtb3JlIHJlY29yZHMgKHJlc291cmNlIGluc3RhbmNlcykgdGhhdCByZWZlciB0byB0aGUgc2FtZSByZWFsLXdvcmxkIFwib2NjdXJyZW5jZVwiLlxyXG4gICAqL1xyXG4gIExpbmthZ2U6IHtcclxuICAgIGRpc3BsYXk6IFwiTGlua2FnZVwiLFxyXG4gICAgY29kZTogXCJMaW5rYWdlXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNvdXJjZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogTGlzdDogQSBsaXN0IGlzIGEgY3VyYXRlZCBjb2xsZWN0aW9uIG9mIHJlc291cmNlcy5cclxuICAgKi9cclxuICBMaXN0OiB7XHJcbiAgICBkaXNwbGF5OiBcIkxpc3RcIixcclxuICAgIGNvZGU6IFwiTGlzdFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVzb3VyY2UtdHlwZXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIExvY2F0aW9uOiBEZXRhaWxzIGFuZCBwb3NpdGlvbiBpbmZvcm1hdGlvbiBmb3IgYSBwaHlzaWNhbCBwbGFjZSB3aGVyZSBzZXJ2aWNlcyBhcmUgcHJvdmlkZWQgYW5kIHJlc291cmNlcyBhbmQgcGFydGljaXBhbnRzIG1heSBiZSBzdG9yZWQsIGZvdW5kLCBjb250YWluZWQsIG9yIGFjY29tbW9kYXRlZC5cclxuICAgKi9cclxuICBMb2NhdGlvbjoge1xyXG4gICAgZGlzcGxheTogXCJMb2NhdGlvblwiLFxyXG4gICAgY29kZTogXCJMb2NhdGlvblwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVzb3VyY2UtdHlwZXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIE1hbnVmYWN0dXJlZEl0ZW1EZWZpbml0aW9uOiBUaGUgZGVmaW5pdGlvbiBhbmQgY2hhcmFjdGVyaXN0aWNzIG9mIGEgbWVkaWNpbmFsIG1hbnVmYWN0dXJlZCBpdGVtLCBzdWNoIGFzIGEgdGFibGV0IG9yIGNhcHN1bGUsIGFzIGNvbnRhaW5lZCBpbiBhIHBhY2thZ2VkIG1lZGljaW5hbCBwcm9kdWN0LlxyXG4gICAqL1xyXG4gIE1hbnVmYWN0dXJlZEl0ZW1EZWZpbml0aW9uOiB7XHJcbiAgICBkaXNwbGF5OiBcIk1hbnVmYWN0dXJlZEl0ZW1EZWZpbml0aW9uXCIsXHJcbiAgICBjb2RlOiBcIk1hbnVmYWN0dXJlZEl0ZW1EZWZpbml0aW9uXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNvdXJjZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogTWVhc3VyZTogVGhlIE1lYXN1cmUgcmVzb3VyY2UgcHJvdmlkZXMgdGhlIGRlZmluaXRpb24gb2YgYSBxdWFsaXR5IG1lYXN1cmUuXHJcbiAgICovXHJcbiAgTWVhc3VyZToge1xyXG4gICAgZGlzcGxheTogXCJNZWFzdXJlXCIsXHJcbiAgICBjb2RlOiBcIk1lYXN1cmVcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc291cmNlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBNZWFzdXJlUmVwb3J0OiBUaGUgTWVhc3VyZVJlcG9ydCByZXNvdXJjZSBjb250YWlucyB0aGUgcmVzdWx0cyBvZiB0aGUgY2FsY3VsYXRpb24gb2YgYSBtZWFzdXJlOyBhbmQgb3B0aW9uYWxseSBhIHJlZmVyZW5jZSB0byB0aGUgcmVzb3VyY2VzIGludm9sdmVkIGluIHRoYXQgY2FsY3VsYXRpb24uXHJcbiAgICovXHJcbiAgTWVhc3VyZVJlcG9ydDoge1xyXG4gICAgZGlzcGxheTogXCJNZWFzdXJlUmVwb3J0XCIsXHJcbiAgICBjb2RlOiBcIk1lYXN1cmVSZXBvcnRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc291cmNlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBNZWRpYTogQSBwaG90bywgdmlkZW8sIG9yIGF1ZGlvIHJlY29yZGluZyBhY3F1aXJlZCBvciB1c2VkIGluIGhlYWx0aGNhcmUuIFRoZSBhY3R1YWwgY29udGVudCBtYXkgYmUgaW5saW5lIG9yIHByb3ZpZGVkIGJ5IGRpcmVjdCByZWZlcmVuY2UuXHJcbiAgICovXHJcbiAgTWVkaWE6IHtcclxuICAgIGRpc3BsYXk6IFwiTWVkaWFcIixcclxuICAgIGNvZGU6IFwiTWVkaWFcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc291cmNlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBNZWRpY2F0aW9uOiBUaGlzIHJlc291cmNlIGlzIHByaW1hcmlseSB1c2VkIGZvciB0aGUgaWRlbnRpZmljYXRpb24gYW5kIGRlZmluaXRpb24gb2YgYSBtZWRpY2F0aW9uIGZvciB0aGUgcHVycG9zZXMgb2YgcHJlc2NyaWJpbmcsIGRpc3BlbnNpbmcsIGFuZCBhZG1pbmlzdGVyaW5nIGEgbWVkaWNhdGlvbiBhcyB3ZWxsIGFzIGZvciBtYWtpbmcgc3RhdGVtZW50cyBhYm91dCBtZWRpY2F0aW9uIHVzZS5cclxuICAgKi9cclxuICBNZWRpY2F0aW9uOiB7XHJcbiAgICBkaXNwbGF5OiBcIk1lZGljYXRpb25cIixcclxuICAgIGNvZGU6IFwiTWVkaWNhdGlvblwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVzb3VyY2UtdHlwZXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIE1lZGljYXRpb25BZG1pbmlzdHJhdGlvbjogRGVzY3JpYmVzIHRoZSBldmVudCBvZiBhIHBhdGllbnQgY29uc3VtaW5nIG9yIG90aGVyd2lzZSBiZWluZyBhZG1pbmlzdGVyZWQgYSBtZWRpY2F0aW9uLiAgVGhpcyBtYXkgYmUgYXMgc2ltcGxlIGFzIHN3YWxsb3dpbmcgYSB0YWJsZXQgb3IgaXQgbWF5IGJlIGEgbG9uZyBydW5uaW5nIGluZnVzaW9uLiAgUmVsYXRlZCByZXNvdXJjZXMgdGllIHRoaXMgZXZlbnQgdG8gdGhlIGF1dGhvcml6aW5nIHByZXNjcmlwdGlvbiwgYW5kIHRoZSBzcGVjaWZpYyBlbmNvdW50ZXIgYmV0d2VlbiBwYXRpZW50IGFuZCBoZWFsdGggY2FyZSBwcmFjdGl0aW9uZXIuXHJcbiAgICovXHJcbiAgTWVkaWNhdGlvbkFkbWluaXN0cmF0aW9uOiB7XHJcbiAgICBkaXNwbGF5OiBcIk1lZGljYXRpb25BZG1pbmlzdHJhdGlvblwiLFxyXG4gICAgY29kZTogXCJNZWRpY2F0aW9uQWRtaW5pc3RyYXRpb25cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc291cmNlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBNZWRpY2F0aW9uRGlzcGVuc2U6IEluZGljYXRlcyB0aGF0IGEgbWVkaWNhdGlvbiBwcm9kdWN0IGlzIHRvIGJlIG9yIGhhcyBiZWVuIGRpc3BlbnNlZCBmb3IgYSBuYW1lZCBwZXJzb24vcGF0aWVudC4gIFRoaXMgaW5jbHVkZXMgYSBkZXNjcmlwdGlvbiBvZiB0aGUgbWVkaWNhdGlvbiBwcm9kdWN0IChzdXBwbHkpIHByb3ZpZGVkIGFuZCB0aGUgaW5zdHJ1Y3Rpb25zIGZvciBhZG1pbmlzdGVyaW5nIHRoZSBtZWRpY2F0aW9uLiAgVGhlIG1lZGljYXRpb24gZGlzcGVuc2UgaXMgdGhlIHJlc3VsdCBvZiBhIHBoYXJtYWN5IHN5c3RlbSByZXNwb25kaW5nIHRvIGEgbWVkaWNhdGlvbiBvcmRlci5cclxuICAgKi9cclxuICBNZWRpY2F0aW9uRGlzcGVuc2U6IHtcclxuICAgIGRpc3BsYXk6IFwiTWVkaWNhdGlvbkRpc3BlbnNlXCIsXHJcbiAgICBjb2RlOiBcIk1lZGljYXRpb25EaXNwZW5zZVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVzb3VyY2UtdHlwZXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIE1lZGljYXRpb25Lbm93bGVkZ2U6IEluZm9ybWF0aW9uIGFib3V0IGEgbWVkaWNhdGlvbiB0aGF0IGlzIHVzZWQgdG8gc3VwcG9ydCBrbm93bGVkZ2UuXHJcbiAgICovXHJcbiAgTWVkaWNhdGlvbktub3dsZWRnZToge1xyXG4gICAgZGlzcGxheTogXCJNZWRpY2F0aW9uS25vd2xlZGdlXCIsXHJcbiAgICBjb2RlOiBcIk1lZGljYXRpb25Lbm93bGVkZ2VcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc291cmNlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBNZWRpY2F0aW9uUmVxdWVzdDogQW4gb3JkZXIgb3IgcmVxdWVzdCBmb3IgYm90aCBzdXBwbHkgb2YgdGhlIG1lZGljYXRpb24gYW5kIHRoZSBpbnN0cnVjdGlvbnMgZm9yIGFkbWluaXN0cmF0aW9uIG9mIHRoZSBtZWRpY2F0aW9uIHRvIGEgcGF0aWVudC4gVGhlIHJlc291cmNlIGlzIGNhbGxlZCBcIk1lZGljYXRpb25SZXF1ZXN0XCIgcmF0aGVyIHRoYW4gXCJNZWRpY2F0aW9uUHJlc2NyaXB0aW9uXCIgb3IgXCJNZWRpY2F0aW9uT3JkZXJcIiB0byBnZW5lcmFsaXplIHRoZSB1c2UgYWNyb3NzIGlucGF0aWVudCBhbmQgb3V0cGF0aWVudCBzZXR0aW5ncywgaW5jbHVkaW5nIGNhcmUgcGxhbnMsIGV0Yy4sIGFuZCB0byBoYXJtb25pemUgd2l0aCB3b3JrZmxvdyBwYXR0ZXJucy5cclxuICAgKi9cclxuICBNZWRpY2F0aW9uUmVxdWVzdDoge1xyXG4gICAgZGlzcGxheTogXCJNZWRpY2F0aW9uUmVxdWVzdFwiLFxyXG4gICAgY29kZTogXCJNZWRpY2F0aW9uUmVxdWVzdFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVzb3VyY2UtdHlwZXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIE1lZGljYXRpb25TdGF0ZW1lbnQ6IEEgcmVjb3JkIG9mIGEgbWVkaWNhdGlvbiB0aGF0IGlzIGJlaW5nIGNvbnN1bWVkIGJ5IGEgcGF0aWVudC4gICBBIE1lZGljYXRpb25TdGF0ZW1lbnQgbWF5IGluZGljYXRlIHRoYXQgdGhlIHBhdGllbnQgbWF5IGJlIHRha2luZyB0aGUgbWVkaWNhdGlvbiBub3cgb3IgaGFzIHRha2VuIHRoZSBtZWRpY2F0aW9uIGluIHRoZSBwYXN0IG9yIHdpbGwgYmUgdGFraW5nIHRoZSBtZWRpY2F0aW9uIGluIHRoZSBmdXR1cmUuICBUaGUgc291cmNlIG9mIHRoaXMgaW5mb3JtYXRpb24gY2FuIGJlIHRoZSBwYXRpZW50LCBzaWduaWZpY2FudCBvdGhlciAoc3VjaCBhcyBhIGZhbWlseSBtZW1iZXIgb3Igc3BvdXNlKSwgb3IgYSBjbGluaWNpYW4uICBBIGNvbW1vbiBzY2VuYXJpbyB3aGVyZSB0aGlzIGluZm9ybWF0aW9uIGlzIGNhcHR1cmVkIGlzIGR1cmluZyB0aGUgaGlzdG9yeSB0YWtpbmcgcHJvY2VzcyBkdXJpbmcgYSBwYXRpZW50IHZpc2l0IG9yIHN0YXkuICAgVGhlIG1lZGljYXRpb24gaW5mb3JtYXRpb24gbWF5IGNvbWUgZnJvbSBzb3VyY2VzIHN1Y2ggYXMgdGhlIHBhdGllbnQncyBtZW1vcnksIGZyb20gYSBwcmVzY3JpcHRpb24gYm90dGxlLCAgb3IgZnJvbSBhIGxpc3Qgb2YgbWVkaWNhdGlvbnMgdGhlIHBhdGllbnQsIGNsaW5pY2lhbiBvciBvdGhlciBwYXJ0eSBtYWludGFpbnMuIFxyXG4gICAqIFRoZSBwcmltYXJ5IGRpZmZlcmVuY2UgYmV0d2VlbiBhIG1lZGljYXRpb24gc3RhdGVtZW50IGFuZCBhIG1lZGljYXRpb24gYWRtaW5pc3RyYXRpb24gaXMgdGhhdCB0aGUgbWVkaWNhdGlvbiBhZG1pbmlzdHJhdGlvbiBoYXMgY29tcGxldGUgYWRtaW5pc3RyYXRpb24gaW5mb3JtYXRpb24gYW5kIGlzIGJhc2VkIG9uIGFjdHVhbCBhZG1pbmlzdHJhdGlvbiBpbmZvcm1hdGlvbiBmcm9tIHRoZSBwZXJzb24gd2hvIGFkbWluaXN0ZXJlZCB0aGUgbWVkaWNhdGlvbi4gIEEgbWVkaWNhdGlvbiBzdGF0ZW1lbnQgaXMgb2Z0ZW4sIGlmIG5vdCBhbHdheXMsIGxlc3Mgc3BlY2lmaWMuICBUaGVyZSBpcyBubyByZXF1aXJlZCBkYXRlL3RpbWUgd2hlbiB0aGUgbWVkaWNhdGlvbiB3YXMgYWRtaW5pc3RlcmVkLCBpbiBmYWN0IHdlIG9ubHkga25vdyB0aGF0IGEgc291cmNlIGhhcyByZXBvcnRlZCB0aGUgcGF0aWVudCBpcyB0YWtpbmcgdGhpcyBtZWRpY2F0aW9uLCB3aGVyZSBkZXRhaWxzIHN1Y2ggYXMgdGltZSwgcXVhbnRpdHksIG9yIHJhdGUgb3IgZXZlbiBtZWRpY2F0aW9uIHByb2R1Y3QgbWF5IGJlIGluY29tcGxldGUgb3IgbWlzc2luZyBvciBsZXNzIHByZWNpc2UuICBBcyBzdGF0ZWQgZWFybGllciwgdGhlIG1lZGljYXRpb24gc3RhdGVtZW50IGluZm9ybWF0aW9uIG1heSBjb21lIGZyb20gdGhlIHBhdGllbnQncyBtZW1vcnksIGZyb20gYSBwcmVzY3JpcHRpb24gYm90dGxlIG9yIGZyb20gYSBsaXN0IG9mIG1lZGljYXRpb25zIHRoZSBwYXRpZW50LCBjbGluaWNpYW4gb3Igb3RoZXIgcGFydHkgbWFpbnRhaW5zLiAgTWVkaWNhdGlvbiBhZG1pbmlzdHJhdGlvbiBpcyBtb3JlIGZvcm1hbCBhbmQgaXMgbm90IG1pc3NpbmcgZGV0YWlsZWQgaW5mb3JtYXRpb24uXHJcbiAgICovXHJcbiAgTWVkaWNhdGlvblN0YXRlbWVudDoge1xyXG4gICAgZGlzcGxheTogXCJNZWRpY2F0aW9uU3RhdGVtZW50XCIsXHJcbiAgICBjb2RlOiBcIk1lZGljYXRpb25TdGF0ZW1lbnRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc291cmNlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBNZWRpY2luYWxQcm9kdWN0RGVmaW5pdGlvbjogRGV0YWlsZWQgZGVmaW5pdGlvbiBvZiBhIG1lZGljaW5hbCBwcm9kdWN0LCB0eXBpY2FsbHkgZm9yIHVzZXMgb3RoZXIgdGhhbiBkaXJlY3QgcGF0aWVudCBjYXJlIChlLmcuIHJlZ3VsYXRvcnkgdXNlLCBkcnVnIGNhdGFsb2dzLCB0byBzdXBwb3J0IHByZXNjcmliaW5nLCBhZHZlcnNlIGV2ZW50cyBtYW5hZ2VtZW50IGV0Yy4pLlxyXG4gICAqL1xyXG4gIE1lZGljaW5hbFByb2R1Y3REZWZpbml0aW9uOiB7XHJcbiAgICBkaXNwbGF5OiBcIk1lZGljaW5hbFByb2R1Y3REZWZpbml0aW9uXCIsXHJcbiAgICBjb2RlOiBcIk1lZGljaW5hbFByb2R1Y3REZWZpbml0aW9uXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNvdXJjZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogTWVzc2FnZURlZmluaXRpb246IERlZmluZXMgdGhlIGNoYXJhY3RlcmlzdGljcyBvZiBhIG1lc3NhZ2UgdGhhdCBjYW4gYmUgc2hhcmVkIGJldHdlZW4gc3lzdGVtcywgaW5jbHVkaW5nIHRoZSB0eXBlIG9mIGV2ZW50IHRoYXQgaW5pdGlhdGVzIHRoZSBtZXNzYWdlLCB0aGUgY29udGVudCB0byBiZSB0cmFuc21pdHRlZCBhbmQgd2hhdCByZXNwb25zZShzKSwgaWYgYW55LCBhcmUgcGVybWl0dGVkLlxyXG4gICAqL1xyXG4gIE1lc3NhZ2VEZWZpbml0aW9uOiB7XHJcbiAgICBkaXNwbGF5OiBcIk1lc3NhZ2VEZWZpbml0aW9uXCIsXHJcbiAgICBjb2RlOiBcIk1lc3NhZ2VEZWZpbml0aW9uXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNvdXJjZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogTWVzc2FnZUhlYWRlcjogVGhlIGhlYWRlciBmb3IgYSBtZXNzYWdlIGV4Y2hhbmdlIHRoYXQgaXMgZWl0aGVyIHJlcXVlc3Rpbmcgb3IgcmVzcG9uZGluZyB0byBhbiBhY3Rpb24uICBUaGUgcmVmZXJlbmNlKHMpIHRoYXQgYXJlIHRoZSBzdWJqZWN0IG9mIHRoZSBhY3Rpb24gYXMgd2VsbCBhcyBvdGhlciBpbmZvcm1hdGlvbiByZWxhdGVkIHRvIHRoZSBhY3Rpb24gYXJlIHR5cGljYWxseSB0cmFuc21pdHRlZCBpbiBhIGJ1bmRsZSBpbiB3aGljaCB0aGUgTWVzc2FnZUhlYWRlciByZXNvdXJjZSBpbnN0YW5jZSBpcyB0aGUgZmlyc3QgcmVzb3VyY2UgaW4gdGhlIGJ1bmRsZS5cclxuICAgKi9cclxuICBNZXNzYWdlSGVhZGVyOiB7XHJcbiAgICBkaXNwbGF5OiBcIk1lc3NhZ2VIZWFkZXJcIixcclxuICAgIGNvZGU6IFwiTWVzc2FnZUhlYWRlclwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVzb3VyY2UtdHlwZXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIE1vbGVjdWxhclNlcXVlbmNlOiBSYXcgZGF0YSBkZXNjcmliaW5nIGEgYmlvbG9naWNhbCBzZXF1ZW5jZS5cclxuICAgKi9cclxuICBNb2xlY3VsYXJTZXF1ZW5jZToge1xyXG4gICAgZGlzcGxheTogXCJNb2xlY3VsYXJTZXF1ZW5jZVwiLFxyXG4gICAgY29kZTogXCJNb2xlY3VsYXJTZXF1ZW5jZVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVzb3VyY2UtdHlwZXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIE5hbWluZ1N5c3RlbTogQSBjdXJhdGVkIG5hbWVzcGFjZSB0aGF0IGlzc3VlcyB1bmlxdWUgc3ltYm9scyB3aXRoaW4gdGhhdCBuYW1lc3BhY2UgZm9yIHRoZSBpZGVudGlmaWNhdGlvbiBvZiBjb25jZXB0cywgcGVvcGxlLCBkZXZpY2VzLCBldGMuICBSZXByZXNlbnRzIGEgXCJTeXN0ZW1cIiB1c2VkIHdpdGhpbiB0aGUgSWRlbnRpZmllciBhbmQgQ29kaW5nIGRhdGEgdHlwZXMuXHJcbiAgICovXHJcbiAgTmFtaW5nU3lzdGVtOiB7XHJcbiAgICBkaXNwbGF5OiBcIk5hbWluZ1N5c3RlbVwiLFxyXG4gICAgY29kZTogXCJOYW1pbmdTeXN0ZW1cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc291cmNlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBOdXRyaXRpb25PcmRlcjogQSByZXF1ZXN0IHRvIHN1cHBseSBhIGRpZXQsIGZvcm11bGEgZmVlZGluZyAoZW50ZXJhbCkgb3Igb3JhbCBudXRyaXRpb25hbCBzdXBwbGVtZW50IHRvIGEgcGF0aWVudC9yZXNpZGVudC5cclxuICAgKi9cclxuICBOdXRyaXRpb25PcmRlcjoge1xyXG4gICAgZGlzcGxheTogXCJOdXRyaXRpb25PcmRlclwiLFxyXG4gICAgY29kZTogXCJOdXRyaXRpb25PcmRlclwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVzb3VyY2UtdHlwZXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIE51dHJpdGlvblByb2R1Y3Q6IEEgZm9vZCBvciBmbHVpZCBwcm9kdWN0IHRoYXQgaXMgY29uc3VtZWQgYnkgcGF0aWVudHMuXHJcbiAgICovXHJcbiAgTnV0cml0aW9uUHJvZHVjdDoge1xyXG4gICAgZGlzcGxheTogXCJOdXRyaXRpb25Qcm9kdWN0XCIsXHJcbiAgICBjb2RlOiBcIk51dHJpdGlvblByb2R1Y3RcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc291cmNlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBPYnNlcnZhdGlvbjogTWVhc3VyZW1lbnRzIGFuZCBzaW1wbGUgYXNzZXJ0aW9ucyBtYWRlIGFib3V0IGEgcGF0aWVudCwgZGV2aWNlIG9yIG90aGVyIHN1YmplY3QuXHJcbiAgICovXHJcbiAgT2JzZXJ2YXRpb246IHtcclxuICAgIGRpc3BsYXk6IFwiT2JzZXJ2YXRpb25cIixcclxuICAgIGNvZGU6IFwiT2JzZXJ2YXRpb25cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc291cmNlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBPYnNlcnZhdGlvbkRlZmluaXRpb246IFNldCBvZiBkZWZpbml0aW9uYWwgY2hhcmFjdGVyaXN0aWNzIGZvciBhIGtpbmQgb2Ygb2JzZXJ2YXRpb24gb3IgbWVhc3VyZW1lbnQgcHJvZHVjZWQgb3IgY29uc3VtZWQgYnkgYW4gb3JkZXJhYmxlIGhlYWx0aCBjYXJlIHNlcnZpY2UuXHJcbiAgICovXHJcbiAgT2JzZXJ2YXRpb25EZWZpbml0aW9uOiB7XHJcbiAgICBkaXNwbGF5OiBcIk9ic2VydmF0aW9uRGVmaW5pdGlvblwiLFxyXG4gICAgY29kZTogXCJPYnNlcnZhdGlvbkRlZmluaXRpb25cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc291cmNlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBPcGVyYXRpb25EZWZpbml0aW9uOiBBIGZvcm1hbCBjb21wdXRhYmxlIGRlZmluaXRpb24gb2YgYW4gb3BlcmF0aW9uIChvbiB0aGUgUkVTVGZ1bCBpbnRlcmZhY2UpIG9yIGEgbmFtZWQgcXVlcnkgKHVzaW5nIHRoZSBzZWFyY2ggaW50ZXJhY3Rpb24pLlxyXG4gICAqL1xyXG4gIE9wZXJhdGlvbkRlZmluaXRpb246IHtcclxuICAgIGRpc3BsYXk6IFwiT3BlcmF0aW9uRGVmaW5pdGlvblwiLFxyXG4gICAgY29kZTogXCJPcGVyYXRpb25EZWZpbml0aW9uXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNvdXJjZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogT3BlcmF0aW9uT3V0Y29tZTogQSBjb2xsZWN0aW9uIG9mIGVycm9yLCB3YXJuaW5nLCBvciBpbmZvcm1hdGlvbiBtZXNzYWdlcyB0aGF0IHJlc3VsdCBmcm9tIGEgc3lzdGVtIGFjdGlvbi5cclxuICAgKi9cclxuICBPcGVyYXRpb25PdXRjb21lOiB7XHJcbiAgICBkaXNwbGF5OiBcIk9wZXJhdGlvbk91dGNvbWVcIixcclxuICAgIGNvZGU6IFwiT3BlcmF0aW9uT3V0Y29tZVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVzb3VyY2UtdHlwZXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIE9yZ2FuaXphdGlvbjogQSBmb3JtYWxseSBvciBpbmZvcm1hbGx5IHJlY29nbml6ZWQgZ3JvdXBpbmcgb2YgcGVvcGxlIG9yIG9yZ2FuaXphdGlvbnMgZm9ybWVkIGZvciB0aGUgcHVycG9zZSBvZiBhY2hpZXZpbmcgc29tZSBmb3JtIG9mIGNvbGxlY3RpdmUgYWN0aW9uLiAgSW5jbHVkZXMgY29tcGFuaWVzLCBpbnN0aXR1dGlvbnMsIGNvcnBvcmF0aW9ucywgZGVwYXJ0bWVudHMsIGNvbW11bml0eSBncm91cHMsIGhlYWx0aGNhcmUgcHJhY3RpY2UgZ3JvdXBzLCBwYXllci9pbnN1cmVyLCBldGMuXHJcbiAgICovXHJcbiAgT3JnYW5pemF0aW9uOiB7XHJcbiAgICBkaXNwbGF5OiBcIk9yZ2FuaXphdGlvblwiLFxyXG4gICAgY29kZTogXCJPcmdhbml6YXRpb25cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc291cmNlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBPcmdhbml6YXRpb25BZmZpbGlhdGlvbjogRGVmaW5lcyBhbiBhZmZpbGlhdGlvbi9hc3NvdGlhdGlvbi9yZWxhdGlvbnNoaXAgYmV0d2VlbiAyIGRpc3RpbmN0IG9nYW5pemF0aW9ucywgdGhhdCBpcyBub3QgYSBwYXJ0LW9mIHJlbGF0aW9uc2hpcC9zdWItZGl2aXNpb24gcmVsYXRpb25zaGlwLlxyXG4gICAqL1xyXG4gIE9yZ2FuaXphdGlvbkFmZmlsaWF0aW9uOiB7XHJcbiAgICBkaXNwbGF5OiBcIk9yZ2FuaXphdGlvbkFmZmlsaWF0aW9uXCIsXHJcbiAgICBjb2RlOiBcIk9yZ2FuaXphdGlvbkFmZmlsaWF0aW9uXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNvdXJjZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogUGFja2FnZWRQcm9kdWN0RGVmaW5pdGlvbjogQSBtZWRpY2FsbHkgcmVsYXRlZCBpdGVtIG9yIGl0ZW1zLCBpbiBhIGNvbnRhaW5lciBvciBwYWNrYWdlLlxyXG4gICAqL1xyXG4gIFBhY2thZ2VkUHJvZHVjdERlZmluaXRpb246IHtcclxuICAgIGRpc3BsYXk6IFwiUGFja2FnZWRQcm9kdWN0RGVmaW5pdGlvblwiLFxyXG4gICAgY29kZTogXCJQYWNrYWdlZFByb2R1Y3REZWZpbml0aW9uXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNvdXJjZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogUGFyYW1ldGVyczogVGhpcyByZXNvdXJjZSBpcyBhIG5vbi1wZXJzaXN0ZWQgcmVzb3VyY2UgdXNlZCB0byBwYXNzIGluZm9ybWF0aW9uIGludG8gYW5kIGJhY2sgZnJvbSBhbiBbb3BlcmF0aW9uXShvcGVyYXRpb25zLmh0bWwpLiBJdCBoYXMgbm8gb3RoZXIgdXNlLCBhbmQgdGhlcmUgaXMgbm8gUkVTVGZ1bCBlbmRwb2ludCBhc3NvY2lhdGVkIHdpdGggaXQuXHJcbiAgICovXHJcbiAgUGFyYW1ldGVyczoge1xyXG4gICAgZGlzcGxheTogXCJQYXJhbWV0ZXJzXCIsXHJcbiAgICBjb2RlOiBcIlBhcmFtZXRlcnNcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc291cmNlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBQYXRpZW50OiBEZW1vZ3JhcGhpY3MgYW5kIG90aGVyIGFkbWluaXN0cmF0aXZlIGluZm9ybWF0aW9uIGFib3V0IGFuIGluZGl2aWR1YWwgb3IgYW5pbWFsIHJlY2VpdmluZyBjYXJlIG9yIG90aGVyIGhlYWx0aC1yZWxhdGVkIHNlcnZpY2VzLlxyXG4gICAqL1xyXG4gIFBhdGllbnQ6IHtcclxuICAgIGRpc3BsYXk6IFwiUGF0aWVudFwiLFxyXG4gICAgY29kZTogXCJQYXRpZW50XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNvdXJjZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogUGF5bWVudE5vdGljZTogVGhpcyByZXNvdXJjZSBwcm92aWRlcyB0aGUgc3RhdHVzIG9mIHRoZSBwYXltZW50IGZvciBnb29kcyBhbmQgc2VydmljZXMgcmVuZGVyZWQsIGFuZCB0aGUgcmVxdWVzdCBhbmQgcmVzcG9uc2UgcmVzb3VyY2UgcmVmZXJlbmNlcy5cclxuICAgKi9cclxuICBQYXltZW50Tm90aWNlOiB7XHJcbiAgICBkaXNwbGF5OiBcIlBheW1lbnROb3RpY2VcIixcclxuICAgIGNvZGU6IFwiUGF5bWVudE5vdGljZVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVzb3VyY2UtdHlwZXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIFBheW1lbnRSZWNvbmNpbGlhdGlvbjogVGhpcyByZXNvdXJjZSBwcm92aWRlcyB0aGUgZGV0YWlscyBpbmNsdWRpbmcgYW1vdW50IG9mIGEgcGF5bWVudCBhbmQgYWxsb2NhdGVzIHRoZSBwYXltZW50IGl0ZW1zIGJlaW5nIHBhaWQuXHJcbiAgICovXHJcbiAgUGF5bWVudFJlY29uY2lsaWF0aW9uOiB7XHJcbiAgICBkaXNwbGF5OiBcIlBheW1lbnRSZWNvbmNpbGlhdGlvblwiLFxyXG4gICAgY29kZTogXCJQYXltZW50UmVjb25jaWxpYXRpb25cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc291cmNlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBQZXJzb246IERlbW9ncmFwaGljcyBhbmQgYWRtaW5pc3RyYXRpdmUgaW5mb3JtYXRpb24gYWJvdXQgYSBwZXJzb24gaW5kZXBlbmRlbnQgb2YgYSBzcGVjaWZpYyBoZWFsdGgtcmVsYXRlZCBjb250ZXh0LlxyXG4gICAqL1xyXG4gIFBlcnNvbjoge1xyXG4gICAgZGlzcGxheTogXCJQZXJzb25cIixcclxuICAgIGNvZGU6IFwiUGVyc29uXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNvdXJjZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogUGxhbkRlZmluaXRpb246IFRoaXMgcmVzb3VyY2UgYWxsb3dzIGZvciB0aGUgZGVmaW5pdGlvbiBvZiB2YXJpb3VzIHR5cGVzIG9mIHBsYW5zIGFzIGEgc2hhcmFibGUsIGNvbnN1bWFibGUsIGFuZCBleGVjdXRhYmxlIGFydGlmYWN0LiBUaGUgcmVzb3VyY2UgaXMgZ2VuZXJhbCBlbm91Z2ggdG8gc3VwcG9ydCB0aGUgZGVzY3JpcHRpb24gb2YgYSBicm9hZCByYW5nZSBvZiBjbGluaWNhbCBhbmQgbm9uLWNsaW5pY2FsIGFydGlmYWN0cyBzdWNoIGFzIGNsaW5pY2FsIGRlY2lzaW9uIHN1cHBvcnQgcnVsZXMsIG9yZGVyIHNldHMsIHByb3RvY29scywgYW5kIGRydWcgcXVhbGl0eSBzcGVjaWZpY2F0aW9ucy5cclxuICAgKi9cclxuICBQbGFuRGVmaW5pdGlvbjoge1xyXG4gICAgZGlzcGxheTogXCJQbGFuRGVmaW5pdGlvblwiLFxyXG4gICAgY29kZTogXCJQbGFuRGVmaW5pdGlvblwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVzb3VyY2UtdHlwZXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIFByYWN0aXRpb25lcjogQSBwZXJzb24gd2hvIGlzIGRpcmVjdGx5IG9yIGluZGlyZWN0bHkgaW52b2x2ZWQgaW4gdGhlIHByb3Zpc2lvbmluZyBvZiBoZWFsdGhjYXJlLlxyXG4gICAqL1xyXG4gIFByYWN0aXRpb25lcjoge1xyXG4gICAgZGlzcGxheTogXCJQcmFjdGl0aW9uZXJcIixcclxuICAgIGNvZGU6IFwiUHJhY3RpdGlvbmVyXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNvdXJjZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogUHJhY3RpdGlvbmVyUm9sZTogQSBzcGVjaWZpYyBzZXQgb2YgUm9sZXMvTG9jYXRpb25zL3NwZWNpYWx0aWVzL3NlcnZpY2VzIHRoYXQgYSBwcmFjdGl0aW9uZXIgbWF5IHBlcmZvcm0gYXQgYW4gb3JnYW5pemF0aW9uIGZvciBhIHBlcmlvZCBvZiB0aW1lLlxyXG4gICAqL1xyXG4gIFByYWN0aXRpb25lclJvbGU6IHtcclxuICAgIGRpc3BsYXk6IFwiUHJhY3RpdGlvbmVyUm9sZVwiLFxyXG4gICAgY29kZTogXCJQcmFjdGl0aW9uZXJSb2xlXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNvdXJjZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogUHJvY2VkdXJlOiBBbiBhY3Rpb24gdGhhdCBpcyBvciB3YXMgcGVyZm9ybWVkIG9uIG9yIGZvciBhIHBhdGllbnQuIFRoaXMgY2FuIGJlIGEgcGh5c2ljYWwgaW50ZXJ2ZW50aW9uIGxpa2UgYW4gb3BlcmF0aW9uLCBvciBsZXNzIGludmFzaXZlIGxpa2UgbG9uZyB0ZXJtIHNlcnZpY2VzLCBjb3Vuc2VsaW5nLCBvciBoeXBub3RoZXJhcHkuXHJcbiAgICovXHJcbiAgUHJvY2VkdXJlOiB7XHJcbiAgICBkaXNwbGF5OiBcIlByb2NlZHVyZVwiLFxyXG4gICAgY29kZTogXCJQcm9jZWR1cmVcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc291cmNlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBQcm92ZW5hbmNlOiBQcm92ZW5hbmNlIG9mIGEgcmVzb3VyY2UgaXMgYSByZWNvcmQgdGhhdCBkZXNjcmliZXMgZW50aXRpZXMgYW5kIHByb2Nlc3NlcyBpbnZvbHZlZCBpbiBwcm9kdWNpbmcgYW5kIGRlbGl2ZXJpbmcgb3Igb3RoZXJ3aXNlIGluZmx1ZW5jaW5nIHRoYXQgcmVzb3VyY2UuIFByb3ZlbmFuY2UgcHJvdmlkZXMgYSBjcml0aWNhbCBmb3VuZGF0aW9uIGZvciBhc3Nlc3NpbmcgYXV0aGVudGljaXR5LCBlbmFibGluZyB0cnVzdCwgYW5kIGFsbG93aW5nIHJlcHJvZHVjaWJpbGl0eS4gUHJvdmVuYW5jZSBhc3NlcnRpb25zIGFyZSBhIGZvcm0gb2YgY29udGV4dHVhbCBtZXRhZGF0YSBhbmQgY2FuIHRoZW1zZWx2ZXMgYmVjb21lIGltcG9ydGFudCByZWNvcmRzIHdpdGggdGhlaXIgb3duIHByb3ZlbmFuY2UuIFByb3ZlbmFuY2Ugc3RhdGVtZW50IGluZGljYXRlcyBjbGluaWNhbCBzaWduaWZpY2FuY2UgaW4gdGVybXMgb2YgY29uZmlkZW5jZSBpbiBhdXRoZW50aWNpdHksIHJlbGlhYmlsaXR5LCBhbmQgdHJ1c3R3b3J0aGluZXNzLCBpbnRlZ3JpdHksIGFuZCBzdGFnZSBpbiBsaWZlY3ljbGUgKGUuZy4gRG9jdW1lbnQgQ29tcGxldGlvbiAtIGhhcyB0aGUgYXJ0aWZhY3QgYmVlbiBsZWdhbGx5IGF1dGhlbnRpY2F0ZWQpLCBhbGwgb2Ygd2hpY2ggbWF5IGltcGFjdCBzZWN1cml0eSwgcHJpdmFjeSwgYW5kIHRydXN0IHBvbGljaWVzLlxyXG4gICAqL1xyXG4gIFByb3ZlbmFuY2U6IHtcclxuICAgIGRpc3BsYXk6IFwiUHJvdmVuYW5jZVwiLFxyXG4gICAgY29kZTogXCJQcm92ZW5hbmNlXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNvdXJjZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogUXVlc3Rpb25uYWlyZTogQSBzdHJ1Y3R1cmVkIHNldCBvZiBxdWVzdGlvbnMgaW50ZW5kZWQgdG8gZ3VpZGUgdGhlIGNvbGxlY3Rpb24gb2YgYW5zd2VycyBmcm9tIGVuZC11c2Vycy4gUXVlc3Rpb25uYWlyZXMgcHJvdmlkZSBkZXRhaWxlZCBjb250cm9sIG92ZXIgb3JkZXIsIHByZXNlbnRhdGlvbiwgcGhyYXNlb2xvZ3kgYW5kIGdyb3VwaW5nIHRvIGFsbG93IGNvaGVyZW50LCBjb25zaXN0ZW50IGRhdGEgY29sbGVjdGlvbi5cclxuICAgKi9cclxuICBRdWVzdGlvbm5haXJlOiB7XHJcbiAgICBkaXNwbGF5OiBcIlF1ZXN0aW9ubmFpcmVcIixcclxuICAgIGNvZGU6IFwiUXVlc3Rpb25uYWlyZVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVzb3VyY2UtdHlwZXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIFF1ZXN0aW9ubmFpcmVSZXNwb25zZTogQSBzdHJ1Y3R1cmVkIHNldCBvZiBxdWVzdGlvbnMgYW5kIHRoZWlyIGFuc3dlcnMuIFRoZSBxdWVzdGlvbnMgYXJlIG9yZGVyZWQgYW5kIGdyb3VwZWQgaW50byBjb2hlcmVudCBzdWJzZXRzLCBjb3JyZXNwb25kaW5nIHRvIHRoZSBzdHJ1Y3R1cmUgb2YgdGhlIGdyb3VwaW5nIG9mIHRoZSBxdWVzdGlvbm5haXJlIGJlaW5nIHJlc3BvbmRlZCB0by5cclxuICAgKi9cclxuICBRdWVzdGlvbm5haXJlUmVzcG9uc2U6IHtcclxuICAgIGRpc3BsYXk6IFwiUXVlc3Rpb25uYWlyZVJlc3BvbnNlXCIsXHJcbiAgICBjb2RlOiBcIlF1ZXN0aW9ubmFpcmVSZXNwb25zZVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVzb3VyY2UtdHlwZXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIFJlZ3VsYXRlZEF1dGhvcml6YXRpb246IFJlZ3VsYXRvcnkgYXBwcm92YWwsIGNsZWFyYW5jZSBvciBsaWNlbmNpbmcgcmVsYXRlZCB0byBhIHJlZ3VsYXRlZCBwcm9kdWN0LCB0cmVhdG1lbnQsIGZhY2lsaXR5IG9yIGFjdGl2aXR5IHRoYXQgaXMgY2l0ZWQgaW4gYSBndWlkYW5jZSwgcmVndWxhdGlvbiwgcnVsZSBvciBsZWdpc2xhdGl2ZSBhY3QuIEFuIGV4YW1wbGUgaXMgTWFya2V0IEF1dGhvcml6YXRpb24gcmVsYXRpbmcgdG8gYSBNZWRpY2luYWwgUHJvZHVjdC5cclxuICAgKi9cclxuICBSZWd1bGF0ZWRBdXRob3JpemF0aW9uOiB7XHJcbiAgICBkaXNwbGF5OiBcIlJlZ3VsYXRlZEF1dGhvcml6YXRpb25cIixcclxuICAgIGNvZGU6IFwiUmVndWxhdGVkQXV0aG9yaXphdGlvblwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVzb3VyY2UtdHlwZXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIFJlbGF0ZWRQZXJzb246IEluZm9ybWF0aW9uIGFib3V0IGEgcGVyc29uIHRoYXQgaXMgaW52b2x2ZWQgaW4gdGhlIGNhcmUgZm9yIGEgcGF0aWVudCwgYnV0IHdobyBpcyBub3QgdGhlIHRhcmdldCBvZiBoZWFsdGhjYXJlLCBub3IgaGFzIGEgZm9ybWFsIHJlc3BvbnNpYmlsaXR5IGluIHRoZSBjYXJlIHByb2Nlc3MuXHJcbiAgICovXHJcbiAgUmVsYXRlZFBlcnNvbjoge1xyXG4gICAgZGlzcGxheTogXCJSZWxhdGVkUGVyc29uXCIsXHJcbiAgICBjb2RlOiBcIlJlbGF0ZWRQZXJzb25cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc291cmNlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBSZXF1ZXN0R3JvdXA6IEEgZ3JvdXAgb2YgcmVsYXRlZCByZXF1ZXN0cyB0aGF0IGNhbiBiZSB1c2VkIHRvIGNhcHR1cmUgaW50ZW5kZWQgYWN0aXZpdGllcyB0aGF0IGhhdmUgaW50ZXItZGVwZW5kZW5jaWVzIHN1Y2ggYXMgXCJnaXZlIHRoaXMgbWVkaWNhdGlvbiBhZnRlciB0aGF0IG9uZVwiLlxyXG4gICAqL1xyXG4gIFJlcXVlc3RHcm91cDoge1xyXG4gICAgZGlzcGxheTogXCJSZXF1ZXN0R3JvdXBcIixcclxuICAgIGNvZGU6IFwiUmVxdWVzdEdyb3VwXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNvdXJjZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogUmVzZWFyY2hEZWZpbml0aW9uOiBUaGUgUmVzZWFyY2hEZWZpbml0aW9uIHJlc291cmNlIGRlc2NyaWJlcyB0aGUgY29uZGl0aW9uYWwgc3RhdGUgKHBvcHVsYXRpb24gYW5kIGFueSBleHBvc3VyZXMgYmVpbmcgY29tcGFyZWQgd2l0aGluIHRoZSBwb3B1bGF0aW9uKSBhbmQgb3V0Y29tZSAoaWYgc3BlY2lmaWVkKSB0aGF0IHRoZSBrbm93bGVkZ2UgKGV2aWRlbmNlLCBhc3NlcnRpb24sIHJlY29tbWVuZGF0aW9uKSBpcyBhYm91dC5cclxuICAgKi9cclxuICBSZXNlYXJjaERlZmluaXRpb246IHtcclxuICAgIGRpc3BsYXk6IFwiUmVzZWFyY2hEZWZpbml0aW9uXCIsXHJcbiAgICBjb2RlOiBcIlJlc2VhcmNoRGVmaW5pdGlvblwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVzb3VyY2UtdHlwZXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIFJlc2VhcmNoRWxlbWVudERlZmluaXRpb246IFRoZSBSZXNlYXJjaEVsZW1lbnREZWZpbml0aW9uIHJlc291cmNlIGRlc2NyaWJlcyBhIFwiUElDT1wiIGVsZW1lbnQgdGhhdCBrbm93bGVkZ2UgKGV2aWRlbmNlLCBhc3NlcnRpb24sIHJlY29tbWVuZGF0aW9uKSBpcyBhYm91dC5cclxuICAgKi9cclxuICBSZXNlYXJjaEVsZW1lbnREZWZpbml0aW9uOiB7XHJcbiAgICBkaXNwbGF5OiBcIlJlc2VhcmNoRWxlbWVudERlZmluaXRpb25cIixcclxuICAgIGNvZGU6IFwiUmVzZWFyY2hFbGVtZW50RGVmaW5pdGlvblwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVzb3VyY2UtdHlwZXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIFJlc2VhcmNoU3R1ZHk6IEEgcHJvY2VzcyB3aGVyZSBhIHJlc2VhcmNoZXIgb3Igb3JnYW5pemF0aW9uIHBsYW5zIGFuZCB0aGVuIGV4ZWN1dGVzIGEgc2VyaWVzIG9mIHN0ZXBzIGludGVuZGVkIHRvIGluY3JlYXNlIHRoZSBmaWVsZCBvZiBoZWFsdGhjYXJlLXJlbGF0ZWQga25vd2xlZGdlLiAgVGhpcyBpbmNsdWRlcyBzdHVkaWVzIG9mIHNhZmV0eSwgZWZmaWNhY3ksIGNvbXBhcmF0aXZlIGVmZmVjdGl2ZW5lc3MgYW5kIG90aGVyIGluZm9ybWF0aW9uIGFib3V0IG1lZGljYXRpb25zLCBkZXZpY2VzLCB0aGVyYXBpZXMgYW5kIG90aGVyIGludGVydmVudGlvbmFsIGFuZCBpbnZlc3RpZ2F0aXZlIHRlY2huaXF1ZXMuICBBIFJlc2VhcmNoU3R1ZHkgaW52b2x2ZXMgdGhlIGdhdGhlcmluZyBvZiBpbmZvcm1hdGlvbiBhYm91dCBodW1hbiBvciBhbmltYWwgc3ViamVjdHMuXHJcbiAgICovXHJcbiAgUmVzZWFyY2hTdHVkeToge1xyXG4gICAgZGlzcGxheTogXCJSZXNlYXJjaFN0dWR5XCIsXHJcbiAgICBjb2RlOiBcIlJlc2VhcmNoU3R1ZHlcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc291cmNlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBSZXNlYXJjaFN1YmplY3Q6IEEgcGh5c2ljYWwgZW50aXR5IHdoaWNoIGlzIHRoZSBwcmltYXJ5IHVuaXQgb2Ygb3BlcmF0aW9uYWwgYW5kL29yIGFkbWluaXN0cmF0aXZlIGludGVyZXN0IGluIGEgc3R1ZHkuXHJcbiAgICovXHJcbiAgUmVzZWFyY2hTdWJqZWN0OiB7XHJcbiAgICBkaXNwbGF5OiBcIlJlc2VhcmNoU3ViamVjdFwiLFxyXG4gICAgY29kZTogXCJSZXNlYXJjaFN1YmplY3RcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc291cmNlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBSZXNvdXJjZTogLS0tIEFic3RyYWN0IFR5cGUhIC0tLVRoaXMgaXMgdGhlIGJhc2UgcmVzb3VyY2UgdHlwZSBmb3IgZXZlcnl0aGluZy5cclxuICAgKi9cclxuICBSZXNvdXJjZToge1xyXG4gICAgZGlzcGxheTogXCJSZXNvdXJjZVwiLFxyXG4gICAgY29kZTogXCJSZXNvdXJjZVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVzb3VyY2UtdHlwZXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIFJpc2tBc3Nlc3NtZW50OiBBbiBhc3Nlc3NtZW50IG9mIHRoZSBsaWtlbHkgb3V0Y29tZShzKSBmb3IgYSBwYXRpZW50IG9yIG90aGVyIHN1YmplY3QgYXMgd2VsbCBhcyB0aGUgbGlrZWxpaG9vZCBvZiBlYWNoIG91dGNvbWUuXHJcbiAgICovXHJcbiAgUmlza0Fzc2Vzc21lbnQ6IHtcclxuICAgIGRpc3BsYXk6IFwiUmlza0Fzc2Vzc21lbnRcIixcclxuICAgIGNvZGU6IFwiUmlza0Fzc2Vzc21lbnRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc291cmNlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBTY2hlZHVsZTogQSBjb250YWluZXIgZm9yIHNsb3RzIG9mIHRpbWUgdGhhdCBtYXkgYmUgYXZhaWxhYmxlIGZvciBib29raW5nIGFwcG9pbnRtZW50cy5cclxuICAgKi9cclxuICBTY2hlZHVsZToge1xyXG4gICAgZGlzcGxheTogXCJTY2hlZHVsZVwiLFxyXG4gICAgY29kZTogXCJTY2hlZHVsZVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVzb3VyY2UtdHlwZXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIFNlYXJjaFBhcmFtZXRlcjogQSBzZWFyY2ggcGFyYW1ldGVyIHRoYXQgZGVmaW5lcyBhIG5hbWVkIHNlYXJjaCBpdGVtIHRoYXQgY2FuIGJlIHVzZWQgdG8gc2VhcmNoL2ZpbHRlciBvbiBhIHJlc291cmNlLlxyXG4gICAqL1xyXG4gIFNlYXJjaFBhcmFtZXRlcjoge1xyXG4gICAgZGlzcGxheTogXCJTZWFyY2hQYXJhbWV0ZXJcIixcclxuICAgIGNvZGU6IFwiU2VhcmNoUGFyYW1ldGVyXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNvdXJjZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogU2VydmljZVJlcXVlc3Q6IEEgcmVjb3JkIG9mIGEgcmVxdWVzdCBmb3Igc2VydmljZSBzdWNoIGFzIGRpYWdub3N0aWMgaW52ZXN0aWdhdGlvbnMsIHRyZWF0bWVudHMsIG9yIG9wZXJhdGlvbnMgdG8gYmUgcGVyZm9ybWVkLlxyXG4gICAqL1xyXG4gIFNlcnZpY2VSZXF1ZXN0OiB7XHJcbiAgICBkaXNwbGF5OiBcIlNlcnZpY2VSZXF1ZXN0XCIsXHJcbiAgICBjb2RlOiBcIlNlcnZpY2VSZXF1ZXN0XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNvdXJjZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogU2xvdDogQSBzbG90IG9mIHRpbWUgb24gYSBzY2hlZHVsZSB0aGF0IG1heSBiZSBhdmFpbGFibGUgZm9yIGJvb2tpbmcgYXBwb2ludG1lbnRzLlxyXG4gICAqL1xyXG4gIFNsb3Q6IHtcclxuICAgIGRpc3BsYXk6IFwiU2xvdFwiLFxyXG4gICAgY29kZTogXCJTbG90XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNvdXJjZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogU3BlY2ltZW46IEEgc2FtcGxlIHRvIGJlIHVzZWQgZm9yIGFuYWx5c2lzLlxyXG4gICAqL1xyXG4gIFNwZWNpbWVuOiB7XHJcbiAgICBkaXNwbGF5OiBcIlNwZWNpbWVuXCIsXHJcbiAgICBjb2RlOiBcIlNwZWNpbWVuXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNvdXJjZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogU3BlY2ltZW5EZWZpbml0aW9uOiBBIGtpbmQgb2Ygc3BlY2ltZW4gd2l0aCBhc3NvY2lhdGVkIHNldCBvZiByZXF1aXJlbWVudHMuXHJcbiAgICovXHJcbiAgU3BlY2ltZW5EZWZpbml0aW9uOiB7XHJcbiAgICBkaXNwbGF5OiBcIlNwZWNpbWVuRGVmaW5pdGlvblwiLFxyXG4gICAgY29kZTogXCJTcGVjaW1lbkRlZmluaXRpb25cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc291cmNlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBTdHJ1Y3R1cmVEZWZpbml0aW9uOiBBIGRlZmluaXRpb24gb2YgYSBGSElSIHN0cnVjdHVyZS4gVGhpcyByZXNvdXJjZSBpcyB1c2VkIHRvIGRlc2NyaWJlIHRoZSB1bmRlcmx5aW5nIHJlc291cmNlcywgZGF0YSB0eXBlcyBkZWZpbmVkIGluIEZISVIsIGFuZCBhbHNvIGZvciBkZXNjcmliaW5nIGV4dGVuc2lvbnMgYW5kIGNvbnN0cmFpbnRzIG9uIHJlc291cmNlcyBhbmQgZGF0YSB0eXBlcy5cclxuICAgKi9cclxuICBTdHJ1Y3R1cmVEZWZpbml0aW9uOiB7XHJcbiAgICBkaXNwbGF5OiBcIlN0cnVjdHVyZURlZmluaXRpb25cIixcclxuICAgIGNvZGU6IFwiU3RydWN0dXJlRGVmaW5pdGlvblwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVzb3VyY2UtdHlwZXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIFN0cnVjdHVyZU1hcDogQSBNYXAgb2YgcmVsYXRpb25zaGlwcyBiZXR3ZWVuIDIgc3RydWN0dXJlcyB0aGF0IGNhbiBiZSB1c2VkIHRvIHRyYW5zZm9ybSBkYXRhLlxyXG4gICAqL1xyXG4gIFN0cnVjdHVyZU1hcDoge1xyXG4gICAgZGlzcGxheTogXCJTdHJ1Y3R1cmVNYXBcIixcclxuICAgIGNvZGU6IFwiU3RydWN0dXJlTWFwXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNvdXJjZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogU3Vic2NyaXB0aW9uOiBUaGUgc3Vic2NyaXB0aW9uIHJlc291cmNlIGlzIHVzZWQgdG8gZGVmaW5lIGEgcHVzaC1iYXNlZCBzdWJzY3JpcHRpb24gZnJvbSBhIHNlcnZlciB0byBhbm90aGVyIHN5c3RlbS4gT25jZSBhIHN1YnNjcmlwdGlvbiBpcyByZWdpc3RlcmVkIHdpdGggdGhlIHNlcnZlciwgdGhlIHNlcnZlciBjaGVja3MgZXZlcnkgcmVzb3VyY2UgdGhhdCBpcyBjcmVhdGVkIG9yIHVwZGF0ZWQsIGFuZCBpZiB0aGUgcmVzb3VyY2UgbWF0Y2hlcyB0aGUgZ2l2ZW4gY3JpdGVyaWEsIGl0IHNlbmRzIGEgbWVzc2FnZSBvbiB0aGUgZGVmaW5lZCBcImNoYW5uZWxcIiBzbyB0aGF0IGFub3RoZXIgc3lzdGVtIGNhbiB0YWtlIGFuIGFwcHJvcHJpYXRlIGFjdGlvbi5cclxuICAgKi9cclxuICBTdWJzY3JpcHRpb246IHtcclxuICAgIGRpc3BsYXk6IFwiU3Vic2NyaXB0aW9uXCIsXHJcbiAgICBjb2RlOiBcIlN1YnNjcmlwdGlvblwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVzb3VyY2UtdHlwZXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIFN1YnNjcmlwdGlvblN0YXR1czogVGhlIFN1YnNjcmlwdGlvblN0YXR1cyByZXNvdXJjZSBkZXNjcmliZXMgdGhlIHN0YXRlIG9mIGEgU3Vic2NyaXB0aW9uIGR1cmluZyBub3RpZmljYXRpb25zLlxyXG4gICAqL1xyXG4gIFN1YnNjcmlwdGlvblN0YXR1czoge1xyXG4gICAgZGlzcGxheTogXCJTdWJzY3JpcHRpb25TdGF0dXNcIixcclxuICAgIGNvZGU6IFwiU3Vic2NyaXB0aW9uU3RhdHVzXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNvdXJjZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogU3Vic2NyaXB0aW9uVG9waWM6IERlc2NyaWJlcyBhIHN0cmVhbSBvZiByZXNvdXJjZSBzdGF0ZSBjaGFuZ2VzIGlkZW50aWZpZWQgYnkgdHJpZ2dlciBjcml0ZXJpYSBhbmQgYW5ub3RhdGVkIHdpdGggbGFiZWxzIHVzZWZ1bCB0byBmaWx0ZXIgcHJvamVjdGlvbnMgZnJvbSB0aGlzIHRvcGljLlxyXG4gICAqL1xyXG4gIFN1YnNjcmlwdGlvblRvcGljOiB7XHJcbiAgICBkaXNwbGF5OiBcIlN1YnNjcmlwdGlvblRvcGljXCIsXHJcbiAgICBjb2RlOiBcIlN1YnNjcmlwdGlvblRvcGljXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNvdXJjZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogU3Vic3RhbmNlOiBBIGhvbW9nZW5lb3VzIG1hdGVyaWFsIHdpdGggYSBkZWZpbml0ZSBjb21wb3NpdGlvbi5cclxuICAgKi9cclxuICBTdWJzdGFuY2U6IHtcclxuICAgIGRpc3BsYXk6IFwiU3Vic3RhbmNlXCIsXHJcbiAgICBjb2RlOiBcIlN1YnN0YW5jZVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVzb3VyY2UtdHlwZXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIFN1YnN0YW5jZURlZmluaXRpb246IFRoZSBkZXRhaWxlZCBkZXNjcmlwdGlvbiBvZiBhIHN1YnN0YW5jZSwgdHlwaWNhbGx5IGF0IGEgbGV2ZWwgYmV5b25kIHdoYXQgaXMgdXNlZCBmb3IgcHJlc2NyaWJpbmcuXHJcbiAgICovXHJcbiAgU3Vic3RhbmNlRGVmaW5pdGlvbjoge1xyXG4gICAgZGlzcGxheTogXCJTdWJzdGFuY2VEZWZpbml0aW9uXCIsXHJcbiAgICBjb2RlOiBcIlN1YnN0YW5jZURlZmluaXRpb25cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc291cmNlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBTdXBwbHlEZWxpdmVyeTogUmVjb3JkIG9mIGRlbGl2ZXJ5IG9mIHdoYXQgaXMgc3VwcGxpZWQuXHJcbiAgICovXHJcbiAgU3VwcGx5RGVsaXZlcnk6IHtcclxuICAgIGRpc3BsYXk6IFwiU3VwcGx5RGVsaXZlcnlcIixcclxuICAgIGNvZGU6IFwiU3VwcGx5RGVsaXZlcnlcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc291cmNlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBTdXBwbHlSZXF1ZXN0OiBBIHJlY29yZCBvZiBhIHJlcXVlc3QgZm9yIGEgbWVkaWNhdGlvbiwgc3Vic3RhbmNlIG9yIGRldmljZSB1c2VkIGluIHRoZSBoZWFsdGhjYXJlIHNldHRpbmcuXHJcbiAgICovXHJcbiAgU3VwcGx5UmVxdWVzdDoge1xyXG4gICAgZGlzcGxheTogXCJTdXBwbHlSZXF1ZXN0XCIsXHJcbiAgICBjb2RlOiBcIlN1cHBseVJlcXVlc3RcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc291cmNlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBUYXNrOiBBIHRhc2sgdG8gYmUgcGVyZm9ybWVkLlxyXG4gICAqL1xyXG4gIFRhc2s6IHtcclxuICAgIGRpc3BsYXk6IFwiVGFza1wiLFxyXG4gICAgY29kZTogXCJUYXNrXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNvdXJjZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogVGVybWlub2xvZ3lDYXBhYmlsaXRpZXM6IEEgVGVybWlub2xvZ3lDYXBhYmlsaXRpZXMgcmVzb3VyY2UgZG9jdW1lbnRzIGEgc2V0IG9mIGNhcGFiaWxpdGllcyAoYmVoYXZpb3JzKSBvZiBhIEZISVIgVGVybWlub2xvZ3kgU2VydmVyIHRoYXQgbWF5IGJlIHVzZWQgYXMgYSBzdGF0ZW1lbnQgb2YgYWN0dWFsIHNlcnZlciBmdW5jdGlvbmFsaXR5IG9yIGEgc3RhdGVtZW50IG9mIHJlcXVpcmVkIG9yIGRlc2lyZWQgc2VydmVyIGltcGxlbWVudGF0aW9uLlxyXG4gICAqL1xyXG4gIFRlcm1pbm9sb2d5Q2FwYWJpbGl0aWVzOiB7XHJcbiAgICBkaXNwbGF5OiBcIlRlcm1pbm9sb2d5Q2FwYWJpbGl0aWVzXCIsXHJcbiAgICBjb2RlOiBcIlRlcm1pbm9sb2d5Q2FwYWJpbGl0aWVzXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNvdXJjZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogVGVzdFJlcG9ydDogQSBzdW1tYXJ5IG9mIGluZm9ybWF0aW9uIGJhc2VkIG9uIHRoZSByZXN1bHRzIG9mIGV4ZWN1dGluZyBhIFRlc3RTY3JpcHQuXHJcbiAgICovXHJcbiAgVGVzdFJlcG9ydDoge1xyXG4gICAgZGlzcGxheTogXCJUZXN0UmVwb3J0XCIsXHJcbiAgICBjb2RlOiBcIlRlc3RSZXBvcnRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc291cmNlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBUZXN0U2NyaXB0OiBBIHN0cnVjdHVyZWQgc2V0IG9mIHRlc3RzIGFnYWluc3QgYSBGSElSIHNlcnZlciBvciBjbGllbnQgaW1wbGVtZW50YXRpb24gdG8gZGV0ZXJtaW5lIGNvbXBsaWFuY2UgYWdhaW5zdCB0aGUgRkhJUiBzcGVjaWZpY2F0aW9uLlxyXG4gICAqL1xyXG4gIFRlc3RTY3JpcHQ6IHtcclxuICAgIGRpc3BsYXk6IFwiVGVzdFNjcmlwdFwiLFxyXG4gICAgY29kZTogXCJUZXN0U2NyaXB0XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNvdXJjZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogdXJuOmhsNy1vcmc6c2R3ZzpjY2RhLW5vblhNTEJvZHk6MS4xXHJcbiAgICovXHJcbiAgRm9yRG9jdW1lbnRzRm9sbG93aW5nQ0NEQTExQ29uc3RyYWludHNVc2luZ0FOb25TdHJ1Y3R1cmVkQm9keToge1xyXG4gICAgZGlzcGxheTogXCJGb3IgZG9jdW1lbnRzIGZvbGxvd2luZyBDLUNEQSAxLjEgY29uc3RyYWludHMgdXNpbmcgYSBub24gc3RydWN0dXJlZCBib2R5LlwiLFxyXG4gICAgY29kZTogXCJ1cm46aGw3LW9yZzpzZHdnOmNjZGEtbm9uWE1MQm9keToxLjFcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaWhlLm5ldC9maGlyL1ZhbHVlU2V0L0lIRS5Gb3JtYXRDb2RlLmNvZGVzeXN0ZW1cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IHVybjpobDctb3JnOnNkd2c6Y2NkYS1ub25YTUxCb2R5OjIuMVxyXG4gICAqL1xyXG4gIEZvckRvY3VtZW50c0ZvbGxvd2luZ0NDREEyMUNvbnN0cmFpbnRzVXNpbmdBTm9uU3RydWN0dXJlZEJvZHk6IHtcclxuICAgIGRpc3BsYXk6IFwiRm9yIGRvY3VtZW50cyBmb2xsb3dpbmcgQy1DREEgMi4xIGNvbnN0cmFpbnRzIHVzaW5nIGEgbm9uIHN0cnVjdHVyZWQgYm9keS5cIixcclxuICAgIGNvZGU6IFwidXJuOmhsNy1vcmc6c2R3ZzpjY2RhLW5vblhNTEJvZHk6Mi4xXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2loZS5uZXQvZmhpci9WYWx1ZVNldC9JSEUuRm9ybWF0Q29kZS5jb2Rlc3lzdGVtXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aGw3LW9yZzpzZHdnOmNjZGEtc3RydWN0dXJlZEJvZHk6MS4xXHJcbiAgICovXHJcbiAgRm9yRG9jdW1lbnRzRm9sbG93aW5nQ0NEQTExQ29uc3RyYWludHNVc2luZ0FTdHJ1Y3R1cmVkQm9keToge1xyXG4gICAgZGlzcGxheTogXCJGb3IgZG9jdW1lbnRzIGZvbGxvd2luZyBDLUNEQSAxLjEgY29uc3RyYWludHMgdXNpbmcgYSBzdHJ1Y3R1cmVkIGJvZHkuXCIsXHJcbiAgICBjb2RlOiBcInVybjpobDctb3JnOnNkd2c6Y2NkYS1zdHJ1Y3R1cmVkQm9keToxLjFcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaWhlLm5ldC9maGlyL1ZhbHVlU2V0L0lIRS5Gb3JtYXRDb2RlLmNvZGVzeXN0ZW1cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IHVybjpobDctb3JnOnNkd2c6Y2NkYS1zdHJ1Y3R1cmVkQm9keToyLjFcclxuICAgKi9cclxuICBGb3JEb2N1bWVudHNGb2xsb3dpbmdDQ0RBMjFDb25zdHJhaW50c1VzaW5nQVN0cnVjdHVyZWRCb2R5OiB7XHJcbiAgICBkaXNwbGF5OiBcIkZvciBkb2N1bWVudHMgZm9sbG93aW5nIEMtQ0RBIDIuMSBjb25zdHJhaW50cyB1c2luZyBhIHN0cnVjdHVyZWQgYm9keS5cIixcclxuICAgIGNvZGU6IFwidXJuOmhsNy1vcmc6c2R3ZzpjY2RhLXN0cnVjdHVyZWRCb2R5OjIuMVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9paGUubmV0L2ZoaXIvVmFsdWVTZXQvSUhFLkZvcm1hdENvZGUuY29kZXN5c3RlbVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogdXJuOmloZTpjYXJkOkNSQzoyMDEyXHJcbiAgICovXHJcbiAgQ2FyZGlvbG9neUNSQzoge1xyXG4gICAgZGlzcGxheTogXCJDYXJkaW9sb2d5IENSQ1wiLFxyXG4gICAgY29kZTogXCJ1cm46aWhlOmNhcmQ6Q1JDOjIwMTJcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaWhlLm5ldC9maGlyL1ZhbHVlU2V0L0lIRS5Gb3JtYXRDb2RlLmNvZGVzeXN0ZW1cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IHVybjppaGU6Y2FyZDpFUFJDLUlFOjIwMTRcclxuICAgKi9cclxuICBDYXJkaW9sb2d5RVBSQ0lFOiB7XHJcbiAgICBkaXNwbGF5OiBcIkNhcmRpb2xvZ3kgRVBSQy1JRVwiLFxyXG4gICAgY29kZTogXCJ1cm46aWhlOmNhcmQ6RVBSQy1JRToyMDE0XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2loZS5uZXQvZmhpci9WYWx1ZVNldC9JSEUuRm9ybWF0Q29kZS5jb2Rlc3lzdGVtXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aWhlOmNhcmQ6aW1hZ2luZzoyMDExXHJcbiAgICovXHJcbiAgQ2FyZGlhY0ltYWdpbmdSZXBvcnQ6IHtcclxuICAgIGRpc3BsYXk6IFwiQ2FyZGlhYyBJbWFnaW5nIFJlcG9ydFwiLFxyXG4gICAgY29kZTogXCJ1cm46aWhlOmNhcmQ6aW1hZ2luZzoyMDExXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2loZS5uZXQvZmhpci9WYWx1ZVNldC9JSEUuRm9ybWF0Q29kZS5jb2Rlc3lzdGVtXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aWhlOmRlbnQ6Q0RBOkltYWdpbmdSZXBvcnRTdHJ1Y3R1cmVkSGVhZGluZ3M6MjAxM1xyXG4gICAqL1xyXG4gIERlbnRhbENEQToge1xyXG4gICAgZGlzcGxheTogXCJEZW50YWwgQ0RBXCIsXHJcbiAgICBjb2RlOiBcInVybjppaGU6ZGVudDpDREE6SW1hZ2luZ1JlcG9ydFN0cnVjdHVyZWRIZWFkaW5nczoyMDEzXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2loZS5uZXQvZmhpci9WYWx1ZVNldC9JSEUuRm9ybWF0Q29kZS5jb2Rlc3lzdGVtXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aWhlOmRlbnQ6UERGXHJcbiAgICovXHJcbiAgRGVudGFsUERGOiB7XHJcbiAgICBkaXNwbGF5OiBcIkRlbnRhbCBQREZcIixcclxuICAgIGNvZGU6IFwidXJuOmloZTpkZW50OlBERlwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9paGUubmV0L2ZoaXIvVmFsdWVTZXQvSUhFLkZvcm1hdENvZGUuY29kZXN5c3RlbVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogdXJuOmloZTpkZW50OlRFWFRcclxuICAgKi9cclxuICBEZW50YWxUZXh0OiB7XHJcbiAgICBkaXNwbGF5OiBcIkRlbnRhbCBUZXh0XCIsXHJcbiAgICBjb2RlOiBcInVybjppaGU6ZGVudDpURVhUXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2loZS5uZXQvZmhpci9WYWx1ZVNldC9JSEUuRm9ybWF0Q29kZS5jb2Rlc3lzdGVtXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aWhlOml0aTphcHBjOjIwMTY6Y29uc2VudFxyXG4gICAqL1xyXG4gIEFkdmFuY2VkUGF0aWVudFByaXZhY3lDb25zZW50czoge1xyXG4gICAgZGlzcGxheTogXCJBZHZhbmNlZCBQYXRpZW50IFByaXZhY3kgQ29uc2VudHNcIixcclxuICAgIGNvZGU6IFwidXJuOmloZTppdGk6YXBwYzoyMDE2OmNvbnNlbnRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaWhlLm5ldC9maGlyL1ZhbHVlU2V0L0lIRS5Gb3JtYXRDb2RlLmNvZGVzeXN0ZW1cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IHVybjppaGU6aXRpOmJwcGMtc2Q6MjAwN1xyXG4gICAqL1xyXG4gIEJhc2ljUGF0aWVudFByaXZhY3lDb25zZW50c1dpdGhTY2FubmVkRG9jdW1lbnQ6IHtcclxuICAgIGRpc3BsYXk6IFwiQmFzaWMgUGF0aWVudCBQcml2YWN5IENvbnNlbnRzIHdpdGggU2Nhbm5lZCBEb2N1bWVudFwiLFxyXG4gICAgY29kZTogXCJ1cm46aWhlOml0aTpicHBjLXNkOjIwMDdcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaWhlLm5ldC9maGlyL1ZhbHVlU2V0L0lIRS5Gb3JtYXRDb2RlLmNvZGVzeXN0ZW1cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IHVybjppaGU6aXRpOmJwcGM6MjAwN1xyXG4gICAqL1xyXG4gIEJhc2ljUGF0aWVudFByaXZhY3lDb25zZW50czoge1xyXG4gICAgZGlzcGxheTogXCJCYXNpYyBQYXRpZW50IFByaXZhY3kgQ29uc2VudHNcIixcclxuICAgIGNvZGU6IFwidXJuOmloZTppdGk6YnBwYzoyMDA3XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2loZS5uZXQvZmhpci9WYWx1ZVNldC9JSEUuRm9ybWF0Q29kZS5jb2Rlc3lzdGVtXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aWhlOml0aTpkc2c6ZGV0YWNoZWQ6MjAxNFxyXG4gICAqL1xyXG4gIERTR0RldGFjaGVkRG9jdW1lbnQ6IHtcclxuICAgIGRpc3BsYXk6IFwiRFNHIERldGFjaGVkIERvY3VtZW50XCIsXHJcbiAgICBjb2RlOiBcInVybjppaGU6aXRpOmRzZzpkZXRhY2hlZDoyMDE0XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2loZS5uZXQvZmhpci9WYWx1ZVNldC9JSEUuRm9ybWF0Q29kZS5jb2Rlc3lzdGVtXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aWhlOml0aTpkc2c6ZW52ZWxvcGluZzoyMDE0XHJcbiAgICovXHJcbiAgRFNHRW52ZWxvcGluZ0RvY3VtZW50OiB7XHJcbiAgICBkaXNwbGF5OiBcIkRTRyBFbnZlbG9waW5nIERvY3VtZW50XCIsXHJcbiAgICBjb2RlOiBcInVybjppaGU6aXRpOmRzZzplbnZlbG9waW5nOjIwMTRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaWhlLm5ldC9maGlyL1ZhbHVlU2V0L0lIRS5Gb3JtYXRDb2RlLmNvZGVzeXN0ZW1cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IHVybjppaGU6aXRpOnhkcy1zZDpwZGY6MjAwOFxyXG4gICAqL1xyXG4gIFBERkVtYmVkZGVkSW5DREFQZXJYRFNTRFByb2ZpbGU6IHtcclxuICAgIGRpc3BsYXk6IFwiUERGIGVtYmVkZGVkIGluIENEQSBwZXIgWERTLVNEIHByb2ZpbGVcIixcclxuICAgIGNvZGU6IFwidXJuOmloZTppdGk6eGRzLXNkOnBkZjoyMDA4XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2loZS5uZXQvZmhpci9WYWx1ZVNldC9JSEUuRm9ybWF0Q29kZS5jb2Rlc3lzdGVtXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aWhlOml0aTp4ZHMtc2Q6dGV4dDoyMDA4XHJcbiAgICovXHJcbiAgVGV4dEVtYmVkZGVkSW5DREFQZXJYRFNTRFByb2ZpbGU6IHtcclxuICAgIGRpc3BsYXk6IFwiVGV4dCBlbWJlZGRlZCBpbiBDREEgcGVyIFhEUy1TRCBwcm9maWxlXCIsXHJcbiAgICBjb2RlOiBcInVybjppaGU6aXRpOnhkcy1zZDp0ZXh0OjIwMDhcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaWhlLm5ldC9maGlyL1ZhbHVlU2V0L0lIRS5Gb3JtYXRDb2RlLmNvZGVzeXN0ZW1cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IHVybjppaGU6aXRpOnhkczoyMDE3Om1pbWVUeXBlU3VmZmljaWVudFxyXG4gICAqL1xyXG4gIE1pbWVUeXBlU3VmZmljaWVudDoge1xyXG4gICAgZGlzcGxheTogXCJtaW1lVHlwZSBTdWZmaWNpZW50XCIsXHJcbiAgICBjb2RlOiBcInVybjppaGU6aXRpOnhkczoyMDE3Om1pbWVUeXBlU3VmZmljaWVudFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9paGUubmV0L2ZoaXIvVmFsdWVTZXQvSUhFLkZvcm1hdENvZGUuY29kZXN5c3RlbVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogdXJuOmloZTppdGk6eGR3OjIwMTE6d29ya2Zsb3dEb2NcclxuICAgKi9cclxuICBYRFdXb3JrZmxvd0RvY3VtZW50OiB7XHJcbiAgICBkaXNwbGF5OiBcIlhEVyBXb3JrZmxvdyBEb2N1bWVudFwiLFxyXG4gICAgY29kZTogXCJ1cm46aWhlOml0aTp4ZHc6MjAxMTp3b3JrZmxvd0RvY1wiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9paGUubmV0L2ZoaXIvVmFsdWVTZXQvSUhFLkZvcm1hdENvZGUuY29kZXN5c3RlbVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogdXJuOmloZTpsYWI6eGQtbGFiOjIwMDhcclxuICAgKi9cclxuICBDREFMYWJvcmF0b3J5UmVwb3J0OiB7XHJcbiAgICBkaXNwbGF5OiBcIkNEQSBMYWJvcmF0b3J5IFJlcG9ydFwiLFxyXG4gICAgY29kZTogXCJ1cm46aWhlOmxhYjp4ZC1sYWI6MjAwOFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9paGUubmV0L2ZoaXIvVmFsdWVTZXQvSUhFLkZvcm1hdENvZGUuY29kZXN5c3RlbVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogdXJuOmloZTpwYXQ6YXBzcjphbGw6MjAxMFxyXG4gICAqL1xyXG4gIEFuYXRvbWljUGF0aG9sb2d5U3RydWN0dXJlZFJlcG9ydEFsbDoge1xyXG4gICAgZGlzcGxheTogXCJBbmF0b21pYyBQYXRob2xvZ3kgU3RydWN0dXJlZCBSZXBvcnQgQWxsXCIsXHJcbiAgICBjb2RlOiBcInVybjppaGU6cGF0OmFwc3I6YWxsOjIwMTBcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaWhlLm5ldC9maGlyL1ZhbHVlU2V0L0lIRS5Gb3JtYXRDb2RlLmNvZGVzeXN0ZW1cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IHVybjppaGU6cGF0OmFwc3I6Y2FuY2VyOmFsbDoyMDEwXHJcbiAgICovXHJcbiAgQW5hdG9taWNQYXRob2xvZ3lTdHJ1Y3R1cmVkUmVwb3J0Q2FuY2VyQWxsOiB7XHJcbiAgICBkaXNwbGF5OiBcIkFuYXRvbWljIFBhdGhvbG9neSBTdHJ1Y3R1cmVkIFJlcG9ydCBDYW5jZXIgQWxsXCIsXHJcbiAgICBjb2RlOiBcInVybjppaGU6cGF0OmFwc3I6Y2FuY2VyOmFsbDoyMDEwXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2loZS5uZXQvZmhpci9WYWx1ZVNldC9JSEUuRm9ybWF0Q29kZS5jb2Rlc3lzdGVtXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aWhlOnBhdDphcHNyOmNhbmNlcjpicmVhc3Q6MjAxMFxyXG4gICAqL1xyXG4gIEFuYXRvbWljUGF0aG9sb2d5U3RydWN0dXJlZFJlcG9ydENhbmNlckJyZWFzdDoge1xyXG4gICAgZGlzcGxheTogXCJBbmF0b21pYyBQYXRob2xvZ3kgU3RydWN0dXJlZCBSZXBvcnQgQ2FuY2VyIEJyZWFzdFwiLFxyXG4gICAgY29kZTogXCJ1cm46aWhlOnBhdDphcHNyOmNhbmNlcjpicmVhc3Q6MjAxMFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9paGUubmV0L2ZoaXIvVmFsdWVTZXQvSUhFLkZvcm1hdENvZGUuY29kZXN5c3RlbVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogdXJuOmloZTpwYXQ6YXBzcjpjYW5jZXI6Y2Vydml4OjIwMTBcclxuICAgKi9cclxuICBBbmF0b21pY1BhdGhvbG9neVN0cnVjdHVyZWRSZXBvcnRDYW5jZXJDZXJ2aXg6IHtcclxuICAgIGRpc3BsYXk6IFwiQW5hdG9taWMgUGF0aG9sb2d5IFN0cnVjdHVyZWQgUmVwb3J0IENhbmNlciBDZXJ2aXhcIixcclxuICAgIGNvZGU6IFwidXJuOmloZTpwYXQ6YXBzcjpjYW5jZXI6Y2Vydml4OjIwMTBcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaWhlLm5ldC9maGlyL1ZhbHVlU2V0L0lIRS5Gb3JtYXRDb2RlLmNvZGVzeXN0ZW1cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IHVybjppaGU6cGF0OmFwc3I6Y2FuY2VyOmNvbG9uOjIwMTBcclxuICAgKi9cclxuICBBbmF0b21pY1BhdGhvbG9neVN0cnVjdHVyZWRSZXBvcnRDYW5jZXJDb2xvbjoge1xyXG4gICAgZGlzcGxheTogXCJBbmF0b21pYyBQYXRob2xvZ3kgU3RydWN0dXJlZCBSZXBvcnQgQ2FuY2VyIENvbG9uXCIsXHJcbiAgICBjb2RlOiBcInVybjppaGU6cGF0OmFwc3I6Y2FuY2VyOmNvbG9uOjIwMTBcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaWhlLm5ldC9maGlyL1ZhbHVlU2V0L0lIRS5Gb3JtYXRDb2RlLmNvZGVzeXN0ZW1cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IHVybjppaGU6cGF0OmFwc3I6Y2FuY2VyOmVuZG9tZXRyaXVtOjIwMTBcclxuICAgKi9cclxuICBBbmF0b21pY1BhdGhvbG9neVN0cnVjdHVyZWRSZXBvcnRDYW5jZXJFbmRvbWV0cml1bToge1xyXG4gICAgZGlzcGxheTogXCJBbmF0b21pYyBQYXRob2xvZ3kgU3RydWN0dXJlZCBSZXBvcnQgQ2FuY2VyIEVuZG9tZXRyaXVtXCIsXHJcbiAgICBjb2RlOiBcInVybjppaGU6cGF0OmFwc3I6Y2FuY2VyOmVuZG9tZXRyaXVtOjIwMTBcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaWhlLm5ldC9maGlyL1ZhbHVlU2V0L0lIRS5Gb3JtYXRDb2RlLmNvZGVzeXN0ZW1cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IHVybjppaGU6cGF0OmFwc3I6Y2FuY2VyOmVzb3BoYWd1czoyMDEwXHJcbiAgICovXHJcbiAgQW5hdG9taWNQYXRob2xvZ3lTdHJ1Y3R1cmVkUmVwb3J0Q2FuY2VyRXNvcGhhZ3VzOiB7XHJcbiAgICBkaXNwbGF5OiBcIkFuYXRvbWljIFBhdGhvbG9neSBTdHJ1Y3R1cmVkIFJlcG9ydCBDYW5jZXIgRXNvcGhhZ3VzXCIsXHJcbiAgICBjb2RlOiBcInVybjppaGU6cGF0OmFwc3I6Y2FuY2VyOmVzb3BoYWd1czoyMDEwXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2loZS5uZXQvZmhpci9WYWx1ZVNldC9JSEUuRm9ybWF0Q29kZS5jb2Rlc3lzdGVtXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aWhlOnBhdDphcHNyOmNhbmNlcjpraWRuZXk6MjAxMFxyXG4gICAqL1xyXG4gIEFuYXRvbWljUGF0aG9sb2d5U3RydWN0dXJlZFJlcG9ydENhbmNlcktpZG5leToge1xyXG4gICAgZGlzcGxheTogXCJBbmF0b21pYyBQYXRob2xvZ3kgU3RydWN0dXJlZCBSZXBvcnQgQ2FuY2VyIEtpZG5leVwiLFxyXG4gICAgY29kZTogXCJ1cm46aWhlOnBhdDphcHNyOmNhbmNlcjpraWRuZXk6MjAxMFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9paGUubmV0L2ZoaXIvVmFsdWVTZXQvSUhFLkZvcm1hdENvZGUuY29kZXN5c3RlbVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogdXJuOmloZTpwYXQ6YXBzcjpjYW5jZXI6bGFyeW54OjIwMTBcclxuICAgKi9cclxuICBBbmF0b21pY1BhdGhvbG9neVN0cnVjdHVyZWRSZXBvcnRDYW5jZXJMYXJ5bng6IHtcclxuICAgIGRpc3BsYXk6IFwiQW5hdG9taWMgUGF0aG9sb2d5IFN0cnVjdHVyZWQgUmVwb3J0IENhbmNlciBMYXJ5bnhcIixcclxuICAgIGNvZGU6IFwidXJuOmloZTpwYXQ6YXBzcjpjYW5jZXI6bGFyeW54OjIwMTBcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaWhlLm5ldC9maGlyL1ZhbHVlU2V0L0lIRS5Gb3JtYXRDb2RlLmNvZGVzeXN0ZW1cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IHVybjppaGU6cGF0OmFwc3I6Y2FuY2VyOmxpcF9vcmFsX2Nhdml0eToyMDEwXHJcbiAgICovXHJcbiAgQW5hdG9taWNQYXRob2xvZ3lTdHJ1Y3R1cmVkUmVwb3J0Q2FuY2VyTGlwT3JhbENhdml0eToge1xyXG4gICAgZGlzcGxheTogXCJBbmF0b21pYyBQYXRob2xvZ3kgU3RydWN0dXJlZCBSZXBvcnQgQ2FuY2VyIExpcCBPcmFsIENhdml0eVwiLFxyXG4gICAgY29kZTogXCJ1cm46aWhlOnBhdDphcHNyOmNhbmNlcjpsaXBfb3JhbF9jYXZpdHk6MjAxMFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9paGUubmV0L2ZoaXIvVmFsdWVTZXQvSUhFLkZvcm1hdENvZGUuY29kZXN5c3RlbVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogdXJuOmloZTpwYXQ6YXBzcjpjYW5jZXI6bGl2ZXI6MjAxMFxyXG4gICAqL1xyXG4gIEFuYXRvbWljUGF0aG9sb2d5U3RydWN0dXJlZFJlcG9ydENhbmNlckxpdmVyOiB7XHJcbiAgICBkaXNwbGF5OiBcIkFuYXRvbWljIFBhdGhvbG9neSBTdHJ1Y3R1cmVkIFJlcG9ydCBDYW5jZXIgTGl2ZXJcIixcclxuICAgIGNvZGU6IFwidXJuOmloZTpwYXQ6YXBzcjpjYW5jZXI6bGl2ZXI6MjAxMFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9paGUubmV0L2ZoaXIvVmFsdWVTZXQvSUhFLkZvcm1hdENvZGUuY29kZXN5c3RlbVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogdXJuOmloZTpwYXQ6YXBzcjpjYW5jZXI6bHVuZzoyMDEwXHJcbiAgICovXHJcbiAgQW5hdG9taWNQYXRob2xvZ3lTdHJ1Y3R1cmVkUmVwb3J0Q2FuY2VyTHVuZzoge1xyXG4gICAgZGlzcGxheTogXCJBbmF0b21pYyBQYXRob2xvZ3kgU3RydWN0dXJlZCBSZXBvcnQgQ2FuY2VyIEx1bmdcIixcclxuICAgIGNvZGU6IFwidXJuOmloZTpwYXQ6YXBzcjpjYW5jZXI6bHVuZzoyMDEwXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2loZS5uZXQvZmhpci9WYWx1ZVNldC9JSEUuRm9ybWF0Q29kZS5jb2Rlc3lzdGVtXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aWhlOnBhdDphcHNyOmNhbmNlcjpvdmFyeToyMDEwXHJcbiAgICovXHJcbiAgQW5hdG9taWNQYXRob2xvZ3lTdHJ1Y3R1cmVkUmVwb3J0Q2FuY2VyT3Zhcnk6IHtcclxuICAgIGRpc3BsYXk6IFwiQW5hdG9taWMgUGF0aG9sb2d5IFN0cnVjdHVyZWQgUmVwb3J0IENhbmNlciBPdmFyeVwiLFxyXG4gICAgY29kZTogXCJ1cm46aWhlOnBhdDphcHNyOmNhbmNlcjpvdmFyeToyMDEwXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2loZS5uZXQvZmhpci9WYWx1ZVNldC9JSEUuRm9ybWF0Q29kZS5jb2Rlc3lzdGVtXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aWhlOnBhdDphcHNyOmNhbmNlcjpwYW5jcmVhczoyMDEwXHJcbiAgICovXHJcbiAgQW5hdG9taWNQYXRob2xvZ3lTdHJ1Y3R1cmVkUmVwb3J0Q2FuY2VyUGFuY3JlYXM6IHtcclxuICAgIGRpc3BsYXk6IFwiQW5hdG9taWMgUGF0aG9sb2d5IFN0cnVjdHVyZWQgUmVwb3J0IENhbmNlciBQYW5jcmVhc1wiLFxyXG4gICAgY29kZTogXCJ1cm46aWhlOnBhdDphcHNyOmNhbmNlcjpwYW5jcmVhczoyMDEwXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2loZS5uZXQvZmhpci9WYWx1ZVNldC9JSEUuRm9ybWF0Q29kZS5jb2Rlc3lzdGVtXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aWhlOnBhdDphcHNyOmNhbmNlcjpwaGFyeW54OjIwMTBcclxuICAgKi9cclxuICBBbmF0b21pY1BhdGhvbG9neVN0cnVjdHVyZWRSZXBvcnRDYW5jZXJQaGFyeW54OiB7XHJcbiAgICBkaXNwbGF5OiBcIkFuYXRvbWljIFBhdGhvbG9neSBTdHJ1Y3R1cmVkIFJlcG9ydCBDYW5jZXIgUGhhcnlueFwiLFxyXG4gICAgY29kZTogXCJ1cm46aWhlOnBhdDphcHNyOmNhbmNlcjpwaGFyeW54OjIwMTBcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaWhlLm5ldC9maGlyL1ZhbHVlU2V0L0lIRS5Gb3JtYXRDb2RlLmNvZGVzeXN0ZW1cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IHVybjppaGU6cGF0OmFwc3I6Y2FuY2VyOnByb3N0YXRlOjIwMTBcclxuICAgKi9cclxuICBBbmF0b21pY1BhdGhvbG9neVN0cnVjdHVyZWRSZXBvcnRDYW5jZXJQcm9zdGF0ZToge1xyXG4gICAgZGlzcGxheTogXCJBbmF0b21pYyBQYXRob2xvZ3kgU3RydWN0dXJlZCBSZXBvcnQgQ2FuY2VyIFByb3N0YXRlXCIsXHJcbiAgICBjb2RlOiBcInVybjppaGU6cGF0OmFwc3I6Y2FuY2VyOnByb3N0YXRlOjIwMTBcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaWhlLm5ldC9maGlyL1ZhbHVlU2V0L0lIRS5Gb3JtYXRDb2RlLmNvZGVzeXN0ZW1cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IHVybjppaGU6cGF0OmFwc3I6Y2FuY2VyOnNhbGl2YXJ5X2dsYW5kOjIwMTBcclxuICAgKi9cclxuICBBbmF0b21pY1BhdGhvbG9neVN0cnVjdHVyZWRSZXBvcnRDYW5jZXJTYWxpdmFyeUdsYW5kOiB7XHJcbiAgICBkaXNwbGF5OiBcIkFuYXRvbWljIFBhdGhvbG9neSBTdHJ1Y3R1cmVkIFJlcG9ydCBDYW5jZXIgU2FsaXZhcnkgR2xhbmRcIixcclxuICAgIGNvZGU6IFwidXJuOmloZTpwYXQ6YXBzcjpjYW5jZXI6c2FsaXZhcnlfZ2xhbmQ6MjAxMFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9paGUubmV0L2ZoaXIvVmFsdWVTZXQvSUhFLkZvcm1hdENvZGUuY29kZXN5c3RlbVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogdXJuOmloZTpwYXQ6YXBzcjpjYW5jZXI6c2tpbjoyMDEwXHJcbiAgICovXHJcbiAgQW5hdG9taWNQYXRob2xvZ3lTdHJ1Y3R1cmVkUmVwb3J0Q2FuY2VyU2tpbjoge1xyXG4gICAgZGlzcGxheTogXCJBbmF0b21pYyBQYXRob2xvZ3kgU3RydWN0dXJlZCBSZXBvcnQgQ2FuY2VyIFNraW5cIixcclxuICAgIGNvZGU6IFwidXJuOmloZTpwYXQ6YXBzcjpjYW5jZXI6c2tpbjoyMDEwXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2loZS5uZXQvZmhpci9WYWx1ZVNldC9JSEUuRm9ybWF0Q29kZS5jb2Rlc3lzdGVtXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aWhlOnBhdDphcHNyOmNhbmNlcjpzdG9tYWNoOjIwMTBcclxuICAgKi9cclxuICBBbmF0b21pY1BhdGhvbG9neVN0cnVjdHVyZWRSZXBvcnRDYW5jZXJTdG9tYWNoOiB7XHJcbiAgICBkaXNwbGF5OiBcIkFuYXRvbWljIFBhdGhvbG9neSBTdHJ1Y3R1cmVkIFJlcG9ydCBDYW5jZXIgU3RvbWFjaFwiLFxyXG4gICAgY29kZTogXCJ1cm46aWhlOnBhdDphcHNyOmNhbmNlcjpzdG9tYWNoOjIwMTBcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaWhlLm5ldC9maGlyL1ZhbHVlU2V0L0lIRS5Gb3JtYXRDb2RlLmNvZGVzeXN0ZW1cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IHVybjppaGU6cGF0OmFwc3I6Y2FuY2VyOnRlc3RpczoyMDEwXHJcbiAgICovXHJcbiAgQW5hdG9taWNQYXRob2xvZ3lTdHJ1Y3R1cmVkUmVwb3J0Q2FuY2VyVGVzdGlzOiB7XHJcbiAgICBkaXNwbGF5OiBcIkFuYXRvbWljIFBhdGhvbG9neSBTdHJ1Y3R1cmVkIFJlcG9ydCBDYW5jZXIgVGVzdGlzXCIsXHJcbiAgICBjb2RlOiBcInVybjppaGU6cGF0OmFwc3I6Y2FuY2VyOnRlc3RpczoyMDEwXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2loZS5uZXQvZmhpci9WYWx1ZVNldC9JSEUuRm9ybWF0Q29kZS5jb2Rlc3lzdGVtXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aWhlOnBhdDphcHNyOmNhbmNlcjp0aHlyb2lkOjIwMTBcclxuICAgKi9cclxuICBBbmF0b21pY1BhdGhvbG9neVN0cnVjdHVyZWRSZXBvcnRDYW5jZXJUaHlyb2lkOiB7XHJcbiAgICBkaXNwbGF5OiBcIkFuYXRvbWljIFBhdGhvbG9neSBTdHJ1Y3R1cmVkIFJlcG9ydCBDYW5jZXIgVGh5cm9pZFwiLFxyXG4gICAgY29kZTogXCJ1cm46aWhlOnBhdDphcHNyOmNhbmNlcjp0aHlyb2lkOjIwMTBcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaWhlLm5ldC9maGlyL1ZhbHVlU2V0L0lIRS5Gb3JtYXRDb2RlLmNvZGVzeXN0ZW1cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IHVybjppaGU6cGF0OmFwc3I6Y2FuY2VyOnVyaW5hcnlfYmxhZGRlcjoyMDEwXHJcbiAgICovXHJcbiAgQW5hdG9taWNQYXRob2xvZ3lTdHJ1Y3R1cmVkUmVwb3J0Q2FuY2VyVXJpbmFyeUJsYWRkZXI6IHtcclxuICAgIGRpc3BsYXk6IFwiQW5hdG9taWMgUGF0aG9sb2d5IFN0cnVjdHVyZWQgUmVwb3J0IENhbmNlciBVcmluYXJ5IEJsYWRkZXJcIixcclxuICAgIGNvZGU6IFwidXJuOmloZTpwYXQ6YXBzcjpjYW5jZXI6dXJpbmFyeV9ibGFkZGVyOjIwMTBcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaWhlLm5ldC9maGlyL1ZhbHVlU2V0L0lIRS5Gb3JtYXRDb2RlLmNvZGVzeXN0ZW1cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IHVybjppaGU6cGNjOmFwcjplZHU6MjAwOFxyXG4gICAqL1xyXG4gIEFudGVwYXJ0dW1SZWNvcmRBUFJFZHVjYXRpb246IHtcclxuICAgIGRpc3BsYXk6IFwiQW50ZXBhcnR1bSBSZWNvcmQgKEFQUikgLSBFZHVjYXRpb25cIixcclxuICAgIGNvZGU6IFwidXJuOmloZTpwY2M6YXByOmVkdToyMDA4XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2loZS5uZXQvZmhpci9WYWx1ZVNldC9JSEUuRm9ybWF0Q29kZS5jb2Rlc3lzdGVtXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aWhlOnBjYzphcHI6aGFuZHA6MjAwOFxyXG4gICAqL1xyXG4gIEFudGVwYXJ0dW1SZWNvcmRBUFJIaXN0b3J5QW5kUGh5c2ljYWw6IHtcclxuICAgIGRpc3BsYXk6IFwiQW50ZXBhcnR1bSBSZWNvcmQgKEFQUikgLSBIaXN0b3J5IGFuZCBQaHlzaWNhbFwiLFxyXG4gICAgY29kZTogXCJ1cm46aWhlOnBjYzphcHI6aGFuZHA6MjAwOFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9paGUubmV0L2ZoaXIvVmFsdWVTZXQvSUhFLkZvcm1hdENvZGUuY29kZXN5c3RlbVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogdXJuOmloZTpwY2M6YXByOmxhYjoyMDA4XHJcbiAgICovXHJcbiAgQW50ZXBhcnR1bVJlY29yZEFQUkxhYm9yYXRvcnk6IHtcclxuICAgIGRpc3BsYXk6IFwiQW50ZXBhcnR1bSBSZWNvcmQgKEFQUikgLSBMYWJvcmF0b3J5XCIsXHJcbiAgICBjb2RlOiBcInVybjppaGU6cGNjOmFwcjpsYWI6MjAwOFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9paGUubmV0L2ZoaXIvVmFsdWVTZXQvSUhFLkZvcm1hdENvZGUuY29kZXN5c3RlbVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogdXJuOmloZTpwY2M6YXBzOjIwMDdcclxuICAgKi9cclxuICBJSEVBbnRlcGFydHVtU3VtbWFyeToge1xyXG4gICAgZGlzcGxheTogXCJJSEUgQW50ZXBhcnR1bSBTdW1tYXJ5XCIsXHJcbiAgICBjb2RlOiBcInVybjppaGU6cGNjOmFwczoyMDA3XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2loZS5uZXQvZmhpci9WYWx1ZVNldC9JSEUuRm9ybWF0Q29kZS5jb2Rlc3lzdGVtXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aWhlOnBjYzpjbToyMDA4XHJcbiAgICovXHJcbiAgQ2FyZU1hbmFnZW1lbnRDTToge1xyXG4gICAgZGlzcGxheTogXCJDYXJlIE1hbmFnZW1lbnQgKENNKVwiLFxyXG4gICAgY29kZTogXCJ1cm46aWhlOnBjYzpjbToyMDA4XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2loZS5uZXQvZmhpci9WYWx1ZVNldC9JSEUuRm9ybWF0Q29kZS5jb2Rlc3lzdGVtXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aWhlOnBjYzpjcmM6MjAwOFxyXG4gICAqL1xyXG4gIENhbmNlclJlZ2lzdHJ5Q29udGVudENSQzoge1xyXG4gICAgZGlzcGxheTogXCJDYW5jZXIgUmVnaXN0cnkgQ29udGVudCAoQ1JDKVwiLFxyXG4gICAgY29kZTogXCJ1cm46aWhlOnBjYzpjcmM6MjAwOFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9paGUubmV0L2ZoaXIvVmFsdWVTZXQvSUhFLkZvcm1hdENvZGUuY29kZXN5c3RlbVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogdXJuOmloZTpwY2M6Y3RuOjIwMDdcclxuICAgKi9cclxuICBQQ0NDVE46IHtcclxuICAgIGRpc3BsYXk6IFwiUENDIENUTlwiLFxyXG4gICAgY29kZTogXCJ1cm46aWhlOnBjYzpjdG46MjAwN1wiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9paGUubmV0L2ZoaXIvVmFsdWVTZXQvSUhFLkZvcm1hdENvZGUuY29kZXN5c3RlbVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogdXJuOmloZTpwY2M6ZWRlczoyMDA3XHJcbiAgICovXHJcbiAgRW1lcmdlbmN5RGVwYXJ0bWVudEVuY291bnRlclN1bW1hcnlFREVTOiB7XHJcbiAgICBkaXNwbGF5OiBcIkVtZXJnZW5jeSBEZXBhcnRtZW50IEVuY291bnRlciBTdW1tYXJ5IChFREVTKVwiLFxyXG4gICAgY29kZTogXCJ1cm46aWhlOnBjYzplZGVzOjIwMDdcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaWhlLm5ldC9maGlyL1ZhbHVlU2V0L0lIRS5Gb3JtYXRDb2RlLmNvZGVzeXN0ZW1cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IHVybjppaGU6cGNjOmVkcG46MjAwN1xyXG4gICAqL1xyXG4gIFBDQ0VEUE46IHtcclxuICAgIGRpc3BsYXk6IFwiUENDIEVEUE5cIixcclxuICAgIGNvZGU6IFwidXJuOmloZTpwY2M6ZWRwbjoyMDA3XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2loZS5uZXQvZmhpci9WYWx1ZVNldC9JSEUuRm9ybWF0Q29kZS5jb2Rlc3lzdGVtXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aWhlOnBjYzplZHI6MjAwN1xyXG4gICAqL1xyXG4gIEVtZXJnZW5jeURlcGFydG1lbnRSZWZlcnJhbEVEUjoge1xyXG4gICAgZGlzcGxheTogXCJFbWVyZ2VuY3kgRGVwYXJ0bWVudCBSZWZlcnJhbCAoRURSKVwiLFxyXG4gICAgY29kZTogXCJ1cm46aWhlOnBjYzplZHI6MjAwN1wiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9paGUubmV0L2ZoaXIvVmFsdWVTZXQvSUhFLkZvcm1hdENvZGUuY29kZXN5c3RlbVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogdXJuOmloZTpwY2M6ZXRzOjIwMTFcclxuICAgKi9cclxuICBQQ0NFVFM6IHtcclxuICAgIGRpc3BsYXk6IFwiUENDIEVUU1wiLFxyXG4gICAgY29kZTogXCJ1cm46aWhlOnBjYzpldHM6MjAxMVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9paGUubmV0L2ZoaXIvVmFsdWVTZXQvSUhFLkZvcm1hdENvZGUuY29kZXN5c3RlbVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogdXJuOmloZTpwY2M6aHA6MjAwOFxyXG4gICAqL1xyXG4gIFBDQ0hQOiB7XHJcbiAgICBkaXNwbGF5OiBcIlBDQyBIUFwiLFxyXG4gICAgY29kZTogXCJ1cm46aWhlOnBjYzpocDoyMDA4XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2loZS5uZXQvZmhpci9WYWx1ZVNldC9JSEUuRm9ybWF0Q29kZS5jb2Rlc3lzdGVtXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aWhlOnBjYzppYzoyMDA4XHJcbiAgICovXHJcbiAgSW1tdW5pemF0aW9uQ29udGVudElDOiB7XHJcbiAgICBkaXNwbGF5OiBcIkltbXVuaXphdGlvbiBDb250ZW50IChJQylcIixcclxuICAgIGNvZGU6IFwidXJuOmloZTpwY2M6aWM6MjAwOFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9paGUubmV0L2ZoaXIvVmFsdWVTZXQvSUhFLkZvcm1hdENvZGUuY29kZXN5c3RlbVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogdXJuOmloZTpwY2M6aXRzOjIwMTFcclxuICAgKi9cclxuICBQQ0NJVFM6IHtcclxuICAgIGRpc3BsYXk6IFwiUENDIElUU1wiLFxyXG4gICAgY29kZTogXCJ1cm46aWhlOnBjYzppdHM6MjAxMVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9paGUubmV0L2ZoaXIvVmFsdWVTZXQvSUhFLkZvcm1hdENvZGUuY29kZXN5c3RlbVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogdXJuOmloZTpwY2M6bGRocDoyMDA5XHJcbiAgICovXHJcbiAgUENDTERIUDoge1xyXG4gICAgZGlzcGxheTogXCJQQ0MgTERIUFwiLFxyXG4gICAgY29kZTogXCJ1cm46aWhlOnBjYzpsZGhwOjIwMDlcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaWhlLm5ldC9maGlyL1ZhbHVlU2V0L0lIRS5Gb3JtYXRDb2RlLmNvZGVzeXN0ZW1cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IHVybjppaGU6cGNjOmxkczoyMDA5XHJcbiAgICovXHJcbiAgUENDTERTOiB7XHJcbiAgICBkaXNwbGF5OiBcIlBDQyBMRFNcIixcclxuICAgIGNvZGU6IFwidXJuOmloZTpwY2M6bGRzOjIwMDlcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaWhlLm5ldC9maGlyL1ZhbHVlU2V0L0lIRS5Gb3JtYXRDb2RlLmNvZGVzeXN0ZW1cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IHVybjppaGU6cGNjOm1kczoyMDA5XHJcbiAgICovXHJcbiAgUENDTURTOiB7XHJcbiAgICBkaXNwbGF5OiBcIlBDQyBNRFNcIixcclxuICAgIGNvZGU6IFwidXJuOmloZTpwY2M6bWRzOjIwMDlcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaWhlLm5ldC9maGlyL1ZhbHVlU2V0L0lIRS5Gb3JtYXRDb2RlLmNvZGVzeXN0ZW1cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IHVybjppaGU6cGNjOm5kczoyMDEwXHJcbiAgICovXHJcbiAgUENDTkRTOiB7XHJcbiAgICBkaXNwbGF5OiBcIlBDQyBORFNcIixcclxuICAgIGNvZGU6IFwidXJuOmloZTpwY2M6bmRzOjIwMTBcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaWhlLm5ldC9maGlyL1ZhbHVlU2V0L0lIRS5Gb3JtYXRDb2RlLmNvZGVzeXN0ZW1cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IHVybjppaGU6cGNjOm5uOjIwMDdcclxuICAgKi9cclxuICBQQ0NOTjoge1xyXG4gICAgZGlzcGxheTogXCJQQ0MgTk5cIixcclxuICAgIGNvZGU6IFwidXJuOmloZTpwY2M6bm46MjAwN1wiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9paGUubmV0L2ZoaXIvVmFsdWVTZXQvSUhFLkZvcm1hdENvZGUuY29kZXN5c3RlbVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogdXJuOmloZTpwY2M6cHB2czoyMDEwXHJcbiAgICovXHJcbiAgUENDUFBWUzoge1xyXG4gICAgZGlzcGxheTogXCJQQ0MgUFBWU1wiLFxyXG4gICAgY29kZTogXCJ1cm46aWhlOnBjYzpwcHZzOjIwMTBcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaWhlLm5ldC9maGlyL1ZhbHVlU2V0L0lIRS5Gb3JtYXRDb2RlLmNvZGVzeXN0ZW1cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IHVybjppaGU6cGNjOnJpcHQ6MjAxN1xyXG4gICAqL1xyXG4gIFJvdXRpbmVJbnRlcmZhY2lsaXR5UGF0aWVudFRyYW5zcG9ydFJJUFQ6IHtcclxuICAgIGRpc3BsYXk6IFwiUm91dGluZSBJbnRlcmZhY2lsaXR5IFBhdGllbnQgVHJhbnNwb3J0IChSSVBUKVwiLFxyXG4gICAgY29kZTogXCJ1cm46aWhlOnBjYzpyaXB0OjIwMTdcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaWhlLm5ldC9maGlyL1ZhbHVlU2V0L0lIRS5Gb3JtYXRDb2RlLmNvZGVzeXN0ZW1cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IHVybjppaGU6cGNjOnRuOjIwMDdcclxuICAgKi9cclxuICBQQ0NUTjoge1xyXG4gICAgZGlzcGxheTogXCJQQ0MgVE5cIixcclxuICAgIGNvZGU6IFwidXJuOmloZTpwY2M6dG46MjAwN1wiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9paGUubmV0L2ZoaXIvVmFsdWVTZXQvSUhFLkZvcm1hdENvZGUuY29kZXN5c3RlbVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogdXJuOmloZTpwY2M6dHJzOjIwMTFcclxuICAgKi9cclxuICBQQ0NUUlM6IHtcclxuICAgIGRpc3BsYXk6IFwiUENDIFRSU1wiLFxyXG4gICAgY29kZTogXCJ1cm46aWhlOnBjYzp0cnM6MjAxMVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9paGUubmV0L2ZoaXIvVmFsdWVTZXQvSUhFLkZvcm1hdENvZGUuY29kZXN5c3RlbVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogdXJuOmloZTpwY2M6eGRzLW1zOjIwMDdcclxuICAgKi9cclxuICBYRFNNZWRpY2FsU3VtbWFyaWVzOiB7XHJcbiAgICBkaXNwbGF5OiBcIlhEUyBNZWRpY2FsIFN1bW1hcmllc1wiLFxyXG4gICAgY29kZTogXCJ1cm46aWhlOnBjYzp4ZHMtbXM6MjAwN1wiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9paGUubmV0L2ZoaXIvVmFsdWVTZXQvSUhFLkZvcm1hdENvZGUuY29kZXN5c3RlbVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogdXJuOmloZTpwY2M6eHBocjoyMDA3XHJcbiAgICovXHJcbiAgUGVyc29uYWxIZWFsdGhSZWNvcmRzQWxzb0tub3duQXNITDdDQ0RBbmRISVRTUEMzMjoge1xyXG4gICAgZGlzcGxheTogXCJQZXJzb25hbCBIZWFsdGggUmVjb3Jkcy4gQWxzbyBrbm93biBhcyBITDcgQ0NEIGFuZCBISVRTUCBDMzJcIixcclxuICAgIGNvZGU6IFwidXJuOmloZTpwY2M6eHBocjoyMDA3XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2loZS5uZXQvZmhpci9WYWx1ZVNldC9JSEUuRm9ybWF0Q29kZS5jb2Rlc3lzdGVtXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aWhlOnBoYXJtOmRpczoyMDEwXHJcbiAgICovXHJcbiAgUGhhcm1hY3lESVM6IHtcclxuICAgIGRpc3BsYXk6IFwiUGhhcm1hY3kgRElTXCIsXHJcbiAgICBjb2RlOiBcInVybjppaGU6cGhhcm06ZGlzOjIwMTBcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaWhlLm5ldC9maGlyL1ZhbHVlU2V0L0lIRS5Gb3JtYXRDb2RlLmNvZGVzeXN0ZW1cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IHVybjppaGU6cGhhcm06cGFkdjoyMDEwXHJcbiAgICovXHJcbiAgUGhhcm1hY3lQQURWOiB7XHJcbiAgICBkaXNwbGF5OiBcIlBoYXJtYWN5IFBBRFZcIixcclxuICAgIGNvZGU6IFwidXJuOmloZTpwaGFybTpwYWR2OjIwMTBcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaWhlLm5ldC9maGlyL1ZhbHVlU2V0L0lIRS5Gb3JtYXRDb2RlLmNvZGVzeXN0ZW1cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IHVybjppaGU6cGhhcm06cG1sOjIwMTNcclxuICAgKi9cclxuICBQaGFybWFjeVBNTDoge1xyXG4gICAgZGlzcGxheTogXCJQaGFybWFjeSBQTUxcIixcclxuICAgIGNvZGU6IFwidXJuOmloZTpwaGFybTpwbWw6MjAxM1wiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9paGUubmV0L2ZoaXIvVmFsdWVTZXQvSUhFLkZvcm1hdENvZGUuY29kZXN5c3RlbVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogdXJuOmloZTpwaGFybTpwcmU6MjAxMFxyXG4gICAqL1xyXG4gIFBoYXJtYWN5UHJlOiB7XHJcbiAgICBkaXNwbGF5OiBcIlBoYXJtYWN5IFByZVwiLFxyXG4gICAgY29kZTogXCJ1cm46aWhlOnBoYXJtOnByZToyMDEwXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2loZS5uZXQvZmhpci9WYWx1ZVNldC9JSEUuRm9ybWF0Q29kZS5jb2Rlc3lzdGVtXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiB1cm46aWhlOnJhZDpDREE6SW1hZ2luZ1JlcG9ydFN0cnVjdHVyZWRIZWFkaW5nczoyMDEzXHJcbiAgICovXHJcbiAgUmFkaW9sb2d5WERTSVN0cnVjdHVyZWRDREE6IHtcclxuICAgIGRpc3BsYXk6IFwiUmFkaW9sb2d5IFhEUy1JIFN0cnVjdHVyZWQgQ0RBXCIsXHJcbiAgICBjb2RlOiBcInVybjppaGU6cmFkOkNEQTpJbWFnaW5nUmVwb3J0U3RydWN0dXJlZEhlYWRpbmdzOjIwMTNcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaWhlLm5ldC9maGlyL1ZhbHVlU2V0L0lIRS5Gb3JtYXRDb2RlLmNvZGVzeXN0ZW1cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IHVybjppaGU6cmFkOlBERlxyXG4gICAqL1xyXG4gIFJhZGlvbG9neVhEU0lQREY6IHtcclxuICAgIGRpc3BsYXk6IFwiUmFkaW9sb2d5IFhEUy1JIFBERlwiLFxyXG4gICAgY29kZTogXCJ1cm46aWhlOnJhZDpQREZcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaWhlLm5ldC9maGlyL1ZhbHVlU2V0L0lIRS5Gb3JtYXRDb2RlLmNvZGVzeXN0ZW1cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IHVybjppaGU6cmFkOlRFWFRcclxuICAgKi9cclxuICBSYWRpb2xvZ3lYRFNJVGV4dDoge1xyXG4gICAgZGlzcGxheTogXCJSYWRpb2xvZ3kgWERTLUkgVGV4dFwiLFxyXG4gICAgY29kZTogXCJ1cm46aWhlOnJhZDpURVhUXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2loZS5uZXQvZmhpci9WYWx1ZVNldC9JSEUuRm9ybWF0Q29kZS5jb2Rlc3lzdGVtXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBWYWx1ZVNldDogQSBWYWx1ZVNldCByZXNvdXJjZSBpbnN0YW5jZSBzcGVjaWZpZXMgYSBzZXQgb2YgY29kZXMgZHJhd24gZnJvbSBvbmUgb3IgbW9yZSBjb2RlIHN5c3RlbXMsIGludGVuZGVkIGZvciB1c2UgaW4gYSBwYXJ0aWN1bGFyIGNvbnRleHQuIFZhbHVlIHNldHMgbGluayBiZXR3ZWVuIFtbW0NvZGVTeXN0ZW1dXV0gZGVmaW5pdGlvbnMgYW5kIHRoZWlyIHVzZSBpbiBbY29kZWQgZWxlbWVudHNdKHRlcm1pbm9sb2dpZXMuaHRtbCkuXHJcbiAgICovXHJcbiAgVmFsdWVTZXQ6IHtcclxuICAgIGRpc3BsYXk6IFwiVmFsdWVTZXRcIixcclxuICAgIGNvZGU6IFwiVmFsdWVTZXRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc291cmNlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBWZXJpZmljYXRpb25SZXN1bHQ6IERlc2NyaWJlcyB2YWxpZGF0aW9uIHJlcXVpcmVtZW50cywgc291cmNlKHMpLCBzdGF0dXMgYW5kIGRhdGVzIGZvciBvbmUgb3IgbW9yZSBlbGVtZW50cy5cclxuICAgKi9cclxuICBWZXJpZmljYXRpb25SZXN1bHQ6IHtcclxuICAgIGRpc3BsYXk6IFwiVmVyaWZpY2F0aW9uUmVzdWx0XCIsXHJcbiAgICBjb2RlOiBcIlZlcmlmaWNhdGlvblJlc3VsdFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVzb3VyY2UtdHlwZXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIFZpc2lvblByZXNjcmlwdGlvbjogQW4gYXV0aG9yaXphdGlvbiBmb3IgdGhlIHByb3Zpc2lvbiBvZiBnbGFzc2VzIGFuZC9vciBjb250YWN0IGxlbnNlcyB0byBhIHBhdGllbnQuXHJcbiAgICovXHJcbiAgVmlzaW9uUHJlc2NyaXB0aW9uOiB7XHJcbiAgICBkaXNwbGF5OiBcIlZpc2lvblByZXNjcmlwdGlvblwiLFxyXG4gICAgY29kZTogXCJWaXNpb25QcmVzY3JpcHRpb25cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc291cmNlLXR5cGVzXCIsXHJcbiAgfSxcclxufSBhcyBjb25zdDtcclxuIl19