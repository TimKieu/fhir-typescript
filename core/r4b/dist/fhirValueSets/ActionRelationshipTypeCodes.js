// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/action-relationship-type|4.3.0
/**
 * Defines the types of relationships between actions.
 */
export const ActionRelationshipTypeCodes = {
    /**
     * after: The action must be performed after the related action.
     */
    After: "after",
    /**
     * after-end: The action must be performed after the end of the related action.
     */
    AfterEnd: "after-end",
    /**
     * after-start: The action must be performed after the start of the related action.
     */
    AfterStart: "after-start",
    /**
     * before: The action must be performed before the related action.
     */
    Before: "before",
    /**
     * before-end: The action must be performed before the end of the related action.
     */
    BeforeEnd: "before-end",
    /**
     * before-start: The action must be performed before the start of the related action.
     */
    BeforeStart: "before-start",
    /**
     * concurrent: The action must be performed concurrent with the related action.
     */
    Concurrent: "concurrent",
    /**
     * concurrent-with-end: The action must be performed concurrent with the end of the related action.
     */
    ConcurrentWithEnd: "concurrent-with-end",
    /**
     * concurrent-with-start: The action must be performed concurrent with the start of the related action.
     */
    ConcurrentWithStart: "concurrent-with-start",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQWN0aW9uUmVsYXRpb25zaGlwVHlwZUNvZGVzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9BY3Rpb25SZWxhdGlvbnNoaXBUeXBlQ29kZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLGdEQUFnRDtBQUNoRCxrQ0FBa0M7QUFDbEMsNkVBQTZFO0FBRTdFOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sMkJBQTJCLEdBQUc7SUFDekM7O09BRUc7SUFDSCxLQUFLLEVBQUUsT0FBTztJQUNkOztPQUVHO0lBQ0gsUUFBUSxFQUFFLFdBQVc7SUFDckI7O09BRUc7SUFDSCxVQUFVLEVBQUUsYUFBYTtJQUN6Qjs7T0FFRztJQUNILE1BQU0sRUFBRSxRQUFRO0lBQ2hCOztPQUVHO0lBQ0gsU0FBUyxFQUFFLFlBQVk7SUFDdkI7O09BRUc7SUFDSCxXQUFXLEVBQUUsY0FBYztJQUMzQjs7T0FFRztJQUNILFVBQVUsRUFBRSxZQUFZO0lBQ3hCOztPQUVHO0lBQ0gsaUJBQWlCLEVBQUUscUJBQXFCO0lBQ3hDOztPQUVHO0lBQ0gsbUJBQW1CLEVBQUUsdUJBQXVCO0NBQ3BDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjRiLmNvcmUgdmVyc2lvbjogNC4zLjBcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L2FjdGlvbi1yZWxhdGlvbnNoaXAtdHlwZXw0LjMuMFxyXG5cclxuLyoqXHJcbiAqIERlZmluZXMgdGhlIHR5cGVzIG9mIHJlbGF0aW9uc2hpcHMgYmV0d2VlbiBhY3Rpb25zLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IEFjdGlvblJlbGF0aW9uc2hpcFR5cGVDb2RlcyA9IHtcclxuICAvKipcclxuICAgKiBhZnRlcjogVGhlIGFjdGlvbiBtdXN0IGJlIHBlcmZvcm1lZCBhZnRlciB0aGUgcmVsYXRlZCBhY3Rpb24uXHJcbiAgICovXHJcbiAgQWZ0ZXI6IFwiYWZ0ZXJcIixcclxuICAvKipcclxuICAgKiBhZnRlci1lbmQ6IFRoZSBhY3Rpb24gbXVzdCBiZSBwZXJmb3JtZWQgYWZ0ZXIgdGhlIGVuZCBvZiB0aGUgcmVsYXRlZCBhY3Rpb24uXHJcbiAgICovXHJcbiAgQWZ0ZXJFbmQ6IFwiYWZ0ZXItZW5kXCIsXHJcbiAgLyoqXHJcbiAgICogYWZ0ZXItc3RhcnQ6IFRoZSBhY3Rpb24gbXVzdCBiZSBwZXJmb3JtZWQgYWZ0ZXIgdGhlIHN0YXJ0IG9mIHRoZSByZWxhdGVkIGFjdGlvbi5cclxuICAgKi9cclxuICBBZnRlclN0YXJ0OiBcImFmdGVyLXN0YXJ0XCIsXHJcbiAgLyoqXHJcbiAgICogYmVmb3JlOiBUaGUgYWN0aW9uIG11c3QgYmUgcGVyZm9ybWVkIGJlZm9yZSB0aGUgcmVsYXRlZCBhY3Rpb24uXHJcbiAgICovXHJcbiAgQmVmb3JlOiBcImJlZm9yZVwiLFxyXG4gIC8qKlxyXG4gICAqIGJlZm9yZS1lbmQ6IFRoZSBhY3Rpb24gbXVzdCBiZSBwZXJmb3JtZWQgYmVmb3JlIHRoZSBlbmQgb2YgdGhlIHJlbGF0ZWQgYWN0aW9uLlxyXG4gICAqL1xyXG4gIEJlZm9yZUVuZDogXCJiZWZvcmUtZW5kXCIsXHJcbiAgLyoqXHJcbiAgICogYmVmb3JlLXN0YXJ0OiBUaGUgYWN0aW9uIG11c3QgYmUgcGVyZm9ybWVkIGJlZm9yZSB0aGUgc3RhcnQgb2YgdGhlIHJlbGF0ZWQgYWN0aW9uLlxyXG4gICAqL1xyXG4gIEJlZm9yZVN0YXJ0OiBcImJlZm9yZS1zdGFydFwiLFxyXG4gIC8qKlxyXG4gICAqIGNvbmN1cnJlbnQ6IFRoZSBhY3Rpb24gbXVzdCBiZSBwZXJmb3JtZWQgY29uY3VycmVudCB3aXRoIHRoZSByZWxhdGVkIGFjdGlvbi5cclxuICAgKi9cclxuICBDb25jdXJyZW50OiBcImNvbmN1cnJlbnRcIixcclxuICAvKipcclxuICAgKiBjb25jdXJyZW50LXdpdGgtZW5kOiBUaGUgYWN0aW9uIG11c3QgYmUgcGVyZm9ybWVkIGNvbmN1cnJlbnQgd2l0aCB0aGUgZW5kIG9mIHRoZSByZWxhdGVkIGFjdGlvbi5cclxuICAgKi9cclxuICBDb25jdXJyZW50V2l0aEVuZDogXCJjb25jdXJyZW50LXdpdGgtZW5kXCIsXHJcbiAgLyoqXHJcbiAgICogY29uY3VycmVudC13aXRoLXN0YXJ0OiBUaGUgYWN0aW9uIG11c3QgYmUgcGVyZm9ybWVkIGNvbmN1cnJlbnQgd2l0aCB0aGUgc3RhcnQgb2YgdGhlIHJlbGF0ZWQgYWN0aW9uLlxyXG4gICAqL1xyXG4gIENvbmN1cnJlbnRXaXRoU3RhcnQ6IFwiY29uY3VycmVudC13aXRoLXN0YXJ0XCIsXHJcbn0gYXMgY29uc3Q7XHJcblxyXG4vKipcclxuICogRGVmaW5lcyB0aGUgdHlwZXMgb2YgcmVsYXRpb25zaGlwcyBiZXR3ZWVuIGFjdGlvbnMuXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBBY3Rpb25SZWxhdGlvbnNoaXBUeXBlQ29kZVR5cGUgPSB0eXBlb2YgQWN0aW9uUmVsYXRpb25zaGlwVHlwZUNvZGVzW2tleW9mIHR5cGVvZiBBY3Rpb25SZWxhdGlvbnNoaXBUeXBlQ29kZXNdO1xyXG4iXX0=