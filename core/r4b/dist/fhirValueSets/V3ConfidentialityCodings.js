// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://terminology.hl7.org/ValueSet/v3-Confidentiality|2.0.0
/**
 * Set of codes used to value Act.Confidentiality and Role.Confidentiality attribute in accordance with the definition for concept domain "Confidentiality".
 */
export const V3ConfidentialityCodings = {
    /**
     * Code: L
     */
    L: {
        code: "L",
        system: "http://terminology.hl7.org/CodeSystem/v3-Confidentiality",
    },
    /**
     * Code: M
     */
    M: {
        code: "M",
        system: "http://terminology.hl7.org/CodeSystem/v3-Confidentiality",
    },
    /**
     * Code: N
     */
    N: {
        code: "N",
        system: "http://terminology.hl7.org/CodeSystem/v3-Confidentiality",
    },
    /**
     * Code: R
     */
    R: {
        code: "R",
        system: "http://terminology.hl7.org/CodeSystem/v3-Confidentiality",
    },
    /**
     * Code: U
     */
    U: {
        code: "U",
        system: "http://terminology.hl7.org/CodeSystem/v3-Confidentiality",
    },
    /**
     * Code: V
     */
    V: {
        code: "V",
        system: "http://terminology.hl7.org/CodeSystem/v3-Confidentiality",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVjNDb25maWRlbnRpYWxpdHlDb2RpbmdzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9WM0NvbmZpZGVudGlhbGl0eUNvZGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLGdEQUFnRDtBQUNoRCxrQ0FBa0M7QUFDbEMsOEVBQThFO0FBa0M5RTs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLHdCQUF3QixHQUErQjtJQUNsRTs7T0FFRztJQUNILENBQUMsRUFBRTtRQUNELElBQUksRUFBRSxHQUFHO1FBQ1QsTUFBTSxFQUFFLDBEQUEwRDtLQUNuRTtJQUNEOztPQUVHO0lBQ0gsQ0FBQyxFQUFFO1FBQ0QsSUFBSSxFQUFFLEdBQUc7UUFDVCxNQUFNLEVBQUUsMERBQTBEO0tBQ25FO0lBQ0Q7O09BRUc7SUFDSCxDQUFDLEVBQUU7UUFDRCxJQUFJLEVBQUUsR0FBRztRQUNULE1BQU0sRUFBRSwwREFBMEQ7S0FDbkU7SUFDRDs7T0FFRztJQUNILENBQUMsRUFBRTtRQUNELElBQUksRUFBRSxHQUFHO1FBQ1QsTUFBTSxFQUFFLDBEQUEwRDtLQUNuRTtJQUNEOztPQUVHO0lBQ0gsQ0FBQyxFQUFFO1FBQ0QsSUFBSSxFQUFFLEdBQUc7UUFDVCxNQUFNLEVBQUUsMERBQTBEO0tBQ25FO0lBQ0Q7O09BRUc7SUFDSCxDQUFDLEVBQUU7UUFDRCxJQUFJLEVBQUUsR0FBRztRQUNULE1BQU0sRUFBRSwwREFBMEQ7S0FDbkU7Q0FDTyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0Yi5jb3JlIHZlcnNpb246IDQuMy4wXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvVmFsdWVTZXQvdjMtQ29uZmlkZW50aWFsaXR5fDIuMC4wXHJcblxyXG5pbXBvcnQgeyBDb2RpbmdBcmdzIH0gZnJvbSAnLi4vZmhpci9Db2RpbmcuanMnXHJcblxyXG4vKipcclxuICogU2V0IG9mIGNvZGVzIHVzZWQgdG8gdmFsdWUgQWN0LkNvbmZpZGVudGlhbGl0eSBhbmQgUm9sZS5Db25maWRlbnRpYWxpdHkgYXR0cmlidXRlIGluIGFjY29yZGFuY2Ugd2l0aCB0aGUgZGVmaW5pdGlvbiBmb3IgY29uY2VwdCBkb21haW4gXCJDb25maWRlbnRpYWxpdHlcIi5cclxuICovXHJcbmV4cG9ydCB0eXBlIFYzQ29uZmlkZW50aWFsaXR5Q29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBDb2RlOiBMXHJcbiAgICovXHJcbiAgTDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiBNXHJcbiAgICovXHJcbiAgTTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiBOXHJcbiAgICovXHJcbiAgTjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiBSXHJcbiAgICovXHJcbiAgUjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiBVXHJcbiAgICovXHJcbiAgVTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiBWXHJcbiAgICovXHJcbiAgVjogQ29kaW5nQXJncztcclxufVxyXG5cclxuLyoqXHJcbiAqIFNldCBvZiBjb2RlcyB1c2VkIHRvIHZhbHVlIEFjdC5Db25maWRlbnRpYWxpdHkgYW5kIFJvbGUuQ29uZmlkZW50aWFsaXR5IGF0dHJpYnV0ZSBpbiBhY2NvcmRhbmNlIHdpdGggdGhlIGRlZmluaXRpb24gZm9yIGNvbmNlcHQgZG9tYWluIFwiQ29uZmlkZW50aWFsaXR5XCIuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgVjNDb25maWRlbnRpYWxpdHlDb2RpbmdzOlYzQ29uZmlkZW50aWFsaXR5Q29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBDb2RlOiBMXHJcbiAgICovXHJcbiAgTDoge1xyXG4gICAgY29kZTogXCJMXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS92My1Db25maWRlbnRpYWxpdHlcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IE1cclxuICAgKi9cclxuICBNOiB7XHJcbiAgICBjb2RlOiBcIk1cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL3YzLUNvbmZpZGVudGlhbGl0eVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogTlxyXG4gICAqL1xyXG4gIE46IHtcclxuICAgIGNvZGU6IFwiTlwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vdjMtQ29uZmlkZW50aWFsaXR5XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiBSXHJcbiAgICovXHJcbiAgUjoge1xyXG4gICAgY29kZTogXCJSXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS92My1Db25maWRlbnRpYWxpdHlcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IFVcclxuICAgKi9cclxuICBVOiB7XHJcbiAgICBjb2RlOiBcIlVcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL3YzLUNvbmZpZGVudGlhbGl0eVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogVlxyXG4gICAqL1xyXG4gIFY6IHtcclxuICAgIGNvZGU6IFwiVlwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vdjMtQ29uZmlkZW50aWFsaXR5XCIsXHJcbiAgfSxcclxufSBhcyBjb25zdDtcclxuIl19