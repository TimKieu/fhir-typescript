// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/udi-entry-type|4.3.0
/**
 * Codes to identify how UDI data was entered.
 */
export const UdiEntryTypeCodings = {
    /**
     * barcode: a barcodescanner captured the data from the device label.
     */
    Barcode: {
        display: "Barcode",
        code: "barcode",
        system: "http://hl7.org/fhir/udi-entry-type",
    },
    /**
     * card: The data originated from a patient's implant card and was read by an operator.
     */
    Card: {
        display: "Card",
        code: "card",
        system: "http://hl7.org/fhir/udi-entry-type",
    },
    /**
     * manual: The data was read from the label by a person and manually entered. (e.g.  via a keyboard).
     */
    Manual: {
        display: "Manual",
        code: "manual",
        system: "http://hl7.org/fhir/udi-entry-type",
    },
    /**
     * rfid: An RFID chip reader captured the data from the device label.
     */
    RFID: {
        display: "RFID",
        code: "rfid",
        system: "http://hl7.org/fhir/udi-entry-type",
    },
    /**
     * self-reported: The data originated from a patient source and was not directly scanned or read from a label or card.
     */
    SelfReported: {
        display: "Self Reported",
        code: "self-reported",
        system: "http://hl7.org/fhir/udi-entry-type",
    },
    /**
     * unknown: The method of data capture has not been determined.
     */
    Unknown: {
        display: "Unknown",
        code: "unknown",
        system: "http://hl7.org/fhir/udi-entry-type",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVWRpRW50cnlUeXBlQ29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvVWRpRW50cnlUeXBlQ29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsZ0RBQWdEO0FBQ2hELGtDQUFrQztBQUNsQyxtRUFBbUU7QUFrQ25FOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sbUJBQW1CLEdBQTBCO0lBQ3hEOztPQUVHO0lBQ0gsT0FBTyxFQUFFO1FBQ1AsT0FBTyxFQUFFLFNBQVM7UUFDbEIsSUFBSSxFQUFFLFNBQVM7UUFDZixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxJQUFJLEVBQUU7UUFDSixPQUFPLEVBQUUsTUFBTTtRQUNmLElBQUksRUFBRSxNQUFNO1FBQ1osTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gsTUFBTSxFQUFFO1FBQ04sT0FBTyxFQUFFLFFBQVE7UUFDakIsSUFBSSxFQUFFLFFBQVE7UUFDZCxNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxJQUFJLEVBQUU7UUFDSixPQUFPLEVBQUUsTUFBTTtRQUNmLElBQUksRUFBRSxNQUFNO1FBQ1osTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gsWUFBWSxFQUFFO1FBQ1osT0FBTyxFQUFFLGVBQWU7UUFDeEIsSUFBSSxFQUFFLGVBQWU7UUFDckIsTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gsT0FBTyxFQUFFO1FBQ1AsT0FBTyxFQUFFLFNBQVM7UUFDbEIsSUFBSSxFQUFFLFNBQVM7UUFDZixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0NBQ08sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNGIuY29yZSB2ZXJzaW9uOiA0LjMuMFxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvdWRpLWVudHJ5LXR5cGV8NC4zLjBcclxuXHJcbmltcG9ydCB7IENvZGluZ0FyZ3MgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiBDb2RlcyB0byBpZGVudGlmeSBob3cgVURJIGRhdGEgd2FzIGVudGVyZWQuXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBVZGlFbnRyeVR5cGVDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIGJhcmNvZGU6IGEgYmFyY29kZXNjYW5uZXIgY2FwdHVyZWQgdGhlIGRhdGEgZnJvbSB0aGUgZGV2aWNlIGxhYmVsLlxyXG4gICAqL1xyXG4gIEJhcmNvZGU6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogY2FyZDogVGhlIGRhdGEgb3JpZ2luYXRlZCBmcm9tIGEgcGF0aWVudCdzIGltcGxhbnQgY2FyZCBhbmQgd2FzIHJlYWQgYnkgYW4gb3BlcmF0b3IuXHJcbiAgICovXHJcbiAgQ2FyZDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBtYW51YWw6IFRoZSBkYXRhIHdhcyByZWFkIGZyb20gdGhlIGxhYmVsIGJ5IGEgcGVyc29uIGFuZCBtYW51YWxseSBlbnRlcmVkLiAoZS5nLiAgdmlhIGEga2V5Ym9hcmQpLlxyXG4gICAqL1xyXG4gIE1hbnVhbDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiByZmlkOiBBbiBSRklEIGNoaXAgcmVhZGVyIGNhcHR1cmVkIHRoZSBkYXRhIGZyb20gdGhlIGRldmljZSBsYWJlbC5cclxuICAgKi9cclxuICBSRklEOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIHNlbGYtcmVwb3J0ZWQ6IFRoZSBkYXRhIG9yaWdpbmF0ZWQgZnJvbSBhIHBhdGllbnQgc291cmNlIGFuZCB3YXMgbm90IGRpcmVjdGx5IHNjYW5uZWQgb3IgcmVhZCBmcm9tIGEgbGFiZWwgb3IgY2FyZC5cclxuICAgKi9cclxuICBTZWxmUmVwb3J0ZWQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogdW5rbm93bjogVGhlIG1ldGhvZCBvZiBkYXRhIGNhcHR1cmUgaGFzIG5vdCBiZWVuIGRldGVybWluZWQuXHJcbiAgICovXHJcbiAgVW5rbm93bjogQ29kaW5nQXJncztcclxufVxyXG5cclxuLyoqXHJcbiAqIENvZGVzIHRvIGlkZW50aWZ5IGhvdyBVREkgZGF0YSB3YXMgZW50ZXJlZC5cclxuICovXHJcbmV4cG9ydCBjb25zdCBVZGlFbnRyeVR5cGVDb2RpbmdzOlVkaUVudHJ5VHlwZUNvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogYmFyY29kZTogYSBiYXJjb2Rlc2Nhbm5lciBjYXB0dXJlZCB0aGUgZGF0YSBmcm9tIHRoZSBkZXZpY2UgbGFiZWwuXHJcbiAgICovXHJcbiAgQmFyY29kZToge1xyXG4gICAgZGlzcGxheTogXCJCYXJjb2RlXCIsXHJcbiAgICBjb2RlOiBcImJhcmNvZGVcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3VkaS1lbnRyeS10eXBlXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBjYXJkOiBUaGUgZGF0YSBvcmlnaW5hdGVkIGZyb20gYSBwYXRpZW50J3MgaW1wbGFudCBjYXJkIGFuZCB3YXMgcmVhZCBieSBhbiBvcGVyYXRvci5cclxuICAgKi9cclxuICBDYXJkOiB7XHJcbiAgICBkaXNwbGF5OiBcIkNhcmRcIixcclxuICAgIGNvZGU6IFwiY2FyZFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvdWRpLWVudHJ5LXR5cGVcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIG1hbnVhbDogVGhlIGRhdGEgd2FzIHJlYWQgZnJvbSB0aGUgbGFiZWwgYnkgYSBwZXJzb24gYW5kIG1hbnVhbGx5IGVudGVyZWQuIChlLmcuICB2aWEgYSBrZXlib2FyZCkuXHJcbiAgICovXHJcbiAgTWFudWFsOiB7XHJcbiAgICBkaXNwbGF5OiBcIk1hbnVhbFwiLFxyXG4gICAgY29kZTogXCJtYW51YWxcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3VkaS1lbnRyeS10eXBlXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiByZmlkOiBBbiBSRklEIGNoaXAgcmVhZGVyIGNhcHR1cmVkIHRoZSBkYXRhIGZyb20gdGhlIGRldmljZSBsYWJlbC5cclxuICAgKi9cclxuICBSRklEOiB7XHJcbiAgICBkaXNwbGF5OiBcIlJGSURcIixcclxuICAgIGNvZGU6IFwicmZpZFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvdWRpLWVudHJ5LXR5cGVcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIHNlbGYtcmVwb3J0ZWQ6IFRoZSBkYXRhIG9yaWdpbmF0ZWQgZnJvbSBhIHBhdGllbnQgc291cmNlIGFuZCB3YXMgbm90IGRpcmVjdGx5IHNjYW5uZWQgb3IgcmVhZCBmcm9tIGEgbGFiZWwgb3IgY2FyZC5cclxuICAgKi9cclxuICBTZWxmUmVwb3J0ZWQ6IHtcclxuICAgIGRpc3BsYXk6IFwiU2VsZiBSZXBvcnRlZFwiLFxyXG4gICAgY29kZTogXCJzZWxmLXJlcG9ydGVkXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci91ZGktZW50cnktdHlwZVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogdW5rbm93bjogVGhlIG1ldGhvZCBvZiBkYXRhIGNhcHR1cmUgaGFzIG5vdCBiZWVuIGRldGVybWluZWQuXHJcbiAgICovXHJcbiAgVW5rbm93bjoge1xyXG4gICAgZGlzcGxheTogXCJVbmtub3duXCIsXHJcbiAgICBjb2RlOiBcInVua25vd25cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3VkaS1lbnRyeS10eXBlXCIsXHJcbiAgfSxcclxufSBhcyBjb25zdDtcclxuIl19