// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/namingsystem-identifier-type|4.3.0
/**
 * Identifies the style of unique identifier used to identify a namespace.
 */
export const NamingsystemIdentifierTypeCodings = {
    /**
     * oid: An ISO object identifier; e.g. 1.2.3.4.5.
     */
    OID: {
        display: "OID",
        code: "oid",
        system: "http://hl7.org/fhir/namingsystem-identifier-type",
    },
    /**
     * other: Some other type of unique identifier; e.g. HL7-assigned reserved string such as LN for LOINC.
     */
    Other: {
        display: "Other",
        code: "other",
        system: "http://hl7.org/fhir/namingsystem-identifier-type",
    },
    /**
     * uri: A uniform resource identifier (ideally a URL - uniform resource locator); e.g. http://unitsofmeasure.org.
     */
    URI: {
        display: "URI",
        code: "uri",
        system: "http://hl7.org/fhir/namingsystem-identifier-type",
    },
    /**
     * uuid: A universally unique identifier of the form a5afddf4-e880-459b-876e-e4591b0acc11.
     */
    UUID: {
        display: "UUID",
        code: "uuid",
        system: "http://hl7.org/fhir/namingsystem-identifier-type",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTmFtaW5nc3lzdGVtSWRlbnRpZmllclR5cGVDb2RpbmdzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9OYW1pbmdzeXN0ZW1JZGVudGlmaWVyVHlwZUNvZGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLGdEQUFnRDtBQUNoRCxrQ0FBa0M7QUFDbEMsaUZBQWlGO0FBMEJqRjs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLGlDQUFpQyxHQUF3QztJQUNwRjs7T0FFRztJQUNILEdBQUcsRUFBRTtRQUNILE9BQU8sRUFBRSxLQUFLO1FBQ2QsSUFBSSxFQUFFLEtBQUs7UUFDWCxNQUFNLEVBQUUsa0RBQWtEO0tBQzNEO0lBQ0Q7O09BRUc7SUFDSCxLQUFLLEVBQUU7UUFDTCxPQUFPLEVBQUUsT0FBTztRQUNoQixJQUFJLEVBQUUsT0FBTztRQUNiLE1BQU0sRUFBRSxrREFBa0Q7S0FDM0Q7SUFDRDs7T0FFRztJQUNILEdBQUcsRUFBRTtRQUNILE9BQU8sRUFBRSxLQUFLO1FBQ2QsSUFBSSxFQUFFLEtBQUs7UUFDWCxNQUFNLEVBQUUsa0RBQWtEO0tBQzNEO0lBQ0Q7O09BRUc7SUFDSCxJQUFJLEVBQUU7UUFDSixPQUFPLEVBQUUsTUFBTTtRQUNmLElBQUksRUFBRSxNQUFNO1FBQ1osTUFBTSxFQUFFLGtEQUFrRDtLQUMzRDtDQUNPLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjRiLmNvcmUgdmVyc2lvbjogNC4zLjBcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L25hbWluZ3N5c3RlbS1pZGVudGlmaWVyLXR5cGV8NC4zLjBcclxuXHJcbmltcG9ydCB7IENvZGluZ0FyZ3MgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiBJZGVudGlmaWVzIHRoZSBzdHlsZSBvZiB1bmlxdWUgaWRlbnRpZmllciB1c2VkIHRvIGlkZW50aWZ5IGEgbmFtZXNwYWNlLlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgTmFtaW5nc3lzdGVtSWRlbnRpZmllclR5cGVDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIG9pZDogQW4gSVNPIG9iamVjdCBpZGVudGlmaWVyOyBlLmcuIDEuMi4zLjQuNS5cclxuICAgKi9cclxuICBPSUQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogb3RoZXI6IFNvbWUgb3RoZXIgdHlwZSBvZiB1bmlxdWUgaWRlbnRpZmllcjsgZS5nLiBITDctYXNzaWduZWQgcmVzZXJ2ZWQgc3RyaW5nIHN1Y2ggYXMgTE4gZm9yIExPSU5DLlxyXG4gICAqL1xyXG4gIE90aGVyOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIHVyaTogQSB1bmlmb3JtIHJlc291cmNlIGlkZW50aWZpZXIgKGlkZWFsbHkgYSBVUkwgLSB1bmlmb3JtIHJlc291cmNlIGxvY2F0b3IpOyBlLmcuIGh0dHA6Ly91bml0c29mbWVhc3VyZS5vcmcuXHJcbiAgICovXHJcbiAgVVJJOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIHV1aWQ6IEEgdW5pdmVyc2FsbHkgdW5pcXVlIGlkZW50aWZpZXIgb2YgdGhlIGZvcm0gYTVhZmRkZjQtZTg4MC00NTliLTg3NmUtZTQ1OTFiMGFjYzExLlxyXG4gICAqL1xyXG4gIFVVSUQ6IENvZGluZ0FyZ3M7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBJZGVudGlmaWVzIHRoZSBzdHlsZSBvZiB1bmlxdWUgaWRlbnRpZmllciB1c2VkIHRvIGlkZW50aWZ5IGEgbmFtZXNwYWNlLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IE5hbWluZ3N5c3RlbUlkZW50aWZpZXJUeXBlQ29kaW5nczpOYW1pbmdzeXN0ZW1JZGVudGlmaWVyVHlwZUNvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogb2lkOiBBbiBJU08gb2JqZWN0IGlkZW50aWZpZXI7IGUuZy4gMS4yLjMuNC41LlxyXG4gICAqL1xyXG4gIE9JRDoge1xyXG4gICAgZGlzcGxheTogXCJPSURcIixcclxuICAgIGNvZGU6IFwib2lkXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9uYW1pbmdzeXN0ZW0taWRlbnRpZmllci10eXBlXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBvdGhlcjogU29tZSBvdGhlciB0eXBlIG9mIHVuaXF1ZSBpZGVudGlmaWVyOyBlLmcuIEhMNy1hc3NpZ25lZCByZXNlcnZlZCBzdHJpbmcgc3VjaCBhcyBMTiBmb3IgTE9JTkMuXHJcbiAgICovXHJcbiAgT3RoZXI6IHtcclxuICAgIGRpc3BsYXk6IFwiT3RoZXJcIixcclxuICAgIGNvZGU6IFwib3RoZXJcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL25hbWluZ3N5c3RlbS1pZGVudGlmaWVyLXR5cGVcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIHVyaTogQSB1bmlmb3JtIHJlc291cmNlIGlkZW50aWZpZXIgKGlkZWFsbHkgYSBVUkwgLSB1bmlmb3JtIHJlc291cmNlIGxvY2F0b3IpOyBlLmcuIGh0dHA6Ly91bml0c29mbWVhc3VyZS5vcmcuXHJcbiAgICovXHJcbiAgVVJJOiB7XHJcbiAgICBkaXNwbGF5OiBcIlVSSVwiLFxyXG4gICAgY29kZTogXCJ1cmlcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL25hbWluZ3N5c3RlbS1pZGVudGlmaWVyLXR5cGVcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIHV1aWQ6IEEgdW5pdmVyc2FsbHkgdW5pcXVlIGlkZW50aWZpZXIgb2YgdGhlIGZvcm0gYTVhZmRkZjQtZTg4MC00NTliLTg3NmUtZTQ1OTFiMGFjYzExLlxyXG4gICAqL1xyXG4gIFVVSUQ6IHtcclxuICAgIGRpc3BsYXk6IFwiVVVJRFwiLFxyXG4gICAgY29kZTogXCJ1dWlkXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9uYW1pbmdzeXN0ZW0taWRlbnRpZmllci10eXBlXCIsXHJcbiAgfSxcclxufSBhcyBjb25zdDtcclxuIl19