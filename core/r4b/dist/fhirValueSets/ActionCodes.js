// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/action-code|4.3.0
/**
 * Provides examples of actions to be performed.
 */
export const ActionCodes = {
    /**
     * collect-information: The action indicates that information should be collected from a participant in the process.
     */
    CollectInformation: "collect-information",
    /**
     * order-service: The action indicates that a particular service should be provided.
     */
    OrderAService: "order-service",
    /**
     * prescribe-medication: The action indicates that a particular medication should be prescribed to the patient.
     */
    PrescribeAMedication: "prescribe-medication",
    /**
     * propose-diagnosis: The action indicates that a particular diagnosis should be proposed.
     */
    ProposeADiagnosis: "propose-diagnosis",
    /**
     * recommend-immunization: The action indicates that a particular immunization should be performed.
     */
    RecommendAnImmunization: "recommend-immunization",
    /**
     * record-detected-issue: The action indicates that a particular detected issue should be recorded.
     */
    RecordADetectedIssue: "record-detected-issue",
    /**
     * record-inference: The action indicates that a particular inference should be recorded.
     */
    RecordAnInference: "record-inference",
    /**
     * report-flag: The action indicates that a particular flag should be reported.
     */
    ReportAFlag: "report-flag",
    /**
     * send-message: The action indicates that a particular message should be sent to a participant in the process.
     */
    SendAMessage: "send-message",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQWN0aW9uQ29kZXMuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL0FjdGlvbkNvZGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQixnREFBZ0Q7QUFDaEQsa0NBQWtDO0FBQ2xDLGdFQUFnRTtBQUVoRTs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLFdBQVcsR0FBRztJQUN6Qjs7T0FFRztJQUNILGtCQUFrQixFQUFFLHFCQUFxQjtJQUN6Qzs7T0FFRztJQUNILGFBQWEsRUFBRSxlQUFlO0lBQzlCOztPQUVHO0lBQ0gsb0JBQW9CLEVBQUUsc0JBQXNCO0lBQzVDOztPQUVHO0lBQ0gsaUJBQWlCLEVBQUUsbUJBQW1CO0lBQ3RDOztPQUVHO0lBQ0gsdUJBQXVCLEVBQUUsd0JBQXdCO0lBQ2pEOztPQUVHO0lBQ0gsb0JBQW9CLEVBQUUsdUJBQXVCO0lBQzdDOztPQUVHO0lBQ0gsaUJBQWlCLEVBQUUsa0JBQWtCO0lBQ3JDOztPQUVHO0lBQ0gsV0FBVyxFQUFFLGFBQWE7SUFDMUI7O09BRUc7SUFDSCxZQUFZLEVBQUUsY0FBYztDQUNwQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0Yi5jb3JlIHZlcnNpb246IDQuMy4wXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9hY3Rpb24tY29kZXw0LjMuMFxyXG5cclxuLyoqXHJcbiAqIFByb3ZpZGVzIGV4YW1wbGVzIG9mIGFjdGlvbnMgdG8gYmUgcGVyZm9ybWVkLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IEFjdGlvbkNvZGVzID0ge1xyXG4gIC8qKlxyXG4gICAqIGNvbGxlY3QtaW5mb3JtYXRpb246IFRoZSBhY3Rpb24gaW5kaWNhdGVzIHRoYXQgaW5mb3JtYXRpb24gc2hvdWxkIGJlIGNvbGxlY3RlZCBmcm9tIGEgcGFydGljaXBhbnQgaW4gdGhlIHByb2Nlc3MuXHJcbiAgICovXHJcbiAgQ29sbGVjdEluZm9ybWF0aW9uOiBcImNvbGxlY3QtaW5mb3JtYXRpb25cIixcclxuICAvKipcclxuICAgKiBvcmRlci1zZXJ2aWNlOiBUaGUgYWN0aW9uIGluZGljYXRlcyB0aGF0IGEgcGFydGljdWxhciBzZXJ2aWNlIHNob3VsZCBiZSBwcm92aWRlZC5cclxuICAgKi9cclxuICBPcmRlckFTZXJ2aWNlOiBcIm9yZGVyLXNlcnZpY2VcIixcclxuICAvKipcclxuICAgKiBwcmVzY3JpYmUtbWVkaWNhdGlvbjogVGhlIGFjdGlvbiBpbmRpY2F0ZXMgdGhhdCBhIHBhcnRpY3VsYXIgbWVkaWNhdGlvbiBzaG91bGQgYmUgcHJlc2NyaWJlZCB0byB0aGUgcGF0aWVudC5cclxuICAgKi9cclxuICBQcmVzY3JpYmVBTWVkaWNhdGlvbjogXCJwcmVzY3JpYmUtbWVkaWNhdGlvblwiLFxyXG4gIC8qKlxyXG4gICAqIHByb3Bvc2UtZGlhZ25vc2lzOiBUaGUgYWN0aW9uIGluZGljYXRlcyB0aGF0IGEgcGFydGljdWxhciBkaWFnbm9zaXMgc2hvdWxkIGJlIHByb3Bvc2VkLlxyXG4gICAqL1xyXG4gIFByb3Bvc2VBRGlhZ25vc2lzOiBcInByb3Bvc2UtZGlhZ25vc2lzXCIsXHJcbiAgLyoqXHJcbiAgICogcmVjb21tZW5kLWltbXVuaXphdGlvbjogVGhlIGFjdGlvbiBpbmRpY2F0ZXMgdGhhdCBhIHBhcnRpY3VsYXIgaW1tdW5pemF0aW9uIHNob3VsZCBiZSBwZXJmb3JtZWQuXHJcbiAgICovXHJcbiAgUmVjb21tZW5kQW5JbW11bml6YXRpb246IFwicmVjb21tZW5kLWltbXVuaXphdGlvblwiLFxyXG4gIC8qKlxyXG4gICAqIHJlY29yZC1kZXRlY3RlZC1pc3N1ZTogVGhlIGFjdGlvbiBpbmRpY2F0ZXMgdGhhdCBhIHBhcnRpY3VsYXIgZGV0ZWN0ZWQgaXNzdWUgc2hvdWxkIGJlIHJlY29yZGVkLlxyXG4gICAqL1xyXG4gIFJlY29yZEFEZXRlY3RlZElzc3VlOiBcInJlY29yZC1kZXRlY3RlZC1pc3N1ZVwiLFxyXG4gIC8qKlxyXG4gICAqIHJlY29yZC1pbmZlcmVuY2U6IFRoZSBhY3Rpb24gaW5kaWNhdGVzIHRoYXQgYSBwYXJ0aWN1bGFyIGluZmVyZW5jZSBzaG91bGQgYmUgcmVjb3JkZWQuXHJcbiAgICovXHJcbiAgUmVjb3JkQW5JbmZlcmVuY2U6IFwicmVjb3JkLWluZmVyZW5jZVwiLFxyXG4gIC8qKlxyXG4gICAqIHJlcG9ydC1mbGFnOiBUaGUgYWN0aW9uIGluZGljYXRlcyB0aGF0IGEgcGFydGljdWxhciBmbGFnIHNob3VsZCBiZSByZXBvcnRlZC5cclxuICAgKi9cclxuICBSZXBvcnRBRmxhZzogXCJyZXBvcnQtZmxhZ1wiLFxyXG4gIC8qKlxyXG4gICAqIHNlbmQtbWVzc2FnZTogVGhlIGFjdGlvbiBpbmRpY2F0ZXMgdGhhdCBhIHBhcnRpY3VsYXIgbWVzc2FnZSBzaG91bGQgYmUgc2VudCB0byBhIHBhcnRpY2lwYW50IGluIHRoZSBwcm9jZXNzLlxyXG4gICAqL1xyXG4gIFNlbmRBTWVzc2FnZTogXCJzZW5kLW1lc3NhZ2VcIixcclxufSBhcyBjb25zdDtcclxuXHJcbi8qKlxyXG4gKiBQcm92aWRlcyBleGFtcGxlcyBvZiBhY3Rpb25zIHRvIGJlIHBlcmZvcm1lZC5cclxuICovXHJcbmV4cG9ydCB0eXBlIEFjdGlvbkNvZGVUeXBlID0gdHlwZW9mIEFjdGlvbkNvZGVzW2tleW9mIHR5cGVvZiBBY3Rpb25Db2Rlc107XHJcbiJdfQ==