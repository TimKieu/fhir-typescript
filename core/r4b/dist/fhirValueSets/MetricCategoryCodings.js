// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/metric-category|4.3.0
/**
 * Describes the category of the metric.
 */
export const MetricCategoryCodings = {
    /**
     * calculation: DeviceObservations generated for this DeviceMetric are calculated.
     */
    Calculation: {
        display: "Calculation",
        code: "calculation",
        system: "http://hl7.org/fhir/metric-category",
    },
    /**
     * measurement: DeviceObservations generated for this DeviceMetric are measured.
     */
    Measurement: {
        display: "Measurement",
        code: "measurement",
        system: "http://hl7.org/fhir/metric-category",
    },
    /**
     * setting: DeviceObservations generated for this DeviceMetric is a setting that will influence the behavior of the Device.
     */
    Setting: {
        display: "Setting",
        code: "setting",
        system: "http://hl7.org/fhir/metric-category",
    },
    /**
     * unspecified: The category of this DeviceMetric is unspecified.
     */
    Unspecified: {
        display: "Unspecified",
        code: "unspecified",
        system: "http://hl7.org/fhir/metric-category",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWV0cmljQ2F0ZWdvcnlDb2RpbmdzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9NZXRyaWNDYXRlZ29yeUNvZGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLGdEQUFnRDtBQUNoRCxrQ0FBa0M7QUFDbEMsb0VBQW9FO0FBMEJwRTs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUE0QjtJQUM1RDs7T0FFRztJQUNILFdBQVcsRUFBRTtRQUNYLE9BQU8sRUFBRSxhQUFhO1FBQ3RCLElBQUksRUFBRSxhQUFhO1FBQ25CLE1BQU0sRUFBRSxxQ0FBcUM7S0FDOUM7SUFDRDs7T0FFRztJQUNILFdBQVcsRUFBRTtRQUNYLE9BQU8sRUFBRSxhQUFhO1FBQ3RCLElBQUksRUFBRSxhQUFhO1FBQ25CLE1BQU0sRUFBRSxxQ0FBcUM7S0FDOUM7SUFDRDs7T0FFRztJQUNILE9BQU8sRUFBRTtRQUNQLE9BQU8sRUFBRSxTQUFTO1FBQ2xCLElBQUksRUFBRSxTQUFTO1FBQ2YsTUFBTSxFQUFFLHFDQUFxQztLQUM5QztJQUNEOztPQUVHO0lBQ0gsV0FBVyxFQUFFO1FBQ1gsT0FBTyxFQUFFLGFBQWE7UUFDdEIsSUFBSSxFQUFFLGFBQWE7UUFDbkIsTUFBTSxFQUFFLHFDQUFxQztLQUM5QztDQUNPLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjRiLmNvcmUgdmVyc2lvbjogNC4zLjBcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L21ldHJpYy1jYXRlZ29yeXw0LjMuMFxyXG5cclxuaW1wb3J0IHsgQ29kaW5nQXJncyB9IGZyb20gJy4uL2ZoaXIvQ29kaW5nLmpzJ1xyXG5cclxuLyoqXHJcbiAqIERlc2NyaWJlcyB0aGUgY2F0ZWdvcnkgb2YgdGhlIG1ldHJpYy5cclxuICovXHJcbmV4cG9ydCB0eXBlIE1ldHJpY0NhdGVnb3J5Q29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBjYWxjdWxhdGlvbjogRGV2aWNlT2JzZXJ2YXRpb25zIGdlbmVyYXRlZCBmb3IgdGhpcyBEZXZpY2VNZXRyaWMgYXJlIGNhbGN1bGF0ZWQuXHJcbiAgICovXHJcbiAgQ2FsY3VsYXRpb246IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogbWVhc3VyZW1lbnQ6IERldmljZU9ic2VydmF0aW9ucyBnZW5lcmF0ZWQgZm9yIHRoaXMgRGV2aWNlTWV0cmljIGFyZSBtZWFzdXJlZC5cclxuICAgKi9cclxuICBNZWFzdXJlbWVudDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBzZXR0aW5nOiBEZXZpY2VPYnNlcnZhdGlvbnMgZ2VuZXJhdGVkIGZvciB0aGlzIERldmljZU1ldHJpYyBpcyBhIHNldHRpbmcgdGhhdCB3aWxsIGluZmx1ZW5jZSB0aGUgYmVoYXZpb3Igb2YgdGhlIERldmljZS5cclxuICAgKi9cclxuICBTZXR0aW5nOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIHVuc3BlY2lmaWVkOiBUaGUgY2F0ZWdvcnkgb2YgdGhpcyBEZXZpY2VNZXRyaWMgaXMgdW5zcGVjaWZpZWQuXHJcbiAgICovXHJcbiAgVW5zcGVjaWZpZWQ6IENvZGluZ0FyZ3M7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBEZXNjcmliZXMgdGhlIGNhdGVnb3J5IG9mIHRoZSBtZXRyaWMuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgTWV0cmljQ2F0ZWdvcnlDb2RpbmdzOk1ldHJpY0NhdGVnb3J5Q29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBjYWxjdWxhdGlvbjogRGV2aWNlT2JzZXJ2YXRpb25zIGdlbmVyYXRlZCBmb3IgdGhpcyBEZXZpY2VNZXRyaWMgYXJlIGNhbGN1bGF0ZWQuXHJcbiAgICovXHJcbiAgQ2FsY3VsYXRpb246IHtcclxuICAgIGRpc3BsYXk6IFwiQ2FsY3VsYXRpb25cIixcclxuICAgIGNvZGU6IFwiY2FsY3VsYXRpb25cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL21ldHJpYy1jYXRlZ29yeVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogbWVhc3VyZW1lbnQ6IERldmljZU9ic2VydmF0aW9ucyBnZW5lcmF0ZWQgZm9yIHRoaXMgRGV2aWNlTWV0cmljIGFyZSBtZWFzdXJlZC5cclxuICAgKi9cclxuICBNZWFzdXJlbWVudDoge1xyXG4gICAgZGlzcGxheTogXCJNZWFzdXJlbWVudFwiLFxyXG4gICAgY29kZTogXCJtZWFzdXJlbWVudFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvbWV0cmljLWNhdGVnb3J5XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBzZXR0aW5nOiBEZXZpY2VPYnNlcnZhdGlvbnMgZ2VuZXJhdGVkIGZvciB0aGlzIERldmljZU1ldHJpYyBpcyBhIHNldHRpbmcgdGhhdCB3aWxsIGluZmx1ZW5jZSB0aGUgYmVoYXZpb3Igb2YgdGhlIERldmljZS5cclxuICAgKi9cclxuICBTZXR0aW5nOiB7XHJcbiAgICBkaXNwbGF5OiBcIlNldHRpbmdcIixcclxuICAgIGNvZGU6IFwic2V0dGluZ1wiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvbWV0cmljLWNhdGVnb3J5XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiB1bnNwZWNpZmllZDogVGhlIGNhdGVnb3J5IG9mIHRoaXMgRGV2aWNlTWV0cmljIGlzIHVuc3BlY2lmaWVkLlxyXG4gICAqL1xyXG4gIFVuc3BlY2lmaWVkOiB7XHJcbiAgICBkaXNwbGF5OiBcIlVuc3BlY2lmaWVkXCIsXHJcbiAgICBjb2RlOiBcInVuc3BlY2lmaWVkXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9tZXRyaWMtY2F0ZWdvcnlcIixcclxuICB9LFxyXG59IGFzIGNvbnN0O1xyXG4iXX0=