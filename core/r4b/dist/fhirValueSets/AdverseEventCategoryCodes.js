// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/adverse-event-category|4.3.0
/**
 * Overall categorization of the event, e.g. product-related or situational.
 */
export const AdverseEventCategoryCodes = {
    /**
     * expired-drug: The adverse event pertains to an expired drug.
     */
    ExpiredDrug: "expired-drug",
    /**
     * incorrect-prescribing-information: The adverse event pertains to incorrect perscribing information.
     */
    IncorrectPrescribingInformation: "incorrect-prescribing-information",
    /**
     * medical-device-use-error: The adverse event pertains to a medical device use error.
     */
    MedicalDeviceUseError: "medical-device-use-error",
    /**
     * problem-different-manufacturer: The adverse event pertains to a problem with a different manufacturer of the same medication.
     */
    ProblemWithDifferentManufacturerOfSameMedicine: "problem-different-manufacturer",
    /**
     * product-problem: The adverse event pertains to a product problem.
     */
    ProductProblem: "product-problem",
    /**
     * product-quality: The adverse event pertains to product quality.
     */
    ProductQuality: "product-quality",
    /**
     * product-use-error: The adverse event pertains to a product use error.
     */
    ProductUseError: "product-use-error",
    /**
     * unsafe-physical-environment: The adverse event pertains to an unsafe physical environment.
     */
    UnsafePhysicalEnvironment: "unsafe-physical-environment",
    /**
     * wrong-dose: The adverse event pertains to a wrong dose.
     */
    WrongDose: "wrong-dose",
    /**
     * wrong-duration: The adverse event pertains to a wrong duration.
     */
    WrongDuration: "wrong-duration",
    /**
     * wrong-rate: The adverse event pertains to a wrong rate.
     */
    WrongRate: "wrong-rate",
    /**
     * wrong-route-of-administration: The adverse event pertains to a wrong route of administration.
     */
    WrongRouteOfAdministration: "wrong-route-of-administration",
    /**
     * wrong-technique: The adverse event pertains to a wrong technique.
     */
    WrongTechnique: "wrong-technique",
    /**
     * wrong-time: The adverse event pertains to a wrong time.
     */
    WrongTime: "wrong-time",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQWR2ZXJzZUV2ZW50Q2F0ZWdvcnlDb2Rlcy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvQWR2ZXJzZUV2ZW50Q2F0ZWdvcnlDb2Rlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsZ0RBQWdEO0FBQ2hELGtDQUFrQztBQUNsQywyRUFBMkU7QUFFM0U7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSx5QkFBeUIsR0FBRztJQUN2Qzs7T0FFRztJQUNILFdBQVcsRUFBRSxjQUFjO0lBQzNCOztPQUVHO0lBQ0gsK0JBQStCLEVBQUUsbUNBQW1DO0lBQ3BFOztPQUVHO0lBQ0gscUJBQXFCLEVBQUUsMEJBQTBCO0lBQ2pEOztPQUVHO0lBQ0gsOENBQThDLEVBQUUsZ0NBQWdDO0lBQ2hGOztPQUVHO0lBQ0gsY0FBYyxFQUFFLGlCQUFpQjtJQUNqQzs7T0FFRztJQUNILGNBQWMsRUFBRSxpQkFBaUI7SUFDakM7O09BRUc7SUFDSCxlQUFlLEVBQUUsbUJBQW1CO0lBQ3BDOztPQUVHO0lBQ0gseUJBQXlCLEVBQUUsNkJBQTZCO0lBQ3hEOztPQUVHO0lBQ0gsU0FBUyxFQUFFLFlBQVk7SUFDdkI7O09BRUc7SUFDSCxhQUFhLEVBQUUsZ0JBQWdCO0lBQy9COztPQUVHO0lBQ0gsU0FBUyxFQUFFLFlBQVk7SUFDdkI7O09BRUc7SUFDSCwwQkFBMEIsRUFBRSwrQkFBK0I7SUFDM0Q7O09BRUc7SUFDSCxjQUFjLEVBQUUsaUJBQWlCO0lBQ2pDOztPQUVHO0lBQ0gsU0FBUyxFQUFFLFlBQVk7Q0FDZixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0Yi5jb3JlIHZlcnNpb246IDQuMy4wXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9hZHZlcnNlLWV2ZW50LWNhdGVnb3J5fDQuMy4wXHJcblxyXG4vKipcclxuICogT3ZlcmFsbCBjYXRlZ29yaXphdGlvbiBvZiB0aGUgZXZlbnQsIGUuZy4gcHJvZHVjdC1yZWxhdGVkIG9yIHNpdHVhdGlvbmFsLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IEFkdmVyc2VFdmVudENhdGVnb3J5Q29kZXMgPSB7XHJcbiAgLyoqXHJcbiAgICogZXhwaXJlZC1kcnVnOiBUaGUgYWR2ZXJzZSBldmVudCBwZXJ0YWlucyB0byBhbiBleHBpcmVkIGRydWcuXHJcbiAgICovXHJcbiAgRXhwaXJlZERydWc6IFwiZXhwaXJlZC1kcnVnXCIsXHJcbiAgLyoqXHJcbiAgICogaW5jb3JyZWN0LXByZXNjcmliaW5nLWluZm9ybWF0aW9uOiBUaGUgYWR2ZXJzZSBldmVudCBwZXJ0YWlucyB0byBpbmNvcnJlY3QgcGVyc2NyaWJpbmcgaW5mb3JtYXRpb24uXHJcbiAgICovXHJcbiAgSW5jb3JyZWN0UHJlc2NyaWJpbmdJbmZvcm1hdGlvbjogXCJpbmNvcnJlY3QtcHJlc2NyaWJpbmctaW5mb3JtYXRpb25cIixcclxuICAvKipcclxuICAgKiBtZWRpY2FsLWRldmljZS11c2UtZXJyb3I6IFRoZSBhZHZlcnNlIGV2ZW50IHBlcnRhaW5zIHRvIGEgbWVkaWNhbCBkZXZpY2UgdXNlIGVycm9yLlxyXG4gICAqL1xyXG4gIE1lZGljYWxEZXZpY2VVc2VFcnJvcjogXCJtZWRpY2FsLWRldmljZS11c2UtZXJyb3JcIixcclxuICAvKipcclxuICAgKiBwcm9ibGVtLWRpZmZlcmVudC1tYW51ZmFjdHVyZXI6IFRoZSBhZHZlcnNlIGV2ZW50IHBlcnRhaW5zIHRvIGEgcHJvYmxlbSB3aXRoIGEgZGlmZmVyZW50IG1hbnVmYWN0dXJlciBvZiB0aGUgc2FtZSBtZWRpY2F0aW9uLlxyXG4gICAqL1xyXG4gIFByb2JsZW1XaXRoRGlmZmVyZW50TWFudWZhY3R1cmVyT2ZTYW1lTWVkaWNpbmU6IFwicHJvYmxlbS1kaWZmZXJlbnQtbWFudWZhY3R1cmVyXCIsXHJcbiAgLyoqXHJcbiAgICogcHJvZHVjdC1wcm9ibGVtOiBUaGUgYWR2ZXJzZSBldmVudCBwZXJ0YWlucyB0byBhIHByb2R1Y3QgcHJvYmxlbS5cclxuICAgKi9cclxuICBQcm9kdWN0UHJvYmxlbTogXCJwcm9kdWN0LXByb2JsZW1cIixcclxuICAvKipcclxuICAgKiBwcm9kdWN0LXF1YWxpdHk6IFRoZSBhZHZlcnNlIGV2ZW50IHBlcnRhaW5zIHRvIHByb2R1Y3QgcXVhbGl0eS5cclxuICAgKi9cclxuICBQcm9kdWN0UXVhbGl0eTogXCJwcm9kdWN0LXF1YWxpdHlcIixcclxuICAvKipcclxuICAgKiBwcm9kdWN0LXVzZS1lcnJvcjogVGhlIGFkdmVyc2UgZXZlbnQgcGVydGFpbnMgdG8gYSBwcm9kdWN0IHVzZSBlcnJvci5cclxuICAgKi9cclxuICBQcm9kdWN0VXNlRXJyb3I6IFwicHJvZHVjdC11c2UtZXJyb3JcIixcclxuICAvKipcclxuICAgKiB1bnNhZmUtcGh5c2ljYWwtZW52aXJvbm1lbnQ6IFRoZSBhZHZlcnNlIGV2ZW50IHBlcnRhaW5zIHRvIGFuIHVuc2FmZSBwaHlzaWNhbCBlbnZpcm9ubWVudC5cclxuICAgKi9cclxuICBVbnNhZmVQaHlzaWNhbEVudmlyb25tZW50OiBcInVuc2FmZS1waHlzaWNhbC1lbnZpcm9ubWVudFwiLFxyXG4gIC8qKlxyXG4gICAqIHdyb25nLWRvc2U6IFRoZSBhZHZlcnNlIGV2ZW50IHBlcnRhaW5zIHRvIGEgd3JvbmcgZG9zZS5cclxuICAgKi9cclxuICBXcm9uZ0Rvc2U6IFwid3JvbmctZG9zZVwiLFxyXG4gIC8qKlxyXG4gICAqIHdyb25nLWR1cmF0aW9uOiBUaGUgYWR2ZXJzZSBldmVudCBwZXJ0YWlucyB0byBhIHdyb25nIGR1cmF0aW9uLlxyXG4gICAqL1xyXG4gIFdyb25nRHVyYXRpb246IFwid3JvbmctZHVyYXRpb25cIixcclxuICAvKipcclxuICAgKiB3cm9uZy1yYXRlOiBUaGUgYWR2ZXJzZSBldmVudCBwZXJ0YWlucyB0byBhIHdyb25nIHJhdGUuXHJcbiAgICovXHJcbiAgV3JvbmdSYXRlOiBcIndyb25nLXJhdGVcIixcclxuICAvKipcclxuICAgKiB3cm9uZy1yb3V0ZS1vZi1hZG1pbmlzdHJhdGlvbjogVGhlIGFkdmVyc2UgZXZlbnQgcGVydGFpbnMgdG8gYSB3cm9uZyByb3V0ZSBvZiBhZG1pbmlzdHJhdGlvbi5cclxuICAgKi9cclxuICBXcm9uZ1JvdXRlT2ZBZG1pbmlzdHJhdGlvbjogXCJ3cm9uZy1yb3V0ZS1vZi1hZG1pbmlzdHJhdGlvblwiLFxyXG4gIC8qKlxyXG4gICAqIHdyb25nLXRlY2huaXF1ZTogVGhlIGFkdmVyc2UgZXZlbnQgcGVydGFpbnMgdG8gYSB3cm9uZyB0ZWNobmlxdWUuXHJcbiAgICovXHJcbiAgV3JvbmdUZWNobmlxdWU6IFwid3JvbmctdGVjaG5pcXVlXCIsXHJcbiAgLyoqXHJcbiAgICogd3JvbmctdGltZTogVGhlIGFkdmVyc2UgZXZlbnQgcGVydGFpbnMgdG8gYSB3cm9uZyB0aW1lLlxyXG4gICAqL1xyXG4gIFdyb25nVGltZTogXCJ3cm9uZy10aW1lXCIsXHJcbn0gYXMgY29uc3Q7XHJcblxyXG4vKipcclxuICogT3ZlcmFsbCBjYXRlZ29yaXphdGlvbiBvZiB0aGUgZXZlbnQsIGUuZy4gcHJvZHVjdC1yZWxhdGVkIG9yIHNpdHVhdGlvbmFsLlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgQWR2ZXJzZUV2ZW50Q2F0ZWdvcnlDb2RlVHlwZSA9IHR5cGVvZiBBZHZlcnNlRXZlbnRDYXRlZ29yeUNvZGVzW2tleW9mIHR5cGVvZiBBZHZlcnNlRXZlbnRDYXRlZ29yeUNvZGVzXTtcclxuIl19