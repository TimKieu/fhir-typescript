// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/ex-diagnosistype|4.3.0
/**
 * This value set includes example Diagnosis Type codes.
 */
export const ExDiagnosistypeCodes = {
    /**
     * admitting: The diagnosis given as the reason why the patient was admitted to the hospital.
     */
    AdmittingDiagnosis: "admitting",
    /**
     * clinical: A diagnosis made on the basis of medical signs and patient-reported symptoms, rather than diagnostic tests.
     */
    ClinicalDiagnosis: "clinical",
    /**
     * differential: One of a set of the possible diagnoses that could be connected to the signs, symptoms, and lab findings.
     */
    DifferentialDiagnosis: "differential",
    /**
     * discharge: The diagnosis given when the patient is discharged from the hospital.
     */
    DischargeDiagnosis: "discharge",
    /**
     * laboratory: A diagnosis based significantly on laboratory reports or test results, rather than the physical examination of the patient.
     */
    LaboratoryDiagnosis: "laboratory",
    /**
     * nursing: A diagnosis which identifies people's responses to situations in their lives, such as a readiness to change or a willingness to accept assistance.
     */
    NursingDiagnosis: "nursing",
    /**
     * prenatal: A diagnosis determined prior to birth.
     */
    PrenatalDiagnosis: "prenatal",
    /**
     * principal: The single medical diagnosis that is most relevant to the patient's chief complaint or need for treatment.
     */
    PrincipalDiagnosis: "principal",
    /**
     * radiology: A diagnosis based primarily on the results from medical imaging studies.
     */
    RadiologyDiagnosis: "radiology",
    /**
     * remote: A diagnosis determined using telemedicine techniques.
     */
    RemoteDiagnosis: "remote",
    /**
     * retrospective: The labeling of an illness in a specific historical event using modern knowledge, methods and disease classifications.
     */
    RetrospectiveDiagnosis: "retrospective",
    /**
     * self: A diagnosis determined by the patient.
     */
    SelfDiagnosis: "self",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRXhEaWFnbm9zaXN0eXBlQ29kZXMuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL0V4RGlhZ25vc2lzdHlwZUNvZGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQixnREFBZ0Q7QUFDaEQsa0NBQWtDO0FBQ2xDLHFFQUFxRTtBQUVyRTs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLG9CQUFvQixHQUFHO0lBQ2xDOztPQUVHO0lBQ0gsa0JBQWtCLEVBQUUsV0FBVztJQUMvQjs7T0FFRztJQUNILGlCQUFpQixFQUFFLFVBQVU7SUFDN0I7O09BRUc7SUFDSCxxQkFBcUIsRUFBRSxjQUFjO0lBQ3JDOztPQUVHO0lBQ0gsa0JBQWtCLEVBQUUsV0FBVztJQUMvQjs7T0FFRztJQUNILG1CQUFtQixFQUFFLFlBQVk7SUFDakM7O09BRUc7SUFDSCxnQkFBZ0IsRUFBRSxTQUFTO0lBQzNCOztPQUVHO0lBQ0gsaUJBQWlCLEVBQUUsVUFBVTtJQUM3Qjs7T0FFRztJQUNILGtCQUFrQixFQUFFLFdBQVc7SUFDL0I7O09BRUc7SUFDSCxrQkFBa0IsRUFBRSxXQUFXO0lBQy9COztPQUVHO0lBQ0gsZUFBZSxFQUFFLFFBQVE7SUFDekI7O09BRUc7SUFDSCxzQkFBc0IsRUFBRSxlQUFlO0lBQ3ZDOztPQUVHO0lBQ0gsYUFBYSxFQUFFLE1BQU07Q0FDYixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0Yi5jb3JlIHZlcnNpb246IDQuMy4wXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9leC1kaWFnbm9zaXN0eXBlfDQuMy4wXHJcblxyXG4vKipcclxuICogVGhpcyB2YWx1ZSBzZXQgaW5jbHVkZXMgZXhhbXBsZSBEaWFnbm9zaXMgVHlwZSBjb2Rlcy5cclxuICovXHJcbmV4cG9ydCBjb25zdCBFeERpYWdub3Npc3R5cGVDb2RlcyA9IHtcclxuICAvKipcclxuICAgKiBhZG1pdHRpbmc6IFRoZSBkaWFnbm9zaXMgZ2l2ZW4gYXMgdGhlIHJlYXNvbiB3aHkgdGhlIHBhdGllbnQgd2FzIGFkbWl0dGVkIHRvIHRoZSBob3NwaXRhbC5cclxuICAgKi9cclxuICBBZG1pdHRpbmdEaWFnbm9zaXM6IFwiYWRtaXR0aW5nXCIsXHJcbiAgLyoqXHJcbiAgICogY2xpbmljYWw6IEEgZGlhZ25vc2lzIG1hZGUgb24gdGhlIGJhc2lzIG9mIG1lZGljYWwgc2lnbnMgYW5kIHBhdGllbnQtcmVwb3J0ZWQgc3ltcHRvbXMsIHJhdGhlciB0aGFuIGRpYWdub3N0aWMgdGVzdHMuXHJcbiAgICovXHJcbiAgQ2xpbmljYWxEaWFnbm9zaXM6IFwiY2xpbmljYWxcIixcclxuICAvKipcclxuICAgKiBkaWZmZXJlbnRpYWw6IE9uZSBvZiBhIHNldCBvZiB0aGUgcG9zc2libGUgZGlhZ25vc2VzIHRoYXQgY291bGQgYmUgY29ubmVjdGVkIHRvIHRoZSBzaWducywgc3ltcHRvbXMsIGFuZCBsYWIgZmluZGluZ3MuXHJcbiAgICovXHJcbiAgRGlmZmVyZW50aWFsRGlhZ25vc2lzOiBcImRpZmZlcmVudGlhbFwiLFxyXG4gIC8qKlxyXG4gICAqIGRpc2NoYXJnZTogVGhlIGRpYWdub3NpcyBnaXZlbiB3aGVuIHRoZSBwYXRpZW50IGlzIGRpc2NoYXJnZWQgZnJvbSB0aGUgaG9zcGl0YWwuXHJcbiAgICovXHJcbiAgRGlzY2hhcmdlRGlhZ25vc2lzOiBcImRpc2NoYXJnZVwiLFxyXG4gIC8qKlxyXG4gICAqIGxhYm9yYXRvcnk6IEEgZGlhZ25vc2lzIGJhc2VkIHNpZ25pZmljYW50bHkgb24gbGFib3JhdG9yeSByZXBvcnRzIG9yIHRlc3QgcmVzdWx0cywgcmF0aGVyIHRoYW4gdGhlIHBoeXNpY2FsIGV4YW1pbmF0aW9uIG9mIHRoZSBwYXRpZW50LlxyXG4gICAqL1xyXG4gIExhYm9yYXRvcnlEaWFnbm9zaXM6IFwibGFib3JhdG9yeVwiLFxyXG4gIC8qKlxyXG4gICAqIG51cnNpbmc6IEEgZGlhZ25vc2lzIHdoaWNoIGlkZW50aWZpZXMgcGVvcGxlJ3MgcmVzcG9uc2VzIHRvIHNpdHVhdGlvbnMgaW4gdGhlaXIgbGl2ZXMsIHN1Y2ggYXMgYSByZWFkaW5lc3MgdG8gY2hhbmdlIG9yIGEgd2lsbGluZ25lc3MgdG8gYWNjZXB0IGFzc2lzdGFuY2UuXHJcbiAgICovXHJcbiAgTnVyc2luZ0RpYWdub3NpczogXCJudXJzaW5nXCIsXHJcbiAgLyoqXHJcbiAgICogcHJlbmF0YWw6IEEgZGlhZ25vc2lzIGRldGVybWluZWQgcHJpb3IgdG8gYmlydGguXHJcbiAgICovXHJcbiAgUHJlbmF0YWxEaWFnbm9zaXM6IFwicHJlbmF0YWxcIixcclxuICAvKipcclxuICAgKiBwcmluY2lwYWw6IFRoZSBzaW5nbGUgbWVkaWNhbCBkaWFnbm9zaXMgdGhhdCBpcyBtb3N0IHJlbGV2YW50IHRvIHRoZSBwYXRpZW50J3MgY2hpZWYgY29tcGxhaW50IG9yIG5lZWQgZm9yIHRyZWF0bWVudC5cclxuICAgKi9cclxuICBQcmluY2lwYWxEaWFnbm9zaXM6IFwicHJpbmNpcGFsXCIsXHJcbiAgLyoqXHJcbiAgICogcmFkaW9sb2d5OiBBIGRpYWdub3NpcyBiYXNlZCBwcmltYXJpbHkgb24gdGhlIHJlc3VsdHMgZnJvbSBtZWRpY2FsIGltYWdpbmcgc3R1ZGllcy5cclxuICAgKi9cclxuICBSYWRpb2xvZ3lEaWFnbm9zaXM6IFwicmFkaW9sb2d5XCIsXHJcbiAgLyoqXHJcbiAgICogcmVtb3RlOiBBIGRpYWdub3NpcyBkZXRlcm1pbmVkIHVzaW5nIHRlbGVtZWRpY2luZSB0ZWNobmlxdWVzLlxyXG4gICAqL1xyXG4gIFJlbW90ZURpYWdub3NpczogXCJyZW1vdGVcIixcclxuICAvKipcclxuICAgKiByZXRyb3NwZWN0aXZlOiBUaGUgbGFiZWxpbmcgb2YgYW4gaWxsbmVzcyBpbiBhIHNwZWNpZmljIGhpc3RvcmljYWwgZXZlbnQgdXNpbmcgbW9kZXJuIGtub3dsZWRnZSwgbWV0aG9kcyBhbmQgZGlzZWFzZSBjbGFzc2lmaWNhdGlvbnMuXHJcbiAgICovXHJcbiAgUmV0cm9zcGVjdGl2ZURpYWdub3NpczogXCJyZXRyb3NwZWN0aXZlXCIsXHJcbiAgLyoqXHJcbiAgICogc2VsZjogQSBkaWFnbm9zaXMgZGV0ZXJtaW5lZCBieSB0aGUgcGF0aWVudC5cclxuICAgKi9cclxuICBTZWxmRGlhZ25vc2lzOiBcInNlbGZcIixcclxufSBhcyBjb25zdDtcclxuXHJcbi8qKlxyXG4gKiBUaGlzIHZhbHVlIHNldCBpbmNsdWRlcyBleGFtcGxlIERpYWdub3NpcyBUeXBlIGNvZGVzLlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgRXhEaWFnbm9zaXN0eXBlQ29kZVR5cGUgPSB0eXBlb2YgRXhEaWFnbm9zaXN0eXBlQ29kZXNba2V5b2YgdHlwZW9mIEV4RGlhZ25vc2lzdHlwZUNvZGVzXTtcclxuIl19