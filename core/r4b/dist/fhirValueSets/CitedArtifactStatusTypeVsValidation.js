// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet Validation: http://hl7.org/fhir/ValueSet/cited-artifact-status-type|4.3.0
/**
 * Cited Artifact Status Type
 */
export const CitedArtifactStatusTypeVsValidation = [
    "accepted",
    "active",
    "approved",
    "archived",
    "created",
    "draft",
    "http://terminology.hl7.org/CodeSystem/cited-artifact-status-type|accepted",
    "http://terminology.hl7.org/CodeSystem/cited-artifact-status-type|active",
    "http://terminology.hl7.org/CodeSystem/cited-artifact-status-type|approved",
    "http://terminology.hl7.org/CodeSystem/cited-artifact-status-type|archived",
    "http://terminology.hl7.org/CodeSystem/cited-artifact-status-type|created",
    "http://terminology.hl7.org/CodeSystem/cited-artifact-status-type|draft",
    "http://terminology.hl7.org/CodeSystem/cited-artifact-status-type|post-review-pre-published",
    "http://terminology.hl7.org/CodeSystem/cited-artifact-status-type|pre-review",
    "http://terminology.hl7.org/CodeSystem/cited-artifact-status-type|published-early-form",
    "http://terminology.hl7.org/CodeSystem/cited-artifact-status-type|published-final-form",
    "http://terminology.hl7.org/CodeSystem/cited-artifact-status-type|rejected",
    "http://terminology.hl7.org/CodeSystem/cited-artifact-status-type|retracted",
    "http://terminology.hl7.org/CodeSystem/cited-artifact-status-type|submitted",
    "http://terminology.hl7.org/CodeSystem/cited-artifact-status-type|under-review",
    "http://terminology.hl7.org/CodeSystem/cited-artifact-status-type|withdrawn",
    "post-review-pre-published",
    "pre-review",
    "published-early-form",
    "published-final-form",
    "rejected",
    "retracted",
    "submitted",
    "under-review",
    "withdrawn",
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2l0ZWRBcnRpZmFjdFN0YXR1c1R5cGVWc1ZhbGlkYXRpb24uanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL0NpdGVkQXJ0aWZhY3RTdGF0dXNUeXBlVnNWYWxpZGF0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQixnREFBZ0Q7QUFDaEQsa0NBQWtDO0FBQ2xDLDBGQUEwRjtBQUUxRjs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLG1DQUFtQyxHQUFzQjtJQUNwRSxVQUFVO0lBQ1YsUUFBUTtJQUNSLFVBQVU7SUFDVixVQUFVO0lBQ1YsU0FBUztJQUNULE9BQU87SUFDUCwyRUFBMkU7SUFDM0UseUVBQXlFO0lBQ3pFLDJFQUEyRTtJQUMzRSwyRUFBMkU7SUFDM0UsMEVBQTBFO0lBQzFFLHdFQUF3RTtJQUN4RSw0RkFBNEY7SUFDNUYsNkVBQTZFO0lBQzdFLHVGQUF1RjtJQUN2Rix1RkFBdUY7SUFDdkYsMkVBQTJFO0lBQzNFLDRFQUE0RTtJQUM1RSw0RUFBNEU7SUFDNUUsK0VBQStFO0lBQy9FLDRFQUE0RTtJQUM1RSwyQkFBMkI7SUFDM0IsWUFBWTtJQUNaLHNCQUFzQjtJQUN0QixzQkFBc0I7SUFDdEIsVUFBVTtJQUNWLFdBQVc7SUFDWCxXQUFXO0lBQ1gsY0FBYztJQUNkLFdBQVc7Q0FDSCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0Yi5jb3JlIHZlcnNpb246IDQuMy4wXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldCBWYWxpZGF0aW9uOiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L2NpdGVkLWFydGlmYWN0LXN0YXR1cy10eXBlfDQuMy4wXHJcblxyXG4vKipcclxuICogQ2l0ZWQgQXJ0aWZhY3QgU3RhdHVzIFR5cGVcclxuICovXHJcbmV4cG9ydCBjb25zdCBDaXRlZEFydGlmYWN0U3RhdHVzVHlwZVZzVmFsaWRhdGlvbjogcmVhZG9ubHkgc3RyaW5nW10gPSBbXHJcbiAgXCJhY2NlcHRlZFwiLFxyXG4gIFwiYWN0aXZlXCIsXHJcbiAgXCJhcHByb3ZlZFwiLFxyXG4gIFwiYXJjaGl2ZWRcIixcclxuICBcImNyZWF0ZWRcIixcclxuICBcImRyYWZ0XCIsXHJcbiAgXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2NpdGVkLWFydGlmYWN0LXN0YXR1cy10eXBlfGFjY2VwdGVkXCIsXHJcbiAgXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2NpdGVkLWFydGlmYWN0LXN0YXR1cy10eXBlfGFjdGl2ZVwiLFxyXG4gIFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9jaXRlZC1hcnRpZmFjdC1zdGF0dXMtdHlwZXxhcHByb3ZlZFwiLFxyXG4gIFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9jaXRlZC1hcnRpZmFjdC1zdGF0dXMtdHlwZXxhcmNoaXZlZFwiLFxyXG4gIFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9jaXRlZC1hcnRpZmFjdC1zdGF0dXMtdHlwZXxjcmVhdGVkXCIsXHJcbiAgXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2NpdGVkLWFydGlmYWN0LXN0YXR1cy10eXBlfGRyYWZ0XCIsXHJcbiAgXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2NpdGVkLWFydGlmYWN0LXN0YXR1cy10eXBlfHBvc3QtcmV2aWV3LXByZS1wdWJsaXNoZWRcIixcclxuICBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vY2l0ZWQtYXJ0aWZhY3Qtc3RhdHVzLXR5cGV8cHJlLXJldmlld1wiLFxyXG4gIFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9jaXRlZC1hcnRpZmFjdC1zdGF0dXMtdHlwZXxwdWJsaXNoZWQtZWFybHktZm9ybVwiLFxyXG4gIFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9jaXRlZC1hcnRpZmFjdC1zdGF0dXMtdHlwZXxwdWJsaXNoZWQtZmluYWwtZm9ybVwiLFxyXG4gIFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9jaXRlZC1hcnRpZmFjdC1zdGF0dXMtdHlwZXxyZWplY3RlZFwiLFxyXG4gIFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9jaXRlZC1hcnRpZmFjdC1zdGF0dXMtdHlwZXxyZXRyYWN0ZWRcIixcclxuICBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vY2l0ZWQtYXJ0aWZhY3Qtc3RhdHVzLXR5cGV8c3VibWl0dGVkXCIsXHJcbiAgXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2NpdGVkLWFydGlmYWN0LXN0YXR1cy10eXBlfHVuZGVyLXJldmlld1wiLFxyXG4gIFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9jaXRlZC1hcnRpZmFjdC1zdGF0dXMtdHlwZXx3aXRoZHJhd25cIixcclxuICBcInBvc3QtcmV2aWV3LXByZS1wdWJsaXNoZWRcIixcclxuICBcInByZS1yZXZpZXdcIixcclxuICBcInB1Ymxpc2hlZC1lYXJseS1mb3JtXCIsXHJcbiAgXCJwdWJsaXNoZWQtZmluYWwtZm9ybVwiLFxyXG4gIFwicmVqZWN0ZWRcIixcclxuICBcInJldHJhY3RlZFwiLFxyXG4gIFwic3VibWl0dGVkXCIsXHJcbiAgXCJ1bmRlci1yZXZpZXdcIixcclxuICBcIndpdGhkcmF3blwiLFxyXG5dIGFzIGNvbnN0O1xyXG4iXX0=