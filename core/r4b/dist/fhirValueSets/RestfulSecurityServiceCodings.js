// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/restful-security-service|4.3.0
/**
 * Types of security services used with FHIR.
 */
export const RestfulSecurityServiceCodings = {
    /**
     * Basic: Basic authentication defined in HTTP specification.
     */
    Basic: {
        display: "Basic",
        code: "Basic",
        system: "http://terminology.hl7.org/CodeSystem/restful-security-service",
    },
    /**
     * Certificates: SSL where client must have a certificate registered with the server.
     */
    Certificates: {
        display: "Certificates",
        code: "Certificates",
        system: "http://terminology.hl7.org/CodeSystem/restful-security-service",
    },
    /**
     * Kerberos: see http://www.ietf.org/rfc/rfc4120.txt.
     */
    Kerberos: {
        display: "Kerberos",
        code: "Kerberos",
        system: "http://terminology.hl7.org/CodeSystem/restful-security-service",
    },
    /**
     * NTLM: Microsoft NTLM Authentication.
     */
    NTLM: {
        display: "NTLM",
        code: "NTLM",
        system: "http://terminology.hl7.org/CodeSystem/restful-security-service",
    },
    /**
     * OAuth: OAuth (unspecified version see oauth.net).
     */
    OAuth: {
        display: "OAuth",
        code: "OAuth",
        system: "http://terminology.hl7.org/CodeSystem/restful-security-service",
    },
    /**
     * SMART-on-FHIR: OAuth2 using SMART-on-FHIR profile (see http://docs.smarthealthit.org/).
     */
    SMARTOnFHIR: {
        display: "SMART-on-FHIR",
        code: "SMART-on-FHIR",
        system: "http://terminology.hl7.org/CodeSystem/restful-security-service",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVzdGZ1bFNlY3VyaXR5U2VydmljZUNvZGluZ3MuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL1Jlc3RmdWxTZWN1cml0eVNlcnZpY2VDb2RpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQixnREFBZ0Q7QUFDaEQsa0NBQWtDO0FBQ2xDLDZFQUE2RTtBQWtDN0U7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSw2QkFBNkIsR0FBb0M7SUFDNUU7O09BRUc7SUFDSCxLQUFLLEVBQUU7UUFDTCxPQUFPLEVBQUUsT0FBTztRQUNoQixJQUFJLEVBQUUsT0FBTztRQUNiLE1BQU0sRUFBRSxnRUFBZ0U7S0FDekU7SUFDRDs7T0FFRztJQUNILFlBQVksRUFBRTtRQUNaLE9BQU8sRUFBRSxjQUFjO1FBQ3ZCLElBQUksRUFBRSxjQUFjO1FBQ3BCLE1BQU0sRUFBRSxnRUFBZ0U7S0FDekU7SUFDRDs7T0FFRztJQUNILFFBQVEsRUFBRTtRQUNSLE9BQU8sRUFBRSxVQUFVO1FBQ25CLElBQUksRUFBRSxVQUFVO1FBQ2hCLE1BQU0sRUFBRSxnRUFBZ0U7S0FDekU7SUFDRDs7T0FFRztJQUNILElBQUksRUFBRTtRQUNKLE9BQU8sRUFBRSxNQUFNO1FBQ2YsSUFBSSxFQUFFLE1BQU07UUFDWixNQUFNLEVBQUUsZ0VBQWdFO0tBQ3pFO0lBQ0Q7O09BRUc7SUFDSCxLQUFLLEVBQUU7UUFDTCxPQUFPLEVBQUUsT0FBTztRQUNoQixJQUFJLEVBQUUsT0FBTztRQUNiLE1BQU0sRUFBRSxnRUFBZ0U7S0FDekU7SUFDRDs7T0FFRztJQUNILFdBQVcsRUFBRTtRQUNYLE9BQU8sRUFBRSxlQUFlO1FBQ3hCLElBQUksRUFBRSxlQUFlO1FBQ3JCLE1BQU0sRUFBRSxnRUFBZ0U7S0FDekU7Q0FDTyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0Yi5jb3JlIHZlcnNpb246IDQuMy4wXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9yZXN0ZnVsLXNlY3VyaXR5LXNlcnZpY2V8NC4zLjBcclxuXHJcbmltcG9ydCB7IENvZGluZ0FyZ3MgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiBUeXBlcyBvZiBzZWN1cml0eSBzZXJ2aWNlcyB1c2VkIHdpdGggRkhJUi5cclxuICovXHJcbmV4cG9ydCB0eXBlIFJlc3RmdWxTZWN1cml0eVNlcnZpY2VDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIEJhc2ljOiBCYXNpYyBhdXRoZW50aWNhdGlvbiBkZWZpbmVkIGluIEhUVFAgc3BlY2lmaWNhdGlvbi5cclxuICAgKi9cclxuICBCYXNpYzogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDZXJ0aWZpY2F0ZXM6IFNTTCB3aGVyZSBjbGllbnQgbXVzdCBoYXZlIGEgY2VydGlmaWNhdGUgcmVnaXN0ZXJlZCB3aXRoIHRoZSBzZXJ2ZXIuXHJcbiAgICovXHJcbiAgQ2VydGlmaWNhdGVzOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIEtlcmJlcm9zOiBzZWUgaHR0cDovL3d3dy5pZXRmLm9yZy9yZmMvcmZjNDEyMC50eHQuXHJcbiAgICovXHJcbiAgS2VyYmVyb3M6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogTlRMTTogTWljcm9zb2Z0IE5UTE0gQXV0aGVudGljYXRpb24uXHJcbiAgICovXHJcbiAgTlRMTTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBPQXV0aDogT0F1dGggKHVuc3BlY2lmaWVkIHZlcnNpb24gc2VlIG9hdXRoLm5ldCkuXHJcbiAgICovXHJcbiAgT0F1dGg6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogU01BUlQtb24tRkhJUjogT0F1dGgyIHVzaW5nIFNNQVJULW9uLUZISVIgcHJvZmlsZSAoc2VlIGh0dHA6Ly9kb2NzLnNtYXJ0aGVhbHRoaXQub3JnLykuXHJcbiAgICovXHJcbiAgU01BUlRPbkZISVI6IENvZGluZ0FyZ3M7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBUeXBlcyBvZiBzZWN1cml0eSBzZXJ2aWNlcyB1c2VkIHdpdGggRkhJUi5cclxuICovXHJcbmV4cG9ydCBjb25zdCBSZXN0ZnVsU2VjdXJpdHlTZXJ2aWNlQ29kaW5nczpSZXN0ZnVsU2VjdXJpdHlTZXJ2aWNlQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBCYXNpYzogQmFzaWMgYXV0aGVudGljYXRpb24gZGVmaW5lZCBpbiBIVFRQIHNwZWNpZmljYXRpb24uXHJcbiAgICovXHJcbiAgQmFzaWM6IHtcclxuICAgIGRpc3BsYXk6IFwiQmFzaWNcIixcclxuICAgIGNvZGU6IFwiQmFzaWNcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL3Jlc3RmdWwtc2VjdXJpdHktc2VydmljZVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ2VydGlmaWNhdGVzOiBTU0wgd2hlcmUgY2xpZW50IG11c3QgaGF2ZSBhIGNlcnRpZmljYXRlIHJlZ2lzdGVyZWQgd2l0aCB0aGUgc2VydmVyLlxyXG4gICAqL1xyXG4gIENlcnRpZmljYXRlczoge1xyXG4gICAgZGlzcGxheTogXCJDZXJ0aWZpY2F0ZXNcIixcclxuICAgIGNvZGU6IFwiQ2VydGlmaWNhdGVzXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9yZXN0ZnVsLXNlY3VyaXR5LXNlcnZpY2VcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIEtlcmJlcm9zOiBzZWUgaHR0cDovL3d3dy5pZXRmLm9yZy9yZmMvcmZjNDEyMC50eHQuXHJcbiAgICovXHJcbiAgS2VyYmVyb3M6IHtcclxuICAgIGRpc3BsYXk6IFwiS2VyYmVyb3NcIixcclxuICAgIGNvZGU6IFwiS2VyYmVyb3NcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL3Jlc3RmdWwtc2VjdXJpdHktc2VydmljZVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogTlRMTTogTWljcm9zb2Z0IE5UTE0gQXV0aGVudGljYXRpb24uXHJcbiAgICovXHJcbiAgTlRMTToge1xyXG4gICAgZGlzcGxheTogXCJOVExNXCIsXHJcbiAgICBjb2RlOiBcIk5UTE1cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL3Jlc3RmdWwtc2VjdXJpdHktc2VydmljZVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogT0F1dGg6IE9BdXRoICh1bnNwZWNpZmllZCB2ZXJzaW9uIHNlZSBvYXV0aC5uZXQpLlxyXG4gICAqL1xyXG4gIE9BdXRoOiB7XHJcbiAgICBkaXNwbGF5OiBcIk9BdXRoXCIsXHJcbiAgICBjb2RlOiBcIk9BdXRoXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9yZXN0ZnVsLXNlY3VyaXR5LXNlcnZpY2VcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIFNNQVJULW9uLUZISVI6IE9BdXRoMiB1c2luZyBTTUFSVC1vbi1GSElSIHByb2ZpbGUgKHNlZSBodHRwOi8vZG9jcy5zbWFydGhlYWx0aGl0Lm9yZy8pLlxyXG4gICAqL1xyXG4gIFNNQVJUT25GSElSOiB7XHJcbiAgICBkaXNwbGF5OiBcIlNNQVJULW9uLUZISVJcIixcclxuICAgIGNvZGU6IFwiU01BUlQtb24tRkhJUlwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vcmVzdGZ1bC1zZWN1cml0eS1zZXJ2aWNlXCIsXHJcbiAgfSxcclxufSBhcyBjb25zdDtcclxuIl19