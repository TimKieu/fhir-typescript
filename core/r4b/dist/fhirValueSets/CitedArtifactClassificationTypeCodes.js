// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/cited-artifact-classification-type|4.3.0
/**
 * Cited Artifact Classification Type
 */
export const CitedArtifactClassificationTypeCodes = {
    /**
     * chemical: Chemical
     */
    Chemical: "chemical",
    /**
     * citation-subset: Citation subset
     */
    CitationSubset: "citation-subset",
    /**
     * coverage: The spatial or temporal topic of the resource, spatial applicability of the resource, or jurisdiction under which the resource is relevant
     */
    Coverage: "coverage",
    /**
     * keyword: Keyword
     */
    Keyword: "keyword",
    /**
     * knowledge-artifact-type: Knowledge Artifact Type
     */
    KnowledgeArtifactType: "knowledge-artifact-type",
    /**
     * mesh-heading: MeSH heading
     */
    MeSHHeading: "mesh-heading",
    /**
     * publication-type: Publication type
     */
    PublicationType: "publication-type",
    /**
     * publishing-model: Used for PubModel attribute in Medline
     */
    PublishingModel: "publishing-model",
    /**
     * supplemental-mesh-disease: Supplemental MeSH for Disease
     */
    SupplementalMeSHForDisease: "supplemental-mesh-disease",
    /**
     * supplemental-mesh-organism: Supplemental MeSH for Organism
     */
    SupplementalMeSHForOrganism: "supplemental-mesh-organism",
    /**
     * supplemental-mesh-protocol: Supplemental MeSH for Protocol
     */
    SupplementalMeSHForProtocol: "supplemental-mesh-protocol",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2l0ZWRBcnRpZmFjdENsYXNzaWZpY2F0aW9uVHlwZUNvZGVzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9DaXRlZEFydGlmYWN0Q2xhc3NpZmljYXRpb25UeXBlQ29kZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLGdEQUFnRDtBQUNoRCxrQ0FBa0M7QUFDbEMsdUZBQXVGO0FBRXZGOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sb0NBQW9DLEdBQUc7SUFDbEQ7O09BRUc7SUFDSCxRQUFRLEVBQUUsVUFBVTtJQUNwQjs7T0FFRztJQUNILGNBQWMsRUFBRSxpQkFBaUI7SUFDakM7O09BRUc7SUFDSCxRQUFRLEVBQUUsVUFBVTtJQUNwQjs7T0FFRztJQUNILE9BQU8sRUFBRSxTQUFTO0lBQ2xCOztPQUVHO0lBQ0gscUJBQXFCLEVBQUUseUJBQXlCO0lBQ2hEOztPQUVHO0lBQ0gsV0FBVyxFQUFFLGNBQWM7SUFDM0I7O09BRUc7SUFDSCxlQUFlLEVBQUUsa0JBQWtCO0lBQ25DOztPQUVHO0lBQ0gsZUFBZSxFQUFFLGtCQUFrQjtJQUNuQzs7T0FFRztJQUNILDBCQUEwQixFQUFFLDJCQUEyQjtJQUN2RDs7T0FFRztJQUNILDJCQUEyQixFQUFFLDRCQUE0QjtJQUN6RDs7T0FFRztJQUNILDJCQUEyQixFQUFFLDRCQUE0QjtDQUNqRCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0Yi5jb3JlIHZlcnNpb246IDQuMy4wXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9jaXRlZC1hcnRpZmFjdC1jbGFzc2lmaWNhdGlvbi10eXBlfDQuMy4wXHJcblxyXG4vKipcclxuICogQ2l0ZWQgQXJ0aWZhY3QgQ2xhc3NpZmljYXRpb24gVHlwZVxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IENpdGVkQXJ0aWZhY3RDbGFzc2lmaWNhdGlvblR5cGVDb2RlcyA9IHtcclxuICAvKipcclxuICAgKiBjaGVtaWNhbDogQ2hlbWljYWxcclxuICAgKi9cclxuICBDaGVtaWNhbDogXCJjaGVtaWNhbFwiLFxyXG4gIC8qKlxyXG4gICAqIGNpdGF0aW9uLXN1YnNldDogQ2l0YXRpb24gc3Vic2V0XHJcbiAgICovXHJcbiAgQ2l0YXRpb25TdWJzZXQ6IFwiY2l0YXRpb24tc3Vic2V0XCIsXHJcbiAgLyoqXHJcbiAgICogY292ZXJhZ2U6IFRoZSBzcGF0aWFsIG9yIHRlbXBvcmFsIHRvcGljIG9mIHRoZSByZXNvdXJjZSwgc3BhdGlhbCBhcHBsaWNhYmlsaXR5IG9mIHRoZSByZXNvdXJjZSwgb3IganVyaXNkaWN0aW9uIHVuZGVyIHdoaWNoIHRoZSByZXNvdXJjZSBpcyByZWxldmFudFxyXG4gICAqL1xyXG4gIENvdmVyYWdlOiBcImNvdmVyYWdlXCIsXHJcbiAgLyoqXHJcbiAgICoga2V5d29yZDogS2V5d29yZFxyXG4gICAqL1xyXG4gIEtleXdvcmQ6IFwia2V5d29yZFwiLFxyXG4gIC8qKlxyXG4gICAqIGtub3dsZWRnZS1hcnRpZmFjdC10eXBlOiBLbm93bGVkZ2UgQXJ0aWZhY3QgVHlwZVxyXG4gICAqL1xyXG4gIEtub3dsZWRnZUFydGlmYWN0VHlwZTogXCJrbm93bGVkZ2UtYXJ0aWZhY3QtdHlwZVwiLFxyXG4gIC8qKlxyXG4gICAqIG1lc2gtaGVhZGluZzogTWVTSCBoZWFkaW5nXHJcbiAgICovXHJcbiAgTWVTSEhlYWRpbmc6IFwibWVzaC1oZWFkaW5nXCIsXHJcbiAgLyoqXHJcbiAgICogcHVibGljYXRpb24tdHlwZTogUHVibGljYXRpb24gdHlwZVxyXG4gICAqL1xyXG4gIFB1YmxpY2F0aW9uVHlwZTogXCJwdWJsaWNhdGlvbi10eXBlXCIsXHJcbiAgLyoqXHJcbiAgICogcHVibGlzaGluZy1tb2RlbDogVXNlZCBmb3IgUHViTW9kZWwgYXR0cmlidXRlIGluIE1lZGxpbmVcclxuICAgKi9cclxuICBQdWJsaXNoaW5nTW9kZWw6IFwicHVibGlzaGluZy1tb2RlbFwiLFxyXG4gIC8qKlxyXG4gICAqIHN1cHBsZW1lbnRhbC1tZXNoLWRpc2Vhc2U6IFN1cHBsZW1lbnRhbCBNZVNIIGZvciBEaXNlYXNlXHJcbiAgICovXHJcbiAgU3VwcGxlbWVudGFsTWVTSEZvckRpc2Vhc2U6IFwic3VwcGxlbWVudGFsLW1lc2gtZGlzZWFzZVwiLFxyXG4gIC8qKlxyXG4gICAqIHN1cHBsZW1lbnRhbC1tZXNoLW9yZ2FuaXNtOiBTdXBwbGVtZW50YWwgTWVTSCBmb3IgT3JnYW5pc21cclxuICAgKi9cclxuICBTdXBwbGVtZW50YWxNZVNIRm9yT3JnYW5pc206IFwic3VwcGxlbWVudGFsLW1lc2gtb3JnYW5pc21cIixcclxuICAvKipcclxuICAgKiBzdXBwbGVtZW50YWwtbWVzaC1wcm90b2NvbDogU3VwcGxlbWVudGFsIE1lU0ggZm9yIFByb3RvY29sXHJcbiAgICovXHJcbiAgU3VwcGxlbWVudGFsTWVTSEZvclByb3RvY29sOiBcInN1cHBsZW1lbnRhbC1tZXNoLXByb3RvY29sXCIsXHJcbn0gYXMgY29uc3Q7XHJcblxyXG4vKipcclxuICogQ2l0ZWQgQXJ0aWZhY3QgQ2xhc3NpZmljYXRpb24gVHlwZVxyXG4gKi9cclxuZXhwb3J0IHR5cGUgQ2l0ZWRBcnRpZmFjdENsYXNzaWZpY2F0aW9uVHlwZUNvZGVUeXBlID0gdHlwZW9mIENpdGVkQXJ0aWZhY3RDbGFzc2lmaWNhdGlvblR5cGVDb2Rlc1trZXlvZiB0eXBlb2YgQ2l0ZWRBcnRpZmFjdENsYXNzaWZpY2F0aW9uVHlwZUNvZGVzXTtcclxuIl19