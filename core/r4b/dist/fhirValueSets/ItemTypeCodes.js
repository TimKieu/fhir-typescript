// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/item-type|4.3.0
/**
 * Distinguishes groups from questions and display text and indicates data type for questions.
 */
export const ItemTypeCodes = {
    /**
     * attachment: Question with binary content such as an image, PDF, etc. as an answer (valueAttachment).
     */
    Attachment: "attachment",
    /**
     * boolean: Question with a yes/no answer (valueBoolean).
     */
    Boolean: "boolean",
    /**
     * choice: Question with a Coding drawn from a list of possible answers (specified in either the answerOption property, or via the valueset referenced in the answerValueSet property) as an answer (valueCoding).
     */
    Choice: "choice",
    /**
     * date: Question with a date answer (valueDate).
     */
    Date: "date",
    /**
     * dateTime: Question with a date and time answer (valueDateTime).
     */
    DateTime: "dateTime",
    /**
     * decimal: Question with is a real number answer (valueDecimal).
     */
    Decimal: "decimal",
    /**
     * display: Text for display that will not capture an answer or have child items.
     */
    Display: "display",
    /**
     * group: An item with no direct answer but should have at least one child item.
     */
    Group: "group",
    /**
     * integer: Question with an integer answer (valueInteger).
     */
    Integer: "integer",
    /**
     * open-choice: Answer is a Coding drawn from a list of possible answers (as with the choice type) or a free-text entry in a string (valueCoding or valueString).
     */
    OpenChoice: "open-choice",
    /**
     * quantity: Question with a combination of a numeric value and unit, potentially with a comparator (&lt;, &gt;, etc.) as an answer. (valueQuantity) There is an extension 'http://hl7.org/fhir/StructureDefinition/questionnaire-unit' that can be used to define what unit should be captured (or the unit that has a ucum conversion from the provided unit).
     */
    Quantity: "quantity",
    /**
     * question: An item that defines a specific answer to be captured, and which may have child items. (the answer provided in the QuestionnaireResponse should be of the defined datatype).
     */
    Question: "question",
    /**
     * reference: Question with a reference to another resource (practitioner, organization, etc.) as an answer (valueReference).
     */
    Reference: "reference",
    /**
     * string: Question with a short (few words to short sentence) free-text entry answer (valueString).
     */
    String: "string",
    /**
     * text: Question with a long (potentially multi-paragraph) free-text entry answer (valueString).
     */
    Text: "text",
    /**
     * time: Question with a time (hour:minute:second) answer independent of date. (valueTime).
     */
    Time: "time",
    /**
     * url: Question with a URL (website, FTP site, etc.) answer (valueUri).
     */
    Url: "url",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSXRlbVR5cGVDb2Rlcy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvSXRlbVR5cGVDb2Rlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsZ0RBQWdEO0FBQ2hELGtDQUFrQztBQUNsQyw4REFBOEQ7QUFFOUQ7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxhQUFhLEdBQUc7SUFDM0I7O09BRUc7SUFDSCxVQUFVLEVBQUUsWUFBWTtJQUN4Qjs7T0FFRztJQUNILE9BQU8sRUFBRSxTQUFTO0lBQ2xCOztPQUVHO0lBQ0gsTUFBTSxFQUFFLFFBQVE7SUFDaEI7O09BRUc7SUFDSCxJQUFJLEVBQUUsTUFBTTtJQUNaOztPQUVHO0lBQ0gsUUFBUSxFQUFFLFVBQVU7SUFDcEI7O09BRUc7SUFDSCxPQUFPLEVBQUUsU0FBUztJQUNsQjs7T0FFRztJQUNILE9BQU8sRUFBRSxTQUFTO0lBQ2xCOztPQUVHO0lBQ0gsS0FBSyxFQUFFLE9BQU87SUFDZDs7T0FFRztJQUNILE9BQU8sRUFBRSxTQUFTO0lBQ2xCOztPQUVHO0lBQ0gsVUFBVSxFQUFFLGFBQWE7SUFDekI7O09BRUc7SUFDSCxRQUFRLEVBQUUsVUFBVTtJQUNwQjs7T0FFRztJQUNILFFBQVEsRUFBRSxVQUFVO0lBQ3BCOztPQUVHO0lBQ0gsU0FBUyxFQUFFLFdBQVc7SUFDdEI7O09BRUc7SUFDSCxNQUFNLEVBQUUsUUFBUTtJQUNoQjs7T0FFRztJQUNILElBQUksRUFBRSxNQUFNO0lBQ1o7O09BRUc7SUFDSCxJQUFJLEVBQUUsTUFBTTtJQUNaOztPQUVHO0lBQ0gsR0FBRyxFQUFFLEtBQUs7Q0FDRixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0Yi5jb3JlIHZlcnNpb246IDQuMy4wXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9pdGVtLXR5cGV8NC4zLjBcclxuXHJcbi8qKlxyXG4gKiBEaXN0aW5ndWlzaGVzIGdyb3VwcyBmcm9tIHF1ZXN0aW9ucyBhbmQgZGlzcGxheSB0ZXh0IGFuZCBpbmRpY2F0ZXMgZGF0YSB0eXBlIGZvciBxdWVzdGlvbnMuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgSXRlbVR5cGVDb2RlcyA9IHtcclxuICAvKipcclxuICAgKiBhdHRhY2htZW50OiBRdWVzdGlvbiB3aXRoIGJpbmFyeSBjb250ZW50IHN1Y2ggYXMgYW4gaW1hZ2UsIFBERiwgZXRjLiBhcyBhbiBhbnN3ZXIgKHZhbHVlQXR0YWNobWVudCkuXHJcbiAgICovXHJcbiAgQXR0YWNobWVudDogXCJhdHRhY2htZW50XCIsXHJcbiAgLyoqXHJcbiAgICogYm9vbGVhbjogUXVlc3Rpb24gd2l0aCBhIHllcy9ubyBhbnN3ZXIgKHZhbHVlQm9vbGVhbikuXHJcbiAgICovXHJcbiAgQm9vbGVhbjogXCJib29sZWFuXCIsXHJcbiAgLyoqXHJcbiAgICogY2hvaWNlOiBRdWVzdGlvbiB3aXRoIGEgQ29kaW5nIGRyYXduIGZyb20gYSBsaXN0IG9mIHBvc3NpYmxlIGFuc3dlcnMgKHNwZWNpZmllZCBpbiBlaXRoZXIgdGhlIGFuc3dlck9wdGlvbiBwcm9wZXJ0eSwgb3IgdmlhIHRoZSB2YWx1ZXNldCByZWZlcmVuY2VkIGluIHRoZSBhbnN3ZXJWYWx1ZVNldCBwcm9wZXJ0eSkgYXMgYW4gYW5zd2VyICh2YWx1ZUNvZGluZykuXHJcbiAgICovXHJcbiAgQ2hvaWNlOiBcImNob2ljZVwiLFxyXG4gIC8qKlxyXG4gICAqIGRhdGU6IFF1ZXN0aW9uIHdpdGggYSBkYXRlIGFuc3dlciAodmFsdWVEYXRlKS5cclxuICAgKi9cclxuICBEYXRlOiBcImRhdGVcIixcclxuICAvKipcclxuICAgKiBkYXRlVGltZTogUXVlc3Rpb24gd2l0aCBhIGRhdGUgYW5kIHRpbWUgYW5zd2VyICh2YWx1ZURhdGVUaW1lKS5cclxuICAgKi9cclxuICBEYXRlVGltZTogXCJkYXRlVGltZVwiLFxyXG4gIC8qKlxyXG4gICAqIGRlY2ltYWw6IFF1ZXN0aW9uIHdpdGggaXMgYSByZWFsIG51bWJlciBhbnN3ZXIgKHZhbHVlRGVjaW1hbCkuXHJcbiAgICovXHJcbiAgRGVjaW1hbDogXCJkZWNpbWFsXCIsXHJcbiAgLyoqXHJcbiAgICogZGlzcGxheTogVGV4dCBmb3IgZGlzcGxheSB0aGF0IHdpbGwgbm90IGNhcHR1cmUgYW4gYW5zd2VyIG9yIGhhdmUgY2hpbGQgaXRlbXMuXHJcbiAgICovXHJcbiAgRGlzcGxheTogXCJkaXNwbGF5XCIsXHJcbiAgLyoqXHJcbiAgICogZ3JvdXA6IEFuIGl0ZW0gd2l0aCBubyBkaXJlY3QgYW5zd2VyIGJ1dCBzaG91bGQgaGF2ZSBhdCBsZWFzdCBvbmUgY2hpbGQgaXRlbS5cclxuICAgKi9cclxuICBHcm91cDogXCJncm91cFwiLFxyXG4gIC8qKlxyXG4gICAqIGludGVnZXI6IFF1ZXN0aW9uIHdpdGggYW4gaW50ZWdlciBhbnN3ZXIgKHZhbHVlSW50ZWdlcikuXHJcbiAgICovXHJcbiAgSW50ZWdlcjogXCJpbnRlZ2VyXCIsXHJcbiAgLyoqXHJcbiAgICogb3Blbi1jaG9pY2U6IEFuc3dlciBpcyBhIENvZGluZyBkcmF3biBmcm9tIGEgbGlzdCBvZiBwb3NzaWJsZSBhbnN3ZXJzIChhcyB3aXRoIHRoZSBjaG9pY2UgdHlwZSkgb3IgYSBmcmVlLXRleHQgZW50cnkgaW4gYSBzdHJpbmcgKHZhbHVlQ29kaW5nIG9yIHZhbHVlU3RyaW5nKS5cclxuICAgKi9cclxuICBPcGVuQ2hvaWNlOiBcIm9wZW4tY2hvaWNlXCIsXHJcbiAgLyoqXHJcbiAgICogcXVhbnRpdHk6IFF1ZXN0aW9uIHdpdGggYSBjb21iaW5hdGlvbiBvZiBhIG51bWVyaWMgdmFsdWUgYW5kIHVuaXQsIHBvdGVudGlhbGx5IHdpdGggYSBjb21wYXJhdG9yICgmbHQ7LCAmZ3Q7LCBldGMuKSBhcyBhbiBhbnN3ZXIuICh2YWx1ZVF1YW50aXR5KSBUaGVyZSBpcyBhbiBleHRlbnNpb24gJ2h0dHA6Ly9obDcub3JnL2ZoaXIvU3RydWN0dXJlRGVmaW5pdGlvbi9xdWVzdGlvbm5haXJlLXVuaXQnIHRoYXQgY2FuIGJlIHVzZWQgdG8gZGVmaW5lIHdoYXQgdW5pdCBzaG91bGQgYmUgY2FwdHVyZWQgKG9yIHRoZSB1bml0IHRoYXQgaGFzIGEgdWN1bSBjb252ZXJzaW9uIGZyb20gdGhlIHByb3ZpZGVkIHVuaXQpLlxyXG4gICAqL1xyXG4gIFF1YW50aXR5OiBcInF1YW50aXR5XCIsXHJcbiAgLyoqXHJcbiAgICogcXVlc3Rpb246IEFuIGl0ZW0gdGhhdCBkZWZpbmVzIGEgc3BlY2lmaWMgYW5zd2VyIHRvIGJlIGNhcHR1cmVkLCBhbmQgd2hpY2ggbWF5IGhhdmUgY2hpbGQgaXRlbXMuICh0aGUgYW5zd2VyIHByb3ZpZGVkIGluIHRoZSBRdWVzdGlvbm5haXJlUmVzcG9uc2Ugc2hvdWxkIGJlIG9mIHRoZSBkZWZpbmVkIGRhdGF0eXBlKS5cclxuICAgKi9cclxuICBRdWVzdGlvbjogXCJxdWVzdGlvblwiLFxyXG4gIC8qKlxyXG4gICAqIHJlZmVyZW5jZTogUXVlc3Rpb24gd2l0aCBhIHJlZmVyZW5jZSB0byBhbm90aGVyIHJlc291cmNlIChwcmFjdGl0aW9uZXIsIG9yZ2FuaXphdGlvbiwgZXRjLikgYXMgYW4gYW5zd2VyICh2YWx1ZVJlZmVyZW5jZSkuXHJcbiAgICovXHJcbiAgUmVmZXJlbmNlOiBcInJlZmVyZW5jZVwiLFxyXG4gIC8qKlxyXG4gICAqIHN0cmluZzogUXVlc3Rpb24gd2l0aCBhIHNob3J0IChmZXcgd29yZHMgdG8gc2hvcnQgc2VudGVuY2UpIGZyZWUtdGV4dCBlbnRyeSBhbnN3ZXIgKHZhbHVlU3RyaW5nKS5cclxuICAgKi9cclxuICBTdHJpbmc6IFwic3RyaW5nXCIsXHJcbiAgLyoqXHJcbiAgICogdGV4dDogUXVlc3Rpb24gd2l0aCBhIGxvbmcgKHBvdGVudGlhbGx5IG11bHRpLXBhcmFncmFwaCkgZnJlZS10ZXh0IGVudHJ5IGFuc3dlciAodmFsdWVTdHJpbmcpLlxyXG4gICAqL1xyXG4gIFRleHQ6IFwidGV4dFwiLFxyXG4gIC8qKlxyXG4gICAqIHRpbWU6IFF1ZXN0aW9uIHdpdGggYSB0aW1lIChob3VyOm1pbnV0ZTpzZWNvbmQpIGFuc3dlciBpbmRlcGVuZGVudCBvZiBkYXRlLiAodmFsdWVUaW1lKS5cclxuICAgKi9cclxuICBUaW1lOiBcInRpbWVcIixcclxuICAvKipcclxuICAgKiB1cmw6IFF1ZXN0aW9uIHdpdGggYSBVUkwgKHdlYnNpdGUsIEZUUCBzaXRlLCBldGMuKSBhbnN3ZXIgKHZhbHVlVXJpKS5cclxuICAgKi9cclxuICBVcmw6IFwidXJsXCIsXHJcbn0gYXMgY29uc3Q7XHJcblxyXG4vKipcclxuICogRGlzdGluZ3Vpc2hlcyBncm91cHMgZnJvbSBxdWVzdGlvbnMgYW5kIGRpc3BsYXkgdGV4dCBhbmQgaW5kaWNhdGVzIGRhdGEgdHlwZSBmb3IgcXVlc3Rpb25zLlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgSXRlbVR5cGVDb2RlVHlwZSA9IHR5cGVvZiBJdGVtVHlwZUNvZGVzW2tleW9mIHR5cGVvZiBJdGVtVHlwZUNvZGVzXTtcclxuIl19