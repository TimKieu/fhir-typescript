// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/map-source-list-mode|4.3.0
/**
 * If field is a list, how to manage the source.
 */
export const MapSourceListModeCodings = {
    /**
     * first: Only process this rule for the first in the list.
     */
    First: {
        display: "First",
        code: "first",
        system: "http://hl7.org/fhir/map-source-list-mode",
    },
    /**
     * last: Only process this rule for the last in the list.
     */
    Last: {
        display: "Last",
        code: "last",
        system: "http://hl7.org/fhir/map-source-list-mode",
    },
    /**
     * not_first: Process this rule for all but the first.
     */
    AllButTheFirst: {
        display: "All but the first",
        code: "not_first",
        system: "http://hl7.org/fhir/map-source-list-mode",
    },
    /**
     * not_last: Process this rule for all but the last.
     */
    AllButTheLast: {
        display: "All but the last",
        code: "not_last",
        system: "http://hl7.org/fhir/map-source-list-mode",
    },
    /**
     * only_one: Only process this rule is there is only item.
     */
    EnforceOnlyOne: {
        display: "Enforce only one",
        code: "only_one",
        system: "http://hl7.org/fhir/map-source-list-mode",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWFwU291cmNlTGlzdE1vZGVDb2RpbmdzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9NYXBTb3VyY2VMaXN0TW9kZUNvZGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLGdEQUFnRDtBQUNoRCxrQ0FBa0M7QUFDbEMseUVBQXlFO0FBOEJ6RTs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLHdCQUF3QixHQUErQjtJQUNsRTs7T0FFRztJQUNILEtBQUssRUFBRTtRQUNMLE9BQU8sRUFBRSxPQUFPO1FBQ2hCLElBQUksRUFBRSxPQUFPO1FBQ2IsTUFBTSxFQUFFLDBDQUEwQztLQUNuRDtJQUNEOztPQUVHO0lBQ0gsSUFBSSxFQUFFO1FBQ0osT0FBTyxFQUFFLE1BQU07UUFDZixJQUFJLEVBQUUsTUFBTTtRQUNaLE1BQU0sRUFBRSwwQ0FBMEM7S0FDbkQ7SUFDRDs7T0FFRztJQUNILGNBQWMsRUFBRTtRQUNkLE9BQU8sRUFBRSxtQkFBbUI7UUFDNUIsSUFBSSxFQUFFLFdBQVc7UUFDakIsTUFBTSxFQUFFLDBDQUEwQztLQUNuRDtJQUNEOztPQUVHO0lBQ0gsYUFBYSxFQUFFO1FBQ2IsT0FBTyxFQUFFLGtCQUFrQjtRQUMzQixJQUFJLEVBQUUsVUFBVTtRQUNoQixNQUFNLEVBQUUsMENBQTBDO0tBQ25EO0lBQ0Q7O09BRUc7SUFDSCxjQUFjLEVBQUU7UUFDZCxPQUFPLEVBQUUsa0JBQWtCO1FBQzNCLElBQUksRUFBRSxVQUFVO1FBQ2hCLE1BQU0sRUFBRSwwQ0FBMEM7S0FDbkQ7Q0FDTyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0Yi5jb3JlIHZlcnNpb246IDQuMy4wXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9tYXAtc291cmNlLWxpc3QtbW9kZXw0LjMuMFxyXG5cclxuaW1wb3J0IHsgQ29kaW5nQXJncyB9IGZyb20gJy4uL2ZoaXIvQ29kaW5nLmpzJ1xyXG5cclxuLyoqXHJcbiAqIElmIGZpZWxkIGlzIGEgbGlzdCwgaG93IHRvIG1hbmFnZSB0aGUgc291cmNlLlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgTWFwU291cmNlTGlzdE1vZGVDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIGZpcnN0OiBPbmx5IHByb2Nlc3MgdGhpcyBydWxlIGZvciB0aGUgZmlyc3QgaW4gdGhlIGxpc3QuXHJcbiAgICovXHJcbiAgRmlyc3Q6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogbGFzdDogT25seSBwcm9jZXNzIHRoaXMgcnVsZSBmb3IgdGhlIGxhc3QgaW4gdGhlIGxpc3QuXHJcbiAgICovXHJcbiAgTGFzdDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBub3RfZmlyc3Q6IFByb2Nlc3MgdGhpcyBydWxlIGZvciBhbGwgYnV0IHRoZSBmaXJzdC5cclxuICAgKi9cclxuICBBbGxCdXRUaGVGaXJzdDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBub3RfbGFzdDogUHJvY2VzcyB0aGlzIHJ1bGUgZm9yIGFsbCBidXQgdGhlIGxhc3QuXHJcbiAgICovXHJcbiAgQWxsQnV0VGhlTGFzdDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBvbmx5X29uZTogT25seSBwcm9jZXNzIHRoaXMgcnVsZSBpcyB0aGVyZSBpcyBvbmx5IGl0ZW0uXHJcbiAgICovXHJcbiAgRW5mb3JjZU9ubHlPbmU6IENvZGluZ0FyZ3M7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBJZiBmaWVsZCBpcyBhIGxpc3QsIGhvdyB0byBtYW5hZ2UgdGhlIHNvdXJjZS5cclxuICovXHJcbmV4cG9ydCBjb25zdCBNYXBTb3VyY2VMaXN0TW9kZUNvZGluZ3M6TWFwU291cmNlTGlzdE1vZGVDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIGZpcnN0OiBPbmx5IHByb2Nlc3MgdGhpcyBydWxlIGZvciB0aGUgZmlyc3QgaW4gdGhlIGxpc3QuXHJcbiAgICovXHJcbiAgRmlyc3Q6IHtcclxuICAgIGRpc3BsYXk6IFwiRmlyc3RcIixcclxuICAgIGNvZGU6IFwiZmlyc3RcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL21hcC1zb3VyY2UtbGlzdC1tb2RlXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBsYXN0OiBPbmx5IHByb2Nlc3MgdGhpcyBydWxlIGZvciB0aGUgbGFzdCBpbiB0aGUgbGlzdC5cclxuICAgKi9cclxuICBMYXN0OiB7XHJcbiAgICBkaXNwbGF5OiBcIkxhc3RcIixcclxuICAgIGNvZGU6IFwibGFzdFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvbWFwLXNvdXJjZS1saXN0LW1vZGVcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIG5vdF9maXJzdDogUHJvY2VzcyB0aGlzIHJ1bGUgZm9yIGFsbCBidXQgdGhlIGZpcnN0LlxyXG4gICAqL1xyXG4gIEFsbEJ1dFRoZUZpcnN0OiB7XHJcbiAgICBkaXNwbGF5OiBcIkFsbCBidXQgdGhlIGZpcnN0XCIsXHJcbiAgICBjb2RlOiBcIm5vdF9maXJzdFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvbWFwLXNvdXJjZS1saXN0LW1vZGVcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIG5vdF9sYXN0OiBQcm9jZXNzIHRoaXMgcnVsZSBmb3IgYWxsIGJ1dCB0aGUgbGFzdC5cclxuICAgKi9cclxuICBBbGxCdXRUaGVMYXN0OiB7XHJcbiAgICBkaXNwbGF5OiBcIkFsbCBidXQgdGhlIGxhc3RcIixcclxuICAgIGNvZGU6IFwibm90X2xhc3RcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL21hcC1zb3VyY2UtbGlzdC1tb2RlXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBvbmx5X29uZTogT25seSBwcm9jZXNzIHRoaXMgcnVsZSBpcyB0aGVyZSBpcyBvbmx5IGl0ZW0uXHJcbiAgICovXHJcbiAgRW5mb3JjZU9ubHlPbmU6IHtcclxuICAgIGRpc3BsYXk6IFwiRW5mb3JjZSBvbmx5IG9uZVwiLFxyXG4gICAgY29kZTogXCJvbmx5X29uZVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvbWFwLXNvdXJjZS1saXN0LW1vZGVcIixcclxuICB9LFxyXG59IGFzIGNvbnN0O1xyXG4iXX0=