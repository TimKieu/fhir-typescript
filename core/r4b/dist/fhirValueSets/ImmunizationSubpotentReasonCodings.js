// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/immunization-subpotent-reason|4.3.0
/**
 * The value set to instantiate this attribute should be drawn from a terminologically robust code system that consists of or contains concepts to support describing the reason why a dose is considered to be subpotent. This value set is provided as a suggestive example.
 */
export const ImmunizationSubpotentReasonCodings = {
    /**
     * coldchainbreak: The vaccine experienced a cold chain break.
     */
    ColdChainBreak: {
        display: "Cold Chain Break",
        code: "coldchainbreak",
        system: "http://terminology.hl7.org/CodeSystem/immunization-subpotent-reason",
    },
    /**
     * partial: The full volume of the dose was not administered to the patient.
     */
    PartialDose: {
        display: "Partial Dose",
        code: "partial",
        system: "http://terminology.hl7.org/CodeSystem/immunization-subpotent-reason",
    },
    /**
     * recall: The vaccine was recalled by the manufacturer.
     */
    ManufacturerRecall: {
        display: "Manufacturer Recall",
        code: "recall",
        system: "http://terminology.hl7.org/CodeSystem/immunization-subpotent-reason",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSW1tdW5pemF0aW9uU3VicG90ZW50UmVhc29uQ29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvSW1tdW5pemF0aW9uU3VicG90ZW50UmVhc29uQ29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsZ0RBQWdEO0FBQ2hELGtDQUFrQztBQUNsQyxrRkFBa0Y7QUFzQmxGOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sa0NBQWtDLEdBQXlDO0lBQ3RGOztPQUVHO0lBQ0gsY0FBYyxFQUFFO1FBQ2QsT0FBTyxFQUFFLGtCQUFrQjtRQUMzQixJQUFJLEVBQUUsZ0JBQWdCO1FBQ3RCLE1BQU0sRUFBRSxxRUFBcUU7S0FDOUU7SUFDRDs7T0FFRztJQUNILFdBQVcsRUFBRTtRQUNYLE9BQU8sRUFBRSxjQUFjO1FBQ3ZCLElBQUksRUFBRSxTQUFTO1FBQ2YsTUFBTSxFQUFFLHFFQUFxRTtLQUM5RTtJQUNEOztPQUVHO0lBQ0gsa0JBQWtCLEVBQUU7UUFDbEIsT0FBTyxFQUFFLHFCQUFxQjtRQUM5QixJQUFJLEVBQUUsUUFBUTtRQUNkLE1BQU0sRUFBRSxxRUFBcUU7S0FDOUU7Q0FDTyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0Yi5jb3JlIHZlcnNpb246IDQuMy4wXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9pbW11bml6YXRpb24tc3VicG90ZW50LXJlYXNvbnw0LjMuMFxyXG5cclxuaW1wb3J0IHsgQ29kaW5nQXJncyB9IGZyb20gJy4uL2ZoaXIvQ29kaW5nLmpzJ1xyXG5cclxuLyoqXHJcbiAqIFRoZSB2YWx1ZSBzZXQgdG8gaW5zdGFudGlhdGUgdGhpcyBhdHRyaWJ1dGUgc2hvdWxkIGJlIGRyYXduIGZyb20gYSB0ZXJtaW5vbG9naWNhbGx5IHJvYnVzdCBjb2RlIHN5c3RlbSB0aGF0IGNvbnNpc3RzIG9mIG9yIGNvbnRhaW5zIGNvbmNlcHRzIHRvIHN1cHBvcnQgZGVzY3JpYmluZyB0aGUgcmVhc29uIHdoeSBhIGRvc2UgaXMgY29uc2lkZXJlZCB0byBiZSBzdWJwb3RlbnQuIFRoaXMgdmFsdWUgc2V0IGlzIHByb3ZpZGVkIGFzIGEgc3VnZ2VzdGl2ZSBleGFtcGxlLlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgSW1tdW5pemF0aW9uU3VicG90ZW50UmVhc29uQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBjb2xkY2hhaW5icmVhazogVGhlIHZhY2NpbmUgZXhwZXJpZW5jZWQgYSBjb2xkIGNoYWluIGJyZWFrLlxyXG4gICAqL1xyXG4gIENvbGRDaGFpbkJyZWFrOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIHBhcnRpYWw6IFRoZSBmdWxsIHZvbHVtZSBvZiB0aGUgZG9zZSB3YXMgbm90IGFkbWluaXN0ZXJlZCB0byB0aGUgcGF0aWVudC5cclxuICAgKi9cclxuICBQYXJ0aWFsRG9zZTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiByZWNhbGw6IFRoZSB2YWNjaW5lIHdhcyByZWNhbGxlZCBieSB0aGUgbWFudWZhY3R1cmVyLlxyXG4gICAqL1xyXG4gIE1hbnVmYWN0dXJlclJlY2FsbDogQ29kaW5nQXJncztcclxufVxyXG5cclxuLyoqXHJcbiAqIFRoZSB2YWx1ZSBzZXQgdG8gaW5zdGFudGlhdGUgdGhpcyBhdHRyaWJ1dGUgc2hvdWxkIGJlIGRyYXduIGZyb20gYSB0ZXJtaW5vbG9naWNhbGx5IHJvYnVzdCBjb2RlIHN5c3RlbSB0aGF0IGNvbnNpc3RzIG9mIG9yIGNvbnRhaW5zIGNvbmNlcHRzIHRvIHN1cHBvcnQgZGVzY3JpYmluZyB0aGUgcmVhc29uIHdoeSBhIGRvc2UgaXMgY29uc2lkZXJlZCB0byBiZSBzdWJwb3RlbnQuIFRoaXMgdmFsdWUgc2V0IGlzIHByb3ZpZGVkIGFzIGEgc3VnZ2VzdGl2ZSBleGFtcGxlLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IEltbXVuaXphdGlvblN1YnBvdGVudFJlYXNvbkNvZGluZ3M6SW1tdW5pemF0aW9uU3VicG90ZW50UmVhc29uQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBjb2xkY2hhaW5icmVhazogVGhlIHZhY2NpbmUgZXhwZXJpZW5jZWQgYSBjb2xkIGNoYWluIGJyZWFrLlxyXG4gICAqL1xyXG4gIENvbGRDaGFpbkJyZWFrOiB7XHJcbiAgICBkaXNwbGF5OiBcIkNvbGQgQ2hhaW4gQnJlYWtcIixcclxuICAgIGNvZGU6IFwiY29sZGNoYWluYnJlYWtcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2ltbXVuaXphdGlvbi1zdWJwb3RlbnQtcmVhc29uXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBwYXJ0aWFsOiBUaGUgZnVsbCB2b2x1bWUgb2YgdGhlIGRvc2Ugd2FzIG5vdCBhZG1pbmlzdGVyZWQgdG8gdGhlIHBhdGllbnQuXHJcbiAgICovXHJcbiAgUGFydGlhbERvc2U6IHtcclxuICAgIGRpc3BsYXk6IFwiUGFydGlhbCBEb3NlXCIsXHJcbiAgICBjb2RlOiBcInBhcnRpYWxcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2ltbXVuaXphdGlvbi1zdWJwb3RlbnQtcmVhc29uXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiByZWNhbGw6IFRoZSB2YWNjaW5lIHdhcyByZWNhbGxlZCBieSB0aGUgbWFudWZhY3R1cmVyLlxyXG4gICAqL1xyXG4gIE1hbnVmYWN0dXJlclJlY2FsbDoge1xyXG4gICAgZGlzcGxheTogXCJNYW51ZmFjdHVyZXIgUmVjYWxsXCIsXHJcbiAgICBjb2RlOiBcInJlY2FsbFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vaW1tdW5pemF0aW9uLXN1YnBvdGVudC1yZWFzb25cIixcclxuICB9LFxyXG59IGFzIGNvbnN0O1xyXG4iXX0=