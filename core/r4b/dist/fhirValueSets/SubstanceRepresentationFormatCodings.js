// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/substance-representation-format|4.3.0
/**
 * A format of a substance representation.
 */
export const SubstanceRepresentationFormatCodings = {
    /**
     * Code: CDX
     */
    CDX: {
        display: "CDX",
        code: "CDX",
        system: "http://hl7.org/fhir/substance-representation-format",
    },
    /**
     * Code: InChI
     */
    InChI: {
        display: "InChI",
        code: "InChI",
        system: "http://hl7.org/fhir/substance-representation-format",
    },
    /**
     * Code: mmCIF
     */
    MmCIF: {
        display: "mmCIF",
        code: "mmCIF",
        system: "http://hl7.org/fhir/substance-representation-format",
    },
    /**
     * Code: MOLFILE
     */
    MOLFILE: {
        display: "MOLFILE",
        code: "MOLFILE",
        system: "http://hl7.org/fhir/substance-representation-format",
    },
    /**
     * Code: PDB
     */
    PDB: {
        display: "PDB",
        code: "PDB",
        system: "http://hl7.org/fhir/substance-representation-format",
    },
    /**
     * Code: SDF
     */
    SDF: {
        display: "SDF",
        code: "SDF",
        system: "http://hl7.org/fhir/substance-representation-format",
    },
    /**
     * Code: SMILES
     */
    SMILES: {
        display: "SMILES",
        code: "SMILES",
        system: "http://hl7.org/fhir/substance-representation-format",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3Vic3RhbmNlUmVwcmVzZW50YXRpb25Gb3JtYXRDb2RpbmdzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9TdWJzdGFuY2VSZXByZXNlbnRhdGlvbkZvcm1hdENvZGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLGdEQUFnRDtBQUNoRCxrQ0FBa0M7QUFDbEMsb0ZBQW9GO0FBc0NwRjs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLG9DQUFvQyxHQUEyQztJQUMxRjs7T0FFRztJQUNILEdBQUcsRUFBRTtRQUNILE9BQU8sRUFBRSxLQUFLO1FBQ2QsSUFBSSxFQUFFLEtBQUs7UUFDWCxNQUFNLEVBQUUscURBQXFEO0tBQzlEO0lBQ0Q7O09BRUc7SUFDSCxLQUFLLEVBQUU7UUFDTCxPQUFPLEVBQUUsT0FBTztRQUNoQixJQUFJLEVBQUUsT0FBTztRQUNiLE1BQU0sRUFBRSxxREFBcUQ7S0FDOUQ7SUFDRDs7T0FFRztJQUNILEtBQUssRUFBRTtRQUNMLE9BQU8sRUFBRSxPQUFPO1FBQ2hCLElBQUksRUFBRSxPQUFPO1FBQ2IsTUFBTSxFQUFFLHFEQUFxRDtLQUM5RDtJQUNEOztPQUVHO0lBQ0gsT0FBTyxFQUFFO1FBQ1AsT0FBTyxFQUFFLFNBQVM7UUFDbEIsSUFBSSxFQUFFLFNBQVM7UUFDZixNQUFNLEVBQUUscURBQXFEO0tBQzlEO0lBQ0Q7O09BRUc7SUFDSCxHQUFHLEVBQUU7UUFDSCxPQUFPLEVBQUUsS0FBSztRQUNkLElBQUksRUFBRSxLQUFLO1FBQ1gsTUFBTSxFQUFFLHFEQUFxRDtLQUM5RDtJQUNEOztPQUVHO0lBQ0gsR0FBRyxFQUFFO1FBQ0gsT0FBTyxFQUFFLEtBQUs7UUFDZCxJQUFJLEVBQUUsS0FBSztRQUNYLE1BQU0sRUFBRSxxREFBcUQ7S0FDOUQ7SUFDRDs7T0FFRztJQUNILE1BQU0sRUFBRTtRQUNOLE9BQU8sRUFBRSxRQUFRO1FBQ2pCLElBQUksRUFBRSxRQUFRO1FBQ2QsTUFBTSxFQUFFLHFEQUFxRDtLQUM5RDtDQUNPLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjRiLmNvcmUgdmVyc2lvbjogNC4zLjBcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L3N1YnN0YW5jZS1yZXByZXNlbnRhdGlvbi1mb3JtYXR8NC4zLjBcclxuXHJcbmltcG9ydCB7IENvZGluZ0FyZ3MgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiBBIGZvcm1hdCBvZiBhIHN1YnN0YW5jZSByZXByZXNlbnRhdGlvbi5cclxuICovXHJcbmV4cG9ydCB0eXBlIFN1YnN0YW5jZVJlcHJlc2VudGF0aW9uRm9ybWF0Q29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBDb2RlOiBDRFhcclxuICAgKi9cclxuICBDRFg6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogSW5DaElcclxuICAgKi9cclxuICBJbkNoSTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiBtbUNJRlxyXG4gICAqL1xyXG4gIE1tQ0lGOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IE1PTEZJTEVcclxuICAgKi9cclxuICBNT0xGSUxFOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IFBEQlxyXG4gICAqL1xyXG4gIFBEQjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiBTREZcclxuICAgKi9cclxuICBTREY6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogU01JTEVTXHJcbiAgICovXHJcbiAgU01JTEVTOiBDb2RpbmdBcmdzO1xyXG59XHJcblxyXG4vKipcclxuICogQSBmb3JtYXQgb2YgYSBzdWJzdGFuY2UgcmVwcmVzZW50YXRpb24uXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgU3Vic3RhbmNlUmVwcmVzZW50YXRpb25Gb3JtYXRDb2RpbmdzOlN1YnN0YW5jZVJlcHJlc2VudGF0aW9uRm9ybWF0Q29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBDb2RlOiBDRFhcclxuICAgKi9cclxuICBDRFg6IHtcclxuICAgIGRpc3BsYXk6IFwiQ0RYXCIsXHJcbiAgICBjb2RlOiBcIkNEWFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvc3Vic3RhbmNlLXJlcHJlc2VudGF0aW9uLWZvcm1hdFwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogSW5DaElcclxuICAgKi9cclxuICBJbkNoSToge1xyXG4gICAgZGlzcGxheTogXCJJbkNoSVwiLFxyXG4gICAgY29kZTogXCJJbkNoSVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvc3Vic3RhbmNlLXJlcHJlc2VudGF0aW9uLWZvcm1hdFwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogbW1DSUZcclxuICAgKi9cclxuICBNbUNJRjoge1xyXG4gICAgZGlzcGxheTogXCJtbUNJRlwiLFxyXG4gICAgY29kZTogXCJtbUNJRlwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvc3Vic3RhbmNlLXJlcHJlc2VudGF0aW9uLWZvcm1hdFwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogTU9MRklMRVxyXG4gICAqL1xyXG4gIE1PTEZJTEU6IHtcclxuICAgIGRpc3BsYXk6IFwiTU9MRklMRVwiLFxyXG4gICAgY29kZTogXCJNT0xGSUxFXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9zdWJzdGFuY2UtcmVwcmVzZW50YXRpb24tZm9ybWF0XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiBQREJcclxuICAgKi9cclxuICBQREI6IHtcclxuICAgIGRpc3BsYXk6IFwiUERCXCIsXHJcbiAgICBjb2RlOiBcIlBEQlwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvc3Vic3RhbmNlLXJlcHJlc2VudGF0aW9uLWZvcm1hdFwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogU0RGXHJcbiAgICovXHJcbiAgU0RGOiB7XHJcbiAgICBkaXNwbGF5OiBcIlNERlwiLFxyXG4gICAgY29kZTogXCJTREZcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3N1YnN0YW5jZS1yZXByZXNlbnRhdGlvbi1mb3JtYXRcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IFNNSUxFU1xyXG4gICAqL1xyXG4gIFNNSUxFUzoge1xyXG4gICAgZGlzcGxheTogXCJTTUlMRVNcIixcclxuICAgIGNvZGU6IFwiU01JTEVTXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9zdWJzdGFuY2UtcmVwcmVzZW50YXRpb24tZm9ybWF0XCIsXHJcbiAgfSxcclxufSBhcyBjb25zdDtcclxuIl19