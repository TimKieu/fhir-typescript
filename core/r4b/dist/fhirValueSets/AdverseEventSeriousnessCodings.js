// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/adverse-event-seriousness|4.3.0
/**
 * Overall seriousness of this event for the patient.
 */
export const AdverseEventSeriousnessCodings = {
    /**
     * Non-serious: Non-serious.
     */
    NonSerious: {
        display: "Non-serious",
        code: "Non-serious",
        system: "http://terminology.hl7.org/CodeSystem/adverse-event-seriousness",
    },
    /**
     * Serious: Serious.
     */
    Serious: {
        display: "Serious",
        code: "Serious",
        system: "http://terminology.hl7.org/CodeSystem/adverse-event-seriousness",
    },
    /**
     * SeriousIsBirthDefect: Is a congenital anomaly/birth defect.
     */
    IsACongenitalAnomalyBirthDefect: {
        display: "Is a congenital anomaly/birth defect",
        code: "SeriousIsBirthDefect",
        system: "http://terminology.hl7.org/CodeSystem/adverse-event-seriousness",
    },
    /**
     * SeriousIsLifeThreatening: Is Life-threatening.
     */
    IsLifeThreatening: {
        display: "Is Life-threatening",
        code: "SeriousIsLifeThreatening",
        system: "http://terminology.hl7.org/CodeSystem/adverse-event-seriousness",
    },
    /**
     * SeriousRequiresPreventImpairment: Requires intervention to prevent permanent impairment or damage (i.e., an important medical event that requires medical judgement).
     */
    RequiresInterventionToPreventPermanentImpairment: {
        display: "Requires intervention to prevent permanent impairment",
        code: "SeriousRequiresPreventImpairment",
        system: "http://terminology.hl7.org/CodeSystem/adverse-event-seriousness",
    },
    /**
     * SeriousResultsInDeath: Results in death.
     */
    ResultsInDeath: {
        display: "Results in death",
        code: "SeriousResultsInDeath",
        system: "http://terminology.hl7.org/CodeSystem/adverse-event-seriousness",
    },
    /**
     * SeriousResultsInDisability: Results in persistent or significant disability/incapacity.
     */
    ResultsInPersistentOrSignificantDisabilityIncapacity: {
        display: "Results in persistent or significant disability/incapacity",
        code: "SeriousResultsInDisability",
        system: "http://terminology.hl7.org/CodeSystem/adverse-event-seriousness",
    },
    /**
     * SeriousResultsInHospitalization: Requires inpatient hospitalization or causes prolongation of existing hospitalization.
     */
    RequiresOrProlongsInpatientHospitalization: {
        display: "Requires or prolongs inpatient hospitalization",
        code: "SeriousResultsInHospitalization",
        system: "http://terminology.hl7.org/CodeSystem/adverse-event-seriousness",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQWR2ZXJzZUV2ZW50U2VyaW91c25lc3NDb2RpbmdzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9BZHZlcnNlRXZlbnRTZXJpb3VzbmVzc0NvZGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLGdEQUFnRDtBQUNoRCxrQ0FBa0M7QUFDbEMsOEVBQThFO0FBMEM5RTs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLDhCQUE4QixHQUFxQztJQUM5RTs7T0FFRztJQUNILFVBQVUsRUFBRTtRQUNWLE9BQU8sRUFBRSxhQUFhO1FBQ3RCLElBQUksRUFBRSxhQUFhO1FBQ25CLE1BQU0sRUFBRSxpRUFBaUU7S0FDMUU7SUFDRDs7T0FFRztJQUNILE9BQU8sRUFBRTtRQUNQLE9BQU8sRUFBRSxTQUFTO1FBQ2xCLElBQUksRUFBRSxTQUFTO1FBQ2YsTUFBTSxFQUFFLGlFQUFpRTtLQUMxRTtJQUNEOztPQUVHO0lBQ0gsK0JBQStCLEVBQUU7UUFDL0IsT0FBTyxFQUFFLHNDQUFzQztRQUMvQyxJQUFJLEVBQUUsc0JBQXNCO1FBQzVCLE1BQU0sRUFBRSxpRUFBaUU7S0FDMUU7SUFDRDs7T0FFRztJQUNILGlCQUFpQixFQUFFO1FBQ2pCLE9BQU8sRUFBRSxxQkFBcUI7UUFDOUIsSUFBSSxFQUFFLDBCQUEwQjtRQUNoQyxNQUFNLEVBQUUsaUVBQWlFO0tBQzFFO0lBQ0Q7O09BRUc7SUFDSCxnREFBZ0QsRUFBRTtRQUNoRCxPQUFPLEVBQUUsdURBQXVEO1FBQ2hFLElBQUksRUFBRSxrQ0FBa0M7UUFDeEMsTUFBTSxFQUFFLGlFQUFpRTtLQUMxRTtJQUNEOztPQUVHO0lBQ0gsY0FBYyxFQUFFO1FBQ2QsT0FBTyxFQUFFLGtCQUFrQjtRQUMzQixJQUFJLEVBQUUsdUJBQXVCO1FBQzdCLE1BQU0sRUFBRSxpRUFBaUU7S0FDMUU7SUFDRDs7T0FFRztJQUNILG9EQUFvRCxFQUFFO1FBQ3BELE9BQU8sRUFBRSw0REFBNEQ7UUFDckUsSUFBSSxFQUFFLDRCQUE0QjtRQUNsQyxNQUFNLEVBQUUsaUVBQWlFO0tBQzFFO0lBQ0Q7O09BRUc7SUFDSCwwQ0FBMEMsRUFBRTtRQUMxQyxPQUFPLEVBQUUsZ0RBQWdEO1FBQ3pELElBQUksRUFBRSxpQ0FBaUM7UUFDdkMsTUFBTSxFQUFFLGlFQUFpRTtLQUMxRTtDQUNPLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjRiLmNvcmUgdmVyc2lvbjogNC4zLjBcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L2FkdmVyc2UtZXZlbnQtc2VyaW91c25lc3N8NC4zLjBcclxuXHJcbmltcG9ydCB7IENvZGluZ0FyZ3MgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiBPdmVyYWxsIHNlcmlvdXNuZXNzIG9mIHRoaXMgZXZlbnQgZm9yIHRoZSBwYXRpZW50LlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgQWR2ZXJzZUV2ZW50U2VyaW91c25lc3NDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIE5vbi1zZXJpb3VzOiBOb24tc2VyaW91cy5cclxuICAgKi9cclxuICBOb25TZXJpb3VzOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIFNlcmlvdXM6IFNlcmlvdXMuXHJcbiAgICovXHJcbiAgU2VyaW91czogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBTZXJpb3VzSXNCaXJ0aERlZmVjdDogSXMgYSBjb25nZW5pdGFsIGFub21hbHkvYmlydGggZGVmZWN0LlxyXG4gICAqL1xyXG4gIElzQUNvbmdlbml0YWxBbm9tYWx5QmlydGhEZWZlY3Q6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogU2VyaW91c0lzTGlmZVRocmVhdGVuaW5nOiBJcyBMaWZlLXRocmVhdGVuaW5nLlxyXG4gICAqL1xyXG4gIElzTGlmZVRocmVhdGVuaW5nOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIFNlcmlvdXNSZXF1aXJlc1ByZXZlbnRJbXBhaXJtZW50OiBSZXF1aXJlcyBpbnRlcnZlbnRpb24gdG8gcHJldmVudCBwZXJtYW5lbnQgaW1wYWlybWVudCBvciBkYW1hZ2UgKGkuZS4sIGFuIGltcG9ydGFudCBtZWRpY2FsIGV2ZW50IHRoYXQgcmVxdWlyZXMgbWVkaWNhbCBqdWRnZW1lbnQpLlxyXG4gICAqL1xyXG4gIFJlcXVpcmVzSW50ZXJ2ZW50aW9uVG9QcmV2ZW50UGVybWFuZW50SW1wYWlybWVudDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBTZXJpb3VzUmVzdWx0c0luRGVhdGg6IFJlc3VsdHMgaW4gZGVhdGguXHJcbiAgICovXHJcbiAgUmVzdWx0c0luRGVhdGg6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogU2VyaW91c1Jlc3VsdHNJbkRpc2FiaWxpdHk6IFJlc3VsdHMgaW4gcGVyc2lzdGVudCBvciBzaWduaWZpY2FudCBkaXNhYmlsaXR5L2luY2FwYWNpdHkuXHJcbiAgICovXHJcbiAgUmVzdWx0c0luUGVyc2lzdGVudE9yU2lnbmlmaWNhbnREaXNhYmlsaXR5SW5jYXBhY2l0eTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBTZXJpb3VzUmVzdWx0c0luSG9zcGl0YWxpemF0aW9uOiBSZXF1aXJlcyBpbnBhdGllbnQgaG9zcGl0YWxpemF0aW9uIG9yIGNhdXNlcyBwcm9sb25nYXRpb24gb2YgZXhpc3RpbmcgaG9zcGl0YWxpemF0aW9uLlxyXG4gICAqL1xyXG4gIFJlcXVpcmVzT3JQcm9sb25nc0lucGF0aWVudEhvc3BpdGFsaXphdGlvbjogQ29kaW5nQXJncztcclxufVxyXG5cclxuLyoqXHJcbiAqIE92ZXJhbGwgc2VyaW91c25lc3Mgb2YgdGhpcyBldmVudCBmb3IgdGhlIHBhdGllbnQuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgQWR2ZXJzZUV2ZW50U2VyaW91c25lc3NDb2RpbmdzOkFkdmVyc2VFdmVudFNlcmlvdXNuZXNzQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBOb24tc2VyaW91czogTm9uLXNlcmlvdXMuXHJcbiAgICovXHJcbiAgTm9uU2VyaW91czoge1xyXG4gICAgZGlzcGxheTogXCJOb24tc2VyaW91c1wiLFxyXG4gICAgY29kZTogXCJOb24tc2VyaW91c1wiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vYWR2ZXJzZS1ldmVudC1zZXJpb3VzbmVzc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogU2VyaW91czogU2VyaW91cy5cclxuICAgKi9cclxuICBTZXJpb3VzOiB7XHJcbiAgICBkaXNwbGF5OiBcIlNlcmlvdXNcIixcclxuICAgIGNvZGU6IFwiU2VyaW91c1wiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vYWR2ZXJzZS1ldmVudC1zZXJpb3VzbmVzc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogU2VyaW91c0lzQmlydGhEZWZlY3Q6IElzIGEgY29uZ2VuaXRhbCBhbm9tYWx5L2JpcnRoIGRlZmVjdC5cclxuICAgKi9cclxuICBJc0FDb25nZW5pdGFsQW5vbWFseUJpcnRoRGVmZWN0OiB7XHJcbiAgICBkaXNwbGF5OiBcIklzIGEgY29uZ2VuaXRhbCBhbm9tYWx5L2JpcnRoIGRlZmVjdFwiLFxyXG4gICAgY29kZTogXCJTZXJpb3VzSXNCaXJ0aERlZmVjdFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vYWR2ZXJzZS1ldmVudC1zZXJpb3VzbmVzc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogU2VyaW91c0lzTGlmZVRocmVhdGVuaW5nOiBJcyBMaWZlLXRocmVhdGVuaW5nLlxyXG4gICAqL1xyXG4gIElzTGlmZVRocmVhdGVuaW5nOiB7XHJcbiAgICBkaXNwbGF5OiBcIklzIExpZmUtdGhyZWF0ZW5pbmdcIixcclxuICAgIGNvZGU6IFwiU2VyaW91c0lzTGlmZVRocmVhdGVuaW5nXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9hZHZlcnNlLWV2ZW50LXNlcmlvdXNuZXNzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBTZXJpb3VzUmVxdWlyZXNQcmV2ZW50SW1wYWlybWVudDogUmVxdWlyZXMgaW50ZXJ2ZW50aW9uIHRvIHByZXZlbnQgcGVybWFuZW50IGltcGFpcm1lbnQgb3IgZGFtYWdlIChpLmUuLCBhbiBpbXBvcnRhbnQgbWVkaWNhbCBldmVudCB0aGF0IHJlcXVpcmVzIG1lZGljYWwganVkZ2VtZW50KS5cclxuICAgKi9cclxuICBSZXF1aXJlc0ludGVydmVudGlvblRvUHJldmVudFBlcm1hbmVudEltcGFpcm1lbnQ6IHtcclxuICAgIGRpc3BsYXk6IFwiUmVxdWlyZXMgaW50ZXJ2ZW50aW9uIHRvIHByZXZlbnQgcGVybWFuZW50IGltcGFpcm1lbnRcIixcclxuICAgIGNvZGU6IFwiU2VyaW91c1JlcXVpcmVzUHJldmVudEltcGFpcm1lbnRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2FkdmVyc2UtZXZlbnQtc2VyaW91c25lc3NcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIFNlcmlvdXNSZXN1bHRzSW5EZWF0aDogUmVzdWx0cyBpbiBkZWF0aC5cclxuICAgKi9cclxuICBSZXN1bHRzSW5EZWF0aDoge1xyXG4gICAgZGlzcGxheTogXCJSZXN1bHRzIGluIGRlYXRoXCIsXHJcbiAgICBjb2RlOiBcIlNlcmlvdXNSZXN1bHRzSW5EZWF0aFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vYWR2ZXJzZS1ldmVudC1zZXJpb3VzbmVzc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogU2VyaW91c1Jlc3VsdHNJbkRpc2FiaWxpdHk6IFJlc3VsdHMgaW4gcGVyc2lzdGVudCBvciBzaWduaWZpY2FudCBkaXNhYmlsaXR5L2luY2FwYWNpdHkuXHJcbiAgICovXHJcbiAgUmVzdWx0c0luUGVyc2lzdGVudE9yU2lnbmlmaWNhbnREaXNhYmlsaXR5SW5jYXBhY2l0eToge1xyXG4gICAgZGlzcGxheTogXCJSZXN1bHRzIGluIHBlcnNpc3RlbnQgb3Igc2lnbmlmaWNhbnQgZGlzYWJpbGl0eS9pbmNhcGFjaXR5XCIsXHJcbiAgICBjb2RlOiBcIlNlcmlvdXNSZXN1bHRzSW5EaXNhYmlsaXR5XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9hZHZlcnNlLWV2ZW50LXNlcmlvdXNuZXNzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBTZXJpb3VzUmVzdWx0c0luSG9zcGl0YWxpemF0aW9uOiBSZXF1aXJlcyBpbnBhdGllbnQgaG9zcGl0YWxpemF0aW9uIG9yIGNhdXNlcyBwcm9sb25nYXRpb24gb2YgZXhpc3RpbmcgaG9zcGl0YWxpemF0aW9uLlxyXG4gICAqL1xyXG4gIFJlcXVpcmVzT3JQcm9sb25nc0lucGF0aWVudEhvc3BpdGFsaXphdGlvbjoge1xyXG4gICAgZGlzcGxheTogXCJSZXF1aXJlcyBvciBwcm9sb25ncyBpbnBhdGllbnQgaG9zcGl0YWxpemF0aW9uXCIsXHJcbiAgICBjb2RlOiBcIlNlcmlvdXNSZXN1bHRzSW5Ib3NwaXRhbGl6YXRpb25cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2FkdmVyc2UtZXZlbnQtc2VyaW91c25lc3NcIixcclxuICB9LFxyXG59IGFzIGNvbnN0O1xyXG4iXX0=