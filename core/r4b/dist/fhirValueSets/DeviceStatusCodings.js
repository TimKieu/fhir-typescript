// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/device-status|4.3.0
/**
 * The availability status of the device.
 */
export const DeviceStatusCodings = {
    /**
     * active: The device is available for use.  Note: For *implanted devices*  this means that the device is implanted in the patient.
     */
    Active: {
        display: "Active",
        code: "active",
        system: "http://hl7.org/fhir/device-status",
    },
    /**
     * entered-in-error: The device was entered in error and voided.
     */
    EnteredInError: {
        display: "Entered in Error",
        code: "entered-in-error",
        system: "http://hl7.org/fhir/device-status",
    },
    /**
     * inactive: The device is no longer available for use (e.g. lost, expired, damaged).  Note: For *implanted devices*  this means that the device has been removed from the patient.
     */
    Inactive: {
        display: "Inactive",
        code: "inactive",
        system: "http://hl7.org/fhir/device-status",
    },
    /**
     * unknown: The status of the device has not been determined.
     */
    Unknown: {
        display: "Unknown",
        code: "unknown",
        system: "http://hl7.org/fhir/device-status",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGV2aWNlU3RhdHVzQ29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvRGV2aWNlU3RhdHVzQ29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsZ0RBQWdEO0FBQ2hELGtDQUFrQztBQUNsQyxrRUFBa0U7QUEwQmxFOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sbUJBQW1CLEdBQTBCO0lBQ3hEOztPQUVHO0lBQ0gsTUFBTSxFQUFFO1FBQ04sT0FBTyxFQUFFLFFBQVE7UUFDakIsSUFBSSxFQUFFLFFBQVE7UUFDZCxNQUFNLEVBQUUsbUNBQW1DO0tBQzVDO0lBQ0Q7O09BRUc7SUFDSCxjQUFjLEVBQUU7UUFDZCxPQUFPLEVBQUUsa0JBQWtCO1FBQzNCLElBQUksRUFBRSxrQkFBa0I7UUFDeEIsTUFBTSxFQUFFLG1DQUFtQztLQUM1QztJQUNEOztPQUVHO0lBQ0gsUUFBUSxFQUFFO1FBQ1IsT0FBTyxFQUFFLFVBQVU7UUFDbkIsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLG1DQUFtQztLQUM1QztJQUNEOztPQUVHO0lBQ0gsT0FBTyxFQUFFO1FBQ1AsT0FBTyxFQUFFLFNBQVM7UUFDbEIsSUFBSSxFQUFFLFNBQVM7UUFDZixNQUFNLEVBQUUsbUNBQW1DO0tBQzVDO0NBQ08sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNGIuY29yZSB2ZXJzaW9uOiA0LjMuMFxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvZGV2aWNlLXN0YXR1c3w0LjMuMFxyXG5cclxuaW1wb3J0IHsgQ29kaW5nQXJncyB9IGZyb20gJy4uL2ZoaXIvQ29kaW5nLmpzJ1xyXG5cclxuLyoqXHJcbiAqIFRoZSBhdmFpbGFiaWxpdHkgc3RhdHVzIG9mIHRoZSBkZXZpY2UuXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBEZXZpY2VTdGF0dXNDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIGFjdGl2ZTogVGhlIGRldmljZSBpcyBhdmFpbGFibGUgZm9yIHVzZS4gIE5vdGU6IEZvciAqaW1wbGFudGVkIGRldmljZXMqICB0aGlzIG1lYW5zIHRoYXQgdGhlIGRldmljZSBpcyBpbXBsYW50ZWQgaW4gdGhlIHBhdGllbnQuXHJcbiAgICovXHJcbiAgQWN0aXZlOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIGVudGVyZWQtaW4tZXJyb3I6IFRoZSBkZXZpY2Ugd2FzIGVudGVyZWQgaW4gZXJyb3IgYW5kIHZvaWRlZC5cclxuICAgKi9cclxuICBFbnRlcmVkSW5FcnJvcjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBpbmFjdGl2ZTogVGhlIGRldmljZSBpcyBubyBsb25nZXIgYXZhaWxhYmxlIGZvciB1c2UgKGUuZy4gbG9zdCwgZXhwaXJlZCwgZGFtYWdlZCkuICBOb3RlOiBGb3IgKmltcGxhbnRlZCBkZXZpY2VzKiAgdGhpcyBtZWFucyB0aGF0IHRoZSBkZXZpY2UgaGFzIGJlZW4gcmVtb3ZlZCBmcm9tIHRoZSBwYXRpZW50LlxyXG4gICAqL1xyXG4gIEluYWN0aXZlOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIHVua25vd246IFRoZSBzdGF0dXMgb2YgdGhlIGRldmljZSBoYXMgbm90IGJlZW4gZGV0ZXJtaW5lZC5cclxuICAgKi9cclxuICBVbmtub3duOiBDb2RpbmdBcmdzO1xyXG59XHJcblxyXG4vKipcclxuICogVGhlIGF2YWlsYWJpbGl0eSBzdGF0dXMgb2YgdGhlIGRldmljZS5cclxuICovXHJcbmV4cG9ydCBjb25zdCBEZXZpY2VTdGF0dXNDb2RpbmdzOkRldmljZVN0YXR1c0NvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogYWN0aXZlOiBUaGUgZGV2aWNlIGlzIGF2YWlsYWJsZSBmb3IgdXNlLiAgTm90ZTogRm9yICppbXBsYW50ZWQgZGV2aWNlcyogIHRoaXMgbWVhbnMgdGhhdCB0aGUgZGV2aWNlIGlzIGltcGxhbnRlZCBpbiB0aGUgcGF0aWVudC5cclxuICAgKi9cclxuICBBY3RpdmU6IHtcclxuICAgIGRpc3BsYXk6IFwiQWN0aXZlXCIsXHJcbiAgICBjb2RlOiBcImFjdGl2ZVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvZGV2aWNlLXN0YXR1c1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogZW50ZXJlZC1pbi1lcnJvcjogVGhlIGRldmljZSB3YXMgZW50ZXJlZCBpbiBlcnJvciBhbmQgdm9pZGVkLlxyXG4gICAqL1xyXG4gIEVudGVyZWRJbkVycm9yOiB7XHJcbiAgICBkaXNwbGF5OiBcIkVudGVyZWQgaW4gRXJyb3JcIixcclxuICAgIGNvZGU6IFwiZW50ZXJlZC1pbi1lcnJvclwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvZGV2aWNlLXN0YXR1c1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogaW5hY3RpdmU6IFRoZSBkZXZpY2UgaXMgbm8gbG9uZ2VyIGF2YWlsYWJsZSBmb3IgdXNlIChlLmcuIGxvc3QsIGV4cGlyZWQsIGRhbWFnZWQpLiAgTm90ZTogRm9yICppbXBsYW50ZWQgZGV2aWNlcyogIHRoaXMgbWVhbnMgdGhhdCB0aGUgZGV2aWNlIGhhcyBiZWVuIHJlbW92ZWQgZnJvbSB0aGUgcGF0aWVudC5cclxuICAgKi9cclxuICBJbmFjdGl2ZToge1xyXG4gICAgZGlzcGxheTogXCJJbmFjdGl2ZVwiLFxyXG4gICAgY29kZTogXCJpbmFjdGl2ZVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvZGV2aWNlLXN0YXR1c1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogdW5rbm93bjogVGhlIHN0YXR1cyBvZiB0aGUgZGV2aWNlIGhhcyBub3QgYmVlbiBkZXRlcm1pbmVkLlxyXG4gICAqL1xyXG4gIFVua25vd246IHtcclxuICAgIGRpc3BsYXk6IFwiVW5rbm93blwiLFxyXG4gICAgY29kZTogXCJ1bmtub3duXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9kZXZpY2Utc3RhdHVzXCIsXHJcbiAgfSxcclxufSBhcyBjb25zdDtcclxuIl19