// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/report-status-codes|4.3.0
/**
 * The current status of the test report.
 */
export const ReportStatusCodings = {
    /**
     * completed: All test operations have completed.
     */
    Completed: {
        display: "Completed",
        code: "completed",
        system: "http://hl7.org/fhir/report-status-codes",
    },
    /**
     * entered-in-error: This test report was entered or created in error.
     */
    EnteredInError: {
        display: "Entered In Error",
        code: "entered-in-error",
        system: "http://hl7.org/fhir/report-status-codes",
    },
    /**
     * in-progress: A test operations is currently executing.
     */
    InProgress: {
        display: "In Progress",
        code: "in-progress",
        system: "http://hl7.org/fhir/report-status-codes",
    },
    /**
     * stopped: The test script execution was manually stopped.
     */
    Stopped: {
        display: "Stopped",
        code: "stopped",
        system: "http://hl7.org/fhir/report-status-codes",
    },
    /**
     * waiting: A test operation is waiting for an external client request.
     */
    Waiting: {
        display: "Waiting",
        code: "waiting",
        system: "http://hl7.org/fhir/report-status-codes",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVwb3J0U3RhdHVzQ29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvUmVwb3J0U3RhdHVzQ29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsZ0RBQWdEO0FBQ2hELGtDQUFrQztBQUNsQyx3RUFBd0U7QUE4QnhFOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sbUJBQW1CLEdBQTBCO0lBQ3hEOztPQUVHO0lBQ0gsU0FBUyxFQUFFO1FBQ1QsT0FBTyxFQUFFLFdBQVc7UUFDcEIsSUFBSSxFQUFFLFdBQVc7UUFDakIsTUFBTSxFQUFFLHlDQUF5QztLQUNsRDtJQUNEOztPQUVHO0lBQ0gsY0FBYyxFQUFFO1FBQ2QsT0FBTyxFQUFFLGtCQUFrQjtRQUMzQixJQUFJLEVBQUUsa0JBQWtCO1FBQ3hCLE1BQU0sRUFBRSx5Q0FBeUM7S0FDbEQ7SUFDRDs7T0FFRztJQUNILFVBQVUsRUFBRTtRQUNWLE9BQU8sRUFBRSxhQUFhO1FBQ3RCLElBQUksRUFBRSxhQUFhO1FBQ25CLE1BQU0sRUFBRSx5Q0FBeUM7S0FDbEQ7SUFDRDs7T0FFRztJQUNILE9BQU8sRUFBRTtRQUNQLE9BQU8sRUFBRSxTQUFTO1FBQ2xCLElBQUksRUFBRSxTQUFTO1FBQ2YsTUFBTSxFQUFFLHlDQUF5QztLQUNsRDtJQUNEOztPQUVHO0lBQ0gsT0FBTyxFQUFFO1FBQ1AsT0FBTyxFQUFFLFNBQVM7UUFDbEIsSUFBSSxFQUFFLFNBQVM7UUFDZixNQUFNLEVBQUUseUNBQXlDO0tBQ2xEO0NBQ08sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNGIuY29yZSB2ZXJzaW9uOiA0LjMuMFxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvcmVwb3J0LXN0YXR1cy1jb2Rlc3w0LjMuMFxyXG5cclxuaW1wb3J0IHsgQ29kaW5nQXJncyB9IGZyb20gJy4uL2ZoaXIvQ29kaW5nLmpzJ1xyXG5cclxuLyoqXHJcbiAqIFRoZSBjdXJyZW50IHN0YXR1cyBvZiB0aGUgdGVzdCByZXBvcnQuXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBSZXBvcnRTdGF0dXNDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIGNvbXBsZXRlZDogQWxsIHRlc3Qgb3BlcmF0aW9ucyBoYXZlIGNvbXBsZXRlZC5cclxuICAgKi9cclxuICBDb21wbGV0ZWQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogZW50ZXJlZC1pbi1lcnJvcjogVGhpcyB0ZXN0IHJlcG9ydCB3YXMgZW50ZXJlZCBvciBjcmVhdGVkIGluIGVycm9yLlxyXG4gICAqL1xyXG4gIEVudGVyZWRJbkVycm9yOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIGluLXByb2dyZXNzOiBBIHRlc3Qgb3BlcmF0aW9ucyBpcyBjdXJyZW50bHkgZXhlY3V0aW5nLlxyXG4gICAqL1xyXG4gIEluUHJvZ3Jlc3M6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogc3RvcHBlZDogVGhlIHRlc3Qgc2NyaXB0IGV4ZWN1dGlvbiB3YXMgbWFudWFsbHkgc3RvcHBlZC5cclxuICAgKi9cclxuICBTdG9wcGVkOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIHdhaXRpbmc6IEEgdGVzdCBvcGVyYXRpb24gaXMgd2FpdGluZyBmb3IgYW4gZXh0ZXJuYWwgY2xpZW50IHJlcXVlc3QuXHJcbiAgICovXHJcbiAgV2FpdGluZzogQ29kaW5nQXJncztcclxufVxyXG5cclxuLyoqXHJcbiAqIFRoZSBjdXJyZW50IHN0YXR1cyBvZiB0aGUgdGVzdCByZXBvcnQuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgUmVwb3J0U3RhdHVzQ29kaW5nczpSZXBvcnRTdGF0dXNDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIGNvbXBsZXRlZDogQWxsIHRlc3Qgb3BlcmF0aW9ucyBoYXZlIGNvbXBsZXRlZC5cclxuICAgKi9cclxuICBDb21wbGV0ZWQ6IHtcclxuICAgIGRpc3BsYXk6IFwiQ29tcGxldGVkXCIsXHJcbiAgICBjb2RlOiBcImNvbXBsZXRlZFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVwb3J0LXN0YXR1cy1jb2Rlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogZW50ZXJlZC1pbi1lcnJvcjogVGhpcyB0ZXN0IHJlcG9ydCB3YXMgZW50ZXJlZCBvciBjcmVhdGVkIGluIGVycm9yLlxyXG4gICAqL1xyXG4gIEVudGVyZWRJbkVycm9yOiB7XHJcbiAgICBkaXNwbGF5OiBcIkVudGVyZWQgSW4gRXJyb3JcIixcclxuICAgIGNvZGU6IFwiZW50ZXJlZC1pbi1lcnJvclwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVwb3J0LXN0YXR1cy1jb2Rlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogaW4tcHJvZ3Jlc3M6IEEgdGVzdCBvcGVyYXRpb25zIGlzIGN1cnJlbnRseSBleGVjdXRpbmcuXHJcbiAgICovXHJcbiAgSW5Qcm9ncmVzczoge1xyXG4gICAgZGlzcGxheTogXCJJbiBQcm9ncmVzc1wiLFxyXG4gICAgY29kZTogXCJpbi1wcm9ncmVzc1wiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVwb3J0LXN0YXR1cy1jb2Rlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogc3RvcHBlZDogVGhlIHRlc3Qgc2NyaXB0IGV4ZWN1dGlvbiB3YXMgbWFudWFsbHkgc3RvcHBlZC5cclxuICAgKi9cclxuICBTdG9wcGVkOiB7XHJcbiAgICBkaXNwbGF5OiBcIlN0b3BwZWRcIixcclxuICAgIGNvZGU6IFwic3RvcHBlZFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVwb3J0LXN0YXR1cy1jb2Rlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogd2FpdGluZzogQSB0ZXN0IG9wZXJhdGlvbiBpcyB3YWl0aW5nIGZvciBhbiBleHRlcm5hbCBjbGllbnQgcmVxdWVzdC5cclxuICAgKi9cclxuICBXYWl0aW5nOiB7XHJcbiAgICBkaXNwbGF5OiBcIldhaXRpbmdcIixcclxuICAgIGNvZGU6IFwid2FpdGluZ1wiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVwb3J0LXN0YXR1cy1jb2Rlc1wiLFxyXG4gIH0sXHJcbn0gYXMgY29uc3Q7XHJcbiJdfQ==