// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/endpoint-connection-type|4.3.0
/**
 * This is an example value set defined by the FHIR project, that could be used to represent possible connection type profile values.
 */
export const EndpointConnectionTypeCodes = {
    /**
     * dicom-qido-rs: DICOMweb RESTful Image query - http://dicom.nema.org/medical/dicom/current/output/chtml/part18/sect_6.7.html
     */
    DICOMQIDORS: "dicom-qido-rs",
    /**
     * dicom-stow-rs: DICOMweb RESTful image sending and storage - http://dicom.nema.org/medical/dicom/current/output/chtml/part18/sect_6.6.html
     */
    DICOMSTOWRS: "dicom-stow-rs",
    /**
     * dicom-wado-rs: DICOMweb RESTful Image Retrieve - http://dicom.nema.org/medical/dicom/current/output/chtml/part18/sect_6.5.html
     */
    DICOMWADORS: "dicom-wado-rs",
    /**
     * dicom-wado-uri: DICOMweb Image Retrieve - http://dicom.nema.org/dicom/2013/output/chtml/part18/sect_6.3.html
     */
    DICOMWADOURI: "dicom-wado-uri",
    /**
     * direct-project: Direct Project information - http://wiki.directproject.org/
     */
    DirectProject: "direct-project",
    /**
     * hl7-fhir-msg: Use the servers FHIR Messaging interface. Details can be found on the messaging.html page in the FHIR Specification. The FHIR server's base address is specified in the Endpoint.address property.
     */
    HL7FHIRMessaging: "hl7-fhir-msg",
    /**
     * hl7-fhir-rest: Interact with the server interface using FHIR's RESTful interface. For details on its version/capabilities you should connect the value in Endpoint.address and retrieve the FHIR CapabilityStatement.
     */
    HL7FHIR: "hl7-fhir-rest",
    /**
     * hl7v2-mllp: HL7v2 messages over an LLP TCP connection
     */
    HL7V2MLLP: "hl7v2-mllp",
    /**
     * ihe-iid: IHE Invoke Image Display (IID) - http://wiki.ihe.net/index.php/Invoke_Image_Display
     */
    IHEIID: "ihe-iid",
    /**
     * ihe-xca: IHE Cross Community Access Profile (XCA) - http://wiki.ihe.net/index.php/Cross-Community_Access
     */
    IHEXCA: "ihe-xca",
    /**
     * ihe-xcpd: IHE Cross Community Patient Discovery Profile (XCPD) - http://wiki.ihe.net/index.php/Cross-Community_Patient_Discovery
     */
    IHEXCPD: "ihe-xcpd",
    /**
     * ihe-xdr: IHE Cross-Enterprise Document Reliable Exchange (XDR) - http://wiki.ihe.net/index.php/Cross-enterprise_Document_Reliable_Interchange
     */
    IHEXDR: "ihe-xdr",
    /**
     * ihe-xds: IHE Cross-Enterprise Document Sharing (XDS) - http://wiki.ihe.net/index.php/Cross-Enterprise_Document_Sharing
     */
    IHEXDS: "ihe-xds",
    /**
     * secure-email: Email delivery using a digital certificate to encrypt the content using the public key, receiver must have the private key to decrypt the content
     */
    SecureEmail: "secure-email",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRW5kcG9pbnRDb25uZWN0aW9uVHlwZUNvZGVzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9FbmRwb2ludENvbm5lY3Rpb25UeXBlQ29kZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLGdEQUFnRDtBQUNoRCxrQ0FBa0M7QUFDbEMsNkVBQTZFO0FBRTdFOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sMkJBQTJCLEdBQUc7SUFDekM7O09BRUc7SUFDSCxXQUFXLEVBQUUsZUFBZTtJQUM1Qjs7T0FFRztJQUNILFdBQVcsRUFBRSxlQUFlO0lBQzVCOztPQUVHO0lBQ0gsV0FBVyxFQUFFLGVBQWU7SUFDNUI7O09BRUc7SUFDSCxZQUFZLEVBQUUsZ0JBQWdCO0lBQzlCOztPQUVHO0lBQ0gsYUFBYSxFQUFFLGdCQUFnQjtJQUMvQjs7T0FFRztJQUNILGdCQUFnQixFQUFFLGNBQWM7SUFDaEM7O09BRUc7SUFDSCxPQUFPLEVBQUUsZUFBZTtJQUN4Qjs7T0FFRztJQUNILFNBQVMsRUFBRSxZQUFZO0lBQ3ZCOztPQUVHO0lBQ0gsTUFBTSxFQUFFLFNBQVM7SUFDakI7O09BRUc7SUFDSCxNQUFNLEVBQUUsU0FBUztJQUNqQjs7T0FFRztJQUNILE9BQU8sRUFBRSxVQUFVO0lBQ25COztPQUVHO0lBQ0gsTUFBTSxFQUFFLFNBQVM7SUFDakI7O09BRUc7SUFDSCxNQUFNLEVBQUUsU0FBUztJQUNqQjs7T0FFRztJQUNILFdBQVcsRUFBRSxjQUFjO0NBQ25CLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjRiLmNvcmUgdmVyc2lvbjogNC4zLjBcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L2VuZHBvaW50LWNvbm5lY3Rpb24tdHlwZXw0LjMuMFxyXG5cclxuLyoqXHJcbiAqIFRoaXMgaXMgYW4gZXhhbXBsZSB2YWx1ZSBzZXQgZGVmaW5lZCBieSB0aGUgRkhJUiBwcm9qZWN0LCB0aGF0IGNvdWxkIGJlIHVzZWQgdG8gcmVwcmVzZW50IHBvc3NpYmxlIGNvbm5lY3Rpb24gdHlwZSBwcm9maWxlIHZhbHVlcy5cclxuICovXHJcbmV4cG9ydCBjb25zdCBFbmRwb2ludENvbm5lY3Rpb25UeXBlQ29kZXMgPSB7XHJcbiAgLyoqXHJcbiAgICogZGljb20tcWlkby1yczogRElDT013ZWIgUkVTVGZ1bCBJbWFnZSBxdWVyeSAtIGh0dHA6Ly9kaWNvbS5uZW1hLm9yZy9tZWRpY2FsL2RpY29tL2N1cnJlbnQvb3V0cHV0L2NodG1sL3BhcnQxOC9zZWN0XzYuNy5odG1sXHJcbiAgICovXHJcbiAgRElDT01RSURPUlM6IFwiZGljb20tcWlkby1yc1wiLFxyXG4gIC8qKlxyXG4gICAqIGRpY29tLXN0b3ctcnM6IERJQ09Nd2ViIFJFU1RmdWwgaW1hZ2Ugc2VuZGluZyBhbmQgc3RvcmFnZSAtIGh0dHA6Ly9kaWNvbS5uZW1hLm9yZy9tZWRpY2FsL2RpY29tL2N1cnJlbnQvb3V0cHV0L2NodG1sL3BhcnQxOC9zZWN0XzYuNi5odG1sXHJcbiAgICovXHJcbiAgRElDT01TVE9XUlM6IFwiZGljb20tc3Rvdy1yc1wiLFxyXG4gIC8qKlxyXG4gICAqIGRpY29tLXdhZG8tcnM6IERJQ09Nd2ViIFJFU1RmdWwgSW1hZ2UgUmV0cmlldmUgLSBodHRwOi8vZGljb20ubmVtYS5vcmcvbWVkaWNhbC9kaWNvbS9jdXJyZW50L291dHB1dC9jaHRtbC9wYXJ0MTgvc2VjdF82LjUuaHRtbFxyXG4gICAqL1xyXG4gIERJQ09NV0FET1JTOiBcImRpY29tLXdhZG8tcnNcIixcclxuICAvKipcclxuICAgKiBkaWNvbS13YWRvLXVyaTogRElDT013ZWIgSW1hZ2UgUmV0cmlldmUgLSBodHRwOi8vZGljb20ubmVtYS5vcmcvZGljb20vMjAxMy9vdXRwdXQvY2h0bWwvcGFydDE4L3NlY3RfNi4zLmh0bWxcclxuICAgKi9cclxuICBESUNPTVdBRE9VUkk6IFwiZGljb20td2Fkby11cmlcIixcclxuICAvKipcclxuICAgKiBkaXJlY3QtcHJvamVjdDogRGlyZWN0IFByb2plY3QgaW5mb3JtYXRpb24gLSBodHRwOi8vd2lraS5kaXJlY3Rwcm9qZWN0Lm9yZy9cclxuICAgKi9cclxuICBEaXJlY3RQcm9qZWN0OiBcImRpcmVjdC1wcm9qZWN0XCIsXHJcbiAgLyoqXHJcbiAgICogaGw3LWZoaXItbXNnOiBVc2UgdGhlIHNlcnZlcnMgRkhJUiBNZXNzYWdpbmcgaW50ZXJmYWNlLiBEZXRhaWxzIGNhbiBiZSBmb3VuZCBvbiB0aGUgbWVzc2FnaW5nLmh0bWwgcGFnZSBpbiB0aGUgRkhJUiBTcGVjaWZpY2F0aW9uLiBUaGUgRkhJUiBzZXJ2ZXIncyBiYXNlIGFkZHJlc3MgaXMgc3BlY2lmaWVkIGluIHRoZSBFbmRwb2ludC5hZGRyZXNzIHByb3BlcnR5LlxyXG4gICAqL1xyXG4gIEhMN0ZISVJNZXNzYWdpbmc6IFwiaGw3LWZoaXItbXNnXCIsXHJcbiAgLyoqXHJcbiAgICogaGw3LWZoaXItcmVzdDogSW50ZXJhY3Qgd2l0aCB0aGUgc2VydmVyIGludGVyZmFjZSB1c2luZyBGSElSJ3MgUkVTVGZ1bCBpbnRlcmZhY2UuIEZvciBkZXRhaWxzIG9uIGl0cyB2ZXJzaW9uL2NhcGFiaWxpdGllcyB5b3Ugc2hvdWxkIGNvbm5lY3QgdGhlIHZhbHVlIGluIEVuZHBvaW50LmFkZHJlc3MgYW5kIHJldHJpZXZlIHRoZSBGSElSIENhcGFiaWxpdHlTdGF0ZW1lbnQuXHJcbiAgICovXHJcbiAgSEw3RkhJUjogXCJobDctZmhpci1yZXN0XCIsXHJcbiAgLyoqXHJcbiAgICogaGw3djItbWxscDogSEw3djIgbWVzc2FnZXMgb3ZlciBhbiBMTFAgVENQIGNvbm5lY3Rpb25cclxuICAgKi9cclxuICBITDdWMk1MTFA6IFwiaGw3djItbWxscFwiLFxyXG4gIC8qKlxyXG4gICAqIGloZS1paWQ6IElIRSBJbnZva2UgSW1hZ2UgRGlzcGxheSAoSUlEKSAtIGh0dHA6Ly93aWtpLmloZS5uZXQvaW5kZXgucGhwL0ludm9rZV9JbWFnZV9EaXNwbGF5XHJcbiAgICovXHJcbiAgSUhFSUlEOiBcImloZS1paWRcIixcclxuICAvKipcclxuICAgKiBpaGUteGNhOiBJSEUgQ3Jvc3MgQ29tbXVuaXR5IEFjY2VzcyBQcm9maWxlIChYQ0EpIC0gaHR0cDovL3dpa2kuaWhlLm5ldC9pbmRleC5waHAvQ3Jvc3MtQ29tbXVuaXR5X0FjY2Vzc1xyXG4gICAqL1xyXG4gIElIRVhDQTogXCJpaGUteGNhXCIsXHJcbiAgLyoqXHJcbiAgICogaWhlLXhjcGQ6IElIRSBDcm9zcyBDb21tdW5pdHkgUGF0aWVudCBEaXNjb3ZlcnkgUHJvZmlsZSAoWENQRCkgLSBodHRwOi8vd2lraS5paGUubmV0L2luZGV4LnBocC9Dcm9zcy1Db21tdW5pdHlfUGF0aWVudF9EaXNjb3ZlcnlcclxuICAgKi9cclxuICBJSEVYQ1BEOiBcImloZS14Y3BkXCIsXHJcbiAgLyoqXHJcbiAgICogaWhlLXhkcjogSUhFIENyb3NzLUVudGVycHJpc2UgRG9jdW1lbnQgUmVsaWFibGUgRXhjaGFuZ2UgKFhEUikgLSBodHRwOi8vd2lraS5paGUubmV0L2luZGV4LnBocC9Dcm9zcy1lbnRlcnByaXNlX0RvY3VtZW50X1JlbGlhYmxlX0ludGVyY2hhbmdlXHJcbiAgICovXHJcbiAgSUhFWERSOiBcImloZS14ZHJcIixcclxuICAvKipcclxuICAgKiBpaGUteGRzOiBJSEUgQ3Jvc3MtRW50ZXJwcmlzZSBEb2N1bWVudCBTaGFyaW5nIChYRFMpIC0gaHR0cDovL3dpa2kuaWhlLm5ldC9pbmRleC5waHAvQ3Jvc3MtRW50ZXJwcmlzZV9Eb2N1bWVudF9TaGFyaW5nXHJcbiAgICovXHJcbiAgSUhFWERTOiBcImloZS14ZHNcIixcclxuICAvKipcclxuICAgKiBzZWN1cmUtZW1haWw6IEVtYWlsIGRlbGl2ZXJ5IHVzaW5nIGEgZGlnaXRhbCBjZXJ0aWZpY2F0ZSB0byBlbmNyeXB0IHRoZSBjb250ZW50IHVzaW5nIHRoZSBwdWJsaWMga2V5LCByZWNlaXZlciBtdXN0IGhhdmUgdGhlIHByaXZhdGUga2V5IHRvIGRlY3J5cHQgdGhlIGNvbnRlbnRcclxuICAgKi9cclxuICBTZWN1cmVFbWFpbDogXCJzZWN1cmUtZW1haWxcIixcclxufSBhcyBjb25zdDtcclxuXHJcbi8qKlxyXG4gKiBUaGlzIGlzIGFuIGV4YW1wbGUgdmFsdWUgc2V0IGRlZmluZWQgYnkgdGhlIEZISVIgcHJvamVjdCwgdGhhdCBjb3VsZCBiZSB1c2VkIHRvIHJlcHJlc2VudCBwb3NzaWJsZSBjb25uZWN0aW9uIHR5cGUgcHJvZmlsZSB2YWx1ZXMuXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBFbmRwb2ludENvbm5lY3Rpb25UeXBlQ29kZVR5cGUgPSB0eXBlb2YgRW5kcG9pbnRDb25uZWN0aW9uVHlwZUNvZGVzW2tleW9mIHR5cGVvZiBFbmRwb2ludENvbm5lY3Rpb25UeXBlQ29kZXNdO1xyXG4iXX0=