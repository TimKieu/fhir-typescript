// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/contactentity-type|4.3.0
/**
 * This example value set defines a set of codes that can be used to indicate the purpose for which you would contact a contact party.
 */
export const ContactentityTypeCodings = {
    /**
     * ADMIN: Contact details for administrative enquiries.
     */
    Administrative: {
        display: "Administrative",
        code: "ADMIN",
        system: "http://terminology.hl7.org/CodeSystem/contactentity-type",
    },
    /**
     * BILL: Contact details for information regarding to billing/general finance enquiries.
     */
    Billing: {
        display: "Billing",
        code: "BILL",
        system: "http://terminology.hl7.org/CodeSystem/contactentity-type",
    },
    /**
     * HR: Contact details for issues related to Human Resources, such as staff matters, OH&amp;S etc.
     */
    HumanResource: {
        display: "Human Resource",
        code: "HR",
        system: "http://terminology.hl7.org/CodeSystem/contactentity-type",
    },
    /**
     * PATINF: Generic information contact for patients.
     */
    Patient: {
        display: "Patient",
        code: "PATINF",
        system: "http://terminology.hl7.org/CodeSystem/contactentity-type",
    },
    /**
     * PAYOR: Contact details for dealing with issues related to insurance claims/adjudication/payment.
     */
    Payor: {
        display: "Payor",
        code: "PAYOR",
        system: "http://terminology.hl7.org/CodeSystem/contactentity-type",
    },
    /**
     * PRESS: Dedicated contact point for matters relating to press enquiries.
     */
    Press: {
        display: "Press",
        code: "PRESS",
        system: "http://terminology.hl7.org/CodeSystem/contactentity-type",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29udGFjdGVudGl0eVR5cGVDb2RpbmdzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9Db250YWN0ZW50aXR5VHlwZUNvZGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLGdEQUFnRDtBQUNoRCxrQ0FBa0M7QUFDbEMsdUVBQXVFO0FBa0N2RTs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLHdCQUF3QixHQUErQjtJQUNsRTs7T0FFRztJQUNILGNBQWMsRUFBRTtRQUNkLE9BQU8sRUFBRSxnQkFBZ0I7UUFDekIsSUFBSSxFQUFFLE9BQU87UUFDYixNQUFNLEVBQUUsMERBQTBEO0tBQ25FO0lBQ0Q7O09BRUc7SUFDSCxPQUFPLEVBQUU7UUFDUCxPQUFPLEVBQUUsU0FBUztRQUNsQixJQUFJLEVBQUUsTUFBTTtRQUNaLE1BQU0sRUFBRSwwREFBMEQ7S0FDbkU7SUFDRDs7T0FFRztJQUNILGFBQWEsRUFBRTtRQUNiLE9BQU8sRUFBRSxnQkFBZ0I7UUFDekIsSUFBSSxFQUFFLElBQUk7UUFDVixNQUFNLEVBQUUsMERBQTBEO0tBQ25FO0lBQ0Q7O09BRUc7SUFDSCxPQUFPLEVBQUU7UUFDUCxPQUFPLEVBQUUsU0FBUztRQUNsQixJQUFJLEVBQUUsUUFBUTtRQUNkLE1BQU0sRUFBRSwwREFBMEQ7S0FDbkU7SUFDRDs7T0FFRztJQUNILEtBQUssRUFBRTtRQUNMLE9BQU8sRUFBRSxPQUFPO1FBQ2hCLElBQUksRUFBRSxPQUFPO1FBQ2IsTUFBTSxFQUFFLDBEQUEwRDtLQUNuRTtJQUNEOztPQUVHO0lBQ0gsS0FBSyxFQUFFO1FBQ0wsT0FBTyxFQUFFLE9BQU87UUFDaEIsSUFBSSxFQUFFLE9BQU87UUFDYixNQUFNLEVBQUUsMERBQTBEO0tBQ25FO0NBQ08sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNGIuY29yZSB2ZXJzaW9uOiA0LjMuMFxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvY29udGFjdGVudGl0eS10eXBlfDQuMy4wXHJcblxyXG5pbXBvcnQgeyBDb2RpbmdBcmdzIH0gZnJvbSAnLi4vZmhpci9Db2RpbmcuanMnXHJcblxyXG4vKipcclxuICogVGhpcyBleGFtcGxlIHZhbHVlIHNldCBkZWZpbmVzIGEgc2V0IG9mIGNvZGVzIHRoYXQgY2FuIGJlIHVzZWQgdG8gaW5kaWNhdGUgdGhlIHB1cnBvc2UgZm9yIHdoaWNoIHlvdSB3b3VsZCBjb250YWN0IGEgY29udGFjdCBwYXJ0eS5cclxuICovXHJcbmV4cG9ydCB0eXBlIENvbnRhY3RlbnRpdHlUeXBlQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBBRE1JTjogQ29udGFjdCBkZXRhaWxzIGZvciBhZG1pbmlzdHJhdGl2ZSBlbnF1aXJpZXMuXHJcbiAgICovXHJcbiAgQWRtaW5pc3RyYXRpdmU6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQklMTDogQ29udGFjdCBkZXRhaWxzIGZvciBpbmZvcm1hdGlvbiByZWdhcmRpbmcgdG8gYmlsbGluZy9nZW5lcmFsIGZpbmFuY2UgZW5xdWlyaWVzLlxyXG4gICAqL1xyXG4gIEJpbGxpbmc6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogSFI6IENvbnRhY3QgZGV0YWlscyBmb3IgaXNzdWVzIHJlbGF0ZWQgdG8gSHVtYW4gUmVzb3VyY2VzLCBzdWNoIGFzIHN0YWZmIG1hdHRlcnMsIE9IJmFtcDtTIGV0Yy5cclxuICAgKi9cclxuICBIdW1hblJlc291cmNlOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIFBBVElORjogR2VuZXJpYyBpbmZvcm1hdGlvbiBjb250YWN0IGZvciBwYXRpZW50cy5cclxuICAgKi9cclxuICBQYXRpZW50OiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIFBBWU9SOiBDb250YWN0IGRldGFpbHMgZm9yIGRlYWxpbmcgd2l0aCBpc3N1ZXMgcmVsYXRlZCB0byBpbnN1cmFuY2UgY2xhaW1zL2FkanVkaWNhdGlvbi9wYXltZW50LlxyXG4gICAqL1xyXG4gIFBheW9yOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIFBSRVNTOiBEZWRpY2F0ZWQgY29udGFjdCBwb2ludCBmb3IgbWF0dGVycyByZWxhdGluZyB0byBwcmVzcyBlbnF1aXJpZXMuXHJcbiAgICovXHJcbiAgUHJlc3M6IENvZGluZ0FyZ3M7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBUaGlzIGV4YW1wbGUgdmFsdWUgc2V0IGRlZmluZXMgYSBzZXQgb2YgY29kZXMgdGhhdCBjYW4gYmUgdXNlZCB0byBpbmRpY2F0ZSB0aGUgcHVycG9zZSBmb3Igd2hpY2ggeW91IHdvdWxkIGNvbnRhY3QgYSBjb250YWN0IHBhcnR5LlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IENvbnRhY3RlbnRpdHlUeXBlQ29kaW5nczpDb250YWN0ZW50aXR5VHlwZUNvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogQURNSU46IENvbnRhY3QgZGV0YWlscyBmb3IgYWRtaW5pc3RyYXRpdmUgZW5xdWlyaWVzLlxyXG4gICAqL1xyXG4gIEFkbWluaXN0cmF0aXZlOiB7XHJcbiAgICBkaXNwbGF5OiBcIkFkbWluaXN0cmF0aXZlXCIsXHJcbiAgICBjb2RlOiBcIkFETUlOXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9jb250YWN0ZW50aXR5LXR5cGVcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIEJJTEw6IENvbnRhY3QgZGV0YWlscyBmb3IgaW5mb3JtYXRpb24gcmVnYXJkaW5nIHRvIGJpbGxpbmcvZ2VuZXJhbCBmaW5hbmNlIGVucXVpcmllcy5cclxuICAgKi9cclxuICBCaWxsaW5nOiB7XHJcbiAgICBkaXNwbGF5OiBcIkJpbGxpbmdcIixcclxuICAgIGNvZGU6IFwiQklMTFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vY29udGFjdGVudGl0eS10eXBlXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBIUjogQ29udGFjdCBkZXRhaWxzIGZvciBpc3N1ZXMgcmVsYXRlZCB0byBIdW1hbiBSZXNvdXJjZXMsIHN1Y2ggYXMgc3RhZmYgbWF0dGVycywgT0gmYW1wO1MgZXRjLlxyXG4gICAqL1xyXG4gIEh1bWFuUmVzb3VyY2U6IHtcclxuICAgIGRpc3BsYXk6IFwiSHVtYW4gUmVzb3VyY2VcIixcclxuICAgIGNvZGU6IFwiSFJcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2NvbnRhY3RlbnRpdHktdHlwZVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogUEFUSU5GOiBHZW5lcmljIGluZm9ybWF0aW9uIGNvbnRhY3QgZm9yIHBhdGllbnRzLlxyXG4gICAqL1xyXG4gIFBhdGllbnQ6IHtcclxuICAgIGRpc3BsYXk6IFwiUGF0aWVudFwiLFxyXG4gICAgY29kZTogXCJQQVRJTkZcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2NvbnRhY3RlbnRpdHktdHlwZVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogUEFZT1I6IENvbnRhY3QgZGV0YWlscyBmb3IgZGVhbGluZyB3aXRoIGlzc3VlcyByZWxhdGVkIHRvIGluc3VyYW5jZSBjbGFpbXMvYWRqdWRpY2F0aW9uL3BheW1lbnQuXHJcbiAgICovXHJcbiAgUGF5b3I6IHtcclxuICAgIGRpc3BsYXk6IFwiUGF5b3JcIixcclxuICAgIGNvZGU6IFwiUEFZT1JcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2NvbnRhY3RlbnRpdHktdHlwZVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogUFJFU1M6IERlZGljYXRlZCBjb250YWN0IHBvaW50IGZvciBtYXR0ZXJzIHJlbGF0aW5nIHRvIHByZXNzIGVucXVpcmllcy5cclxuICAgKi9cclxuICBQcmVzczoge1xyXG4gICAgZGlzcGxheTogXCJQcmVzc1wiLFxyXG4gICAgY29kZTogXCJQUkVTU1wiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vY29udGFjdGVudGl0eS10eXBlXCIsXHJcbiAgfSxcclxufSBhcyBjb25zdDtcclxuIl19