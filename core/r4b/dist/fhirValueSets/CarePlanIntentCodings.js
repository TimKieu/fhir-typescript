// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/care-plan-intent|4.3.0
/**
 * Codes indicating the degree of authority/intentionality associated with a care plan.
 */
export const CarePlanIntentCodings = {
    /**
     * option: The request represents a component or option for a RequestGroup that establishes timing, conditionality and/or other constraints among a set of requests.  Refer to [[[RequestGroup]]] for additional information on how this status is used.
     */
    Option: {
        display: "Option",
        code: "option",
        system: "http://hl7.org/fhir/request-intent",
    },
    /**
     * order: The request represents a request/demand and authorization for action by a Practitioner.
     */
    Order: {
        display: "Order",
        code: "order",
        system: "http://hl7.org/fhir/request-intent",
    },
    /**
     * plan: The request represents an intention to ensure something occurs without providing an authorization for others to act.
     */
    Plan: {
        display: "Plan",
        code: "plan",
        system: "http://hl7.org/fhir/request-intent",
    },
    /**
     * proposal: The request is a suggestion made by someone/something that does not have an intention to ensure it occurs and without providing an authorization to act.
     */
    Proposal: {
        display: "Proposal",
        code: "proposal",
        system: "http://hl7.org/fhir/request-intent",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2FyZVBsYW5JbnRlbnRDb2RpbmdzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9DYXJlUGxhbkludGVudENvZGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLGdEQUFnRDtBQUNoRCxrQ0FBa0M7QUFDbEMscUVBQXFFO0FBMEJyRTs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUE0QjtJQUM1RDs7T0FFRztJQUNILE1BQU0sRUFBRTtRQUNOLE9BQU8sRUFBRSxRQUFRO1FBQ2pCLElBQUksRUFBRSxRQUFRO1FBQ2QsTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gsS0FBSyxFQUFFO1FBQ0wsT0FBTyxFQUFFLE9BQU87UUFDaEIsSUFBSSxFQUFFLE9BQU87UUFDYixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxJQUFJLEVBQUU7UUFDSixPQUFPLEVBQUUsTUFBTTtRQUNmLElBQUksRUFBRSxNQUFNO1FBQ1osTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gsUUFBUSxFQUFFO1FBQ1IsT0FBTyxFQUFFLFVBQVU7UUFDbkIsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLG9DQUFvQztLQUM3QztDQUNPLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjRiLmNvcmUgdmVyc2lvbjogNC4zLjBcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L2NhcmUtcGxhbi1pbnRlbnR8NC4zLjBcclxuXHJcbmltcG9ydCB7IENvZGluZ0FyZ3MgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiBDb2RlcyBpbmRpY2F0aW5nIHRoZSBkZWdyZWUgb2YgYXV0aG9yaXR5L2ludGVudGlvbmFsaXR5IGFzc29jaWF0ZWQgd2l0aCBhIGNhcmUgcGxhbi5cclxuICovXHJcbmV4cG9ydCB0eXBlIENhcmVQbGFuSW50ZW50Q29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBvcHRpb246IFRoZSByZXF1ZXN0IHJlcHJlc2VudHMgYSBjb21wb25lbnQgb3Igb3B0aW9uIGZvciBhIFJlcXVlc3RHcm91cCB0aGF0IGVzdGFibGlzaGVzIHRpbWluZywgY29uZGl0aW9uYWxpdHkgYW5kL29yIG90aGVyIGNvbnN0cmFpbnRzIGFtb25nIGEgc2V0IG9mIHJlcXVlc3RzLiAgUmVmZXIgdG8gW1tbUmVxdWVzdEdyb3VwXV1dIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uIG9uIGhvdyB0aGlzIHN0YXR1cyBpcyB1c2VkLlxyXG4gICAqL1xyXG4gIE9wdGlvbjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBvcmRlcjogVGhlIHJlcXVlc3QgcmVwcmVzZW50cyBhIHJlcXVlc3QvZGVtYW5kIGFuZCBhdXRob3JpemF0aW9uIGZvciBhY3Rpb24gYnkgYSBQcmFjdGl0aW9uZXIuXHJcbiAgICovXHJcbiAgT3JkZXI6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogcGxhbjogVGhlIHJlcXVlc3QgcmVwcmVzZW50cyBhbiBpbnRlbnRpb24gdG8gZW5zdXJlIHNvbWV0aGluZyBvY2N1cnMgd2l0aG91dCBwcm92aWRpbmcgYW4gYXV0aG9yaXphdGlvbiBmb3Igb3RoZXJzIHRvIGFjdC5cclxuICAgKi9cclxuICBQbGFuOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIHByb3Bvc2FsOiBUaGUgcmVxdWVzdCBpcyBhIHN1Z2dlc3Rpb24gbWFkZSBieSBzb21lb25lL3NvbWV0aGluZyB0aGF0IGRvZXMgbm90IGhhdmUgYW4gaW50ZW50aW9uIHRvIGVuc3VyZSBpdCBvY2N1cnMgYW5kIHdpdGhvdXQgcHJvdmlkaW5nIGFuIGF1dGhvcml6YXRpb24gdG8gYWN0LlxyXG4gICAqL1xyXG4gIFByb3Bvc2FsOiBDb2RpbmdBcmdzO1xyXG59XHJcblxyXG4vKipcclxuICogQ29kZXMgaW5kaWNhdGluZyB0aGUgZGVncmVlIG9mIGF1dGhvcml0eS9pbnRlbnRpb25hbGl0eSBhc3NvY2lhdGVkIHdpdGggYSBjYXJlIHBsYW4uXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgQ2FyZVBsYW5JbnRlbnRDb2RpbmdzOkNhcmVQbGFuSW50ZW50Q29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBvcHRpb246IFRoZSByZXF1ZXN0IHJlcHJlc2VudHMgYSBjb21wb25lbnQgb3Igb3B0aW9uIGZvciBhIFJlcXVlc3RHcm91cCB0aGF0IGVzdGFibGlzaGVzIHRpbWluZywgY29uZGl0aW9uYWxpdHkgYW5kL29yIG90aGVyIGNvbnN0cmFpbnRzIGFtb25nIGEgc2V0IG9mIHJlcXVlc3RzLiAgUmVmZXIgdG8gW1tbUmVxdWVzdEdyb3VwXV1dIGZvciBhZGRpdGlvbmFsIGluZm9ybWF0aW9uIG9uIGhvdyB0aGlzIHN0YXR1cyBpcyB1c2VkLlxyXG4gICAqL1xyXG4gIE9wdGlvbjoge1xyXG4gICAgZGlzcGxheTogXCJPcHRpb25cIixcclxuICAgIGNvZGU6IFwib3B0aW9uXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXF1ZXN0LWludGVudFwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogb3JkZXI6IFRoZSByZXF1ZXN0IHJlcHJlc2VudHMgYSByZXF1ZXN0L2RlbWFuZCBhbmQgYXV0aG9yaXphdGlvbiBmb3IgYWN0aW9uIGJ5IGEgUHJhY3RpdGlvbmVyLlxyXG4gICAqL1xyXG4gIE9yZGVyOiB7XHJcbiAgICBkaXNwbGF5OiBcIk9yZGVyXCIsXHJcbiAgICBjb2RlOiBcIm9yZGVyXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXF1ZXN0LWludGVudFwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogcGxhbjogVGhlIHJlcXVlc3QgcmVwcmVzZW50cyBhbiBpbnRlbnRpb24gdG8gZW5zdXJlIHNvbWV0aGluZyBvY2N1cnMgd2l0aG91dCBwcm92aWRpbmcgYW4gYXV0aG9yaXphdGlvbiBmb3Igb3RoZXJzIHRvIGFjdC5cclxuICAgKi9cclxuICBQbGFuOiB7XHJcbiAgICBkaXNwbGF5OiBcIlBsYW5cIixcclxuICAgIGNvZGU6IFwicGxhblwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVxdWVzdC1pbnRlbnRcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIHByb3Bvc2FsOiBUaGUgcmVxdWVzdCBpcyBhIHN1Z2dlc3Rpb24gbWFkZSBieSBzb21lb25lL3NvbWV0aGluZyB0aGF0IGRvZXMgbm90IGhhdmUgYW4gaW50ZW50aW9uIHRvIGVuc3VyZSBpdCBvY2N1cnMgYW5kIHdpdGhvdXQgcHJvdmlkaW5nIGFuIGF1dGhvcml6YXRpb24gdG8gYWN0LlxyXG4gICAqL1xyXG4gIFByb3Bvc2FsOiB7XHJcbiAgICBkaXNwbGF5OiBcIlByb3Bvc2FsXCIsXHJcbiAgICBjb2RlOiBcInByb3Bvc2FsXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXF1ZXN0LWludGVudFwiLFxyXG4gIH0sXHJcbn0gYXMgY29uc3Q7XHJcbiJdfQ==