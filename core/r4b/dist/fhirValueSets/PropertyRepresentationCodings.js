// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/property-representation|4.3.0
/**
 * How a property is represented when serialized.
 */
export const PropertyRepresentationCodings = {
    /**
     * cdaText: Use CDA narrative instead of XHTML.
     */
    CDATextFormat: {
        display: "CDA Text Format",
        code: "cdaText",
        system: "http://hl7.org/fhir/property-representation",
    },
    /**
     * typeAttr: The type of this element is indicated using xsi:type.
     */
    TypeAttribute: {
        display: "Type Attribute",
        code: "typeAttr",
        system: "http://hl7.org/fhir/property-representation",
    },
    /**
     * xhtml: The property is represented using XHTML.
     */
    XHTML: {
        display: "XHTML",
        code: "xhtml",
        system: "http://hl7.org/fhir/property-representation",
    },
    /**
     * xmlAttr: In XML, this property is represented as an attribute not an element.
     */
    XMLAttribute: {
        display: "XML Attribute",
        code: "xmlAttr",
        system: "http://hl7.org/fhir/property-representation",
    },
    /**
     * xmlText: This element is represented using the XML text attribute (primitives only).
     */
    XMLText: {
        display: "XML Text",
        code: "xmlText",
        system: "http://hl7.org/fhir/property-representation",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUHJvcGVydHlSZXByZXNlbnRhdGlvbkNvZGluZ3MuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL1Byb3BlcnR5UmVwcmVzZW50YXRpb25Db2RpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQixnREFBZ0Q7QUFDaEQsa0NBQWtDO0FBQ2xDLDRFQUE0RTtBQThCNUU7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSw2QkFBNkIsR0FBb0M7SUFDNUU7O09BRUc7SUFDSCxhQUFhLEVBQUU7UUFDYixPQUFPLEVBQUUsaUJBQWlCO1FBQzFCLElBQUksRUFBRSxTQUFTO1FBQ2YsTUFBTSxFQUFFLDZDQUE2QztLQUN0RDtJQUNEOztPQUVHO0lBQ0gsYUFBYSxFQUFFO1FBQ2IsT0FBTyxFQUFFLGdCQUFnQjtRQUN6QixJQUFJLEVBQUUsVUFBVTtRQUNoQixNQUFNLEVBQUUsNkNBQTZDO0tBQ3REO0lBQ0Q7O09BRUc7SUFDSCxLQUFLLEVBQUU7UUFDTCxPQUFPLEVBQUUsT0FBTztRQUNoQixJQUFJLEVBQUUsT0FBTztRQUNiLE1BQU0sRUFBRSw2Q0FBNkM7S0FDdEQ7SUFDRDs7T0FFRztJQUNILFlBQVksRUFBRTtRQUNaLE9BQU8sRUFBRSxlQUFlO1FBQ3hCLElBQUksRUFBRSxTQUFTO1FBQ2YsTUFBTSxFQUFFLDZDQUE2QztLQUN0RDtJQUNEOztPQUVHO0lBQ0gsT0FBTyxFQUFFO1FBQ1AsT0FBTyxFQUFFLFVBQVU7UUFDbkIsSUFBSSxFQUFFLFNBQVM7UUFDZixNQUFNLEVBQUUsNkNBQTZDO0tBQ3REO0NBQ08sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNGIuY29yZSB2ZXJzaW9uOiA0LjMuMFxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvcHJvcGVydHktcmVwcmVzZW50YXRpb258NC4zLjBcclxuXHJcbmltcG9ydCB7IENvZGluZ0FyZ3MgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiBIb3cgYSBwcm9wZXJ0eSBpcyByZXByZXNlbnRlZCB3aGVuIHNlcmlhbGl6ZWQuXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBQcm9wZXJ0eVJlcHJlc2VudGF0aW9uQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBjZGFUZXh0OiBVc2UgQ0RBIG5hcnJhdGl2ZSBpbnN0ZWFkIG9mIFhIVE1MLlxyXG4gICAqL1xyXG4gIENEQVRleHRGb3JtYXQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogdHlwZUF0dHI6IFRoZSB0eXBlIG9mIHRoaXMgZWxlbWVudCBpcyBpbmRpY2F0ZWQgdXNpbmcgeHNpOnR5cGUuXHJcbiAgICovXHJcbiAgVHlwZUF0dHJpYnV0ZTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiB4aHRtbDogVGhlIHByb3BlcnR5IGlzIHJlcHJlc2VudGVkIHVzaW5nIFhIVE1MLlxyXG4gICAqL1xyXG4gIFhIVE1MOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIHhtbEF0dHI6IEluIFhNTCwgdGhpcyBwcm9wZXJ0eSBpcyByZXByZXNlbnRlZCBhcyBhbiBhdHRyaWJ1dGUgbm90IGFuIGVsZW1lbnQuXHJcbiAgICovXHJcbiAgWE1MQXR0cmlidXRlOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIHhtbFRleHQ6IFRoaXMgZWxlbWVudCBpcyByZXByZXNlbnRlZCB1c2luZyB0aGUgWE1MIHRleHQgYXR0cmlidXRlIChwcmltaXRpdmVzIG9ubHkpLlxyXG4gICAqL1xyXG4gIFhNTFRleHQ6IENvZGluZ0FyZ3M7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBIb3cgYSBwcm9wZXJ0eSBpcyByZXByZXNlbnRlZCB3aGVuIHNlcmlhbGl6ZWQuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgUHJvcGVydHlSZXByZXNlbnRhdGlvbkNvZGluZ3M6UHJvcGVydHlSZXByZXNlbnRhdGlvbkNvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogY2RhVGV4dDogVXNlIENEQSBuYXJyYXRpdmUgaW5zdGVhZCBvZiBYSFRNTC5cclxuICAgKi9cclxuICBDREFUZXh0Rm9ybWF0OiB7XHJcbiAgICBkaXNwbGF5OiBcIkNEQSBUZXh0IEZvcm1hdFwiLFxyXG4gICAgY29kZTogXCJjZGFUZXh0XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9wcm9wZXJ0eS1yZXByZXNlbnRhdGlvblwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogdHlwZUF0dHI6IFRoZSB0eXBlIG9mIHRoaXMgZWxlbWVudCBpcyBpbmRpY2F0ZWQgdXNpbmcgeHNpOnR5cGUuXHJcbiAgICovXHJcbiAgVHlwZUF0dHJpYnV0ZToge1xyXG4gICAgZGlzcGxheTogXCJUeXBlIEF0dHJpYnV0ZVwiLFxyXG4gICAgY29kZTogXCJ0eXBlQXR0clwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcHJvcGVydHktcmVwcmVzZW50YXRpb25cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIHhodG1sOiBUaGUgcHJvcGVydHkgaXMgcmVwcmVzZW50ZWQgdXNpbmcgWEhUTUwuXHJcbiAgICovXHJcbiAgWEhUTUw6IHtcclxuICAgIGRpc3BsYXk6IFwiWEhUTUxcIixcclxuICAgIGNvZGU6IFwieGh0bWxcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Byb3BlcnR5LXJlcHJlc2VudGF0aW9uXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiB4bWxBdHRyOiBJbiBYTUwsIHRoaXMgcHJvcGVydHkgaXMgcmVwcmVzZW50ZWQgYXMgYW4gYXR0cmlidXRlIG5vdCBhbiBlbGVtZW50LlxyXG4gICAqL1xyXG4gIFhNTEF0dHJpYnV0ZToge1xyXG4gICAgZGlzcGxheTogXCJYTUwgQXR0cmlidXRlXCIsXHJcbiAgICBjb2RlOiBcInhtbEF0dHJcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Byb3BlcnR5LXJlcHJlc2VudGF0aW9uXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiB4bWxUZXh0OiBUaGlzIGVsZW1lbnQgaXMgcmVwcmVzZW50ZWQgdXNpbmcgdGhlIFhNTCB0ZXh0IGF0dHJpYnV0ZSAocHJpbWl0aXZlcyBvbmx5KS5cclxuICAgKi9cclxuICBYTUxUZXh0OiB7XHJcbiAgICBkaXNwbGF5OiBcIlhNTCBUZXh0XCIsXHJcbiAgICBjb2RlOiBcInhtbFRleHRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Byb3BlcnR5LXJlcHJlc2VudGF0aW9uXCIsXHJcbiAgfSxcclxufSBhcyBjb25zdDtcclxuIl19