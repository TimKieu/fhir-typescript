// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/encounter-status|4.3.0
/**
 * Current state of the encounter.
 */
export const EncounterStatusCodes = {
    /**
     * arrived: The Patient is present for the encounter, however is not currently meeting with a practitioner.
     */
    Arrived: "arrived",
    /**
     * cancelled: The Encounter has ended before it has begun.
     */
    Cancelled: "cancelled",
    /**
     * entered-in-error: This instance should not have been part of this patient's medical record.
     */
    EnteredInError: "entered-in-error",
    /**
     * finished: The Encounter has ended.
     */
    Finished: "finished",
    /**
     * in-progress: The Encounter has begun and the patient is present / the practitioner and the patient are meeting.
     */
    InProgress: "in-progress",
    /**
     * onleave: The Encounter has begun, but the patient is temporarily on leave.
     */
    OnLeave: "onleave",
    /**
     * planned: The Encounter has not yet started.
     */
    Planned: "planned",
    /**
     * triaged: The patient has been assessed for the priority of their treatment based on the severity of their condition.
     */
    Triaged: "triaged",
    /**
     * unknown: The encounter status is unknown. Note that "unknown" is a value of last resort and every attempt should be made to provide a meaningful value other than "unknown".
     */
    Unknown: "unknown",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRW5jb3VudGVyU3RhdHVzQ29kZXMuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL0VuY291bnRlclN0YXR1c0NvZGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQixnREFBZ0Q7QUFDaEQsa0NBQWtDO0FBQ2xDLHFFQUFxRTtBQUVyRTs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLG9CQUFvQixHQUFHO0lBQ2xDOztPQUVHO0lBQ0gsT0FBTyxFQUFFLFNBQVM7SUFDbEI7O09BRUc7SUFDSCxTQUFTLEVBQUUsV0FBVztJQUN0Qjs7T0FFRztJQUNILGNBQWMsRUFBRSxrQkFBa0I7SUFDbEM7O09BRUc7SUFDSCxRQUFRLEVBQUUsVUFBVTtJQUNwQjs7T0FFRztJQUNILFVBQVUsRUFBRSxhQUFhO0lBQ3pCOztPQUVHO0lBQ0gsT0FBTyxFQUFFLFNBQVM7SUFDbEI7O09BRUc7SUFDSCxPQUFPLEVBQUUsU0FBUztJQUNsQjs7T0FFRztJQUNILE9BQU8sRUFBRSxTQUFTO0lBQ2xCOztPQUVHO0lBQ0gsT0FBTyxFQUFFLFNBQVM7Q0FDVixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0Yi5jb3JlIHZlcnNpb246IDQuMy4wXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9lbmNvdW50ZXItc3RhdHVzfDQuMy4wXHJcblxyXG4vKipcclxuICogQ3VycmVudCBzdGF0ZSBvZiB0aGUgZW5jb3VudGVyLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IEVuY291bnRlclN0YXR1c0NvZGVzID0ge1xyXG4gIC8qKlxyXG4gICAqIGFycml2ZWQ6IFRoZSBQYXRpZW50IGlzIHByZXNlbnQgZm9yIHRoZSBlbmNvdW50ZXIsIGhvd2V2ZXIgaXMgbm90IGN1cnJlbnRseSBtZWV0aW5nIHdpdGggYSBwcmFjdGl0aW9uZXIuXHJcbiAgICovXHJcbiAgQXJyaXZlZDogXCJhcnJpdmVkXCIsXHJcbiAgLyoqXHJcbiAgICogY2FuY2VsbGVkOiBUaGUgRW5jb3VudGVyIGhhcyBlbmRlZCBiZWZvcmUgaXQgaGFzIGJlZ3VuLlxyXG4gICAqL1xyXG4gIENhbmNlbGxlZDogXCJjYW5jZWxsZWRcIixcclxuICAvKipcclxuICAgKiBlbnRlcmVkLWluLWVycm9yOiBUaGlzIGluc3RhbmNlIHNob3VsZCBub3QgaGF2ZSBiZWVuIHBhcnQgb2YgdGhpcyBwYXRpZW50J3MgbWVkaWNhbCByZWNvcmQuXHJcbiAgICovXHJcbiAgRW50ZXJlZEluRXJyb3I6IFwiZW50ZXJlZC1pbi1lcnJvclwiLFxyXG4gIC8qKlxyXG4gICAqIGZpbmlzaGVkOiBUaGUgRW5jb3VudGVyIGhhcyBlbmRlZC5cclxuICAgKi9cclxuICBGaW5pc2hlZDogXCJmaW5pc2hlZFwiLFxyXG4gIC8qKlxyXG4gICAqIGluLXByb2dyZXNzOiBUaGUgRW5jb3VudGVyIGhhcyBiZWd1biBhbmQgdGhlIHBhdGllbnQgaXMgcHJlc2VudCAvIHRoZSBwcmFjdGl0aW9uZXIgYW5kIHRoZSBwYXRpZW50IGFyZSBtZWV0aW5nLlxyXG4gICAqL1xyXG4gIEluUHJvZ3Jlc3M6IFwiaW4tcHJvZ3Jlc3NcIixcclxuICAvKipcclxuICAgKiBvbmxlYXZlOiBUaGUgRW5jb3VudGVyIGhhcyBiZWd1biwgYnV0IHRoZSBwYXRpZW50IGlzIHRlbXBvcmFyaWx5IG9uIGxlYXZlLlxyXG4gICAqL1xyXG4gIE9uTGVhdmU6IFwib25sZWF2ZVwiLFxyXG4gIC8qKlxyXG4gICAqIHBsYW5uZWQ6IFRoZSBFbmNvdW50ZXIgaGFzIG5vdCB5ZXQgc3RhcnRlZC5cclxuICAgKi9cclxuICBQbGFubmVkOiBcInBsYW5uZWRcIixcclxuICAvKipcclxuICAgKiB0cmlhZ2VkOiBUaGUgcGF0aWVudCBoYXMgYmVlbiBhc3Nlc3NlZCBmb3IgdGhlIHByaW9yaXR5IG9mIHRoZWlyIHRyZWF0bWVudCBiYXNlZCBvbiB0aGUgc2V2ZXJpdHkgb2YgdGhlaXIgY29uZGl0aW9uLlxyXG4gICAqL1xyXG4gIFRyaWFnZWQ6IFwidHJpYWdlZFwiLFxyXG4gIC8qKlxyXG4gICAqIHVua25vd246IFRoZSBlbmNvdW50ZXIgc3RhdHVzIGlzIHVua25vd24uIE5vdGUgdGhhdCBcInVua25vd25cIiBpcyBhIHZhbHVlIG9mIGxhc3QgcmVzb3J0IGFuZCBldmVyeSBhdHRlbXB0IHNob3VsZCBiZSBtYWRlIHRvIHByb3ZpZGUgYSBtZWFuaW5nZnVsIHZhbHVlIG90aGVyIHRoYW4gXCJ1bmtub3duXCIuXHJcbiAgICovXHJcbiAgVW5rbm93bjogXCJ1bmtub3duXCIsXHJcbn0gYXMgY29uc3Q7XHJcblxyXG4vKipcclxuICogQ3VycmVudCBzdGF0ZSBvZiB0aGUgZW5jb3VudGVyLlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgRW5jb3VudGVyU3RhdHVzQ29kZVR5cGUgPSB0eXBlb2YgRW5jb3VudGVyU3RhdHVzQ29kZXNba2V5b2YgdHlwZW9mIEVuY291bnRlclN0YXR1c0NvZGVzXTtcclxuIl19