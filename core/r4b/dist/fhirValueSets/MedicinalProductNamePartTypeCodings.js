// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/medicinal-product-name-part-type|4.3.0
/**
 * Type of part of a name for a Medicinal Product.
 */
export const MedicinalProductNamePartTypeCodings = {
    /**
     * Code: ContainerPart
     */
    ContainerOrPackPart: {
        display: "Container or pack part",
        code: "ContainerPart",
        system: "http://hl7.org/fhir/medicinal-product-name-part-type",
    },
    /**
     * Code: DelimiterPart
     */
    DelimiterPart: {
        display: "Delimiter part",
        code: "DelimiterPart",
        system: "http://hl7.org/fhir/medicinal-product-name-part-type",
    },
    /**
     * Code: DevicePart
     */
    DevicePart: {
        display: "Device part",
        code: "DevicePart",
        system: "http://hl7.org/fhir/medicinal-product-name-part-type",
    },
    /**
     * Code: DoseFormPart
     */
    PharmaceuticalDoseFormPart: {
        display: "Pharmaceutical dose form part",
        code: "DoseFormPart",
        system: "http://hl7.org/fhir/medicinal-product-name-part-type",
    },
    /**
     * Code: FlavorPart
     */
    FlavorPart: {
        display: "Flavor part",
        code: "FlavorPart",
        system: "http://hl7.org/fhir/medicinal-product-name-part-type",
    },
    /**
     * Code: FormulationPart
     */
    FormulationPart: {
        display: "Formulation part",
        code: "FormulationPart",
        system: "http://hl7.org/fhir/medicinal-product-name-part-type",
    },
    /**
     * Code: FullName
     */
    FullName: {
        display: "Full name",
        code: "FullName",
        system: "http://hl7.org/fhir/medicinal-product-name-part-type",
    },
    /**
     * Code: IntendedUsePart
     */
    IntendedUsePart: {
        display: "Intended use part",
        code: "IntendedUsePart",
        system: "http://hl7.org/fhir/medicinal-product-name-part-type",
    },
    /**
     * Code: InventedNamePart
     */
    InventedNamePart: {
        display: "Invented name part",
        code: "InventedNamePart",
        system: "http://hl7.org/fhir/medicinal-product-name-part-type",
    },
    /**
     * Code: LegacyNamePart
     */
    LegacyName: {
        display: "Legacy name",
        code: "LegacyNamePart",
        system: "http://hl7.org/fhir/medicinal-product-name-part-type",
    },
    /**
     * Code: PopulationPart
     */
    TargetPopulationPart: {
        display: "Target population part",
        code: "PopulationPart",
        system: "http://hl7.org/fhir/medicinal-product-name-part-type",
    },
    /**
     * Code: ScientificNamePart
     */
    ScientificNamePart: {
        display: "Scientific name part",
        code: "ScientificNamePart",
        system: "http://hl7.org/fhir/medicinal-product-name-part-type",
    },
    /**
     * Code: SpeciesNamePart
     */
    TargetSpeciesNamePart: {
        display: "Target species name part",
        code: "SpeciesNamePart",
        system: "http://hl7.org/fhir/medicinal-product-name-part-type",
    },
    /**
     * Code: StrengthPart
     */
    StrengthPart: {
        display: "Strength part",
        code: "StrengthPart",
        system: "http://hl7.org/fhir/medicinal-product-name-part-type",
    },
    /**
     * Code: TimeOrPeriodPart
     */
    TimePeriodPart: {
        display: "Time/Period part",
        code: "TimeOrPeriodPart",
        system: "http://hl7.org/fhir/medicinal-product-name-part-type",
    },
    /**
     * Code: TrademarkOrCompanyPart
     */
    TrademarkOrCompanyNamePart: {
        display: "Trademark or company name part",
        code: "TrademarkOrCompanyPart",
        system: "http://hl7.org/fhir/medicinal-product-name-part-type",
    },
};
//# sourceMappingURL=data:application/json;base64,