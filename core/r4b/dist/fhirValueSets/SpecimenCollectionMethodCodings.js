// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/specimen-collection-method|4.3.0
/**
 *  This example value set defines a set of codes that can be used to indicate the method by which a specimen was collected.
 */
export const SpecimenCollectionMethodCodings = {
    /**
     * Code: 129300006
     */
    PunctureAction: {
        display: "Puncture - action",
        code: "129300006",
        system: "http://snomed.info/sct",
    },
    /**
     * Code: 129304002
     */
    ExcisionAction: {
        display: "Excision - action",
        code: "129304002",
        system: "http://snomed.info/sct",
    },
    /**
     * Code: 129314006
     */
    BiopsyAction: {
        display: "Biopsy - action",
        code: "129314006",
        system: "http://snomed.info/sct",
    },
    /**
     * Code: 129316008
     */
    AspirationAction: {
        display: "Aspiration - action",
        code: "129316008",
        system: "http://snomed.info/sct",
    },
    /**
     * Code: 129323009
     */
    ScrapingAction: {
        display: "Scraping - action",
        code: "129323009",
        system: "http://snomed.info/sct",
    },
    /**
     * Code: 225113003
     */
    TimedUrineCollection: {
        display: "Timed urine collection",
        code: "225113003",
        system: "http://snomed.info/sct",
    },
    /**
     * Code: 278450005
     */
    FingerPrickSampling: {
        display: "Finger-prick sampling",
        code: "278450005",
        system: "http://snomed.info/sct",
    },
    /**
     * Code: 386089008
     */
    CollectionOfCoughedSputum: {
        display: "Collection of coughed sputum",
        code: "386089008",
        system: "http://snomed.info/sct",
    },
    /**
     * Code: 70777001
     */
    UrineSpecimenCollectionCatheterized: {
        display: "Urine specimen collection, catheterized",
        code: "70777001",
        system: "http://snomed.info/sct",
    },
    /**
     * Code: 73416001
     */
    UrineSpecimenCollectionCleanCatch: {
        display: "Urine specimen collection, clean catch",
        code: "73416001",
        system: "http://snomed.info/sct",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3BlY2ltZW5Db2xsZWN0aW9uTWV0aG9kQ29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvU3BlY2ltZW5Db2xsZWN0aW9uTWV0aG9kQ29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsZ0RBQWdEO0FBQ2hELGtDQUFrQztBQUNsQywrRUFBK0U7QUFrRC9FOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sK0JBQStCLEdBQXNDO0lBQ2hGOztPQUVHO0lBQ0gsY0FBYyxFQUFFO1FBQ2QsT0FBTyxFQUFFLG1CQUFtQjtRQUM1QixJQUFJLEVBQUUsV0FBVztRQUNqQixNQUFNLEVBQUUsd0JBQXdCO0tBQ2pDO0lBQ0Q7O09BRUc7SUFDSCxjQUFjLEVBQUU7UUFDZCxPQUFPLEVBQUUsbUJBQW1CO1FBQzVCLElBQUksRUFBRSxXQUFXO1FBQ2pCLE1BQU0sRUFBRSx3QkFBd0I7S0FDakM7SUFDRDs7T0FFRztJQUNILFlBQVksRUFBRTtRQUNaLE9BQU8sRUFBRSxpQkFBaUI7UUFDMUIsSUFBSSxFQUFFLFdBQVc7UUFDakIsTUFBTSxFQUFFLHdCQUF3QjtLQUNqQztJQUNEOztPQUVHO0lBQ0gsZ0JBQWdCLEVBQUU7UUFDaEIsT0FBTyxFQUFFLHFCQUFxQjtRQUM5QixJQUFJLEVBQUUsV0FBVztRQUNqQixNQUFNLEVBQUUsd0JBQXdCO0tBQ2pDO0lBQ0Q7O09BRUc7SUFDSCxjQUFjLEVBQUU7UUFDZCxPQUFPLEVBQUUsbUJBQW1CO1FBQzVCLElBQUksRUFBRSxXQUFXO1FBQ2pCLE1BQU0sRUFBRSx3QkFBd0I7S0FDakM7SUFDRDs7T0FFRztJQUNILG9CQUFvQixFQUFFO1FBQ3BCLE9BQU8sRUFBRSx3QkFBd0I7UUFDakMsSUFBSSxFQUFFLFdBQVc7UUFDakIsTUFBTSxFQUFFLHdCQUF3QjtLQUNqQztJQUNEOztPQUVHO0lBQ0gsbUJBQW1CLEVBQUU7UUFDbkIsT0FBTyxFQUFFLHVCQUF1QjtRQUNoQyxJQUFJLEVBQUUsV0FBVztRQUNqQixNQUFNLEVBQUUsd0JBQXdCO0tBQ2pDO0lBQ0Q7O09BRUc7SUFDSCx5QkFBeUIsRUFBRTtRQUN6QixPQUFPLEVBQUUsOEJBQThCO1FBQ3ZDLElBQUksRUFBRSxXQUFXO1FBQ2pCLE1BQU0sRUFBRSx3QkFBd0I7S0FDakM7SUFDRDs7T0FFRztJQUNILG1DQUFtQyxFQUFFO1FBQ25DLE9BQU8sRUFBRSx5Q0FBeUM7UUFDbEQsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLHdCQUF3QjtLQUNqQztJQUNEOztPQUVHO0lBQ0gsaUNBQWlDLEVBQUU7UUFDakMsT0FBTyxFQUFFLHdDQUF3QztRQUNqRCxJQUFJLEVBQUUsVUFBVTtRQUNoQixNQUFNLEVBQUUsd0JBQXdCO0tBQ2pDO0NBQ08sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNGIuY29yZSB2ZXJzaW9uOiA0LjMuMFxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvc3BlY2ltZW4tY29sbGVjdGlvbi1tZXRob2R8NC4zLjBcclxuXHJcbmltcG9ydCB7IENvZGluZ0FyZ3MgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiAgVGhpcyBleGFtcGxlIHZhbHVlIHNldCBkZWZpbmVzIGEgc2V0IG9mIGNvZGVzIHRoYXQgY2FuIGJlIHVzZWQgdG8gaW5kaWNhdGUgdGhlIG1ldGhvZCBieSB3aGljaCBhIHNwZWNpbWVuIHdhcyBjb2xsZWN0ZWQuXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBTcGVjaW1lbkNvbGxlY3Rpb25NZXRob2RDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IDEyOTMwMDAwNlxyXG4gICAqL1xyXG4gIFB1bmN0dXJlQWN0aW9uOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IDEyOTMwNDAwMlxyXG4gICAqL1xyXG4gIEV4Y2lzaW9uQWN0aW9uOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IDEyOTMxNDAwNlxyXG4gICAqL1xyXG4gIEJpb3BzeUFjdGlvbjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiAxMjkzMTYwMDhcclxuICAgKi9cclxuICBBc3BpcmF0aW9uQWN0aW9uOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IDEyOTMyMzAwOVxyXG4gICAqL1xyXG4gIFNjcmFwaW5nQWN0aW9uOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IDIyNTExMzAwM1xyXG4gICAqL1xyXG4gIFRpbWVkVXJpbmVDb2xsZWN0aW9uOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IDI3ODQ1MDAwNVxyXG4gICAqL1xyXG4gIEZpbmdlclByaWNrU2FtcGxpbmc6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogMzg2MDg5MDA4XHJcbiAgICovXHJcbiAgQ29sbGVjdGlvbk9mQ291Z2hlZFNwdXR1bTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiA3MDc3NzAwMVxyXG4gICAqL1xyXG4gIFVyaW5lU3BlY2ltZW5Db2xsZWN0aW9uQ2F0aGV0ZXJpemVkOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IDczNDE2MDAxXHJcbiAgICovXHJcbiAgVXJpbmVTcGVjaW1lbkNvbGxlY3Rpb25DbGVhbkNhdGNoOiBDb2RpbmdBcmdzO1xyXG59XHJcblxyXG4vKipcclxuICogIFRoaXMgZXhhbXBsZSB2YWx1ZSBzZXQgZGVmaW5lcyBhIHNldCBvZiBjb2RlcyB0aGF0IGNhbiBiZSB1c2VkIHRvIGluZGljYXRlIHRoZSBtZXRob2QgYnkgd2hpY2ggYSBzcGVjaW1lbiB3YXMgY29sbGVjdGVkLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IFNwZWNpbWVuQ29sbGVjdGlvbk1ldGhvZENvZGluZ3M6U3BlY2ltZW5Db2xsZWN0aW9uTWV0aG9kQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBDb2RlOiAxMjkzMDAwMDZcclxuICAgKi9cclxuICBQdW5jdHVyZUFjdGlvbjoge1xyXG4gICAgZGlzcGxheTogXCJQdW5jdHVyZSAtIGFjdGlvblwiLFxyXG4gICAgY29kZTogXCIxMjkzMDAwMDZcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vc25vbWVkLmluZm8vc2N0XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiAxMjkzMDQwMDJcclxuICAgKi9cclxuICBFeGNpc2lvbkFjdGlvbjoge1xyXG4gICAgZGlzcGxheTogXCJFeGNpc2lvbiAtIGFjdGlvblwiLFxyXG4gICAgY29kZTogXCIxMjkzMDQwMDJcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vc25vbWVkLmluZm8vc2N0XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiAxMjkzMTQwMDZcclxuICAgKi9cclxuICBCaW9wc3lBY3Rpb246IHtcclxuICAgIGRpc3BsYXk6IFwiQmlvcHN5IC0gYWN0aW9uXCIsXHJcbiAgICBjb2RlOiBcIjEyOTMxNDAwNlwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9zbm9tZWQuaW5mby9zY3RcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IDEyOTMxNjAwOFxyXG4gICAqL1xyXG4gIEFzcGlyYXRpb25BY3Rpb246IHtcclxuICAgIGRpc3BsYXk6IFwiQXNwaXJhdGlvbiAtIGFjdGlvblwiLFxyXG4gICAgY29kZTogXCIxMjkzMTYwMDhcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vc25vbWVkLmluZm8vc2N0XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiAxMjkzMjMwMDlcclxuICAgKi9cclxuICBTY3JhcGluZ0FjdGlvbjoge1xyXG4gICAgZGlzcGxheTogXCJTY3JhcGluZyAtIGFjdGlvblwiLFxyXG4gICAgY29kZTogXCIxMjkzMjMwMDlcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vc25vbWVkLmluZm8vc2N0XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiAyMjUxMTMwMDNcclxuICAgKi9cclxuICBUaW1lZFVyaW5lQ29sbGVjdGlvbjoge1xyXG4gICAgZGlzcGxheTogXCJUaW1lZCB1cmluZSBjb2xsZWN0aW9uXCIsXHJcbiAgICBjb2RlOiBcIjIyNTExMzAwM1wiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9zbm9tZWQuaW5mby9zY3RcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IDI3ODQ1MDAwNVxyXG4gICAqL1xyXG4gIEZpbmdlclByaWNrU2FtcGxpbmc6IHtcclxuICAgIGRpc3BsYXk6IFwiRmluZ2VyLXByaWNrIHNhbXBsaW5nXCIsXHJcbiAgICBjb2RlOiBcIjI3ODQ1MDAwNVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9zbm9tZWQuaW5mby9zY3RcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IDM4NjA4OTAwOFxyXG4gICAqL1xyXG4gIENvbGxlY3Rpb25PZkNvdWdoZWRTcHV0dW06IHtcclxuICAgIGRpc3BsYXk6IFwiQ29sbGVjdGlvbiBvZiBjb3VnaGVkIHNwdXR1bVwiLFxyXG4gICAgY29kZTogXCIzODYwODkwMDhcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vc25vbWVkLmluZm8vc2N0XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiA3MDc3NzAwMVxyXG4gICAqL1xyXG4gIFVyaW5lU3BlY2ltZW5Db2xsZWN0aW9uQ2F0aGV0ZXJpemVkOiB7XHJcbiAgICBkaXNwbGF5OiBcIlVyaW5lIHNwZWNpbWVuIGNvbGxlY3Rpb24sIGNhdGhldGVyaXplZFwiLFxyXG4gICAgY29kZTogXCI3MDc3NzAwMVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9zbm9tZWQuaW5mby9zY3RcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IDczNDE2MDAxXHJcbiAgICovXHJcbiAgVXJpbmVTcGVjaW1lbkNvbGxlY3Rpb25DbGVhbkNhdGNoOiB7XHJcbiAgICBkaXNwbGF5OiBcIlVyaW5lIHNwZWNpbWVuIGNvbGxlY3Rpb24sIGNsZWFuIGNhdGNoXCIsXHJcbiAgICBjb2RlOiBcIjczNDE2MDAxXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Nub21lZC5pbmZvL3NjdFwiLFxyXG4gIH0sXHJcbn0gYXMgY29uc3Q7XHJcbiJdfQ==