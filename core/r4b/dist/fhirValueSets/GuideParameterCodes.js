// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/guide-parameter-code|4.3.0
/**
 * Code of parameter that is input to the guide.
 */
export const GuideParameterCodes = {
    /**
     * apply: If the value of this string 0..* parameter is one of the metadata fields then all conformance resources will have any specified [Resource].[field] overwritten with the ImplementationGuide.[field], where field is one of: version, date, status, publisher, contact, copyright, experimental, jurisdiction, useContext.
     */
    ApplyMetadataValue: "apply",
    /**
     * expansion-parameter: The value of this string 0..* parameter is a parameter (name=value) when expanding value sets for this implementation guide. This is particularly used to specify the versions of published terminologies such as SNOMED CT.
     */
    ExpansionProfile: "expansion-parameter",
    /**
     * generate-json: The value of this boolean 0..1 parameter specifies whether the IG publisher creates examples in JSON format. If not present, the Publication Tool decides whether to generate JSON.
     */
    GenerateJSON: "generate-json",
    /**
     * generate-turtle: The value of this boolean 0..1 parameter specifies whether the IG publisher creates examples in Turtle format. If not present, the Publication Tool decides whether to generate Turtle.
     */
    GenerateTurtle: "generate-turtle",
    /**
     * generate-xml: The value of this boolean 0..1 parameter specifies whether the IG publisher creates examples in XML format. If not present, the Publication Tool decides whether to generate XML.
     */
    GenerateXML: "generate-xml",
    /**
     * html-template: The value of this string singleton parameter is the name of the file to use as the builder template for each generated page (see templating).
     */
    HTMLTemplate: "html-template",
    /**
     * path-pages: The value of this string 0..1 parameter is a subfolder of the build context's location that contains files that are part of the html content processed by the builder.
     */
    PagesPath: "path-pages",
    /**
     * path-resource: The value of this string 0..* parameter is a subfolder of the build context's location that is to be scanned to load resources. Scope is (if present) a particular resource type.
     */
    ResourcePath: "path-resource",
    /**
     * path-tx-cache: The value of this string 0..1 parameter is a subfolder of the build context's location that is used as the terminology cache. If this is not present, the terminology cache is on the local system, not under version control.
     */
    TerminologyCachePath: "path-tx-cache",
    /**
     * rule-broken-links: The value of this string 0..1 parameter is either "warning" or "error" (default = "error"). If the value is "warning" then IG build tools allow the IG to be considered successfully build even when there is no internal broken links.
     */
    BrokenLinksRule: "rule-broken-links",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR3VpZGVQYXJhbWV0ZXJDb2Rlcy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvR3VpZGVQYXJhbWV0ZXJDb2Rlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsZ0RBQWdEO0FBQ2hELGtDQUFrQztBQUNsQyx5RUFBeUU7QUFFekU7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxtQkFBbUIsR0FBRztJQUNqQzs7T0FFRztJQUNILGtCQUFrQixFQUFFLE9BQU87SUFDM0I7O09BRUc7SUFDSCxnQkFBZ0IsRUFBRSxxQkFBcUI7SUFDdkM7O09BRUc7SUFDSCxZQUFZLEVBQUUsZUFBZTtJQUM3Qjs7T0FFRztJQUNILGNBQWMsRUFBRSxpQkFBaUI7SUFDakM7O09BRUc7SUFDSCxXQUFXLEVBQUUsY0FBYztJQUMzQjs7T0FFRztJQUNILFlBQVksRUFBRSxlQUFlO0lBQzdCOztPQUVHO0lBQ0gsU0FBUyxFQUFFLFlBQVk7SUFDdkI7O09BRUc7SUFDSCxZQUFZLEVBQUUsZUFBZTtJQUM3Qjs7T0FFRztJQUNILG9CQUFvQixFQUFFLGVBQWU7SUFDckM7O09BRUc7SUFDSCxlQUFlLEVBQUUsbUJBQW1CO0NBQzVCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjRiLmNvcmUgdmVyc2lvbjogNC4zLjBcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L2d1aWRlLXBhcmFtZXRlci1jb2RlfDQuMy4wXHJcblxyXG4vKipcclxuICogQ29kZSBvZiBwYXJhbWV0ZXIgdGhhdCBpcyBpbnB1dCB0byB0aGUgZ3VpZGUuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgR3VpZGVQYXJhbWV0ZXJDb2RlcyA9IHtcclxuICAvKipcclxuICAgKiBhcHBseTogSWYgdGhlIHZhbHVlIG9mIHRoaXMgc3RyaW5nIDAuLiogcGFyYW1ldGVyIGlzIG9uZSBvZiB0aGUgbWV0YWRhdGEgZmllbGRzIHRoZW4gYWxsIGNvbmZvcm1hbmNlIHJlc291cmNlcyB3aWxsIGhhdmUgYW55IHNwZWNpZmllZCBbUmVzb3VyY2VdLltmaWVsZF0gb3ZlcndyaXR0ZW4gd2l0aCB0aGUgSW1wbGVtZW50YXRpb25HdWlkZS5bZmllbGRdLCB3aGVyZSBmaWVsZCBpcyBvbmUgb2Y6IHZlcnNpb24sIGRhdGUsIHN0YXR1cywgcHVibGlzaGVyLCBjb250YWN0LCBjb3B5cmlnaHQsIGV4cGVyaW1lbnRhbCwganVyaXNkaWN0aW9uLCB1c2VDb250ZXh0LlxyXG4gICAqL1xyXG4gIEFwcGx5TWV0YWRhdGFWYWx1ZTogXCJhcHBseVwiLFxyXG4gIC8qKlxyXG4gICAqIGV4cGFuc2lvbi1wYXJhbWV0ZXI6IFRoZSB2YWx1ZSBvZiB0aGlzIHN0cmluZyAwLi4qIHBhcmFtZXRlciBpcyBhIHBhcmFtZXRlciAobmFtZT12YWx1ZSkgd2hlbiBleHBhbmRpbmcgdmFsdWUgc2V0cyBmb3IgdGhpcyBpbXBsZW1lbnRhdGlvbiBndWlkZS4gVGhpcyBpcyBwYXJ0aWN1bGFybHkgdXNlZCB0byBzcGVjaWZ5IHRoZSB2ZXJzaW9ucyBvZiBwdWJsaXNoZWQgdGVybWlub2xvZ2llcyBzdWNoIGFzIFNOT01FRCBDVC5cclxuICAgKi9cclxuICBFeHBhbnNpb25Qcm9maWxlOiBcImV4cGFuc2lvbi1wYXJhbWV0ZXJcIixcclxuICAvKipcclxuICAgKiBnZW5lcmF0ZS1qc29uOiBUaGUgdmFsdWUgb2YgdGhpcyBib29sZWFuIDAuLjEgcGFyYW1ldGVyIHNwZWNpZmllcyB3aGV0aGVyIHRoZSBJRyBwdWJsaXNoZXIgY3JlYXRlcyBleGFtcGxlcyBpbiBKU09OIGZvcm1hdC4gSWYgbm90IHByZXNlbnQsIHRoZSBQdWJsaWNhdGlvbiBUb29sIGRlY2lkZXMgd2hldGhlciB0byBnZW5lcmF0ZSBKU09OLlxyXG4gICAqL1xyXG4gIEdlbmVyYXRlSlNPTjogXCJnZW5lcmF0ZS1qc29uXCIsXHJcbiAgLyoqXHJcbiAgICogZ2VuZXJhdGUtdHVydGxlOiBUaGUgdmFsdWUgb2YgdGhpcyBib29sZWFuIDAuLjEgcGFyYW1ldGVyIHNwZWNpZmllcyB3aGV0aGVyIHRoZSBJRyBwdWJsaXNoZXIgY3JlYXRlcyBleGFtcGxlcyBpbiBUdXJ0bGUgZm9ybWF0LiBJZiBub3QgcHJlc2VudCwgdGhlIFB1YmxpY2F0aW9uIFRvb2wgZGVjaWRlcyB3aGV0aGVyIHRvIGdlbmVyYXRlIFR1cnRsZS5cclxuICAgKi9cclxuICBHZW5lcmF0ZVR1cnRsZTogXCJnZW5lcmF0ZS10dXJ0bGVcIixcclxuICAvKipcclxuICAgKiBnZW5lcmF0ZS14bWw6IFRoZSB2YWx1ZSBvZiB0aGlzIGJvb2xlYW4gMC4uMSBwYXJhbWV0ZXIgc3BlY2lmaWVzIHdoZXRoZXIgdGhlIElHIHB1Ymxpc2hlciBjcmVhdGVzIGV4YW1wbGVzIGluIFhNTCBmb3JtYXQuIElmIG5vdCBwcmVzZW50LCB0aGUgUHVibGljYXRpb24gVG9vbCBkZWNpZGVzIHdoZXRoZXIgdG8gZ2VuZXJhdGUgWE1MLlxyXG4gICAqL1xyXG4gIEdlbmVyYXRlWE1MOiBcImdlbmVyYXRlLXhtbFwiLFxyXG4gIC8qKlxyXG4gICAqIGh0bWwtdGVtcGxhdGU6IFRoZSB2YWx1ZSBvZiB0aGlzIHN0cmluZyBzaW5nbGV0b24gcGFyYW1ldGVyIGlzIHRoZSBuYW1lIG9mIHRoZSBmaWxlIHRvIHVzZSBhcyB0aGUgYnVpbGRlciB0ZW1wbGF0ZSBmb3IgZWFjaCBnZW5lcmF0ZWQgcGFnZSAoc2VlIHRlbXBsYXRpbmcpLlxyXG4gICAqL1xyXG4gIEhUTUxUZW1wbGF0ZTogXCJodG1sLXRlbXBsYXRlXCIsXHJcbiAgLyoqXHJcbiAgICogcGF0aC1wYWdlczogVGhlIHZhbHVlIG9mIHRoaXMgc3RyaW5nIDAuLjEgcGFyYW1ldGVyIGlzIGEgc3ViZm9sZGVyIG9mIHRoZSBidWlsZCBjb250ZXh0J3MgbG9jYXRpb24gdGhhdCBjb250YWlucyBmaWxlcyB0aGF0IGFyZSBwYXJ0IG9mIHRoZSBodG1sIGNvbnRlbnQgcHJvY2Vzc2VkIGJ5IHRoZSBidWlsZGVyLlxyXG4gICAqL1xyXG4gIFBhZ2VzUGF0aDogXCJwYXRoLXBhZ2VzXCIsXHJcbiAgLyoqXHJcbiAgICogcGF0aC1yZXNvdXJjZTogVGhlIHZhbHVlIG9mIHRoaXMgc3RyaW5nIDAuLiogcGFyYW1ldGVyIGlzIGEgc3ViZm9sZGVyIG9mIHRoZSBidWlsZCBjb250ZXh0J3MgbG9jYXRpb24gdGhhdCBpcyB0byBiZSBzY2FubmVkIHRvIGxvYWQgcmVzb3VyY2VzLiBTY29wZSBpcyAoaWYgcHJlc2VudCkgYSBwYXJ0aWN1bGFyIHJlc291cmNlIHR5cGUuXHJcbiAgICovXHJcbiAgUmVzb3VyY2VQYXRoOiBcInBhdGgtcmVzb3VyY2VcIixcclxuICAvKipcclxuICAgKiBwYXRoLXR4LWNhY2hlOiBUaGUgdmFsdWUgb2YgdGhpcyBzdHJpbmcgMC4uMSBwYXJhbWV0ZXIgaXMgYSBzdWJmb2xkZXIgb2YgdGhlIGJ1aWxkIGNvbnRleHQncyBsb2NhdGlvbiB0aGF0IGlzIHVzZWQgYXMgdGhlIHRlcm1pbm9sb2d5IGNhY2hlLiBJZiB0aGlzIGlzIG5vdCBwcmVzZW50LCB0aGUgdGVybWlub2xvZ3kgY2FjaGUgaXMgb24gdGhlIGxvY2FsIHN5c3RlbSwgbm90IHVuZGVyIHZlcnNpb24gY29udHJvbC5cclxuICAgKi9cclxuICBUZXJtaW5vbG9neUNhY2hlUGF0aDogXCJwYXRoLXR4LWNhY2hlXCIsXHJcbiAgLyoqXHJcbiAgICogcnVsZS1icm9rZW4tbGlua3M6IFRoZSB2YWx1ZSBvZiB0aGlzIHN0cmluZyAwLi4xIHBhcmFtZXRlciBpcyBlaXRoZXIgXCJ3YXJuaW5nXCIgb3IgXCJlcnJvclwiIChkZWZhdWx0ID0gXCJlcnJvclwiKS4gSWYgdGhlIHZhbHVlIGlzIFwid2FybmluZ1wiIHRoZW4gSUcgYnVpbGQgdG9vbHMgYWxsb3cgdGhlIElHIHRvIGJlIGNvbnNpZGVyZWQgc3VjY2Vzc2Z1bGx5IGJ1aWxkIGV2ZW4gd2hlbiB0aGVyZSBpcyBubyBpbnRlcm5hbCBicm9rZW4gbGlua3MuXHJcbiAgICovXHJcbiAgQnJva2VuTGlua3NSdWxlOiBcInJ1bGUtYnJva2VuLWxpbmtzXCIsXHJcbn0gYXMgY29uc3Q7XHJcblxyXG4vKipcclxuICogQ29kZSBvZiBwYXJhbWV0ZXIgdGhhdCBpcyBpbnB1dCB0byB0aGUgZ3VpZGUuXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBHdWlkZVBhcmFtZXRlckNvZGVUeXBlID0gdHlwZW9mIEd1aWRlUGFyYW1ldGVyQ29kZXNba2V5b2YgdHlwZW9mIEd1aWRlUGFyYW1ldGVyQ29kZXNdO1xyXG4iXX0=