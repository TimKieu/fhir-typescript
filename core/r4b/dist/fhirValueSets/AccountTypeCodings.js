// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/account-type|4.3.0
/**
 * This examples value set defines the set of codes that can be used to represent the type of an account.
 */
export const AccountTypeCodings = {
    /**
     * Code: _ActAccountCode
     */
    ActAccountCode: {
        display: "ActAccountCode",
        code: "_ActAccountCode",
        system: "http://terminology.hl7.org/CodeSystem/v3-ActCode",
    },
    /**
     * Code: _CreditCard
     */
    CreditCard: {
        display: "CreditCard",
        code: "_CreditCard",
        system: "http://terminology.hl7.org/CodeSystem/v3-ActCode",
    },
    /**
     * Code: ACCTRECEIVABLE
     */
    AccountReceivable: {
        display: "account receivable",
        code: "ACCTRECEIVABLE",
        system: "http://terminology.hl7.org/CodeSystem/v3-ActCode",
    },
    /**
     * Code: AE
     */
    AmericanExpress: {
        display: "American Express",
        code: "AE",
        system: "http://terminology.hl7.org/CodeSystem/v3-ActCode",
    },
    /**
     * Code: CASH
     */
    Cash: {
        display: "Cash",
        code: "CASH",
        system: "http://terminology.hl7.org/CodeSystem/v3-ActCode",
    },
    /**
     * Code: CC
     */
    CreditCardCC: {
        display: "credit card",
        code: "CC",
        system: "http://terminology.hl7.org/CodeSystem/v3-ActCode",
    },
    /**
     * Code: DN
     */
    DinerQuoteSClub: {
        display: "Diner's Club",
        code: "DN",
        system: "http://terminology.hl7.org/CodeSystem/v3-ActCode",
    },
    /**
     * Code: DV
     */
    DiscoverCard: {
        display: "Discover Card",
        code: "DV",
        system: "http://terminology.hl7.org/CodeSystem/v3-ActCode",
    },
    /**
     * Code: MC
     */
    MasterCard: {
        display: "Master Card",
        code: "MC",
        system: "http://terminology.hl7.org/CodeSystem/v3-ActCode",
    },
    /**
     * Code: PBILLACCT
     */
    PatientBillingAccount: {
        display: "patient billing account",
        code: "PBILLACCT",
        system: "http://terminology.hl7.org/CodeSystem/v3-ActCode",
    },
    /**
     * Code: V
     */
    Visa: {
        display: "Visa",
        code: "V",
        system: "http://terminology.hl7.org/CodeSystem/v3-ActCode",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQWNjb3VudFR5cGVDb2RpbmdzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9BY2NvdW50VHlwZUNvZGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLGdEQUFnRDtBQUNoRCxrQ0FBa0M7QUFDbEMsaUVBQWlFO0FBc0RqRTs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLGtCQUFrQixHQUF5QjtJQUN0RDs7T0FFRztJQUNILGNBQWMsRUFBRTtRQUNkLE9BQU8sRUFBRSxnQkFBZ0I7UUFDekIsSUFBSSxFQUFFLGlCQUFpQjtRQUN2QixNQUFNLEVBQUUsa0RBQWtEO0tBQzNEO0lBQ0Q7O09BRUc7SUFDSCxVQUFVLEVBQUU7UUFDVixPQUFPLEVBQUUsWUFBWTtRQUNyQixJQUFJLEVBQUUsYUFBYTtRQUNuQixNQUFNLEVBQUUsa0RBQWtEO0tBQzNEO0lBQ0Q7O09BRUc7SUFDSCxpQkFBaUIsRUFBRTtRQUNqQixPQUFPLEVBQUUsb0JBQW9CO1FBQzdCLElBQUksRUFBRSxnQkFBZ0I7UUFDdEIsTUFBTSxFQUFFLGtEQUFrRDtLQUMzRDtJQUNEOztPQUVHO0lBQ0gsZUFBZSxFQUFFO1FBQ2YsT0FBTyxFQUFFLGtCQUFrQjtRQUMzQixJQUFJLEVBQUUsSUFBSTtRQUNWLE1BQU0sRUFBRSxrREFBa0Q7S0FDM0Q7SUFDRDs7T0FFRztJQUNILElBQUksRUFBRTtRQUNKLE9BQU8sRUFBRSxNQUFNO1FBQ2YsSUFBSSxFQUFFLE1BQU07UUFDWixNQUFNLEVBQUUsa0RBQWtEO0tBQzNEO0lBQ0Q7O09BRUc7SUFDSCxZQUFZLEVBQUU7UUFDWixPQUFPLEVBQUUsYUFBYTtRQUN0QixJQUFJLEVBQUUsSUFBSTtRQUNWLE1BQU0sRUFBRSxrREFBa0Q7S0FDM0Q7SUFDRDs7T0FFRztJQUNILGVBQWUsRUFBRTtRQUNmLE9BQU8sRUFBRSxjQUFjO1FBQ3ZCLElBQUksRUFBRSxJQUFJO1FBQ1YsTUFBTSxFQUFFLGtEQUFrRDtLQUMzRDtJQUNEOztPQUVHO0lBQ0gsWUFBWSxFQUFFO1FBQ1osT0FBTyxFQUFFLGVBQWU7UUFDeEIsSUFBSSxFQUFFLElBQUk7UUFDVixNQUFNLEVBQUUsa0RBQWtEO0tBQzNEO0lBQ0Q7O09BRUc7SUFDSCxVQUFVLEVBQUU7UUFDVixPQUFPLEVBQUUsYUFBYTtRQUN0QixJQUFJLEVBQUUsSUFBSTtRQUNWLE1BQU0sRUFBRSxrREFBa0Q7S0FDM0Q7SUFDRDs7T0FFRztJQUNILHFCQUFxQixFQUFFO1FBQ3JCLE9BQU8sRUFBRSx5QkFBeUI7UUFDbEMsSUFBSSxFQUFFLFdBQVc7UUFDakIsTUFBTSxFQUFFLGtEQUFrRDtLQUMzRDtJQUNEOztPQUVHO0lBQ0gsSUFBSSxFQUFFO1FBQ0osT0FBTyxFQUFFLE1BQU07UUFDZixJQUFJLEVBQUUsR0FBRztRQUNULE1BQU0sRUFBRSxrREFBa0Q7S0FDM0Q7Q0FDTyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0Yi5jb3JlIHZlcnNpb246IDQuMy4wXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9hY2NvdW50LXR5cGV8NC4zLjBcclxuXHJcbmltcG9ydCB7IENvZGluZ0FyZ3MgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiBUaGlzIGV4YW1wbGVzIHZhbHVlIHNldCBkZWZpbmVzIHRoZSBzZXQgb2YgY29kZXMgdGhhdCBjYW4gYmUgdXNlZCB0byByZXByZXNlbnQgdGhlIHR5cGUgb2YgYW4gYWNjb3VudC5cclxuICovXHJcbmV4cG9ydCB0eXBlIEFjY291bnRUeXBlQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBDb2RlOiBfQWN0QWNjb3VudENvZGVcclxuICAgKi9cclxuICBBY3RBY2NvdW50Q29kZTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiBfQ3JlZGl0Q2FyZFxyXG4gICAqL1xyXG4gIENyZWRpdENhcmQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogQUNDVFJFQ0VJVkFCTEVcclxuICAgKi9cclxuICBBY2NvdW50UmVjZWl2YWJsZTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiBBRVxyXG4gICAqL1xyXG4gIEFtZXJpY2FuRXhwcmVzczogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiBDQVNIXHJcbiAgICovXHJcbiAgQ2FzaDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiBDQ1xyXG4gICAqL1xyXG4gIENyZWRpdENhcmRDQzogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiBETlxyXG4gICAqL1xyXG4gIERpbmVyUXVvdGVTQ2x1YjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiBEVlxyXG4gICAqL1xyXG4gIERpc2NvdmVyQ2FyZDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiBNQ1xyXG4gICAqL1xyXG4gIE1hc3RlckNhcmQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogUEJJTExBQ0NUXHJcbiAgICovXHJcbiAgUGF0aWVudEJpbGxpbmdBY2NvdW50OiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IFZcclxuICAgKi9cclxuICBWaXNhOiBDb2RpbmdBcmdzO1xyXG59XHJcblxyXG4vKipcclxuICogVGhpcyBleGFtcGxlcyB2YWx1ZSBzZXQgZGVmaW5lcyB0aGUgc2V0IG9mIGNvZGVzIHRoYXQgY2FuIGJlIHVzZWQgdG8gcmVwcmVzZW50IHRoZSB0eXBlIG9mIGFuIGFjY291bnQuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgQWNjb3VudFR5cGVDb2RpbmdzOkFjY291bnRUeXBlQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBDb2RlOiBfQWN0QWNjb3VudENvZGVcclxuICAgKi9cclxuICBBY3RBY2NvdW50Q29kZToge1xyXG4gICAgZGlzcGxheTogXCJBY3RBY2NvdW50Q29kZVwiLFxyXG4gICAgY29kZTogXCJfQWN0QWNjb3VudENvZGVcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL3YzLUFjdENvZGVcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IF9DcmVkaXRDYXJkXHJcbiAgICovXHJcbiAgQ3JlZGl0Q2FyZDoge1xyXG4gICAgZGlzcGxheTogXCJDcmVkaXRDYXJkXCIsXHJcbiAgICBjb2RlOiBcIl9DcmVkaXRDYXJkXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS92My1BY3RDb2RlXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiBBQ0NUUkVDRUlWQUJMRVxyXG4gICAqL1xyXG4gIEFjY291bnRSZWNlaXZhYmxlOiB7XHJcbiAgICBkaXNwbGF5OiBcImFjY291bnQgcmVjZWl2YWJsZVwiLFxyXG4gICAgY29kZTogXCJBQ0NUUkVDRUlWQUJMRVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vdjMtQWN0Q29kZVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogQUVcclxuICAgKi9cclxuICBBbWVyaWNhbkV4cHJlc3M6IHtcclxuICAgIGRpc3BsYXk6IFwiQW1lcmljYW4gRXhwcmVzc1wiLFxyXG4gICAgY29kZTogXCJBRVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vdjMtQWN0Q29kZVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogQ0FTSFxyXG4gICAqL1xyXG4gIENhc2g6IHtcclxuICAgIGRpc3BsYXk6IFwiQ2FzaFwiLFxyXG4gICAgY29kZTogXCJDQVNIXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS92My1BY3RDb2RlXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiBDQ1xyXG4gICAqL1xyXG4gIENyZWRpdENhcmRDQzoge1xyXG4gICAgZGlzcGxheTogXCJjcmVkaXQgY2FyZFwiLFxyXG4gICAgY29kZTogXCJDQ1wiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vdjMtQWN0Q29kZVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogRE5cclxuICAgKi9cclxuICBEaW5lclF1b3RlU0NsdWI6IHtcclxuICAgIGRpc3BsYXk6IFwiRGluZXIncyBDbHViXCIsXHJcbiAgICBjb2RlOiBcIkROXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS92My1BY3RDb2RlXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiBEVlxyXG4gICAqL1xyXG4gIERpc2NvdmVyQ2FyZDoge1xyXG4gICAgZGlzcGxheTogXCJEaXNjb3ZlciBDYXJkXCIsXHJcbiAgICBjb2RlOiBcIkRWXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS92My1BY3RDb2RlXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiBNQ1xyXG4gICAqL1xyXG4gIE1hc3RlckNhcmQ6IHtcclxuICAgIGRpc3BsYXk6IFwiTWFzdGVyIENhcmRcIixcclxuICAgIGNvZGU6IFwiTUNcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL3YzLUFjdENvZGVcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IFBCSUxMQUNDVFxyXG4gICAqL1xyXG4gIFBhdGllbnRCaWxsaW5nQWNjb3VudDoge1xyXG4gICAgZGlzcGxheTogXCJwYXRpZW50IGJpbGxpbmcgYWNjb3VudFwiLFxyXG4gICAgY29kZTogXCJQQklMTEFDQ1RcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL3YzLUFjdENvZGVcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IFZcclxuICAgKi9cclxuICBWaXNhOiB7XHJcbiAgICBkaXNwbGF5OiBcIlZpc2FcIixcclxuICAgIGNvZGU6IFwiVlwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vdjMtQWN0Q29kZVwiLFxyXG4gIH0sXHJcbn0gYXMgY29uc3Q7XHJcbiJdfQ==