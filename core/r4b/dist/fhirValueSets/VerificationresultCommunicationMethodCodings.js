// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/verificationresult-communication-method|4.3.0
/**
 * Attested information may be validated by process that are manual or automated. For automated processes it may accomplished by the system of record reaching out through another system's API or information may be sent to the system of record. This value set defines a set of codes to describing the process, the how, a resource or data element is validated.
 */
export const VerificationresultCommunicationMethodCodings = {
    /**
     * Code: manual
     */
    Manual: {
        display: "Manual",
        code: "manual",
        system: "http://terminology.hl7.org/CodeSystem/verificationresult-communication-method",
    },
    /**
     * Code: portal
     */
    Portal: {
        display: "Portal",
        code: "portal",
        system: "http://terminology.hl7.org/CodeSystem/verificationresult-communication-method",
    },
    /**
     * Code: pull
     */
    Pull: {
        display: "Pull",
        code: "pull",
        system: "http://terminology.hl7.org/CodeSystem/verificationresult-communication-method",
    },
    /**
     * Code: push
     */
    Push: {
        display: "Push",
        code: "push",
        system: "http://terminology.hl7.org/CodeSystem/verificationresult-communication-method",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVmVyaWZpY2F0aW9ucmVzdWx0Q29tbXVuaWNhdGlvbk1ldGhvZENvZGluZ3MuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL1ZlcmlmaWNhdGlvbnJlc3VsdENvbW11bmljYXRpb25NZXRob2RDb2RpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQixnREFBZ0Q7QUFDaEQsa0NBQWtDO0FBQ2xDLDRGQUE0RjtBQTBCNUY7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSw0Q0FBNEMsR0FBbUQ7SUFDMUc7O09BRUc7SUFDSCxNQUFNLEVBQUU7UUFDTixPQUFPLEVBQUUsUUFBUTtRQUNqQixJQUFJLEVBQUUsUUFBUTtRQUNkLE1BQU0sRUFBRSwrRUFBK0U7S0FDeEY7SUFDRDs7T0FFRztJQUNILE1BQU0sRUFBRTtRQUNOLE9BQU8sRUFBRSxRQUFRO1FBQ2pCLElBQUksRUFBRSxRQUFRO1FBQ2QsTUFBTSxFQUFFLCtFQUErRTtLQUN4RjtJQUNEOztPQUVHO0lBQ0gsSUFBSSxFQUFFO1FBQ0osT0FBTyxFQUFFLE1BQU07UUFDZixJQUFJLEVBQUUsTUFBTTtRQUNaLE1BQU0sRUFBRSwrRUFBK0U7S0FDeEY7SUFDRDs7T0FFRztJQUNILElBQUksRUFBRTtRQUNKLE9BQU8sRUFBRSxNQUFNO1FBQ2YsSUFBSSxFQUFFLE1BQU07UUFDWixNQUFNLEVBQUUsK0VBQStFO0tBQ3hGO0NBQ08sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNGIuY29yZSB2ZXJzaW9uOiA0LjMuMFxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvdmVyaWZpY2F0aW9ucmVzdWx0LWNvbW11bmljYXRpb24tbWV0aG9kfDQuMy4wXHJcblxyXG5pbXBvcnQgeyBDb2RpbmdBcmdzIH0gZnJvbSAnLi4vZmhpci9Db2RpbmcuanMnXHJcblxyXG4vKipcclxuICogQXR0ZXN0ZWQgaW5mb3JtYXRpb24gbWF5IGJlIHZhbGlkYXRlZCBieSBwcm9jZXNzIHRoYXQgYXJlIG1hbnVhbCBvciBhdXRvbWF0ZWQuIEZvciBhdXRvbWF0ZWQgcHJvY2Vzc2VzIGl0IG1heSBhY2NvbXBsaXNoZWQgYnkgdGhlIHN5c3RlbSBvZiByZWNvcmQgcmVhY2hpbmcgb3V0IHRocm91Z2ggYW5vdGhlciBzeXN0ZW0ncyBBUEkgb3IgaW5mb3JtYXRpb24gbWF5IGJlIHNlbnQgdG8gdGhlIHN5c3RlbSBvZiByZWNvcmQuIFRoaXMgdmFsdWUgc2V0IGRlZmluZXMgYSBzZXQgb2YgY29kZXMgdG8gZGVzY3JpYmluZyB0aGUgcHJvY2VzcywgdGhlIGhvdywgYSByZXNvdXJjZSBvciBkYXRhIGVsZW1lbnQgaXMgdmFsaWRhdGVkLlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgVmVyaWZpY2F0aW9ucmVzdWx0Q29tbXVuaWNhdGlvbk1ldGhvZENvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogbWFudWFsXHJcbiAgICovXHJcbiAgTWFudWFsOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IHBvcnRhbFxyXG4gICAqL1xyXG4gIFBvcnRhbDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiBwdWxsXHJcbiAgICovXHJcbiAgUHVsbDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiBwdXNoXHJcbiAgICovXHJcbiAgUHVzaDogQ29kaW5nQXJncztcclxufVxyXG5cclxuLyoqXHJcbiAqIEF0dGVzdGVkIGluZm9ybWF0aW9uIG1heSBiZSB2YWxpZGF0ZWQgYnkgcHJvY2VzcyB0aGF0IGFyZSBtYW51YWwgb3IgYXV0b21hdGVkLiBGb3IgYXV0b21hdGVkIHByb2Nlc3NlcyBpdCBtYXkgYWNjb21wbGlzaGVkIGJ5IHRoZSBzeXN0ZW0gb2YgcmVjb3JkIHJlYWNoaW5nIG91dCB0aHJvdWdoIGFub3RoZXIgc3lzdGVtJ3MgQVBJIG9yIGluZm9ybWF0aW9uIG1heSBiZSBzZW50IHRvIHRoZSBzeXN0ZW0gb2YgcmVjb3JkLiBUaGlzIHZhbHVlIHNldCBkZWZpbmVzIGEgc2V0IG9mIGNvZGVzIHRvIGRlc2NyaWJpbmcgdGhlIHByb2Nlc3MsIHRoZSBob3csIGEgcmVzb3VyY2Ugb3IgZGF0YSBlbGVtZW50IGlzIHZhbGlkYXRlZC5cclxuICovXHJcbmV4cG9ydCBjb25zdCBWZXJpZmljYXRpb25yZXN1bHRDb21tdW5pY2F0aW9uTWV0aG9kQ29kaW5nczpWZXJpZmljYXRpb25yZXN1bHRDb21tdW5pY2F0aW9uTWV0aG9kQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBDb2RlOiBtYW51YWxcclxuICAgKi9cclxuICBNYW51YWw6IHtcclxuICAgIGRpc3BsYXk6IFwiTWFudWFsXCIsXHJcbiAgICBjb2RlOiBcIm1hbnVhbFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vdmVyaWZpY2F0aW9ucmVzdWx0LWNvbW11bmljYXRpb24tbWV0aG9kXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiBwb3J0YWxcclxuICAgKi9cclxuICBQb3J0YWw6IHtcclxuICAgIGRpc3BsYXk6IFwiUG9ydGFsXCIsXHJcbiAgICBjb2RlOiBcInBvcnRhbFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vdmVyaWZpY2F0aW9ucmVzdWx0LWNvbW11bmljYXRpb24tbWV0aG9kXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiBwdWxsXHJcbiAgICovXHJcbiAgUHVsbDoge1xyXG4gICAgZGlzcGxheTogXCJQdWxsXCIsXHJcbiAgICBjb2RlOiBcInB1bGxcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL3ZlcmlmaWNhdGlvbnJlc3VsdC1jb21tdW5pY2F0aW9uLW1ldGhvZFwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogcHVzaFxyXG4gICAqL1xyXG4gIFB1c2g6IHtcclxuICAgIGRpc3BsYXk6IFwiUHVzaFwiLFxyXG4gICAgY29kZTogXCJwdXNoXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS92ZXJpZmljYXRpb25yZXN1bHQtY29tbXVuaWNhdGlvbi1tZXRob2RcIixcclxuICB9LFxyXG59IGFzIGNvbnN0O1xyXG4iXX0=