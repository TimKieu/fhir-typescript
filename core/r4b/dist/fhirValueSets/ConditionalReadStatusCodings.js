// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/conditional-read-status|4.3.0
/**
 * A code that indicates how the server supports conditional read.
 */
export const ConditionalReadStatusCodings = {
    /**
     * full-support: Conditional reads are supported, with both If-Modified-Since and If-None-Match HTTP Headers.
     */
    FullSupport: {
        display: "Full Support",
        code: "full-support",
        system: "http://hl7.org/fhir/conditional-read-status",
    },
    /**
     * modified-since: Conditional reads are supported, but only with the If-Modified-Since HTTP Header.
     */
    IfModifiedSince: {
        display: "If-Modified-Since",
        code: "modified-since",
        system: "http://hl7.org/fhir/conditional-read-status",
    },
    /**
     * not-match: Conditional reads are supported, but only with the If-None-Match HTTP Header.
     */
    IfNoneMatch: {
        display: "If-None-Match",
        code: "not-match",
        system: "http://hl7.org/fhir/conditional-read-status",
    },
    /**
     * not-supported: No support for conditional reads.
     */
    NotSupported: {
        display: "Not Supported",
        code: "not-supported",
        system: "http://hl7.org/fhir/conditional-read-status",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29uZGl0aW9uYWxSZWFkU3RhdHVzQ29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvQ29uZGl0aW9uYWxSZWFkU3RhdHVzQ29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsZ0RBQWdEO0FBQ2hELGtDQUFrQztBQUNsQyw0RUFBNEU7QUEwQjVFOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sNEJBQTRCLEdBQW1DO0lBQzFFOztPQUVHO0lBQ0gsV0FBVyxFQUFFO1FBQ1gsT0FBTyxFQUFFLGNBQWM7UUFDdkIsSUFBSSxFQUFFLGNBQWM7UUFDcEIsTUFBTSxFQUFFLDZDQUE2QztLQUN0RDtJQUNEOztPQUVHO0lBQ0gsZUFBZSxFQUFFO1FBQ2YsT0FBTyxFQUFFLG1CQUFtQjtRQUM1QixJQUFJLEVBQUUsZ0JBQWdCO1FBQ3RCLE1BQU0sRUFBRSw2Q0FBNkM7S0FDdEQ7SUFDRDs7T0FFRztJQUNILFdBQVcsRUFBRTtRQUNYLE9BQU8sRUFBRSxlQUFlO1FBQ3hCLElBQUksRUFBRSxXQUFXO1FBQ2pCLE1BQU0sRUFBRSw2Q0FBNkM7S0FDdEQ7SUFDRDs7T0FFRztJQUNILFlBQVksRUFBRTtRQUNaLE9BQU8sRUFBRSxlQUFlO1FBQ3hCLElBQUksRUFBRSxlQUFlO1FBQ3JCLE1BQU0sRUFBRSw2Q0FBNkM7S0FDdEQ7Q0FDTyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0Yi5jb3JlIHZlcnNpb246IDQuMy4wXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9jb25kaXRpb25hbC1yZWFkLXN0YXR1c3w0LjMuMFxyXG5cclxuaW1wb3J0IHsgQ29kaW5nQXJncyB9IGZyb20gJy4uL2ZoaXIvQ29kaW5nLmpzJ1xyXG5cclxuLyoqXHJcbiAqIEEgY29kZSB0aGF0IGluZGljYXRlcyBob3cgdGhlIHNlcnZlciBzdXBwb3J0cyBjb25kaXRpb25hbCByZWFkLlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgQ29uZGl0aW9uYWxSZWFkU3RhdHVzQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBmdWxsLXN1cHBvcnQ6IENvbmRpdGlvbmFsIHJlYWRzIGFyZSBzdXBwb3J0ZWQsIHdpdGggYm90aCBJZi1Nb2RpZmllZC1TaW5jZSBhbmQgSWYtTm9uZS1NYXRjaCBIVFRQIEhlYWRlcnMuXHJcbiAgICovXHJcbiAgRnVsbFN1cHBvcnQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogbW9kaWZpZWQtc2luY2U6IENvbmRpdGlvbmFsIHJlYWRzIGFyZSBzdXBwb3J0ZWQsIGJ1dCBvbmx5IHdpdGggdGhlIElmLU1vZGlmaWVkLVNpbmNlIEhUVFAgSGVhZGVyLlxyXG4gICAqL1xyXG4gIElmTW9kaWZpZWRTaW5jZTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBub3QtbWF0Y2g6IENvbmRpdGlvbmFsIHJlYWRzIGFyZSBzdXBwb3J0ZWQsIGJ1dCBvbmx5IHdpdGggdGhlIElmLU5vbmUtTWF0Y2ggSFRUUCBIZWFkZXIuXHJcbiAgICovXHJcbiAgSWZOb25lTWF0Y2g6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogbm90LXN1cHBvcnRlZDogTm8gc3VwcG9ydCBmb3IgY29uZGl0aW9uYWwgcmVhZHMuXHJcbiAgICovXHJcbiAgTm90U3VwcG9ydGVkOiBDb2RpbmdBcmdzO1xyXG59XHJcblxyXG4vKipcclxuICogQSBjb2RlIHRoYXQgaW5kaWNhdGVzIGhvdyB0aGUgc2VydmVyIHN1cHBvcnRzIGNvbmRpdGlvbmFsIHJlYWQuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgQ29uZGl0aW9uYWxSZWFkU3RhdHVzQ29kaW5nczpDb25kaXRpb25hbFJlYWRTdGF0dXNDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIGZ1bGwtc3VwcG9ydDogQ29uZGl0aW9uYWwgcmVhZHMgYXJlIHN1cHBvcnRlZCwgd2l0aCBib3RoIElmLU1vZGlmaWVkLVNpbmNlIGFuZCBJZi1Ob25lLU1hdGNoIEhUVFAgSGVhZGVycy5cclxuICAgKi9cclxuICBGdWxsU3VwcG9ydDoge1xyXG4gICAgZGlzcGxheTogXCJGdWxsIFN1cHBvcnRcIixcclxuICAgIGNvZGU6IFwiZnVsbC1zdXBwb3J0XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9jb25kaXRpb25hbC1yZWFkLXN0YXR1c1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogbW9kaWZpZWQtc2luY2U6IENvbmRpdGlvbmFsIHJlYWRzIGFyZSBzdXBwb3J0ZWQsIGJ1dCBvbmx5IHdpdGggdGhlIElmLU1vZGlmaWVkLVNpbmNlIEhUVFAgSGVhZGVyLlxyXG4gICAqL1xyXG4gIElmTW9kaWZpZWRTaW5jZToge1xyXG4gICAgZGlzcGxheTogXCJJZi1Nb2RpZmllZC1TaW5jZVwiLFxyXG4gICAgY29kZTogXCJtb2RpZmllZC1zaW5jZVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvY29uZGl0aW9uYWwtcmVhZC1zdGF0dXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIG5vdC1tYXRjaDogQ29uZGl0aW9uYWwgcmVhZHMgYXJlIHN1cHBvcnRlZCwgYnV0IG9ubHkgd2l0aCB0aGUgSWYtTm9uZS1NYXRjaCBIVFRQIEhlYWRlci5cclxuICAgKi9cclxuICBJZk5vbmVNYXRjaDoge1xyXG4gICAgZGlzcGxheTogXCJJZi1Ob25lLU1hdGNoXCIsXHJcbiAgICBjb2RlOiBcIm5vdC1tYXRjaFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvY29uZGl0aW9uYWwtcmVhZC1zdGF0dXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIG5vdC1zdXBwb3J0ZWQ6IE5vIHN1cHBvcnQgZm9yIGNvbmRpdGlvbmFsIHJlYWRzLlxyXG4gICAqL1xyXG4gIE5vdFN1cHBvcnRlZDoge1xyXG4gICAgZGlzcGxheTogXCJOb3QgU3VwcG9ydGVkXCIsXHJcbiAgICBjb2RlOiBcIm5vdC1zdXBwb3J0ZWRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2NvbmRpdGlvbmFsLXJlYWQtc3RhdHVzXCIsXHJcbiAgfSxcclxufSBhcyBjb25zdDtcclxuIl19