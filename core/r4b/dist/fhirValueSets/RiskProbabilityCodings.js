// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/risk-probability|4.3.0
/**
 * Codes representing the likelihood of a particular outcome in a risk assessment.
 */
export const RiskProbabilityCodings = {
    /**
     * certain: The specified outcome is effectively guaranteed.
     */
    Certain: {
        display: "Certain",
        code: "certain",
        system: "http://terminology.hl7.org/CodeSystem/risk-probability",
    },
    /**
     * high: The specified outcome is more likely to occur than not.
     */
    HighLikelihood: {
        display: "High likelihood",
        code: "high",
        system: "http://terminology.hl7.org/CodeSystem/risk-probability",
    },
    /**
     * low: The specified outcome is possible but unlikely.
     */
    LowLikelihood: {
        display: "Low likelihood",
        code: "low",
        system: "http://terminology.hl7.org/CodeSystem/risk-probability",
    },
    /**
     * moderate: The specified outcome has a reasonable likelihood of occurrence.
     */
    ModerateLikelihood: {
        display: "Moderate likelihood",
        code: "moderate",
        system: "http://terminology.hl7.org/CodeSystem/risk-probability",
    },
    /**
     * negligible: The specified outcome is exceptionally unlikely.
     */
    NegligibleLikelihood: {
        display: "Negligible likelihood",
        code: "negligible",
        system: "http://terminology.hl7.org/CodeSystem/risk-probability",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmlza1Byb2JhYmlsaXR5Q29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvUmlza1Byb2JhYmlsaXR5Q29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsZ0RBQWdEO0FBQ2hELGtDQUFrQztBQUNsQyxxRUFBcUU7QUE4QnJFOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sc0JBQXNCLEdBQTZCO0lBQzlEOztPQUVHO0lBQ0gsT0FBTyxFQUFFO1FBQ1AsT0FBTyxFQUFFLFNBQVM7UUFDbEIsSUFBSSxFQUFFLFNBQVM7UUFDZixNQUFNLEVBQUUsd0RBQXdEO0tBQ2pFO0lBQ0Q7O09BRUc7SUFDSCxjQUFjLEVBQUU7UUFDZCxPQUFPLEVBQUUsaUJBQWlCO1FBQzFCLElBQUksRUFBRSxNQUFNO1FBQ1osTUFBTSxFQUFFLHdEQUF3RDtLQUNqRTtJQUNEOztPQUVHO0lBQ0gsYUFBYSxFQUFFO1FBQ2IsT0FBTyxFQUFFLGdCQUFnQjtRQUN6QixJQUFJLEVBQUUsS0FBSztRQUNYLE1BQU0sRUFBRSx3REFBd0Q7S0FDakU7SUFDRDs7T0FFRztJQUNILGtCQUFrQixFQUFFO1FBQ2xCLE9BQU8sRUFBRSxxQkFBcUI7UUFDOUIsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLHdEQUF3RDtLQUNqRTtJQUNEOztPQUVHO0lBQ0gsb0JBQW9CLEVBQUU7UUFDcEIsT0FBTyxFQUFFLHVCQUF1QjtRQUNoQyxJQUFJLEVBQUUsWUFBWTtRQUNsQixNQUFNLEVBQUUsd0RBQXdEO0tBQ2pFO0NBQ08sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNGIuY29yZSB2ZXJzaW9uOiA0LjMuMFxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvcmlzay1wcm9iYWJpbGl0eXw0LjMuMFxyXG5cclxuaW1wb3J0IHsgQ29kaW5nQXJncyB9IGZyb20gJy4uL2ZoaXIvQ29kaW5nLmpzJ1xyXG5cclxuLyoqXHJcbiAqIENvZGVzIHJlcHJlc2VudGluZyB0aGUgbGlrZWxpaG9vZCBvZiBhIHBhcnRpY3VsYXIgb3V0Y29tZSBpbiBhIHJpc2sgYXNzZXNzbWVudC5cclxuICovXHJcbmV4cG9ydCB0eXBlIFJpc2tQcm9iYWJpbGl0eUNvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogY2VydGFpbjogVGhlIHNwZWNpZmllZCBvdXRjb21lIGlzIGVmZmVjdGl2ZWx5IGd1YXJhbnRlZWQuXHJcbiAgICovXHJcbiAgQ2VydGFpbjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBoaWdoOiBUaGUgc3BlY2lmaWVkIG91dGNvbWUgaXMgbW9yZSBsaWtlbHkgdG8gb2NjdXIgdGhhbiBub3QuXHJcbiAgICovXHJcbiAgSGlnaExpa2VsaWhvb2Q6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogbG93OiBUaGUgc3BlY2lmaWVkIG91dGNvbWUgaXMgcG9zc2libGUgYnV0IHVubGlrZWx5LlxyXG4gICAqL1xyXG4gIExvd0xpa2VsaWhvb2Q6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogbW9kZXJhdGU6IFRoZSBzcGVjaWZpZWQgb3V0Y29tZSBoYXMgYSByZWFzb25hYmxlIGxpa2VsaWhvb2Qgb2Ygb2NjdXJyZW5jZS5cclxuICAgKi9cclxuICBNb2RlcmF0ZUxpa2VsaWhvb2Q6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogbmVnbGlnaWJsZTogVGhlIHNwZWNpZmllZCBvdXRjb21lIGlzIGV4Y2VwdGlvbmFsbHkgdW5saWtlbHkuXHJcbiAgICovXHJcbiAgTmVnbGlnaWJsZUxpa2VsaWhvb2Q6IENvZGluZ0FyZ3M7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDb2RlcyByZXByZXNlbnRpbmcgdGhlIGxpa2VsaWhvb2Qgb2YgYSBwYXJ0aWN1bGFyIG91dGNvbWUgaW4gYSByaXNrIGFzc2Vzc21lbnQuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgUmlza1Byb2JhYmlsaXR5Q29kaW5nczpSaXNrUHJvYmFiaWxpdHlDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIGNlcnRhaW46IFRoZSBzcGVjaWZpZWQgb3V0Y29tZSBpcyBlZmZlY3RpdmVseSBndWFyYW50ZWVkLlxyXG4gICAqL1xyXG4gIENlcnRhaW46IHtcclxuICAgIGRpc3BsYXk6IFwiQ2VydGFpblwiLFxyXG4gICAgY29kZTogXCJjZXJ0YWluXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9yaXNrLXByb2JhYmlsaXR5XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBoaWdoOiBUaGUgc3BlY2lmaWVkIG91dGNvbWUgaXMgbW9yZSBsaWtlbHkgdG8gb2NjdXIgdGhhbiBub3QuXHJcbiAgICovXHJcbiAgSGlnaExpa2VsaWhvb2Q6IHtcclxuICAgIGRpc3BsYXk6IFwiSGlnaCBsaWtlbGlob29kXCIsXHJcbiAgICBjb2RlOiBcImhpZ2hcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL3Jpc2stcHJvYmFiaWxpdHlcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIGxvdzogVGhlIHNwZWNpZmllZCBvdXRjb21lIGlzIHBvc3NpYmxlIGJ1dCB1bmxpa2VseS5cclxuICAgKi9cclxuICBMb3dMaWtlbGlob29kOiB7XHJcbiAgICBkaXNwbGF5OiBcIkxvdyBsaWtlbGlob29kXCIsXHJcbiAgICBjb2RlOiBcImxvd1wiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vcmlzay1wcm9iYWJpbGl0eVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogbW9kZXJhdGU6IFRoZSBzcGVjaWZpZWQgb3V0Y29tZSBoYXMgYSByZWFzb25hYmxlIGxpa2VsaWhvb2Qgb2Ygb2NjdXJyZW5jZS5cclxuICAgKi9cclxuICBNb2RlcmF0ZUxpa2VsaWhvb2Q6IHtcclxuICAgIGRpc3BsYXk6IFwiTW9kZXJhdGUgbGlrZWxpaG9vZFwiLFxyXG4gICAgY29kZTogXCJtb2RlcmF0ZVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vcmlzay1wcm9iYWJpbGl0eVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogbmVnbGlnaWJsZTogVGhlIHNwZWNpZmllZCBvdXRjb21lIGlzIGV4Y2VwdGlvbmFsbHkgdW5saWtlbHkuXHJcbiAgICovXHJcbiAgTmVnbGlnaWJsZUxpa2VsaWhvb2Q6IHtcclxuICAgIGRpc3BsYXk6IFwiTmVnbGlnaWJsZSBsaWtlbGlob29kXCIsXHJcbiAgICBjb2RlOiBcIm5lZ2xpZ2libGVcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL3Jpc2stcHJvYmFiaWxpdHlcIixcclxuICB9LFxyXG59IGFzIGNvbnN0O1xyXG4iXX0=