// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/research-study-prim-purp-type|4.3.0
/**
 * Codes for the main intent of the study.
 */
export const ResearchStudyPrimPurpTypeCodings = {
    /**
     * basic-science: One or more interventions for examining the basic mechanism of action (for example, physiology or biomechanics of an intervention).
     */
    BasicScience: {
        display: "Basic Science",
        code: "basic-science",
        system: "http://terminology.hl7.org/CodeSystem/research-study-prim-purp-type",
    },
    /**
     * device-feasibility: An intervention of a device product is being evaluated to determine the feasibility of the product or to test a prototype device and not health outcomes. Such studies are conducted to confirm the design and operating specifications of a device before beginning a full clinical trial.
     */
    DeviceFeasibility: {
        display: "Device Feasibility",
        code: "device-feasibility",
        system: "http://terminology.hl7.org/CodeSystem/research-study-prim-purp-type",
    },
    /**
     * diagnostic: One or more interventions are being evaluated for identifying a disease or health condition.
     */
    Diagnostic: {
        display: "Diagnostic",
        code: "diagnostic",
        system: "http://terminology.hl7.org/CodeSystem/research-study-prim-purp-type",
    },
    /**
     * health-services-research: One or more interventions for evaluating the delivery, processes, management, organization, or financing of healthcare.
     */
    HealthServicesResearch: {
        display: "Health Services Research",
        code: "health-services-research",
        system: "http://terminology.hl7.org/CodeSystem/research-study-prim-purp-type",
    },
    /**
     * prevention: One or more interventions are being assessed for preventing the development of a specific disease or health condition.
     */
    Prevention: {
        display: "Prevention",
        code: "prevention",
        system: "http://terminology.hl7.org/CodeSystem/research-study-prim-purp-type",
    },
    /**
     * screening: One or more interventions are assessed or examined for identifying a condition, or risk factors for a condition, in people who are not yet known to have the condition or risk factor.
     */
    Screening: {
        display: "Screening",
        code: "screening",
        system: "http://terminology.hl7.org/CodeSystem/research-study-prim-purp-type",
    },
    /**
     * supportive-care: One or more interventions are evaluated for maximizing comfort, minimizing side effects, or mitigating against a decline in the participant's health or function.
     */
    SupportiveCare: {
        display: "Supportive Care",
        code: "supportive-care",
        system: "http://terminology.hl7.org/CodeSystem/research-study-prim-purp-type",
    },
    /**
     * treatment: One or more interventions are being evaluated for treating a disease, syndrome, or condition.
     */
    Treatment: {
        display: "Treatment",
        code: "treatment",
        system: "http://terminology.hl7.org/CodeSystem/research-study-prim-purp-type",
    },
};
//# sourceMappingURL=data:application/json;base64,