// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/clinicalimpression-prognosis|4.3.0
/**
 * Example value set for clinical impression prognosis.
 */
export const ClinicalimpressionPrognosisCodings = {
    /**
     * Code: 170968001
     */
    PrognosisGood: {
        display: "Prognosis good",
        code: "170968001",
        system: "http://snomed.info/sct",
    },
    /**
     * Code: 170969009
     */
    PrognosisBad: {
        display: "Prognosis bad",
        code: "170969009",
        system: "http://snomed.info/sct",
    },
    /**
     * Code: 170970005
     */
    PrognosisUncertain: {
        display: "Prognosis uncertain",
        code: "170970005",
        system: "http://snomed.info/sct",
    },
    /**
     * Code: 365858006
     */
    PrognosisOutlookFinding: {
        display: "Prognosis/outlook finding",
        code: "365858006",
        system: "http://snomed.info/sct",
    },
    /**
     * Code: 60484009
     */
    ConditionalPrognosis: {
        display: "Conditional prognosis",
        code: "60484009",
        system: "http://snomed.info/sct",
    },
    /**
     * Code: 65872000
     */
    FairPrognosis: {
        display: "Fair prognosis",
        code: "65872000",
        system: "http://snomed.info/sct",
    },
    /**
     * Code: 67334001
     */
    GuardedPrognosis: {
        display: "Guarded prognosis",
        code: "67334001",
        system: "http://snomed.info/sct",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2xpbmljYWxpbXByZXNzaW9uUHJvZ25vc2lzQ29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvQ2xpbmljYWxpbXByZXNzaW9uUHJvZ25vc2lzQ29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsZ0RBQWdEO0FBQ2hELGtDQUFrQztBQUNsQyxpRkFBaUY7QUFzQ2pGOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sa0NBQWtDLEdBQXlDO0lBQ3RGOztPQUVHO0lBQ0gsYUFBYSxFQUFFO1FBQ2IsT0FBTyxFQUFFLGdCQUFnQjtRQUN6QixJQUFJLEVBQUUsV0FBVztRQUNqQixNQUFNLEVBQUUsd0JBQXdCO0tBQ2pDO0lBQ0Q7O09BRUc7SUFDSCxZQUFZLEVBQUU7UUFDWixPQUFPLEVBQUUsZUFBZTtRQUN4QixJQUFJLEVBQUUsV0FBVztRQUNqQixNQUFNLEVBQUUsd0JBQXdCO0tBQ2pDO0lBQ0Q7O09BRUc7SUFDSCxrQkFBa0IsRUFBRTtRQUNsQixPQUFPLEVBQUUscUJBQXFCO1FBQzlCLElBQUksRUFBRSxXQUFXO1FBQ2pCLE1BQU0sRUFBRSx3QkFBd0I7S0FDakM7SUFDRDs7T0FFRztJQUNILHVCQUF1QixFQUFFO1FBQ3ZCLE9BQU8sRUFBRSwyQkFBMkI7UUFDcEMsSUFBSSxFQUFFLFdBQVc7UUFDakIsTUFBTSxFQUFFLHdCQUF3QjtLQUNqQztJQUNEOztPQUVHO0lBQ0gsb0JBQW9CLEVBQUU7UUFDcEIsT0FBTyxFQUFFLHVCQUF1QjtRQUNoQyxJQUFJLEVBQUUsVUFBVTtRQUNoQixNQUFNLEVBQUUsd0JBQXdCO0tBQ2pDO0lBQ0Q7O09BRUc7SUFDSCxhQUFhLEVBQUU7UUFDYixPQUFPLEVBQUUsZ0JBQWdCO1FBQ3pCLElBQUksRUFBRSxVQUFVO1FBQ2hCLE1BQU0sRUFBRSx3QkFBd0I7S0FDakM7SUFDRDs7T0FFRztJQUNILGdCQUFnQixFQUFFO1FBQ2hCLE9BQU8sRUFBRSxtQkFBbUI7UUFDNUIsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLHdCQUF3QjtLQUNqQztDQUNPLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjRiLmNvcmUgdmVyc2lvbjogNC4zLjBcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L2NsaW5pY2FsaW1wcmVzc2lvbi1wcm9nbm9zaXN8NC4zLjBcclxuXHJcbmltcG9ydCB7IENvZGluZ0FyZ3MgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiBFeGFtcGxlIHZhbHVlIHNldCBmb3IgY2xpbmljYWwgaW1wcmVzc2lvbiBwcm9nbm9zaXMuXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBDbGluaWNhbGltcHJlc3Npb25Qcm9nbm9zaXNDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IDE3MDk2ODAwMVxyXG4gICAqL1xyXG4gIFByb2dub3Npc0dvb2Q6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogMTcwOTY5MDA5XHJcbiAgICovXHJcbiAgUHJvZ25vc2lzQmFkOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IDE3MDk3MDAwNVxyXG4gICAqL1xyXG4gIFByb2dub3Npc1VuY2VydGFpbjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiAzNjU4NTgwMDZcclxuICAgKi9cclxuICBQcm9nbm9zaXNPdXRsb29rRmluZGluZzogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiA2MDQ4NDAwOVxyXG4gICAqL1xyXG4gIENvbmRpdGlvbmFsUHJvZ25vc2lzOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IDY1ODcyMDAwXHJcbiAgICovXHJcbiAgRmFpclByb2dub3NpczogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiA2NzMzNDAwMVxyXG4gICAqL1xyXG4gIEd1YXJkZWRQcm9nbm9zaXM6IENvZGluZ0FyZ3M7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBFeGFtcGxlIHZhbHVlIHNldCBmb3IgY2xpbmljYWwgaW1wcmVzc2lvbiBwcm9nbm9zaXMuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgQ2xpbmljYWxpbXByZXNzaW9uUHJvZ25vc2lzQ29kaW5nczpDbGluaWNhbGltcHJlc3Npb25Qcm9nbm9zaXNDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IDE3MDk2ODAwMVxyXG4gICAqL1xyXG4gIFByb2dub3Npc0dvb2Q6IHtcclxuICAgIGRpc3BsYXk6IFwiUHJvZ25vc2lzIGdvb2RcIixcclxuICAgIGNvZGU6IFwiMTcwOTY4MDAxXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Nub21lZC5pbmZvL3NjdFwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogMTcwOTY5MDA5XHJcbiAgICovXHJcbiAgUHJvZ25vc2lzQmFkOiB7XHJcbiAgICBkaXNwbGF5OiBcIlByb2dub3NpcyBiYWRcIixcclxuICAgIGNvZGU6IFwiMTcwOTY5MDA5XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Nub21lZC5pbmZvL3NjdFwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogMTcwOTcwMDA1XHJcbiAgICovXHJcbiAgUHJvZ25vc2lzVW5jZXJ0YWluOiB7XHJcbiAgICBkaXNwbGF5OiBcIlByb2dub3NpcyB1bmNlcnRhaW5cIixcclxuICAgIGNvZGU6IFwiMTcwOTcwMDA1XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Nub21lZC5pbmZvL3NjdFwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogMzY1ODU4MDA2XHJcbiAgICovXHJcbiAgUHJvZ25vc2lzT3V0bG9va0ZpbmRpbmc6IHtcclxuICAgIGRpc3BsYXk6IFwiUHJvZ25vc2lzL291dGxvb2sgZmluZGluZ1wiLFxyXG4gICAgY29kZTogXCIzNjU4NTgwMDZcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vc25vbWVkLmluZm8vc2N0XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiA2MDQ4NDAwOVxyXG4gICAqL1xyXG4gIENvbmRpdGlvbmFsUHJvZ25vc2lzOiB7XHJcbiAgICBkaXNwbGF5OiBcIkNvbmRpdGlvbmFsIHByb2dub3Npc1wiLFxyXG4gICAgY29kZTogXCI2MDQ4NDAwOVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9zbm9tZWQuaW5mby9zY3RcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IDY1ODcyMDAwXHJcbiAgICovXHJcbiAgRmFpclByb2dub3Npczoge1xyXG4gICAgZGlzcGxheTogXCJGYWlyIHByb2dub3Npc1wiLFxyXG4gICAgY29kZTogXCI2NTg3MjAwMFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9zbm9tZWQuaW5mby9zY3RcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IDY3MzM0MDAxXHJcbiAgICovXHJcbiAgR3VhcmRlZFByb2dub3Npczoge1xyXG4gICAgZGlzcGxheTogXCJHdWFyZGVkIHByb2dub3Npc1wiLFxyXG4gICAgY29kZTogXCI2NzMzNDAwMVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9zbm9tZWQuaW5mby9zY3RcIixcclxuICB9LFxyXG59IGFzIGNvbnN0O1xyXG4iXX0=