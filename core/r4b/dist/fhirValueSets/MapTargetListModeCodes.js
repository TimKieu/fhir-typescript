// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/map-target-list-mode|4.3.0
/**
 * If field is a list, how to manage the production.
 */
export const MapTargetListModeCodes = {
    /**
     * collate: re-use the first item in the list, and keep adding content to it.
     */
    Collate: "collate",
    /**
     * first: when the target list is being assembled, the items for this rule go first. If more than one rule defines a first item (for a given instance of mapping) then this is an error.
     */
    First: "first",
    /**
     * last: when the target list is being assembled, the items for this rule go last. If more than one rule defines a last item (for a given instance of mapping) then this is an error.
     */
    Last: "last",
    /**
     * share: the target instance is shared with the target instances generated by another rule (up to the first common n items, then create new ones).
     */
    Share: "share",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWFwVGFyZ2V0TGlzdE1vZGVDb2Rlcy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvTWFwVGFyZ2V0TGlzdE1vZGVDb2Rlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsZ0RBQWdEO0FBQ2hELGtDQUFrQztBQUNsQyx5RUFBeUU7QUFFekU7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxzQkFBc0IsR0FBRztJQUNwQzs7T0FFRztJQUNILE9BQU8sRUFBRSxTQUFTO0lBQ2xCOztPQUVHO0lBQ0gsS0FBSyxFQUFFLE9BQU87SUFDZDs7T0FFRztJQUNILElBQUksRUFBRSxNQUFNO0lBQ1o7O09BRUc7SUFDSCxLQUFLLEVBQUUsT0FBTztDQUNOLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjRiLmNvcmUgdmVyc2lvbjogNC4zLjBcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L21hcC10YXJnZXQtbGlzdC1tb2RlfDQuMy4wXHJcblxyXG4vKipcclxuICogSWYgZmllbGQgaXMgYSBsaXN0LCBob3cgdG8gbWFuYWdlIHRoZSBwcm9kdWN0aW9uLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IE1hcFRhcmdldExpc3RNb2RlQ29kZXMgPSB7XHJcbiAgLyoqXHJcbiAgICogY29sbGF0ZTogcmUtdXNlIHRoZSBmaXJzdCBpdGVtIGluIHRoZSBsaXN0LCBhbmQga2VlcCBhZGRpbmcgY29udGVudCB0byBpdC5cclxuICAgKi9cclxuICBDb2xsYXRlOiBcImNvbGxhdGVcIixcclxuICAvKipcclxuICAgKiBmaXJzdDogd2hlbiB0aGUgdGFyZ2V0IGxpc3QgaXMgYmVpbmcgYXNzZW1ibGVkLCB0aGUgaXRlbXMgZm9yIHRoaXMgcnVsZSBnbyBmaXJzdC4gSWYgbW9yZSB0aGFuIG9uZSBydWxlIGRlZmluZXMgYSBmaXJzdCBpdGVtIChmb3IgYSBnaXZlbiBpbnN0YW5jZSBvZiBtYXBwaW5nKSB0aGVuIHRoaXMgaXMgYW4gZXJyb3IuXHJcbiAgICovXHJcbiAgRmlyc3Q6IFwiZmlyc3RcIixcclxuICAvKipcclxuICAgKiBsYXN0OiB3aGVuIHRoZSB0YXJnZXQgbGlzdCBpcyBiZWluZyBhc3NlbWJsZWQsIHRoZSBpdGVtcyBmb3IgdGhpcyBydWxlIGdvIGxhc3QuIElmIG1vcmUgdGhhbiBvbmUgcnVsZSBkZWZpbmVzIGEgbGFzdCBpdGVtIChmb3IgYSBnaXZlbiBpbnN0YW5jZSBvZiBtYXBwaW5nKSB0aGVuIHRoaXMgaXMgYW4gZXJyb3IuXHJcbiAgICovXHJcbiAgTGFzdDogXCJsYXN0XCIsXHJcbiAgLyoqXHJcbiAgICogc2hhcmU6IHRoZSB0YXJnZXQgaW5zdGFuY2UgaXMgc2hhcmVkIHdpdGggdGhlIHRhcmdldCBpbnN0YW5jZXMgZ2VuZXJhdGVkIGJ5IGFub3RoZXIgcnVsZSAodXAgdG8gdGhlIGZpcnN0IGNvbW1vbiBuIGl0ZW1zLCB0aGVuIGNyZWF0ZSBuZXcgb25lcykuXHJcbiAgICovXHJcbiAgU2hhcmU6IFwic2hhcmVcIixcclxufSBhcyBjb25zdDtcclxuXHJcbi8qKlxyXG4gKiBJZiBmaWVsZCBpcyBhIGxpc3QsIGhvdyB0byBtYW5hZ2UgdGhlIHByb2R1Y3Rpb24uXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBNYXBUYXJnZXRMaXN0TW9kZUNvZGVUeXBlID0gdHlwZW9mIE1hcFRhcmdldExpc3RNb2RlQ29kZXNba2V5b2YgdHlwZW9mIE1hcFRhcmdldExpc3RNb2RlQ29kZXNdO1xyXG4iXX0=