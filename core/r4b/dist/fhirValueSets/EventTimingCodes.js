// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/event-timing|4.3.0
/**
 * Real world event relating to the schedule.
 */
export const EventTimingCodes = {
    /**
     * Code: AC
     */
    AC: "AC",
    /**
     * Code: ACD
     */
    ACD: "ACD",
    /**
     * Code: ACM
     */
    ACM: "ACM",
    /**
     * Code: ACV
     */
    ACV: "ACV",
    /**
     * AFT: Event occurs during the afternoon. The exact time is unspecified and established by institution convention or patient interpretation.
     */
    Afternoon: "AFT",
    /**
     * AFT.early: Event occurs during the early afternoon. The exact time is unspecified and established by institution convention or patient interpretation.
     */
    EarlyAfternoon: "AFT.early",
    /**
     * AFT.late: Event occurs during the late afternoon. The exact time is unspecified and established by institution convention or patient interpretation.
     */
    LateAfternoon: "AFT.late",
    /**
     * Code: C
     */
    C: "C",
    /**
     * Code: CD
     */
    CD: "CD",
    /**
     * Code: CM
     */
    CM: "CM",
    /**
     * Code: CV
     */
    CV: "CV",
    /**
     * EVE: Event occurs during the evening. The exact time is unspecified and established by institution convention or patient interpretation.
     */
    Evening: "EVE",
    /**
     * EVE.early: Event occurs during the early evening. The exact time is unspecified and established by institution convention or patient interpretation.
     */
    EarlyEvening: "EVE.early",
    /**
     * EVE.late: Event occurs during the late evening. The exact time is unspecified and established by institution convention or patient interpretation.
     */
    LateEvening: "EVE.late",
    /**
     * Code: HS
     */
    HS: "HS",
    /**
     * MORN: Event occurs during the morning. The exact time is unspecified and established by institution convention or patient interpretation.
     */
    Morning: "MORN",
    /**
     * MORN.early: Event occurs during the early morning. The exact time is unspecified and established by institution convention or patient interpretation.
     */
    EarlyMorning: "MORN.early",
    /**
     * MORN.late: Event occurs during the late morning. The exact time is unspecified and established by institution convention or patient interpretation.
     */
    LateMorning: "MORN.late",
    /**
     * NIGHT: Event occurs during the night. The exact time is unspecified and established by institution convention or patient interpretation.
     */
    Night: "NIGHT",
    /**
     * NOON: Event occurs around 12:00pm. The exact time is unspecified and established by institution convention or patient interpretation.
     */
    Noon: "NOON",
    /**
     * Code: PC
     */
    PC: "PC",
    /**
     * Code: PCD
     */
    PCD: "PCD",
    /**
     * Code: PCM
     */
    PCM: "PCM",
    /**
     * Code: PCV
     */
    PCV: "PCV",
    /**
     * PHS: Event occurs [offset] after subject goes to sleep. The exact time is unspecified and established by institution convention or patient interpretation.
     */
    AfterSleep: "PHS",
    /**
     * Code: WAKE
     */
    WAKE: "WAKE",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRXZlbnRUaW1pbmdDb2Rlcy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvRXZlbnRUaW1pbmdDb2Rlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsZ0RBQWdEO0FBQ2hELGtDQUFrQztBQUNsQyxpRUFBaUU7QUFFakU7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxnQkFBZ0IsR0FBRztJQUM5Qjs7T0FFRztJQUNILEVBQUUsRUFBRSxJQUFJO0lBQ1I7O09BRUc7SUFDSCxHQUFHLEVBQUUsS0FBSztJQUNWOztPQUVHO0lBQ0gsR0FBRyxFQUFFLEtBQUs7SUFDVjs7T0FFRztJQUNILEdBQUcsRUFBRSxLQUFLO0lBQ1Y7O09BRUc7SUFDSCxTQUFTLEVBQUUsS0FBSztJQUNoQjs7T0FFRztJQUNILGNBQWMsRUFBRSxXQUFXO0lBQzNCOztPQUVHO0lBQ0gsYUFBYSxFQUFFLFVBQVU7SUFDekI7O09BRUc7SUFDSCxDQUFDLEVBQUUsR0FBRztJQUNOOztPQUVHO0lBQ0gsRUFBRSxFQUFFLElBQUk7SUFDUjs7T0FFRztJQUNILEVBQUUsRUFBRSxJQUFJO0lBQ1I7O09BRUc7SUFDSCxFQUFFLEVBQUUsSUFBSTtJQUNSOztPQUVHO0lBQ0gsT0FBTyxFQUFFLEtBQUs7SUFDZDs7T0FFRztJQUNILFlBQVksRUFBRSxXQUFXO0lBQ3pCOztPQUVHO0lBQ0gsV0FBVyxFQUFFLFVBQVU7SUFDdkI7O09BRUc7SUFDSCxFQUFFLEVBQUUsSUFBSTtJQUNSOztPQUVHO0lBQ0gsT0FBTyxFQUFFLE1BQU07SUFDZjs7T0FFRztJQUNILFlBQVksRUFBRSxZQUFZO0lBQzFCOztPQUVHO0lBQ0gsV0FBVyxFQUFFLFdBQVc7SUFDeEI7O09BRUc7SUFDSCxLQUFLLEVBQUUsT0FBTztJQUNkOztPQUVHO0lBQ0gsSUFBSSxFQUFFLE1BQU07SUFDWjs7T0FFRztJQUNILEVBQUUsRUFBRSxJQUFJO0lBQ1I7O09BRUc7SUFDSCxHQUFHLEVBQUUsS0FBSztJQUNWOztPQUVHO0lBQ0gsR0FBRyxFQUFFLEtBQUs7SUFDVjs7T0FFRztJQUNILEdBQUcsRUFBRSxLQUFLO0lBQ1Y7O09BRUc7SUFDSCxVQUFVLEVBQUUsS0FBSztJQUNqQjs7T0FFRztJQUNILElBQUksRUFBRSxNQUFNO0NBQ0osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNGIuY29yZSB2ZXJzaW9uOiA0LjMuMFxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvZXZlbnQtdGltaW5nfDQuMy4wXHJcblxyXG4vKipcclxuICogUmVhbCB3b3JsZCBldmVudCByZWxhdGluZyB0byB0aGUgc2NoZWR1bGUuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgRXZlbnRUaW1pbmdDb2RlcyA9IHtcclxuICAvKipcclxuICAgKiBDb2RlOiBBQ1xyXG4gICAqL1xyXG4gIEFDOiBcIkFDXCIsXHJcbiAgLyoqXHJcbiAgICogQ29kZTogQUNEXHJcbiAgICovXHJcbiAgQUNEOiBcIkFDRFwiLFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IEFDTVxyXG4gICAqL1xyXG4gIEFDTTogXCJBQ01cIixcclxuICAvKipcclxuICAgKiBDb2RlOiBBQ1ZcclxuICAgKi9cclxuICBBQ1Y6IFwiQUNWXCIsXHJcbiAgLyoqXHJcbiAgICogQUZUOiBFdmVudCBvY2N1cnMgZHVyaW5nIHRoZSBhZnRlcm5vb24uIFRoZSBleGFjdCB0aW1lIGlzIHVuc3BlY2lmaWVkIGFuZCBlc3RhYmxpc2hlZCBieSBpbnN0aXR1dGlvbiBjb252ZW50aW9uIG9yIHBhdGllbnQgaW50ZXJwcmV0YXRpb24uXHJcbiAgICovXHJcbiAgQWZ0ZXJub29uOiBcIkFGVFwiLFxyXG4gIC8qKlxyXG4gICAqIEFGVC5lYXJseTogRXZlbnQgb2NjdXJzIGR1cmluZyB0aGUgZWFybHkgYWZ0ZXJub29uLiBUaGUgZXhhY3QgdGltZSBpcyB1bnNwZWNpZmllZCBhbmQgZXN0YWJsaXNoZWQgYnkgaW5zdGl0dXRpb24gY29udmVudGlvbiBvciBwYXRpZW50IGludGVycHJldGF0aW9uLlxyXG4gICAqL1xyXG4gIEVhcmx5QWZ0ZXJub29uOiBcIkFGVC5lYXJseVwiLFxyXG4gIC8qKlxyXG4gICAqIEFGVC5sYXRlOiBFdmVudCBvY2N1cnMgZHVyaW5nIHRoZSBsYXRlIGFmdGVybm9vbi4gVGhlIGV4YWN0IHRpbWUgaXMgdW5zcGVjaWZpZWQgYW5kIGVzdGFibGlzaGVkIGJ5IGluc3RpdHV0aW9uIGNvbnZlbnRpb24gb3IgcGF0aWVudCBpbnRlcnByZXRhdGlvbi5cclxuICAgKi9cclxuICBMYXRlQWZ0ZXJub29uOiBcIkFGVC5sYXRlXCIsXHJcbiAgLyoqXHJcbiAgICogQ29kZTogQ1xyXG4gICAqL1xyXG4gIEM6IFwiQ1wiLFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IENEXHJcbiAgICovXHJcbiAgQ0Q6IFwiQ0RcIixcclxuICAvKipcclxuICAgKiBDb2RlOiBDTVxyXG4gICAqL1xyXG4gIENNOiBcIkNNXCIsXHJcbiAgLyoqXHJcbiAgICogQ29kZTogQ1ZcclxuICAgKi9cclxuICBDVjogXCJDVlwiLFxyXG4gIC8qKlxyXG4gICAqIEVWRTogRXZlbnQgb2NjdXJzIGR1cmluZyB0aGUgZXZlbmluZy4gVGhlIGV4YWN0IHRpbWUgaXMgdW5zcGVjaWZpZWQgYW5kIGVzdGFibGlzaGVkIGJ5IGluc3RpdHV0aW9uIGNvbnZlbnRpb24gb3IgcGF0aWVudCBpbnRlcnByZXRhdGlvbi5cclxuICAgKi9cclxuICBFdmVuaW5nOiBcIkVWRVwiLFxyXG4gIC8qKlxyXG4gICAqIEVWRS5lYXJseTogRXZlbnQgb2NjdXJzIGR1cmluZyB0aGUgZWFybHkgZXZlbmluZy4gVGhlIGV4YWN0IHRpbWUgaXMgdW5zcGVjaWZpZWQgYW5kIGVzdGFibGlzaGVkIGJ5IGluc3RpdHV0aW9uIGNvbnZlbnRpb24gb3IgcGF0aWVudCBpbnRlcnByZXRhdGlvbi5cclxuICAgKi9cclxuICBFYXJseUV2ZW5pbmc6IFwiRVZFLmVhcmx5XCIsXHJcbiAgLyoqXHJcbiAgICogRVZFLmxhdGU6IEV2ZW50IG9jY3VycyBkdXJpbmcgdGhlIGxhdGUgZXZlbmluZy4gVGhlIGV4YWN0IHRpbWUgaXMgdW5zcGVjaWZpZWQgYW5kIGVzdGFibGlzaGVkIGJ5IGluc3RpdHV0aW9uIGNvbnZlbnRpb24gb3IgcGF0aWVudCBpbnRlcnByZXRhdGlvbi5cclxuICAgKi9cclxuICBMYXRlRXZlbmluZzogXCJFVkUubGF0ZVwiLFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IEhTXHJcbiAgICovXHJcbiAgSFM6IFwiSFNcIixcclxuICAvKipcclxuICAgKiBNT1JOOiBFdmVudCBvY2N1cnMgZHVyaW5nIHRoZSBtb3JuaW5nLiBUaGUgZXhhY3QgdGltZSBpcyB1bnNwZWNpZmllZCBhbmQgZXN0YWJsaXNoZWQgYnkgaW5zdGl0dXRpb24gY29udmVudGlvbiBvciBwYXRpZW50IGludGVycHJldGF0aW9uLlxyXG4gICAqL1xyXG4gIE1vcm5pbmc6IFwiTU9STlwiLFxyXG4gIC8qKlxyXG4gICAqIE1PUk4uZWFybHk6IEV2ZW50IG9jY3VycyBkdXJpbmcgdGhlIGVhcmx5IG1vcm5pbmcuIFRoZSBleGFjdCB0aW1lIGlzIHVuc3BlY2lmaWVkIGFuZCBlc3RhYmxpc2hlZCBieSBpbnN0aXR1dGlvbiBjb252ZW50aW9uIG9yIHBhdGllbnQgaW50ZXJwcmV0YXRpb24uXHJcbiAgICovXHJcbiAgRWFybHlNb3JuaW5nOiBcIk1PUk4uZWFybHlcIixcclxuICAvKipcclxuICAgKiBNT1JOLmxhdGU6IEV2ZW50IG9jY3VycyBkdXJpbmcgdGhlIGxhdGUgbW9ybmluZy4gVGhlIGV4YWN0IHRpbWUgaXMgdW5zcGVjaWZpZWQgYW5kIGVzdGFibGlzaGVkIGJ5IGluc3RpdHV0aW9uIGNvbnZlbnRpb24gb3IgcGF0aWVudCBpbnRlcnByZXRhdGlvbi5cclxuICAgKi9cclxuICBMYXRlTW9ybmluZzogXCJNT1JOLmxhdGVcIixcclxuICAvKipcclxuICAgKiBOSUdIVDogRXZlbnQgb2NjdXJzIGR1cmluZyB0aGUgbmlnaHQuIFRoZSBleGFjdCB0aW1lIGlzIHVuc3BlY2lmaWVkIGFuZCBlc3RhYmxpc2hlZCBieSBpbnN0aXR1dGlvbiBjb252ZW50aW9uIG9yIHBhdGllbnQgaW50ZXJwcmV0YXRpb24uXHJcbiAgICovXHJcbiAgTmlnaHQ6IFwiTklHSFRcIixcclxuICAvKipcclxuICAgKiBOT09OOiBFdmVudCBvY2N1cnMgYXJvdW5kIDEyOjAwcG0uIFRoZSBleGFjdCB0aW1lIGlzIHVuc3BlY2lmaWVkIGFuZCBlc3RhYmxpc2hlZCBieSBpbnN0aXR1dGlvbiBjb252ZW50aW9uIG9yIHBhdGllbnQgaW50ZXJwcmV0YXRpb24uXHJcbiAgICovXHJcbiAgTm9vbjogXCJOT09OXCIsXHJcbiAgLyoqXHJcbiAgICogQ29kZTogUENcclxuICAgKi9cclxuICBQQzogXCJQQ1wiLFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IFBDRFxyXG4gICAqL1xyXG4gIFBDRDogXCJQQ0RcIixcclxuICAvKipcclxuICAgKiBDb2RlOiBQQ01cclxuICAgKi9cclxuICBQQ006IFwiUENNXCIsXHJcbiAgLyoqXHJcbiAgICogQ29kZTogUENWXHJcbiAgICovXHJcbiAgUENWOiBcIlBDVlwiLFxyXG4gIC8qKlxyXG4gICAqIFBIUzogRXZlbnQgb2NjdXJzIFtvZmZzZXRdIGFmdGVyIHN1YmplY3QgZ29lcyB0byBzbGVlcC4gVGhlIGV4YWN0IHRpbWUgaXMgdW5zcGVjaWZpZWQgYW5kIGVzdGFibGlzaGVkIGJ5IGluc3RpdHV0aW9uIGNvbnZlbnRpb24gb3IgcGF0aWVudCBpbnRlcnByZXRhdGlvbi5cclxuICAgKi9cclxuICBBZnRlclNsZWVwOiBcIlBIU1wiLFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IFdBS0VcclxuICAgKi9cclxuICBXQUtFOiBcIldBS0VcIixcclxufSBhcyBjb25zdDtcclxuXHJcbi8qKlxyXG4gKiBSZWFsIHdvcmxkIGV2ZW50IHJlbGF0aW5nIHRvIHRoZSBzY2hlZHVsZS5cclxuICovXHJcbmV4cG9ydCB0eXBlIEV2ZW50VGltaW5nQ29kZVR5cGUgPSB0eXBlb2YgRXZlbnRUaW1pbmdDb2Rlc1trZXlvZiB0eXBlb2YgRXZlbnRUaW1pbmdDb2Rlc107XHJcbiJdfQ==