// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/expression-language|4.3.0
/**
 * The media type of the expression language.
 */
export const ExpressionLanguageCodings = {
    /**
     * application/x-fhir-query: FHIR's RESTful query syntax - typically independent of base URL.
     */
    FHIRQuery: {
        display: "FHIR Query",
        code: "application/x-fhir-query",
        system: "http://hl7.org/fhir/expression-language",
    },
    /**
     * text/cql: Clinical Quality Language.
     */
    CQL: {
        display: "CQL",
        code: "text/cql",
        system: "http://hl7.org/fhir/expression-language",
    },
    /**
     * text/cql-expression: A Clinical Quality Language expression.
     */
    CQLExpression: {
        display: "CQL Expression",
        code: "text/cql-expression",
        system: "http://hl7.org/fhir/expression-language",
    },
    /**
     * text/cql-identifier: A valid Clinical Quality Language identifier.
     */
    CQLIdentifier: {
        display: "CQL Identifier",
        code: "text/cql-identifier",
        system: "http://hl7.org/fhir/expression-language",
    },
    /**
     * text/fhirpath: FHIRPath.
     */
    FHIRPath: {
        display: "FHIRPath",
        code: "text/fhirpath",
        system: "http://hl7.org/fhir/expression-language",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRXhwcmVzc2lvbkxhbmd1YWdlQ29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvRXhwcmVzc2lvbkxhbmd1YWdlQ29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsZ0RBQWdEO0FBQ2hELGtDQUFrQztBQUNsQyx3RUFBd0U7QUE4QnhFOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0seUJBQXlCLEdBQWdDO0lBQ3BFOztPQUVHO0lBQ0gsU0FBUyxFQUFFO1FBQ1QsT0FBTyxFQUFFLFlBQVk7UUFDckIsSUFBSSxFQUFFLDBCQUEwQjtRQUNoQyxNQUFNLEVBQUUseUNBQXlDO0tBQ2xEO0lBQ0Q7O09BRUc7SUFDSCxHQUFHLEVBQUU7UUFDSCxPQUFPLEVBQUUsS0FBSztRQUNkLElBQUksRUFBRSxVQUFVO1FBQ2hCLE1BQU0sRUFBRSx5Q0FBeUM7S0FDbEQ7SUFDRDs7T0FFRztJQUNILGFBQWEsRUFBRTtRQUNiLE9BQU8sRUFBRSxnQkFBZ0I7UUFDekIsSUFBSSxFQUFFLHFCQUFxQjtRQUMzQixNQUFNLEVBQUUseUNBQXlDO0tBQ2xEO0lBQ0Q7O09BRUc7SUFDSCxhQUFhLEVBQUU7UUFDYixPQUFPLEVBQUUsZ0JBQWdCO1FBQ3pCLElBQUksRUFBRSxxQkFBcUI7UUFDM0IsTUFBTSxFQUFFLHlDQUF5QztLQUNsRDtJQUNEOztPQUVHO0lBQ0gsUUFBUSxFQUFFO1FBQ1IsT0FBTyxFQUFFLFVBQVU7UUFDbkIsSUFBSSxFQUFFLGVBQWU7UUFDckIsTUFBTSxFQUFFLHlDQUF5QztLQUNsRDtDQUNPLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjRiLmNvcmUgdmVyc2lvbjogNC4zLjBcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L2V4cHJlc3Npb24tbGFuZ3VhZ2V8NC4zLjBcclxuXHJcbmltcG9ydCB7IENvZGluZ0FyZ3MgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiBUaGUgbWVkaWEgdHlwZSBvZiB0aGUgZXhwcmVzc2lvbiBsYW5ndWFnZS5cclxuICovXHJcbmV4cG9ydCB0eXBlIEV4cHJlc3Npb25MYW5ndWFnZUNvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogYXBwbGljYXRpb24veC1maGlyLXF1ZXJ5OiBGSElSJ3MgUkVTVGZ1bCBxdWVyeSBzeW50YXggLSB0eXBpY2FsbHkgaW5kZXBlbmRlbnQgb2YgYmFzZSBVUkwuXHJcbiAgICovXHJcbiAgRkhJUlF1ZXJ5OiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIHRleHQvY3FsOiBDbGluaWNhbCBRdWFsaXR5IExhbmd1YWdlLlxyXG4gICAqL1xyXG4gIENRTDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiB0ZXh0L2NxbC1leHByZXNzaW9uOiBBIENsaW5pY2FsIFF1YWxpdHkgTGFuZ3VhZ2UgZXhwcmVzc2lvbi5cclxuICAgKi9cclxuICBDUUxFeHByZXNzaW9uOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIHRleHQvY3FsLWlkZW50aWZpZXI6IEEgdmFsaWQgQ2xpbmljYWwgUXVhbGl0eSBMYW5ndWFnZSBpZGVudGlmaWVyLlxyXG4gICAqL1xyXG4gIENRTElkZW50aWZpZXI6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogdGV4dC9maGlycGF0aDogRkhJUlBhdGguXHJcbiAgICovXHJcbiAgRkhJUlBhdGg6IENvZGluZ0FyZ3M7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBUaGUgbWVkaWEgdHlwZSBvZiB0aGUgZXhwcmVzc2lvbiBsYW5ndWFnZS5cclxuICovXHJcbmV4cG9ydCBjb25zdCBFeHByZXNzaW9uTGFuZ3VhZ2VDb2RpbmdzOkV4cHJlc3Npb25MYW5ndWFnZUNvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogYXBwbGljYXRpb24veC1maGlyLXF1ZXJ5OiBGSElSJ3MgUkVTVGZ1bCBxdWVyeSBzeW50YXggLSB0eXBpY2FsbHkgaW5kZXBlbmRlbnQgb2YgYmFzZSBVUkwuXHJcbiAgICovXHJcbiAgRkhJUlF1ZXJ5OiB7XHJcbiAgICBkaXNwbGF5OiBcIkZISVIgUXVlcnlcIixcclxuICAgIGNvZGU6IFwiYXBwbGljYXRpb24veC1maGlyLXF1ZXJ5XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9leHByZXNzaW9uLWxhbmd1YWdlXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiB0ZXh0L2NxbDogQ2xpbmljYWwgUXVhbGl0eSBMYW5ndWFnZS5cclxuICAgKi9cclxuICBDUUw6IHtcclxuICAgIGRpc3BsYXk6IFwiQ1FMXCIsXHJcbiAgICBjb2RlOiBcInRleHQvY3FsXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9leHByZXNzaW9uLWxhbmd1YWdlXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiB0ZXh0L2NxbC1leHByZXNzaW9uOiBBIENsaW5pY2FsIFF1YWxpdHkgTGFuZ3VhZ2UgZXhwcmVzc2lvbi5cclxuICAgKi9cclxuICBDUUxFeHByZXNzaW9uOiB7XHJcbiAgICBkaXNwbGF5OiBcIkNRTCBFeHByZXNzaW9uXCIsXHJcbiAgICBjb2RlOiBcInRleHQvY3FsLWV4cHJlc3Npb25cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2V4cHJlc3Npb24tbGFuZ3VhZ2VcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIHRleHQvY3FsLWlkZW50aWZpZXI6IEEgdmFsaWQgQ2xpbmljYWwgUXVhbGl0eSBMYW5ndWFnZSBpZGVudGlmaWVyLlxyXG4gICAqL1xyXG4gIENRTElkZW50aWZpZXI6IHtcclxuICAgIGRpc3BsYXk6IFwiQ1FMIElkZW50aWZpZXJcIixcclxuICAgIGNvZGU6IFwidGV4dC9jcWwtaWRlbnRpZmllclwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvZXhwcmVzc2lvbi1sYW5ndWFnZVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogdGV4dC9maGlycGF0aDogRkhJUlBhdGguXHJcbiAgICovXHJcbiAgRkhJUlBhdGg6IHtcclxuICAgIGRpc3BsYXk6IFwiRkhJUlBhdGhcIixcclxuICAgIGNvZGU6IFwidGV4dC9maGlycGF0aFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvZXhwcmVzc2lvbi1sYW5ndWFnZVwiLFxyXG4gIH0sXHJcbn0gYXMgY29uc3Q7XHJcbiJdfQ==