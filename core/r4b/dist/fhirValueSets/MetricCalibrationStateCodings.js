// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/metric-calibration-state|4.3.0
/**
 * Describes the state of a metric calibration.
 */
export const MetricCalibrationStateCodings = {
    /**
     * calibrated: The metric has been calibrated.
     */
    Calibrated: {
        display: "Calibrated",
        code: "calibrated",
        system: "http://hl7.org/fhir/metric-calibration-state",
    },
    /**
     * calibration-required: The metric needs to be calibrated.
     */
    CalibrationRequired: {
        display: "Calibration Required",
        code: "calibration-required",
        system: "http://hl7.org/fhir/metric-calibration-state",
    },
    /**
     * not-calibrated: The metric has not been calibrated.
     */
    NotCalibrated: {
        display: "Not Calibrated",
        code: "not-calibrated",
        system: "http://hl7.org/fhir/metric-calibration-state",
    },
    /**
     * unspecified: The state of calibration of this metric is unspecified.
     */
    Unspecified: {
        display: "Unspecified",
        code: "unspecified",
        system: "http://hl7.org/fhir/metric-calibration-state",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWV0cmljQ2FsaWJyYXRpb25TdGF0ZUNvZGluZ3MuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL01ldHJpY0NhbGlicmF0aW9uU3RhdGVDb2RpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQixnREFBZ0Q7QUFDaEQsa0NBQWtDO0FBQ2xDLDZFQUE2RTtBQTBCN0U7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSw2QkFBNkIsR0FBb0M7SUFDNUU7O09BRUc7SUFDSCxVQUFVLEVBQUU7UUFDVixPQUFPLEVBQUUsWUFBWTtRQUNyQixJQUFJLEVBQUUsWUFBWTtRQUNsQixNQUFNLEVBQUUsOENBQThDO0tBQ3ZEO0lBQ0Q7O09BRUc7SUFDSCxtQkFBbUIsRUFBRTtRQUNuQixPQUFPLEVBQUUsc0JBQXNCO1FBQy9CLElBQUksRUFBRSxzQkFBc0I7UUFDNUIsTUFBTSxFQUFFLDhDQUE4QztLQUN2RDtJQUNEOztPQUVHO0lBQ0gsYUFBYSxFQUFFO1FBQ2IsT0FBTyxFQUFFLGdCQUFnQjtRQUN6QixJQUFJLEVBQUUsZ0JBQWdCO1FBQ3RCLE1BQU0sRUFBRSw4Q0FBOEM7S0FDdkQ7SUFDRDs7T0FFRztJQUNILFdBQVcsRUFBRTtRQUNYLE9BQU8sRUFBRSxhQUFhO1FBQ3RCLElBQUksRUFBRSxhQUFhO1FBQ25CLE1BQU0sRUFBRSw4Q0FBOEM7S0FDdkQ7Q0FDTyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0Yi5jb3JlIHZlcnNpb246IDQuMy4wXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9tZXRyaWMtY2FsaWJyYXRpb24tc3RhdGV8NC4zLjBcclxuXHJcbmltcG9ydCB7IENvZGluZ0FyZ3MgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiBEZXNjcmliZXMgdGhlIHN0YXRlIG9mIGEgbWV0cmljIGNhbGlicmF0aW9uLlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgTWV0cmljQ2FsaWJyYXRpb25TdGF0ZUNvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogY2FsaWJyYXRlZDogVGhlIG1ldHJpYyBoYXMgYmVlbiBjYWxpYnJhdGVkLlxyXG4gICAqL1xyXG4gIENhbGlicmF0ZWQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogY2FsaWJyYXRpb24tcmVxdWlyZWQ6IFRoZSBtZXRyaWMgbmVlZHMgdG8gYmUgY2FsaWJyYXRlZC5cclxuICAgKi9cclxuICBDYWxpYnJhdGlvblJlcXVpcmVkOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIG5vdC1jYWxpYnJhdGVkOiBUaGUgbWV0cmljIGhhcyBub3QgYmVlbiBjYWxpYnJhdGVkLlxyXG4gICAqL1xyXG4gIE5vdENhbGlicmF0ZWQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogdW5zcGVjaWZpZWQ6IFRoZSBzdGF0ZSBvZiBjYWxpYnJhdGlvbiBvZiB0aGlzIG1ldHJpYyBpcyB1bnNwZWNpZmllZC5cclxuICAgKi9cclxuICBVbnNwZWNpZmllZDogQ29kaW5nQXJncztcclxufVxyXG5cclxuLyoqXHJcbiAqIERlc2NyaWJlcyB0aGUgc3RhdGUgb2YgYSBtZXRyaWMgY2FsaWJyYXRpb24uXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgTWV0cmljQ2FsaWJyYXRpb25TdGF0ZUNvZGluZ3M6TWV0cmljQ2FsaWJyYXRpb25TdGF0ZUNvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogY2FsaWJyYXRlZDogVGhlIG1ldHJpYyBoYXMgYmVlbiBjYWxpYnJhdGVkLlxyXG4gICAqL1xyXG4gIENhbGlicmF0ZWQ6IHtcclxuICAgIGRpc3BsYXk6IFwiQ2FsaWJyYXRlZFwiLFxyXG4gICAgY29kZTogXCJjYWxpYnJhdGVkXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9tZXRyaWMtY2FsaWJyYXRpb24tc3RhdGVcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIGNhbGlicmF0aW9uLXJlcXVpcmVkOiBUaGUgbWV0cmljIG5lZWRzIHRvIGJlIGNhbGlicmF0ZWQuXHJcbiAgICovXHJcbiAgQ2FsaWJyYXRpb25SZXF1aXJlZDoge1xyXG4gICAgZGlzcGxheTogXCJDYWxpYnJhdGlvbiBSZXF1aXJlZFwiLFxyXG4gICAgY29kZTogXCJjYWxpYnJhdGlvbi1yZXF1aXJlZFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvbWV0cmljLWNhbGlicmF0aW9uLXN0YXRlXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBub3QtY2FsaWJyYXRlZDogVGhlIG1ldHJpYyBoYXMgbm90IGJlZW4gY2FsaWJyYXRlZC5cclxuICAgKi9cclxuICBOb3RDYWxpYnJhdGVkOiB7XHJcbiAgICBkaXNwbGF5OiBcIk5vdCBDYWxpYnJhdGVkXCIsXHJcbiAgICBjb2RlOiBcIm5vdC1jYWxpYnJhdGVkXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9tZXRyaWMtY2FsaWJyYXRpb24tc3RhdGVcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIHVuc3BlY2lmaWVkOiBUaGUgc3RhdGUgb2YgY2FsaWJyYXRpb24gb2YgdGhpcyBtZXRyaWMgaXMgdW5zcGVjaWZpZWQuXHJcbiAgICovXHJcbiAgVW5zcGVjaWZpZWQ6IHtcclxuICAgIGRpc3BsYXk6IFwiVW5zcGVjaWZpZWRcIixcclxuICAgIGNvZGU6IFwidW5zcGVjaWZpZWRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL21ldHJpYy1jYWxpYnJhdGlvbi1zdGF0ZVwiLFxyXG4gIH0sXHJcbn0gYXMgY29uc3Q7XHJcbiJdfQ==