// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://terminology.hl7.org/ValueSet/v2-0276|2.0.0
/**
 * Value Set of codes that describe the kind of appointment or the reason why an appointment has been scheduled.
 */
export const V20276Codings = {
    /**
     * Code: CHECKUP
     */
    ARoutineCheckUpSuchAsAnAnnualPhysical: {
        display: "A routine check-up, such as an annual physical",
        code: "CHECKUP",
        system: "http://terminology.hl7.org/CodeSystem/v2-0276",
    },
    /**
     * Code: EMERGENCY
     */
    EmergencyAppointment: {
        display: "Emergency appointment",
        code: "EMERGENCY",
        system: "http://terminology.hl7.org/CodeSystem/v2-0276",
    },
    /**
     * Code: FOLLOWUP
     */
    AFollowUpVisitFromAPreviousAppointment: {
        display: "A follow up visit from a previous appointment",
        code: "FOLLOWUP",
        system: "http://terminology.hl7.org/CodeSystem/v2-0276",
    },
    /**
     * Code: ROUTINE
     */
    RoutineAppointmentDefaultIfNotValued: {
        display: "Routine appointment - default if not valued",
        code: "ROUTINE",
        system: "http://terminology.hl7.org/CodeSystem/v2-0276",
    },
    /**
     * Code: WALKIN
     */
    APreviouslyUnscheduledWalkInVisit: {
        display: "A previously unscheduled walk-in visit",
        code: "WALKIN",
        system: "http://terminology.hl7.org/CodeSystem/v2-0276",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVjIwMjc2Q29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvVjIwMjc2Q29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsZ0RBQWdEO0FBQ2hELGtDQUFrQztBQUNsQyxtRUFBbUU7QUE4Qm5FOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sYUFBYSxHQUFvQjtJQUM1Qzs7T0FFRztJQUNILHFDQUFxQyxFQUFFO1FBQ3JDLE9BQU8sRUFBRSxnREFBZ0Q7UUFDekQsSUFBSSxFQUFFLFNBQVM7UUFDZixNQUFNLEVBQUUsK0NBQStDO0tBQ3hEO0lBQ0Q7O09BRUc7SUFDSCxvQkFBb0IsRUFBRTtRQUNwQixPQUFPLEVBQUUsdUJBQXVCO1FBQ2hDLElBQUksRUFBRSxXQUFXO1FBQ2pCLE1BQU0sRUFBRSwrQ0FBK0M7S0FDeEQ7SUFDRDs7T0FFRztJQUNILHNDQUFzQyxFQUFFO1FBQ3RDLE9BQU8sRUFBRSwrQ0FBK0M7UUFDeEQsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLCtDQUErQztLQUN4RDtJQUNEOztPQUVHO0lBQ0gsb0NBQW9DLEVBQUU7UUFDcEMsT0FBTyxFQUFFLDZDQUE2QztRQUN0RCxJQUFJLEVBQUUsU0FBUztRQUNmLE1BQU0sRUFBRSwrQ0FBK0M7S0FDeEQ7SUFDRDs7T0FFRztJQUNILGlDQUFpQyxFQUFFO1FBQ2pDLE9BQU8sRUFBRSx3Q0FBd0M7UUFDakQsSUFBSSxFQUFFLFFBQVE7UUFDZCxNQUFNLEVBQUUsK0NBQStDO0tBQ3hEO0NBQ08sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNGIuY29yZSB2ZXJzaW9uOiA0LjMuMFxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL1ZhbHVlU2V0L3YyLTAyNzZ8Mi4wLjBcclxuXHJcbmltcG9ydCB7IENvZGluZ0FyZ3MgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiBWYWx1ZSBTZXQgb2YgY29kZXMgdGhhdCBkZXNjcmliZSB0aGUga2luZCBvZiBhcHBvaW50bWVudCBvciB0aGUgcmVhc29uIHdoeSBhbiBhcHBvaW50bWVudCBoYXMgYmVlbiBzY2hlZHVsZWQuXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBWMjAyNzZDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IENIRUNLVVBcclxuICAgKi9cclxuICBBUm91dGluZUNoZWNrVXBTdWNoQXNBbkFubnVhbFBoeXNpY2FsOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IEVNRVJHRU5DWVxyXG4gICAqL1xyXG4gIEVtZXJnZW5jeUFwcG9pbnRtZW50OiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IEZPTExPV1VQXHJcbiAgICovXHJcbiAgQUZvbGxvd1VwVmlzaXRGcm9tQVByZXZpb3VzQXBwb2ludG1lbnQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogUk9VVElORVxyXG4gICAqL1xyXG4gIFJvdXRpbmVBcHBvaW50bWVudERlZmF1bHRJZk5vdFZhbHVlZDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiBXQUxLSU5cclxuICAgKi9cclxuICBBUHJldmlvdXNseVVuc2NoZWR1bGVkV2Fsa0luVmlzaXQ6IENvZGluZ0FyZ3M7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBWYWx1ZSBTZXQgb2YgY29kZXMgdGhhdCBkZXNjcmliZSB0aGUga2luZCBvZiBhcHBvaW50bWVudCBvciB0aGUgcmVhc29uIHdoeSBhbiBhcHBvaW50bWVudCBoYXMgYmVlbiBzY2hlZHVsZWQuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgVjIwMjc2Q29kaW5nczpWMjAyNzZDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IENIRUNLVVBcclxuICAgKi9cclxuICBBUm91dGluZUNoZWNrVXBTdWNoQXNBbkFubnVhbFBoeXNpY2FsOiB7XHJcbiAgICBkaXNwbGF5OiBcIkEgcm91dGluZSBjaGVjay11cCwgc3VjaCBhcyBhbiBhbm51YWwgcGh5c2ljYWxcIixcclxuICAgIGNvZGU6IFwiQ0hFQ0tVUFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vdjItMDI3NlwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogRU1FUkdFTkNZXHJcbiAgICovXHJcbiAgRW1lcmdlbmN5QXBwb2ludG1lbnQ6IHtcclxuICAgIGRpc3BsYXk6IFwiRW1lcmdlbmN5IGFwcG9pbnRtZW50XCIsXHJcbiAgICBjb2RlOiBcIkVNRVJHRU5DWVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vdjItMDI3NlwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogRk9MTE9XVVBcclxuICAgKi9cclxuICBBRm9sbG93VXBWaXNpdEZyb21BUHJldmlvdXNBcHBvaW50bWVudDoge1xyXG4gICAgZGlzcGxheTogXCJBIGZvbGxvdyB1cCB2aXNpdCBmcm9tIGEgcHJldmlvdXMgYXBwb2ludG1lbnRcIixcclxuICAgIGNvZGU6IFwiRk9MTE9XVVBcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL3YyLTAyNzZcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IFJPVVRJTkVcclxuICAgKi9cclxuICBSb3V0aW5lQXBwb2ludG1lbnREZWZhdWx0SWZOb3RWYWx1ZWQ6IHtcclxuICAgIGRpc3BsYXk6IFwiUm91dGluZSBhcHBvaW50bWVudCAtIGRlZmF1bHQgaWYgbm90IHZhbHVlZFwiLFxyXG4gICAgY29kZTogXCJST1VUSU5FXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS92Mi0wMjc2XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiBXQUxLSU5cclxuICAgKi9cclxuICBBUHJldmlvdXNseVVuc2NoZWR1bGVkV2Fsa0luVmlzaXQ6IHtcclxuICAgIGRpc3BsYXk6IFwiQSBwcmV2aW91c2x5IHVuc2NoZWR1bGVkIHdhbGstaW4gdmlzaXRcIixcclxuICAgIGNvZGU6IFwiV0FMS0lOXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS92Mi0wMjc2XCIsXHJcbiAgfSxcclxufSBhcyBjb25zdDtcclxuIl19