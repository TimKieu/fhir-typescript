// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/reference-handling-policy|4.3.0
/**
 * A set of flags that defines how references are supported.
 */
export const ReferenceHandlingPolicyCodes = {
    /**
     * enforced: The server enforces that references have integrity - e.g. it ensures that references can always be resolved. This is typically the case for clinical record systems, but often not the case for middleware/proxy systems.
     */
    ReferenceIntegrityEnforced: "enforced",
    /**
     * literal: The server supports and populates Literal references (i.e. using Reference.reference) where they are known (this code does not guarantee that all references are literal; see 'enforced').
     */
    LiteralReferences: "literal",
    /**
     * local: The server does not support references that point to other servers.
     */
    LocalReferencesOnly: "local",
    /**
     * logical: The server allows logical references (i.e. using Reference.identifier).
     */
    LogicalReferences: "logical",
    /**
     * resolves: The server will attempt to resolve logical references to literal references - i.e. converting Reference.identifier to Reference.reference (if resolution fails, the server may still accept resources; see logical).
     */
    ResolvesReferences: "resolves",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVmZXJlbmNlSGFuZGxpbmdQb2xpY3lDb2Rlcy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvUmVmZXJlbmNlSGFuZGxpbmdQb2xpY3lDb2Rlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsZ0RBQWdEO0FBQ2hELGtDQUFrQztBQUNsQyw4RUFBOEU7QUFFOUU7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSw0QkFBNEIsR0FBRztJQUMxQzs7T0FFRztJQUNILDBCQUEwQixFQUFFLFVBQVU7SUFDdEM7O09BRUc7SUFDSCxpQkFBaUIsRUFBRSxTQUFTO0lBQzVCOztPQUVHO0lBQ0gsbUJBQW1CLEVBQUUsT0FBTztJQUM1Qjs7T0FFRztJQUNILGlCQUFpQixFQUFFLFNBQVM7SUFDNUI7O09BRUc7SUFDSCxrQkFBa0IsRUFBRSxVQUFVO0NBQ3RCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjRiLmNvcmUgdmVyc2lvbjogNC4zLjBcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L3JlZmVyZW5jZS1oYW5kbGluZy1wb2xpY3l8NC4zLjBcclxuXHJcbi8qKlxyXG4gKiBBIHNldCBvZiBmbGFncyB0aGF0IGRlZmluZXMgaG93IHJlZmVyZW5jZXMgYXJlIHN1cHBvcnRlZC5cclxuICovXHJcbmV4cG9ydCBjb25zdCBSZWZlcmVuY2VIYW5kbGluZ1BvbGljeUNvZGVzID0ge1xyXG4gIC8qKlxyXG4gICAqIGVuZm9yY2VkOiBUaGUgc2VydmVyIGVuZm9yY2VzIHRoYXQgcmVmZXJlbmNlcyBoYXZlIGludGVncml0eSAtIGUuZy4gaXQgZW5zdXJlcyB0aGF0IHJlZmVyZW5jZXMgY2FuIGFsd2F5cyBiZSByZXNvbHZlZC4gVGhpcyBpcyB0eXBpY2FsbHkgdGhlIGNhc2UgZm9yIGNsaW5pY2FsIHJlY29yZCBzeXN0ZW1zLCBidXQgb2Z0ZW4gbm90IHRoZSBjYXNlIGZvciBtaWRkbGV3YXJlL3Byb3h5IHN5c3RlbXMuXHJcbiAgICovXHJcbiAgUmVmZXJlbmNlSW50ZWdyaXR5RW5mb3JjZWQ6IFwiZW5mb3JjZWRcIixcclxuICAvKipcclxuICAgKiBsaXRlcmFsOiBUaGUgc2VydmVyIHN1cHBvcnRzIGFuZCBwb3B1bGF0ZXMgTGl0ZXJhbCByZWZlcmVuY2VzIChpLmUuIHVzaW5nIFJlZmVyZW5jZS5yZWZlcmVuY2UpIHdoZXJlIHRoZXkgYXJlIGtub3duICh0aGlzIGNvZGUgZG9lcyBub3QgZ3VhcmFudGVlIHRoYXQgYWxsIHJlZmVyZW5jZXMgYXJlIGxpdGVyYWw7IHNlZSAnZW5mb3JjZWQnKS5cclxuICAgKi9cclxuICBMaXRlcmFsUmVmZXJlbmNlczogXCJsaXRlcmFsXCIsXHJcbiAgLyoqXHJcbiAgICogbG9jYWw6IFRoZSBzZXJ2ZXIgZG9lcyBub3Qgc3VwcG9ydCByZWZlcmVuY2VzIHRoYXQgcG9pbnQgdG8gb3RoZXIgc2VydmVycy5cclxuICAgKi9cclxuICBMb2NhbFJlZmVyZW5jZXNPbmx5OiBcImxvY2FsXCIsXHJcbiAgLyoqXHJcbiAgICogbG9naWNhbDogVGhlIHNlcnZlciBhbGxvd3MgbG9naWNhbCByZWZlcmVuY2VzIChpLmUuIHVzaW5nIFJlZmVyZW5jZS5pZGVudGlmaWVyKS5cclxuICAgKi9cclxuICBMb2dpY2FsUmVmZXJlbmNlczogXCJsb2dpY2FsXCIsXHJcbiAgLyoqXHJcbiAgICogcmVzb2x2ZXM6IFRoZSBzZXJ2ZXIgd2lsbCBhdHRlbXB0IHRvIHJlc29sdmUgbG9naWNhbCByZWZlcmVuY2VzIHRvIGxpdGVyYWwgcmVmZXJlbmNlcyAtIGkuZS4gY29udmVydGluZyBSZWZlcmVuY2UuaWRlbnRpZmllciB0byBSZWZlcmVuY2UucmVmZXJlbmNlIChpZiByZXNvbHV0aW9uIGZhaWxzLCB0aGUgc2VydmVyIG1heSBzdGlsbCBhY2NlcHQgcmVzb3VyY2VzOyBzZWUgbG9naWNhbCkuXHJcbiAgICovXHJcbiAgUmVzb2x2ZXNSZWZlcmVuY2VzOiBcInJlc29sdmVzXCIsXHJcbn0gYXMgY29uc3Q7XHJcblxyXG4vKipcclxuICogQSBzZXQgb2YgZmxhZ3MgdGhhdCBkZWZpbmVzIGhvdyByZWZlcmVuY2VzIGFyZSBzdXBwb3J0ZWQuXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBSZWZlcmVuY2VIYW5kbGluZ1BvbGljeUNvZGVUeXBlID0gdHlwZW9mIFJlZmVyZW5jZUhhbmRsaW5nUG9saWN5Q29kZXNba2V5b2YgdHlwZW9mIFJlZmVyZW5jZUhhbmRsaW5nUG9saWN5Q29kZXNdO1xyXG4iXX0=