// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/immunization-status-reason|4.3.0
/**
 * The value set to instantiate this attribute should be drawn from a terminologically robust code system that consists of or contains concepts to support describing the reason why a dose of vaccine was not administered. This value set is provided as a suggestive example.
 */
export const ImmunizationStatusReasonCodes = {
    /**
     * Code: 171257003
     */
    NoConsentTetanusLowDoseDiphtheriaVaccineFinding: "171257003",
    /**
     * Code: 171265000
     */
    PertussisVaccineRefused: "171265000",
    /**
     * Code: 171266004
     */
    NoConsentDiphtheriaImmunization: "171266004",
    /**
     * Code: 171267008
     */
    NoConsentTetanusImmunization: "171267008",
    /**
     * Code: 171268003
     */
    PolioImmunizationRefused: "171268003",
    /**
     * Code: 171269006
     */
    NoConsentMeaslesImmunization: "171269006",
    /**
     * Code: 171270007
     */
    NoConsentRubellaImmunization: "171270007",
    /**
     * Code: 171271006
     */
    NoConsentBCG: "171271006",
    /**
     * Code: 171272004
     */
    NoConsentInfluenzaImmunization: "171272004",
    /**
     * Code: 171280006
     */
    NoConsentForMMR: "171280006",
    /**
     * Code: 171283008
     */
    NoConsentForAnyPrimaryImmunizationFinding: "171283008",
    /**
     * Code: 171285001
     */
    NoConsentPreSchoolVaccinations: "171285001",
    /**
     * Code: 171286000
     */
    NoConsentSchoolExitVaccinations: "171286000",
    /**
     * Code: 171291004
     */
    NoConsentHaemophilusInfluenzaeTypeBImmunizationFinding: "171291004",
    /**
     * Code: 171292006
     */
    NoConsentPneumococcalImmunization: "171292006",
    /**
     * Code: 171293001
     */
    NoConsentForMRMeaslesRubellaVaccine: "171293001",
    /**
     * Code: 268559007
     */
    NoConsentForAnyImmunization: "268559007",
    /**
     * Code: 310376006
     */
    ImmunizationConsentNotGiven: "310376006",
    /**
     * Code: 310839003
     */
    NoConsentForMMR1: "310839003",
    /**
     * Code: 310840001
     */
    NoConsentForMeaslesMumpsRubellaTwo: "310840001",
    /**
     * Code: 314768003
     */
    NoConsentDTPImmunization: "314768003",
    /**
     * Code: 314769006
     */
    NoConsentDTImmunization: "314769006",
    /**
     * Code: 314936001
     */
    NoConsentForMeningitisCImmunization: "314936001",
    /**
     * Code: 407598009
     */
    NoConsentFor3rdHIBBooster: "407598009",
    /**
     * Code: IMMUNE
     */
    IMMUNE: "IMMUNE",
    /**
     * Code: MEDPREC
     */
    MEDPREC: "MEDPREC",
    /**
     * Code: OSTOCK
     */
    OSTOCK: "OSTOCK",
    /**
     * Code: PATOBJ
     */
    PATOBJ: "PATOBJ",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSW1tdW5pemF0aW9uU3RhdHVzUmVhc29uQ29kZXMuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL0ltbXVuaXphdGlvblN0YXR1c1JlYXNvbkNvZGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQixnREFBZ0Q7QUFDaEQsa0NBQWtDO0FBQ2xDLCtFQUErRTtBQUUvRTs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLDZCQUE2QixHQUFHO0lBQzNDOztPQUVHO0lBQ0gsK0NBQStDLEVBQUUsV0FBVztJQUM1RDs7T0FFRztJQUNILHVCQUF1QixFQUFFLFdBQVc7SUFDcEM7O09BRUc7SUFDSCwrQkFBK0IsRUFBRSxXQUFXO0lBQzVDOztPQUVHO0lBQ0gsNEJBQTRCLEVBQUUsV0FBVztJQUN6Qzs7T0FFRztJQUNILHdCQUF3QixFQUFFLFdBQVc7SUFDckM7O09BRUc7SUFDSCw0QkFBNEIsRUFBRSxXQUFXO0lBQ3pDOztPQUVHO0lBQ0gsNEJBQTRCLEVBQUUsV0FBVztJQUN6Qzs7T0FFRztJQUNILFlBQVksRUFBRSxXQUFXO0lBQ3pCOztPQUVHO0lBQ0gsOEJBQThCLEVBQUUsV0FBVztJQUMzQzs7T0FFRztJQUNILGVBQWUsRUFBRSxXQUFXO0lBQzVCOztPQUVHO0lBQ0gseUNBQXlDLEVBQUUsV0FBVztJQUN0RDs7T0FFRztJQUNILDhCQUE4QixFQUFFLFdBQVc7SUFDM0M7O09BRUc7SUFDSCwrQkFBK0IsRUFBRSxXQUFXO0lBQzVDOztPQUVHO0lBQ0gsc0RBQXNELEVBQUUsV0FBVztJQUNuRTs7T0FFRztJQUNILGlDQUFpQyxFQUFFLFdBQVc7SUFDOUM7O09BRUc7SUFDSCxtQ0FBbUMsRUFBRSxXQUFXO0lBQ2hEOztPQUVHO0lBQ0gsMkJBQTJCLEVBQUUsV0FBVztJQUN4Qzs7T0FFRztJQUNILDJCQUEyQixFQUFFLFdBQVc7SUFDeEM7O09BRUc7SUFDSCxnQkFBZ0IsRUFBRSxXQUFXO0lBQzdCOztPQUVHO0lBQ0gsa0NBQWtDLEVBQUUsV0FBVztJQUMvQzs7T0FFRztJQUNILHdCQUF3QixFQUFFLFdBQVc7SUFDckM7O09BRUc7SUFDSCx1QkFBdUIsRUFBRSxXQUFXO0lBQ3BDOztPQUVHO0lBQ0gsbUNBQW1DLEVBQUUsV0FBVztJQUNoRDs7T0FFRztJQUNILHlCQUF5QixFQUFFLFdBQVc7SUFDdEM7O09BRUc7SUFDSCxNQUFNLEVBQUUsUUFBUTtJQUNoQjs7T0FFRztJQUNILE9BQU8sRUFBRSxTQUFTO0lBQ2xCOztPQUVHO0lBQ0gsTUFBTSxFQUFFLFFBQVE7SUFDaEI7O09BRUc7SUFDSCxNQUFNLEVBQUUsUUFBUTtDQUNSLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjRiLmNvcmUgdmVyc2lvbjogNC4zLjBcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L2ltbXVuaXphdGlvbi1zdGF0dXMtcmVhc29ufDQuMy4wXHJcblxyXG4vKipcclxuICogVGhlIHZhbHVlIHNldCB0byBpbnN0YW50aWF0ZSB0aGlzIGF0dHJpYnV0ZSBzaG91bGQgYmUgZHJhd24gZnJvbSBhIHRlcm1pbm9sb2dpY2FsbHkgcm9idXN0IGNvZGUgc3lzdGVtIHRoYXQgY29uc2lzdHMgb2Ygb3IgY29udGFpbnMgY29uY2VwdHMgdG8gc3VwcG9ydCBkZXNjcmliaW5nIHRoZSByZWFzb24gd2h5IGEgZG9zZSBvZiB2YWNjaW5lIHdhcyBub3QgYWRtaW5pc3RlcmVkLiBUaGlzIHZhbHVlIHNldCBpcyBwcm92aWRlZCBhcyBhIHN1Z2dlc3RpdmUgZXhhbXBsZS5cclxuICovXHJcbmV4cG9ydCBjb25zdCBJbW11bml6YXRpb25TdGF0dXNSZWFzb25Db2RlcyA9IHtcclxuICAvKipcclxuICAgKiBDb2RlOiAxNzEyNTcwMDNcclxuICAgKi9cclxuICBOb0NvbnNlbnRUZXRhbnVzTG93RG9zZURpcGh0aGVyaWFWYWNjaW5lRmluZGluZzogXCIxNzEyNTcwMDNcIixcclxuICAvKipcclxuICAgKiBDb2RlOiAxNzEyNjUwMDBcclxuICAgKi9cclxuICBQZXJ0dXNzaXNWYWNjaW5lUmVmdXNlZDogXCIxNzEyNjUwMDBcIixcclxuICAvKipcclxuICAgKiBDb2RlOiAxNzEyNjYwMDRcclxuICAgKi9cclxuICBOb0NvbnNlbnREaXBodGhlcmlhSW1tdW5pemF0aW9uOiBcIjE3MTI2NjAwNFwiLFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IDE3MTI2NzAwOFxyXG4gICAqL1xyXG4gIE5vQ29uc2VudFRldGFudXNJbW11bml6YXRpb246IFwiMTcxMjY3MDA4XCIsXHJcbiAgLyoqXHJcbiAgICogQ29kZTogMTcxMjY4MDAzXHJcbiAgICovXHJcbiAgUG9saW9JbW11bml6YXRpb25SZWZ1c2VkOiBcIjE3MTI2ODAwM1wiLFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IDE3MTI2OTAwNlxyXG4gICAqL1xyXG4gIE5vQ29uc2VudE1lYXNsZXNJbW11bml6YXRpb246IFwiMTcxMjY5MDA2XCIsXHJcbiAgLyoqXHJcbiAgICogQ29kZTogMTcxMjcwMDA3XHJcbiAgICovXHJcbiAgTm9Db25zZW50UnViZWxsYUltbXVuaXphdGlvbjogXCIxNzEyNzAwMDdcIixcclxuICAvKipcclxuICAgKiBDb2RlOiAxNzEyNzEwMDZcclxuICAgKi9cclxuICBOb0NvbnNlbnRCQ0c6IFwiMTcxMjcxMDA2XCIsXHJcbiAgLyoqXHJcbiAgICogQ29kZTogMTcxMjcyMDA0XHJcbiAgICovXHJcbiAgTm9Db25zZW50SW5mbHVlbnphSW1tdW5pemF0aW9uOiBcIjE3MTI3MjAwNFwiLFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IDE3MTI4MDAwNlxyXG4gICAqL1xyXG4gIE5vQ29uc2VudEZvck1NUjogXCIxNzEyODAwMDZcIixcclxuICAvKipcclxuICAgKiBDb2RlOiAxNzEyODMwMDhcclxuICAgKi9cclxuICBOb0NvbnNlbnRGb3JBbnlQcmltYXJ5SW1tdW5pemF0aW9uRmluZGluZzogXCIxNzEyODMwMDhcIixcclxuICAvKipcclxuICAgKiBDb2RlOiAxNzEyODUwMDFcclxuICAgKi9cclxuICBOb0NvbnNlbnRQcmVTY2hvb2xWYWNjaW5hdGlvbnM6IFwiMTcxMjg1MDAxXCIsXHJcbiAgLyoqXHJcbiAgICogQ29kZTogMTcxMjg2MDAwXHJcbiAgICovXHJcbiAgTm9Db25zZW50U2Nob29sRXhpdFZhY2NpbmF0aW9uczogXCIxNzEyODYwMDBcIixcclxuICAvKipcclxuICAgKiBDb2RlOiAxNzEyOTEwMDRcclxuICAgKi9cclxuICBOb0NvbnNlbnRIYWVtb3BoaWx1c0luZmx1ZW56YWVUeXBlQkltbXVuaXphdGlvbkZpbmRpbmc6IFwiMTcxMjkxMDA0XCIsXHJcbiAgLyoqXHJcbiAgICogQ29kZTogMTcxMjkyMDA2XHJcbiAgICovXHJcbiAgTm9Db25zZW50UG5ldW1vY29jY2FsSW1tdW5pemF0aW9uOiBcIjE3MTI5MjAwNlwiLFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IDE3MTI5MzAwMVxyXG4gICAqL1xyXG4gIE5vQ29uc2VudEZvck1STWVhc2xlc1J1YmVsbGFWYWNjaW5lOiBcIjE3MTI5MzAwMVwiLFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IDI2ODU1OTAwN1xyXG4gICAqL1xyXG4gIE5vQ29uc2VudEZvckFueUltbXVuaXphdGlvbjogXCIyNjg1NTkwMDdcIixcclxuICAvKipcclxuICAgKiBDb2RlOiAzMTAzNzYwMDZcclxuICAgKi9cclxuICBJbW11bml6YXRpb25Db25zZW50Tm90R2l2ZW46IFwiMzEwMzc2MDA2XCIsXHJcbiAgLyoqXHJcbiAgICogQ29kZTogMzEwODM5MDAzXHJcbiAgICovXHJcbiAgTm9Db25zZW50Rm9yTU1SMTogXCIzMTA4MzkwMDNcIixcclxuICAvKipcclxuICAgKiBDb2RlOiAzMTA4NDAwMDFcclxuICAgKi9cclxuICBOb0NvbnNlbnRGb3JNZWFzbGVzTXVtcHNSdWJlbGxhVHdvOiBcIjMxMDg0MDAwMVwiLFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IDMxNDc2ODAwM1xyXG4gICAqL1xyXG4gIE5vQ29uc2VudERUUEltbXVuaXphdGlvbjogXCIzMTQ3NjgwMDNcIixcclxuICAvKipcclxuICAgKiBDb2RlOiAzMTQ3NjkwMDZcclxuICAgKi9cclxuICBOb0NvbnNlbnREVEltbXVuaXphdGlvbjogXCIzMTQ3NjkwMDZcIixcclxuICAvKipcclxuICAgKiBDb2RlOiAzMTQ5MzYwMDFcclxuICAgKi9cclxuICBOb0NvbnNlbnRGb3JNZW5pbmdpdGlzQ0ltbXVuaXphdGlvbjogXCIzMTQ5MzYwMDFcIixcclxuICAvKipcclxuICAgKiBDb2RlOiA0MDc1OTgwMDlcclxuICAgKi9cclxuICBOb0NvbnNlbnRGb3IzcmRISUJCb29zdGVyOiBcIjQwNzU5ODAwOVwiLFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IElNTVVORVxyXG4gICAqL1xyXG4gIElNTVVORTogXCJJTU1VTkVcIixcclxuICAvKipcclxuICAgKiBDb2RlOiBNRURQUkVDXHJcbiAgICovXHJcbiAgTUVEUFJFQzogXCJNRURQUkVDXCIsXHJcbiAgLyoqXHJcbiAgICogQ29kZTogT1NUT0NLXHJcbiAgICovXHJcbiAgT1NUT0NLOiBcIk9TVE9DS1wiLFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IFBBVE9CSlxyXG4gICAqL1xyXG4gIFBBVE9CSjogXCJQQVRPQkpcIixcclxufSBhcyBjb25zdDtcclxuXHJcbi8qKlxyXG4gKiBUaGUgdmFsdWUgc2V0IHRvIGluc3RhbnRpYXRlIHRoaXMgYXR0cmlidXRlIHNob3VsZCBiZSBkcmF3biBmcm9tIGEgdGVybWlub2xvZ2ljYWxseSByb2J1c3QgY29kZSBzeXN0ZW0gdGhhdCBjb25zaXN0cyBvZiBvciBjb250YWlucyBjb25jZXB0cyB0byBzdXBwb3J0IGRlc2NyaWJpbmcgdGhlIHJlYXNvbiB3aHkgYSBkb3NlIG9mIHZhY2NpbmUgd2FzIG5vdCBhZG1pbmlzdGVyZWQuIFRoaXMgdmFsdWUgc2V0IGlzIHByb3ZpZGVkIGFzIGEgc3VnZ2VzdGl2ZSBleGFtcGxlLlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgSW1tdW5pemF0aW9uU3RhdHVzUmVhc29uQ29kZVR5cGUgPSB0eXBlb2YgSW1tdW5pemF0aW9uU3RhdHVzUmVhc29uQ29kZXNba2V5b2YgdHlwZW9mIEltbXVuaXphdGlvblN0YXR1c1JlYXNvbkNvZGVzXTtcclxuIl19