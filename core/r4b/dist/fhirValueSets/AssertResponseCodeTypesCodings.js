// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/assert-response-code-types|4.3.0
/**
 * The type of response code to use for assertion.
 */
export const AssertResponseCodeTypesCodings = {
    /**
     * bad: Response code is 400.
     */
    Bad: {
        display: "bad",
        code: "bad",
        system: "http://hl7.org/fhir/assert-response-code-types",
    },
    /**
     * conflict: Response code is 409.
     */
    Conflict: {
        display: "conflict",
        code: "conflict",
        system: "http://hl7.org/fhir/assert-response-code-types",
    },
    /**
     * created: Response code is 201.
     */
    Created: {
        display: "created",
        code: "created",
        system: "http://hl7.org/fhir/assert-response-code-types",
    },
    /**
     * forbidden: Response code is 403.
     */
    Forbidden: {
        display: "forbidden",
        code: "forbidden",
        system: "http://hl7.org/fhir/assert-response-code-types",
    },
    /**
     * gone: Response code is 410.
     */
    Gone: {
        display: "gone",
        code: "gone",
        system: "http://hl7.org/fhir/assert-response-code-types",
    },
    /**
     * methodNotAllowed: Response code is 405.
     */
    MethodNotAllowed: {
        display: "methodNotAllowed",
        code: "methodNotAllowed",
        system: "http://hl7.org/fhir/assert-response-code-types",
    },
    /**
     * noContent: Response code is 204.
     */
    NoContent: {
        display: "noContent",
        code: "noContent",
        system: "http://hl7.org/fhir/assert-response-code-types",
    },
    /**
     * notFound: Response code is 404.
     */
    NotFound: {
        display: "notFound",
        code: "notFound",
        system: "http://hl7.org/fhir/assert-response-code-types",
    },
    /**
     * notModified: Response code is 304.
     */
    NotModified: {
        display: "notModified",
        code: "notModified",
        system: "http://hl7.org/fhir/assert-response-code-types",
    },
    /**
     * okay: Response code is 200.
     */
    Okay: {
        display: "okay",
        code: "okay",
        system: "http://hl7.org/fhir/assert-response-code-types",
    },
    /**
     * preconditionFailed: Response code is 412.
     */
    PreconditionFailed: {
        display: "preconditionFailed",
        code: "preconditionFailed",
        system: "http://hl7.org/fhir/assert-response-code-types",
    },
    /**
     * unprocessable: Response code is 422.
     */
    Unprocessable: {
        display: "unprocessable",
        code: "unprocessable",
        system: "http://hl7.org/fhir/assert-response-code-types",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXNzZXJ0UmVzcG9uc2VDb2RlVHlwZXNDb2RpbmdzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9Bc3NlcnRSZXNwb25zZUNvZGVUeXBlc0NvZGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLGdEQUFnRDtBQUNoRCxrQ0FBa0M7QUFDbEMsK0VBQStFO0FBMEQvRTs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLDhCQUE4QixHQUFxQztJQUM5RTs7T0FFRztJQUNILEdBQUcsRUFBRTtRQUNILE9BQU8sRUFBRSxLQUFLO1FBQ2QsSUFBSSxFQUFFLEtBQUs7UUFDWCxNQUFNLEVBQUUsZ0RBQWdEO0tBQ3pEO0lBQ0Q7O09BRUc7SUFDSCxRQUFRLEVBQUU7UUFDUixPQUFPLEVBQUUsVUFBVTtRQUNuQixJQUFJLEVBQUUsVUFBVTtRQUNoQixNQUFNLEVBQUUsZ0RBQWdEO0tBQ3pEO0lBQ0Q7O09BRUc7SUFDSCxPQUFPLEVBQUU7UUFDUCxPQUFPLEVBQUUsU0FBUztRQUNsQixJQUFJLEVBQUUsU0FBUztRQUNmLE1BQU0sRUFBRSxnREFBZ0Q7S0FDekQ7SUFDRDs7T0FFRztJQUNILFNBQVMsRUFBRTtRQUNULE9BQU8sRUFBRSxXQUFXO1FBQ3BCLElBQUksRUFBRSxXQUFXO1FBQ2pCLE1BQU0sRUFBRSxnREFBZ0Q7S0FDekQ7SUFDRDs7T0FFRztJQUNILElBQUksRUFBRTtRQUNKLE9BQU8sRUFBRSxNQUFNO1FBQ2YsSUFBSSxFQUFFLE1BQU07UUFDWixNQUFNLEVBQUUsZ0RBQWdEO0tBQ3pEO0lBQ0Q7O09BRUc7SUFDSCxnQkFBZ0IsRUFBRTtRQUNoQixPQUFPLEVBQUUsa0JBQWtCO1FBQzNCLElBQUksRUFBRSxrQkFBa0I7UUFDeEIsTUFBTSxFQUFFLGdEQUFnRDtLQUN6RDtJQUNEOztPQUVHO0lBQ0gsU0FBUyxFQUFFO1FBQ1QsT0FBTyxFQUFFLFdBQVc7UUFDcEIsSUFBSSxFQUFFLFdBQVc7UUFDakIsTUFBTSxFQUFFLGdEQUFnRDtLQUN6RDtJQUNEOztPQUVHO0lBQ0gsUUFBUSxFQUFFO1FBQ1IsT0FBTyxFQUFFLFVBQVU7UUFDbkIsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLGdEQUFnRDtLQUN6RDtJQUNEOztPQUVHO0lBQ0gsV0FBVyxFQUFFO1FBQ1gsT0FBTyxFQUFFLGFBQWE7UUFDdEIsSUFBSSxFQUFFLGFBQWE7UUFDbkIsTUFBTSxFQUFFLGdEQUFnRDtLQUN6RDtJQUNEOztPQUVHO0lBQ0gsSUFBSSxFQUFFO1FBQ0osT0FBTyxFQUFFLE1BQU07UUFDZixJQUFJLEVBQUUsTUFBTTtRQUNaLE1BQU0sRUFBRSxnREFBZ0Q7S0FDekQ7SUFDRDs7T0FFRztJQUNILGtCQUFrQixFQUFFO1FBQ2xCLE9BQU8sRUFBRSxvQkFBb0I7UUFDN0IsSUFBSSxFQUFFLG9CQUFvQjtRQUMxQixNQUFNLEVBQUUsZ0RBQWdEO0tBQ3pEO0lBQ0Q7O09BRUc7SUFDSCxhQUFhLEVBQUU7UUFDYixPQUFPLEVBQUUsZUFBZTtRQUN4QixJQUFJLEVBQUUsZUFBZTtRQUNyQixNQUFNLEVBQUUsZ0RBQWdEO0tBQ3pEO0NBQ08sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNGIuY29yZSB2ZXJzaW9uOiA0LjMuMFxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvYXNzZXJ0LXJlc3BvbnNlLWNvZGUtdHlwZXN8NC4zLjBcclxuXHJcbmltcG9ydCB7IENvZGluZ0FyZ3MgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiBUaGUgdHlwZSBvZiByZXNwb25zZSBjb2RlIHRvIHVzZSBmb3IgYXNzZXJ0aW9uLlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgQXNzZXJ0UmVzcG9uc2VDb2RlVHlwZXNDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIGJhZDogUmVzcG9uc2UgY29kZSBpcyA0MDAuXHJcbiAgICovXHJcbiAgQmFkOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIGNvbmZsaWN0OiBSZXNwb25zZSBjb2RlIGlzIDQwOS5cclxuICAgKi9cclxuICBDb25mbGljdDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBjcmVhdGVkOiBSZXNwb25zZSBjb2RlIGlzIDIwMS5cclxuICAgKi9cclxuICBDcmVhdGVkOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIGZvcmJpZGRlbjogUmVzcG9uc2UgY29kZSBpcyA0MDMuXHJcbiAgICovXHJcbiAgRm9yYmlkZGVuOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIGdvbmU6IFJlc3BvbnNlIGNvZGUgaXMgNDEwLlxyXG4gICAqL1xyXG4gIEdvbmU6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogbWV0aG9kTm90QWxsb3dlZDogUmVzcG9uc2UgY29kZSBpcyA0MDUuXHJcbiAgICovXHJcbiAgTWV0aG9kTm90QWxsb3dlZDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBub0NvbnRlbnQ6IFJlc3BvbnNlIGNvZGUgaXMgMjA0LlxyXG4gICAqL1xyXG4gIE5vQ29udGVudDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBub3RGb3VuZDogUmVzcG9uc2UgY29kZSBpcyA0MDQuXHJcbiAgICovXHJcbiAgTm90Rm91bmQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogbm90TW9kaWZpZWQ6IFJlc3BvbnNlIGNvZGUgaXMgMzA0LlxyXG4gICAqL1xyXG4gIE5vdE1vZGlmaWVkOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIG9rYXk6IFJlc3BvbnNlIGNvZGUgaXMgMjAwLlxyXG4gICAqL1xyXG4gIE9rYXk6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogcHJlY29uZGl0aW9uRmFpbGVkOiBSZXNwb25zZSBjb2RlIGlzIDQxMi5cclxuICAgKi9cclxuICBQcmVjb25kaXRpb25GYWlsZWQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogdW5wcm9jZXNzYWJsZTogUmVzcG9uc2UgY29kZSBpcyA0MjIuXHJcbiAgICovXHJcbiAgVW5wcm9jZXNzYWJsZTogQ29kaW5nQXJncztcclxufVxyXG5cclxuLyoqXHJcbiAqIFRoZSB0eXBlIG9mIHJlc3BvbnNlIGNvZGUgdG8gdXNlIGZvciBhc3NlcnRpb24uXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgQXNzZXJ0UmVzcG9uc2VDb2RlVHlwZXNDb2RpbmdzOkFzc2VydFJlc3BvbnNlQ29kZVR5cGVzQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBiYWQ6IFJlc3BvbnNlIGNvZGUgaXMgNDAwLlxyXG4gICAqL1xyXG4gIEJhZDoge1xyXG4gICAgZGlzcGxheTogXCJiYWRcIixcclxuICAgIGNvZGU6IFwiYmFkXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9hc3NlcnQtcmVzcG9uc2UtY29kZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogY29uZmxpY3Q6IFJlc3BvbnNlIGNvZGUgaXMgNDA5LlxyXG4gICAqL1xyXG4gIENvbmZsaWN0OiB7XHJcbiAgICBkaXNwbGF5OiBcImNvbmZsaWN0XCIsXHJcbiAgICBjb2RlOiBcImNvbmZsaWN0XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9hc3NlcnQtcmVzcG9uc2UtY29kZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogY3JlYXRlZDogUmVzcG9uc2UgY29kZSBpcyAyMDEuXHJcbiAgICovXHJcbiAgQ3JlYXRlZDoge1xyXG4gICAgZGlzcGxheTogXCJjcmVhdGVkXCIsXHJcbiAgICBjb2RlOiBcImNyZWF0ZWRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2Fzc2VydC1yZXNwb25zZS1jb2RlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBmb3JiaWRkZW46IFJlc3BvbnNlIGNvZGUgaXMgNDAzLlxyXG4gICAqL1xyXG4gIEZvcmJpZGRlbjoge1xyXG4gICAgZGlzcGxheTogXCJmb3JiaWRkZW5cIixcclxuICAgIGNvZGU6IFwiZm9yYmlkZGVuXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9hc3NlcnQtcmVzcG9uc2UtY29kZS10eXBlc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogZ29uZTogUmVzcG9uc2UgY29kZSBpcyA0MTAuXHJcbiAgICovXHJcbiAgR29uZToge1xyXG4gICAgZGlzcGxheTogXCJnb25lXCIsXHJcbiAgICBjb2RlOiBcImdvbmVcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2Fzc2VydC1yZXNwb25zZS1jb2RlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBtZXRob2ROb3RBbGxvd2VkOiBSZXNwb25zZSBjb2RlIGlzIDQwNS5cclxuICAgKi9cclxuICBNZXRob2ROb3RBbGxvd2VkOiB7XHJcbiAgICBkaXNwbGF5OiBcIm1ldGhvZE5vdEFsbG93ZWRcIixcclxuICAgIGNvZGU6IFwibWV0aG9kTm90QWxsb3dlZFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvYXNzZXJ0LXJlc3BvbnNlLWNvZGUtdHlwZXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIG5vQ29udGVudDogUmVzcG9uc2UgY29kZSBpcyAyMDQuXHJcbiAgICovXHJcbiAgTm9Db250ZW50OiB7XHJcbiAgICBkaXNwbGF5OiBcIm5vQ29udGVudFwiLFxyXG4gICAgY29kZTogXCJub0NvbnRlbnRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2Fzc2VydC1yZXNwb25zZS1jb2RlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBub3RGb3VuZDogUmVzcG9uc2UgY29kZSBpcyA0MDQuXHJcbiAgICovXHJcbiAgTm90Rm91bmQ6IHtcclxuICAgIGRpc3BsYXk6IFwibm90Rm91bmRcIixcclxuICAgIGNvZGU6IFwibm90Rm91bmRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2Fzc2VydC1yZXNwb25zZS1jb2RlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBub3RNb2RpZmllZDogUmVzcG9uc2UgY29kZSBpcyAzMDQuXHJcbiAgICovXHJcbiAgTm90TW9kaWZpZWQ6IHtcclxuICAgIGRpc3BsYXk6IFwibm90TW9kaWZpZWRcIixcclxuICAgIGNvZGU6IFwibm90TW9kaWZpZWRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2Fzc2VydC1yZXNwb25zZS1jb2RlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBva2F5OiBSZXNwb25zZSBjb2RlIGlzIDIwMC5cclxuICAgKi9cclxuICBPa2F5OiB7XHJcbiAgICBkaXNwbGF5OiBcIm9rYXlcIixcclxuICAgIGNvZGU6IFwib2theVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvYXNzZXJ0LXJlc3BvbnNlLWNvZGUtdHlwZXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIHByZWNvbmRpdGlvbkZhaWxlZDogUmVzcG9uc2UgY29kZSBpcyA0MTIuXHJcbiAgICovXHJcbiAgUHJlY29uZGl0aW9uRmFpbGVkOiB7XHJcbiAgICBkaXNwbGF5OiBcInByZWNvbmRpdGlvbkZhaWxlZFwiLFxyXG4gICAgY29kZTogXCJwcmVjb25kaXRpb25GYWlsZWRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2Fzc2VydC1yZXNwb25zZS1jb2RlLXR5cGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiB1bnByb2Nlc3NhYmxlOiBSZXNwb25zZSBjb2RlIGlzIDQyMi5cclxuICAgKi9cclxuICBVbnByb2Nlc3NhYmxlOiB7XHJcbiAgICBkaXNwbGF5OiBcInVucHJvY2Vzc2FibGVcIixcclxuICAgIGNvZGU6IFwidW5wcm9jZXNzYWJsZVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvYXNzZXJ0LXJlc3BvbnNlLWNvZGUtdHlwZXNcIixcclxuICB9LFxyXG59IGFzIGNvbnN0O1xyXG4iXX0=