// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/dicm-405-mediatype|4.3.0
/**
 * Media Type Code
 */
export const Dicm405MediatypeCodings = {
    /**
     * 110010: Film type of output
     */
    Film: {
        display: "Film",
        code: "110010",
        system: "http://dicom.nema.org/resources/ontology/DCM",
    },
    /**
     * 110030: A device that connects using the USB hard drive interface. These may be USB-Sticks, portable hard drives, and other technologies
     */
    USBDiskEmulation: {
        display: "USB Disk Emulation",
        code: "110030",
        system: "http://dicom.nema.org/resources/ontology/DCM",
    },
    /**
     * 110031: Email and email attachments used as a media for data transport
     */
    Email: {
        display: "Email",
        code: "110031",
        system: "http://dicom.nema.org/resources/ontology/DCM",
    },
    /**
     * 110032: CD-R, CD-ROM, and CD-RW media used for data transport
     */
    CD: {
        display: "CD",
        code: "110032",
        system: "http://dicom.nema.org/resources/ontology/DCM",
    },
    /**
     * 110033: DVD, DVD-RAM, and other DVD formatted media used for data transport
     */
    DVD: {
        display: "DVD",
        code: "110033",
        system: "http://dicom.nema.org/resources/ontology/DCM",
    },
    /**
     * 110034: Media that comply with the Compact Flash standard
     */
    CompactFlash: {
        display: "Compact Flash",
        code: "110034",
        system: "http://dicom.nema.org/resources/ontology/DCM",
    },
    /**
     * 110035: Media that comply with the Multi-media Card standard
     */
    MultiMediaCard: {
        display: "Multi-media Card",
        code: "110035",
        system: "http://dicom.nema.org/resources/ontology/DCM",
    },
    /**
     * 110036: Media that comply with the Secure Digital Card standard
     */
    SecureDigitalCard: {
        display: "Secure Digital Card",
        code: "110036",
        system: "http://dicom.nema.org/resources/ontology/DCM",
    },
    /**
     * 110037: URI Identifier for network or other resource, see RFC 3968
     */
    URI: {
        display: "URI",
        code: "110037",
        system: "http://dicom.nema.org/resources/ontology/DCM",
    },
    /**
     * 110038: Any paper or similar document
     */
    PaperDocument: {
        display: "Paper Document",
        code: "110038",
        system: "http://dicom.nema.org/resources/ontology/DCM",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGljbTQwNU1lZGlhdHlwZUNvZGluZ3MuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL0RpY200MDVNZWRpYXR5cGVDb2RpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQixnREFBZ0Q7QUFDaEQsa0NBQWtDO0FBQ2xDLHVFQUF1RTtBQWtEdkU7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSx1QkFBdUIsR0FBOEI7SUFDaEU7O09BRUc7SUFDSCxJQUFJLEVBQUU7UUFDSixPQUFPLEVBQUUsTUFBTTtRQUNmLElBQUksRUFBRSxRQUFRO1FBQ2QsTUFBTSxFQUFFLDhDQUE4QztLQUN2RDtJQUNEOztPQUVHO0lBQ0gsZ0JBQWdCLEVBQUU7UUFDaEIsT0FBTyxFQUFFLG9CQUFvQjtRQUM3QixJQUFJLEVBQUUsUUFBUTtRQUNkLE1BQU0sRUFBRSw4Q0FBOEM7S0FDdkQ7SUFDRDs7T0FFRztJQUNILEtBQUssRUFBRTtRQUNMLE9BQU8sRUFBRSxPQUFPO1FBQ2hCLElBQUksRUFBRSxRQUFRO1FBQ2QsTUFBTSxFQUFFLDhDQUE4QztLQUN2RDtJQUNEOztPQUVHO0lBQ0gsRUFBRSxFQUFFO1FBQ0YsT0FBTyxFQUFFLElBQUk7UUFDYixJQUFJLEVBQUUsUUFBUTtRQUNkLE1BQU0sRUFBRSw4Q0FBOEM7S0FDdkQ7SUFDRDs7T0FFRztJQUNILEdBQUcsRUFBRTtRQUNILE9BQU8sRUFBRSxLQUFLO1FBQ2QsSUFBSSxFQUFFLFFBQVE7UUFDZCxNQUFNLEVBQUUsOENBQThDO0tBQ3ZEO0lBQ0Q7O09BRUc7SUFDSCxZQUFZLEVBQUU7UUFDWixPQUFPLEVBQUUsZUFBZTtRQUN4QixJQUFJLEVBQUUsUUFBUTtRQUNkLE1BQU0sRUFBRSw4Q0FBOEM7S0FDdkQ7SUFDRDs7T0FFRztJQUNILGNBQWMsRUFBRTtRQUNkLE9BQU8sRUFBRSxrQkFBa0I7UUFDM0IsSUFBSSxFQUFFLFFBQVE7UUFDZCxNQUFNLEVBQUUsOENBQThDO0tBQ3ZEO0lBQ0Q7O09BRUc7SUFDSCxpQkFBaUIsRUFBRTtRQUNqQixPQUFPLEVBQUUscUJBQXFCO1FBQzlCLElBQUksRUFBRSxRQUFRO1FBQ2QsTUFBTSxFQUFFLDhDQUE4QztLQUN2RDtJQUNEOztPQUVHO0lBQ0gsR0FBRyxFQUFFO1FBQ0gsT0FBTyxFQUFFLEtBQUs7UUFDZCxJQUFJLEVBQUUsUUFBUTtRQUNkLE1BQU0sRUFBRSw4Q0FBOEM7S0FDdkQ7SUFDRDs7T0FFRztJQUNILGFBQWEsRUFBRTtRQUNiLE9BQU8sRUFBRSxnQkFBZ0I7UUFDekIsSUFBSSxFQUFFLFFBQVE7UUFDZCxNQUFNLEVBQUUsOENBQThDO0tBQ3ZEO0NBQ08sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNGIuY29yZSB2ZXJzaW9uOiA0LjMuMFxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvZGljbS00MDUtbWVkaWF0eXBlfDQuMy4wXHJcblxyXG5pbXBvcnQgeyBDb2RpbmdBcmdzIH0gZnJvbSAnLi4vZmhpci9Db2RpbmcuanMnXHJcblxyXG4vKipcclxuICogTWVkaWEgVHlwZSBDb2RlXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBEaWNtNDA1TWVkaWF0eXBlQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiAxMTAwMTA6IEZpbG0gdHlwZSBvZiBvdXRwdXRcclxuICAgKi9cclxuICBGaWxtOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIDExMDAzMDogQSBkZXZpY2UgdGhhdCBjb25uZWN0cyB1c2luZyB0aGUgVVNCIGhhcmQgZHJpdmUgaW50ZXJmYWNlLiBUaGVzZSBtYXkgYmUgVVNCLVN0aWNrcywgcG9ydGFibGUgaGFyZCBkcml2ZXMsIGFuZCBvdGhlciB0ZWNobm9sb2dpZXNcclxuICAgKi9cclxuICBVU0JEaXNrRW11bGF0aW9uOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIDExMDAzMTogRW1haWwgYW5kIGVtYWlsIGF0dGFjaG1lbnRzIHVzZWQgYXMgYSBtZWRpYSBmb3IgZGF0YSB0cmFuc3BvcnRcclxuICAgKi9cclxuICBFbWFpbDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiAxMTAwMzI6IENELVIsIENELVJPTSwgYW5kIENELVJXIG1lZGlhIHVzZWQgZm9yIGRhdGEgdHJhbnNwb3J0XHJcbiAgICovXHJcbiAgQ0Q6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogMTEwMDMzOiBEVkQsIERWRC1SQU0sIGFuZCBvdGhlciBEVkQgZm9ybWF0dGVkIG1lZGlhIHVzZWQgZm9yIGRhdGEgdHJhbnNwb3J0XHJcbiAgICovXHJcbiAgRFZEOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIDExMDAzNDogTWVkaWEgdGhhdCBjb21wbHkgd2l0aCB0aGUgQ29tcGFjdCBGbGFzaCBzdGFuZGFyZFxyXG4gICAqL1xyXG4gIENvbXBhY3RGbGFzaDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiAxMTAwMzU6IE1lZGlhIHRoYXQgY29tcGx5IHdpdGggdGhlIE11bHRpLW1lZGlhIENhcmQgc3RhbmRhcmRcclxuICAgKi9cclxuICBNdWx0aU1lZGlhQ2FyZDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiAxMTAwMzY6IE1lZGlhIHRoYXQgY29tcGx5IHdpdGggdGhlIFNlY3VyZSBEaWdpdGFsIENhcmQgc3RhbmRhcmRcclxuICAgKi9cclxuICBTZWN1cmVEaWdpdGFsQ2FyZDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiAxMTAwMzc6IFVSSSBJZGVudGlmaWVyIGZvciBuZXR3b3JrIG9yIG90aGVyIHJlc291cmNlLCBzZWUgUkZDIDM5NjhcclxuICAgKi9cclxuICBVUkk6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogMTEwMDM4OiBBbnkgcGFwZXIgb3Igc2ltaWxhciBkb2N1bWVudFxyXG4gICAqL1xyXG4gIFBhcGVyRG9jdW1lbnQ6IENvZGluZ0FyZ3M7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBNZWRpYSBUeXBlIENvZGVcclxuICovXHJcbmV4cG9ydCBjb25zdCBEaWNtNDA1TWVkaWF0eXBlQ29kaW5nczpEaWNtNDA1TWVkaWF0eXBlQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiAxMTAwMTA6IEZpbG0gdHlwZSBvZiBvdXRwdXRcclxuICAgKi9cclxuICBGaWxtOiB7XHJcbiAgICBkaXNwbGF5OiBcIkZpbG1cIixcclxuICAgIGNvZGU6IFwiMTEwMDEwXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2RpY29tLm5lbWEub3JnL3Jlc291cmNlcy9vbnRvbG9neS9EQ01cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIDExMDAzMDogQSBkZXZpY2UgdGhhdCBjb25uZWN0cyB1c2luZyB0aGUgVVNCIGhhcmQgZHJpdmUgaW50ZXJmYWNlLiBUaGVzZSBtYXkgYmUgVVNCLVN0aWNrcywgcG9ydGFibGUgaGFyZCBkcml2ZXMsIGFuZCBvdGhlciB0ZWNobm9sb2dpZXNcclxuICAgKi9cclxuICBVU0JEaXNrRW11bGF0aW9uOiB7XHJcbiAgICBkaXNwbGF5OiBcIlVTQiBEaXNrIEVtdWxhdGlvblwiLFxyXG4gICAgY29kZTogXCIxMTAwMzBcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vZGljb20ubmVtYS5vcmcvcmVzb3VyY2VzL29udG9sb2d5L0RDTVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogMTEwMDMxOiBFbWFpbCBhbmQgZW1haWwgYXR0YWNobWVudHMgdXNlZCBhcyBhIG1lZGlhIGZvciBkYXRhIHRyYW5zcG9ydFxyXG4gICAqL1xyXG4gIEVtYWlsOiB7XHJcbiAgICBkaXNwbGF5OiBcIkVtYWlsXCIsXHJcbiAgICBjb2RlOiBcIjExMDAzMVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9kaWNvbS5uZW1hLm9yZy9yZXNvdXJjZXMvb250b2xvZ3kvRENNXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiAxMTAwMzI6IENELVIsIENELVJPTSwgYW5kIENELVJXIG1lZGlhIHVzZWQgZm9yIGRhdGEgdHJhbnNwb3J0XHJcbiAgICovXHJcbiAgQ0Q6IHtcclxuICAgIGRpc3BsYXk6IFwiQ0RcIixcclxuICAgIGNvZGU6IFwiMTEwMDMyXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2RpY29tLm5lbWEub3JnL3Jlc291cmNlcy9vbnRvbG9neS9EQ01cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIDExMDAzMzogRFZELCBEVkQtUkFNLCBhbmQgb3RoZXIgRFZEIGZvcm1hdHRlZCBtZWRpYSB1c2VkIGZvciBkYXRhIHRyYW5zcG9ydFxyXG4gICAqL1xyXG4gIERWRDoge1xyXG4gICAgZGlzcGxheTogXCJEVkRcIixcclxuICAgIGNvZGU6IFwiMTEwMDMzXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2RpY29tLm5lbWEub3JnL3Jlc291cmNlcy9vbnRvbG9neS9EQ01cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIDExMDAzNDogTWVkaWEgdGhhdCBjb21wbHkgd2l0aCB0aGUgQ29tcGFjdCBGbGFzaCBzdGFuZGFyZFxyXG4gICAqL1xyXG4gIENvbXBhY3RGbGFzaDoge1xyXG4gICAgZGlzcGxheTogXCJDb21wYWN0IEZsYXNoXCIsXHJcbiAgICBjb2RlOiBcIjExMDAzNFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9kaWNvbS5uZW1hLm9yZy9yZXNvdXJjZXMvb250b2xvZ3kvRENNXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiAxMTAwMzU6IE1lZGlhIHRoYXQgY29tcGx5IHdpdGggdGhlIE11bHRpLW1lZGlhIENhcmQgc3RhbmRhcmRcclxuICAgKi9cclxuICBNdWx0aU1lZGlhQ2FyZDoge1xyXG4gICAgZGlzcGxheTogXCJNdWx0aS1tZWRpYSBDYXJkXCIsXHJcbiAgICBjb2RlOiBcIjExMDAzNVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9kaWNvbS5uZW1hLm9yZy9yZXNvdXJjZXMvb250b2xvZ3kvRENNXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiAxMTAwMzY6IE1lZGlhIHRoYXQgY29tcGx5IHdpdGggdGhlIFNlY3VyZSBEaWdpdGFsIENhcmQgc3RhbmRhcmRcclxuICAgKi9cclxuICBTZWN1cmVEaWdpdGFsQ2FyZDoge1xyXG4gICAgZGlzcGxheTogXCJTZWN1cmUgRGlnaXRhbCBDYXJkXCIsXHJcbiAgICBjb2RlOiBcIjExMDAzNlwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9kaWNvbS5uZW1hLm9yZy9yZXNvdXJjZXMvb250b2xvZ3kvRENNXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiAxMTAwMzc6IFVSSSBJZGVudGlmaWVyIGZvciBuZXR3b3JrIG9yIG90aGVyIHJlc291cmNlLCBzZWUgUkZDIDM5NjhcclxuICAgKi9cclxuICBVUkk6IHtcclxuICAgIGRpc3BsYXk6IFwiVVJJXCIsXHJcbiAgICBjb2RlOiBcIjExMDAzN1wiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9kaWNvbS5uZW1hLm9yZy9yZXNvdXJjZXMvb250b2xvZ3kvRENNXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiAxMTAwMzg6IEFueSBwYXBlciBvciBzaW1pbGFyIGRvY3VtZW50XHJcbiAgICovXHJcbiAgUGFwZXJEb2N1bWVudDoge1xyXG4gICAgZGlzcGxheTogXCJQYXBlciBEb2N1bWVudFwiLFxyXG4gICAgY29kZTogXCIxMTAwMzhcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vZGljb20ubmVtYS5vcmcvcmVzb3VyY2VzL29udG9sb2d5L0RDTVwiLFxyXG4gIH0sXHJcbn0gYXMgY29uc3Q7XHJcbiJdfQ==