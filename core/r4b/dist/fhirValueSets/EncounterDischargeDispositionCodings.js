// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/encounter-discharge-disposition|4.3.0
/**
 * This value set defines a set of codes that can be used to where the patient left the hospital.
 */
export const EncounterDischargeDispositionCodings = {
    /**
     * aadvice: The patient self discharged against medical advice.
     */
    LeftAgainstAdvice: {
        display: "Left against advice",
        code: "aadvice",
        system: "http://terminology.hl7.org/CodeSystem/discharge-disposition",
    },
    /**
     * alt-home: The patient was discharged and has indicated that they are going to return home afterwards, but not the patient's home - e.g. a family member's home.
     */
    AlternativeHome: {
        display: "Alternative home",
        code: "alt-home",
        system: "http://terminology.hl7.org/CodeSystem/discharge-disposition",
    },
    /**
     * exp: The patient has deceased during this encounter.
     */
    Expired: {
        display: "Expired",
        code: "exp",
        system: "http://terminology.hl7.org/CodeSystem/discharge-disposition",
    },
    /**
     * home: The patient was dicharged and has indicated that they are going to return home afterwards.
     */
    Home: {
        display: "Home",
        code: "home",
        system: "http://terminology.hl7.org/CodeSystem/discharge-disposition",
    },
    /**
     * hosp: The patient has been discharged into palliative care.
     */
    Hospice: {
        display: "Hospice",
        code: "hosp",
        system: "http://terminology.hl7.org/CodeSystem/discharge-disposition",
    },
    /**
     * long: The patient has been discharged into long-term care where is likely to be monitored through an ongoing episode-of-care.
     */
    LongTermCare: {
        display: "Long-term care",
        code: "long",
        system: "http://terminology.hl7.org/CodeSystem/discharge-disposition",
    },
    /**
     * oth: The discharge disposition has not otherwise defined.
     */
    Other: {
        display: "Other",
        code: "oth",
        system: "http://terminology.hl7.org/CodeSystem/discharge-disposition",
    },
    /**
     * other-hcf: The patient was transferred to another healthcare facility.
     */
    OtherHealthcareFacility: {
        display: "Other healthcare facility",
        code: "other-hcf",
        system: "http://terminology.hl7.org/CodeSystem/discharge-disposition",
    },
    /**
     * psy: The patient has been transferred to a psychiatric facility.
     */
    PsychiatricHospital: {
        display: "Psychiatric hospital",
        code: "psy",
        system: "http://terminology.hl7.org/CodeSystem/discharge-disposition",
    },
    /**
     * rehab: The patient was discharged and is to receive post acute care rehabilitation services.
     */
    Rehabilitation: {
        display: "Rehabilitation",
        code: "rehab",
        system: "http://terminology.hl7.org/CodeSystem/discharge-disposition",
    },
    /**
     * snf: The patient has been discharged to a skilled nursing facility for the patient to receive additional care.
     */
    SkilledNursingFacility: {
        display: "Skilled nursing facility",
        code: "snf",
        system: "http://terminology.hl7.org/CodeSystem/discharge-disposition",
    },
};
//# sourceMappingURL=data:application/json;base64,