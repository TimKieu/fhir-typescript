// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/goal-status|4.3.0
/**
 * Codes that reflect the current state of a goal and whether the goal is still being targeted.
 */
export const GoalStatusCodings = {
    /**
     * accepted: A proposed goal was accepted or acknowledged.
     */
    Accepted: {
        display: "Accepted",
        code: "accepted",
        system: "http://hl7.org/fhir/goal-status",
    },
    /**
     * active: The goal is being sought actively.
     */
    Active: {
        display: "Active",
        code: "active",
        system: "http://hl7.org/fhir/goal-status",
    },
    /**
     * cancelled: The goal has been abandoned.
     */
    Cancelled: {
        display: "Cancelled",
        code: "cancelled",
        system: "http://hl7.org/fhir/goal-status",
    },
    /**
     * completed: The goal is no longer being sought.
     */
    Completed: {
        display: "Completed",
        code: "completed",
        system: "http://hl7.org/fhir/goal-status",
    },
    /**
     * entered-in-error: The goal was entered in error and voided.
     */
    EnteredInError: {
        display: "Entered in Error",
        code: "entered-in-error",
        system: "http://hl7.org/fhir/goal-status",
    },
    /**
     * on-hold: The goal remains a long term objective but is no longer being actively pursued for a temporary period of time.
     */
    OnHold: {
        display: "On Hold",
        code: "on-hold",
        system: "http://hl7.org/fhir/goal-status",
    },
    /**
     * planned: A goal is planned for this patient.
     */
    Planned: {
        display: "Planned",
        code: "planned",
        system: "http://hl7.org/fhir/goal-status",
    },
    /**
     * proposed: A goal is proposed for this patient.
     */
    Proposed: {
        display: "Proposed",
        code: "proposed",
        system: "http://hl7.org/fhir/goal-status",
    },
    /**
     * rejected: A proposed goal was rejected.
     */
    Rejected: {
        display: "Rejected",
        code: "rejected",
        system: "http://hl7.org/fhir/goal-status",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR29hbFN0YXR1c0NvZGluZ3MuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL0dvYWxTdGF0dXNDb2RpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQixnREFBZ0Q7QUFDaEQsa0NBQWtDO0FBQ2xDLGdFQUFnRTtBQThDaEU7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FBd0I7SUFDcEQ7O09BRUc7SUFDSCxRQUFRLEVBQUU7UUFDUixPQUFPLEVBQUUsVUFBVTtRQUNuQixJQUFJLEVBQUUsVUFBVTtRQUNoQixNQUFNLEVBQUUsaUNBQWlDO0tBQzFDO0lBQ0Q7O09BRUc7SUFDSCxNQUFNLEVBQUU7UUFDTixPQUFPLEVBQUUsUUFBUTtRQUNqQixJQUFJLEVBQUUsUUFBUTtRQUNkLE1BQU0sRUFBRSxpQ0FBaUM7S0FDMUM7SUFDRDs7T0FFRztJQUNILFNBQVMsRUFBRTtRQUNULE9BQU8sRUFBRSxXQUFXO1FBQ3BCLElBQUksRUFBRSxXQUFXO1FBQ2pCLE1BQU0sRUFBRSxpQ0FBaUM7S0FDMUM7SUFDRDs7T0FFRztJQUNILFNBQVMsRUFBRTtRQUNULE9BQU8sRUFBRSxXQUFXO1FBQ3BCLElBQUksRUFBRSxXQUFXO1FBQ2pCLE1BQU0sRUFBRSxpQ0FBaUM7S0FDMUM7SUFDRDs7T0FFRztJQUNILGNBQWMsRUFBRTtRQUNkLE9BQU8sRUFBRSxrQkFBa0I7UUFDM0IsSUFBSSxFQUFFLGtCQUFrQjtRQUN4QixNQUFNLEVBQUUsaUNBQWlDO0tBQzFDO0lBQ0Q7O09BRUc7SUFDSCxNQUFNLEVBQUU7UUFDTixPQUFPLEVBQUUsU0FBUztRQUNsQixJQUFJLEVBQUUsU0FBUztRQUNmLE1BQU0sRUFBRSxpQ0FBaUM7S0FDMUM7SUFDRDs7T0FFRztJQUNILE9BQU8sRUFBRTtRQUNQLE9BQU8sRUFBRSxTQUFTO1FBQ2xCLElBQUksRUFBRSxTQUFTO1FBQ2YsTUFBTSxFQUFFLGlDQUFpQztLQUMxQztJQUNEOztPQUVHO0lBQ0gsUUFBUSxFQUFFO1FBQ1IsT0FBTyxFQUFFLFVBQVU7UUFDbkIsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLGlDQUFpQztLQUMxQztJQUNEOztPQUVHO0lBQ0gsUUFBUSxFQUFFO1FBQ1IsT0FBTyxFQUFFLFVBQVU7UUFDbkIsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLGlDQUFpQztLQUMxQztDQUNPLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjRiLmNvcmUgdmVyc2lvbjogNC4zLjBcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L2dvYWwtc3RhdHVzfDQuMy4wXHJcblxyXG5pbXBvcnQgeyBDb2RpbmdBcmdzIH0gZnJvbSAnLi4vZmhpci9Db2RpbmcuanMnXHJcblxyXG4vKipcclxuICogQ29kZXMgdGhhdCByZWZsZWN0IHRoZSBjdXJyZW50IHN0YXRlIG9mIGEgZ29hbCBhbmQgd2hldGhlciB0aGUgZ29hbCBpcyBzdGlsbCBiZWluZyB0YXJnZXRlZC5cclxuICovXHJcbmV4cG9ydCB0eXBlIEdvYWxTdGF0dXNDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIGFjY2VwdGVkOiBBIHByb3Bvc2VkIGdvYWwgd2FzIGFjY2VwdGVkIG9yIGFja25vd2xlZGdlZC5cclxuICAgKi9cclxuICBBY2NlcHRlZDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBhY3RpdmU6IFRoZSBnb2FsIGlzIGJlaW5nIHNvdWdodCBhY3RpdmVseS5cclxuICAgKi9cclxuICBBY3RpdmU6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogY2FuY2VsbGVkOiBUaGUgZ29hbCBoYXMgYmVlbiBhYmFuZG9uZWQuXHJcbiAgICovXHJcbiAgQ2FuY2VsbGVkOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIGNvbXBsZXRlZDogVGhlIGdvYWwgaXMgbm8gbG9uZ2VyIGJlaW5nIHNvdWdodC5cclxuICAgKi9cclxuICBDb21wbGV0ZWQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogZW50ZXJlZC1pbi1lcnJvcjogVGhlIGdvYWwgd2FzIGVudGVyZWQgaW4gZXJyb3IgYW5kIHZvaWRlZC5cclxuICAgKi9cclxuICBFbnRlcmVkSW5FcnJvcjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBvbi1ob2xkOiBUaGUgZ29hbCByZW1haW5zIGEgbG9uZyB0ZXJtIG9iamVjdGl2ZSBidXQgaXMgbm8gbG9uZ2VyIGJlaW5nIGFjdGl2ZWx5IHB1cnN1ZWQgZm9yIGEgdGVtcG9yYXJ5IHBlcmlvZCBvZiB0aW1lLlxyXG4gICAqL1xyXG4gIE9uSG9sZDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBwbGFubmVkOiBBIGdvYWwgaXMgcGxhbm5lZCBmb3IgdGhpcyBwYXRpZW50LlxyXG4gICAqL1xyXG4gIFBsYW5uZWQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogcHJvcG9zZWQ6IEEgZ29hbCBpcyBwcm9wb3NlZCBmb3IgdGhpcyBwYXRpZW50LlxyXG4gICAqL1xyXG4gIFByb3Bvc2VkOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIHJlamVjdGVkOiBBIHByb3Bvc2VkIGdvYWwgd2FzIHJlamVjdGVkLlxyXG4gICAqL1xyXG4gIFJlamVjdGVkOiBDb2RpbmdBcmdzO1xyXG59XHJcblxyXG4vKipcclxuICogQ29kZXMgdGhhdCByZWZsZWN0IHRoZSBjdXJyZW50IHN0YXRlIG9mIGEgZ29hbCBhbmQgd2hldGhlciB0aGUgZ29hbCBpcyBzdGlsbCBiZWluZyB0YXJnZXRlZC5cclxuICovXHJcbmV4cG9ydCBjb25zdCBHb2FsU3RhdHVzQ29kaW5nczpHb2FsU3RhdHVzQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBhY2NlcHRlZDogQSBwcm9wb3NlZCBnb2FsIHdhcyBhY2NlcHRlZCBvciBhY2tub3dsZWRnZWQuXHJcbiAgICovXHJcbiAgQWNjZXB0ZWQ6IHtcclxuICAgIGRpc3BsYXk6IFwiQWNjZXB0ZWRcIixcclxuICAgIGNvZGU6IFwiYWNjZXB0ZWRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2dvYWwtc3RhdHVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBhY3RpdmU6IFRoZSBnb2FsIGlzIGJlaW5nIHNvdWdodCBhY3RpdmVseS5cclxuICAgKi9cclxuICBBY3RpdmU6IHtcclxuICAgIGRpc3BsYXk6IFwiQWN0aXZlXCIsXHJcbiAgICBjb2RlOiBcImFjdGl2ZVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvZ29hbC1zdGF0dXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIGNhbmNlbGxlZDogVGhlIGdvYWwgaGFzIGJlZW4gYWJhbmRvbmVkLlxyXG4gICAqL1xyXG4gIENhbmNlbGxlZDoge1xyXG4gICAgZGlzcGxheTogXCJDYW5jZWxsZWRcIixcclxuICAgIGNvZGU6IFwiY2FuY2VsbGVkXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9nb2FsLXN0YXR1c1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogY29tcGxldGVkOiBUaGUgZ29hbCBpcyBubyBsb25nZXIgYmVpbmcgc291Z2h0LlxyXG4gICAqL1xyXG4gIENvbXBsZXRlZDoge1xyXG4gICAgZGlzcGxheTogXCJDb21wbGV0ZWRcIixcclxuICAgIGNvZGU6IFwiY29tcGxldGVkXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9nb2FsLXN0YXR1c1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogZW50ZXJlZC1pbi1lcnJvcjogVGhlIGdvYWwgd2FzIGVudGVyZWQgaW4gZXJyb3IgYW5kIHZvaWRlZC5cclxuICAgKi9cclxuICBFbnRlcmVkSW5FcnJvcjoge1xyXG4gICAgZGlzcGxheTogXCJFbnRlcmVkIGluIEVycm9yXCIsXHJcbiAgICBjb2RlOiBcImVudGVyZWQtaW4tZXJyb3JcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2dvYWwtc3RhdHVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBvbi1ob2xkOiBUaGUgZ29hbCByZW1haW5zIGEgbG9uZyB0ZXJtIG9iamVjdGl2ZSBidXQgaXMgbm8gbG9uZ2VyIGJlaW5nIGFjdGl2ZWx5IHB1cnN1ZWQgZm9yIGEgdGVtcG9yYXJ5IHBlcmlvZCBvZiB0aW1lLlxyXG4gICAqL1xyXG4gIE9uSG9sZDoge1xyXG4gICAgZGlzcGxheTogXCJPbiBIb2xkXCIsXHJcbiAgICBjb2RlOiBcIm9uLWhvbGRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2dvYWwtc3RhdHVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBwbGFubmVkOiBBIGdvYWwgaXMgcGxhbm5lZCBmb3IgdGhpcyBwYXRpZW50LlxyXG4gICAqL1xyXG4gIFBsYW5uZWQ6IHtcclxuICAgIGRpc3BsYXk6IFwiUGxhbm5lZFwiLFxyXG4gICAgY29kZTogXCJwbGFubmVkXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9nb2FsLXN0YXR1c1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogcHJvcG9zZWQ6IEEgZ29hbCBpcyBwcm9wb3NlZCBmb3IgdGhpcyBwYXRpZW50LlxyXG4gICAqL1xyXG4gIFByb3Bvc2VkOiB7XHJcbiAgICBkaXNwbGF5OiBcIlByb3Bvc2VkXCIsXHJcbiAgICBjb2RlOiBcInByb3Bvc2VkXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9nb2FsLXN0YXR1c1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogcmVqZWN0ZWQ6IEEgcHJvcG9zZWQgZ29hbCB3YXMgcmVqZWN0ZWQuXHJcbiAgICovXHJcbiAgUmVqZWN0ZWQ6IHtcclxuICAgIGRpc3BsYXk6IFwiUmVqZWN0ZWRcIixcclxuICAgIGNvZGU6IFwicmVqZWN0ZWRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2dvYWwtc3RhdHVzXCIsXHJcbiAgfSxcclxufSBhcyBjb25zdDtcclxuIl19