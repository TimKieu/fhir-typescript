// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/allergy-intolerance-category|4.3.0
/**
 * Category of an identified substance associated with allergies or intolerances.
 */
export const AllergyIntoleranceCategoryCodings = {
    /**
     * biologic: A preparation that is synthesized from living organisms or their products, especially a human or animal protein, such as a hormone or antitoxin, that is used as a diagnostic, preventive, or therapeutic agent. Examples of biologic medications include: vaccines; allergenic extracts, which are used for both diagnosis and treatment (for example, allergy shots); gene therapies; cellular therapies.  There are other biologic products, such as tissues, which are not typically associated with allergies.
     */
    Biologic: {
        display: "Biologic",
        code: "biologic",
        system: "http://hl7.org/fhir/allergy-intolerance-category",
    },
    /**
     * environment: Any substances that are encountered in the environment, including any substance not already classified as food, medication, or biologic.
     */
    Environment: {
        display: "Environment",
        code: "environment",
        system: "http://hl7.org/fhir/allergy-intolerance-category",
    },
    /**
     * food: Any substance consumed to provide nutritional support for the body.
     */
    Food: {
        display: "Food",
        code: "food",
        system: "http://hl7.org/fhir/allergy-intolerance-category",
    },
    /**
     * medication: Substances administered to achieve a physiological effect.
     */
    Medication: {
        display: "Medication",
        code: "medication",
        system: "http://hl7.org/fhir/allergy-intolerance-category",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQWxsZXJneUludG9sZXJhbmNlQ2F0ZWdvcnlDb2RpbmdzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9BbGxlcmd5SW50b2xlcmFuY2VDYXRlZ29yeUNvZGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLGdEQUFnRDtBQUNoRCxrQ0FBa0M7QUFDbEMsaUZBQWlGO0FBMEJqRjs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLGlDQUFpQyxHQUF3QztJQUNwRjs7T0FFRztJQUNILFFBQVEsRUFBRTtRQUNSLE9BQU8sRUFBRSxVQUFVO1FBQ25CLElBQUksRUFBRSxVQUFVO1FBQ2hCLE1BQU0sRUFBRSxrREFBa0Q7S0FDM0Q7SUFDRDs7T0FFRztJQUNILFdBQVcsRUFBRTtRQUNYLE9BQU8sRUFBRSxhQUFhO1FBQ3RCLElBQUksRUFBRSxhQUFhO1FBQ25CLE1BQU0sRUFBRSxrREFBa0Q7S0FDM0Q7SUFDRDs7T0FFRztJQUNILElBQUksRUFBRTtRQUNKLE9BQU8sRUFBRSxNQUFNO1FBQ2YsSUFBSSxFQUFFLE1BQU07UUFDWixNQUFNLEVBQUUsa0RBQWtEO0tBQzNEO0lBQ0Q7O09BRUc7SUFDSCxVQUFVLEVBQUU7UUFDVixPQUFPLEVBQUUsWUFBWTtRQUNyQixJQUFJLEVBQUUsWUFBWTtRQUNsQixNQUFNLEVBQUUsa0RBQWtEO0tBQzNEO0NBQ08sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNGIuY29yZSB2ZXJzaW9uOiA0LjMuMFxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvYWxsZXJneS1pbnRvbGVyYW5jZS1jYXRlZ29yeXw0LjMuMFxyXG5cclxuaW1wb3J0IHsgQ29kaW5nQXJncyB9IGZyb20gJy4uL2ZoaXIvQ29kaW5nLmpzJ1xyXG5cclxuLyoqXHJcbiAqIENhdGVnb3J5IG9mIGFuIGlkZW50aWZpZWQgc3Vic3RhbmNlIGFzc29jaWF0ZWQgd2l0aCBhbGxlcmdpZXMgb3IgaW50b2xlcmFuY2VzLlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgQWxsZXJneUludG9sZXJhbmNlQ2F0ZWdvcnlDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIGJpb2xvZ2ljOiBBIHByZXBhcmF0aW9uIHRoYXQgaXMgc3ludGhlc2l6ZWQgZnJvbSBsaXZpbmcgb3JnYW5pc21zIG9yIHRoZWlyIHByb2R1Y3RzLCBlc3BlY2lhbGx5IGEgaHVtYW4gb3IgYW5pbWFsIHByb3RlaW4sIHN1Y2ggYXMgYSBob3Jtb25lIG9yIGFudGl0b3hpbiwgdGhhdCBpcyB1c2VkIGFzIGEgZGlhZ25vc3RpYywgcHJldmVudGl2ZSwgb3IgdGhlcmFwZXV0aWMgYWdlbnQuIEV4YW1wbGVzIG9mIGJpb2xvZ2ljIG1lZGljYXRpb25zIGluY2x1ZGU6IHZhY2NpbmVzOyBhbGxlcmdlbmljIGV4dHJhY3RzLCB3aGljaCBhcmUgdXNlZCBmb3IgYm90aCBkaWFnbm9zaXMgYW5kIHRyZWF0bWVudCAoZm9yIGV4YW1wbGUsIGFsbGVyZ3kgc2hvdHMpOyBnZW5lIHRoZXJhcGllczsgY2VsbHVsYXIgdGhlcmFwaWVzLiAgVGhlcmUgYXJlIG90aGVyIGJpb2xvZ2ljIHByb2R1Y3RzLCBzdWNoIGFzIHRpc3N1ZXMsIHdoaWNoIGFyZSBub3QgdHlwaWNhbGx5IGFzc29jaWF0ZWQgd2l0aCBhbGxlcmdpZXMuXHJcbiAgICovXHJcbiAgQmlvbG9naWM6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogZW52aXJvbm1lbnQ6IEFueSBzdWJzdGFuY2VzIHRoYXQgYXJlIGVuY291bnRlcmVkIGluIHRoZSBlbnZpcm9ubWVudCwgaW5jbHVkaW5nIGFueSBzdWJzdGFuY2Ugbm90IGFscmVhZHkgY2xhc3NpZmllZCBhcyBmb29kLCBtZWRpY2F0aW9uLCBvciBiaW9sb2dpYy5cclxuICAgKi9cclxuICBFbnZpcm9ubWVudDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBmb29kOiBBbnkgc3Vic3RhbmNlIGNvbnN1bWVkIHRvIHByb3ZpZGUgbnV0cml0aW9uYWwgc3VwcG9ydCBmb3IgdGhlIGJvZHkuXHJcbiAgICovXHJcbiAgRm9vZDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBtZWRpY2F0aW9uOiBTdWJzdGFuY2VzIGFkbWluaXN0ZXJlZCB0byBhY2hpZXZlIGEgcGh5c2lvbG9naWNhbCBlZmZlY3QuXHJcbiAgICovXHJcbiAgTWVkaWNhdGlvbjogQ29kaW5nQXJncztcclxufVxyXG5cclxuLyoqXHJcbiAqIENhdGVnb3J5IG9mIGFuIGlkZW50aWZpZWQgc3Vic3RhbmNlIGFzc29jaWF0ZWQgd2l0aCBhbGxlcmdpZXMgb3IgaW50b2xlcmFuY2VzLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IEFsbGVyZ3lJbnRvbGVyYW5jZUNhdGVnb3J5Q29kaW5nczpBbGxlcmd5SW50b2xlcmFuY2VDYXRlZ29yeUNvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogYmlvbG9naWM6IEEgcHJlcGFyYXRpb24gdGhhdCBpcyBzeW50aGVzaXplZCBmcm9tIGxpdmluZyBvcmdhbmlzbXMgb3IgdGhlaXIgcHJvZHVjdHMsIGVzcGVjaWFsbHkgYSBodW1hbiBvciBhbmltYWwgcHJvdGVpbiwgc3VjaCBhcyBhIGhvcm1vbmUgb3IgYW50aXRveGluLCB0aGF0IGlzIHVzZWQgYXMgYSBkaWFnbm9zdGljLCBwcmV2ZW50aXZlLCBvciB0aGVyYXBldXRpYyBhZ2VudC4gRXhhbXBsZXMgb2YgYmlvbG9naWMgbWVkaWNhdGlvbnMgaW5jbHVkZTogdmFjY2luZXM7IGFsbGVyZ2VuaWMgZXh0cmFjdHMsIHdoaWNoIGFyZSB1c2VkIGZvciBib3RoIGRpYWdub3NpcyBhbmQgdHJlYXRtZW50IChmb3IgZXhhbXBsZSwgYWxsZXJneSBzaG90cyk7IGdlbmUgdGhlcmFwaWVzOyBjZWxsdWxhciB0aGVyYXBpZXMuICBUaGVyZSBhcmUgb3RoZXIgYmlvbG9naWMgcHJvZHVjdHMsIHN1Y2ggYXMgdGlzc3Vlcywgd2hpY2ggYXJlIG5vdCB0eXBpY2FsbHkgYXNzb2NpYXRlZCB3aXRoIGFsbGVyZ2llcy5cclxuICAgKi9cclxuICBCaW9sb2dpYzoge1xyXG4gICAgZGlzcGxheTogXCJCaW9sb2dpY1wiLFxyXG4gICAgY29kZTogXCJiaW9sb2dpY1wiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvYWxsZXJneS1pbnRvbGVyYW5jZS1jYXRlZ29yeVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogZW52aXJvbm1lbnQ6IEFueSBzdWJzdGFuY2VzIHRoYXQgYXJlIGVuY291bnRlcmVkIGluIHRoZSBlbnZpcm9ubWVudCwgaW5jbHVkaW5nIGFueSBzdWJzdGFuY2Ugbm90IGFscmVhZHkgY2xhc3NpZmllZCBhcyBmb29kLCBtZWRpY2F0aW9uLCBvciBiaW9sb2dpYy5cclxuICAgKi9cclxuICBFbnZpcm9ubWVudDoge1xyXG4gICAgZGlzcGxheTogXCJFbnZpcm9ubWVudFwiLFxyXG4gICAgY29kZTogXCJlbnZpcm9ubWVudFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvYWxsZXJneS1pbnRvbGVyYW5jZS1jYXRlZ29yeVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogZm9vZDogQW55IHN1YnN0YW5jZSBjb25zdW1lZCB0byBwcm92aWRlIG51dHJpdGlvbmFsIHN1cHBvcnQgZm9yIHRoZSBib2R5LlxyXG4gICAqL1xyXG4gIEZvb2Q6IHtcclxuICAgIGRpc3BsYXk6IFwiRm9vZFwiLFxyXG4gICAgY29kZTogXCJmb29kXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9hbGxlcmd5LWludG9sZXJhbmNlLWNhdGVnb3J5XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBtZWRpY2F0aW9uOiBTdWJzdGFuY2VzIGFkbWluaXN0ZXJlZCB0byBhY2hpZXZlIGEgcGh5c2lvbG9naWNhbCBlZmZlY3QuXHJcbiAgICovXHJcbiAgTWVkaWNhdGlvbjoge1xyXG4gICAgZGlzcGxheTogXCJNZWRpY2F0aW9uXCIsXHJcbiAgICBjb2RlOiBcIm1lZGljYXRpb25cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2FsbGVyZ3ktaW50b2xlcmFuY2UtY2F0ZWdvcnlcIixcclxuICB9LFxyXG59IGFzIGNvbnN0O1xyXG4iXX0=