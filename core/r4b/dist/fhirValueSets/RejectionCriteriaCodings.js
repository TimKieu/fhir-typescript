// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/rejection-criteria|4.3.0
/**
 * Criterion for rejection of the specimen by laboratory.
 */
export const RejectionCriteriaCodings = {
    /**
     * broken: specimen container broken.
     */
    BrokenSpecimenContainer: {
        display: "broken specimen container",
        code: "broken",
        system: "http://terminology.hl7.org/CodeSystem/rejection-criteria",
    },
    /**
     * clotted: specimen clotted.
     */
    SpecimenClotted: {
        display: "specimen clotted",
        code: "clotted",
        system: "http://terminology.hl7.org/CodeSystem/rejection-criteria",
    },
    /**
     * hemolized: blood specimen hemolized.
     */
    HemolizedSpecimen: {
        display: "hemolized specimen",
        code: "hemolized",
        system: "http://terminology.hl7.org/CodeSystem/rejection-criteria",
    },
    /**
     * insufficient: insufficient quantity of specimen.
     */
    InsufficientSpecimenVolume: {
        display: "insufficient specimen volume",
        code: "insufficient",
        system: "http://terminology.hl7.org/CodeSystem/rejection-criteria",
    },
    /**
     * wrong-temperature: specimen temperature inappropriate.
     */
    SpecimenTemperatureInappropriate: {
        display: "specimen temperature inappropriate",
        code: "wrong-temperature",
        system: "http://terminology.hl7.org/CodeSystem/rejection-criteria",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVqZWN0aW9uQ3JpdGVyaWFDb2RpbmdzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9SZWplY3Rpb25Dcml0ZXJpYUNvZGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLGdEQUFnRDtBQUNoRCxrQ0FBa0M7QUFDbEMsdUVBQXVFO0FBOEJ2RTs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLHdCQUF3QixHQUErQjtJQUNsRTs7T0FFRztJQUNILHVCQUF1QixFQUFFO1FBQ3ZCLE9BQU8sRUFBRSwyQkFBMkI7UUFDcEMsSUFBSSxFQUFFLFFBQVE7UUFDZCxNQUFNLEVBQUUsMERBQTBEO0tBQ25FO0lBQ0Q7O09BRUc7SUFDSCxlQUFlLEVBQUU7UUFDZixPQUFPLEVBQUUsa0JBQWtCO1FBQzNCLElBQUksRUFBRSxTQUFTO1FBQ2YsTUFBTSxFQUFFLDBEQUEwRDtLQUNuRTtJQUNEOztPQUVHO0lBQ0gsaUJBQWlCLEVBQUU7UUFDakIsT0FBTyxFQUFFLG9CQUFvQjtRQUM3QixJQUFJLEVBQUUsV0FBVztRQUNqQixNQUFNLEVBQUUsMERBQTBEO0tBQ25FO0lBQ0Q7O09BRUc7SUFDSCwwQkFBMEIsRUFBRTtRQUMxQixPQUFPLEVBQUUsOEJBQThCO1FBQ3ZDLElBQUksRUFBRSxjQUFjO1FBQ3BCLE1BQU0sRUFBRSwwREFBMEQ7S0FDbkU7SUFDRDs7T0FFRztJQUNILGdDQUFnQyxFQUFFO1FBQ2hDLE9BQU8sRUFBRSxvQ0FBb0M7UUFDN0MsSUFBSSxFQUFFLG1CQUFtQjtRQUN6QixNQUFNLEVBQUUsMERBQTBEO0tBQ25FO0NBQ08sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNGIuY29yZSB2ZXJzaW9uOiA0LjMuMFxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvcmVqZWN0aW9uLWNyaXRlcmlhfDQuMy4wXHJcblxyXG5pbXBvcnQgeyBDb2RpbmdBcmdzIH0gZnJvbSAnLi4vZmhpci9Db2RpbmcuanMnXHJcblxyXG4vKipcclxuICogQ3JpdGVyaW9uIGZvciByZWplY3Rpb24gb2YgdGhlIHNwZWNpbWVuIGJ5IGxhYm9yYXRvcnkuXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBSZWplY3Rpb25Dcml0ZXJpYUNvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogYnJva2VuOiBzcGVjaW1lbiBjb250YWluZXIgYnJva2VuLlxyXG4gICAqL1xyXG4gIEJyb2tlblNwZWNpbWVuQ29udGFpbmVyOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIGNsb3R0ZWQ6IHNwZWNpbWVuIGNsb3R0ZWQuXHJcbiAgICovXHJcbiAgU3BlY2ltZW5DbG90dGVkOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIGhlbW9saXplZDogYmxvb2Qgc3BlY2ltZW4gaGVtb2xpemVkLlxyXG4gICAqL1xyXG4gIEhlbW9saXplZFNwZWNpbWVuOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIGluc3VmZmljaWVudDogaW5zdWZmaWNpZW50IHF1YW50aXR5IG9mIHNwZWNpbWVuLlxyXG4gICAqL1xyXG4gIEluc3VmZmljaWVudFNwZWNpbWVuVm9sdW1lOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIHdyb25nLXRlbXBlcmF0dXJlOiBzcGVjaW1lbiB0ZW1wZXJhdHVyZSBpbmFwcHJvcHJpYXRlLlxyXG4gICAqL1xyXG4gIFNwZWNpbWVuVGVtcGVyYXR1cmVJbmFwcHJvcHJpYXRlOiBDb2RpbmdBcmdzO1xyXG59XHJcblxyXG4vKipcclxuICogQ3JpdGVyaW9uIGZvciByZWplY3Rpb24gb2YgdGhlIHNwZWNpbWVuIGJ5IGxhYm9yYXRvcnkuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgUmVqZWN0aW9uQ3JpdGVyaWFDb2RpbmdzOlJlamVjdGlvbkNyaXRlcmlhQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBicm9rZW46IHNwZWNpbWVuIGNvbnRhaW5lciBicm9rZW4uXHJcbiAgICovXHJcbiAgQnJva2VuU3BlY2ltZW5Db250YWluZXI6IHtcclxuICAgIGRpc3BsYXk6IFwiYnJva2VuIHNwZWNpbWVuIGNvbnRhaW5lclwiLFxyXG4gICAgY29kZTogXCJicm9rZW5cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL3JlamVjdGlvbi1jcml0ZXJpYVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogY2xvdHRlZDogc3BlY2ltZW4gY2xvdHRlZC5cclxuICAgKi9cclxuICBTcGVjaW1lbkNsb3R0ZWQ6IHtcclxuICAgIGRpc3BsYXk6IFwic3BlY2ltZW4gY2xvdHRlZFwiLFxyXG4gICAgY29kZTogXCJjbG90dGVkXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9yZWplY3Rpb24tY3JpdGVyaWFcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIGhlbW9saXplZDogYmxvb2Qgc3BlY2ltZW4gaGVtb2xpemVkLlxyXG4gICAqL1xyXG4gIEhlbW9saXplZFNwZWNpbWVuOiB7XHJcbiAgICBkaXNwbGF5OiBcImhlbW9saXplZCBzcGVjaW1lblwiLFxyXG4gICAgY29kZTogXCJoZW1vbGl6ZWRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL3JlamVjdGlvbi1jcml0ZXJpYVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogaW5zdWZmaWNpZW50OiBpbnN1ZmZpY2llbnQgcXVhbnRpdHkgb2Ygc3BlY2ltZW4uXHJcbiAgICovXHJcbiAgSW5zdWZmaWNpZW50U3BlY2ltZW5Wb2x1bWU6IHtcclxuICAgIGRpc3BsYXk6IFwiaW5zdWZmaWNpZW50IHNwZWNpbWVuIHZvbHVtZVwiLFxyXG4gICAgY29kZTogXCJpbnN1ZmZpY2llbnRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL3JlamVjdGlvbi1jcml0ZXJpYVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogd3JvbmctdGVtcGVyYXR1cmU6IHNwZWNpbWVuIHRlbXBlcmF0dXJlIGluYXBwcm9wcmlhdGUuXHJcbiAgICovXHJcbiAgU3BlY2ltZW5UZW1wZXJhdHVyZUluYXBwcm9wcmlhdGU6IHtcclxuICAgIGRpc3BsYXk6IFwic3BlY2ltZW4gdGVtcGVyYXR1cmUgaW5hcHByb3ByaWF0ZVwiLFxyXG4gICAgY29kZTogXCJ3cm9uZy10ZW1wZXJhdHVyZVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vcmVqZWN0aW9uLWNyaXRlcmlhXCIsXHJcbiAgfSxcclxufSBhcyBjb25zdDtcclxuIl19