// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/vaccine-code|4.3.0
/**
 * This identifies the vaccine substance administered - CVX codes.
 */
export const VaccineCodings = {
    /**
     * Code: 01
     */
    DiphtheriaTetanusToxoidsAndPertussisVaccine: {
        display: "diphtheria, tetanus toxoids and pertussis vaccine",
        code: "01",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 02
     */
    TrivalentPoliovirusVaccineLiveOral: {
        display: "trivalent poliovirus vaccine, live, oral",
        code: "02",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 03
     */
    MeaslesMumpsAndRubellaVirusVaccine: {
        display: "measles, mumps and rubella virus vaccine",
        code: "03",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 04
     */
    MeaslesAndRubellaVirusVaccine: {
        display: "measles and rubella virus vaccine",
        code: "04",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 05
     */
    MeaslesVirusVaccine: {
        display: "measles virus vaccine",
        code: "05",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 06
     */
    RubellaVirusVaccine: {
        display: "rubella virus vaccine",
        code: "06",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 07
     */
    MumpsVirusVaccine: {
        display: "mumps virus vaccine",
        code: "07",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 08
     */
    HepatitisBVaccinePediatricOrPediatricAdolescentDosage: {
        display: "hepatitis B vaccine, pediatric or pediatric/adolescent dosage",
        code: "08",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 09
     */
    TetanusAndDiphtheriaToxoidsAdsorbedPreservativeFreeForAdultUse2LfOfTetanusToxoidAnd2LfOfDiphtheriaToxoid: {
        display: "tetanus and diphtheria toxoids, adsorbed, preservative free, for adult use (2 Lf of tetanus toxoid and 2 Lf of diphtheria toxoid)",
        code: "09",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 10
     */
    PoliovirusVaccineInactivated: {
        display: "poliovirus vaccine, inactivated",
        code: "10",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 100
     */
    PneumococcalConjugateVaccine7Valent: {
        display: "pneumococcal conjugate vaccine, 7 valent",
        code: "100",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 101
     */
    TyphoidViCapsularPolysaccharideVaccine: {
        display: "typhoid Vi capsular polysaccharide vaccine",
        code: "101",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 102
     */
    DTPHaemophilusInfluenzaeTypeBConjugateAndHepatitisBVaccine: {
        display: "DTP- Haemophilus influenzae type b conjugate and hepatitis b vaccine",
        code: "102",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 103
     */
    MeningococcalCConjugateVaccine: {
        display: "meningococcal C conjugate vaccine",
        code: "103",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 104
     */
    HepatitisAAndHepatitisBVaccine: {
        display: "hepatitis A and hepatitis B vaccine",
        code: "104",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 105
     */
    VacciniaSmallpoxVaccineDiluted: {
        display: "vaccinia (smallpox) vaccine, diluted",
        code: "105",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 106
     */
    DiphtheriaTetanusToxoidsAndAcellularPertussisVaccine5PertussisAntigens: {
        display: "diphtheria, tetanus toxoids and acellular pertussis vaccine, 5 pertussis antigens",
        code: "106",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 107
     */
    DiphtheriaTetanusToxoidsAndAcellularPertussisVaccineUnspecifiedFormulation: {
        display: "diphtheria, tetanus toxoids and acellular pertussis vaccine, unspecified formulation",
        code: "107",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 108
     */
    MeningococcalACWYVaccineUnspecifiedFormulation: {
        display: "meningococcal ACWY vaccine, unspecified formulation",
        code: "108",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 109
     */
    PneumococcalVaccineUnspecifiedFormulation: {
        display: "pneumococcal vaccine, unspecified formulation",
        code: "109",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 11
     */
    PertussisVaccine: {
        display: "pertussis vaccine",
        code: "11",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 110
     */
    DTaPHepatitisBAndPoliovirusVaccine: {
        display: "DTaP-hepatitis B and poliovirus vaccine",
        code: "110",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 111
     */
    InfluenzaVirusVaccineLiveAttenuatedForIntranasalUse: {
        display: "influenza virus vaccine, live, attenuated, for intranasal use",
        code: "111",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 112
     */
    TetanusToxoidUnspecifiedFormulation: {
        display: "tetanus toxoid, unspecified formulation",
        code: "112",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 113
     */
    TetanusAndDiphtheriaToxoidsAdsorbedPreservativeFreeForAdultUse5LfOfTetanusToxoidAnd2LfOfDiphtheriaToxoid: {
        display: "tetanus and diphtheria toxoids, adsorbed, preservative free, for adult use (5 Lf of tetanus toxoid and 2 Lf of diphtheria toxoid)",
        code: "113",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 114
     */
    MeningococcalPolysaccharideGroupsACYAndW135DiphtheriaToxoidConjugateVaccineMCV4P: {
        display: "meningococcal polysaccharide (groups A, C, Y and W-135) diphtheria toxoid conjugate vaccine (MCV4P)",
        code: "114",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 115
     */
    TetanusToxoidReducedDiphtheriaToxoidAndAcellularPertussisVaccineAdsorbed: {
        display: "tetanus toxoid, reduced diphtheria toxoid, and acellular pertussis vaccine, adsorbed",
        code: "115",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 116
     */
    RotavirusLivePentavalentVaccine: {
        display: "rotavirus, live, pentavalent vaccine",
        code: "116",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 117
     */
    VaricellaZosterImmuneGlobulinInvestigationalNewDrug: {
        display: "varicella zoster immune globulin (Investigational New Drug)",
        code: "117",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 118
     */
    HumanPapillomaVirusVaccineBivalent: {
        display: "human papilloma virus vaccine, bivalent",
        code: "118",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 119
     */
    RotavirusLiveMonovalentVaccine: {
        display: "rotavirus, live, monovalent vaccine",
        code: "119",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 12
     */
    DiphtheriaAntitoxin: {
        display: "diphtheria antitoxin",
        code: "12",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 120
     */
    DiphtheriaTetanusToxoidsAndAcellularPertussisVaccineHaemophilusInfluenzaeTypeBConjugateAndPoliovirusVaccineInactivatedDTaPHibIPV: {
        display: "diphtheria, tetanus toxoids and acellular pertussis vaccine, Haemophilus influenzae type b conjugate, and poliovirus vaccine, inactivated (DTaP-Hib-IPV)",
        code: "120",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 121
     */
    ZosterVaccineLive: {
        display: "zoster vaccine, live",
        code: "121",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 122
     */
    RotavirusVaccineUnspecifiedFormulation: {
        display: "rotavirus vaccine, unspecified formulation",
        code: "122",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 123
     */
    InfluenzaVirusVaccineH5N1AVietnam12032004NationalStockpile: {
        display: "influenza virus vaccine, H5N1, A/Vietnam/1203/2004 (national stockpile)",
        code: "123",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 125
     */
    NovelInfluenzaH1N109LiveVirusForNasalAdministration: {
        display: "Novel Influenza-H1N1-09, live virus for nasal administration",
        code: "125",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 126
     */
    NovelInfluenzaH1N109PreservativeFreeInjectable: {
        display: "Novel influenza-H1N1-09, preservative-free, injectable",
        code: "126",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 127
     */
    NovelInfluenzaH1N109Injectable: {
        display: "Novel influenza-H1N1-09, injectable",
        code: "127",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 128
     */
    NovelInfluenzaH1N109AllFormulations: {
        display: "Novel influenza-H1N1-09, all formulations",
        code: "128",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 129
     */
    JapaneseEncephalitisVaccineUnspecifiedFormulation: {
        display: "Japanese Encephalitis vaccine, unspecified formulation",
        code: "129",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 13
     */
    TetanusImmuneGlobulin: {
        display: "tetanus immune globulin",
        code: "13",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 130
     */
    DiphtheriaTetanusToxoidsAndAcellularPertussisVaccineAndPoliovirusVaccineInactivated: {
        display: "Diphtheria, tetanus toxoids and acellular pertussis vaccine, and poliovirus vaccine, inactivated",
        code: "130",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 131
     */
    HistoricalRecordOfATyphusVaccination: {
        display: "Historical record of a typhus vaccination",
        code: "131",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 132
     */
    HistoricalDiphtheriaAndTetanusToxoidsAndAcellularPertussisPoliovirusHaemophilusBConjugateAndHepatitisBRecombinantVaccine: {
        display: "Historical diphtheria and tetanus toxoids and acellular pertussis, poliovirus, Haemophilus b conjugate and hepatitis B (recombinant) vaccine.",
        code: "132",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 133
     */
    PneumococcalConjugateVaccine13Valent: {
        display: "pneumococcal conjugate vaccine, 13 valent",
        code: "133",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 134
     */
    JapaneseEncephalitisVaccineForIntramuscularAdministration: {
        display: "Japanese Encephalitis vaccine for intramuscular administration",
        code: "134",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 135
     */
    InfluenzaHighDoseSeasonalPreservativeFree: {
        display: "influenza, high dose seasonal, preservative-free",
        code: "135",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 136
     */
    MeningococcalOligosaccharideGroupsACYAndW135DiphtheriaToxoidConjugateVaccineMCV4O: {
        display: "meningococcal oligosaccharide (groups A, C, Y and W-135) diphtheria toxoid conjugate vaccine (MCV4O)",
        code: "136",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 137
     */
    HPVUnspecifiedFormulation: {
        display: "HPV, unspecified formulation",
        code: "137",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 138
     */
    TetanusAndDiphtheriaToxoidsNotAdsorbedForAdultUse: {
        display: "tetanus and diphtheria toxoids, not adsorbed, for adult use",
        code: "138",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 139
     */
    TdAdultUnspecifiedFormulation: {
        display: "Td(adult) unspecified formulation",
        code: "139",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 14
     */
    ImmuneGlobulinUnspecifiedFormulation: {
        display: "immune globulin, unspecified formulation",
        code: "14",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 140
     */
    InfluenzaSeasonalInjectablePreservativeFree: {
        display: "Influenza, seasonal, injectable, preservative free",
        code: "140",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 141
     */
    InfluenzaSeasonalInjectable: {
        display: "Influenza, seasonal, injectable",
        code: "141",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 142
     */
    TetanusToxoidNotAdsorbed: {
        display: "tetanus toxoid, not adsorbed",
        code: "142",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 143
     */
    AdenovirusType4AndType7LiveOral: {
        display: "Adenovirus, type 4 and type 7, live, oral",
        code: "143",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 144
     */
    SeasonalInfluenzaIntradermalPreservativeFree: {
        display: "seasonal influenza, intradermal, preservative free",
        code: "144",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 145
     */
    RespiratorySyncytialVirusMonoclonalAntibodyMotavizumabIntramuscular: {
        display: "respiratory syncytial virus monoclonal antibody (motavizumab), intramuscular",
        code: "145",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 146
     */
    DiphtheriaAndTetanusToxoidsAndAcellularPertussisAdsorbedInactivatedPoliovirusHaemophilusBConjugateMeningococcalProteinConjugateAndHepatitisBRecombinantVaccine: {
        display: "Diphtheria and Tetanus Toxoids and Acellular Pertussis Adsorbed, Inactivated Poliovirus, Haemophilus b Conjugate (Meningococcal Protein Conjugate), and Hepatitis B (Recombinant) Vaccine.",
        code: "146",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 147
     */
    MeningococcalMCV4UnspecifiedConjugateFormulationGroupsACYAndW135: {
        display: "Meningococcal, MCV4, unspecified conjugate formulation(groups A, C, Y and W-135)",
        code: "147",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 148
     */
    MeningococcalGroupsCAndYAndHaemophilusBTetanusToxoidConjugateVaccine: {
        display: "Meningococcal Groups C and Y and Haemophilus b Tetanus Toxoid Conjugate Vaccine",
        code: "148",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 149
     */
    InfluenzaLiveIntranasalQuadrivalent: {
        display: "influenza, live, intranasal, quadrivalent",
        code: "149",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 15
     */
    InfluenzaVirusVaccineSplitVirusInclPurifiedSurfaceAntigenRetiredCODE: {
        display: "influenza virus vaccine, split virus (incl. purified surface antigen)-retired CODE",
        code: "15",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 150
     */
    InfluenzaInjectableQuadrivalentPreservativeFree: {
        display: "Influenza, injectable, quadrivalent, preservative free",
        code: "150",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 151
     */
    InfluenzaNasalUnspecifiedFormulation: {
        display: "influenza nasal, unspecified formulation",
        code: "151",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 152
     */
    PneumococcalConjugateUnspecifiedFormulation: {
        display: "Pneumococcal Conjugate, unspecified formulation",
        code: "152",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 153
     */
    InfluenzaInjectableMadinDarbyCanineKidneyPreservativeFree: {
        display: "Influenza, injectable, Madin Darby Canine Kidney, preservative free",
        code: "153",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 154
     */
    HepatitisAImmuneGlobulin: {
        display: "Hepatitis A immune globulin",
        code: "154",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 155
     */
    SeasonalTrivalentRecombinantInjectableInfluenzaVaccinePreservativeFree: {
        display: "Seasonal, trivalent, recombinant, injectable influenza vaccine, preservative free",
        code: "155",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 156
     */
    RhoDImmuneGlobulinIVOrIM: {
        display: "Rho(D) Immune globulin- IV or IM",
        code: "156",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 157
     */
    RhoDImmuneGlobulinIM: {
        display: "Rho(D) Immune globulin - IM",
        code: "157",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 158
     */
    InfluenzaInjectableQuadrivalentContainsPreservative: {
        display: "influenza, injectable, quadrivalent, contains preservative",
        code: "158",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 159
     */
    RhoDUnspecifiedFormulation: {
        display: "Rho(D) Unspecified formulation",
        code: "159",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 16
     */
    InfluenzaVirusVaccineWholeVirus: {
        display: "influenza virus vaccine, whole virus",
        code: "16",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 160
     */
    InfluenzaAMonovalentH5N1AdjuvantedNationalStockpile2013: {
        display: "Influenza A monovalent (H5N1), adjuvanted, National stockpile 2013",
        code: "160",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 161
     */
    InfluenzaInjectableQuadrivalentPreservativeFreePediatric: {
        display: "Influenza, injectable,quadrivalent, preservative free, pediatric",
        code: "161",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 162
     */
    MeningococcalBVaccineFullyRecombinant: {
        display: "meningococcal B vaccine, fully recombinant",
        code: "162",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 163
     */
    MeningococcalBVaccineRecombinantOMVAdjuvanted: {
        display: "meningococcal B vaccine, recombinant, OMV, adjuvanted",
        code: "163",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 164
     */
    MeningococcalBUnspecifiedFormulation: {
        display: "meningococcal B, unspecified formulation",
        code: "164",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 165
     */
    HumanPapillomavirus9ValentVaccine: {
        display: "Human Papillomavirus 9-valent vaccine",
        code: "165",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 166
     */
    InfluenzaIntradermalQuadrivalentPreservativeFreeInjectable: {
        display: "influenza, intradermal, quadrivalent, preservative free, injectable",
        code: "166",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 167
     */
    MeningococcalVaccineOfUnknownFormulationAndUnknownSerogroups: {
        display: "meningococcal vaccine of unknown formulation and unknown serogroups",
        code: "167",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 168
     */
    SeasonalTrivalentInfluenzaVaccineAdjuvantedPreservativeFree: {
        display: "Seasonal trivalent influenza vaccine, adjuvanted, preservative free",
        code: "168",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 169
     */
    HepALiveAttenuatedIM: {
        display: "Hep A, live attenuated-IM",
        code: "169",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 17
     */
    HaemophilusInfluenzaeTypeBVaccineConjugateUnspecifiedFormulation: {
        display: "Haemophilus influenzae type b vaccine, conjugate unspecified formulation",
        code: "17",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 170
     */
    NonUSDiphtheriaTetanusToxoidsAndAcellularPertussisVaccineHaemophilusInfluenzaeTypeBConjugateAndPoliovirusVaccineInactivatedDTaPHibIPV: {
        display: "non-US diphtheria, tetanus toxoids and acellular pertussis vaccine, Haemophilus influenzae type b conjugate, and poliovirus vaccine, inactivated (DTaP-Hib-IPV)",
        code: "170",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 171
     */
    InfluenzaInjectableMadinDarbyCanineKidneyPreservativeFreeQuadrivalent: {
        display: "Influenza, injectable, Madin Darby Canine Kidney, preservative free, quadrivalent",
        code: "171",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 172
     */
    CholeraWCRBS: {
        display: "cholera, WC-rBS",
        code: "172",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 173
     */
    CholeraBivWC: {
        display: "cholera, BivWC",
        code: "173",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 174
     */
    CholeraLiveAttenuated: {
        display: "cholera, live attenuated",
        code: "174",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 175
     */
    HumanRabiesVaccineFromHumanDiploidCellCulture: {
        display: "Human Rabies vaccine from human diploid cell culture",
        code: "175",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 176
     */
    HumanRabiesVaccineFromChickenFibroblastCulture: {
        display: "Human rabies vaccine from Chicken fibroblast culture",
        code: "176",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 177
     */
    PneumococcalConjugateVaccine10Valent: {
        display: "pneumococcal conjugate vaccine, 10 valent",
        code: "177",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 178
     */
    NonUSBivalentOralPolioVaccineTypes1And3: {
        display: "Non-US bivalent oral polio vaccine (types 1 and 3)",
        code: "178",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 179
     */
    NonUSMonovalentOralPolioVaccineUnspecifiedFormulation: {
        display: "Non-US monovalent oral polio vaccine, unspecified formulation",
        code: "179",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 18
     */
    RabiesVaccineForIntramuscularInjectionRETIREDCODE: {
        display: "rabies vaccine, for intramuscular injection RETIRED CODE",
        code: "18",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 180
     */
    TetanusImmuneGlobulin_180: {
        display: "tetanus immune globulin",
        code: "180",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 181
     */
    AnthraxImmuneGlobulin: {
        display: "anthrax immune globulin",
        code: "181",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 182
     */
    OralPolioVaccineUnspecifiedFormulation: {
        display: "Oral Polio Vaccine, Unspecified formulation",
        code: "182",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 183
     */
    YellowFeverVaccineAlternativeFormulation: {
        display: "Yellow fever vaccine alternative formulation",
        code: "183",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 184
     */
    YellowFeverVaccineUnspecifiedFormulation: {
        display: "Yellow fever vaccine, unspecified formulation",
        code: "184",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 185
     */
    SeasonalQuadrivalentRecombinantInjectableInfluenzaVaccinePreservativeFree: {
        display: "Seasonal, quadrivalent, recombinant, injectable influenza vaccine, preservative free",
        code: "185",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 186
     */
    InfluenzaInjectableMadinDarbyCanineKidneyQuadrivalentWithPreservative: {
        display: "Influenza, injectable, Madin Darby Canine Kidney,  quadrivalent with preservative",
        code: "186",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 187
     */
    ZosterVaccineRecombinant: {
        display: "zoster vaccine recombinant",
        code: "187",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 188
     */
    ZosterVaccineUnspecifiedFormulation: {
        display: "zoster vaccine, unspecified formulation",
        code: "188",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 189
     */
    HepatitisBVaccineRecombinantCpGAdjuvanted: {
        display: "Hepatitis B vaccine (recombinant), CpG adjuvanted",
        code: "189",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 19
     */
    BacillusCalmetteGuerinVaccine: {
        display: "Bacillus Calmette-Guerin vaccine",
        code: "19",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 190
     */
    TyphoidConjugateVaccineNonUS: {
        display: "Typhoid conjugate vaccine (non-US)",
        code: "190",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 191
     */
    MeningococcalAPolysaccharideVaccineNonUS: {
        display: "meningococcal A polysaccharide vaccine (non-US)",
        code: "191",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 192
     */
    MeningococcalACPolysaccharideVaccineNonUS: {
        display: "meningococcal AC polysaccharide vaccine (non-US)",
        code: "192",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 193
     */
    HepatitisAAndHepatitisBVaccinePediatricAdolescentNonUS: {
        display: "hepatitis A and hepatitis B vaccine, pediatric/adolescent (non-US)",
        code: "193",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 194
     */
    InfluenzaSouthernHemisphereUnspecifiedFormulation: {
        display: "influenza, Southern Hemisphere, unspecified formulation",
        code: "194",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 195
     */
    DiphtheriaTetanusPoliomyelitisAdsorbed: {
        display: "Diphtheria, Tetanus, Poliomyelitis adsorbed",
        code: "195",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 196
     */
    TetanusAndDiphtheriaToxoidsAdsorbedPreservativeFreeForAdultUseLfUnspecified: {
        display: "tetanus and diphtheria toxoids, adsorbed, preservative free, for adult use, Lf unspecified",
        code: "196",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 197
     */
    InfluenzaHighDoseSeasonalQuadrivalent7mLDosePreservativeFree: {
        display: "influenza, high-dose seasonal, quadrivalent, .7mL dose, preservative free",
        code: "197",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 198
     */
    DiphtheriaPertussisTetanusHepatitisBHaemophilusInfluenzaTypeBPentavalent: {
        display: "Diphtheria, pertussis, tetanus, hepatitis B, Haemophilus Influenza Type b, (Pentavalent)",
        code: "198",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 20
     */
    DiphtheriaTetanusToxoidsAndAcellularPertussisVaccine: {
        display: "diphtheria, tetanus toxoids and acellular pertussis vaccine",
        code: "20",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 200
     */
    InfluenzaSeasonalSouthernHemisphereQuadrivalentPediatric025mLDosePreservativeFree: {
        display: "influenza, seasonal, Southern Hemisphere, quadrivalent, pediatric 0.25mL dose, preservative free",
        code: "200",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 201
     */
    InfluenzaSeasonalSouthernHemisphereQuadrivalent05mLDoseNoPreservative: {
        display: "influenza, seasonal, Southern Hemisphere, quadrivalent, 0.5mL dose, no preservative",
        code: "201",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 202
     */
    InfluenzaSeasonalSouthernHemisphereQuadrivalent05mLDoseWithPreservative: {
        display: "influenza, seasonal, Southern Hemisphere, quadrivalent, 0.5mL dose, with preservative",
        code: "202",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 203
     */
    MeningococcalPolysaccharideGroupsACYW135TetanusToxoidConjugateVaccine5mLDosePreservativeFree: {
        display: "meningococcal polysaccharide (groups A, C, Y, W-135) tetanus toxoid conjugate vaccine .5mL dose, preservative free",
        code: "203",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 204
     */
    EbolaZaireVaccineLiveRecombinant1mLDose: {
        display: "Ebola Zaire vaccine, live, recombinant, 1mL dose",
        code: "204",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 205
     */
    InfluenzaSeasonalVaccineQuadrivalentAdjuvanted5mLDosePreservativeFree: {
        display: "influenza, seasonal vaccine, quadrivalent, adjuvanted, .5mL dose, preservative free",
        code: "205",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 206
     */
    SmallpoxMonkeypoxVaccineLiveAttenuatedPreservativeFreeNationalStockpile: {
        display: "smallpox monkeypox vaccine, live attenuated, preservative free (National Stockpile)",
        code: "206",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 207
     */
    SARSCOV2COVID19VaccineMRNASpikeProteinLNPPreservativeFree100Mcg05mLDose: {
        display: "SARS-COV-2 (COVID-19) vaccine, mRNA, spike protein, LNP, preservative free, 100 mcg/0.5mL dose",
        code: "207",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 208
     */
    SARSCOV2COVID19VaccineMRNASpikeProteinLNPPreservativeFree30Mcg03mLDose: {
        display: "SARS-COV-2 (COVID-19) vaccine, mRNA, spike protein, LNP, preservative free, 30 mcg/0.3mL dose",
        code: "208",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 21
     */
    VaricellaVirusVaccine: {
        display: "varicella virus vaccine",
        code: "21",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 210
     */
    SARSCOV2COVID19VaccineVectorNonReplicatingRecombinantSpikeProteinChAdOx1PreservativeFree05ML: {
        display: "SARS-COV-2 (COVID-19) vaccine, vector non-replicating, recombinant spike protein-ChAdOx1, preservative free, 0.5 mL",
        code: "210",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 211
     */
    SARSCOV2COVID19VaccineSubunitRecombinantSpikeProteinNanoparticlePlusMatrixM1AdjuvantPreservativeFree05mLPerDose: {
        display: "SARS-COV-2 (COVID-19) vaccine, Subunit, recombinant spike protein-nanoparticle+Matrix-M1 Adjuvant, preservative free, 0.5mL per dose",
        code: "211",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 212
     */
    SARSCOV2COVID19VaccineVectorNonReplicatingRecombinantSpikeProteinAd26PreservativeFree05Ml: {
        display: "SARS-COV-2 (COVID-19) vaccine, vector non-replicating, recombinant spike protein-Ad26, preservative free, 0.5 ml",
        code: "212",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 213
     */
    SARSCOV2COVID19VaccineUNSPECIFIED: {
        display: "SARS-COV-2 (COVID-19) vaccine, UNSPECIFIED",
        code: "213",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 214
     */
    EbolaUnspecified: {
        display: "Ebola, unspecified",
        code: "214",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 22
     */
    DTPHaemophilusInfluenzaeTypeBConjugateVaccine: {
        display: "DTP-Haemophilus influenzae type b conjugate vaccine",
        code: "22",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 23
     */
    PlagueVaccine: {
        display: "plague vaccine",
        code: "23",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 24
     */
    AnthraxVaccine: {
        display: "anthrax vaccine",
        code: "24",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 25
     */
    TyphoidVaccineLiveOral: {
        display: "typhoid vaccine, live, oral",
        code: "25",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 26
     */
    CholeraVaccineUnspecifiedFormulation: {
        display: "cholera vaccine, unspecified formulation",
        code: "26",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 27
     */
    BotulinumAntitoxin: {
        display: "botulinum antitoxin",
        code: "27",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 28
     */
    DiphtheriaAndTetanusToxoidsAdsorbedForPediatricUse: {
        display: "diphtheria and tetanus toxoids, adsorbed for pediatric use",
        code: "28",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 29
     */
    CytomegalovirusImmuneGlobulinIntravenous: {
        display: "cytomegalovirus immune globulin, intravenous",
        code: "29",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 30
     */
    HepatitisBImmuneGlobulin: {
        display: "hepatitis B immune globulin",
        code: "30",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 31
     */
    HepatitisAVaccinePediatricDosageUnspecifiedFormulation: {
        display: "hepatitis A vaccine, pediatric dosage, unspecified formulation",
        code: "31",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 32
     */
    MeningococcalPolysaccharideVaccineMPSV4: {
        display: "meningococcal polysaccharide vaccine (MPSV4)",
        code: "32",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 33
     */
    PneumococcalPolysaccharideVaccine23Valent: {
        display: "pneumococcal polysaccharide vaccine, 23 valent",
        code: "33",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 34
     */
    RabiesImmuneGlobulin: {
        display: "rabies immune globulin",
        code: "34",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 35
     */
    TetanusToxoidAdsorbed: {
        display: "tetanus toxoid, adsorbed",
        code: "35",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 36
     */
    VaricellaZosterImmuneGlobulin: {
        display: "varicella zoster immune globulin",
        code: "36",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 37
     */
    YellowFeverVaccine: {
        display: "yellow fever vaccine",
        code: "37",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 38
     */
    RubellaAndMumpsVirusVaccine: {
        display: "rubella and mumps virus vaccine",
        code: "38",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 39
     */
    JapaneseEncephalitisVaccineSC: {
        display: "Japanese Encephalitis Vaccine SC",
        code: "39",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 40
     */
    RabiesVaccineForIntradermalInjection: {
        display: "rabies vaccine, for intradermal injection",
        code: "40",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 41
     */
    TyphoidVaccineParenteralOtherThanAcetoneKilledDried: {
        display: "typhoid vaccine, parenteral, other than acetone-killed, dried",
        code: "41",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 42
     */
    HepatitisBVaccineAdolescentHighRiskInfantDosage: {
        display: "hepatitis B vaccine, adolescent/high risk infant dosage",
        code: "42",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 43
     */
    HepatitisBVaccineAdultDosage: {
        display: "hepatitis B vaccine, adult dosage",
        code: "43",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 44
     */
    HepatitisBVaccineDialysisPatientDosage: {
        display: "hepatitis B vaccine, dialysis patient dosage",
        code: "44",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 45
     */
    HepatitisBVaccineUnspecifiedFormulation: {
        display: "hepatitis B vaccine, unspecified formulation",
        code: "45",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 46
     */
    HaemophilusInfluenzaeTypeBVaccinePRPDConjugate: {
        display: "Haemophilus influenzae type b vaccine, PRP-D conjugate",
        code: "46",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 47
     */
    HaemophilusInfluenzaeTypeBVaccineHbOCConjugate: {
        display: "Haemophilus influenzae type b vaccine, HbOC conjugate",
        code: "47",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 48
     */
    HaemophilusInfluenzaeTypeBVaccinePRPTConjugate: {
        display: "Haemophilus influenzae type b vaccine, PRP-T conjugate",
        code: "48",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 49
     */
    HaemophilusInfluenzaeTypeBVaccinePRPOMPConjugate: {
        display: "Haemophilus influenzae type b vaccine, PRP-OMP conjugate",
        code: "49",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 50
     */
    DTaPHaemophilusInfluenzaeTypeBConjugateVaccine: {
        display: "DTaP-Haemophilus influenzae type b conjugate vaccine",
        code: "50",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 51
     */
    HaemophilusInfluenzaeTypeBConjugateAndHepatitisBVaccine: {
        display: "Haemophilus influenzae type b conjugate and Hepatitis B vaccine",
        code: "51",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 52
     */
    HepatitisAVaccineAdultDosage: {
        display: "hepatitis A vaccine, adult dosage",
        code: "52",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 53
     */
    TyphoidVaccineParenteralAcetoneKilledDriedUSMilitary: {
        display: "typhoid vaccine, parenteral, acetone-killed, dried (U.S. military)",
        code: "53",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 54
     */
    AdenovirusVaccineType4LiveOral: {
        display: "adenovirus vaccine, type 4, live, oral",
        code: "54",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 55
     */
    AdenovirusVaccineType7LiveOral: {
        display: "adenovirus vaccine, type 7, live, oral",
        code: "55",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 56
     */
    DengueFeverVaccine: {
        display: "dengue fever vaccine",
        code: "56",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 57
     */
    HantavirusVaccine: {
        display: "hantavirus vaccine",
        code: "57",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 58
     */
    HepatitisCVaccine: {
        display: "hepatitis C vaccine",
        code: "58",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 59
     */
    HepatitisEVaccine: {
        display: "hepatitis E vaccine",
        code: "59",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 60
     */
    HerpesSimplexVirusType2Vaccine: {
        display: "herpes simplex virus, type 2 vaccine",
        code: "60",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 61
     */
    HumanImmunodeficiencyVirusVaccine: {
        display: "human immunodeficiency virus vaccine",
        code: "61",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 62
     */
    HumanPapillomaVirusVaccineQuadrivalent: {
        display: "human papilloma virus vaccine, quadrivalent",
        code: "62",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 63
     */
    JuninVirusVaccine: {
        display: "Junin virus vaccine",
        code: "63",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 64
     */
    LeishmaniasisVaccine: {
        display: "leishmaniasis vaccine",
        code: "64",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 65
     */
    LeprosyVaccine: {
        display: "leprosy vaccine",
        code: "65",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 66
     */
    LymeDiseaseVaccine: {
        display: "Lyme disease vaccine",
        code: "66",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 67
     */
    MalariaVaccine: {
        display: "malaria vaccine",
        code: "67",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 68
     */
    MelanomaVaccine: {
        display: "melanoma vaccine",
        code: "68",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 69
     */
    Parainfluenza3VirusVaccine: {
        display: "parainfluenza-3 virus vaccine",
        code: "69",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 70
     */
    QFeverVaccine: {
        display: "Q fever vaccine",
        code: "70",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 71
     */
    RespiratorySyncytialVirusImmuneGlobulinIntravenous: {
        display: "respiratory syncytial virus immune globulin, intravenous",
        code: "71",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 72
     */
    RheumaticFeverVaccine: {
        display: "rheumatic fever vaccine",
        code: "72",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 73
     */
    RiftValleyFeverVaccine: {
        display: "Rift Valley fever vaccine",
        code: "73",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 74
     */
    RotavirusLiveTetravalentVaccine: {
        display: "rotavirus, live, tetravalent vaccine",
        code: "74",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 75
     */
    VacciniaSmallpoxVaccine: {
        display: "vaccinia (smallpox) vaccine",
        code: "75",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 76
     */
    StaphylococcusBacteriophageLysate: {
        display: "Staphylococcus bacteriophage lysate",
        code: "76",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 77
     */
    TickBorneEncephalitisVaccine: {
        display: "tick-borne encephalitis vaccine",
        code: "77",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 78
     */
    TularemiaVaccine: {
        display: "tularemia vaccine",
        code: "78",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 79
     */
    VacciniaImmuneGlobulin: {
        display: "vaccinia immune globulin",
        code: "79",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 80
     */
    VenezuelanEquineEncephalitisLiveAttenuated: {
        display: "Venezuelan equine encephalitis, live, attenuated",
        code: "80",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 801
     */
    AS03Adjuvant: {
        display: "AS03 Adjuvant",
        code: "801",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 81
     */
    VenezuelanEquineEncephalitisInactivated: {
        display: "Venezuelan equine encephalitis, inactivated",
        code: "81",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 82
     */
    AdenovirusVaccineUnspecifiedFormulation: {
        display: "adenovirus vaccine, unspecified formulation",
        code: "82",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 83
     */
    HepatitisAVaccinePediatricAdolescentDosage2DoseSchedule: {
        display: "hepatitis A vaccine, pediatric/adolescent dosage, 2 dose schedule",
        code: "83",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 84
     */
    HepatitisAVaccinePediatricAdolescentDosage3DoseSchedule: {
        display: "hepatitis A vaccine, pediatric/adolescent dosage, 3 dose schedule",
        code: "84",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 85
     */
    HepatitisAVaccineUnspecifiedFormulation: {
        display: "hepatitis A vaccine, unspecified formulation",
        code: "85",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 86
     */
    ImmuneGlobulinIntramuscular: {
        display: "immune globulin, intramuscular",
        code: "86",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 87
     */
    ImmuneGlobulinIntravenous: {
        display: "immune globulin, intravenous",
        code: "87",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 88
     */
    InfluenzaVirusVaccineUnspecifiedFormulation: {
        display: "influenza virus vaccine, unspecified formulation",
        code: "88",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 89
     */
    PoliovirusVaccineUnspecifiedFormulation: {
        display: "poliovirus vaccine, unspecified formulation",
        code: "89",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 90
     */
    RabiesVaccineUnspecifiedFormulation: {
        display: "rabies vaccine, unspecified formulation",
        code: "90",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 91
     */
    TyphoidVaccineUnspecifiedFormulation: {
        display: "typhoid vaccine, unspecified formulation",
        code: "91",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 92
     */
    VenezuelanEquineEncephalitisVaccineUnspecifiedFormulation: {
        display: "Venezuelan equine encephalitis vaccine, unspecified formulation",
        code: "92",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 93
     */
    RespiratorySyncytialVirusMonoclonalAntibodyPalivizumabIntramuscular: {
        display: "respiratory syncytial virus monoclonal antibody (palivizumab), intramuscular",
        code: "93",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 94
     */
    MeaslesMumpsRubellaAndVaricellaVirusVaccine: {
        display: "measles, mumps, rubella, and varicella virus vaccine",
        code: "94",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 95
     */
    TuberculinSkinTestOldTuberculinMultipunctureDevice: {
        display: "tuberculin skin test; old tuberculin, multipuncture device",
        code: "95",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 96
     */
    TuberculinSkinTestPurifiedProteinDerivativeSolutionIntradermal: {
        display: "tuberculin skin test; purified protein derivative solution, intradermal",
        code: "96",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 97
     */
    TuberculinSkinTestPurifiedProteinDerivativeMultipunctureDevice: {
        display: "tuberculin skin test; purified protein derivative, multipuncture device",
        code: "97",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 98
     */
    TuberculinSkinTestUnspecifiedFormulation: {
        display: "tuberculin skin test; unspecified formulation",
        code: "98",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 99
     */
    RESERVEDDoNotUse: {
        display: "RESERVED - do not use",
        code: "99",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 998
     */
    NoVaccineAdministered: {
        display: "no vaccine administered",
        code: "998",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: 999
     */
    UnknownVaccineOrImmuneGlobulin: {
        display: "unknown vaccine or immune globulin",
        code: "999",
        system: "http://hl7.org/fhir/sid/cvx",
    },
    /**
     * Code: AGRPAL
     */
    Agrippal: {
        display: "Agrippal",
        code: "AGRPAL",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: AVAXM
     */
    Avaxim: {
        display: "Avaxim",
        code: "AVAXM",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: BCG
     */
    BCG: {
        display: "BCG",
        code: "BCG",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: CDT
     */
    CDT: {
        display: "CDT",
        code: "CDT",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: CMX
     */
    COMVAX: {
        display: "COMVAX",
        code: "CMX",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: DTP
     */
    TripleAntigen: {
        display: "Triple Antigen",
        code: "DTP",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: DTPA
     */
    DTPa: {
        display: "DTPa",
        code: "DTPA",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: ENGP
     */
    EngerixB: {
        display: "Engerix B",
        code: "ENGP",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: FLRIX
     */
    Fluarix: {
        display: "Fluarix",
        code: "FLRIX",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: FLUVAX
     */
    Fluvax: {
        display: "Fluvax",
        code: "FLUVAX",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: FLVRN
     */
    Fluvirin: {
        display: "Fluvirin",
        code: "FLVRN",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: FVXJNR
     */
    FluvaxJunior: {
        display: "Fluvax Junior",
        code: "FVXJNR",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: GNDIP
     */
    Diphtheria: {
        display: "Diphtheria",
        code: "GNDIP",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: GNFLU
     */
    Influenza: {
        display: "Influenza",
        code: "GNFLU",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: GNHEP
     */
    HepatitisB: {
        display: "Hepatitis B",
        code: "GNHEP",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: GNHIB
     */
    HIB: {
        display: "HIB",
        code: "GNHIB",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: GNHPA
     */
    HepatitisA: {
        display: "Hepatitis A",
        code: "GNHPA",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: GNJEN
     */
    JapaneseEncephalitis: {
        display: "Japanese Encephalitis",
        code: "GNJEN",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: GNMEA
     */
    Measles: {
        display: "Measles",
        code: "GNMEA",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: GNMEN
     */
    MeningococcalC: {
        display: "Meningococcal C",
        code: "GNMEN",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: GNMUM
     */
    Mumps: {
        display: "Mumps",
        code: "GNMUM",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: GNPNE
     */
    Pneumococcal: {
        display: "Pneumococcal",
        code: "GNPNE",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: GNPOL
     */
    Polio: {
        display: "Polio",
        code: "GNPOL",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: GNROX
     */
    Rotavirus: {
        display: "Rotavirus",
        code: "GNROX",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: GNRUB
     */
    Rubella: {
        display: "Rubella",
        code: "GNRUB",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: GNTET
     */
    Tetanus: {
        display: "Tetanus",
        code: "GNTET",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: GNVAR
     */
    Varicella: {
        display: "Varicella",
        code: "GNVAR",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: HATWNJ
     */
    TwinrixJunior: {
        display: "Twinrix Junior",
        code: "HATWNJ",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: HAVAQ
     */
    VaqtaPaedAdol: {
        display: "Vaqta Paed/Adol",
        code: "HAVAQ",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: HAVJ
     */
    HavrixJunior: {
        display: "Havrix Junior",
        code: "HAVJ",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: HBOC
     */
    HibTITER: {
        display: "HibTITER",
        code: "HBOC",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: HBV
     */
    HBV: {
        display: "HBV",
        code: "HBV",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: HBVP
     */
    HBVAXII: {
        display: "HBVAX II",
        code: "HBVP",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: HBX
     */
    Hiberix: {
        display: "Hiberix",
        code: "HBX",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: IFHX
     */
    InfanrixHexa: {
        display: "Infanrix Hexa",
        code: "IFHX",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: IFIP
     */
    InfanrixIPV: {
        display: "Infanrix-IPV",
        code: "IFIP",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: IFPA
     */
    InfanrixPenta: {
        display: "Infanrix Penta",
        code: "IFPA",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: IFX
     */
    Infanrix: {
        display: "Infanrix",
        code: "IFX",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: IFXB
     */
    InfanrixHepB: {
        display: "InfanrixHepB",
        code: "IFXB",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: INFLUV
     */
    Influvac: {
        display: "Influvac",
        code: "INFLUV",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: IPV
     */
    IPOL: {
        display: "IPOL",
        code: "IPV",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: JEVAX
     */
    JEVAX: {
        display: "JE-VAX",
        code: "JEVAX",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: MENJUG
     */
    Menjugate: {
        display: "Menjugate",
        code: "MENJUG",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: MENTEC
     */
    Meningitec: {
        display: "Meningitec",
        code: "MENTEC",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: MENUME
     */
    Menomune: {
        display: "Menomune",
        code: "MENUME",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: MENVAX
     */
    MencevaxACWY: {
        display: "Mencevax ACWY",
        code: "MENVAX",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: MMR
     */
    MMR: {
        display: "MMR",
        code: "MMR",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: MMRCSL
     */
    MMRII: {
        display: "MMR II",
        code: "MMRCSL",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: MMRSKB
     */
    Priorix: {
        display: "Priorix",
        code: "MMRSKB",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: MNTRX
     */
    Menitorix: {
        display: "Menitorix",
        code: "MNTRX",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: NEISVC
     */
    NeisVacC: {
        display: "NeisVac-C",
        code: "NEISVC",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: OPV
     */
    PolioOPV: {
        display: "Polio",
        code: "OPV",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: P
     */
    Pertussis: {
        display: "Pertussis",
        code: "P",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: PANVAX
     */
    Panvax: {
        display: "Panvax",
        code: "PANVAX",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: PDCL
     */
    Pediacel: {
        display: "Pediacel",
        code: "PDCL",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: PLCL
     */
    Poliacel: {
        display: "Poliacel",
        code: "PLCL",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: PNEUMO
     */
    Pneumovax: {
        display: "Pneumovax",
        code: "PNEUMO",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: PROQAD
     */
    ProQuad: {
        display: "ProQuad",
        code: "PROQAD",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: PRPD
     */
    ProHIBit: {
        display: "ProHIBit",
        code: "PRPD",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: PRPOMP
     */
    PedvaxHIB: {
        display: "PedvaxHIB",
        code: "PRPOMP",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: PRPT
     */
    ActHIB: {
        display: "ActHIB",
        code: "PRPT",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: PRVNR
     */
    Prevenar7: {
        display: "Prevenar 7",
        code: "PRVNR",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: PRVTH
     */
    Prevenar13: {
        display: "Prevenar 13",
        code: "PRVTH",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: PRXTEX
     */
    PriorixTetra: {
        display: "Priorix-Tetra",
        code: "PRXTEX",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: QDCL
     */
    Quadracel: {
        display: "Quadracel",
        code: "QDCL",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: ROTRIX
     */
    Rotarix: {
        display: "Rotarix",
        code: "ROTRIX",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: ROTTEQ
     */
    Rotateq: {
        display: "Rotateq",
        code: "ROTTEQ",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: SYNFLX
     */
    Synflorix: {
        display: "Synflorix",
        code: "SYNFLX",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: TCL
     */
    Tripacel: {
        display: "Tripacel",
        code: "TCL",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: VAXGRP
     */
    Vaxigrip: {
        display: "Vaxigrip",
        code: "VAXGRP",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: VGRJNR
     */
    VaxigripJunior: {
        display: "Vaxigrip Junior",
        code: "VGRJNR",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: VLRIX
     */
    Varilrix: {
        display: "Varilrix",
        code: "VLRIX",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
    /**
     * Code: VRVAX
     */
    Varivax: {
        display: "Varivax",
        code: "VRVAX",
        system: "urn:oid:1.2.36.1.2001.1005.17",
    },
};
//# sourceMappingURL=data:application/json;base64,