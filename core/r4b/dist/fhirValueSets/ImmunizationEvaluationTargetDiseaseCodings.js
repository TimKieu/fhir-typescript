// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/immunization-evaluation-target-disease|4.3.0
/**
 * The value set to instantiate this attribute should be drawn from a terminologically robust code system that consists of or contains concepts to support describing the disease that the evaluation is against. This value set is provided as a suggestive example and includes the SNOMED CT concepts from the 64572001 (Disease) hierarchy.
 */
export const ImmunizationEvaluationTargetDiseaseCodings = {
    /**
     * Code: 14189004
     */
    VAL14189004: {
        code: "14189004",
        system: "http://snomed.info/sct",
    },
    /**
     * Code: 1857005
     */
    VAL1857005: {
        code: "1857005",
        system: "http://snomed.info/sct",
    },
    /**
     * Code: 27836007
     */
    VAL27836007: {
        code: "27836007",
        system: "http://snomed.info/sct",
    },
    /**
     * Code: 36653000
     */
    VAL36653000: {
        code: "36653000",
        system: "http://snomed.info/sct",
    },
    /**
     * Code: 36989005
     */
    VAL36989005: {
        code: "36989005",
        system: "http://snomed.info/sct",
    },
    /**
     * Code: 397430003
     */
    VAL397430003: {
        code: "397430003",
        system: "http://snomed.info/sct",
    },
    /**
     * Code: 398102009
     */
    VAL398102009: {
        code: "398102009",
        system: "http://snomed.info/sct",
    },
    /**
     * Code: 709410003
     */
    VAL709410003: {
        code: "709410003",
        system: "http://snomed.info/sct",
    },
    /**
     * Code: 76902006
     */
    VAL76902006: {
        code: "76902006",
        system: "http://snomed.info/sct",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSW1tdW5pemF0aW9uRXZhbHVhdGlvblRhcmdldERpc2Vhc2VDb2RpbmdzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9JbW11bml6YXRpb25FdmFsdWF0aW9uVGFyZ2V0RGlzZWFzZUNvZGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLGdEQUFnRDtBQUNoRCxrQ0FBa0M7QUFDbEMsMkZBQTJGO0FBOEMzRjs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLDBDQUEwQyxHQUFpRDtJQUN0Rzs7T0FFRztJQUNILFdBQVcsRUFBRTtRQUNYLElBQUksRUFBRSxVQUFVO1FBQ2hCLE1BQU0sRUFBRSx3QkFBd0I7S0FDakM7SUFDRDs7T0FFRztJQUNILFVBQVUsRUFBRTtRQUNWLElBQUksRUFBRSxTQUFTO1FBQ2YsTUFBTSxFQUFFLHdCQUF3QjtLQUNqQztJQUNEOztPQUVHO0lBQ0gsV0FBVyxFQUFFO1FBQ1gsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLHdCQUF3QjtLQUNqQztJQUNEOztPQUVHO0lBQ0gsV0FBVyxFQUFFO1FBQ1gsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLHdCQUF3QjtLQUNqQztJQUNEOztPQUVHO0lBQ0gsV0FBVyxFQUFFO1FBQ1gsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLHdCQUF3QjtLQUNqQztJQUNEOztPQUVHO0lBQ0gsWUFBWSxFQUFFO1FBQ1osSUFBSSxFQUFFLFdBQVc7UUFDakIsTUFBTSxFQUFFLHdCQUF3QjtLQUNqQztJQUNEOztPQUVHO0lBQ0gsWUFBWSxFQUFFO1FBQ1osSUFBSSxFQUFFLFdBQVc7UUFDakIsTUFBTSxFQUFFLHdCQUF3QjtLQUNqQztJQUNEOztPQUVHO0lBQ0gsWUFBWSxFQUFFO1FBQ1osSUFBSSxFQUFFLFdBQVc7UUFDakIsTUFBTSxFQUFFLHdCQUF3QjtLQUNqQztJQUNEOztPQUVHO0lBQ0gsV0FBVyxFQUFFO1FBQ1gsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLHdCQUF3QjtLQUNqQztDQUNPLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjRiLmNvcmUgdmVyc2lvbjogNC4zLjBcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L2ltbXVuaXphdGlvbi1ldmFsdWF0aW9uLXRhcmdldC1kaXNlYXNlfDQuMy4wXHJcblxyXG5pbXBvcnQgeyBDb2RpbmdBcmdzIH0gZnJvbSAnLi4vZmhpci9Db2RpbmcuanMnXHJcblxyXG4vKipcclxuICogVGhlIHZhbHVlIHNldCB0byBpbnN0YW50aWF0ZSB0aGlzIGF0dHJpYnV0ZSBzaG91bGQgYmUgZHJhd24gZnJvbSBhIHRlcm1pbm9sb2dpY2FsbHkgcm9idXN0IGNvZGUgc3lzdGVtIHRoYXQgY29uc2lzdHMgb2Ygb3IgY29udGFpbnMgY29uY2VwdHMgdG8gc3VwcG9ydCBkZXNjcmliaW5nIHRoZSBkaXNlYXNlIHRoYXQgdGhlIGV2YWx1YXRpb24gaXMgYWdhaW5zdC4gVGhpcyB2YWx1ZSBzZXQgaXMgcHJvdmlkZWQgYXMgYSBzdWdnZXN0aXZlIGV4YW1wbGUgYW5kIGluY2x1ZGVzIHRoZSBTTk9NRUQgQ1QgY29uY2VwdHMgZnJvbSB0aGUgNjQ1NzIwMDEgKERpc2Vhc2UpIGhpZXJhcmNoeS5cclxuICovXHJcbmV4cG9ydCB0eXBlIEltbXVuaXphdGlvbkV2YWx1YXRpb25UYXJnZXREaXNlYXNlQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBDb2RlOiAxNDE4OTAwNFxyXG4gICAqL1xyXG4gIFZBTDE0MTg5MDA0OiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IDE4NTcwMDVcclxuICAgKi9cclxuICBWQUwxODU3MDA1OiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IDI3ODM2MDA3XHJcbiAgICovXHJcbiAgVkFMMjc4MzYwMDc6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogMzY2NTMwMDBcclxuICAgKi9cclxuICBWQUwzNjY1MzAwMDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiAzNjk4OTAwNVxyXG4gICAqL1xyXG4gIFZBTDM2OTg5MDA1OiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IDM5NzQzMDAwM1xyXG4gICAqL1xyXG4gIFZBTDM5NzQzMDAwMzogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiAzOTgxMDIwMDlcclxuICAgKi9cclxuICBWQUwzOTgxMDIwMDk6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogNzA5NDEwMDAzXHJcbiAgICovXHJcbiAgVkFMNzA5NDEwMDAzOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IDc2OTAyMDA2XHJcbiAgICovXHJcbiAgVkFMNzY5MDIwMDY6IENvZGluZ0FyZ3M7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBUaGUgdmFsdWUgc2V0IHRvIGluc3RhbnRpYXRlIHRoaXMgYXR0cmlidXRlIHNob3VsZCBiZSBkcmF3biBmcm9tIGEgdGVybWlub2xvZ2ljYWxseSByb2J1c3QgY29kZSBzeXN0ZW0gdGhhdCBjb25zaXN0cyBvZiBvciBjb250YWlucyBjb25jZXB0cyB0byBzdXBwb3J0IGRlc2NyaWJpbmcgdGhlIGRpc2Vhc2UgdGhhdCB0aGUgZXZhbHVhdGlvbiBpcyBhZ2FpbnN0LiBUaGlzIHZhbHVlIHNldCBpcyBwcm92aWRlZCBhcyBhIHN1Z2dlc3RpdmUgZXhhbXBsZSBhbmQgaW5jbHVkZXMgdGhlIFNOT01FRCBDVCBjb25jZXB0cyBmcm9tIHRoZSA2NDU3MjAwMSAoRGlzZWFzZSkgaGllcmFyY2h5LlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IEltbXVuaXphdGlvbkV2YWx1YXRpb25UYXJnZXREaXNlYXNlQ29kaW5nczpJbW11bml6YXRpb25FdmFsdWF0aW9uVGFyZ2V0RGlzZWFzZUNvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogMTQxODkwMDRcclxuICAgKi9cclxuICBWQUwxNDE4OTAwNDoge1xyXG4gICAgY29kZTogXCIxNDE4OTAwNFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9zbm9tZWQuaW5mby9zY3RcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IDE4NTcwMDVcclxuICAgKi9cclxuICBWQUwxODU3MDA1OiB7XHJcbiAgICBjb2RlOiBcIjE4NTcwMDVcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vc25vbWVkLmluZm8vc2N0XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiAyNzgzNjAwN1xyXG4gICAqL1xyXG4gIFZBTDI3ODM2MDA3OiB7XHJcbiAgICBjb2RlOiBcIjI3ODM2MDA3XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Nub21lZC5pbmZvL3NjdFwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogMzY2NTMwMDBcclxuICAgKi9cclxuICBWQUwzNjY1MzAwMDoge1xyXG4gICAgY29kZTogXCIzNjY1MzAwMFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9zbm9tZWQuaW5mby9zY3RcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IDM2OTg5MDA1XHJcbiAgICovXHJcbiAgVkFMMzY5ODkwMDU6IHtcclxuICAgIGNvZGU6IFwiMzY5ODkwMDVcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vc25vbWVkLmluZm8vc2N0XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiAzOTc0MzAwMDNcclxuICAgKi9cclxuICBWQUwzOTc0MzAwMDM6IHtcclxuICAgIGNvZGU6IFwiMzk3NDMwMDAzXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Nub21lZC5pbmZvL3NjdFwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogMzk4MTAyMDA5XHJcbiAgICovXHJcbiAgVkFMMzk4MTAyMDA5OiB7XHJcbiAgICBjb2RlOiBcIjM5ODEwMjAwOVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9zbm9tZWQuaW5mby9zY3RcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IDcwOTQxMDAwM1xyXG4gICAqL1xyXG4gIFZBTDcwOTQxMDAwMzoge1xyXG4gICAgY29kZTogXCI3MDk0MTAwMDNcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vc25vbWVkLmluZm8vc2N0XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiA3NjkwMjAwNlxyXG4gICAqL1xyXG4gIFZBTDc2OTAyMDA2OiB7XHJcbiAgICBjb2RlOiBcIjc2OTAyMDA2XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Nub21lZC5pbmZvL3NjdFwiLFxyXG4gIH0sXHJcbn0gYXMgY29uc3Q7XHJcbiJdfQ==