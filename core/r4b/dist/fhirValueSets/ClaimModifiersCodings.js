// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/claim-modifiers|4.3.0
/**
 * This value set includes sample Modifier type codes.
 */
export const ClaimModifiersCodings = {
    /**
     * a: Repair of prior service or installation.
     */
    RepairOfPriorServiceOrInstallation: {
        display: "Repair of prior service or installation",
        code: "a",
        system: "http://terminology.hl7.org/CodeSystem/modifiers",
    },
    /**
     * b: Temporary service or installation.
     */
    TemporaryServiceOrInstallation: {
        display: "Temporary service or installation",
        code: "b",
        system: "http://terminology.hl7.org/CodeSystem/modifiers",
    },
    /**
     * c: Treatment associated with TMJ.
     */
    TMJTreatment: {
        display: "TMJ treatment",
        code: "c",
        system: "http://terminology.hl7.org/CodeSystem/modifiers",
    },
    /**
     * e: Implant or associated with an implant.
     */
    ImplantOrAssociatedWithAnImplant: {
        display: "Implant or associated with an implant",
        code: "e",
        system: "http://terminology.hl7.org/CodeSystem/modifiers",
    },
    /**
     * rooh: A Rush service or service performed outside of normal office hours.
     */
    RushOrOutsideOfOfficeHours: {
        display: "Rush or Outside of office hours",
        code: "rooh",
        system: "http://terminology.hl7.org/CodeSystem/modifiers",
    },
    /**
     * x: None.
     */
    None: {
        display: "None",
        code: "x",
        system: "http://terminology.hl7.org/CodeSystem/modifiers",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2xhaW1Nb2RpZmllcnNDb2RpbmdzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9DbGFpbU1vZGlmaWVyc0NvZGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLGdEQUFnRDtBQUNoRCxrQ0FBa0M7QUFDbEMsb0VBQW9FO0FBa0NwRTs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUE0QjtJQUM1RDs7T0FFRztJQUNILGtDQUFrQyxFQUFFO1FBQ2xDLE9BQU8sRUFBRSx5Q0FBeUM7UUFDbEQsSUFBSSxFQUFFLEdBQUc7UUFDVCxNQUFNLEVBQUUsaURBQWlEO0tBQzFEO0lBQ0Q7O09BRUc7SUFDSCw4QkFBOEIsRUFBRTtRQUM5QixPQUFPLEVBQUUsbUNBQW1DO1FBQzVDLElBQUksRUFBRSxHQUFHO1FBQ1QsTUFBTSxFQUFFLGlEQUFpRDtLQUMxRDtJQUNEOztPQUVHO0lBQ0gsWUFBWSxFQUFFO1FBQ1osT0FBTyxFQUFFLGVBQWU7UUFDeEIsSUFBSSxFQUFFLEdBQUc7UUFDVCxNQUFNLEVBQUUsaURBQWlEO0tBQzFEO0lBQ0Q7O09BRUc7SUFDSCxnQ0FBZ0MsRUFBRTtRQUNoQyxPQUFPLEVBQUUsdUNBQXVDO1FBQ2hELElBQUksRUFBRSxHQUFHO1FBQ1QsTUFBTSxFQUFFLGlEQUFpRDtLQUMxRDtJQUNEOztPQUVHO0lBQ0gsMEJBQTBCLEVBQUU7UUFDMUIsT0FBTyxFQUFFLGlDQUFpQztRQUMxQyxJQUFJLEVBQUUsTUFBTTtRQUNaLE1BQU0sRUFBRSxpREFBaUQ7S0FDMUQ7SUFDRDs7T0FFRztJQUNILElBQUksRUFBRTtRQUNKLE9BQU8sRUFBRSxNQUFNO1FBQ2YsSUFBSSxFQUFFLEdBQUc7UUFDVCxNQUFNLEVBQUUsaURBQWlEO0tBQzFEO0NBQ08sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNGIuY29yZSB2ZXJzaW9uOiA0LjMuMFxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvY2xhaW0tbW9kaWZpZXJzfDQuMy4wXHJcblxyXG5pbXBvcnQgeyBDb2RpbmdBcmdzIH0gZnJvbSAnLi4vZmhpci9Db2RpbmcuanMnXHJcblxyXG4vKipcclxuICogVGhpcyB2YWx1ZSBzZXQgaW5jbHVkZXMgc2FtcGxlIE1vZGlmaWVyIHR5cGUgY29kZXMuXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBDbGFpbU1vZGlmaWVyc0NvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogYTogUmVwYWlyIG9mIHByaW9yIHNlcnZpY2Ugb3IgaW5zdGFsbGF0aW9uLlxyXG4gICAqL1xyXG4gIFJlcGFpck9mUHJpb3JTZXJ2aWNlT3JJbnN0YWxsYXRpb246IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogYjogVGVtcG9yYXJ5IHNlcnZpY2Ugb3IgaW5zdGFsbGF0aW9uLlxyXG4gICAqL1xyXG4gIFRlbXBvcmFyeVNlcnZpY2VPckluc3RhbGxhdGlvbjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBjOiBUcmVhdG1lbnQgYXNzb2NpYXRlZCB3aXRoIFRNSi5cclxuICAgKi9cclxuICBUTUpUcmVhdG1lbnQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogZTogSW1wbGFudCBvciBhc3NvY2lhdGVkIHdpdGggYW4gaW1wbGFudC5cclxuICAgKi9cclxuICBJbXBsYW50T3JBc3NvY2lhdGVkV2l0aEFuSW1wbGFudDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiByb29oOiBBIFJ1c2ggc2VydmljZSBvciBzZXJ2aWNlIHBlcmZvcm1lZCBvdXRzaWRlIG9mIG5vcm1hbCBvZmZpY2UgaG91cnMuXHJcbiAgICovXHJcbiAgUnVzaE9yT3V0c2lkZU9mT2ZmaWNlSG91cnM6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogeDogTm9uZS5cclxuICAgKi9cclxuICBOb25lOiBDb2RpbmdBcmdzO1xyXG59XHJcblxyXG4vKipcclxuICogVGhpcyB2YWx1ZSBzZXQgaW5jbHVkZXMgc2FtcGxlIE1vZGlmaWVyIHR5cGUgY29kZXMuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgQ2xhaW1Nb2RpZmllcnNDb2RpbmdzOkNsYWltTW9kaWZpZXJzQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBhOiBSZXBhaXIgb2YgcHJpb3Igc2VydmljZSBvciBpbnN0YWxsYXRpb24uXHJcbiAgICovXHJcbiAgUmVwYWlyT2ZQcmlvclNlcnZpY2VPckluc3RhbGxhdGlvbjoge1xyXG4gICAgZGlzcGxheTogXCJSZXBhaXIgb2YgcHJpb3Igc2VydmljZSBvciBpbnN0YWxsYXRpb25cIixcclxuICAgIGNvZGU6IFwiYVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vbW9kaWZpZXJzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBiOiBUZW1wb3Jhcnkgc2VydmljZSBvciBpbnN0YWxsYXRpb24uXHJcbiAgICovXHJcbiAgVGVtcG9yYXJ5U2VydmljZU9ySW5zdGFsbGF0aW9uOiB7XHJcbiAgICBkaXNwbGF5OiBcIlRlbXBvcmFyeSBzZXJ2aWNlIG9yIGluc3RhbGxhdGlvblwiLFxyXG4gICAgY29kZTogXCJiXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9tb2RpZmllcnNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIGM6IFRyZWF0bWVudCBhc3NvY2lhdGVkIHdpdGggVE1KLlxyXG4gICAqL1xyXG4gIFRNSlRyZWF0bWVudDoge1xyXG4gICAgZGlzcGxheTogXCJUTUogdHJlYXRtZW50XCIsXHJcbiAgICBjb2RlOiBcImNcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL21vZGlmaWVyc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogZTogSW1wbGFudCBvciBhc3NvY2lhdGVkIHdpdGggYW4gaW1wbGFudC5cclxuICAgKi9cclxuICBJbXBsYW50T3JBc3NvY2lhdGVkV2l0aEFuSW1wbGFudDoge1xyXG4gICAgZGlzcGxheTogXCJJbXBsYW50IG9yIGFzc29jaWF0ZWQgd2l0aCBhbiBpbXBsYW50XCIsXHJcbiAgICBjb2RlOiBcImVcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL21vZGlmaWVyc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogcm9vaDogQSBSdXNoIHNlcnZpY2Ugb3Igc2VydmljZSBwZXJmb3JtZWQgb3V0c2lkZSBvZiBub3JtYWwgb2ZmaWNlIGhvdXJzLlxyXG4gICAqL1xyXG4gIFJ1c2hPck91dHNpZGVPZk9mZmljZUhvdXJzOiB7XHJcbiAgICBkaXNwbGF5OiBcIlJ1c2ggb3IgT3V0c2lkZSBvZiBvZmZpY2UgaG91cnNcIixcclxuICAgIGNvZGU6IFwicm9vaFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vbW9kaWZpZXJzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiB4OiBOb25lLlxyXG4gICAqL1xyXG4gIE5vbmU6IHtcclxuICAgIGRpc3BsYXk6IFwiTm9uZVwiLFxyXG4gICAgY29kZTogXCJ4XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9tb2RpZmllcnNcIixcclxuICB9LFxyXG59IGFzIGNvbnN0O1xyXG4iXX0=