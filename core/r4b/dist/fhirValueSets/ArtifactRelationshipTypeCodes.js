// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/artifact-relationship-type|4.3.0
/**
 * Artifact Relationship Type
 */
export const ArtifactRelationshipTypeCodes = {
    /**
     * amended-with: Amended with
     */
    AmendedWith: "amended-with",
    /**
     * amends: Amends
     */
    Amends: "amends",
    /**
     * appended-with: Appended with
     */
    AppendedWith: "appended-with",
    /**
     * appends: Appends
     */
    Appends: "appends",
    /**
     * cited-by: Cited by
     */
    CitedBy: "cited-by",
    /**
     * cites: Cites
     */
    Cites: "cites",
    /**
     * comment-in: Comment In
     */
    CommentIn: "comment-in",
    /**
     * comments-on: Comments On
     */
    CommentsOn: "comments-on",
    /**
     * composed-of: Composed of
     */
    ComposedOf: "composed-of",
    /**
     * correction-in: Correction In
     */
    CorrectionIn: "correction-in",
    /**
     * corrects: Corrects
     */
    Corrects: "corrects",
    /**
     * depends-on: Depends on
     */
    DependsOn: "depends-on",
    /**
     * derived-from: Derived from
     */
    DerivedFrom: "derived-from",
    /**
     * part-of: Part of
     */
    PartOf: "part-of",
    /**
     * replaced-with: Replaced with
     */
    ReplacedWith: "replaced-with",
    /**
     * replaces: Replaces
     */
    Replaces: "replaces",
    /**
     * retracted-by: Retracted by
     */
    RetractedBy: "retracted-by",
    /**
     * retracts: Retracts
     */
    Retracts: "retracts",
    /**
     * similar-to: Similar to
     */
    SimilarTo: "similar-to",
    /**
     * supported-with: Supported with
     */
    SupportedWith: "supported-with",
    /**
     * supports: Supports
     */
    Supports: "supports",
    /**
     * transformed-into: Transformed into
     */
    TransformedInto: "transformed-into",
    /**
     * transformed-with: Transformed with
     */
    TransformedWith: "transformed-with",
    /**
     * transforms: Transforms
     */
    Transforms: "transforms",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXJ0aWZhY3RSZWxhdGlvbnNoaXBUeXBlQ29kZXMuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL0FydGlmYWN0UmVsYXRpb25zaGlwVHlwZUNvZGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQixnREFBZ0Q7QUFDaEQsa0NBQWtDO0FBQ2xDLCtFQUErRTtBQUUvRTs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLDZCQUE2QixHQUFHO0lBQzNDOztPQUVHO0lBQ0gsV0FBVyxFQUFFLGNBQWM7SUFDM0I7O09BRUc7SUFDSCxNQUFNLEVBQUUsUUFBUTtJQUNoQjs7T0FFRztJQUNILFlBQVksRUFBRSxlQUFlO0lBQzdCOztPQUVHO0lBQ0gsT0FBTyxFQUFFLFNBQVM7SUFDbEI7O09BRUc7SUFDSCxPQUFPLEVBQUUsVUFBVTtJQUNuQjs7T0FFRztJQUNILEtBQUssRUFBRSxPQUFPO0lBQ2Q7O09BRUc7SUFDSCxTQUFTLEVBQUUsWUFBWTtJQUN2Qjs7T0FFRztJQUNILFVBQVUsRUFBRSxhQUFhO0lBQ3pCOztPQUVHO0lBQ0gsVUFBVSxFQUFFLGFBQWE7SUFDekI7O09BRUc7SUFDSCxZQUFZLEVBQUUsZUFBZTtJQUM3Qjs7T0FFRztJQUNILFFBQVEsRUFBRSxVQUFVO0lBQ3BCOztPQUVHO0lBQ0gsU0FBUyxFQUFFLFlBQVk7SUFDdkI7O09BRUc7SUFDSCxXQUFXLEVBQUUsY0FBYztJQUMzQjs7T0FFRztJQUNILE1BQU0sRUFBRSxTQUFTO0lBQ2pCOztPQUVHO0lBQ0gsWUFBWSxFQUFFLGVBQWU7SUFDN0I7O09BRUc7SUFDSCxRQUFRLEVBQUUsVUFBVTtJQUNwQjs7T0FFRztJQUNILFdBQVcsRUFBRSxjQUFjO0lBQzNCOztPQUVHO0lBQ0gsUUFBUSxFQUFFLFVBQVU7SUFDcEI7O09BRUc7SUFDSCxTQUFTLEVBQUUsWUFBWTtJQUN2Qjs7T0FFRztJQUNILGFBQWEsRUFBRSxnQkFBZ0I7SUFDL0I7O09BRUc7SUFDSCxRQUFRLEVBQUUsVUFBVTtJQUNwQjs7T0FFRztJQUNILGVBQWUsRUFBRSxrQkFBa0I7SUFDbkM7O09BRUc7SUFDSCxlQUFlLEVBQUUsa0JBQWtCO0lBQ25DOztPQUVHO0lBQ0gsVUFBVSxFQUFFLFlBQVk7Q0FDaEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNGIuY29yZSB2ZXJzaW9uOiA0LjMuMFxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvYXJ0aWZhY3QtcmVsYXRpb25zaGlwLXR5cGV8NC4zLjBcclxuXHJcbi8qKlxyXG4gKiBBcnRpZmFjdCBSZWxhdGlvbnNoaXAgVHlwZVxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IEFydGlmYWN0UmVsYXRpb25zaGlwVHlwZUNvZGVzID0ge1xyXG4gIC8qKlxyXG4gICAqIGFtZW5kZWQtd2l0aDogQW1lbmRlZCB3aXRoXHJcbiAgICovXHJcbiAgQW1lbmRlZFdpdGg6IFwiYW1lbmRlZC13aXRoXCIsXHJcbiAgLyoqXHJcbiAgICogYW1lbmRzOiBBbWVuZHNcclxuICAgKi9cclxuICBBbWVuZHM6IFwiYW1lbmRzXCIsXHJcbiAgLyoqXHJcbiAgICogYXBwZW5kZWQtd2l0aDogQXBwZW5kZWQgd2l0aFxyXG4gICAqL1xyXG4gIEFwcGVuZGVkV2l0aDogXCJhcHBlbmRlZC13aXRoXCIsXHJcbiAgLyoqXHJcbiAgICogYXBwZW5kczogQXBwZW5kc1xyXG4gICAqL1xyXG4gIEFwcGVuZHM6IFwiYXBwZW5kc1wiLFxyXG4gIC8qKlxyXG4gICAqIGNpdGVkLWJ5OiBDaXRlZCBieVxyXG4gICAqL1xyXG4gIENpdGVkQnk6IFwiY2l0ZWQtYnlcIixcclxuICAvKipcclxuICAgKiBjaXRlczogQ2l0ZXNcclxuICAgKi9cclxuICBDaXRlczogXCJjaXRlc1wiLFxyXG4gIC8qKlxyXG4gICAqIGNvbW1lbnQtaW46IENvbW1lbnQgSW5cclxuICAgKi9cclxuICBDb21tZW50SW46IFwiY29tbWVudC1pblwiLFxyXG4gIC8qKlxyXG4gICAqIGNvbW1lbnRzLW9uOiBDb21tZW50cyBPblxyXG4gICAqL1xyXG4gIENvbW1lbnRzT246IFwiY29tbWVudHMtb25cIixcclxuICAvKipcclxuICAgKiBjb21wb3NlZC1vZjogQ29tcG9zZWQgb2ZcclxuICAgKi9cclxuICBDb21wb3NlZE9mOiBcImNvbXBvc2VkLW9mXCIsXHJcbiAgLyoqXHJcbiAgICogY29ycmVjdGlvbi1pbjogQ29ycmVjdGlvbiBJblxyXG4gICAqL1xyXG4gIENvcnJlY3Rpb25JbjogXCJjb3JyZWN0aW9uLWluXCIsXHJcbiAgLyoqXHJcbiAgICogY29ycmVjdHM6IENvcnJlY3RzXHJcbiAgICovXHJcbiAgQ29ycmVjdHM6IFwiY29ycmVjdHNcIixcclxuICAvKipcclxuICAgKiBkZXBlbmRzLW9uOiBEZXBlbmRzIG9uXHJcbiAgICovXHJcbiAgRGVwZW5kc09uOiBcImRlcGVuZHMtb25cIixcclxuICAvKipcclxuICAgKiBkZXJpdmVkLWZyb206IERlcml2ZWQgZnJvbVxyXG4gICAqL1xyXG4gIERlcml2ZWRGcm9tOiBcImRlcml2ZWQtZnJvbVwiLFxyXG4gIC8qKlxyXG4gICAqIHBhcnQtb2Y6IFBhcnQgb2ZcclxuICAgKi9cclxuICBQYXJ0T2Y6IFwicGFydC1vZlwiLFxyXG4gIC8qKlxyXG4gICAqIHJlcGxhY2VkLXdpdGg6IFJlcGxhY2VkIHdpdGhcclxuICAgKi9cclxuICBSZXBsYWNlZFdpdGg6IFwicmVwbGFjZWQtd2l0aFwiLFxyXG4gIC8qKlxyXG4gICAqIHJlcGxhY2VzOiBSZXBsYWNlc1xyXG4gICAqL1xyXG4gIFJlcGxhY2VzOiBcInJlcGxhY2VzXCIsXHJcbiAgLyoqXHJcbiAgICogcmV0cmFjdGVkLWJ5OiBSZXRyYWN0ZWQgYnlcclxuICAgKi9cclxuICBSZXRyYWN0ZWRCeTogXCJyZXRyYWN0ZWQtYnlcIixcclxuICAvKipcclxuICAgKiByZXRyYWN0czogUmV0cmFjdHNcclxuICAgKi9cclxuICBSZXRyYWN0czogXCJyZXRyYWN0c1wiLFxyXG4gIC8qKlxyXG4gICAqIHNpbWlsYXItdG86IFNpbWlsYXIgdG9cclxuICAgKi9cclxuICBTaW1pbGFyVG86IFwic2ltaWxhci10b1wiLFxyXG4gIC8qKlxyXG4gICAqIHN1cHBvcnRlZC13aXRoOiBTdXBwb3J0ZWQgd2l0aFxyXG4gICAqL1xyXG4gIFN1cHBvcnRlZFdpdGg6IFwic3VwcG9ydGVkLXdpdGhcIixcclxuICAvKipcclxuICAgKiBzdXBwb3J0czogU3VwcG9ydHNcclxuICAgKi9cclxuICBTdXBwb3J0czogXCJzdXBwb3J0c1wiLFxyXG4gIC8qKlxyXG4gICAqIHRyYW5zZm9ybWVkLWludG86IFRyYW5zZm9ybWVkIGludG9cclxuICAgKi9cclxuICBUcmFuc2Zvcm1lZEludG86IFwidHJhbnNmb3JtZWQtaW50b1wiLFxyXG4gIC8qKlxyXG4gICAqIHRyYW5zZm9ybWVkLXdpdGg6IFRyYW5zZm9ybWVkIHdpdGhcclxuICAgKi9cclxuICBUcmFuc2Zvcm1lZFdpdGg6IFwidHJhbnNmb3JtZWQtd2l0aFwiLFxyXG4gIC8qKlxyXG4gICAqIHRyYW5zZm9ybXM6IFRyYW5zZm9ybXNcclxuICAgKi9cclxuICBUcmFuc2Zvcm1zOiBcInRyYW5zZm9ybXNcIixcclxufSBhcyBjb25zdDtcclxuXHJcbi8qKlxyXG4gKiBBcnRpZmFjdCBSZWxhdGlvbnNoaXAgVHlwZVxyXG4gKi9cclxuZXhwb3J0IHR5cGUgQXJ0aWZhY3RSZWxhdGlvbnNoaXBUeXBlQ29kZVR5cGUgPSB0eXBlb2YgQXJ0aWZhY3RSZWxhdGlvbnNoaXBUeXBlQ29kZXNba2V5b2YgdHlwZW9mIEFydGlmYWN0UmVsYXRpb25zaGlwVHlwZUNvZGVzXTtcclxuIl19