// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/subscription-notification-type|4.3.0
/**
 * The type of notification represented by the status message.
 */
export const SubscriptionNotificationTypeCodings = {
    /**
     * event-notification: The status was generated for an event to the subscriber.
     */
    EventNotification: {
        display: "Event Notification",
        code: "event-notification",
        system: "http://hl7.org/fhir/subscription-notification-type",
    },
    /**
     * handshake: The status was generated as part of the setup or verification of a communications channel.
     */
    Handshake: {
        display: "Handshake",
        code: "handshake",
        system: "http://hl7.org/fhir/subscription-notification-type",
    },
    /**
     * heartbeat: The status was generated to perform a heartbeat notification to the subscriber.
     */
    Heartbeat: {
        display: "Heartbeat",
        code: "heartbeat",
        system: "http://hl7.org/fhir/subscription-notification-type",
    },
    /**
     * query-event: The status was generated in response to an event query/request.
     */
    QueryEvent: {
        display: "Query Event",
        code: "query-event",
        system: "http://hl7.org/fhir/subscription-notification-type",
    },
    /**
     * query-status: The status was generated in response to a status query/request.
     */
    QueryStatus: {
        display: "Query Status",
        code: "query-status",
        system: "http://hl7.org/fhir/subscription-notification-type",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3Vic2NyaXB0aW9uTm90aWZpY2F0aW9uVHlwZUNvZGluZ3MuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL1N1YnNjcmlwdGlvbk5vdGlmaWNhdGlvblR5cGVDb2RpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQixnREFBZ0Q7QUFDaEQsa0NBQWtDO0FBQ2xDLG1GQUFtRjtBQThCbkY7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxtQ0FBbUMsR0FBMEM7SUFDeEY7O09BRUc7SUFDSCxpQkFBaUIsRUFBRTtRQUNqQixPQUFPLEVBQUUsb0JBQW9CO1FBQzdCLElBQUksRUFBRSxvQkFBb0I7UUFDMUIsTUFBTSxFQUFFLG9EQUFvRDtLQUM3RDtJQUNEOztPQUVHO0lBQ0gsU0FBUyxFQUFFO1FBQ1QsT0FBTyxFQUFFLFdBQVc7UUFDcEIsSUFBSSxFQUFFLFdBQVc7UUFDakIsTUFBTSxFQUFFLG9EQUFvRDtLQUM3RDtJQUNEOztPQUVHO0lBQ0gsU0FBUyxFQUFFO1FBQ1QsT0FBTyxFQUFFLFdBQVc7UUFDcEIsSUFBSSxFQUFFLFdBQVc7UUFDakIsTUFBTSxFQUFFLG9EQUFvRDtLQUM3RDtJQUNEOztPQUVHO0lBQ0gsVUFBVSxFQUFFO1FBQ1YsT0FBTyxFQUFFLGFBQWE7UUFDdEIsSUFBSSxFQUFFLGFBQWE7UUFDbkIsTUFBTSxFQUFFLG9EQUFvRDtLQUM3RDtJQUNEOztPQUVHO0lBQ0gsV0FBVyxFQUFFO1FBQ1gsT0FBTyxFQUFFLGNBQWM7UUFDdkIsSUFBSSxFQUFFLGNBQWM7UUFDcEIsTUFBTSxFQUFFLG9EQUFvRDtLQUM3RDtDQUNPLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjRiLmNvcmUgdmVyc2lvbjogNC4zLjBcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L3N1YnNjcmlwdGlvbi1ub3RpZmljYXRpb24tdHlwZXw0LjMuMFxyXG5cclxuaW1wb3J0IHsgQ29kaW5nQXJncyB9IGZyb20gJy4uL2ZoaXIvQ29kaW5nLmpzJ1xyXG5cclxuLyoqXHJcbiAqIFRoZSB0eXBlIG9mIG5vdGlmaWNhdGlvbiByZXByZXNlbnRlZCBieSB0aGUgc3RhdHVzIG1lc3NhZ2UuXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBTdWJzY3JpcHRpb25Ob3RpZmljYXRpb25UeXBlQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBldmVudC1ub3RpZmljYXRpb246IFRoZSBzdGF0dXMgd2FzIGdlbmVyYXRlZCBmb3IgYW4gZXZlbnQgdG8gdGhlIHN1YnNjcmliZXIuXHJcbiAgICovXHJcbiAgRXZlbnROb3RpZmljYXRpb246IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogaGFuZHNoYWtlOiBUaGUgc3RhdHVzIHdhcyBnZW5lcmF0ZWQgYXMgcGFydCBvZiB0aGUgc2V0dXAgb3IgdmVyaWZpY2F0aW9uIG9mIGEgY29tbXVuaWNhdGlvbnMgY2hhbm5lbC5cclxuICAgKi9cclxuICBIYW5kc2hha2U6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogaGVhcnRiZWF0OiBUaGUgc3RhdHVzIHdhcyBnZW5lcmF0ZWQgdG8gcGVyZm9ybSBhIGhlYXJ0YmVhdCBub3RpZmljYXRpb24gdG8gdGhlIHN1YnNjcmliZXIuXHJcbiAgICovXHJcbiAgSGVhcnRiZWF0OiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIHF1ZXJ5LWV2ZW50OiBUaGUgc3RhdHVzIHdhcyBnZW5lcmF0ZWQgaW4gcmVzcG9uc2UgdG8gYW4gZXZlbnQgcXVlcnkvcmVxdWVzdC5cclxuICAgKi9cclxuICBRdWVyeUV2ZW50OiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIHF1ZXJ5LXN0YXR1czogVGhlIHN0YXR1cyB3YXMgZ2VuZXJhdGVkIGluIHJlc3BvbnNlIHRvIGEgc3RhdHVzIHF1ZXJ5L3JlcXVlc3QuXHJcbiAgICovXHJcbiAgUXVlcnlTdGF0dXM6IENvZGluZ0FyZ3M7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBUaGUgdHlwZSBvZiBub3RpZmljYXRpb24gcmVwcmVzZW50ZWQgYnkgdGhlIHN0YXR1cyBtZXNzYWdlLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IFN1YnNjcmlwdGlvbk5vdGlmaWNhdGlvblR5cGVDb2RpbmdzOlN1YnNjcmlwdGlvbk5vdGlmaWNhdGlvblR5cGVDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIGV2ZW50LW5vdGlmaWNhdGlvbjogVGhlIHN0YXR1cyB3YXMgZ2VuZXJhdGVkIGZvciBhbiBldmVudCB0byB0aGUgc3Vic2NyaWJlci5cclxuICAgKi9cclxuICBFdmVudE5vdGlmaWNhdGlvbjoge1xyXG4gICAgZGlzcGxheTogXCJFdmVudCBOb3RpZmljYXRpb25cIixcclxuICAgIGNvZGU6IFwiZXZlbnQtbm90aWZpY2F0aW9uXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9zdWJzY3JpcHRpb24tbm90aWZpY2F0aW9uLXR5cGVcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIGhhbmRzaGFrZTogVGhlIHN0YXR1cyB3YXMgZ2VuZXJhdGVkIGFzIHBhcnQgb2YgdGhlIHNldHVwIG9yIHZlcmlmaWNhdGlvbiBvZiBhIGNvbW11bmljYXRpb25zIGNoYW5uZWwuXHJcbiAgICovXHJcbiAgSGFuZHNoYWtlOiB7XHJcbiAgICBkaXNwbGF5OiBcIkhhbmRzaGFrZVwiLFxyXG4gICAgY29kZTogXCJoYW5kc2hha2VcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3N1YnNjcmlwdGlvbi1ub3RpZmljYXRpb24tdHlwZVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogaGVhcnRiZWF0OiBUaGUgc3RhdHVzIHdhcyBnZW5lcmF0ZWQgdG8gcGVyZm9ybSBhIGhlYXJ0YmVhdCBub3RpZmljYXRpb24gdG8gdGhlIHN1YnNjcmliZXIuXHJcbiAgICovXHJcbiAgSGVhcnRiZWF0OiB7XHJcbiAgICBkaXNwbGF5OiBcIkhlYXJ0YmVhdFwiLFxyXG4gICAgY29kZTogXCJoZWFydGJlYXRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3N1YnNjcmlwdGlvbi1ub3RpZmljYXRpb24tdHlwZVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogcXVlcnktZXZlbnQ6IFRoZSBzdGF0dXMgd2FzIGdlbmVyYXRlZCBpbiByZXNwb25zZSB0byBhbiBldmVudCBxdWVyeS9yZXF1ZXN0LlxyXG4gICAqL1xyXG4gIFF1ZXJ5RXZlbnQ6IHtcclxuICAgIGRpc3BsYXk6IFwiUXVlcnkgRXZlbnRcIixcclxuICAgIGNvZGU6IFwicXVlcnktZXZlbnRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3N1YnNjcmlwdGlvbi1ub3RpZmljYXRpb24tdHlwZVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogcXVlcnktc3RhdHVzOiBUaGUgc3RhdHVzIHdhcyBnZW5lcmF0ZWQgaW4gcmVzcG9uc2UgdG8gYSBzdGF0dXMgcXVlcnkvcmVxdWVzdC5cclxuICAgKi9cclxuICBRdWVyeVN0YXR1czoge1xyXG4gICAgZGlzcGxheTogXCJRdWVyeSBTdGF0dXNcIixcclxuICAgIGNvZGU6IFwicXVlcnktc3RhdHVzXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9zdWJzY3JpcHRpb24tbm90aWZpY2F0aW9uLXR5cGVcIixcclxuICB9LFxyXG59IGFzIGNvbnN0O1xyXG4iXX0=