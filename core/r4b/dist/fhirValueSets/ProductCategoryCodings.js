// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/product-category|4.3.0
/**
 * Biologically Derived Product Category.
 */
export const ProductCategoryCodings = {
    /**
     * biologicalAgent: Biological agent of unspecified type.
     */
    BiologicalAgent: {
        display: "BiologicalAgent",
        code: "biologicalAgent",
        system: "http://hl7.org/fhir/product-category",
    },
    /**
     * cells: Collection of cells.
     */
    Cells: {
        display: "Cells",
        code: "cells",
        system: "http://hl7.org/fhir/product-category",
    },
    /**
     * fluid: Body fluid.
     */
    Fluid: {
        display: "Fluid",
        code: "fluid",
        system: "http://hl7.org/fhir/product-category",
    },
    /**
     * organ: A collection of tissues joined in a structural unit to serve a common function.
     */
    Organ: {
        display: "Organ",
        code: "organ",
        system: "http://hl7.org/fhir/product-category",
    },
    /**
     * tissue: An ensemble of similar cells and their extracellular matrix from the same origin that together carry out a specific function.
     */
    Tissue: {
        display: "Tissue",
        code: "tissue",
        system: "http://hl7.org/fhir/product-category",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUHJvZHVjdENhdGVnb3J5Q29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvUHJvZHVjdENhdGVnb3J5Q29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsZ0RBQWdEO0FBQ2hELGtDQUFrQztBQUNsQyxxRUFBcUU7QUE4QnJFOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sc0JBQXNCLEdBQTZCO0lBQzlEOztPQUVHO0lBQ0gsZUFBZSxFQUFFO1FBQ2YsT0FBTyxFQUFFLGlCQUFpQjtRQUMxQixJQUFJLEVBQUUsaUJBQWlCO1FBQ3ZCLE1BQU0sRUFBRSxzQ0FBc0M7S0FDL0M7SUFDRDs7T0FFRztJQUNILEtBQUssRUFBRTtRQUNMLE9BQU8sRUFBRSxPQUFPO1FBQ2hCLElBQUksRUFBRSxPQUFPO1FBQ2IsTUFBTSxFQUFFLHNDQUFzQztLQUMvQztJQUNEOztPQUVHO0lBQ0gsS0FBSyxFQUFFO1FBQ0wsT0FBTyxFQUFFLE9BQU87UUFDaEIsSUFBSSxFQUFFLE9BQU87UUFDYixNQUFNLEVBQUUsc0NBQXNDO0tBQy9DO0lBQ0Q7O09BRUc7SUFDSCxLQUFLLEVBQUU7UUFDTCxPQUFPLEVBQUUsT0FBTztRQUNoQixJQUFJLEVBQUUsT0FBTztRQUNiLE1BQU0sRUFBRSxzQ0FBc0M7S0FDL0M7SUFDRDs7T0FFRztJQUNILE1BQU0sRUFBRTtRQUNOLE9BQU8sRUFBRSxRQUFRO1FBQ2pCLElBQUksRUFBRSxRQUFRO1FBQ2QsTUFBTSxFQUFFLHNDQUFzQztLQUMvQztDQUNPLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjRiLmNvcmUgdmVyc2lvbjogNC4zLjBcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L3Byb2R1Y3QtY2F0ZWdvcnl8NC4zLjBcclxuXHJcbmltcG9ydCB7IENvZGluZ0FyZ3MgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiBCaW9sb2dpY2FsbHkgRGVyaXZlZCBQcm9kdWN0IENhdGVnb3J5LlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgUHJvZHVjdENhdGVnb3J5Q29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBiaW9sb2dpY2FsQWdlbnQ6IEJpb2xvZ2ljYWwgYWdlbnQgb2YgdW5zcGVjaWZpZWQgdHlwZS5cclxuICAgKi9cclxuICBCaW9sb2dpY2FsQWdlbnQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogY2VsbHM6IENvbGxlY3Rpb24gb2YgY2VsbHMuXHJcbiAgICovXHJcbiAgQ2VsbHM6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogZmx1aWQ6IEJvZHkgZmx1aWQuXHJcbiAgICovXHJcbiAgRmx1aWQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogb3JnYW46IEEgY29sbGVjdGlvbiBvZiB0aXNzdWVzIGpvaW5lZCBpbiBhIHN0cnVjdHVyYWwgdW5pdCB0byBzZXJ2ZSBhIGNvbW1vbiBmdW5jdGlvbi5cclxuICAgKi9cclxuICBPcmdhbjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiB0aXNzdWU6IEFuIGVuc2VtYmxlIG9mIHNpbWlsYXIgY2VsbHMgYW5kIHRoZWlyIGV4dHJhY2VsbHVsYXIgbWF0cml4IGZyb20gdGhlIHNhbWUgb3JpZ2luIHRoYXQgdG9nZXRoZXIgY2Fycnkgb3V0IGEgc3BlY2lmaWMgZnVuY3Rpb24uXHJcbiAgICovXHJcbiAgVGlzc3VlOiBDb2RpbmdBcmdzO1xyXG59XHJcblxyXG4vKipcclxuICogQmlvbG9naWNhbGx5IERlcml2ZWQgUHJvZHVjdCBDYXRlZ29yeS5cclxuICovXHJcbmV4cG9ydCBjb25zdCBQcm9kdWN0Q2F0ZWdvcnlDb2RpbmdzOlByb2R1Y3RDYXRlZ29yeUNvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogYmlvbG9naWNhbEFnZW50OiBCaW9sb2dpY2FsIGFnZW50IG9mIHVuc3BlY2lmaWVkIHR5cGUuXHJcbiAgICovXHJcbiAgQmlvbG9naWNhbEFnZW50OiB7XHJcbiAgICBkaXNwbGF5OiBcIkJpb2xvZ2ljYWxBZ2VudFwiLFxyXG4gICAgY29kZTogXCJiaW9sb2dpY2FsQWdlbnRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Byb2R1Y3QtY2F0ZWdvcnlcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIGNlbGxzOiBDb2xsZWN0aW9uIG9mIGNlbGxzLlxyXG4gICAqL1xyXG4gIENlbGxzOiB7XHJcbiAgICBkaXNwbGF5OiBcIkNlbGxzXCIsXHJcbiAgICBjb2RlOiBcImNlbGxzXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9wcm9kdWN0LWNhdGVnb3J5XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBmbHVpZDogQm9keSBmbHVpZC5cclxuICAgKi9cclxuICBGbHVpZDoge1xyXG4gICAgZGlzcGxheTogXCJGbHVpZFwiLFxyXG4gICAgY29kZTogXCJmbHVpZFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcHJvZHVjdC1jYXRlZ29yeVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogb3JnYW46IEEgY29sbGVjdGlvbiBvZiB0aXNzdWVzIGpvaW5lZCBpbiBhIHN0cnVjdHVyYWwgdW5pdCB0byBzZXJ2ZSBhIGNvbW1vbiBmdW5jdGlvbi5cclxuICAgKi9cclxuICBPcmdhbjoge1xyXG4gICAgZGlzcGxheTogXCJPcmdhblwiLFxyXG4gICAgY29kZTogXCJvcmdhblwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcHJvZHVjdC1jYXRlZ29yeVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogdGlzc3VlOiBBbiBlbnNlbWJsZSBvZiBzaW1pbGFyIGNlbGxzIGFuZCB0aGVpciBleHRyYWNlbGx1bGFyIG1hdHJpeCBmcm9tIHRoZSBzYW1lIG9yaWdpbiB0aGF0IHRvZ2V0aGVyIGNhcnJ5IG91dCBhIHNwZWNpZmljIGZ1bmN0aW9uLlxyXG4gICAqL1xyXG4gIFRpc3N1ZToge1xyXG4gICAgZGlzcGxheTogXCJUaXNzdWVcIixcclxuICAgIGNvZGU6IFwidGlzc3VlXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9wcm9kdWN0LWNhdGVnb3J5XCIsXHJcbiAgfSxcclxufSBhcyBjb25zdDtcclxuIl19