// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/coverage-class|4.3.0
/**
 * This value set includes Coverage Class codes.
 */
export const CoverageClassCodings = {
    /**
     * class: A class of benefits.
     */
    Class: {
        display: "Class",
        code: "class",
        system: "http://terminology.hl7.org/CodeSystem/coverage-class",
    },
    /**
     * group: An employee group
     */
    Group: {
        display: "Group",
        code: "group",
        system: "http://terminology.hl7.org/CodeSystem/coverage-class",
    },
    /**
     * plan: A specific suite of benefits.
     */
    Plan: {
        display: "Plan",
        code: "plan",
        system: "http://terminology.hl7.org/CodeSystem/coverage-class",
    },
    /**
     * rxbin: Pharmacy benefit manager's Business Identification Number.
     */
    RXBIN: {
        display: "RX BIN",
        code: "rxbin",
        system: "http://terminology.hl7.org/CodeSystem/coverage-class",
    },
    /**
     * rxgroup: A Pharmacy Benefit Manager specified Group number.
     */
    RXGroup: {
        display: "RX Group",
        code: "rxgroup",
        system: "http://terminology.hl7.org/CodeSystem/coverage-class",
    },
    /**
     * rxid: A Pharmacy Benefit Manager specified Member ID.
     */
    RXId: {
        display: "RX Id",
        code: "rxid",
        system: "http://terminology.hl7.org/CodeSystem/coverage-class",
    },
    /**
     * rxpcn: A Pharmacy Benefit Manager specified Processor Control Number.
     */
    RXPCN: {
        display: "RX PCN",
        code: "rxpcn",
        system: "http://terminology.hl7.org/CodeSystem/coverage-class",
    },
    /**
     * sequence: A sequence number associated with a short-term continuance of the coverage.
     */
    Sequence: {
        display: "Sequence",
        code: "sequence",
        system: "http://terminology.hl7.org/CodeSystem/coverage-class",
    },
    /**
     * subclass: A subset of a class of benefits.
     */
    SubClass: {
        display: "SubClass",
        code: "subclass",
        system: "http://terminology.hl7.org/CodeSystem/coverage-class",
    },
    /**
     * subgroup: A sub-group of an employee group
     */
    SubGroup: {
        display: "SubGroup",
        code: "subgroup",
        system: "http://terminology.hl7.org/CodeSystem/coverage-class",
    },
    /**
     * subplan: A subset of a specific suite of benefits.
     */
    SubPlan: {
        display: "SubPlan",
        code: "subplan",
        system: "http://terminology.hl7.org/CodeSystem/coverage-class",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ292ZXJhZ2VDbGFzc0NvZGluZ3MuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL0NvdmVyYWdlQ2xhc3NDb2RpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQixnREFBZ0Q7QUFDaEQsa0NBQWtDO0FBQ2xDLG1FQUFtRTtBQXNEbkU7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxvQkFBb0IsR0FBMkI7SUFDMUQ7O09BRUc7SUFDSCxLQUFLLEVBQUU7UUFDTCxPQUFPLEVBQUUsT0FBTztRQUNoQixJQUFJLEVBQUUsT0FBTztRQUNiLE1BQU0sRUFBRSxzREFBc0Q7S0FDL0Q7SUFDRDs7T0FFRztJQUNILEtBQUssRUFBRTtRQUNMLE9BQU8sRUFBRSxPQUFPO1FBQ2hCLElBQUksRUFBRSxPQUFPO1FBQ2IsTUFBTSxFQUFFLHNEQUFzRDtLQUMvRDtJQUNEOztPQUVHO0lBQ0gsSUFBSSxFQUFFO1FBQ0osT0FBTyxFQUFFLE1BQU07UUFDZixJQUFJLEVBQUUsTUFBTTtRQUNaLE1BQU0sRUFBRSxzREFBc0Q7S0FDL0Q7SUFDRDs7T0FFRztJQUNILEtBQUssRUFBRTtRQUNMLE9BQU8sRUFBRSxRQUFRO1FBQ2pCLElBQUksRUFBRSxPQUFPO1FBQ2IsTUFBTSxFQUFFLHNEQUFzRDtLQUMvRDtJQUNEOztPQUVHO0lBQ0gsT0FBTyxFQUFFO1FBQ1AsT0FBTyxFQUFFLFVBQVU7UUFDbkIsSUFBSSxFQUFFLFNBQVM7UUFDZixNQUFNLEVBQUUsc0RBQXNEO0tBQy9EO0lBQ0Q7O09BRUc7SUFDSCxJQUFJLEVBQUU7UUFDSixPQUFPLEVBQUUsT0FBTztRQUNoQixJQUFJLEVBQUUsTUFBTTtRQUNaLE1BQU0sRUFBRSxzREFBc0Q7S0FDL0Q7SUFDRDs7T0FFRztJQUNILEtBQUssRUFBRTtRQUNMLE9BQU8sRUFBRSxRQUFRO1FBQ2pCLElBQUksRUFBRSxPQUFPO1FBQ2IsTUFBTSxFQUFFLHNEQUFzRDtLQUMvRDtJQUNEOztPQUVHO0lBQ0gsUUFBUSxFQUFFO1FBQ1IsT0FBTyxFQUFFLFVBQVU7UUFDbkIsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLHNEQUFzRDtLQUMvRDtJQUNEOztPQUVHO0lBQ0gsUUFBUSxFQUFFO1FBQ1IsT0FBTyxFQUFFLFVBQVU7UUFDbkIsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLHNEQUFzRDtLQUMvRDtJQUNEOztPQUVHO0lBQ0gsUUFBUSxFQUFFO1FBQ1IsT0FBTyxFQUFFLFVBQVU7UUFDbkIsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLHNEQUFzRDtLQUMvRDtJQUNEOztPQUVHO0lBQ0gsT0FBTyxFQUFFO1FBQ1AsT0FBTyxFQUFFLFNBQVM7UUFDbEIsSUFBSSxFQUFFLFNBQVM7UUFDZixNQUFNLEVBQUUsc0RBQXNEO0tBQy9EO0NBQ08sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNGIuY29yZSB2ZXJzaW9uOiA0LjMuMFxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvY292ZXJhZ2UtY2xhc3N8NC4zLjBcclxuXHJcbmltcG9ydCB7IENvZGluZ0FyZ3MgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiBUaGlzIHZhbHVlIHNldCBpbmNsdWRlcyBDb3ZlcmFnZSBDbGFzcyBjb2Rlcy5cclxuICovXHJcbmV4cG9ydCB0eXBlIENvdmVyYWdlQ2xhc3NDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIGNsYXNzOiBBIGNsYXNzIG9mIGJlbmVmaXRzLlxyXG4gICAqL1xyXG4gIENsYXNzOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIGdyb3VwOiBBbiBlbXBsb3llZSBncm91cFxyXG4gICAqL1xyXG4gIEdyb3VwOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIHBsYW46IEEgc3BlY2lmaWMgc3VpdGUgb2YgYmVuZWZpdHMuXHJcbiAgICovXHJcbiAgUGxhbjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiByeGJpbjogUGhhcm1hY3kgYmVuZWZpdCBtYW5hZ2VyJ3MgQnVzaW5lc3MgSWRlbnRpZmljYXRpb24gTnVtYmVyLlxyXG4gICAqL1xyXG4gIFJYQklOOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIHJ4Z3JvdXA6IEEgUGhhcm1hY3kgQmVuZWZpdCBNYW5hZ2VyIHNwZWNpZmllZCBHcm91cCBudW1iZXIuXHJcbiAgICovXHJcbiAgUlhHcm91cDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiByeGlkOiBBIFBoYXJtYWN5IEJlbmVmaXQgTWFuYWdlciBzcGVjaWZpZWQgTWVtYmVyIElELlxyXG4gICAqL1xyXG4gIFJYSWQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogcnhwY246IEEgUGhhcm1hY3kgQmVuZWZpdCBNYW5hZ2VyIHNwZWNpZmllZCBQcm9jZXNzb3IgQ29udHJvbCBOdW1iZXIuXHJcbiAgICovXHJcbiAgUlhQQ046IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogc2VxdWVuY2U6IEEgc2VxdWVuY2UgbnVtYmVyIGFzc29jaWF0ZWQgd2l0aCBhIHNob3J0LXRlcm0gY29udGludWFuY2Ugb2YgdGhlIGNvdmVyYWdlLlxyXG4gICAqL1xyXG4gIFNlcXVlbmNlOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIHN1YmNsYXNzOiBBIHN1YnNldCBvZiBhIGNsYXNzIG9mIGJlbmVmaXRzLlxyXG4gICAqL1xyXG4gIFN1YkNsYXNzOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIHN1Ymdyb3VwOiBBIHN1Yi1ncm91cCBvZiBhbiBlbXBsb3llZSBncm91cFxyXG4gICAqL1xyXG4gIFN1Ykdyb3VwOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIHN1YnBsYW46IEEgc3Vic2V0IG9mIGEgc3BlY2lmaWMgc3VpdGUgb2YgYmVuZWZpdHMuXHJcbiAgICovXHJcbiAgU3ViUGxhbjogQ29kaW5nQXJncztcclxufVxyXG5cclxuLyoqXHJcbiAqIFRoaXMgdmFsdWUgc2V0IGluY2x1ZGVzIENvdmVyYWdlIENsYXNzIGNvZGVzLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IENvdmVyYWdlQ2xhc3NDb2RpbmdzOkNvdmVyYWdlQ2xhc3NDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIGNsYXNzOiBBIGNsYXNzIG9mIGJlbmVmaXRzLlxyXG4gICAqL1xyXG4gIENsYXNzOiB7XHJcbiAgICBkaXNwbGF5OiBcIkNsYXNzXCIsXHJcbiAgICBjb2RlOiBcImNsYXNzXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9jb3ZlcmFnZS1jbGFzc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogZ3JvdXA6IEFuIGVtcGxveWVlIGdyb3VwXHJcbiAgICovXHJcbiAgR3JvdXA6IHtcclxuICAgIGRpc3BsYXk6IFwiR3JvdXBcIixcclxuICAgIGNvZGU6IFwiZ3JvdXBcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2NvdmVyYWdlLWNsYXNzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBwbGFuOiBBIHNwZWNpZmljIHN1aXRlIG9mIGJlbmVmaXRzLlxyXG4gICAqL1xyXG4gIFBsYW46IHtcclxuICAgIGRpc3BsYXk6IFwiUGxhblwiLFxyXG4gICAgY29kZTogXCJwbGFuXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9jb3ZlcmFnZS1jbGFzc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogcnhiaW46IFBoYXJtYWN5IGJlbmVmaXQgbWFuYWdlcidzIEJ1c2luZXNzIElkZW50aWZpY2F0aW9uIE51bWJlci5cclxuICAgKi9cclxuICBSWEJJTjoge1xyXG4gICAgZGlzcGxheTogXCJSWCBCSU5cIixcclxuICAgIGNvZGU6IFwicnhiaW5cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2NvdmVyYWdlLWNsYXNzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiByeGdyb3VwOiBBIFBoYXJtYWN5IEJlbmVmaXQgTWFuYWdlciBzcGVjaWZpZWQgR3JvdXAgbnVtYmVyLlxyXG4gICAqL1xyXG4gIFJYR3JvdXA6IHtcclxuICAgIGRpc3BsYXk6IFwiUlggR3JvdXBcIixcclxuICAgIGNvZGU6IFwicnhncm91cFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vY292ZXJhZ2UtY2xhc3NcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIHJ4aWQ6IEEgUGhhcm1hY3kgQmVuZWZpdCBNYW5hZ2VyIHNwZWNpZmllZCBNZW1iZXIgSUQuXHJcbiAgICovXHJcbiAgUlhJZDoge1xyXG4gICAgZGlzcGxheTogXCJSWCBJZFwiLFxyXG4gICAgY29kZTogXCJyeGlkXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9jb3ZlcmFnZS1jbGFzc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogcnhwY246IEEgUGhhcm1hY3kgQmVuZWZpdCBNYW5hZ2VyIHNwZWNpZmllZCBQcm9jZXNzb3IgQ29udHJvbCBOdW1iZXIuXHJcbiAgICovXHJcbiAgUlhQQ046IHtcclxuICAgIGRpc3BsYXk6IFwiUlggUENOXCIsXHJcbiAgICBjb2RlOiBcInJ4cGNuXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9jb3ZlcmFnZS1jbGFzc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogc2VxdWVuY2U6IEEgc2VxdWVuY2UgbnVtYmVyIGFzc29jaWF0ZWQgd2l0aCBhIHNob3J0LXRlcm0gY29udGludWFuY2Ugb2YgdGhlIGNvdmVyYWdlLlxyXG4gICAqL1xyXG4gIFNlcXVlbmNlOiB7XHJcbiAgICBkaXNwbGF5OiBcIlNlcXVlbmNlXCIsXHJcbiAgICBjb2RlOiBcInNlcXVlbmNlXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9jb3ZlcmFnZS1jbGFzc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogc3ViY2xhc3M6IEEgc3Vic2V0IG9mIGEgY2xhc3Mgb2YgYmVuZWZpdHMuXHJcbiAgICovXHJcbiAgU3ViQ2xhc3M6IHtcclxuICAgIGRpc3BsYXk6IFwiU3ViQ2xhc3NcIixcclxuICAgIGNvZGU6IFwic3ViY2xhc3NcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2NvdmVyYWdlLWNsYXNzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBzdWJncm91cDogQSBzdWItZ3JvdXAgb2YgYW4gZW1wbG95ZWUgZ3JvdXBcclxuICAgKi9cclxuICBTdWJHcm91cDoge1xyXG4gICAgZGlzcGxheTogXCJTdWJHcm91cFwiLFxyXG4gICAgY29kZTogXCJzdWJncm91cFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vY292ZXJhZ2UtY2xhc3NcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIHN1YnBsYW46IEEgc3Vic2V0IG9mIGEgc3BlY2lmaWMgc3VpdGUgb2YgYmVuZWZpdHMuXHJcbiAgICovXHJcbiAgU3ViUGxhbjoge1xyXG4gICAgZGlzcGxheTogXCJTdWJQbGFuXCIsXHJcbiAgICBjb2RlOiBcInN1YnBsYW5cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2NvdmVyYWdlLWNsYXNzXCIsXHJcbiAgfSxcclxufSBhcyBjb25zdDtcclxuIl19