// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/synthesis-type|4.3.0
/**
 * Types of combining results from a body of evidence (eg. summary data meta-analysis).
 */
export const SynthesisTypeCodes = {
    /**
     * classification: An approach describing a body of evidence by categorically classifying individual studies (eg 3 studies showed beneft and 2 studied found no effect).
     */
    ClassifcationOfResults: "classification",
    /**
     * combined-NMA: An composite meta-analysis derived from direct comparisons and indirect comparisons in a network meta-analysis.
     */
    CombinedDirectPlusIndirectNetworkMetaAnalysis: "combined-NMA",
    /**
     * indirect-NMA: An indirect meta-analysis derived from 2 or more direct comparisons in a network meta-analysis.
     */
    IndirectNetworkMetaAnalysis: "indirect-NMA",
    /**
     * IPD-MA: A meta-analysis of the individual participant data from individual studies or data sets.
     */
    IndividualPatientDataMetaAnalysis: "IPD-MA",
    /**
     * NotApplicable: Not applicable because the evidence is not from a synthesis but from a single study. Used fo explicitly state that it's not a synthesis.
     */
    NotApplicable: "NotApplicable",
    /**
     * range: A range of results across a body of evidence.
     */
    RangeOfResults: "range",
    /**
     * std-MA: A meta-analysis of the summary data of estimates from individual studies or data sets.
     */
    SummaryDataMetaAnalysis: "std-MA",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3ludGhlc2lzVHlwZUNvZGVzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9TeW50aGVzaXNUeXBlQ29kZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLGdEQUFnRDtBQUNoRCxrQ0FBa0M7QUFDbEMsbUVBQW1FO0FBRW5FOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sa0JBQWtCLEdBQUc7SUFDaEM7O09BRUc7SUFDSCxzQkFBc0IsRUFBRSxnQkFBZ0I7SUFDeEM7O09BRUc7SUFDSCw2Q0FBNkMsRUFBRSxjQUFjO0lBQzdEOztPQUVHO0lBQ0gsMkJBQTJCLEVBQUUsY0FBYztJQUMzQzs7T0FFRztJQUNILGlDQUFpQyxFQUFFLFFBQVE7SUFDM0M7O09BRUc7SUFDSCxhQUFhLEVBQUUsZUFBZTtJQUM5Qjs7T0FFRztJQUNILGNBQWMsRUFBRSxPQUFPO0lBQ3ZCOztPQUVHO0lBQ0gsdUJBQXVCLEVBQUUsUUFBUTtDQUN6QixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0Yi5jb3JlIHZlcnNpb246IDQuMy4wXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9zeW50aGVzaXMtdHlwZXw0LjMuMFxyXG5cclxuLyoqXHJcbiAqIFR5cGVzIG9mIGNvbWJpbmluZyByZXN1bHRzIGZyb20gYSBib2R5IG9mIGV2aWRlbmNlIChlZy4gc3VtbWFyeSBkYXRhIG1ldGEtYW5hbHlzaXMpLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IFN5bnRoZXNpc1R5cGVDb2RlcyA9IHtcclxuICAvKipcclxuICAgKiBjbGFzc2lmaWNhdGlvbjogQW4gYXBwcm9hY2ggZGVzY3JpYmluZyBhIGJvZHkgb2YgZXZpZGVuY2UgYnkgY2F0ZWdvcmljYWxseSBjbGFzc2lmeWluZyBpbmRpdmlkdWFsIHN0dWRpZXMgKGVnIDMgc3R1ZGllcyBzaG93ZWQgYmVuZWZ0IGFuZCAyIHN0dWRpZWQgZm91bmQgbm8gZWZmZWN0KS5cclxuICAgKi9cclxuICBDbGFzc2lmY2F0aW9uT2ZSZXN1bHRzOiBcImNsYXNzaWZpY2F0aW9uXCIsXHJcbiAgLyoqXHJcbiAgICogY29tYmluZWQtTk1BOiBBbiBjb21wb3NpdGUgbWV0YS1hbmFseXNpcyBkZXJpdmVkIGZyb20gZGlyZWN0IGNvbXBhcmlzb25zIGFuZCBpbmRpcmVjdCBjb21wYXJpc29ucyBpbiBhIG5ldHdvcmsgbWV0YS1hbmFseXNpcy5cclxuICAgKi9cclxuICBDb21iaW5lZERpcmVjdFBsdXNJbmRpcmVjdE5ldHdvcmtNZXRhQW5hbHlzaXM6IFwiY29tYmluZWQtTk1BXCIsXHJcbiAgLyoqXHJcbiAgICogaW5kaXJlY3QtTk1BOiBBbiBpbmRpcmVjdCBtZXRhLWFuYWx5c2lzIGRlcml2ZWQgZnJvbSAyIG9yIG1vcmUgZGlyZWN0IGNvbXBhcmlzb25zIGluIGEgbmV0d29yayBtZXRhLWFuYWx5c2lzLlxyXG4gICAqL1xyXG4gIEluZGlyZWN0TmV0d29ya01ldGFBbmFseXNpczogXCJpbmRpcmVjdC1OTUFcIixcclxuICAvKipcclxuICAgKiBJUEQtTUE6IEEgbWV0YS1hbmFseXNpcyBvZiB0aGUgaW5kaXZpZHVhbCBwYXJ0aWNpcGFudCBkYXRhIGZyb20gaW5kaXZpZHVhbCBzdHVkaWVzIG9yIGRhdGEgc2V0cy5cclxuICAgKi9cclxuICBJbmRpdmlkdWFsUGF0aWVudERhdGFNZXRhQW5hbHlzaXM6IFwiSVBELU1BXCIsXHJcbiAgLyoqXHJcbiAgICogTm90QXBwbGljYWJsZTogTm90IGFwcGxpY2FibGUgYmVjYXVzZSB0aGUgZXZpZGVuY2UgaXMgbm90IGZyb20gYSBzeW50aGVzaXMgYnV0IGZyb20gYSBzaW5nbGUgc3R1ZHkuIFVzZWQgZm8gZXhwbGljaXRseSBzdGF0ZSB0aGF0IGl0J3Mgbm90IGEgc3ludGhlc2lzLlxyXG4gICAqL1xyXG4gIE5vdEFwcGxpY2FibGU6IFwiTm90QXBwbGljYWJsZVwiLFxyXG4gIC8qKlxyXG4gICAqIHJhbmdlOiBBIHJhbmdlIG9mIHJlc3VsdHMgYWNyb3NzIGEgYm9keSBvZiBldmlkZW5jZS5cclxuICAgKi9cclxuICBSYW5nZU9mUmVzdWx0czogXCJyYW5nZVwiLFxyXG4gIC8qKlxyXG4gICAqIHN0ZC1NQTogQSBtZXRhLWFuYWx5c2lzIG9mIHRoZSBzdW1tYXJ5IGRhdGEgb2YgZXN0aW1hdGVzIGZyb20gaW5kaXZpZHVhbCBzdHVkaWVzIG9yIGRhdGEgc2V0cy5cclxuICAgKi9cclxuICBTdW1tYXJ5RGF0YU1ldGFBbmFseXNpczogXCJzdGQtTUFcIixcclxufSBhcyBjb25zdDtcclxuXHJcbi8qKlxyXG4gKiBUeXBlcyBvZiBjb21iaW5pbmcgcmVzdWx0cyBmcm9tIGEgYm9keSBvZiBldmlkZW5jZSAoZWcuIHN1bW1hcnkgZGF0YSBtZXRhLWFuYWx5c2lzKS5cclxuICovXHJcbmV4cG9ydCB0eXBlIFN5bnRoZXNpc1R5cGVDb2RlVHlwZSA9IHR5cGVvZiBTeW50aGVzaXNUeXBlQ29kZXNba2V5b2YgdHlwZW9mIFN5bnRoZXNpc1R5cGVDb2Rlc107XHJcbiJdfQ==