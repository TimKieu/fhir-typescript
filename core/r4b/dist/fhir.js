// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
import { FhirBase } from './fhir/FhirBase.js';
import { FhirPrimitive } from './fhir/FhirPrimitive.js';
import { FhirPrimitiveSimple } from './fhir/FhirPrimitiveSimple.js';
import { FhirBase64Binary } from './fhir/FhirBase64Binary.js';
import { FhirBoolean } from './fhir/FhirBoolean.js';
import { FhirCanonical } from './fhir/FhirCanonical.js';
import { FhirCode } from './fhir/FhirCode.js';
import { FhirDate } from './fhir/FhirDate.js';
import { FhirDateTime } from './fhir/FhirDateTime.js';
import { FhirDecimal } from './fhir/FhirDecimal.js';
import { FhirId } from './fhir/FhirId.js';
import { FhirIdSimple } from './fhir/FhirIdSimple.js';
import { FhirInstant } from './fhir/FhirInstant.js';
import { FhirInteger } from './fhir/FhirInteger.js';
import { FhirMarkdown } from './fhir/FhirMarkdown.js';
import { FhirOid } from './fhir/FhirOid.js';
import { FhirPositiveInt } from './fhir/FhirPositiveInt.js';
import { FhirString } from './fhir/FhirString.js';
import { FhirTime } from './fhir/FhirTime.js';
import { FhirUnsignedInt } from './fhir/FhirUnsignedInt.js';
import { FhirUri } from './fhir/FhirUri.js';
import { FhirUriSimple } from './fhir/FhirUriSimple.js';
import { FhirUrl } from './fhir/FhirUrl.js';
import { FhirUuid } from './fhir/FhirUuid.js';
import { FhirXhtml } from './fhir/FhirXhtml.js';
import { FhirElement } from './fhir/FhirElement.js';
import { Coding } from './fhir/Coding.js';
import { Address } from './fhir/Address.js';
import { Quantity } from './fhir/Quantity.js';
import { Age } from './fhir/Age.js';
import { Annotation } from './fhir/Annotation.js';
import { Attachment } from './fhir/Attachment.js';
import { BackboneElement } from './fhir/BackboneElement.js';
import { CodeableConcept } from './fhir/CodeableConcept.js';
import { CodeableReference } from './fhir/CodeableReference.js';
import { ContactDetail } from './fhir/ContactDetail.js';
import { ContactPoint } from './fhir/ContactPoint.js';
import { Contributor } from './fhir/Contributor.js';
import { Count } from './fhir/Count.js';
import { DataRequirement, DataRequirementCodeFilter, DataRequirementDateFilter, DataRequirementSort } from './fhir/DataRequirement.js';
import { DataType } from './fhir/DataType.js';
import { Distance } from './fhir/Distance.js';
import { Dosage, DosageDoseAndRate } from './fhir/Dosage.js';
import { Duration } from './fhir/Duration.js';
import { ElementDefinition, ElementDefinitionSlicing, ElementDefinitionSlicingDiscriminator, ElementDefinitionBase, ElementDefinitionType, ElementDefinitionExample, ElementDefinitionConstraint, ElementDefinitionBinding, ElementDefinitionMapping } from './fhir/ElementDefinition.js';
import { Expression } from './fhir/Expression.js';
import { Extension } from './fhir/Extension.js';
import { HumanName } from './fhir/HumanName.js';
import { Identifier } from './fhir/Identifier.js';
import { MarketingStatus } from './fhir/MarketingStatus.js';
import { Meta } from './fhir/Meta.js';
import { Money } from './fhir/Money.js';
import { Narrative } from './fhir/Narrative.js';
import { ParameterDefinition } from './fhir/ParameterDefinition.js';
import { Period } from './fhir/Period.js';
import { Population } from './fhir/Population.js';
import { ProdCharacteristic } from './fhir/ProdCharacteristic.js';
import { ProductShelfLife } from './fhir/ProductShelfLife.js';
import { Range } from './fhir/Range.js';
import { Ratio } from './fhir/Ratio.js';
import { RatioRange } from './fhir/RatioRange.js';
import { Reference } from './fhir/Reference.js';
import { RelatedArtifact } from './fhir/RelatedArtifact.js';
import { SampledData } from './fhir/SampledData.js';
import { Signature } from './fhir/Signature.js';
import { Timing, TimingRepeat } from './fhir/Timing.js';
import { TriggerDefinition } from './fhir/TriggerDefinition.js';
import { UsageContext } from './fhir/UsageContext.js';
import { Resource } from './fhir/Resource.js';
import { DomainResource } from './fhir/DomainResource.js';
import { Account, AccountCoverage, AccountGuarantor } from './fhir/Account.js';
import { ActivityDefinition, ActivityDefinitionParticipant, ActivityDefinitionDynamicValue } from './fhir/ActivityDefinition.js';
import { AdministrableProductDefinition, AdministrableProductDefinitionProperty, AdministrableProductDefinitionRouteOfAdministration, AdministrableProductDefinitionRouteOfAdministrationTargetSpecies, AdministrableProductDefinitionRouteOfAdministrationTargetSpeciesWithdrawalPeriod } from './fhir/AdministrableProductDefinition.js';
import { AdverseEvent, AdverseEventSuspectEntity, AdverseEventSuspectEntityCausality } from './fhir/AdverseEvent.js';
import { AllergyIntolerance, AllergyIntoleranceReaction } from './fhir/AllergyIntolerance.js';
import { Appointment, AppointmentParticipant } from './fhir/Appointment.js';
import { AppointmentResponse } from './fhir/AppointmentResponse.js';
import { AuditEvent, AuditEventAgent, AuditEventAgentNetwork, AuditEventSource, AuditEventEntity, AuditEventEntityDetail } from './fhir/AuditEvent.js';
import { Basic } from './fhir/Basic.js';
import { Binary } from './fhir/Binary.js';
import { BiologicallyDerivedProduct, BiologicallyDerivedProductCollection, BiologicallyDerivedProductProcessing, BiologicallyDerivedProductManipulation, BiologicallyDerivedProductStorage } from './fhir/BiologicallyDerivedProduct.js';
import { BodyStructure } from './fhir/BodyStructure.js';
import { Bundle, BundleLink, BundleEntry, BundleEntrySearch, BundleEntryRequest, BundleEntryResponse } from './fhir/Bundle.js';
import { CapabilityStatement, CapabilityStatementSoftware, CapabilityStatementImplementation, CapabilityStatementRest, CapabilityStatementRestSecurity, CapabilityStatementRestResource, CapabilityStatementRestResourceInteraction, CapabilityStatementRestResourceSearchParam, CapabilityStatementRestResourceOperation, CapabilityStatementRestInteraction, CapabilityStatementMessaging, CapabilityStatementMessagingEndpoint, CapabilityStatementMessagingSupportedMessage, CapabilityStatementDocument } from './fhir/CapabilityStatement.js';
import { CarePlan, CarePlanActivity, CarePlanActivityDetail } from './fhir/CarePlan.js';
import { CareTeam, CareTeamParticipant } from './fhir/CareTeam.js';
import { CatalogEntry, CatalogEntryRelatedEntry } from './fhir/CatalogEntry.js';
import { ChargeItem, ChargeItemPerformer } from './fhir/ChargeItem.js';
import { ChargeItemDefinition, ChargeItemDefinitionApplicability, ChargeItemDefinitionPropertyGroup, ChargeItemDefinitionPropertyGroupPriceComponent } from './fhir/ChargeItemDefinition.js';
import { Citation, CitationSummary, CitationClassification, CitationStatusDate, CitationRelatesTo, CitationCitedArtifact, CitationCitedArtifactVersion, CitationCitedArtifactStatusDate, CitationCitedArtifactTitle, CitationCitedArtifactAbstract, CitationCitedArtifactPart, CitationCitedArtifactRelatesTo, CitationCitedArtifactPublicationForm, CitationCitedArtifactPublicationFormPublishedIn, CitationCitedArtifactPublicationFormPeriodicRelease, CitationCitedArtifactPublicationFormPeriodicReleaseDateOfPublication, CitationCitedArtifactWebLocation, CitationCitedArtifactClassification, CitationCitedArtifactClassificationWhoClassified, CitationCitedArtifactContributorship, CitationCitedArtifactContributorshipEntry, CitationCitedArtifactContributorshipEntryAffiliationInfo, CitationCitedArtifactContributorshipEntryContributionInstance, CitationCitedArtifactContributorshipSummary } from './fhir/Citation.js';
import { Claim, ClaimRelated, ClaimPayee, ClaimCareTeam, ClaimSupportingInfo, ClaimDiagnosis, ClaimProcedure, ClaimInsurance, ClaimAccident, ClaimItem, ClaimItemDetail, ClaimItemDetailSubDetail } from './fhir/Claim.js';
import { ClaimResponse, ClaimResponseItem, ClaimResponseItemAdjudication, ClaimResponseItemDetail, ClaimResponseItemDetailSubDetail, ClaimResponseAddItem, ClaimResponseAddItemDetail, ClaimResponseAddItemDetailSubDetail, ClaimResponseTotal, ClaimResponsePayment, ClaimResponseProcessNote, ClaimResponseInsurance, ClaimResponseError } from './fhir/ClaimResponse.js';
import { ClinicalImpression, ClinicalImpressionInvestigation, ClinicalImpressionFinding } from './fhir/ClinicalImpression.js';
import { ClinicalUseDefinition, ClinicalUseDefinitionContraindication, ClinicalUseDefinitionContraindicationOtherTherapy, ClinicalUseDefinitionIndication, ClinicalUseDefinitionInteraction, ClinicalUseDefinitionInteractionInteractant, ClinicalUseDefinitionUndesirableEffect, ClinicalUseDefinitionWarning } from './fhir/ClinicalUseDefinition.js';
import { CodeSystem, CodeSystemFilter, CodeSystemProperty, CodeSystemConcept, CodeSystemConceptDesignation, CodeSystemConceptProperty } from './fhir/CodeSystem.js';
import { Communication, CommunicationPayload } from './fhir/Communication.js';
import { CommunicationRequest, CommunicationRequestPayload } from './fhir/CommunicationRequest.js';
import { CompartmentDefinition, CompartmentDefinitionResource } from './fhir/CompartmentDefinition.js';
import { Composition, CompositionAttester, CompositionRelatesTo, CompositionEvent, CompositionSection } from './fhir/Composition.js';
import { ConceptMap, ConceptMapGroup, ConceptMapGroupElement, ConceptMapGroupElementTarget, ConceptMapGroupElementTargetDependsOn, ConceptMapGroupUnmapped } from './fhir/ConceptMap.js';
import { Condition, ConditionStage, ConditionEvidence } from './fhir/Condition.js';
import { Consent, ConsentPolicy, ConsentVerification, ConsentProvision, ConsentProvisionActor, ConsentProvisionData } from './fhir/Consent.js';
import { Contract, ContractContentDefinition, ContractTerm, ContractTermSecurityLabel, ContractTermOffer, ContractTermOfferParty, ContractTermOfferAnswer, ContractTermAsset, ContractTermAssetContext, ContractTermAssetValuedItem, ContractTermAction, ContractTermActionSubject, ContractSigner, ContractFriendly, ContractLegal, ContractRule } from './fhir/Contract.js';
import { Coverage, CoverageClass, CoverageCostToBeneficiary, CoverageCostToBeneficiaryException } from './fhir/Coverage.js';
import { CoverageEligibilityRequest, CoverageEligibilityRequestSupportingInfo, CoverageEligibilityRequestInsurance, CoverageEligibilityRequestItem, CoverageEligibilityRequestItemDiagnosis } from './fhir/CoverageEligibilityRequest.js';
import { CoverageEligibilityResponse, CoverageEligibilityResponseInsurance, CoverageEligibilityResponseInsuranceItem, CoverageEligibilityResponseInsuranceItemBenefit, CoverageEligibilityResponseError } from './fhir/CoverageEligibilityResponse.js';
import { DetectedIssue, DetectedIssueEvidence, DetectedIssueMitigation } from './fhir/DetectedIssue.js';
import { Device, DeviceUdiCarrier, DeviceDeviceName, DeviceSpecialization, DeviceVersion, DeviceProperty } from './fhir/Device.js';
import { DeviceDefinition, DeviceDefinitionUdiDeviceIdentifier, DeviceDefinitionDeviceName, DeviceDefinitionSpecialization, DeviceDefinitionCapability, DeviceDefinitionProperty, DeviceDefinitionMaterial } from './fhir/DeviceDefinition.js';
import { DeviceMetric, DeviceMetricCalibration } from './fhir/DeviceMetric.js';
import { DeviceRequest, DeviceRequestParameter } from './fhir/DeviceRequest.js';
import { DeviceUseStatement } from './fhir/DeviceUseStatement.js';
import { DiagnosticReport, DiagnosticReportMedia } from './fhir/DiagnosticReport.js';
import { DocumentManifest, DocumentManifestRelated } from './fhir/DocumentManifest.js';
import { DocumentReference, DocumentReferenceRelatesTo, DocumentReferenceContent, DocumentReferenceContext } from './fhir/DocumentReference.js';
import { Encounter, EncounterStatusHistory, EncounterClassHistory, EncounterParticipant, EncounterDiagnosis, EncounterHospitalization, EncounterLocation } from './fhir/Encounter.js';
import { Endpoint } from './fhir/Endpoint.js';
import { EnrollmentRequest } from './fhir/EnrollmentRequest.js';
import { EnrollmentResponse } from './fhir/EnrollmentResponse.js';
import { EpisodeOfCare, EpisodeOfCareStatusHistory, EpisodeOfCareDiagnosis } from './fhir/EpisodeOfCare.js';
import { EventDefinition } from './fhir/EventDefinition.js';
import { Evidence, EvidenceVariableDefinition, EvidenceStatistic, EvidenceStatisticSampleSize, EvidenceStatisticAttributeEstimate, EvidenceStatisticModelCharacteristic, EvidenceStatisticModelCharacteristicVariable, EvidenceCertainty } from './fhir/Evidence.js';
import { EvidenceReport, EvidenceReportSubject, EvidenceReportSubjectCharacteristic, EvidenceReportRelatesTo, EvidenceReportSection } from './fhir/EvidenceReport.js';
import { EvidenceVariable, EvidenceVariableCharacteristic, EvidenceVariableCharacteristicTimeFromStart, EvidenceVariableCategory } from './fhir/EvidenceVariable.js';
import { ExampleScenario, ExampleScenarioActor, ExampleScenarioInstance, ExampleScenarioInstanceVersion, ExampleScenarioInstanceContainedInstance, ExampleScenarioProcess, ExampleScenarioProcessStep, ExampleScenarioProcessStepOperation, ExampleScenarioProcessStepAlternative } from './fhir/ExampleScenario.js';
import { ExplanationOfBenefit, ExplanationOfBenefitRelated, ExplanationOfBenefitPayee, ExplanationOfBenefitCareTeam, ExplanationOfBenefitSupportingInfo, ExplanationOfBenefitDiagnosis, ExplanationOfBenefitProcedure, ExplanationOfBenefitInsurance, ExplanationOfBenefitAccident, ExplanationOfBenefitItem, ExplanationOfBenefitItemAdjudication, ExplanationOfBenefitItemDetail, ExplanationOfBenefitItemDetailSubDetail, ExplanationOfBenefitAddItem, ExplanationOfBenefitAddItemDetail, ExplanationOfBenefitAddItemDetailSubDetail, ExplanationOfBenefitTotal, ExplanationOfBenefitPayment, ExplanationOfBenefitProcessNote, ExplanationOfBenefitBenefitBalance, ExplanationOfBenefitBenefitBalanceFinancial } from './fhir/ExplanationOfBenefit.js';
import { FamilyMemberHistory, FamilyMemberHistoryCondition } from './fhir/FamilyMemberHistory.js';
import { Flag } from './fhir/Flag.js';
import { Goal, GoalTarget } from './fhir/Goal.js';
import { GraphDefinition, GraphDefinitionLink, GraphDefinitionLinkTarget, GraphDefinitionLinkTargetCompartment } from './fhir/GraphDefinition.js';
import { Group, GroupCharacteristic, GroupMember } from './fhir/Group.js';
import { GuidanceResponse } from './fhir/GuidanceResponse.js';
import { HealthcareService, HealthcareServiceEligibility, HealthcareServiceAvailableTime, HealthcareServiceNotAvailable } from './fhir/HealthcareService.js';
import { ImagingStudy, ImagingStudySeries, ImagingStudySeriesPerformer, ImagingStudySeriesInstance } from './fhir/ImagingStudy.js';
import { Immunization, ImmunizationPerformer, ImmunizationEducation, ImmunizationReaction, ImmunizationProtocolApplied } from './fhir/Immunization.js';
import { ImmunizationEvaluation } from './fhir/ImmunizationEvaluation.js';
import { ImmunizationRecommendation, ImmunizationRecommendationRecommendation, ImmunizationRecommendationRecommendationDateCriterion } from './fhir/ImmunizationRecommendation.js';
import { ImplementationGuide, ImplementationGuideDependsOn, ImplementationGuideGlobal, ImplementationGuideDefinition, ImplementationGuideDefinitionGrouping, ImplementationGuideDefinitionResource, ImplementationGuideDefinitionPage, ImplementationGuideDefinitionParameter, ImplementationGuideDefinitionTemplate, ImplementationGuideManifest, ImplementationGuideManifestResource, ImplementationGuideManifestPage } from './fhir/ImplementationGuide.js';
import { Ingredient, IngredientManufacturer, IngredientSubstance, IngredientSubstanceStrength, IngredientSubstanceStrengthReferenceStrength } from './fhir/Ingredient.js';
import { InsurancePlan, InsurancePlanContact, InsurancePlanCoverage, InsurancePlanCoverageBenefit, InsurancePlanCoverageBenefitLimit, InsurancePlanPlan, InsurancePlanPlanGeneralCost, InsurancePlanPlanSpecificCost, InsurancePlanPlanSpecificCostBenefit, InsurancePlanPlanSpecificCostBenefitCost } from './fhir/InsurancePlan.js';
import { Invoice, InvoiceParticipant, InvoiceLineItem, InvoiceLineItemPriceComponent } from './fhir/Invoice.js';
import { Library } from './fhir/Library.js';
import { Linkage, LinkageItem } from './fhir/Linkage.js';
import { List, ListEntry } from './fhir/List.js';
import { Location, LocationPosition, LocationHoursOfOperation } from './fhir/Location.js';
import { ManufacturedItemDefinition, ManufacturedItemDefinitionProperty } from './fhir/ManufacturedItemDefinition.js';
import { Measure, MeasureGroup, MeasureGroupPopulation, MeasureGroupStratifier, MeasureGroupStratifierComponent, MeasureSupplementalData } from './fhir/Measure.js';
import { MeasureReport, MeasureReportGroup, MeasureReportGroupPopulation, MeasureReportGroupStratifier, MeasureReportGroupStratifierStratum, MeasureReportGroupStratifierStratumComponent, MeasureReportGroupStratifierStratumPopulation } from './fhir/MeasureReport.js';
import { Media } from './fhir/Media.js';
import { Medication, MedicationIngredient, MedicationBatch } from './fhir/Medication.js';
import { MedicationAdministration, MedicationAdministrationPerformer, MedicationAdministrationDosage } from './fhir/MedicationAdministration.js';
import { MedicationDispense, MedicationDispensePerformer, MedicationDispenseSubstitution } from './fhir/MedicationDispense.js';
import { MedicationKnowledge, MedicationKnowledgeRelatedMedicationKnowledge, MedicationKnowledgeMonograph, MedicationKnowledgeIngredient, MedicationKnowledgeCost, MedicationKnowledgeMonitoringProgram, MedicationKnowledgeAdministrationGuidelines, MedicationKnowledgeAdministrationGuidelinesDosage, MedicationKnowledgeAdministrationGuidelinesPatientCharacteristics, MedicationKnowledgeMedicineClassification, MedicationKnowledgePackaging, MedicationKnowledgeDrugCharacteristic, MedicationKnowledgeRegulatory, MedicationKnowledgeRegulatorySubstitution, MedicationKnowledgeRegulatorySchedule, MedicationKnowledgeRegulatoryMaxDispense, MedicationKnowledgeKinetics } from './fhir/MedicationKnowledge.js';
import { MedicationRequest, MedicationRequestDispenseRequest, MedicationRequestDispenseRequestInitialFill, MedicationRequestSubstitution } from './fhir/MedicationRequest.js';
import { MedicationStatement } from './fhir/MedicationStatement.js';
import { MedicinalProductDefinition, MedicinalProductDefinitionContact, MedicinalProductDefinitionName, MedicinalProductDefinitionNameNamePart, MedicinalProductDefinitionNameCountryLanguage, MedicinalProductDefinitionCrossReference, MedicinalProductDefinitionOperation, MedicinalProductDefinitionCharacteristic } from './fhir/MedicinalProductDefinition.js';
import { MessageDefinition, MessageDefinitionFocus, MessageDefinitionAllowedResponse } from './fhir/MessageDefinition.js';
import { MessageHeader, MessageHeaderDestination, MessageHeaderSource, MessageHeaderResponse } from './fhir/MessageHeader.js';
import { MolecularSequence, MolecularSequenceReferenceSeq, MolecularSequenceVariant, MolecularSequenceQuality, MolecularSequenceQualityRoc, MolecularSequenceRepository, MolecularSequenceStructureVariant, MolecularSequenceStructureVariantOuter, MolecularSequenceStructureVariantInner } from './fhir/MolecularSequence.js';
import { NamingSystem, NamingSystemUniqueId } from './fhir/NamingSystem.js';
import { NutritionOrder, NutritionOrderOralDiet, NutritionOrderOralDietNutrient, NutritionOrderOralDietTexture, NutritionOrderSupplement, NutritionOrderEnteralFormula, NutritionOrderEnteralFormulaAdministration } from './fhir/NutritionOrder.js';
import { NutritionProduct, NutritionProductNutrient, NutritionProductIngredient, NutritionProductProductCharacteristic, NutritionProductInstance } from './fhir/NutritionProduct.js';
import { Observation, ObservationReferenceRange, ObservationComponent } from './fhir/Observation.js';
import { ObservationDefinition, ObservationDefinitionQuantitativeDetails, ObservationDefinitionQualifiedInterval } from './fhir/ObservationDefinition.js';
import { OperationDefinition, OperationDefinitionParameter, OperationDefinitionParameterBinding, OperationDefinitionParameterReferencedFrom, OperationDefinitionOverload } from './fhir/OperationDefinition.js';
import { OperationOutcome, OperationOutcomeIssue } from './fhir/OperationOutcome.js';
import { Organization, OrganizationContact } from './fhir/Organization.js';
import { OrganizationAffiliation } from './fhir/OrganizationAffiliation.js';
import { PackagedProductDefinition, PackagedProductDefinitionLegalStatusOfSupply, PackagedProductDefinitionPackage, PackagedProductDefinitionPackageShelfLifeStorage, PackagedProductDefinitionPackageProperty, PackagedProductDefinitionPackageContainedItem } from './fhir/PackagedProductDefinition.js';
import { Parameters, ParametersParameter } from './fhir/Parameters.js';
import { Patient, PatientContact, PatientCommunication, PatientLink } from './fhir/Patient.js';
import { PaymentNotice } from './fhir/PaymentNotice.js';
import { PaymentReconciliation, PaymentReconciliationDetail, PaymentReconciliationProcessNote } from './fhir/PaymentReconciliation.js';
import { Person, PersonLink } from './fhir/Person.js';
import { PlanDefinition, PlanDefinitionGoal, PlanDefinitionGoalTarget, PlanDefinitionAction, PlanDefinitionActionCondition, PlanDefinitionActionRelatedAction, PlanDefinitionActionParticipant, PlanDefinitionActionDynamicValue } from './fhir/PlanDefinition.js';
import { Practitioner, PractitionerQualification } from './fhir/Practitioner.js';
import { PractitionerRole, PractitionerRoleAvailableTime, PractitionerRoleNotAvailable } from './fhir/PractitionerRole.js';
import { Procedure, ProcedurePerformer, ProcedureFocalDevice } from './fhir/Procedure.js';
import { Provenance, ProvenanceAgent, ProvenanceEntity } from './fhir/Provenance.js';
import { Questionnaire, QuestionnaireItem, QuestionnaireItemEnableWhen, QuestionnaireItemAnswerOption, QuestionnaireItemInitial } from './fhir/Questionnaire.js';
import { QuestionnaireResponse, QuestionnaireResponseItem, QuestionnaireResponseItemAnswer } from './fhir/QuestionnaireResponse.js';
import { RegulatedAuthorization, RegulatedAuthorizationCase } from './fhir/RegulatedAuthorization.js';
import { RelatedPerson, RelatedPersonCommunication } from './fhir/RelatedPerson.js';
import { RequestGroup, RequestGroupAction, RequestGroupActionCondition, RequestGroupActionRelatedAction } from './fhir/RequestGroup.js';
import { ResearchDefinition } from './fhir/ResearchDefinition.js';
import { ResearchElementDefinition, ResearchElementDefinitionCharacteristic } from './fhir/ResearchElementDefinition.js';
import { ResearchStudy, ResearchStudyArm, ResearchStudyObjective } from './fhir/ResearchStudy.js';
import { ResearchSubject } from './fhir/ResearchSubject.js';
import { RiskAssessment, RiskAssessmentPrediction } from './fhir/RiskAssessment.js';
import { Schedule } from './fhir/Schedule.js';
import { SearchParameter, SearchParameterComponent } from './fhir/SearchParameter.js';
import { ServiceRequest } from './fhir/ServiceRequest.js';
import { Slot } from './fhir/Slot.js';
import { Specimen, SpecimenCollection, SpecimenProcessing, SpecimenContainer } from './fhir/Specimen.js';
import { SpecimenDefinition, SpecimenDefinitionTypeTested, SpecimenDefinitionTypeTestedContainer, SpecimenDefinitionTypeTestedContainerAdditive, SpecimenDefinitionTypeTestedHandling } from './fhir/SpecimenDefinition.js';
import { StructureDefinition, StructureDefinitionMapping, StructureDefinitionContext, StructureDefinitionSnapshot, StructureDefinitionDifferential } from './fhir/StructureDefinition.js';
import { StructureMap, StructureMapStructure, StructureMapGroup, StructureMapGroupInput, StructureMapGroupRule, StructureMapGroupRuleSource, StructureMapGroupRuleTarget, StructureMapGroupRuleTargetParameter, StructureMapGroupRuleDependent } from './fhir/StructureMap.js';
import { Subscription, SubscriptionChannel } from './fhir/Subscription.js';
import { SubscriptionStatus, SubscriptionStatusNotificationEvent } from './fhir/SubscriptionStatus.js';
import { SubscriptionTopic, SubscriptionTopicResourceTrigger, SubscriptionTopicResourceTriggerQueryCriteria, SubscriptionTopicEventTrigger, SubscriptionTopicCanFilterBy, SubscriptionTopicNotificationShape } from './fhir/SubscriptionTopic.js';
import { Substance, SubstanceInstance, SubstanceIngredient } from './fhir/Substance.js';
import { SubstanceDefinition, SubstanceDefinitionMoiety, SubstanceDefinitionProperty, SubstanceDefinitionMolecularWeight, SubstanceDefinitionStructure, SubstanceDefinitionStructureRepresentation, SubstanceDefinitionCode, SubstanceDefinitionName, SubstanceDefinitionNameOfficial, SubstanceDefinitionRelationship, SubstanceDefinitionSourceMaterial } from './fhir/SubstanceDefinition.js';
import { SupplyDelivery, SupplyDeliverySuppliedItem } from './fhir/SupplyDelivery.js';
import { SupplyRequest, SupplyRequestParameter } from './fhir/SupplyRequest.js';
import { Task, TaskRestriction, TaskInput, TaskOutput } from './fhir/Task.js';
import { TerminologyCapabilities, TerminologyCapabilitiesSoftware, TerminologyCapabilitiesImplementation, TerminologyCapabilitiesCodeSystem, TerminologyCapabilitiesCodeSystemVersion, TerminologyCapabilitiesCodeSystemVersionFilter, TerminologyCapabilitiesExpansion, TerminologyCapabilitiesExpansionParameter, TerminologyCapabilitiesValidateCode, TerminologyCapabilitiesTranslation, TerminologyCapabilitiesClosure } from './fhir/TerminologyCapabilities.js';
import { TestReport, TestReportParticipant, TestReportSetup, TestReportSetupAction, TestReportSetupActionOperation, TestReportSetupActionAssert, TestReportTest, TestReportTestAction, TestReportTeardown, TestReportTeardownAction } from './fhir/TestReport.js';
import { TestScript, TestScriptOrigin, TestScriptDestination, TestScriptMetadata, TestScriptMetadataLink, TestScriptMetadataCapability, TestScriptFixture, TestScriptVariable, TestScriptSetup, TestScriptSetupAction, TestScriptSetupActionOperation, TestScriptSetupActionOperationRequestHeader, TestScriptSetupActionAssert, TestScriptTest, TestScriptTestAction, TestScriptTeardown, TestScriptTeardownAction } from './fhir/TestScript.js';
import { ValueSet, ValueSetCompose, ValueSetComposeInclude, ValueSetComposeIncludeConcept, ValueSetComposeIncludeConceptDesignation, ValueSetComposeIncludeFilter, ValueSetExpansion, ValueSetExpansionParameter, ValueSetExpansionContains } from './fhir/ValueSet.js';
import { VerificationResult, VerificationResultPrimarySource, VerificationResultAttestation, VerificationResultValidator } from './fhir/VerificationResult.js';
import { VisionPrescription, VisionPrescriptionLensSpecification, VisionPrescriptionLensSpecificationPrism } from './fhir/VisionPrescription.js';
/**
 * Factory creator for FHIR Resources
 */
function resourceFactory(source, options = {}) {
    switch (source['resourceType']) {
        case "Account": return new Account(source, options);
        case "ActivityDefinition": return new ActivityDefinition(source, options);
        case "AdministrableProductDefinition": return new AdministrableProductDefinition(source, options);
        case "AdverseEvent": return new AdverseEvent(source, options);
        case "AllergyIntolerance": return new AllergyIntolerance(source, options);
        case "Appointment": return new Appointment(source, options);
        case "AppointmentResponse": return new AppointmentResponse(source, options);
        case "AuditEvent": return new AuditEvent(source, options);
        case "Basic": return new Basic(source, options);
        case "Binary": return new Binary(source, options);
        case "BiologicallyDerivedProduct": return new BiologicallyDerivedProduct(source, options);
        case "BodyStructure": return new BodyStructure(source, options);
        case "Bundle": return new Bundle(source, options);
        case "CapabilityStatement": return new CapabilityStatement(source, options);
        case "CarePlan": return new CarePlan(source, options);
        case "CareTeam": return new CareTeam(source, options);
        case "CatalogEntry": return new CatalogEntry(source, options);
        case "ChargeItem": return new ChargeItem(source, options);
        case "ChargeItemDefinition": return new ChargeItemDefinition(source, options);
        case "Citation": return new Citation(source, options);
        case "Claim": return new Claim(source, options);
        case "ClaimResponse": return new ClaimResponse(source, options);
        case "ClinicalImpression": return new ClinicalImpression(source, options);
        case "ClinicalUseDefinition": return new ClinicalUseDefinition(source, options);
        case "CodeSystem": return new CodeSystem(source, options);
        case "Communication": return new Communication(source, options);
        case "CommunicationRequest": return new CommunicationRequest(source, options);
        case "CompartmentDefinition": return new CompartmentDefinition(source, options);
        case "Composition": return new Composition(source, options);
        case "ConceptMap": return new ConceptMap(source, options);
        case "Condition": return new Condition(source, options);
        case "Consent": return new Consent(source, options);
        case "Contract": return new Contract(source, options);
        case "Coverage": return new Coverage(source, options);
        case "CoverageEligibilityRequest": return new CoverageEligibilityRequest(source, options);
        case "CoverageEligibilityResponse": return new CoverageEligibilityResponse(source, options);
        case "DetectedIssue": return new DetectedIssue(source, options);
        case "Device": return new Device(source, options);
        case "DeviceDefinition": return new DeviceDefinition(source, options);
        case "DeviceMetric": return new DeviceMetric(source, options);
        case "DeviceRequest": return new DeviceRequest(source, options);
        case "DeviceUseStatement": return new DeviceUseStatement(source, options);
        case "DiagnosticReport": return new DiagnosticReport(source, options);
        case "DocumentManifest": return new DocumentManifest(source, options);
        case "DocumentReference": return new DocumentReference(source, options);
        case "DomainResource": return new DomainResource(source, options);
        case "Encounter": return new Encounter(source, options);
        case "Endpoint": return new Endpoint(source, options);
        case "EnrollmentRequest": return new EnrollmentRequest(source, options);
        case "EnrollmentResponse": return new EnrollmentResponse(source, options);
        case "EpisodeOfCare": return new EpisodeOfCare(source, options);
        case "EventDefinition": return new EventDefinition(source, options);
        case "Evidence": return new Evidence(source, options);
        case "EvidenceReport": return new EvidenceReport(source, options);
        case "EvidenceVariable": return new EvidenceVariable(source, options);
        case "ExampleScenario": return new ExampleScenario(source, options);
        case "ExplanationOfBenefit": return new ExplanationOfBenefit(source, options);
        case "FamilyMemberHistory": return new FamilyMemberHistory(source, options);
        case "Flag": return new Flag(source, options);
        case "Goal": return new Goal(source, options);
        case "GraphDefinition": return new GraphDefinition(source, options);
        case "Group": return new Group(source, options);
        case "GuidanceResponse": return new GuidanceResponse(source, options);
        case "HealthcareService": return new HealthcareService(source, options);
        case "ImagingStudy": return new ImagingStudy(source, options);
        case "Immunization": return new Immunization(source, options);
        case "ImmunizationEvaluation": return new ImmunizationEvaluation(source, options);
        case "ImmunizationRecommendation": return new ImmunizationRecommendation(source, options);
        case "ImplementationGuide": return new ImplementationGuide(source, options);
        case "Ingredient": return new Ingredient(source, options);
        case "InsurancePlan": return new InsurancePlan(source, options);
        case "Invoice": return new Invoice(source, options);
        case "Library": return new Library(source, options);
        case "Linkage": return new Linkage(source, options);
        case "List": return new List(source, options);
        case "Location": return new Location(source, options);
        case "ManufacturedItemDefinition": return new ManufacturedItemDefinition(source, options);
        case "Measure": return new Measure(source, options);
        case "MeasureReport": return new MeasureReport(source, options);
        case "Media": return new Media(source, options);
        case "Medication": return new Medication(source, options);
        case "MedicationAdministration": return new MedicationAdministration(source, options);
        case "MedicationDispense": return new MedicationDispense(source, options);
        case "MedicationKnowledge": return new MedicationKnowledge(source, options);
        case "MedicationRequest": return new MedicationRequest(source, options);
        case "MedicationStatement": return new MedicationStatement(source, options);
        case "MedicinalProductDefinition": return new MedicinalProductDefinition(source, options);
        case "MessageDefinition": return new MessageDefinition(source, options);
        case "MessageHeader": return new MessageHeader(source, options);
        case "MolecularSequence": return new MolecularSequence(source, options);
        case "NamingSystem": return new NamingSystem(source, options);
        case "NutritionOrder": return new NutritionOrder(source, options);
        case "NutritionProduct": return new NutritionProduct(source, options);
        case "Observation": return new Observation(source, options);
        case "ObservationDefinition": return new ObservationDefinition(source, options);
        case "OperationDefinition": return new OperationDefinition(source, options);
        case "OperationOutcome": return new OperationOutcome(source, options);
        case "Organization": return new Organization(source, options);
        case "OrganizationAffiliation": return new OrganizationAffiliation(source, options);
        case "PackagedProductDefinition": return new PackagedProductDefinition(source, options);
        case "Parameters": return new Parameters(source, options);
        case "Patient": return new Patient(source, options);
        case "PaymentNotice": return new PaymentNotice(source, options);
        case "PaymentReconciliation": return new PaymentReconciliation(source, options);
        case "Person": return new Person(source, options);
        case "PlanDefinition": return new PlanDefinition(source, options);
        case "Practitioner": return new Practitioner(source, options);
        case "PractitionerRole": return new PractitionerRole(source, options);
        case "Procedure": return new Procedure(source, options);
        case "Provenance": return new Provenance(source, options);
        case "Questionnaire": return new Questionnaire(source, options);
        case "QuestionnaireResponse": return new QuestionnaireResponse(source, options);
        case "RegulatedAuthorization": return new RegulatedAuthorization(source, options);
        case "RelatedPerson": return new RelatedPerson(source, options);
        case "RequestGroup": return new RequestGroup(source, options);
        case "ResearchDefinition": return new ResearchDefinition(source, options);
        case "ResearchElementDefinition": return new ResearchElementDefinition(source, options);
        case "ResearchStudy": return new ResearchStudy(source, options);
        case "ResearchSubject": return new ResearchSubject(source, options);
        case "Resource": return new Resource(source, options);
        case "RiskAssessment": return new RiskAssessment(source, options);
        case "Schedule": return new Schedule(source, options);
        case "SearchParameter": return new SearchParameter(source, options);
        case "ServiceRequest": return new ServiceRequest(source, options);
        case "Slot": return new Slot(source, options);
        case "Specimen": return new Specimen(source, options);
        case "SpecimenDefinition": return new SpecimenDefinition(source, options);
        case "StructureDefinition": return new StructureDefinition(source, options);
        case "StructureMap": return new StructureMap(source, options);
        case "Subscription": return new Subscription(source, options);
        case "SubscriptionStatus": return new SubscriptionStatus(source, options);
        case "SubscriptionTopic": return new SubscriptionTopic(source, options);
        case "Substance": return new Substance(source, options);
        case "SubstanceDefinition": return new SubstanceDefinition(source, options);
        case "SupplyDelivery": return new SupplyDelivery(source, options);
        case "SupplyRequest": return new SupplyRequest(source, options);
        case "Task": return new Task(source, options);
        case "TerminologyCapabilities": return new TerminologyCapabilities(source, options);
        case "TestReport": return new TestReport(source, options);
        case "TestScript": return new TestScript(source, options);
        case "ValueSet": return new ValueSet(source, options);
        case "VerificationResult": return new VerificationResult(source, options);
        case "VisionPrescription": return new VisionPrescription(source, options);
        default: return null;
    }
}
export { FhirBase, FhirPrimitive, FhirPrimitiveSimple, FhirBase64Binary, FhirBoolean, FhirCanonical, FhirCode, FhirDate, FhirDateTime, FhirDecimal, FhirId, FhirIdSimple, FhirInstant, FhirInteger, FhirMarkdown, FhirOid, FhirPositiveInt, FhirString, FhirTime, FhirUnsignedInt, FhirUri, FhirUriSimple, FhirUrl, FhirUuid, FhirXhtml, FhirElement, Coding, Address, Quantity, Age, Annotation, Attachment, BackboneElement, CodeableConcept, CodeableReference, ContactDetail, ContactPoint, Contributor, Count, DataRequirement, DataRequirementCodeFilter, DataRequirementDateFilter, DataRequirementSort, DataType, Distance, Dosage, DosageDoseAndRate, Duration, ElementDefinition, ElementDefinitionSlicing, ElementDefinitionSlicingDiscriminator, ElementDefinitionBase, ElementDefinitionType, ElementDefinitionExample, ElementDefinitionConstraint, ElementDefinitionBinding, ElementDefinitionMapping, Expression, Extension, HumanName, Identifier, MarketingStatus, Meta, Money, Narrative, ParameterDefinition, Period, Population, ProdCharacteristic, ProductShelfLife, Range, Ratio, RatioRange, Reference, RelatedArtifact, SampledData, Signature, Timing, TimingRepeat, TriggerDefinition, UsageContext, Resource, DomainResource, Account, AccountCoverage, AccountGuarantor, ActivityDefinition, ActivityDefinitionParticipant, ActivityDefinitionDynamicValue, AdministrableProductDefinition, AdministrableProductDefinitionProperty, AdministrableProductDefinitionRouteOfAdministration, AdministrableProductDefinitionRouteOfAdministrationTargetSpecies, AdministrableProductDefinitionRouteOfAdministrationTargetSpeciesWithdrawalPeriod, AdverseEvent, AdverseEventSuspectEntity, AdverseEventSuspectEntityCausality, AllergyIntolerance, AllergyIntoleranceReaction, Appointment, AppointmentParticipant, AppointmentResponse, AuditEvent, AuditEventAgent, AuditEventAgentNetwork, AuditEventSource, AuditEventEntity, AuditEventEntityDetail, Basic, Binary, BiologicallyDerivedProduct, BiologicallyDerivedProductCollection, BiologicallyDerivedProductProcessing, BiologicallyDerivedProductManipulation, BiologicallyDerivedProductStorage, BodyStructure, Bundle, BundleLink, BundleEntry, BundleEntrySearch, BundleEntryRequest, BundleEntryResponse, CapabilityStatement, CapabilityStatementSoftware, CapabilityStatementImplementation, CapabilityStatementRest, CapabilityStatementRestSecurity, CapabilityStatementRestResource, CapabilityStatementRestResourceInteraction, CapabilityStatementRestResourceSearchParam, CapabilityStatementRestResourceOperation, CapabilityStatementRestInteraction, CapabilityStatementMessaging, CapabilityStatementMessagingEndpoint, CapabilityStatementMessagingSupportedMessage, CapabilityStatementDocument, CarePlan, CarePlanActivity, CarePlanActivityDetail, CareTeam, CareTeamParticipant, CatalogEntry, CatalogEntryRelatedEntry, ChargeItem, ChargeItemPerformer, ChargeItemDefinition, ChargeItemDefinitionApplicability, ChargeItemDefinitionPropertyGroup, ChargeItemDefinitionPropertyGroupPriceComponent, Citation, CitationSummary, CitationClassification, CitationStatusDate, CitationRelatesTo, CitationCitedArtifact, CitationCitedArtifactVersion, CitationCitedArtifactStatusDate, CitationCitedArtifactTitle, CitationCitedArtifactAbstract, CitationCitedArtifactPart, CitationCitedArtifactRelatesTo, CitationCitedArtifactPublicationForm, CitationCitedArtifactPublicationFormPublishedIn, CitationCitedArtifactPublicationFormPeriodicRelease, CitationCitedArtifactPublicationFormPeriodicReleaseDateOfPublication, CitationCitedArtifactWebLocation, CitationCitedArtifactClassification, CitationCitedArtifactClassificationWhoClassified, CitationCitedArtifactContributorship, CitationCitedArtifactContributorshipEntry, CitationCitedArtifactContributorshipEntryAffiliationInfo, CitationCitedArtifactContributorshipEntryContributionInstance, CitationCitedArtifactContributorshipSummary, Claim, ClaimRelated, ClaimPayee, ClaimCareTeam, ClaimSupportingInfo, ClaimDiagnosis, ClaimProcedure, ClaimInsurance, ClaimAccident, ClaimItem, ClaimItemDetail, ClaimItemDetailSubDetail, ClaimResponse, ClaimResponseItem, ClaimResponseItemAdjudication, ClaimResponseItemDetail, ClaimResponseItemDetailSubDetail, ClaimResponseAddItem, ClaimResponseAddItemDetail, ClaimResponseAddItemDetailSubDetail, ClaimResponseTotal, ClaimResponsePayment, ClaimResponseProcessNote, ClaimResponseInsurance, ClaimResponseError, ClinicalImpression, ClinicalImpressionInvestigation, ClinicalImpressionFinding, ClinicalUseDefinition, ClinicalUseDefinitionContraindication, ClinicalUseDefinitionContraindicationOtherTherapy, ClinicalUseDefinitionIndication, ClinicalUseDefinitionInteraction, ClinicalUseDefinitionInteractionInteractant, ClinicalUseDefinitionUndesirableEffect, ClinicalUseDefinitionWarning, CodeSystem, CodeSystemFilter, CodeSystemProperty, CodeSystemConcept, CodeSystemConceptDesignation, CodeSystemConceptProperty, Communication, CommunicationPayload, CommunicationRequest, CommunicationRequestPayload, CompartmentDefinition, CompartmentDefinitionResource, Composition, CompositionAttester, CompositionRelatesTo, CompositionEvent, CompositionSection, ConceptMap, ConceptMapGroup, ConceptMapGroupElement, ConceptMapGroupElementTarget, ConceptMapGroupElementTargetDependsOn, ConceptMapGroupUnmapped, Condition, ConditionStage, ConditionEvidence, Consent, ConsentPolicy, ConsentVerification, ConsentProvision, ConsentProvisionActor, ConsentProvisionData, Contract, ContractContentDefinition, ContractTerm, ContractTermSecurityLabel, ContractTermOffer, ContractTermOfferParty, ContractTermOfferAnswer, ContractTermAsset, ContractTermAssetContext, ContractTermAssetValuedItem, ContractTermAction, ContractTermActionSubject, ContractSigner, ContractFriendly, ContractLegal, ContractRule, Coverage, CoverageClass, CoverageCostToBeneficiary, CoverageCostToBeneficiaryException, CoverageEligibilityRequest, CoverageEligibilityRequestSupportingInfo, CoverageEligibilityRequestInsurance, CoverageEligibilityRequestItem, CoverageEligibilityRequestItemDiagnosis, CoverageEligibilityResponse, CoverageEligibilityResponseInsurance, CoverageEligibilityResponseInsuranceItem, CoverageEligibilityResponseInsuranceItemBenefit, CoverageEligibilityResponseError, DetectedIssue, DetectedIssueEvidence, DetectedIssueMitigation, Device, DeviceUdiCarrier, DeviceDeviceName, DeviceSpecialization, DeviceVersion, DeviceProperty, DeviceDefinition, DeviceDefinitionUdiDeviceIdentifier, DeviceDefinitionDeviceName, DeviceDefinitionSpecialization, DeviceDefinitionCapability, DeviceDefinitionProperty, DeviceDefinitionMaterial, DeviceMetric, DeviceMetricCalibration, DeviceRequest, DeviceRequestParameter, DeviceUseStatement, DiagnosticReport, DiagnosticReportMedia, DocumentManifest, DocumentManifestRelated, DocumentReference, DocumentReferenceRelatesTo, DocumentReferenceContent, DocumentReferenceContext, Encounter, EncounterStatusHistory, EncounterClassHistory, EncounterParticipant, EncounterDiagnosis, EncounterHospitalization, EncounterLocation, Endpoint, EnrollmentRequest, EnrollmentResponse, EpisodeOfCare, EpisodeOfCareStatusHistory, EpisodeOfCareDiagnosis, EventDefinition, Evidence, EvidenceVariableDefinition, EvidenceStatistic, EvidenceStatisticSampleSize, EvidenceStatisticAttributeEstimate, EvidenceStatisticModelCharacteristic, EvidenceStatisticModelCharacteristicVariable, EvidenceCertainty, EvidenceReport, EvidenceReportSubject, EvidenceReportSubjectCharacteristic, EvidenceReportRelatesTo, EvidenceReportSection, EvidenceVariable, EvidenceVariableCharacteristic, EvidenceVariableCharacteristicTimeFromStart, EvidenceVariableCategory, ExampleScenario, ExampleScenarioActor, ExampleScenarioInstance, ExampleScenarioInstanceVersion, ExampleScenarioInstanceContainedInstance, ExampleScenarioProcess, ExampleScenarioProcessStep, ExampleScenarioProcessStepOperation, ExampleScenarioProcessStepAlternative, ExplanationOfBenefit, ExplanationOfBenefitRelated, ExplanationOfBenefitPayee, ExplanationOfBenefitCareTeam, ExplanationOfBenefitSupportingInfo, ExplanationOfBenefitDiagnosis, ExplanationOfBenefitProcedure, ExplanationOfBenefitInsurance, ExplanationOfBenefitAccident, ExplanationOfBenefitItem, ExplanationOfBenefitItemAdjudication, ExplanationOfBenefitItemDetail, ExplanationOfBenefitItemDetailSubDetail, ExplanationOfBenefitAddItem, ExplanationOfBenefitAddItemDetail, ExplanationOfBenefitAddItemDetailSubDetail, ExplanationOfBenefitTotal, ExplanationOfBenefitPayment, ExplanationOfBenefitProcessNote, ExplanationOfBenefitBenefitBalance, ExplanationOfBenefitBenefitBalanceFinancial, FamilyMemberHistory, FamilyMemberHistoryCondition, Flag, Goal, GoalTarget, GraphDefinition, GraphDefinitionLink, GraphDefinitionLinkTarget, GraphDefinitionLinkTargetCompartment, Group, GroupCharacteristic, GroupMember, GuidanceResponse, HealthcareService, HealthcareServiceEligibility, HealthcareServiceAvailableTime, HealthcareServiceNotAvailable, ImagingStudy, ImagingStudySeries, ImagingStudySeriesPerformer, ImagingStudySeriesInstance, Immunization, ImmunizationPerformer, ImmunizationEducation, ImmunizationReaction, ImmunizationProtocolApplied, ImmunizationEvaluation, ImmunizationRecommendation, ImmunizationRecommendationRecommendation, ImmunizationRecommendationRecommendationDateCriterion, ImplementationGuide, ImplementationGuideDependsOn, ImplementationGuideGlobal, ImplementationGuideDefinition, ImplementationGuideDefinitionGrouping, ImplementationGuideDefinitionResource, ImplementationGuideDefinitionPage, ImplementationGuideDefinitionParameter, ImplementationGuideDefinitionTemplate, ImplementationGuideManifest, ImplementationGuideManifestResource, ImplementationGuideManifestPage, Ingredient, IngredientManufacturer, IngredientSubstance, IngredientSubstanceStrength, IngredientSubstanceStrengthReferenceStrength, InsurancePlan, InsurancePlanContact, InsurancePlanCoverage, InsurancePlanCoverageBenefit, InsurancePlanCoverageBenefitLimit, InsurancePlanPlan, InsurancePlanPlanGeneralCost, InsurancePlanPlanSpecificCost, InsurancePlanPlanSpecificCostBenefit, InsurancePlanPlanSpecificCostBenefitCost, Invoice, InvoiceParticipant, InvoiceLineItem, InvoiceLineItemPriceComponent, Library, Linkage, LinkageItem, List, ListEntry, Location, LocationPosition, LocationHoursOfOperation, ManufacturedItemDefinition, ManufacturedItemDefinitionProperty, Measure, MeasureGroup, MeasureGroupPopulation, MeasureGroupStratifier, MeasureGroupStratifierComponent, MeasureSupplementalData, MeasureReport, MeasureReportGroup, MeasureReportGroupPopulation, MeasureReportGroupStratifier, MeasureReportGroupStratifierStratum, MeasureReportGroupStratifierStratumComponent, MeasureReportGroupStratifierStratumPopulation, Media, Medication, MedicationIngredient, MedicationBatch, MedicationAdministration, MedicationAdministrationPerformer, MedicationAdministrationDosage, MedicationDispense, MedicationDispensePerformer, MedicationDispenseSubstitution, MedicationKnowledge, MedicationKnowledgeRelatedMedicationKnowledge, MedicationKnowledgeMonograph, MedicationKnowledgeIngredient, MedicationKnowledgeCost, MedicationKnowledgeMonitoringProgram, MedicationKnowledgeAdministrationGuidelines, MedicationKnowledgeAdministrationGuidelinesDosage, MedicationKnowledgeAdministrationGuidelinesPatientCharacteristics, MedicationKnowledgeMedicineClassification, MedicationKnowledgePackaging, MedicationKnowledgeDrugCharacteristic, MedicationKnowledgeRegulatory, MedicationKnowledgeRegulatorySubstitution, MedicationKnowledgeRegulatorySchedule, MedicationKnowledgeRegulatoryMaxDispense, MedicationKnowledgeKinetics, MedicationRequest, MedicationRequestDispenseRequest, MedicationRequestDispenseRequestInitialFill, MedicationRequestSubstitution, MedicationStatement, MedicinalProductDefinition, MedicinalProductDefinitionContact, MedicinalProductDefinitionName, MedicinalProductDefinitionNameNamePart, MedicinalProductDefinitionNameCountryLanguage, MedicinalProductDefinitionCrossReference, MedicinalProductDefinitionOperation, MedicinalProductDefinitionCharacteristic, MessageDefinition, MessageDefinitionFocus, MessageDefinitionAllowedResponse, MessageHeader, MessageHeaderDestination, MessageHeaderSource, MessageHeaderResponse, MolecularSequence, MolecularSequenceReferenceSeq, MolecularSequenceVariant, MolecularSequenceQuality, MolecularSequenceQualityRoc, MolecularSequenceRepository, MolecularSequenceStructureVariant, MolecularSequenceStructureVariantOuter, MolecularSequenceStructureVariantInner, NamingSystem, NamingSystemUniqueId, NutritionOrder, NutritionOrderOralDiet, NutritionOrderOralDietNutrient, NutritionOrderOralDietTexture, NutritionOrderSupplement, NutritionOrderEnteralFormula, NutritionOrderEnteralFormulaAdministration, NutritionProduct, NutritionProductNutrient, NutritionProductIngredient, NutritionProductProductCharacteristic, NutritionProductInstance, Observation, ObservationReferenceRange, ObservationComponent, ObservationDefinition, ObservationDefinitionQuantitativeDetails, ObservationDefinitionQualifiedInterval, OperationDefinition, OperationDefinitionParameter, OperationDefinitionParameterBinding, OperationDefinitionParameterReferencedFrom, OperationDefinitionOverload, OperationOutcome, OperationOutcomeIssue, Organization, OrganizationContact, OrganizationAffiliation, PackagedProductDefinition, PackagedProductDefinitionLegalStatusOfSupply, PackagedProductDefinitionPackage, PackagedProductDefinitionPackageShelfLifeStorage, PackagedProductDefinitionPackageProperty, PackagedProductDefinitionPackageContainedItem, Parameters, ParametersParameter, Patient, PatientContact, PatientCommunication, PatientLink, PaymentNotice, PaymentReconciliation, PaymentReconciliationDetail, PaymentReconciliationProcessNote, Person, PersonLink, PlanDefinition, PlanDefinitionGoal, PlanDefinitionGoalTarget, PlanDefinitionAction, PlanDefinitionActionCondition, PlanDefinitionActionRelatedAction, PlanDefinitionActionParticipant, PlanDefinitionActionDynamicValue, Practitioner, PractitionerQualification, PractitionerRole, PractitionerRoleAvailableTime, PractitionerRoleNotAvailable, Procedure, ProcedurePerformer, ProcedureFocalDevice, Provenance, ProvenanceAgent, ProvenanceEntity, Questionnaire, QuestionnaireItem, QuestionnaireItemEnableWhen, QuestionnaireItemAnswerOption, QuestionnaireItemInitial, QuestionnaireResponse, QuestionnaireResponseItem, QuestionnaireResponseItemAnswer, RegulatedAuthorization, RegulatedAuthorizationCase, RelatedPerson, RelatedPersonCommunication, RequestGroup, RequestGroupAction, RequestGroupActionCondition, RequestGroupActionRelatedAction, ResearchDefinition, ResearchElementDefinition, ResearchElementDefinitionCharacteristic, ResearchStudy, ResearchStudyArm, ResearchStudyObjective, ResearchSubject, RiskAssessment, RiskAssessmentPrediction, Schedule, SearchParameter, SearchParameterComponent, ServiceRequest, Slot, Specimen, SpecimenCollection, SpecimenProcessing, SpecimenContainer, SpecimenDefinition, SpecimenDefinitionTypeTested, SpecimenDefinitionTypeTestedContainer, SpecimenDefinitionTypeTestedContainerAdditive, SpecimenDefinitionTypeTestedHandling, StructureDefinition, StructureDefinitionMapping, StructureDefinitionContext, StructureDefinitionSnapshot, StructureDefinitionDifferential, StructureMap, StructureMapStructure, StructureMapGroup, StructureMapGroupInput, StructureMapGroupRule, StructureMapGroupRuleSource, StructureMapGroupRuleTarget, StructureMapGroupRuleTargetParameter, StructureMapGroupRuleDependent, Subscription, SubscriptionChannel, SubscriptionStatus, SubscriptionStatusNotificationEvent, SubscriptionTopic, SubscriptionTopicResourceTrigger, SubscriptionTopicResourceTriggerQueryCriteria, SubscriptionTopicEventTrigger, SubscriptionTopicCanFilterBy, SubscriptionTopicNotificationShape, Substance, SubstanceInstance, SubstanceIngredient, SubstanceDefinition, SubstanceDefinitionMoiety, SubstanceDefinitionProperty, SubstanceDefinitionMolecularWeight, SubstanceDefinitionStructure, SubstanceDefinitionStructureRepresentation, SubstanceDefinitionCode, SubstanceDefinitionName, SubstanceDefinitionNameOfficial, SubstanceDefinitionRelationship, SubstanceDefinitionSourceMaterial, SupplyDelivery, SupplyDeliverySuppliedItem, SupplyRequest, SupplyRequestParameter, Task, TaskRestriction, TaskInput, TaskOutput, TerminologyCapabilities, TerminologyCapabilitiesSoftware, TerminologyCapabilitiesImplementation, TerminologyCapabilitiesCodeSystem, TerminologyCapabilitiesCodeSystemVersion, TerminologyCapabilitiesCodeSystemVersionFilter, TerminologyCapabilitiesExpansion, TerminologyCapabilitiesExpansionParameter, TerminologyCapabilitiesValidateCode, TerminologyCapabilitiesTranslation, TerminologyCapabilitiesClosure, TestReport, TestReportParticipant, TestReportSetup, TestReportSetupAction, TestReportSetupActionOperation, TestReportSetupActionAssert, TestReportTest, TestReportTestAction, TestReportTeardown, TestReportTeardownAction, TestScript, TestScriptOrigin, TestScriptDestination, TestScriptMetadata, TestScriptMetadataLink, TestScriptMetadataCapability, TestScriptFixture, TestScriptVariable, TestScriptSetup, TestScriptSetupAction, TestScriptSetupActionOperation, TestScriptSetupActionOperationRequestHeader, TestScriptSetupActionAssert, TestScriptTest, TestScriptTestAction, TestScriptTeardown, TestScriptTeardownAction, ValueSet, ValueSetCompose, ValueSetComposeInclude, ValueSetComposeIncludeConcept, ValueSetComposeIncludeConceptDesignation, ValueSetComposeIncludeFilter, ValueSetExpansion, ValueSetExpansionParameter, ValueSetExpansionContains, VerificationResult, VerificationResultPrimarySource, VerificationResultAttestation, VerificationResultValidator, VisionPrescription, VisionPrescriptionLensSpecification, VisionPrescriptionLensSpecificationPrism, resourceFactory, };
//# sourceMappingURL=data:application/json;base64,