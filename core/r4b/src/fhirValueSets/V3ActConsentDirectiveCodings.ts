// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://terminology.hl7.org/ValueSet/v3-ActConsentDirective|2.0.0

import { CodingArgs } from '../fhir/Coding.js'

/**
 * ActConsentDirective codes are used to specify the type of Consent Directive to which a Consent Directive Act conforms.
 */
export type V3ActConsentDirectiveCodingType = {
  /**
   * Code: _ActConsentDirective
   */
  ActConsentDirective: CodingArgs;
  /**
   * Code: EMRGONLY
   */
  EmergencyOnly: CodingArgs;
  /**
   * Code: GRANTORCHOICE
   */
  GrantorChoice: CodingArgs;
  /**
   * Code: IMPLIED
   */
  ImpliedConsent: CodingArgs;
  /**
   * Code: IMPLIEDD
   */
  ImpliedConsentWithOpportunityToDissent: CodingArgs;
  /**
   * Code: NOCONSENT
   */
  NoConsent: CodingArgs;
  /**
   * Code: NOPP
   */
  NoticeOfPrivacyPractices: CodingArgs;
  /**
   * Code: OPTIN
   */
  OptIn: CodingArgs;
  /**
   * Code: OPTINR
   */
  OptInWithRestrictions: CodingArgs;
  /**
   * Code: OPTOUT
   */
  OpOut: CodingArgs;
  /**
   * Code: OPTOUTE
   */
  OptOutWithExceptions: CodingArgs;
}

/**
 * ActConsentDirective codes are used to specify the type of Consent Directive to which a Consent Directive Act conforms.
 */
export const V3ActConsentDirectiveCodings:V3ActConsentDirectiveCodingType = {
  /**
   * Code: _ActConsentDirective
   */
  ActConsentDirective: {
    display: "ActConsentDirective",
    code: "_ActConsentDirective",
    system: "http://terminology.hl7.org/CodeSystem/v3-ActCode",
  },
  /**
   * Code: EMRGONLY
   */
  EmergencyOnly: {
    display: "emergency only",
    code: "EMRGONLY",
    system: "http://terminology.hl7.org/CodeSystem/v3-ActCode",
  },
  /**
   * Code: GRANTORCHOICE
   */
  GrantorChoice: {
    display: "grantor choice",
    code: "GRANTORCHOICE",
    system: "http://terminology.hl7.org/CodeSystem/v3-ActCode",
  },
  /**
   * Code: IMPLIED
   */
  ImpliedConsent: {
    display: "implied consent",
    code: "IMPLIED",
    system: "http://terminology.hl7.org/CodeSystem/v3-ActCode",
  },
  /**
   * Code: IMPLIEDD
   */
  ImpliedConsentWithOpportunityToDissent: {
    display: "implied consent with opportunity to dissent",
    code: "IMPLIEDD",
    system: "http://terminology.hl7.org/CodeSystem/v3-ActCode",
  },
  /**
   * Code: NOCONSENT
   */
  NoConsent: {
    display: "no consent",
    code: "NOCONSENT",
    system: "http://terminology.hl7.org/CodeSystem/v3-ActCode",
  },
  /**
   * Code: NOPP
   */
  NoticeOfPrivacyPractices: {
    display: "notice of privacy practices",
    code: "NOPP",
    system: "http://terminology.hl7.org/CodeSystem/v3-ActCode",
  },
  /**
   * Code: OPTIN
   */
  OptIn: {
    display: "opt-in",
    code: "OPTIN",
    system: "http://terminology.hl7.org/CodeSystem/v3-ActCode",
  },
  /**
   * Code: OPTINR
   */
  OptInWithRestrictions: {
    display: "opt-in with restrictions",
    code: "OPTINR",
    system: "http://terminology.hl7.org/CodeSystem/v3-ActCode",
  },
  /**
   * Code: OPTOUT
   */
  OpOut: {
    display: "op-out",
    code: "OPTOUT",
    system: "http://terminology.hl7.org/CodeSystem/v3-ActCode",
  },
  /**
   * Code: OPTOUTE
   */
  OptOutWithExceptions: {
    display: "opt-out with exceptions",
    code: "OPTOUTE",
    system: "http://terminology.hl7.org/CodeSystem/v3-ActCode",
  },
} as const;
