// <auto-generated/>
// Contents of: hl7.fhir.r4b.core version: 4.3.0
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/codesystem-hierarchy-meaning|4.3.0

import { CodingArgs } from '../fhir/Coding.js'

/**
 * The meaning of the hierarchy of concepts in a code system.
 */
export type CodesystemHierarchyMeaningCodingType = {
  /**
   * classified-with: Child concepts in the hierarchy may have only one parent, and there is a presumption that the code system is a "closed world" meaning all things must be in the hierarchy. This results in concepts such as "not otherwise classified.".
   */
  ClassifiedWith: CodingArgs;
  /**
   * grouped-by: No particular relationship between the concepts can be assumed, except what can be determined by inspection of the definitions of the elements (possible reasons to use this: importing from a source where this is not defined, or where various parts of the hierarchy have different meanings).
   */
  GroupedBy: CodingArgs;
  /**
   * is-a: A hierarchy where the child concepts have an IS-A relationship with the parents - that is, all the properties of the parent are also true for its child concepts. Not that is-a is a property of the concepts, so additional subsumption relationships may be defined using properties or the [subsumes](extension-codesystem-subsumes.html) extension.
   */
  IsA: CodingArgs;
  /**
   * part-of: Child elements list the individual parts of a composite whole (e.g. body site).
   */
  PartOf: CodingArgs;
}

/**
 * The meaning of the hierarchy of concepts in a code system.
 */
export const CodesystemHierarchyMeaningCodings:CodesystemHierarchyMeaningCodingType = {
  /**
   * classified-with: Child concepts in the hierarchy may have only one parent, and there is a presumption that the code system is a "closed world" meaning all things must be in the hierarchy. This results in concepts such as "not otherwise classified.".
   */
  ClassifiedWith: {
    display: "Classified With",
    code: "classified-with",
    system: "http://hl7.org/fhir/codesystem-hierarchy-meaning",
  },
  /**
   * grouped-by: No particular relationship between the concepts can be assumed, except what can be determined by inspection of the definitions of the elements (possible reasons to use this: importing from a source where this is not defined, or where various parts of the hierarchy have different meanings).
   */
  GroupedBy: {
    display: "Grouped By",
    code: "grouped-by",
    system: "http://hl7.org/fhir/codesystem-hierarchy-meaning",
  },
  /**
   * is-a: A hierarchy where the child concepts have an IS-A relationship with the parents - that is, all the properties of the parent are also true for its child concepts. Not that is-a is a property of the concepts, so additional subsumption relationships may be defined using properties or the [subsumes](extension-codesystem-subsumes.html) extension.
   */
  IsA: {
    display: "Is-A",
    code: "is-a",
    system: "http://hl7.org/fhir/codesystem-hierarchy-meaning",
  },
  /**
   * part-of: Child elements list the individual parts of a composite whole (e.g. body site).
   */
  PartOf: {
    display: "Part Of",
    code: "part-of",
    system: "http://hl7.org/fhir/codesystem-hierarchy-meaning",
  },
} as const;
