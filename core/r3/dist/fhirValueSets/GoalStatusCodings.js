// <auto-generated/>
// Contents of: hl7.fhir.r3.core version: 3.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/goal-status|3.0.2
/**
 * Indicates whether the goal has been met and is still being targeted
 */
export const GoalStatusCodings = {
    /**
     * accepted: A proposed goal was accepted or acknowledged
     */
    Accepted: {
        display: "Accepted",
        code: "accepted",
        system: "http://hl7.org/fhir/goal-status",
    },
    /**
     * achieved: The goal has been met and no further action is needed
     */
    Achieved: {
        display: "Achieved",
        code: "achieved",
        system: "http://hl7.org/fhir/goal-status",
    },
    /**
     * ahead-of-target: The goal is ahead of the planned timelines
     */
    AheadOfTarget: {
        display: "Ahead of Target",
        code: "ahead-of-target",
        system: "http://hl7.org/fhir/goal-status",
    },
    /**
     * behind-target: The goal is behind the planned timelines
     */
    BehindTarget: {
        display: "Behind Target",
        code: "behind-target",
        system: "http://hl7.org/fhir/goal-status",
    },
    /**
     * cancelled: The previously accepted goal is no longer being sought
     */
    Cancelled: {
        display: "Cancelled",
        code: "cancelled",
        system: "http://hl7.org/fhir/goal-status",
    },
    /**
     * entered-in-error: The goal was entered in error and voided.
     */
    EnteredInError: {
        display: "Entered In Error",
        code: "entered-in-error",
        system: "http://hl7.org/fhir/goal-status",
    },
    /**
     * in-progress: The goal is being sought but has not yet been reached.  (Also applies if goal was reached in the past but there has been regression and goal is being sought again)
     */
    InProgress: {
        display: "In Progress",
        code: "in-progress",
        system: "http://hl7.org/fhir/goal-status",
    },
    /**
     * on-hold: The goal remains a long term objective but is no longer being actively pursued for a temporary period of time.
     */
    OnHold: {
        display: "On Hold",
        code: "on-hold",
        system: "http://hl7.org/fhir/goal-status",
    },
    /**
     * on-target: The goal is on schedule for the planned timelines
     */
    OnTarget: {
        display: "On Target",
        code: "on-target",
        system: "http://hl7.org/fhir/goal-status",
    },
    /**
     * planned: A goal is planned for this patient
     */
    Planned: {
        display: "Planned",
        code: "planned",
        system: "http://hl7.org/fhir/goal-status",
    },
    /**
     * proposed: A goal is proposed for this patient
     */
    Proposed: {
        display: "Proposed",
        code: "proposed",
        system: "http://hl7.org/fhir/goal-status",
    },
    /**
     * rejected: A proposed goal was rejected
     */
    Rejected: {
        display: "Rejected",
        code: "rejected",
        system: "http://hl7.org/fhir/goal-status",
    },
    /**
     * sustaining: The goal has been met, but ongoing activity is needed to sustain the goal objective
     */
    Sustaining: {
        display: "Sustaining",
        code: "sustaining",
        system: "http://hl7.org/fhir/goal-status",
    },
};
//# sourceMappingURL=data:application/json;base64,