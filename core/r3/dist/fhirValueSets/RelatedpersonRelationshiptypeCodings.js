// <auto-generated/>
// Contents of: hl7.fhir.r3.core version: 3.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/relatedperson-relationshiptype|3.0.2
/**
 * A set of codes that can be used to indicate the relationship between a Patient and a Related Person.
 */
export const RelatedpersonRelationshiptypeCodings = {
    /**
     * _PersonalRelationshipRoleType: PersonalRelationshipRoleType
     */
    PersonalRelationshipRoleType: {
        display: "PersonalRelationshipRoleType",
        code: "_PersonalRelationshipRoleType",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * ADOPTF: The player of the role (father) is a male who has taken the scoper (child) into their family through legal means and raises them as his own child.
     */
    AdoptiveFather: {
        display: "adoptive father",
        code: "ADOPTF",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * ADOPTM: The player of the role (father) is a female who has taken the scoper (child) into their family through legal means and raises them as her own child.
     */
    AdoptiveMother: {
        display: "adoptive mother",
        code: "ADOPTM",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * ADOPTP: The player of the role (parent) has taken the scoper (child) into their family through legal means and raises them as his or her own child.
     */
    AdoptiveParent: {
        display: "adoptive parent",
        code: "ADOPTP",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * AUNT: The player of the role is a sister of the scoping person's mother or father.
     */
    Aunt: {
        display: "aunt",
        code: "AUNT",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * Code: BP
     */
    BillingContactPerson: {
        display: "Billing contact person",
        code: "BP",
        system: "http://hl7.org/fhir/v2/0131",
    },
    /**
     * BRO: The player of the role is a male sharing one or both parents in common with the scoping entity.
     */
    Brother: {
        display: "brother",
        code: "BRO",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * BROINLAW: The player of the role is: (1) a brother of the scoping person's spouse, or (2) the husband of the scoping person's sister, or (3) the husband of a sister of the scoping person's spouse.
     */
    BrotherInLaw: {
        display: "brother-in-law",
        code: "BROINLAW",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * Code: C
     */
    EmergencyContact: {
        display: "Emergency Contact",
        code: "C",
        system: "http://hl7.org/fhir/v2/0131",
    },
    /**
     * CHILD: The player of the role is a child of the scoping entity.
     */
    Child: {
        display: "child",
        code: "CHILD",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * CHLDADOPT: The player of the role is a child taken into a family through legal means and raised by the scoping person (parent) as his or her own child.
     */
    AdoptedChild: {
        display: "adopted child",
        code: "CHLDADOPT",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * CHLDFOST: The player of the role is a child receiving parental care and nurture from the scoping person (parent) but not related to him or her through legal or blood ties.
     */
    FosterChild: {
        display: "foster child",
        code: "CHLDFOST",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * CHLDINLAW: The player of the role is the spouse of scoping person's child.
     */
    ChildInLaw: {
        display: "child-in-law",
        code: "CHLDINLAW",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * COUSN: The player of the role is a relative of the scoping person descended from a common ancestor, such as a 	grandparent, by two or more steps in a diverging line.
     */
    Cousin: {
        display: "cousin",
        code: "COUSN",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * Code: CP
     */
    ContactPerson: {
        display: "Contact person",
        code: "CP",
        system: "http://hl7.org/fhir/v2/0131",
    },
    /**
     * DAU: The player of the role is a female offspring of the scoping entity (parent).
     */
    NaturalDaughter: {
        display: "natural daughter",
        code: "DAU",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * DAUADOPT: The player of the role is a female child taken into a family through legal means and raised by the scoping person (parent) as his or her own child.
     */
    AdoptedDaughter: {
        display: "adopted daughter",
        code: "DAUADOPT",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * DAUC: Description: The player of the role is a female child (of any type) of scoping entity (parent)
     */
    Daughter: {
        display: "daughter",
        code: "DAUC",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * DAUFOST: The player of the role is a female child receiving parental care and nurture from the scoping person (parent) but not related to him or her through legal or blood ties.
     */
    FosterDaughter: {
        display: "foster daughter",
        code: "DAUFOST",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * DAUINLAW: The player of the role is the wife of scoping person's son.
     */
    DaughterInLaw: {
        display: "daughter in-law",
        code: "DAUINLAW",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * DOMPART: The player of the role cohabits with the scoping person but is not the scoping person's spouse.
     */
    DomesticPartner: {
        display: "domestic partner",
        code: "DOMPART",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * Code: E
     */
    Employer: {
        display: "Employer",
        code: "E",
        system: "http://hl7.org/fhir/v2/0131",
    },
    /**
     * Code: EP
     */
    EmergencyContactPerson: {
        display: "Emergency contact person",
        code: "EP",
        system: "http://hl7.org/fhir/v2/0131",
    },
    /**
     * EXT: Description: A family member not having an immediate genetic or legal relationship e.g. Aunt, cousin, great grandparent, grandchild, grandparent, niece, nephew or uncle.
     */
    ExtendedFamilyMember: {
        display: "extended family member",
        code: "EXT",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * Code: F
     */
    FederalAgency: {
        display: "Federal Agency",
        code: "F",
        system: "http://hl7.org/fhir/v2/0131",
    },
    /**
     * FAMMEMB: A relationship between two people characterizing their "familial" relationship
     */
    FamilyMember: {
        display: "family member",
        code: "FAMMEMB",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * FMRSPS: Player of the role was previously joined to the scoping person in marriage and this marriage is now dissolved and inactive.
     *
     *
     *                            Usage Note: This is significant to indicate as some jurisdictions have different legal requirements for former spouse to access the patient's record, from a general friend.
     */
    FormerSpouse: {
        display: "former spouse",
        code: "FMRSPS",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * FRND: The player of the role is a person who is known, liked, and trusted by the scoping person.
     */
    UnrelatedFriend: {
        display: "unrelated friend",
        code: "FRND",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * FTH: The player of the role is a male who begets or raises or nurtures the scoping entity (child).
     */
    Father: {
        display: "father",
        code: "FTH",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * FTHFOST: The player of the role (parent) who is a male state-certified caregiver responsible for the scoper (child) who has been placed in the parent's care. The placement of the child is usually arranged through the government or a social-service agency, and temporary.
     *
     *                         The state, via a jurisdiction recognized child protection agency, stands as in loco parentis to the child, making all legal decisions while the foster parent is responsible for the day-to-day care of the specified child.
     */
    FosterFather: {
        display: "foster father",
        code: "FTHFOST",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * FTHINLAW: The player of the role is the father of the scoping person's husband or wife.
     */
    FatherInLaw: {
        display: "father-in-law",
        code: "FTHINLAW",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * FTWIN: The scoper and player were carried in the same womb and share common biological parents but are the product of distinct egg/sperm pairs.
     */
    FraternalTwin: {
        display: "fraternal twin",
        code: "FTWIN",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * FTWINBRO: The scoper was carried in the same womb as the male player and shares common biological parents but is the product of a distinct egg/sperm pair.
     */
    FraternalTwinBrother: {
        display: "fraternal twin brother",
        code: "FTWINBRO",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * FTWINSIS: The scoper was carried in the same womb as the female player and shares common biological parents but is the product of a distinct egg/sperm pair.
     */
    FraternalTwinSister: {
        display: "fraternal twin sister",
        code: "FTWINSIS",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * GESTM: The player is a female whose womb carries the fetus of the scoper.  Generally used when the gestational mother and natural mother are not the same.
     */
    GestationalMother: {
        display: "gestational mother",
        code: "GESTM",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * GGRFTH: The player of the role is the father of the scoping person's grandparent.
     */
    GreatGrandfather: {
        display: "great grandfather",
        code: "GGRFTH",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * GGRMTH: The player of the role is the mother of the scoping person's grandparent.
     */
    GreatGrandmother: {
        display: "great grandmother",
        code: "GGRMTH",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * GGRPRN: The player of the role is a parent of the scoping person's grandparent.
     */
    GreatGrandparent: {
        display: "great grandparent",
        code: "GGRPRN",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * GRFTH: The player of the role is the father of the scoping person's mother or father.
     */
    Grandfather: {
        display: "grandfather",
        code: "GRFTH",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * GRMTH: The player of the role is the mother of the scoping person's mother or father.
     */
    Grandmother: {
        display: "grandmother",
        code: "GRMTH",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * GRNDCHILD: The player of the role is a child of the scoping person's son or daughter.
     */
    Grandchild: {
        display: "grandchild",
        code: "GRNDCHILD",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * GRNDDAU: The player of the role is a daughter of the scoping person's son or daughter.
     */
    Granddaughter: {
        display: "granddaughter",
        code: "GRNDDAU",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * GRNDSON: The player of the role is a son of the scoping person's son or daughter.
     */
    Grandson: {
        display: "grandson",
        code: "GRNDSON",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * GRPRN: The player of the role is a parent of the scoping person's mother or father.
     */
    Grandparent: {
        display: "grandparent",
        code: "GRPRN",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * HBRO: The player of the role is a male related to the scoping entity by sharing only one biological parent.
     */
    HalfBrother: {
        display: "half-brother",
        code: "HBRO",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * HSIB: The player of the role is related to the scoping entity by sharing only one biological parent.
     */
    HalfSibling: {
        display: "half-sibling",
        code: "HSIB",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * HSIS: The player of the role is a female related to the scoping entity by sharing only one biological parent.
     */
    HalfSister: {
        display: "half-sister",
        code: "HSIS",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * HUSB: The player of the role is a man joined to a woman (scoping person) in marriage.
     */
    Husband: {
        display: "husband",
        code: "HUSB",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * Code: I
     */
    InsuranceCompany: {
        display: "Insurance Company",
        code: "I",
        system: "http://hl7.org/fhir/v2/0131",
    },
    /**
     * INLAW: A relationship between an individual and a member of their spousal partner's immediate family.
     */
    Inlaw: {
        display: "inlaw",
        code: "INLAW",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * ITWIN: The scoper and player are offspring of the same egg-sperm pair.
     */
    IdenticalTwin: {
        display: "identical twin",
        code: "ITWIN",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * ITWINBRO: The male scoper is an offspring of the same egg-sperm pair as the male player.
     */
    IdenticalTwinBrother: {
        display: "identical twin brother",
        code: "ITWINBRO",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * ITWINSIS: The female scoper is an offspring of the same egg-sperm pair as the female player.
     */
    IdenticalTwinSister: {
        display: "identical twin sister",
        code: "ITWINSIS",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * MAUNT: Description:The player of the role is a biological sister of the scoping person's biological mother.
     */
    MaternalAunt: {
        display: "maternal aunt",
        code: "MAUNT",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * MCOUSN: Description:The player of the role is a biological relative of the scoping person descended from a common ancestor on the player's mother's side, such as a grandparent, by two or more steps in a diverging line.
     */
    MaternalCousin: {
        display: "maternal cousin",
        code: "MCOUSN",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * MGGRFTH: Description:The player of the role is the biological father of the scoping person's biological mother's parent.
     */
    MaternalGreatGrandfather: {
        display: "maternal great-grandfather",
        code: "MGGRFTH",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * MGGRMTH: Description:The player of the role is the biological mother of the scoping person's biological mother's parent.
     */
    MaternalGreatGrandmother: {
        display: "maternal great-grandmother",
        code: "MGGRMTH",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * MGGRPRN: Description:The player of the role is a biological parent of the scoping person's biological mother's parent.
     */
    MaternalGreatGrandparent: {
        display: "maternal great-grandparent",
        code: "MGGRPRN",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * MGRFTH: Description:The player of the role is the biological father of the scoping person's biological mother.
     */
    MaternalGrandfather: {
        display: "maternal grandfather",
        code: "MGRFTH",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * MGRMTH: Description:The player of the role is the biological mother of the scoping person's biological mother.
     */
    MaternalGrandmother: {
        display: "maternal grandmother",
        code: "MGRMTH",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * MGRPRN: Description:The player of the role is the biological parent of the scoping person's biological mother.
     */
    MaternalGrandparent: {
        display: "maternal grandparent",
        code: "MGRPRN",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * MTH: The player of the role is a female who conceives, gives birth to, or raises and nurtures the scoping entity (child).
     */
    Mother: {
        display: "mother",
        code: "MTH",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * MTHFOST: The player of the role (parent) who is a female state-certified caregiver responsible for the scoper (child) who has been placed in the parent's care. The placement of the child is usually arranged through the government or a social-service agency, and temporary.
     *
     *                         The state, via a jurisdiction recognized child protection agency, stands as in loco parentis to the child, making all legal decisions while the foster parent is responsible for the day-to-day care of the specified child.
     */
    FosterMother: {
        display: "foster mother",
        code: "MTHFOST",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * MTHINLAW: The player of the role is the mother of the scoping person's husband or wife.
     */
    MotherInLaw: {
        display: "mother-in-law",
        code: "MTHINLAW",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * MUNCLE: Description:The player of the role is a biological brother of the scoping person's biological mother.
     */
    MaternalUncle: {
        display: "maternal uncle",
        code: "MUNCLE",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * Code: N
     */
    NextOfKin: {
        display: "Next-of-Kin",
        code: "N",
        system: "http://hl7.org/fhir/v2/0131",
    },
    /**
     * NBOR: The player of the role lives near or next to the 	scoping person.
     */
    Neighbor: {
        display: "neighbor",
        code: "NBOR",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * NBRO: The player of the role is a male having the same biological parents as the scoping entity.
     */
    NaturalBrother: {
        display: "natural brother",
        code: "NBRO",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * NCHILD: The player of the role is an offspring of the scoping entity as determined by birth.
     */
    NaturalChild: {
        display: "natural child",
        code: "NCHILD",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * NEPHEW: The player of the role is a son of the scoping person's brother or sister or of the brother or sister of the 	scoping person's spouse.
     */
    Nephew: {
        display: "nephew",
        code: "NEPHEW",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * NFTH: The player of the role is a male who begets the scoping entity (child).
     */
    NaturalFather: {
        display: "natural father",
        code: "NFTH",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * NFTHF: Indicates the biologic male parent of a fetus.
     */
    NaturalFatherOfFetus: {
        display: "natural father of fetus",
        code: "NFTHF",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * NIECE: The player of the role is a daughter of the scoping person's brother or sister or of the brother or sister of the 	scoping person's spouse.
     */
    Niece: {
        display: "niece",
        code: "NIECE",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * NIENEPH: The player of the role is a child of scoping person's brother or sister or of the brother or sister of the 	scoping person's spouse.
     */
    NieceNephew: {
        display: "niece/nephew",
        code: "NIENEPH",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * NMTH: The player of the role is a female who conceives or gives birth to the scoping entity (child).
     */
    NaturalMother: {
        display: "natural mother",
        code: "NMTH",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * NMTHF: The player is the biologic female parent of the scoping fetus.
     */
    NaturalMotherOfFetus: {
        display: "natural mother of fetus",
        code: "NMTHF",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * NPRN: natural parent
     */
    NaturalParent: {
        display: "natural parent",
        code: "NPRN",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * NSIB: The player of the role has both biological parents in common with the scoping entity.
     */
    NaturalSibling: {
        display: "natural sibling",
        code: "NSIB",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * NSIS: The player of the role is a female having the same biological parents as the scoping entity.
     */
    NaturalSister: {
        display: "natural sister",
        code: "NSIS",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * Code: O
     */
    Other: {
        display: "Other",
        code: "O",
        system: "http://hl7.org/fhir/v2/0131",
    },
    /**
     * ONESELF: The relationship that a person has with his or her self.
     */
    Self: {
        display: "self",
        code: "ONESELF",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * PAUNT: Description:The player of the role is a biological sister of the scoping person's biological father.
     */
    PaternalAunt: {
        display: "paternal aunt",
        code: "PAUNT",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * PCOUSN: Description:The player of the role is a biological relative of the scoping person descended from a common ancestor on the player's father's side, such as a grandparent, by two or more steps in a diverging line.
     */
    PaternalCousin: {
        display: "paternal cousin",
        code: "PCOUSN",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * PGGRFTH: Description:The player of the role is the biological father of the scoping person's biological father's parent.
     */
    PaternalGreatGrandfather: {
        display: "paternal great-grandfather",
        code: "PGGRFTH",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * PGGRMTH: Description:The player of the role is the biological mother of the scoping person's biological father's parent.
     */
    PaternalGreatGrandmother: {
        display: "paternal great-grandmother",
        code: "PGGRMTH",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * PGGRPRN: Description:The player of the role is a biological parent of the scoping person's biological father's parent.
     */
    PaternalGreatGrandparent: {
        display: "paternal great-grandparent",
        code: "PGGRPRN",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * PGRFTH: Description:The player of the role is the biological father of the scoping person's biological father.
     */
    PaternalGrandfather: {
        display: "paternal grandfather",
        code: "PGRFTH",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * PGRMTH: Description:The player of the role is the biological mother of the scoping person's biological father.
     */
    PaternalGrandmother: {
        display: "paternal grandmother",
        code: "PGRMTH",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * PGRPRN: Description:The player of the role is the biological parent of the scoping person's biological father.
     */
    PaternalGrandparent: {
        display: "paternal grandparent",
        code: "PGRPRN",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * Code: PR
     */
    PersonPreparingReferral: {
        display: "Person preparing referral",
        code: "PR",
        system: "http://hl7.org/fhir/v2/0131",
    },
    /**
     * PRN: The player of the role is one who begets, gives birth to, or nurtures and raises the scoping entity (child).
     */
    Parent: {
        display: "parent",
        code: "PRN",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * PRNFOST: The player of the role (parent) who is a state-certified caregiver responsible for the scoper (child) who has been placed in the parent's care. The placement of the child is usually arranged through the government or a social-service agency, and temporary.
     *
     *                         The state, via a jurisdiction recognized child protection agency, stands as in loco parentis to the child, making all legal decisions while the foster parent is responsible for the day-to-day care of the specified child.
     */
    FosterParent: {
        display: "foster parent",
        code: "PRNFOST",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * PRNINLAW: The player of the role is the parent of scoping person's husband or wife.
     */
    ParentInLaw: {
        display: "parent in-law",
        code: "PRNINLAW",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * PUNCLE: Description:The player of the role is a biological brother of the scoping person's biological father.
     */
    PaternalUncle: {
        display: "paternal uncle",
        code: "PUNCLE",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * ROOM: One who shares living quarters with the subject.
     */
    Roommate: {
        display: "Roommate",
        code: "ROOM",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * Code: S
     */
    StateAgency: {
        display: "State Agency",
        code: "S",
        system: "http://hl7.org/fhir/v2/0131",
    },
    /**
     * SIB: The player of the role shares one or both parents in common with the scoping entity.
     */
    Sibling: {
        display: "sibling",
        code: "SIB",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * SIBINLAW: The player of the role is: (1) a sibling of the scoping person's spouse, or (2) the spouse of the scoping person's sibling, or (3) the spouse of a sibling of the scoping person's spouse.
     */
    SiblingInLaw: {
        display: "sibling in-law",
        code: "SIBINLAW",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * SIGOTHR: A person who is important to one's well being; especially a spouse or one in a similar relationship.  (The player is the one who is important)
     */
    SignificantOther: {
        display: "significant other",
        code: "SIGOTHR",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * SIS: The player of the role is a female sharing one or both parents in common with the scoping entity.
     */
    Sister: {
        display: "sister",
        code: "SIS",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * SISINLAW: The player of the role is: (1) a sister of the scoping person's spouse, or (2) the wife of the scoping person's brother, or (3) the wife of a brother of the scoping person's spouse.
     */
    SisterInLaw: {
        display: "sister-in-law",
        code: "SISINLAW",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * SON: The player of the role is a male offspring of the scoping entity (parent).
     */
    NaturalSon: {
        display: "natural son",
        code: "SON",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * SONADOPT: The player of the role is a male child taken into a family through legal means and raised by the scoping person (parent) as his or her own child.
     */
    AdoptedSon: {
        display: "adopted son",
        code: "SONADOPT",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * SONC: Description: The player of the role is a male child (of any type) of scoping entity (parent)
     */
    Son: {
        display: "son",
        code: "SONC",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * SONFOST: The player of the role is a male child receiving parental care and nurture from the scoping person (parent) but not related to him or her through legal or blood ties.
     */
    FosterSon: {
        display: "foster son",
        code: "SONFOST",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * SONINLAW: The player of the role is the husband of scoping person's daughter.
     */
    SonInLaw: {
        display: "son in-law",
        code: "SONINLAW",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * SPS: The player of the role is a marriage partner of the scoping person.
     */
    Spouse: {
        display: "spouse",
        code: "SPS",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * STPBRO: The player of the role is a son of the scoping person's stepparent.
     */
    Stepbrother: {
        display: "stepbrother",
        code: "STPBRO",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * STPCHLD: The player of the role is a child of the scoping person's spouse by a previous union.
     */
    StepChild: {
        display: "step child",
        code: "STPCHLD",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * STPDAU: The player of the role is a daughter of the scoping person's spouse by a previous union.
     */
    Stepdaughter: {
        display: "stepdaughter",
        code: "STPDAU",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * STPFTH: The player of the role is the husband of scoping person's mother and not the scoping person's natural father.
     */
    Stepfather: {
        display: "stepfather",
        code: "STPFTH",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * STPMTH: The player of the role is the wife of scoping person's father and not the scoping person's natural mother.
     */
    Stepmother: {
        display: "stepmother",
        code: "STPMTH",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * STPPRN: The player of the role is the spouse of the scoping person's parent and not the scoping person's natural parent.
     */
    StepParent: {
        display: "step parent",
        code: "STPPRN",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * STPSIB: The player of the role is a child of the scoping person's stepparent.
     */
    StepSibling: {
        display: "step sibling",
        code: "STPSIB",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * STPSIS: The player of the role is a daughter of the scoping person's stepparent.
     */
    Stepsister: {
        display: "stepsister",
        code: "STPSIS",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * STPSON: The player of the role is a son of the scoping person's spouse by a previous union.
     */
    Stepson: {
        display: "stepson",
        code: "STPSON",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * TWIN: The scoper and player were carried in the same womb and shared common biological parents.
     */
    Twin: {
        display: "twin",
        code: "TWIN",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * TWINBRO: The scoper was carried in the same womb as the male player and shares common biological parents.
     */
    TwinBrother: {
        display: "twin brother",
        code: "TWINBRO",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * TWINSIS: The scoper was carried in the same womb as the female player and shares common biological parents.
     */
    TwinSister: {
        display: "twin sister",
        code: "TWINSIS",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * Code: U
     */
    Unknown: {
        display: "Unknown",
        code: "U",
        system: "http://hl7.org/fhir/v2/0131",
    },
    /**
     * UNCLE: The player of the role is a brother of the scoping person's mother or father.
     */
    Uncle: {
        display: "uncle",
        code: "UNCLE",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
    /**
     * WIFE: The player of the role is a woman joined to a man (scoping person) in marriage.
     */
    Wife: {
        display: "wife",
        code: "WIFE",
        system: "http://hl7.org/fhir/v3/RoleCode",
    },
};
//# sourceMappingURL=data:application/json;base64,