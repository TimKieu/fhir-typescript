// <auto-generated/>
// Contents of: hl7.fhir.r3.core version: 3.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/assert-operator-codes|3.0.2
/**
 * The type of operator to use for assertion.
 */
export const AssertOperatorCodes = {
    /**
     * contains: Compare value string contains a known value.
     */
    Contains: "contains",
    /**
     * empty: Compare value is empty.
     */
    Empty: "empty",
    /**
     * equals: Default value. Equals comparison.
     */
    Equals: "equals",
    /**
     * eval: Evaluate the fluentpath expression as a boolean condition.
     */
    Evaluate: "eval",
    /**
     * greaterThan: Compare value to be greater than a known value.
     */
    GreaterThan: "greaterThan",
    /**
     * in: Compare value within a known set of values.
     */
    In: "in",
    /**
     * lessThan: Compare value to be less than a known value.
     */
    LessThan: "lessThan",
    /**
     * notContains: Compare value string does not contain a known value.
     */
    NotContains: "notContains",
    /**
     * notEmpty: Compare value is not empty.
     */
    NotEmpty: "notEmpty",
    /**
     * notEquals: Not equals comparison.
     */
    NotEquals: "notEquals",
    /**
     * notIn: Compare value not within a known set of values.
     */
    NotIn: "notIn",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXNzZXJ0T3BlcmF0b3JDb2Rlcy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvQXNzZXJ0T3BlcmF0b3JDb2Rlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQywwRUFBMEU7QUFFMUU7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxtQkFBbUIsR0FBRztJQUNqQzs7T0FFRztJQUNILFFBQVEsRUFBRSxVQUFVO0lBQ3BCOztPQUVHO0lBQ0gsS0FBSyxFQUFFLE9BQU87SUFDZDs7T0FFRztJQUNILE1BQU0sRUFBRSxRQUFRO0lBQ2hCOztPQUVHO0lBQ0gsUUFBUSxFQUFFLE1BQU07SUFDaEI7O09BRUc7SUFDSCxXQUFXLEVBQUUsYUFBYTtJQUMxQjs7T0FFRztJQUNILEVBQUUsRUFBRSxJQUFJO0lBQ1I7O09BRUc7SUFDSCxRQUFRLEVBQUUsVUFBVTtJQUNwQjs7T0FFRztJQUNILFdBQVcsRUFBRSxhQUFhO0lBQzFCOztPQUVHO0lBQ0gsUUFBUSxFQUFFLFVBQVU7SUFDcEI7O09BRUc7SUFDSCxTQUFTLEVBQUUsV0FBVztJQUN0Qjs7T0FFRztJQUNILEtBQUssRUFBRSxPQUFPO0NBQ04sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yMy5jb3JlIHZlcnNpb246IDMuMC4yXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9hc3NlcnQtb3BlcmF0b3ItY29kZXN8My4wLjJcclxuXHJcbi8qKlxyXG4gKiBUaGUgdHlwZSBvZiBvcGVyYXRvciB0byB1c2UgZm9yIGFzc2VydGlvbi5cclxuICovXHJcbmV4cG9ydCBjb25zdCBBc3NlcnRPcGVyYXRvckNvZGVzID0ge1xyXG4gIC8qKlxyXG4gICAqIGNvbnRhaW5zOiBDb21wYXJlIHZhbHVlIHN0cmluZyBjb250YWlucyBhIGtub3duIHZhbHVlLlxyXG4gICAqL1xyXG4gIENvbnRhaW5zOiBcImNvbnRhaW5zXCIsXHJcbiAgLyoqXHJcbiAgICogZW1wdHk6IENvbXBhcmUgdmFsdWUgaXMgZW1wdHkuXHJcbiAgICovXHJcbiAgRW1wdHk6IFwiZW1wdHlcIixcclxuICAvKipcclxuICAgKiBlcXVhbHM6IERlZmF1bHQgdmFsdWUuIEVxdWFscyBjb21wYXJpc29uLlxyXG4gICAqL1xyXG4gIEVxdWFsczogXCJlcXVhbHNcIixcclxuICAvKipcclxuICAgKiBldmFsOiBFdmFsdWF0ZSB0aGUgZmx1ZW50cGF0aCBleHByZXNzaW9uIGFzIGEgYm9vbGVhbiBjb25kaXRpb24uXHJcbiAgICovXHJcbiAgRXZhbHVhdGU6IFwiZXZhbFwiLFxyXG4gIC8qKlxyXG4gICAqIGdyZWF0ZXJUaGFuOiBDb21wYXJlIHZhbHVlIHRvIGJlIGdyZWF0ZXIgdGhhbiBhIGtub3duIHZhbHVlLlxyXG4gICAqL1xyXG4gIEdyZWF0ZXJUaGFuOiBcImdyZWF0ZXJUaGFuXCIsXHJcbiAgLyoqXHJcbiAgICogaW46IENvbXBhcmUgdmFsdWUgd2l0aGluIGEga25vd24gc2V0IG9mIHZhbHVlcy5cclxuICAgKi9cclxuICBJbjogXCJpblwiLFxyXG4gIC8qKlxyXG4gICAqIGxlc3NUaGFuOiBDb21wYXJlIHZhbHVlIHRvIGJlIGxlc3MgdGhhbiBhIGtub3duIHZhbHVlLlxyXG4gICAqL1xyXG4gIExlc3NUaGFuOiBcImxlc3NUaGFuXCIsXHJcbiAgLyoqXHJcbiAgICogbm90Q29udGFpbnM6IENvbXBhcmUgdmFsdWUgc3RyaW5nIGRvZXMgbm90IGNvbnRhaW4gYSBrbm93biB2YWx1ZS5cclxuICAgKi9cclxuICBOb3RDb250YWluczogXCJub3RDb250YWluc1wiLFxyXG4gIC8qKlxyXG4gICAqIG5vdEVtcHR5OiBDb21wYXJlIHZhbHVlIGlzIG5vdCBlbXB0eS5cclxuICAgKi9cclxuICBOb3RFbXB0eTogXCJub3RFbXB0eVwiLFxyXG4gIC8qKlxyXG4gICAqIG5vdEVxdWFsczogTm90IGVxdWFscyBjb21wYXJpc29uLlxyXG4gICAqL1xyXG4gIE5vdEVxdWFsczogXCJub3RFcXVhbHNcIixcclxuICAvKipcclxuICAgKiBub3RJbjogQ29tcGFyZSB2YWx1ZSBub3Qgd2l0aGluIGEga25vd24gc2V0IG9mIHZhbHVlcy5cclxuICAgKi9cclxuICBOb3RJbjogXCJub3RJblwiLFxyXG59IGFzIGNvbnN0O1xyXG5cclxuLyoqXHJcbiAqIFRoZSB0eXBlIG9mIG9wZXJhdG9yIHRvIHVzZSBmb3IgYXNzZXJ0aW9uLlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgQXNzZXJ0T3BlcmF0b3JDb2RlVHlwZSA9IHR5cGVvZiBBc3NlcnRPcGVyYXRvckNvZGVzW2tleW9mIHR5cGVvZiBBc3NlcnRPcGVyYXRvckNvZGVzXTtcclxuIl19