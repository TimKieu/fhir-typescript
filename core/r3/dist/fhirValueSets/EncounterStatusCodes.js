// <auto-generated/>
// Contents of: hl7.fhir.r3.core version: 3.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/encounter-status|3.0.2
/**
 * Current state of the encounter
 */
export const EncounterStatusCodes = {
    /**
     * arrived: The Patient is present for the encounter, however is not currently meeting with a practitioner.
     */
    Arrived: "arrived",
    /**
     * cancelled: The Encounter has ended before it has begun.
     */
    Cancelled: "cancelled",
    /**
     * entered-in-error: This instance should not have been part of this patient's medical record.
     */
    EnteredInError: "entered-in-error",
    /**
     * finished: The Encounter has ended.
     */
    Finished: "finished",
    /**
     * in-progress: The Encounter has begun and the patient is present / the practitioner and the patient are meeting.
     */
    InProgress: "in-progress",
    /**
     * onleave: The Encounter has begun, but the patient is temporarily on leave.
     */
    OnLeave: "onleave",
    /**
     * planned: The Encounter has not yet started.
     */
    Planned: "planned",
    /**
     * triaged: The patient has been assessed for the priority of their treatment based on the severity of their condition.
     */
    Triaged: "triaged",
    /**
     * unknown: The encounter status is unknown. Note that "unknown" is a value of last resort and every attempt should be made to provide a meaningful value other than "unknown".
     */
    Unknown: "unknown",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRW5jb3VudGVyU3RhdHVzQ29kZXMuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL0VuY291bnRlclN0YXR1c0NvZGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQiwrQ0FBK0M7QUFDL0Msa0NBQWtDO0FBQ2xDLHFFQUFxRTtBQUVyRTs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLG9CQUFvQixHQUFHO0lBQ2xDOztPQUVHO0lBQ0gsT0FBTyxFQUFFLFNBQVM7SUFDbEI7O09BRUc7SUFDSCxTQUFTLEVBQUUsV0FBVztJQUN0Qjs7T0FFRztJQUNILGNBQWMsRUFBRSxrQkFBa0I7SUFDbEM7O09BRUc7SUFDSCxRQUFRLEVBQUUsVUFBVTtJQUNwQjs7T0FFRztJQUNILFVBQVUsRUFBRSxhQUFhO0lBQ3pCOztPQUVHO0lBQ0gsT0FBTyxFQUFFLFNBQVM7SUFDbEI7O09BRUc7SUFDSCxPQUFPLEVBQUUsU0FBUztJQUNsQjs7T0FFRztJQUNILE9BQU8sRUFBRSxTQUFTO0lBQ2xCOztPQUVHO0lBQ0gsT0FBTyxFQUFFLFNBQVM7Q0FDVixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnIzLmNvcmUgdmVyc2lvbjogMy4wLjJcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L2VuY291bnRlci1zdGF0dXN8My4wLjJcclxuXHJcbi8qKlxyXG4gKiBDdXJyZW50IHN0YXRlIG9mIHRoZSBlbmNvdW50ZXJcclxuICovXHJcbmV4cG9ydCBjb25zdCBFbmNvdW50ZXJTdGF0dXNDb2RlcyA9IHtcclxuICAvKipcclxuICAgKiBhcnJpdmVkOiBUaGUgUGF0aWVudCBpcyBwcmVzZW50IGZvciB0aGUgZW5jb3VudGVyLCBob3dldmVyIGlzIG5vdCBjdXJyZW50bHkgbWVldGluZyB3aXRoIGEgcHJhY3RpdGlvbmVyLlxyXG4gICAqL1xyXG4gIEFycml2ZWQ6IFwiYXJyaXZlZFwiLFxyXG4gIC8qKlxyXG4gICAqIGNhbmNlbGxlZDogVGhlIEVuY291bnRlciBoYXMgZW5kZWQgYmVmb3JlIGl0IGhhcyBiZWd1bi5cclxuICAgKi9cclxuICBDYW5jZWxsZWQ6IFwiY2FuY2VsbGVkXCIsXHJcbiAgLyoqXHJcbiAgICogZW50ZXJlZC1pbi1lcnJvcjogVGhpcyBpbnN0YW5jZSBzaG91bGQgbm90IGhhdmUgYmVlbiBwYXJ0IG9mIHRoaXMgcGF0aWVudCdzIG1lZGljYWwgcmVjb3JkLlxyXG4gICAqL1xyXG4gIEVudGVyZWRJbkVycm9yOiBcImVudGVyZWQtaW4tZXJyb3JcIixcclxuICAvKipcclxuICAgKiBmaW5pc2hlZDogVGhlIEVuY291bnRlciBoYXMgZW5kZWQuXHJcbiAgICovXHJcbiAgRmluaXNoZWQ6IFwiZmluaXNoZWRcIixcclxuICAvKipcclxuICAgKiBpbi1wcm9ncmVzczogVGhlIEVuY291bnRlciBoYXMgYmVndW4gYW5kIHRoZSBwYXRpZW50IGlzIHByZXNlbnQgLyB0aGUgcHJhY3RpdGlvbmVyIGFuZCB0aGUgcGF0aWVudCBhcmUgbWVldGluZy5cclxuICAgKi9cclxuICBJblByb2dyZXNzOiBcImluLXByb2dyZXNzXCIsXHJcbiAgLyoqXHJcbiAgICogb25sZWF2ZTogVGhlIEVuY291bnRlciBoYXMgYmVndW4sIGJ1dCB0aGUgcGF0aWVudCBpcyB0ZW1wb3JhcmlseSBvbiBsZWF2ZS5cclxuICAgKi9cclxuICBPbkxlYXZlOiBcIm9ubGVhdmVcIixcclxuICAvKipcclxuICAgKiBwbGFubmVkOiBUaGUgRW5jb3VudGVyIGhhcyBub3QgeWV0IHN0YXJ0ZWQuXHJcbiAgICovXHJcbiAgUGxhbm5lZDogXCJwbGFubmVkXCIsXHJcbiAgLyoqXHJcbiAgICogdHJpYWdlZDogVGhlIHBhdGllbnQgaGFzIGJlZW4gYXNzZXNzZWQgZm9yIHRoZSBwcmlvcml0eSBvZiB0aGVpciB0cmVhdG1lbnQgYmFzZWQgb24gdGhlIHNldmVyaXR5IG9mIHRoZWlyIGNvbmRpdGlvbi5cclxuICAgKi9cclxuICBUcmlhZ2VkOiBcInRyaWFnZWRcIixcclxuICAvKipcclxuICAgKiB1bmtub3duOiBUaGUgZW5jb3VudGVyIHN0YXR1cyBpcyB1bmtub3duLiBOb3RlIHRoYXQgXCJ1bmtub3duXCIgaXMgYSB2YWx1ZSBvZiBsYXN0IHJlc29ydCBhbmQgZXZlcnkgYXR0ZW1wdCBzaG91bGQgYmUgbWFkZSB0byBwcm92aWRlIGEgbWVhbmluZ2Z1bCB2YWx1ZSBvdGhlciB0aGFuIFwidW5rbm93blwiLlxyXG4gICAqL1xyXG4gIFVua25vd246IFwidW5rbm93blwiLFxyXG59IGFzIGNvbnN0O1xyXG5cclxuLyoqXHJcbiAqIEN1cnJlbnQgc3RhdGUgb2YgdGhlIGVuY291bnRlclxyXG4gKi9cclxuZXhwb3J0IHR5cGUgRW5jb3VudGVyU3RhdHVzQ29kZVR5cGUgPSB0eXBlb2YgRW5jb3VudGVyU3RhdHVzQ29kZXNba2V5b2YgdHlwZW9mIEVuY291bnRlclN0YXR1c0NvZGVzXTtcclxuIl19