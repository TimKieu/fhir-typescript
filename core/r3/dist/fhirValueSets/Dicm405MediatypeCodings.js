// <auto-generated/>
// Contents of: hl7.fhir.r3.core version: 3.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/dicm-405-mediatype|20100826
/**
 * Media Type Code
 */
export const Dicm405MediatypeCodings = {
    /**
     * 110010: Film type of output
     */
    Film: {
        display: "Film",
        code: "110010",
        system: "http://dicom.nema.org/resources/ontology/DCM",
    },
    /**
     * 110030: A device that connects using the USB hard drive interface. These may be USB-Sticks, portable hard drives, and other technologies
     */
    USBDiskEmulation: {
        display: "USB Disk Emulation",
        code: "110030",
        system: "http://dicom.nema.org/resources/ontology/DCM",
    },
    /**
     * 110031: Email and email attachments used as a media for data transport
     */
    Email: {
        display: "Email",
        code: "110031",
        system: "http://dicom.nema.org/resources/ontology/DCM",
    },
    /**
     * 110032: CD-R, CD-ROM, and CD-RW media used for data transport
     */
    CD: {
        display: "CD",
        code: "110032",
        system: "http://dicom.nema.org/resources/ontology/DCM",
    },
    /**
     * 110033: DVD, DVD-RAM, and other DVD formatted media used for data transport
     */
    DVD: {
        display: "DVD",
        code: "110033",
        system: "http://dicom.nema.org/resources/ontology/DCM",
    },
    /**
     * 110034: Media that comply with the Compact Flash standard
     */
    CompactFlash: {
        display: "Compact Flash",
        code: "110034",
        system: "http://dicom.nema.org/resources/ontology/DCM",
    },
    /**
     * 110035: Media that comply with the Multi-media Card standard
     */
    MultiMediaCard: {
        display: "Multi-media Card",
        code: "110035",
        system: "http://dicom.nema.org/resources/ontology/DCM",
    },
    /**
     * 110036: Media that comply with the Secure Digital Card standard
     */
    SecureDigitalCard: {
        display: "Secure Digital Card",
        code: "110036",
        system: "http://dicom.nema.org/resources/ontology/DCM",
    },
    /**
     * 110037: URI Identifier for network or other resource, see RFC 3968
     */
    URI: {
        display: "URI",
        code: "110037",
        system: "http://dicom.nema.org/resources/ontology/DCM",
    },
    /**
     * 110038: Any paper or similar document
     */
    PaperDocument: {
        display: "Paper Document",
        code: "110038",
        system: "http://dicom.nema.org/resources/ontology/DCM",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGljbTQwNU1lZGlhdHlwZUNvZGluZ3MuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL0RpY200MDVNZWRpYXR5cGVDb2RpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQiwrQ0FBK0M7QUFDL0Msa0NBQWtDO0FBQ2xDLDBFQUEwRTtBQWtEMUU7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSx1QkFBdUIsR0FBOEI7SUFDaEU7O09BRUc7SUFDSCxJQUFJLEVBQUU7UUFDSixPQUFPLEVBQUUsTUFBTTtRQUNmLElBQUksRUFBRSxRQUFRO1FBQ2QsTUFBTSxFQUFFLDhDQUE4QztLQUN2RDtJQUNEOztPQUVHO0lBQ0gsZ0JBQWdCLEVBQUU7UUFDaEIsT0FBTyxFQUFFLG9CQUFvQjtRQUM3QixJQUFJLEVBQUUsUUFBUTtRQUNkLE1BQU0sRUFBRSw4Q0FBOEM7S0FDdkQ7SUFDRDs7T0FFRztJQUNILEtBQUssRUFBRTtRQUNMLE9BQU8sRUFBRSxPQUFPO1FBQ2hCLElBQUksRUFBRSxRQUFRO1FBQ2QsTUFBTSxFQUFFLDhDQUE4QztLQUN2RDtJQUNEOztPQUVHO0lBQ0gsRUFBRSxFQUFFO1FBQ0YsT0FBTyxFQUFFLElBQUk7UUFDYixJQUFJLEVBQUUsUUFBUTtRQUNkLE1BQU0sRUFBRSw4Q0FBOEM7S0FDdkQ7SUFDRDs7T0FFRztJQUNILEdBQUcsRUFBRTtRQUNILE9BQU8sRUFBRSxLQUFLO1FBQ2QsSUFBSSxFQUFFLFFBQVE7UUFDZCxNQUFNLEVBQUUsOENBQThDO0tBQ3ZEO0lBQ0Q7O09BRUc7SUFDSCxZQUFZLEVBQUU7UUFDWixPQUFPLEVBQUUsZUFBZTtRQUN4QixJQUFJLEVBQUUsUUFBUTtRQUNkLE1BQU0sRUFBRSw4Q0FBOEM7S0FDdkQ7SUFDRDs7T0FFRztJQUNILGNBQWMsRUFBRTtRQUNkLE9BQU8sRUFBRSxrQkFBa0I7UUFDM0IsSUFBSSxFQUFFLFFBQVE7UUFDZCxNQUFNLEVBQUUsOENBQThDO0tBQ3ZEO0lBQ0Q7O09BRUc7SUFDSCxpQkFBaUIsRUFBRTtRQUNqQixPQUFPLEVBQUUscUJBQXFCO1FBQzlCLElBQUksRUFBRSxRQUFRO1FBQ2QsTUFBTSxFQUFFLDhDQUE4QztLQUN2RDtJQUNEOztPQUVHO0lBQ0gsR0FBRyxFQUFFO1FBQ0gsT0FBTyxFQUFFLEtBQUs7UUFDZCxJQUFJLEVBQUUsUUFBUTtRQUNkLE1BQU0sRUFBRSw4Q0FBOEM7S0FDdkQ7SUFDRDs7T0FFRztJQUNILGFBQWEsRUFBRTtRQUNiLE9BQU8sRUFBRSxnQkFBZ0I7UUFDekIsSUFBSSxFQUFFLFFBQVE7UUFDZCxNQUFNLEVBQUUsOENBQThDO0tBQ3ZEO0NBQ08sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yMy5jb3JlIHZlcnNpb246IDMuMC4yXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9kaWNtLTQwNS1tZWRpYXR5cGV8MjAxMDA4MjZcclxuXHJcbmltcG9ydCB7IENvZGluZ0FyZ3MgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiBNZWRpYSBUeXBlIENvZGVcclxuICovXHJcbmV4cG9ydCB0eXBlIERpY200MDVNZWRpYXR5cGVDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIDExMDAxMDogRmlsbSB0eXBlIG9mIG91dHB1dFxyXG4gICAqL1xyXG4gIEZpbG06IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogMTEwMDMwOiBBIGRldmljZSB0aGF0IGNvbm5lY3RzIHVzaW5nIHRoZSBVU0IgaGFyZCBkcml2ZSBpbnRlcmZhY2UuIFRoZXNlIG1heSBiZSBVU0ItU3RpY2tzLCBwb3J0YWJsZSBoYXJkIGRyaXZlcywgYW5kIG90aGVyIHRlY2hub2xvZ2llc1xyXG4gICAqL1xyXG4gIFVTQkRpc2tFbXVsYXRpb246IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogMTEwMDMxOiBFbWFpbCBhbmQgZW1haWwgYXR0YWNobWVudHMgdXNlZCBhcyBhIG1lZGlhIGZvciBkYXRhIHRyYW5zcG9ydFxyXG4gICAqL1xyXG4gIEVtYWlsOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIDExMDAzMjogQ0QtUiwgQ0QtUk9NLCBhbmQgQ0QtUlcgbWVkaWEgdXNlZCBmb3IgZGF0YSB0cmFuc3BvcnRcclxuICAgKi9cclxuICBDRDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiAxMTAwMzM6IERWRCwgRFZELVJBTSwgYW5kIG90aGVyIERWRCBmb3JtYXR0ZWQgbWVkaWEgdXNlZCBmb3IgZGF0YSB0cmFuc3BvcnRcclxuICAgKi9cclxuICBEVkQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogMTEwMDM0OiBNZWRpYSB0aGF0IGNvbXBseSB3aXRoIHRoZSBDb21wYWN0IEZsYXNoIHN0YW5kYXJkXHJcbiAgICovXHJcbiAgQ29tcGFjdEZsYXNoOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIDExMDAzNTogTWVkaWEgdGhhdCBjb21wbHkgd2l0aCB0aGUgTXVsdGktbWVkaWEgQ2FyZCBzdGFuZGFyZFxyXG4gICAqL1xyXG4gIE11bHRpTWVkaWFDYXJkOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIDExMDAzNjogTWVkaWEgdGhhdCBjb21wbHkgd2l0aCB0aGUgU2VjdXJlIERpZ2l0YWwgQ2FyZCBzdGFuZGFyZFxyXG4gICAqL1xyXG4gIFNlY3VyZURpZ2l0YWxDYXJkOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIDExMDAzNzogVVJJIElkZW50aWZpZXIgZm9yIG5ldHdvcmsgb3Igb3RoZXIgcmVzb3VyY2UsIHNlZSBSRkMgMzk2OFxyXG4gICAqL1xyXG4gIFVSSTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiAxMTAwMzg6IEFueSBwYXBlciBvciBzaW1pbGFyIGRvY3VtZW50XHJcbiAgICovXHJcbiAgUGFwZXJEb2N1bWVudDogQ29kaW5nQXJncztcclxufVxyXG5cclxuLyoqXHJcbiAqIE1lZGlhIFR5cGUgQ29kZVxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IERpY200MDVNZWRpYXR5cGVDb2RpbmdzOkRpY200MDVNZWRpYXR5cGVDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIDExMDAxMDogRmlsbSB0eXBlIG9mIG91dHB1dFxyXG4gICAqL1xyXG4gIEZpbG06IHtcclxuICAgIGRpc3BsYXk6IFwiRmlsbVwiLFxyXG4gICAgY29kZTogXCIxMTAwMTBcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vZGljb20ubmVtYS5vcmcvcmVzb3VyY2VzL29udG9sb2d5L0RDTVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogMTEwMDMwOiBBIGRldmljZSB0aGF0IGNvbm5lY3RzIHVzaW5nIHRoZSBVU0IgaGFyZCBkcml2ZSBpbnRlcmZhY2UuIFRoZXNlIG1heSBiZSBVU0ItU3RpY2tzLCBwb3J0YWJsZSBoYXJkIGRyaXZlcywgYW5kIG90aGVyIHRlY2hub2xvZ2llc1xyXG4gICAqL1xyXG4gIFVTQkRpc2tFbXVsYXRpb246IHtcclxuICAgIGRpc3BsYXk6IFwiVVNCIERpc2sgRW11bGF0aW9uXCIsXHJcbiAgICBjb2RlOiBcIjExMDAzMFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9kaWNvbS5uZW1hLm9yZy9yZXNvdXJjZXMvb250b2xvZ3kvRENNXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiAxMTAwMzE6IEVtYWlsIGFuZCBlbWFpbCBhdHRhY2htZW50cyB1c2VkIGFzIGEgbWVkaWEgZm9yIGRhdGEgdHJhbnNwb3J0XHJcbiAgICovXHJcbiAgRW1haWw6IHtcclxuICAgIGRpc3BsYXk6IFwiRW1haWxcIixcclxuICAgIGNvZGU6IFwiMTEwMDMxXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2RpY29tLm5lbWEub3JnL3Jlc291cmNlcy9vbnRvbG9neS9EQ01cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIDExMDAzMjogQ0QtUiwgQ0QtUk9NLCBhbmQgQ0QtUlcgbWVkaWEgdXNlZCBmb3IgZGF0YSB0cmFuc3BvcnRcclxuICAgKi9cclxuICBDRDoge1xyXG4gICAgZGlzcGxheTogXCJDRFwiLFxyXG4gICAgY29kZTogXCIxMTAwMzJcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vZGljb20ubmVtYS5vcmcvcmVzb3VyY2VzL29udG9sb2d5L0RDTVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogMTEwMDMzOiBEVkQsIERWRC1SQU0sIGFuZCBvdGhlciBEVkQgZm9ybWF0dGVkIG1lZGlhIHVzZWQgZm9yIGRhdGEgdHJhbnNwb3J0XHJcbiAgICovXHJcbiAgRFZEOiB7XHJcbiAgICBkaXNwbGF5OiBcIkRWRFwiLFxyXG4gICAgY29kZTogXCIxMTAwMzNcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vZGljb20ubmVtYS5vcmcvcmVzb3VyY2VzL29udG9sb2d5L0RDTVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogMTEwMDM0OiBNZWRpYSB0aGF0IGNvbXBseSB3aXRoIHRoZSBDb21wYWN0IEZsYXNoIHN0YW5kYXJkXHJcbiAgICovXHJcbiAgQ29tcGFjdEZsYXNoOiB7XHJcbiAgICBkaXNwbGF5OiBcIkNvbXBhY3QgRmxhc2hcIixcclxuICAgIGNvZGU6IFwiMTEwMDM0XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2RpY29tLm5lbWEub3JnL3Jlc291cmNlcy9vbnRvbG9neS9EQ01cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIDExMDAzNTogTWVkaWEgdGhhdCBjb21wbHkgd2l0aCB0aGUgTXVsdGktbWVkaWEgQ2FyZCBzdGFuZGFyZFxyXG4gICAqL1xyXG4gIE11bHRpTWVkaWFDYXJkOiB7XHJcbiAgICBkaXNwbGF5OiBcIk11bHRpLW1lZGlhIENhcmRcIixcclxuICAgIGNvZGU6IFwiMTEwMDM1XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2RpY29tLm5lbWEub3JnL3Jlc291cmNlcy9vbnRvbG9neS9EQ01cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIDExMDAzNjogTWVkaWEgdGhhdCBjb21wbHkgd2l0aCB0aGUgU2VjdXJlIERpZ2l0YWwgQ2FyZCBzdGFuZGFyZFxyXG4gICAqL1xyXG4gIFNlY3VyZURpZ2l0YWxDYXJkOiB7XHJcbiAgICBkaXNwbGF5OiBcIlNlY3VyZSBEaWdpdGFsIENhcmRcIixcclxuICAgIGNvZGU6IFwiMTEwMDM2XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2RpY29tLm5lbWEub3JnL3Jlc291cmNlcy9vbnRvbG9neS9EQ01cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIDExMDAzNzogVVJJIElkZW50aWZpZXIgZm9yIG5ldHdvcmsgb3Igb3RoZXIgcmVzb3VyY2UsIHNlZSBSRkMgMzk2OFxyXG4gICAqL1xyXG4gIFVSSToge1xyXG4gICAgZGlzcGxheTogXCJVUklcIixcclxuICAgIGNvZGU6IFwiMTEwMDM3XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2RpY29tLm5lbWEub3JnL3Jlc291cmNlcy9vbnRvbG9neS9EQ01cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIDExMDAzODogQW55IHBhcGVyIG9yIHNpbWlsYXIgZG9jdW1lbnRcclxuICAgKi9cclxuICBQYXBlckRvY3VtZW50OiB7XHJcbiAgICBkaXNwbGF5OiBcIlBhcGVyIERvY3VtZW50XCIsXHJcbiAgICBjb2RlOiBcIjExMDAzOFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9kaWNvbS5uZW1hLm9yZy9yZXNvdXJjZXMvb250b2xvZ3kvRENNXCIsXHJcbiAgfSxcclxufSBhcyBjb25zdDtcclxuIl19