// <auto-generated/>
// Contents of: hl7.fhir.r3.core version: 3.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/service-uscls|3.0.2
/**
 * This value set includes a smattering of USCLS codes.
 */
export const ServiceUsclsCodings = {
    /**
     * 1101: Exam, comp, primary
     */
    ExamCompPrimary: {
        display: "Exam, comp, primary",
        code: "1101",
        system: "http://hl7.org/fhir/ex-USCLS",
    },
    /**
     * 1102: Exam, comp, mixed
     */
    ExamCompMixed: {
        display: "Exam, comp, mixed",
        code: "1102",
        system: "http://hl7.org/fhir/ex-USCLS",
    },
    /**
     * 1103: Exam, comp, permanent
     */
    ExamCompPermanent: {
        display: "Exam, comp, permanent",
        code: "1103",
        system: "http://hl7.org/fhir/ex-USCLS",
    },
    /**
     * 11101: Polishing, 1 unit
     */
    Polishing1Unit: {
        display: "Polishing, 1 unit",
        code: "11101",
        system: "http://hl7.org/fhir/ex-USCLS",
    },
    /**
     * 11102: Polishing, 2 unit
     */
    Polishing2Unit: {
        display: "Polishing, 2 unit",
        code: "11102",
        system: "http://hl7.org/fhir/ex-USCLS",
    },
    /**
     * 11103: Polishing, 3 unit
     */
    Polishing3Unit: {
        display: "Polishing, 3 unit",
        code: "11103",
        system: "http://hl7.org/fhir/ex-USCLS",
    },
    /**
     * 11104: Polishing, 4 unit
     */
    Polishing4Unit: {
        display: "Polishing, 4 unit",
        code: "11104",
        system: "http://hl7.org/fhir/ex-USCLS",
    },
    /**
     * 1201: Exam, recall
     */
    ExamRecall: {
        display: "Exam, recall",
        code: "1201",
        system: "http://hl7.org/fhir/ex-USCLS",
    },
    /**
     * 1205: Exam, emergency
     */
    ExamEmergency: {
        display: "Exam, emergency",
        code: "1205",
        system: "http://hl7.org/fhir/ex-USCLS",
    },
    /**
     * 2101: Radiograph, series (12)
     */
    RadiographSeries12: {
        display: "Radiograph, series (12)",
        code: "2101",
        system: "http://hl7.org/fhir/ex-USCLS",
    },
    /**
     * 2102: Radiograph, series (16)
     */
    RadiographSeries16: {
        display: "Radiograph, series (16)",
        code: "2102",
        system: "http://hl7.org/fhir/ex-USCLS",
    },
    /**
     * 21211: Amalgam, 1 surface
     */
    Amalgam1Surface: {
        display: "Amalgam, 1 surface",
        code: "21211",
        system: "http://hl7.org/fhir/ex-USCLS",
    },
    /**
     * 21212: Amalgam, 2 surface
     */
    Amalgam2Surface: {
        display: "Amalgam, 2 surface",
        code: "21212",
        system: "http://hl7.org/fhir/ex-USCLS",
    },
    /**
     * 2141: Radiograph, bytewing
     */
    RadiographBytewing: {
        display: "Radiograph, bytewing",
        code: "2141",
        system: "http://hl7.org/fhir/ex-USCLS",
    },
    /**
     * 2601: Radiograph, panoramic
     */
    RadiographPanoramic: {
        display: "Radiograph, panoramic",
        code: "2601",
        system: "http://hl7.org/fhir/ex-USCLS",
    },
    /**
     * 27211: Crown, PFM
     */
    CrownPFM: {
        display: "Crown, PFM",
        code: "27211",
        system: "http://hl7.org/fhir/ex-USCLS",
    },
    /**
     * 67211: Maryland Bridge
     */
    MarylandBridge: {
        display: "Maryland Bridge",
        code: "67211",
        system: "http://hl7.org/fhir/ex-USCLS",
    },
    /**
     * 99111: Lab, commercial
     */
    LabCommercial: {
        display: "Lab, commercial",
        code: "99111",
        system: "http://hl7.org/fhir/ex-USCLS",
    },
    /**
     * 99333: Lab, in office
     */
    LabInOffice: {
        display: "Lab, in office",
        code: "99333",
        system: "http://hl7.org/fhir/ex-USCLS",
    },
    /**
     * 99555: Expense
     */
    Expense: {
        display: "Expense",
        code: "99555",
        system: "http://hl7.org/fhir/ex-USCLS",
    },
};
//# sourceMappingURL=data:application/json;base64,