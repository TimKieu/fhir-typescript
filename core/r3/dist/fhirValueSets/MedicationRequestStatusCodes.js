// <auto-generated/>
// Contents of: hl7.fhir.r3.core version: 3.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/medication-request-status|3.0.2
/**
 * A coded concept specifying the state of the prescribing event. Describes the lifecycle of the prescription
 */
export const MedicationRequestStatusCodes = {
    /**
     * active: The prescription is 'actionable', but not all actions that are implied by it have occurred yet.
     */
    Active: "active",
    /**
     * cancelled: The prescription has been withdrawn.
     */
    Cancelled: "cancelled",
    /**
     * completed: All actions that are implied by the prescription have occurred.
     */
    Completed: "completed",
    /**
     * draft: The prescription is not yet 'actionable', i.e. it is a work in progress, requires sign-off or verification, and needs to be run through decision support process.
     */
    Draft: "draft",
    /**
     * entered-in-error: The prescription was entered in error.
     */
    EnteredInError: "entered-in-error",
    /**
     * on-hold: Actions implied by the prescription are to be temporarily halted, but are expected to continue later.  May also be called "suspended".
     */
    OnHold: "on-hold",
    /**
     * stopped: Actions implied by the prescription are to be permanently halted, before all of them occurred.
     */
    Stopped: "stopped",
    /**
     * unknown: The authoring system does not know which of the status values currently applies for this request
     */
    Unknown: "unknown",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWVkaWNhdGlvblJlcXVlc3RTdGF0dXNDb2Rlcy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvTWVkaWNhdGlvblJlcXVlc3RTdGF0dXNDb2Rlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyw4RUFBOEU7QUFFOUU7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSw0QkFBNEIsR0FBRztJQUMxQzs7T0FFRztJQUNILE1BQU0sRUFBRSxRQUFRO0lBQ2hCOztPQUVHO0lBQ0gsU0FBUyxFQUFFLFdBQVc7SUFDdEI7O09BRUc7SUFDSCxTQUFTLEVBQUUsV0FBVztJQUN0Qjs7T0FFRztJQUNILEtBQUssRUFBRSxPQUFPO0lBQ2Q7O09BRUc7SUFDSCxjQUFjLEVBQUUsa0JBQWtCO0lBQ2xDOztPQUVHO0lBQ0gsTUFBTSxFQUFFLFNBQVM7SUFDakI7O09BRUc7SUFDSCxPQUFPLEVBQUUsU0FBUztJQUNsQjs7T0FFRztJQUNILE9BQU8sRUFBRSxTQUFTO0NBQ1YsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yMy5jb3JlIHZlcnNpb246IDMuMC4yXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9tZWRpY2F0aW9uLXJlcXVlc3Qtc3RhdHVzfDMuMC4yXHJcblxyXG4vKipcclxuICogQSBjb2RlZCBjb25jZXB0IHNwZWNpZnlpbmcgdGhlIHN0YXRlIG9mIHRoZSBwcmVzY3JpYmluZyBldmVudC4gRGVzY3JpYmVzIHRoZSBsaWZlY3ljbGUgb2YgdGhlIHByZXNjcmlwdGlvblxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IE1lZGljYXRpb25SZXF1ZXN0U3RhdHVzQ29kZXMgPSB7XHJcbiAgLyoqXHJcbiAgICogYWN0aXZlOiBUaGUgcHJlc2NyaXB0aW9uIGlzICdhY3Rpb25hYmxlJywgYnV0IG5vdCBhbGwgYWN0aW9ucyB0aGF0IGFyZSBpbXBsaWVkIGJ5IGl0IGhhdmUgb2NjdXJyZWQgeWV0LlxyXG4gICAqL1xyXG4gIEFjdGl2ZTogXCJhY3RpdmVcIixcclxuICAvKipcclxuICAgKiBjYW5jZWxsZWQ6IFRoZSBwcmVzY3JpcHRpb24gaGFzIGJlZW4gd2l0aGRyYXduLlxyXG4gICAqL1xyXG4gIENhbmNlbGxlZDogXCJjYW5jZWxsZWRcIixcclxuICAvKipcclxuICAgKiBjb21wbGV0ZWQ6IEFsbCBhY3Rpb25zIHRoYXQgYXJlIGltcGxpZWQgYnkgdGhlIHByZXNjcmlwdGlvbiBoYXZlIG9jY3VycmVkLlxyXG4gICAqL1xyXG4gIENvbXBsZXRlZDogXCJjb21wbGV0ZWRcIixcclxuICAvKipcclxuICAgKiBkcmFmdDogVGhlIHByZXNjcmlwdGlvbiBpcyBub3QgeWV0ICdhY3Rpb25hYmxlJywgaS5lLiBpdCBpcyBhIHdvcmsgaW4gcHJvZ3Jlc3MsIHJlcXVpcmVzIHNpZ24tb2ZmIG9yIHZlcmlmaWNhdGlvbiwgYW5kIG5lZWRzIHRvIGJlIHJ1biB0aHJvdWdoIGRlY2lzaW9uIHN1cHBvcnQgcHJvY2Vzcy5cclxuICAgKi9cclxuICBEcmFmdDogXCJkcmFmdFwiLFxyXG4gIC8qKlxyXG4gICAqIGVudGVyZWQtaW4tZXJyb3I6IFRoZSBwcmVzY3JpcHRpb24gd2FzIGVudGVyZWQgaW4gZXJyb3IuXHJcbiAgICovXHJcbiAgRW50ZXJlZEluRXJyb3I6IFwiZW50ZXJlZC1pbi1lcnJvclwiLFxyXG4gIC8qKlxyXG4gICAqIG9uLWhvbGQ6IEFjdGlvbnMgaW1wbGllZCBieSB0aGUgcHJlc2NyaXB0aW9uIGFyZSB0byBiZSB0ZW1wb3JhcmlseSBoYWx0ZWQsIGJ1dCBhcmUgZXhwZWN0ZWQgdG8gY29udGludWUgbGF0ZXIuICBNYXkgYWxzbyBiZSBjYWxsZWQgXCJzdXNwZW5kZWRcIi5cclxuICAgKi9cclxuICBPbkhvbGQ6IFwib24taG9sZFwiLFxyXG4gIC8qKlxyXG4gICAqIHN0b3BwZWQ6IEFjdGlvbnMgaW1wbGllZCBieSB0aGUgcHJlc2NyaXB0aW9uIGFyZSB0byBiZSBwZXJtYW5lbnRseSBoYWx0ZWQsIGJlZm9yZSBhbGwgb2YgdGhlbSBvY2N1cnJlZC5cclxuICAgKi9cclxuICBTdG9wcGVkOiBcInN0b3BwZWRcIixcclxuICAvKipcclxuICAgKiB1bmtub3duOiBUaGUgYXV0aG9yaW5nIHN5c3RlbSBkb2VzIG5vdCBrbm93IHdoaWNoIG9mIHRoZSBzdGF0dXMgdmFsdWVzIGN1cnJlbnRseSBhcHBsaWVzIGZvciB0aGlzIHJlcXVlc3RcclxuICAgKi9cclxuICBVbmtub3duOiBcInVua25vd25cIixcclxufSBhcyBjb25zdDtcclxuXHJcbi8qKlxyXG4gKiBBIGNvZGVkIGNvbmNlcHQgc3BlY2lmeWluZyB0aGUgc3RhdGUgb2YgdGhlIHByZXNjcmliaW5nIGV2ZW50LiBEZXNjcmliZXMgdGhlIGxpZmVjeWNsZSBvZiB0aGUgcHJlc2NyaXB0aW9uXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBNZWRpY2F0aW9uUmVxdWVzdFN0YXR1c0NvZGVUeXBlID0gdHlwZW9mIE1lZGljYXRpb25SZXF1ZXN0U3RhdHVzQ29kZXNba2V5b2YgdHlwZW9mIE1lZGljYXRpb25SZXF1ZXN0U3RhdHVzQ29kZXNdO1xyXG4iXX0=