// <auto-generated/>
// Contents of: hl7.fhir.r3.core version: 3.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/device-status|3.0.2
/**
 * The availability status of the device.
 */
export const DeviceStatusCodings = {
    /**
     * active: The Device is available for use.  Note: This means for *implanted devices*  the device is implanted in the patient.
     */
    Active: {
        display: "Active",
        code: "active",
        system: "http://hl7.org/fhir/device-status",
    },
    /**
     * entered-in-error: The Device was entered in error and voided.
     */
    EnteredInError: {
        display: "Entered in Error",
        code: "entered-in-error",
        system: "http://hl7.org/fhir/device-status",
    },
    /**
     * inactive: The Device is no longer available for use (e.g. lost, expired, damaged).  Note: This means for *implanted devices*  the device has been removed from the patient.
     */
    Inactive: {
        display: "Inactive",
        code: "inactive",
        system: "http://hl7.org/fhir/device-status",
    },
    /**
     * unknown: The status of the device has not been determined.
     */
    Unknown: {
        display: "Unknown",
        code: "unknown",
        system: "http://hl7.org/fhir/device-status",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGV2aWNlU3RhdHVzQ29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvRGV2aWNlU3RhdHVzQ29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyxrRUFBa0U7QUEwQmxFOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sbUJBQW1CLEdBQTBCO0lBQ3hEOztPQUVHO0lBQ0gsTUFBTSxFQUFFO1FBQ04sT0FBTyxFQUFFLFFBQVE7UUFDakIsSUFBSSxFQUFFLFFBQVE7UUFDZCxNQUFNLEVBQUUsbUNBQW1DO0tBQzVDO0lBQ0Q7O09BRUc7SUFDSCxjQUFjLEVBQUU7UUFDZCxPQUFPLEVBQUUsa0JBQWtCO1FBQzNCLElBQUksRUFBRSxrQkFBa0I7UUFDeEIsTUFBTSxFQUFFLG1DQUFtQztLQUM1QztJQUNEOztPQUVHO0lBQ0gsUUFBUSxFQUFFO1FBQ1IsT0FBTyxFQUFFLFVBQVU7UUFDbkIsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLG1DQUFtQztLQUM1QztJQUNEOztPQUVHO0lBQ0gsT0FBTyxFQUFFO1FBQ1AsT0FBTyxFQUFFLFNBQVM7UUFDbEIsSUFBSSxFQUFFLFNBQVM7UUFDZixNQUFNLEVBQUUsbUNBQW1DO0tBQzVDO0NBQ08sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yMy5jb3JlIHZlcnNpb246IDMuMC4yXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9kZXZpY2Utc3RhdHVzfDMuMC4yXHJcblxyXG5pbXBvcnQgeyBDb2RpbmdBcmdzIH0gZnJvbSAnLi4vZmhpci9Db2RpbmcuanMnXHJcblxyXG4vKipcclxuICogVGhlIGF2YWlsYWJpbGl0eSBzdGF0dXMgb2YgdGhlIGRldmljZS5cclxuICovXHJcbmV4cG9ydCB0eXBlIERldmljZVN0YXR1c0NvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogYWN0aXZlOiBUaGUgRGV2aWNlIGlzIGF2YWlsYWJsZSBmb3IgdXNlLiAgTm90ZTogVGhpcyBtZWFucyBmb3IgKmltcGxhbnRlZCBkZXZpY2VzKiAgdGhlIGRldmljZSBpcyBpbXBsYW50ZWQgaW4gdGhlIHBhdGllbnQuXHJcbiAgICovXHJcbiAgQWN0aXZlOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIGVudGVyZWQtaW4tZXJyb3I6IFRoZSBEZXZpY2Ugd2FzIGVudGVyZWQgaW4gZXJyb3IgYW5kIHZvaWRlZC5cclxuICAgKi9cclxuICBFbnRlcmVkSW5FcnJvcjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBpbmFjdGl2ZTogVGhlIERldmljZSBpcyBubyBsb25nZXIgYXZhaWxhYmxlIGZvciB1c2UgKGUuZy4gbG9zdCwgZXhwaXJlZCwgZGFtYWdlZCkuICBOb3RlOiBUaGlzIG1lYW5zIGZvciAqaW1wbGFudGVkIGRldmljZXMqICB0aGUgZGV2aWNlIGhhcyBiZWVuIHJlbW92ZWQgZnJvbSB0aGUgcGF0aWVudC5cclxuICAgKi9cclxuICBJbmFjdGl2ZTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiB1bmtub3duOiBUaGUgc3RhdHVzIG9mIHRoZSBkZXZpY2UgaGFzIG5vdCBiZWVuIGRldGVybWluZWQuXHJcbiAgICovXHJcbiAgVW5rbm93bjogQ29kaW5nQXJncztcclxufVxyXG5cclxuLyoqXHJcbiAqIFRoZSBhdmFpbGFiaWxpdHkgc3RhdHVzIG9mIHRoZSBkZXZpY2UuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgRGV2aWNlU3RhdHVzQ29kaW5nczpEZXZpY2VTdGF0dXNDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIGFjdGl2ZTogVGhlIERldmljZSBpcyBhdmFpbGFibGUgZm9yIHVzZS4gIE5vdGU6IFRoaXMgbWVhbnMgZm9yICppbXBsYW50ZWQgZGV2aWNlcyogIHRoZSBkZXZpY2UgaXMgaW1wbGFudGVkIGluIHRoZSBwYXRpZW50LlxyXG4gICAqL1xyXG4gIEFjdGl2ZToge1xyXG4gICAgZGlzcGxheTogXCJBY3RpdmVcIixcclxuICAgIGNvZGU6IFwiYWN0aXZlXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9kZXZpY2Utc3RhdHVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBlbnRlcmVkLWluLWVycm9yOiBUaGUgRGV2aWNlIHdhcyBlbnRlcmVkIGluIGVycm9yIGFuZCB2b2lkZWQuXHJcbiAgICovXHJcbiAgRW50ZXJlZEluRXJyb3I6IHtcclxuICAgIGRpc3BsYXk6IFwiRW50ZXJlZCBpbiBFcnJvclwiLFxyXG4gICAgY29kZTogXCJlbnRlcmVkLWluLWVycm9yXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9kZXZpY2Utc3RhdHVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBpbmFjdGl2ZTogVGhlIERldmljZSBpcyBubyBsb25nZXIgYXZhaWxhYmxlIGZvciB1c2UgKGUuZy4gbG9zdCwgZXhwaXJlZCwgZGFtYWdlZCkuICBOb3RlOiBUaGlzIG1lYW5zIGZvciAqaW1wbGFudGVkIGRldmljZXMqICB0aGUgZGV2aWNlIGhhcyBiZWVuIHJlbW92ZWQgZnJvbSB0aGUgcGF0aWVudC5cclxuICAgKi9cclxuICBJbmFjdGl2ZToge1xyXG4gICAgZGlzcGxheTogXCJJbmFjdGl2ZVwiLFxyXG4gICAgY29kZTogXCJpbmFjdGl2ZVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvZGV2aWNlLXN0YXR1c1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogdW5rbm93bjogVGhlIHN0YXR1cyBvZiB0aGUgZGV2aWNlIGhhcyBub3QgYmVlbiBkZXRlcm1pbmVkLlxyXG4gICAqL1xyXG4gIFVua25vd246IHtcclxuICAgIGRpc3BsYXk6IFwiVW5rbm93blwiLFxyXG4gICAgY29kZTogXCJ1bmtub3duXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9kZXZpY2Utc3RhdHVzXCIsXHJcbiAgfSxcclxufSBhcyBjb25zdDtcclxuIl19