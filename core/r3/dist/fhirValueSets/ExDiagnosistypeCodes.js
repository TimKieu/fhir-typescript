// <auto-generated/>
// Contents of: hl7.fhir.r3.core version: 3.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/ex-diagnosistype|3.0.2
/**
 * This value set includes example Diagnosis Type codes.
 */
export const ExDiagnosistypeCodes = {
    /**
     * admitting: The diagnosis given as the reason why the patient was admitted to the hospital.
     */
    AdmittingDiagnosis: "admitting",
    /**
     * clinical: A diagnosis made on the basis of medical signs and patient-reported symptoms, rather than diagnostic tests.
     */
    ClinicalDiagnosis: "clinical",
    /**
     * differential: One of a set of the possible diagnoses that could be connected to the signs, symptoms, and lab findings.
     */
    DifferentialDiagnosis: "differential",
    /**
     * discharge: The diagnosis given when the patient is discharged from the hospital.
     */
    DischargeDiagnosis: "discharge",
    /**
     * laboratory: A diagnosis based significantly on laboratory reports or test results, rather than the physical examination of the patient.
     */
    LaboratoryDiagnosis: "laboratory",
    /**
     * nursing: A diagnosis which identifies people's responses to situations in their lives, such as a readiness to change or a willingness to accept assistance.
     */
    NursingDiagnosis: "nursing",
    /**
     * prenatal: A diagnosis determined prior to birth.
     */
    PrenatalDiagnosis: "prenatal",
    /**
     * principal: The single medical diagnosis that is most relevant to the patient's chief complaint or need for treatment.
     */
    PrincipalDiagnosis: "principal",
    /**
     * radiology: A diagnosis based primarily on the results from medical imaging studies.
     */
    RadiologyDiagnosis: "radiology",
    /**
     * remote: A diagnosis determined using telemedicine techniques.
     */
    RemoteDiagnosis: "remote",
    /**
     * retrospective: The labeling of an illness in a specific historical event using modern knowledge, methods and disease classifications.
     */
    RetrospectiveDiagnosis: "retrospective",
    /**
     * self: A diagnosis determined by the patient.
     */
    SelfDiagnosis: "self",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRXhEaWFnbm9zaXN0eXBlQ29kZXMuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL0V4RGlhZ25vc2lzdHlwZUNvZGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQiwrQ0FBK0M7QUFDL0Msa0NBQWtDO0FBQ2xDLHFFQUFxRTtBQUVyRTs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLG9CQUFvQixHQUFHO0lBQ2xDOztPQUVHO0lBQ0gsa0JBQWtCLEVBQUUsV0FBVztJQUMvQjs7T0FFRztJQUNILGlCQUFpQixFQUFFLFVBQVU7SUFDN0I7O09BRUc7SUFDSCxxQkFBcUIsRUFBRSxjQUFjO0lBQ3JDOztPQUVHO0lBQ0gsa0JBQWtCLEVBQUUsV0FBVztJQUMvQjs7T0FFRztJQUNILG1CQUFtQixFQUFFLFlBQVk7SUFDakM7O09BRUc7SUFDSCxnQkFBZ0IsRUFBRSxTQUFTO0lBQzNCOztPQUVHO0lBQ0gsaUJBQWlCLEVBQUUsVUFBVTtJQUM3Qjs7T0FFRztJQUNILGtCQUFrQixFQUFFLFdBQVc7SUFDL0I7O09BRUc7SUFDSCxrQkFBa0IsRUFBRSxXQUFXO0lBQy9COztPQUVHO0lBQ0gsZUFBZSxFQUFFLFFBQVE7SUFDekI7O09BRUc7SUFDSCxzQkFBc0IsRUFBRSxlQUFlO0lBQ3ZDOztPQUVHO0lBQ0gsYUFBYSxFQUFFLE1BQU07Q0FDYixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnIzLmNvcmUgdmVyc2lvbjogMy4wLjJcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L2V4LWRpYWdub3Npc3R5cGV8My4wLjJcclxuXHJcbi8qKlxyXG4gKiBUaGlzIHZhbHVlIHNldCBpbmNsdWRlcyBleGFtcGxlIERpYWdub3NpcyBUeXBlIGNvZGVzLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IEV4RGlhZ25vc2lzdHlwZUNvZGVzID0ge1xyXG4gIC8qKlxyXG4gICAqIGFkbWl0dGluZzogVGhlIGRpYWdub3NpcyBnaXZlbiBhcyB0aGUgcmVhc29uIHdoeSB0aGUgcGF0aWVudCB3YXMgYWRtaXR0ZWQgdG8gdGhlIGhvc3BpdGFsLlxyXG4gICAqL1xyXG4gIEFkbWl0dGluZ0RpYWdub3NpczogXCJhZG1pdHRpbmdcIixcclxuICAvKipcclxuICAgKiBjbGluaWNhbDogQSBkaWFnbm9zaXMgbWFkZSBvbiB0aGUgYmFzaXMgb2YgbWVkaWNhbCBzaWducyBhbmQgcGF0aWVudC1yZXBvcnRlZCBzeW1wdG9tcywgcmF0aGVyIHRoYW4gZGlhZ25vc3RpYyB0ZXN0cy5cclxuICAgKi9cclxuICBDbGluaWNhbERpYWdub3NpczogXCJjbGluaWNhbFwiLFxyXG4gIC8qKlxyXG4gICAqIGRpZmZlcmVudGlhbDogT25lIG9mIGEgc2V0IG9mIHRoZSBwb3NzaWJsZSBkaWFnbm9zZXMgdGhhdCBjb3VsZCBiZSBjb25uZWN0ZWQgdG8gdGhlIHNpZ25zLCBzeW1wdG9tcywgYW5kIGxhYiBmaW5kaW5ncy5cclxuICAgKi9cclxuICBEaWZmZXJlbnRpYWxEaWFnbm9zaXM6IFwiZGlmZmVyZW50aWFsXCIsXHJcbiAgLyoqXHJcbiAgICogZGlzY2hhcmdlOiBUaGUgZGlhZ25vc2lzIGdpdmVuIHdoZW4gdGhlIHBhdGllbnQgaXMgZGlzY2hhcmdlZCBmcm9tIHRoZSBob3NwaXRhbC5cclxuICAgKi9cclxuICBEaXNjaGFyZ2VEaWFnbm9zaXM6IFwiZGlzY2hhcmdlXCIsXHJcbiAgLyoqXHJcbiAgICogbGFib3JhdG9yeTogQSBkaWFnbm9zaXMgYmFzZWQgc2lnbmlmaWNhbnRseSBvbiBsYWJvcmF0b3J5IHJlcG9ydHMgb3IgdGVzdCByZXN1bHRzLCByYXRoZXIgdGhhbiB0aGUgcGh5c2ljYWwgZXhhbWluYXRpb24gb2YgdGhlIHBhdGllbnQuXHJcbiAgICovXHJcbiAgTGFib3JhdG9yeURpYWdub3NpczogXCJsYWJvcmF0b3J5XCIsXHJcbiAgLyoqXHJcbiAgICogbnVyc2luZzogQSBkaWFnbm9zaXMgd2hpY2ggaWRlbnRpZmllcyBwZW9wbGUncyByZXNwb25zZXMgdG8gc2l0dWF0aW9ucyBpbiB0aGVpciBsaXZlcywgc3VjaCBhcyBhIHJlYWRpbmVzcyB0byBjaGFuZ2Ugb3IgYSB3aWxsaW5nbmVzcyB0byBhY2NlcHQgYXNzaXN0YW5jZS5cclxuICAgKi9cclxuICBOdXJzaW5nRGlhZ25vc2lzOiBcIm51cnNpbmdcIixcclxuICAvKipcclxuICAgKiBwcmVuYXRhbDogQSBkaWFnbm9zaXMgZGV0ZXJtaW5lZCBwcmlvciB0byBiaXJ0aC5cclxuICAgKi9cclxuICBQcmVuYXRhbERpYWdub3NpczogXCJwcmVuYXRhbFwiLFxyXG4gIC8qKlxyXG4gICAqIHByaW5jaXBhbDogVGhlIHNpbmdsZSBtZWRpY2FsIGRpYWdub3NpcyB0aGF0IGlzIG1vc3QgcmVsZXZhbnQgdG8gdGhlIHBhdGllbnQncyBjaGllZiBjb21wbGFpbnQgb3IgbmVlZCBmb3IgdHJlYXRtZW50LlxyXG4gICAqL1xyXG4gIFByaW5jaXBhbERpYWdub3NpczogXCJwcmluY2lwYWxcIixcclxuICAvKipcclxuICAgKiByYWRpb2xvZ3k6IEEgZGlhZ25vc2lzIGJhc2VkIHByaW1hcmlseSBvbiB0aGUgcmVzdWx0cyBmcm9tIG1lZGljYWwgaW1hZ2luZyBzdHVkaWVzLlxyXG4gICAqL1xyXG4gIFJhZGlvbG9neURpYWdub3NpczogXCJyYWRpb2xvZ3lcIixcclxuICAvKipcclxuICAgKiByZW1vdGU6IEEgZGlhZ25vc2lzIGRldGVybWluZWQgdXNpbmcgdGVsZW1lZGljaW5lIHRlY2huaXF1ZXMuXHJcbiAgICovXHJcbiAgUmVtb3RlRGlhZ25vc2lzOiBcInJlbW90ZVwiLFxyXG4gIC8qKlxyXG4gICAqIHJldHJvc3BlY3RpdmU6IFRoZSBsYWJlbGluZyBvZiBhbiBpbGxuZXNzIGluIGEgc3BlY2lmaWMgaGlzdG9yaWNhbCBldmVudCB1c2luZyBtb2Rlcm4ga25vd2xlZGdlLCBtZXRob2RzIGFuZCBkaXNlYXNlIGNsYXNzaWZpY2F0aW9ucy5cclxuICAgKi9cclxuICBSZXRyb3NwZWN0aXZlRGlhZ25vc2lzOiBcInJldHJvc3BlY3RpdmVcIixcclxuICAvKipcclxuICAgKiBzZWxmOiBBIGRpYWdub3NpcyBkZXRlcm1pbmVkIGJ5IHRoZSBwYXRpZW50LlxyXG4gICAqL1xyXG4gIFNlbGZEaWFnbm9zaXM6IFwic2VsZlwiLFxyXG59IGFzIGNvbnN0O1xyXG5cclxuLyoqXHJcbiAqIFRoaXMgdmFsdWUgc2V0IGluY2x1ZGVzIGV4YW1wbGUgRGlhZ25vc2lzIFR5cGUgY29kZXMuXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBFeERpYWdub3Npc3R5cGVDb2RlVHlwZSA9IHR5cGVvZiBFeERpYWdub3Npc3R5cGVDb2Rlc1trZXlvZiB0eXBlb2YgRXhEaWFnbm9zaXN0eXBlQ29kZXNdO1xyXG4iXX0=