// <auto-generated/>
// Contents of: hl7.fhir.r3.core version: 3.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/item-type|3.0.2
/**
 * Distinguishes groups from questions and display text and indicates data type for questions
 */
export const ItemTypeCodes = {
    /**
     * attachment: Question with binary content such as a image, PDF, etc. as an answer (valueAttachment)
     */
    Attachment: "attachment",
    /**
     * boolean: Question with a yes/no answer (valueBoolean)
     */
    Boolean: "boolean",
    /**
     * choice: Question with a Coding drawn from a list of options (specified in either the option property, or via the valueset referenced in the options property) as an answer (valueCoding)
     */
    Choice: "choice",
    /**
     * date: Question with a date answer (valueDate)
     */
    Date: "date",
    /**
     * dateTime: Question with a date and time answer (valueDateTime)
     */
    DateTime: "dateTime",
    /**
     * decimal: Question with is a real number answer (valueDecimal)
     */
    Decimal: "decimal",
    /**
     * display: Text for display that will not capture an answer or have child items.
     */
    Display: "display",
    /**
     * group: An item with no direct answer but should have at least one child item.
     */
    Group: "group",
    /**
     * integer: Question with an integer answer (valueInteger)
     */
    Integer: "integer",
    /**
     * open-choice: Answer is a Coding drawn from a list of options (as with the choice type) or a free-text entry in a string (valueCoding or valueString)
     */
    OpenChoice: "open-choice",
    /**
     * quantity: Question with a combination of a numeric value and unit, potentially with a comparator (&lt;, &gt;, etc.) as an answer. (valueQuantity)
     * There is an extension 'http://hl7.org/fhir/StructureDefinition/questionnaire-unit' that can be used to define what unit whould be captured (or the a unit that has a ucum conversion from the provided unit)
     */
    Quantity: "quantity",
    /**
     * question: An item that defines a specific answer to be captured, and may have child items.
     * (the answer provided in the QuestionnaireResponse should be of the defined datatype)
     */
    Question: "question",
    /**
     * reference: Question with a reference to another resource (practitioner, organization, etc.) as an answer (valueReference)
     */
    Reference: "reference",
    /**
     * string: Question with a short (few words to short sentence) free-text entry answer (valueString)
     */
    String: "string",
    /**
     * text: Question with a long (potentially multi-paragraph) free-text entry answer (valueString)
     */
    Text: "text",
    /**
     * time: Question with a time (hour:minute:second) answer independent of date. (valueTime)
     */
    Time: "time",
    /**
     * url: Question with a URL (website, FTP site, etc.) answer (valueUri)
     */
    Url: "url",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSXRlbVR5cGVDb2Rlcy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvSXRlbVR5cGVDb2Rlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyw4REFBOEQ7QUFFOUQ7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxhQUFhLEdBQUc7SUFDM0I7O09BRUc7SUFDSCxVQUFVLEVBQUUsWUFBWTtJQUN4Qjs7T0FFRztJQUNILE9BQU8sRUFBRSxTQUFTO0lBQ2xCOztPQUVHO0lBQ0gsTUFBTSxFQUFFLFFBQVE7SUFDaEI7O09BRUc7SUFDSCxJQUFJLEVBQUUsTUFBTTtJQUNaOztPQUVHO0lBQ0gsUUFBUSxFQUFFLFVBQVU7SUFDcEI7O09BRUc7SUFDSCxPQUFPLEVBQUUsU0FBUztJQUNsQjs7T0FFRztJQUNILE9BQU8sRUFBRSxTQUFTO0lBQ2xCOztPQUVHO0lBQ0gsS0FBSyxFQUFFLE9BQU87SUFDZDs7T0FFRztJQUNILE9BQU8sRUFBRSxTQUFTO0lBQ2xCOztPQUVHO0lBQ0gsVUFBVSxFQUFFLGFBQWE7SUFDekI7OztPQUdHO0lBQ0gsUUFBUSxFQUFFLFVBQVU7SUFDcEI7OztPQUdHO0lBQ0gsUUFBUSxFQUFFLFVBQVU7SUFDcEI7O09BRUc7SUFDSCxTQUFTLEVBQUUsV0FBVztJQUN0Qjs7T0FFRztJQUNILE1BQU0sRUFBRSxRQUFRO0lBQ2hCOztPQUVHO0lBQ0gsSUFBSSxFQUFFLE1BQU07SUFDWjs7T0FFRztJQUNILElBQUksRUFBRSxNQUFNO0lBQ1o7O09BRUc7SUFDSCxHQUFHLEVBQUUsS0FBSztDQUNGLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjMuY29yZSB2ZXJzaW9uOiAzLjAuMlxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvaXRlbS10eXBlfDMuMC4yXHJcblxyXG4vKipcclxuICogRGlzdGluZ3Vpc2hlcyBncm91cHMgZnJvbSBxdWVzdGlvbnMgYW5kIGRpc3BsYXkgdGV4dCBhbmQgaW5kaWNhdGVzIGRhdGEgdHlwZSBmb3IgcXVlc3Rpb25zXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgSXRlbVR5cGVDb2RlcyA9IHtcclxuICAvKipcclxuICAgKiBhdHRhY2htZW50OiBRdWVzdGlvbiB3aXRoIGJpbmFyeSBjb250ZW50IHN1Y2ggYXMgYSBpbWFnZSwgUERGLCBldGMuIGFzIGFuIGFuc3dlciAodmFsdWVBdHRhY2htZW50KVxyXG4gICAqL1xyXG4gIEF0dGFjaG1lbnQ6IFwiYXR0YWNobWVudFwiLFxyXG4gIC8qKlxyXG4gICAqIGJvb2xlYW46IFF1ZXN0aW9uIHdpdGggYSB5ZXMvbm8gYW5zd2VyICh2YWx1ZUJvb2xlYW4pXHJcbiAgICovXHJcbiAgQm9vbGVhbjogXCJib29sZWFuXCIsXHJcbiAgLyoqXHJcbiAgICogY2hvaWNlOiBRdWVzdGlvbiB3aXRoIGEgQ29kaW5nIGRyYXduIGZyb20gYSBsaXN0IG9mIG9wdGlvbnMgKHNwZWNpZmllZCBpbiBlaXRoZXIgdGhlIG9wdGlvbiBwcm9wZXJ0eSwgb3IgdmlhIHRoZSB2YWx1ZXNldCByZWZlcmVuY2VkIGluIHRoZSBvcHRpb25zIHByb3BlcnR5KSBhcyBhbiBhbnN3ZXIgKHZhbHVlQ29kaW5nKVxyXG4gICAqL1xyXG4gIENob2ljZTogXCJjaG9pY2VcIixcclxuICAvKipcclxuICAgKiBkYXRlOiBRdWVzdGlvbiB3aXRoIGEgZGF0ZSBhbnN3ZXIgKHZhbHVlRGF0ZSlcclxuICAgKi9cclxuICBEYXRlOiBcImRhdGVcIixcclxuICAvKipcclxuICAgKiBkYXRlVGltZTogUXVlc3Rpb24gd2l0aCBhIGRhdGUgYW5kIHRpbWUgYW5zd2VyICh2YWx1ZURhdGVUaW1lKVxyXG4gICAqL1xyXG4gIERhdGVUaW1lOiBcImRhdGVUaW1lXCIsXHJcbiAgLyoqXHJcbiAgICogZGVjaW1hbDogUXVlc3Rpb24gd2l0aCBpcyBhIHJlYWwgbnVtYmVyIGFuc3dlciAodmFsdWVEZWNpbWFsKVxyXG4gICAqL1xyXG4gIERlY2ltYWw6IFwiZGVjaW1hbFwiLFxyXG4gIC8qKlxyXG4gICAqIGRpc3BsYXk6IFRleHQgZm9yIGRpc3BsYXkgdGhhdCB3aWxsIG5vdCBjYXB0dXJlIGFuIGFuc3dlciBvciBoYXZlIGNoaWxkIGl0ZW1zLlxyXG4gICAqL1xyXG4gIERpc3BsYXk6IFwiZGlzcGxheVwiLFxyXG4gIC8qKlxyXG4gICAqIGdyb3VwOiBBbiBpdGVtIHdpdGggbm8gZGlyZWN0IGFuc3dlciBidXQgc2hvdWxkIGhhdmUgYXQgbGVhc3Qgb25lIGNoaWxkIGl0ZW0uXHJcbiAgICovXHJcbiAgR3JvdXA6IFwiZ3JvdXBcIixcclxuICAvKipcclxuICAgKiBpbnRlZ2VyOiBRdWVzdGlvbiB3aXRoIGFuIGludGVnZXIgYW5zd2VyICh2YWx1ZUludGVnZXIpXHJcbiAgICovXHJcbiAgSW50ZWdlcjogXCJpbnRlZ2VyXCIsXHJcbiAgLyoqXHJcbiAgICogb3Blbi1jaG9pY2U6IEFuc3dlciBpcyBhIENvZGluZyBkcmF3biBmcm9tIGEgbGlzdCBvZiBvcHRpb25zIChhcyB3aXRoIHRoZSBjaG9pY2UgdHlwZSkgb3IgYSBmcmVlLXRleHQgZW50cnkgaW4gYSBzdHJpbmcgKHZhbHVlQ29kaW5nIG9yIHZhbHVlU3RyaW5nKVxyXG4gICAqL1xyXG4gIE9wZW5DaG9pY2U6IFwib3Blbi1jaG9pY2VcIixcclxuICAvKipcclxuICAgKiBxdWFudGl0eTogUXVlc3Rpb24gd2l0aCBhIGNvbWJpbmF0aW9uIG9mIGEgbnVtZXJpYyB2YWx1ZSBhbmQgdW5pdCwgcG90ZW50aWFsbHkgd2l0aCBhIGNvbXBhcmF0b3IgKCZsdDssICZndDssIGV0Yy4pIGFzIGFuIGFuc3dlci4gKHZhbHVlUXVhbnRpdHkpXHJcbiAgICogVGhlcmUgaXMgYW4gZXh0ZW5zaW9uICdodHRwOi8vaGw3Lm9yZy9maGlyL1N0cnVjdHVyZURlZmluaXRpb24vcXVlc3Rpb25uYWlyZS11bml0JyB0aGF0IGNhbiBiZSB1c2VkIHRvIGRlZmluZSB3aGF0IHVuaXQgd2hvdWxkIGJlIGNhcHR1cmVkIChvciB0aGUgYSB1bml0IHRoYXQgaGFzIGEgdWN1bSBjb252ZXJzaW9uIGZyb20gdGhlIHByb3ZpZGVkIHVuaXQpXHJcbiAgICovXHJcbiAgUXVhbnRpdHk6IFwicXVhbnRpdHlcIixcclxuICAvKipcclxuICAgKiBxdWVzdGlvbjogQW4gaXRlbSB0aGF0IGRlZmluZXMgYSBzcGVjaWZpYyBhbnN3ZXIgdG8gYmUgY2FwdHVyZWQsIGFuZCBtYXkgaGF2ZSBjaGlsZCBpdGVtcy5cclxuICAgKiAodGhlIGFuc3dlciBwcm92aWRlZCBpbiB0aGUgUXVlc3Rpb25uYWlyZVJlc3BvbnNlIHNob3VsZCBiZSBvZiB0aGUgZGVmaW5lZCBkYXRhdHlwZSlcclxuICAgKi9cclxuICBRdWVzdGlvbjogXCJxdWVzdGlvblwiLFxyXG4gIC8qKlxyXG4gICAqIHJlZmVyZW5jZTogUXVlc3Rpb24gd2l0aCBhIHJlZmVyZW5jZSB0byBhbm90aGVyIHJlc291cmNlIChwcmFjdGl0aW9uZXIsIG9yZ2FuaXphdGlvbiwgZXRjLikgYXMgYW4gYW5zd2VyICh2YWx1ZVJlZmVyZW5jZSlcclxuICAgKi9cclxuICBSZWZlcmVuY2U6IFwicmVmZXJlbmNlXCIsXHJcbiAgLyoqXHJcbiAgICogc3RyaW5nOiBRdWVzdGlvbiB3aXRoIGEgc2hvcnQgKGZldyB3b3JkcyB0byBzaG9ydCBzZW50ZW5jZSkgZnJlZS10ZXh0IGVudHJ5IGFuc3dlciAodmFsdWVTdHJpbmcpXHJcbiAgICovXHJcbiAgU3RyaW5nOiBcInN0cmluZ1wiLFxyXG4gIC8qKlxyXG4gICAqIHRleHQ6IFF1ZXN0aW9uIHdpdGggYSBsb25nIChwb3RlbnRpYWxseSBtdWx0aS1wYXJhZ3JhcGgpIGZyZWUtdGV4dCBlbnRyeSBhbnN3ZXIgKHZhbHVlU3RyaW5nKVxyXG4gICAqL1xyXG4gIFRleHQ6IFwidGV4dFwiLFxyXG4gIC8qKlxyXG4gICAqIHRpbWU6IFF1ZXN0aW9uIHdpdGggYSB0aW1lIChob3VyOm1pbnV0ZTpzZWNvbmQpIGFuc3dlciBpbmRlcGVuZGVudCBvZiBkYXRlLiAodmFsdWVUaW1lKVxyXG4gICAqL1xyXG4gIFRpbWU6IFwidGltZVwiLFxyXG4gIC8qKlxyXG4gICAqIHVybDogUXVlc3Rpb24gd2l0aCBhIFVSTCAod2Vic2l0ZSwgRlRQIHNpdGUsIGV0Yy4pIGFuc3dlciAodmFsdWVVcmkpXHJcbiAgICovXHJcbiAgVXJsOiBcInVybFwiLFxyXG59IGFzIGNvbnN0O1xyXG5cclxuLyoqXHJcbiAqIERpc3Rpbmd1aXNoZXMgZ3JvdXBzIGZyb20gcXVlc3Rpb25zIGFuZCBkaXNwbGF5IHRleHQgYW5kIGluZGljYXRlcyBkYXRhIHR5cGUgZm9yIHF1ZXN0aW9uc1xyXG4gKi9cclxuZXhwb3J0IHR5cGUgSXRlbVR5cGVDb2RlVHlwZSA9IHR5cGVvZiBJdGVtVHlwZUNvZGVzW2tleW9mIHR5cGVvZiBJdGVtVHlwZUNvZGVzXTtcclxuIl19