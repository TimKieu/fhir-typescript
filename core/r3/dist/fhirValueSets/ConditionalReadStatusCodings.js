// <auto-generated/>
// Contents of: hl7.fhir.r3.core version: 3.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/conditional-read-status|3.0.2
/**
 * A code that indicates how the server supports conditional read.
 */
export const ConditionalReadStatusCodings = {
    /**
     * full-support: Conditional reads are supported, with both If-Modified-Since and If-None-Match HTTP Headers.
     */
    FullSupport: {
        display: "Full Support",
        code: "full-support",
        system: "http://hl7.org/fhir/conditional-read-status",
    },
    /**
     * modified-since: Conditional reads are supported, but only with the If-Modified-Since HTTP Header.
     */
    IfModifiedSince: {
        display: "If-Modified-Since",
        code: "modified-since",
        system: "http://hl7.org/fhir/conditional-read-status",
    },
    /**
     * not-match: Conditional reads are supported, but only with the If-None-Match HTTP Header.
     */
    IfNoneMatch: {
        display: "If-None-Match",
        code: "not-match",
        system: "http://hl7.org/fhir/conditional-read-status",
    },
    /**
     * not-supported: No support for conditional deletes.
     */
    NotSupported: {
        display: "Not Supported",
        code: "not-supported",
        system: "http://hl7.org/fhir/conditional-read-status",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29uZGl0aW9uYWxSZWFkU3RhdHVzQ29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvQ29uZGl0aW9uYWxSZWFkU3RhdHVzQ29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyw0RUFBNEU7QUEwQjVFOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sNEJBQTRCLEdBQW1DO0lBQzFFOztPQUVHO0lBQ0gsV0FBVyxFQUFFO1FBQ1gsT0FBTyxFQUFFLGNBQWM7UUFDdkIsSUFBSSxFQUFFLGNBQWM7UUFDcEIsTUFBTSxFQUFFLDZDQUE2QztLQUN0RDtJQUNEOztPQUVHO0lBQ0gsZUFBZSxFQUFFO1FBQ2YsT0FBTyxFQUFFLG1CQUFtQjtRQUM1QixJQUFJLEVBQUUsZ0JBQWdCO1FBQ3RCLE1BQU0sRUFBRSw2Q0FBNkM7S0FDdEQ7SUFDRDs7T0FFRztJQUNILFdBQVcsRUFBRTtRQUNYLE9BQU8sRUFBRSxlQUFlO1FBQ3hCLElBQUksRUFBRSxXQUFXO1FBQ2pCLE1BQU0sRUFBRSw2Q0FBNkM7S0FDdEQ7SUFDRDs7T0FFRztJQUNILFlBQVksRUFBRTtRQUNaLE9BQU8sRUFBRSxlQUFlO1FBQ3hCLElBQUksRUFBRSxlQUFlO1FBQ3JCLE1BQU0sRUFBRSw2Q0FBNkM7S0FDdEQ7Q0FDTyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnIzLmNvcmUgdmVyc2lvbjogMy4wLjJcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L2NvbmRpdGlvbmFsLXJlYWQtc3RhdHVzfDMuMC4yXHJcblxyXG5pbXBvcnQgeyBDb2RpbmdBcmdzIH0gZnJvbSAnLi4vZmhpci9Db2RpbmcuanMnXHJcblxyXG4vKipcclxuICogQSBjb2RlIHRoYXQgaW5kaWNhdGVzIGhvdyB0aGUgc2VydmVyIHN1cHBvcnRzIGNvbmRpdGlvbmFsIHJlYWQuXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBDb25kaXRpb25hbFJlYWRTdGF0dXNDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIGZ1bGwtc3VwcG9ydDogQ29uZGl0aW9uYWwgcmVhZHMgYXJlIHN1cHBvcnRlZCwgd2l0aCBib3RoIElmLU1vZGlmaWVkLVNpbmNlIGFuZCBJZi1Ob25lLU1hdGNoIEhUVFAgSGVhZGVycy5cclxuICAgKi9cclxuICBGdWxsU3VwcG9ydDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBtb2RpZmllZC1zaW5jZTogQ29uZGl0aW9uYWwgcmVhZHMgYXJlIHN1cHBvcnRlZCwgYnV0IG9ubHkgd2l0aCB0aGUgSWYtTW9kaWZpZWQtU2luY2UgSFRUUCBIZWFkZXIuXHJcbiAgICovXHJcbiAgSWZNb2RpZmllZFNpbmNlOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIG5vdC1tYXRjaDogQ29uZGl0aW9uYWwgcmVhZHMgYXJlIHN1cHBvcnRlZCwgYnV0IG9ubHkgd2l0aCB0aGUgSWYtTm9uZS1NYXRjaCBIVFRQIEhlYWRlci5cclxuICAgKi9cclxuICBJZk5vbmVNYXRjaDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBub3Qtc3VwcG9ydGVkOiBObyBzdXBwb3J0IGZvciBjb25kaXRpb25hbCBkZWxldGVzLlxyXG4gICAqL1xyXG4gIE5vdFN1cHBvcnRlZDogQ29kaW5nQXJncztcclxufVxyXG5cclxuLyoqXHJcbiAqIEEgY29kZSB0aGF0IGluZGljYXRlcyBob3cgdGhlIHNlcnZlciBzdXBwb3J0cyBjb25kaXRpb25hbCByZWFkLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IENvbmRpdGlvbmFsUmVhZFN0YXR1c0NvZGluZ3M6Q29uZGl0aW9uYWxSZWFkU3RhdHVzQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBmdWxsLXN1cHBvcnQ6IENvbmRpdGlvbmFsIHJlYWRzIGFyZSBzdXBwb3J0ZWQsIHdpdGggYm90aCBJZi1Nb2RpZmllZC1TaW5jZSBhbmQgSWYtTm9uZS1NYXRjaCBIVFRQIEhlYWRlcnMuXHJcbiAgICovXHJcbiAgRnVsbFN1cHBvcnQ6IHtcclxuICAgIGRpc3BsYXk6IFwiRnVsbCBTdXBwb3J0XCIsXHJcbiAgICBjb2RlOiBcImZ1bGwtc3VwcG9ydFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvY29uZGl0aW9uYWwtcmVhZC1zdGF0dXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIG1vZGlmaWVkLXNpbmNlOiBDb25kaXRpb25hbCByZWFkcyBhcmUgc3VwcG9ydGVkLCBidXQgb25seSB3aXRoIHRoZSBJZi1Nb2RpZmllZC1TaW5jZSBIVFRQIEhlYWRlci5cclxuICAgKi9cclxuICBJZk1vZGlmaWVkU2luY2U6IHtcclxuICAgIGRpc3BsYXk6IFwiSWYtTW9kaWZpZWQtU2luY2VcIixcclxuICAgIGNvZGU6IFwibW9kaWZpZWQtc2luY2VcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2NvbmRpdGlvbmFsLXJlYWQtc3RhdHVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBub3QtbWF0Y2g6IENvbmRpdGlvbmFsIHJlYWRzIGFyZSBzdXBwb3J0ZWQsIGJ1dCBvbmx5IHdpdGggdGhlIElmLU5vbmUtTWF0Y2ggSFRUUCBIZWFkZXIuXHJcbiAgICovXHJcbiAgSWZOb25lTWF0Y2g6IHtcclxuICAgIGRpc3BsYXk6IFwiSWYtTm9uZS1NYXRjaFwiLFxyXG4gICAgY29kZTogXCJub3QtbWF0Y2hcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2NvbmRpdGlvbmFsLXJlYWQtc3RhdHVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBub3Qtc3VwcG9ydGVkOiBObyBzdXBwb3J0IGZvciBjb25kaXRpb25hbCBkZWxldGVzLlxyXG4gICAqL1xyXG4gIE5vdFN1cHBvcnRlZDoge1xyXG4gICAgZGlzcGxheTogXCJOb3QgU3VwcG9ydGVkXCIsXHJcbiAgICBjb2RlOiBcIm5vdC1zdXBwb3J0ZWRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2NvbmRpdGlvbmFsLXJlYWQtc3RhdHVzXCIsXHJcbiAgfSxcclxufSBhcyBjb25zdDtcclxuIl19