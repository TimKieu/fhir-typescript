// <auto-generated/>
// Contents of: hl7.fhir.r3.core version: 3.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/consent-data-meaning|3.0.2
/**
 * How a resource reference is interpreted when testing consent restrictions
 */
export const ConsentDataMeaningCodings = {
    /**
     * authoredby: The consent applies to instances of resources that are authored by
     */
    AuthoredBy: {
        display: "AuthoredBy",
        code: "authoredby",
        system: "http://hl7.org/fhir/consent-data-meaning",
    },
    /**
     * dependents: The consent applies directly to the instance of the resource and instances that refer to it
     */
    Dependents: {
        display: "Dependents",
        code: "dependents",
        system: "http://hl7.org/fhir/consent-data-meaning",
    },
    /**
     * instance: The consent applies directly to the instance of the resource
     */
    Instance: {
        display: "Instance",
        code: "instance",
        system: "http://hl7.org/fhir/consent-data-meaning",
    },
    /**
     * related: The consent applies directly to the instance of the resource and instances it refers to
     */
    Related: {
        display: "Related",
        code: "related",
        system: "http://hl7.org/fhir/consent-data-meaning",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29uc2VudERhdGFNZWFuaW5nQ29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvQ29uc2VudERhdGFNZWFuaW5nQ29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyx5RUFBeUU7QUEwQnpFOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0seUJBQXlCLEdBQWdDO0lBQ3BFOztPQUVHO0lBQ0gsVUFBVSxFQUFFO1FBQ1YsT0FBTyxFQUFFLFlBQVk7UUFDckIsSUFBSSxFQUFFLFlBQVk7UUFDbEIsTUFBTSxFQUFFLDBDQUEwQztLQUNuRDtJQUNEOztPQUVHO0lBQ0gsVUFBVSxFQUFFO1FBQ1YsT0FBTyxFQUFFLFlBQVk7UUFDckIsSUFBSSxFQUFFLFlBQVk7UUFDbEIsTUFBTSxFQUFFLDBDQUEwQztLQUNuRDtJQUNEOztPQUVHO0lBQ0gsUUFBUSxFQUFFO1FBQ1IsT0FBTyxFQUFFLFVBQVU7UUFDbkIsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLDBDQUEwQztLQUNuRDtJQUNEOztPQUVHO0lBQ0gsT0FBTyxFQUFFO1FBQ1AsT0FBTyxFQUFFLFNBQVM7UUFDbEIsSUFBSSxFQUFFLFNBQVM7UUFDZixNQUFNLEVBQUUsMENBQTBDO0tBQ25EO0NBQ08sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yMy5jb3JlIHZlcnNpb246IDMuMC4yXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9jb25zZW50LWRhdGEtbWVhbmluZ3wzLjAuMlxyXG5cclxuaW1wb3J0IHsgQ29kaW5nQXJncyB9IGZyb20gJy4uL2ZoaXIvQ29kaW5nLmpzJ1xyXG5cclxuLyoqXHJcbiAqIEhvdyBhIHJlc291cmNlIHJlZmVyZW5jZSBpcyBpbnRlcnByZXRlZCB3aGVuIHRlc3RpbmcgY29uc2VudCByZXN0cmljdGlvbnNcclxuICovXHJcbmV4cG9ydCB0eXBlIENvbnNlbnREYXRhTWVhbmluZ0NvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogYXV0aG9yZWRieTogVGhlIGNvbnNlbnQgYXBwbGllcyB0byBpbnN0YW5jZXMgb2YgcmVzb3VyY2VzIHRoYXQgYXJlIGF1dGhvcmVkIGJ5XHJcbiAgICovXHJcbiAgQXV0aG9yZWRCeTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBkZXBlbmRlbnRzOiBUaGUgY29uc2VudCBhcHBsaWVzIGRpcmVjdGx5IHRvIHRoZSBpbnN0YW5jZSBvZiB0aGUgcmVzb3VyY2UgYW5kIGluc3RhbmNlcyB0aGF0IHJlZmVyIHRvIGl0XHJcbiAgICovXHJcbiAgRGVwZW5kZW50czogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBpbnN0YW5jZTogVGhlIGNvbnNlbnQgYXBwbGllcyBkaXJlY3RseSB0byB0aGUgaW5zdGFuY2Ugb2YgdGhlIHJlc291cmNlXHJcbiAgICovXHJcbiAgSW5zdGFuY2U6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogcmVsYXRlZDogVGhlIGNvbnNlbnQgYXBwbGllcyBkaXJlY3RseSB0byB0aGUgaW5zdGFuY2Ugb2YgdGhlIHJlc291cmNlIGFuZCBpbnN0YW5jZXMgaXQgcmVmZXJzIHRvXHJcbiAgICovXHJcbiAgUmVsYXRlZDogQ29kaW5nQXJncztcclxufVxyXG5cclxuLyoqXHJcbiAqIEhvdyBhIHJlc291cmNlIHJlZmVyZW5jZSBpcyBpbnRlcnByZXRlZCB3aGVuIHRlc3RpbmcgY29uc2VudCByZXN0cmljdGlvbnNcclxuICovXHJcbmV4cG9ydCBjb25zdCBDb25zZW50RGF0YU1lYW5pbmdDb2RpbmdzOkNvbnNlbnREYXRhTWVhbmluZ0NvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogYXV0aG9yZWRieTogVGhlIGNvbnNlbnQgYXBwbGllcyB0byBpbnN0YW5jZXMgb2YgcmVzb3VyY2VzIHRoYXQgYXJlIGF1dGhvcmVkIGJ5XHJcbiAgICovXHJcbiAgQXV0aG9yZWRCeToge1xyXG4gICAgZGlzcGxheTogXCJBdXRob3JlZEJ5XCIsXHJcbiAgICBjb2RlOiBcImF1dGhvcmVkYnlcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2NvbnNlbnQtZGF0YS1tZWFuaW5nXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBkZXBlbmRlbnRzOiBUaGUgY29uc2VudCBhcHBsaWVzIGRpcmVjdGx5IHRvIHRoZSBpbnN0YW5jZSBvZiB0aGUgcmVzb3VyY2UgYW5kIGluc3RhbmNlcyB0aGF0IHJlZmVyIHRvIGl0XHJcbiAgICovXHJcbiAgRGVwZW5kZW50czoge1xyXG4gICAgZGlzcGxheTogXCJEZXBlbmRlbnRzXCIsXHJcbiAgICBjb2RlOiBcImRlcGVuZGVudHNcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2NvbnNlbnQtZGF0YS1tZWFuaW5nXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBpbnN0YW5jZTogVGhlIGNvbnNlbnQgYXBwbGllcyBkaXJlY3RseSB0byB0aGUgaW5zdGFuY2Ugb2YgdGhlIHJlc291cmNlXHJcbiAgICovXHJcbiAgSW5zdGFuY2U6IHtcclxuICAgIGRpc3BsYXk6IFwiSW5zdGFuY2VcIixcclxuICAgIGNvZGU6IFwiaW5zdGFuY2VcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2NvbnNlbnQtZGF0YS1tZWFuaW5nXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiByZWxhdGVkOiBUaGUgY29uc2VudCBhcHBsaWVzIGRpcmVjdGx5IHRvIHRoZSBpbnN0YW5jZSBvZiB0aGUgcmVzb3VyY2UgYW5kIGluc3RhbmNlcyBpdCByZWZlcnMgdG9cclxuICAgKi9cclxuICBSZWxhdGVkOiB7XHJcbiAgICBkaXNwbGF5OiBcIlJlbGF0ZWRcIixcclxuICAgIGNvZGU6IFwicmVsYXRlZFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvY29uc2VudC1kYXRhLW1lYW5pbmdcIixcclxuICB9LFxyXG59IGFzIGNvbnN0O1xyXG4iXX0=