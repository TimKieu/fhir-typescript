// <auto-generated/>
// Contents of: hl7.fhir.r3.core version: 3.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/udi-entry-type|3.0.2
/**
 * Codes to identify how UDI data was entered
 */
export const UdiEntryTypeCodings = {
    /**
     * barcode: A Barcode scanner captured the data from the device label
     */
    BarCode: {
        display: "BarCode",
        code: "barcode",
        system: "http://hl7.org/fhir/udi-entry-type",
    },
    /**
     * card: The data originated from a patient's implant card and read by an operator.
     */
    Card: {
        display: "Card",
        code: "card",
        system: "http://hl7.org/fhir/udi-entry-type",
    },
    /**
     * manual: The data was read from the label by a person and manually entered. (e.g.  via a keyboard)
     */
    Manual: {
        display: "Manual",
        code: "manual",
        system: "http://hl7.org/fhir/udi-entry-type",
    },
    /**
     * rfid: An RFID chip reader captured the data from the device label
     */
    RFID: {
        display: "RFID",
        code: "rfid",
        system: "http://hl7.org/fhir/udi-entry-type",
    },
    /**
     * self-reported: The data originated from a patient source and not directly scanned or read from a label or card.
     */
    SelfReported: {
        display: "Self Reported",
        code: "self-reported",
        system: "http://hl7.org/fhir/udi-entry-type",
    },
    /**
     * unknown: The method of data capture has not been determined
     */
    Unknown: {
        display: "Unknown",
        code: "unknown",
        system: "http://hl7.org/fhir/udi-entry-type",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVWRpRW50cnlUeXBlQ29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvVWRpRW50cnlUeXBlQ29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyxtRUFBbUU7QUFrQ25FOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sbUJBQW1CLEdBQTBCO0lBQ3hEOztPQUVHO0lBQ0gsT0FBTyxFQUFFO1FBQ1AsT0FBTyxFQUFFLFNBQVM7UUFDbEIsSUFBSSxFQUFFLFNBQVM7UUFDZixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxJQUFJLEVBQUU7UUFDSixPQUFPLEVBQUUsTUFBTTtRQUNmLElBQUksRUFBRSxNQUFNO1FBQ1osTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gsTUFBTSxFQUFFO1FBQ04sT0FBTyxFQUFFLFFBQVE7UUFDakIsSUFBSSxFQUFFLFFBQVE7UUFDZCxNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxJQUFJLEVBQUU7UUFDSixPQUFPLEVBQUUsTUFBTTtRQUNmLElBQUksRUFBRSxNQUFNO1FBQ1osTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gsWUFBWSxFQUFFO1FBQ1osT0FBTyxFQUFFLGVBQWU7UUFDeEIsSUFBSSxFQUFFLGVBQWU7UUFDckIsTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gsT0FBTyxFQUFFO1FBQ1AsT0FBTyxFQUFFLFNBQVM7UUFDbEIsSUFBSSxFQUFFLFNBQVM7UUFDZixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0NBQ08sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yMy5jb3JlIHZlcnNpb246IDMuMC4yXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC91ZGktZW50cnktdHlwZXwzLjAuMlxyXG5cclxuaW1wb3J0IHsgQ29kaW5nQXJncyB9IGZyb20gJy4uL2ZoaXIvQ29kaW5nLmpzJ1xyXG5cclxuLyoqXHJcbiAqIENvZGVzIHRvIGlkZW50aWZ5IGhvdyBVREkgZGF0YSB3YXMgZW50ZXJlZFxyXG4gKi9cclxuZXhwb3J0IHR5cGUgVWRpRW50cnlUeXBlQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBiYXJjb2RlOiBBIEJhcmNvZGUgc2Nhbm5lciBjYXB0dXJlZCB0aGUgZGF0YSBmcm9tIHRoZSBkZXZpY2UgbGFiZWxcclxuICAgKi9cclxuICBCYXJDb2RlOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIGNhcmQ6IFRoZSBkYXRhIG9yaWdpbmF0ZWQgZnJvbSBhIHBhdGllbnQncyBpbXBsYW50IGNhcmQgYW5kIHJlYWQgYnkgYW4gb3BlcmF0b3IuXHJcbiAgICovXHJcbiAgQ2FyZDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBtYW51YWw6IFRoZSBkYXRhIHdhcyByZWFkIGZyb20gdGhlIGxhYmVsIGJ5IGEgcGVyc29uIGFuZCBtYW51YWxseSBlbnRlcmVkLiAoZS5nLiAgdmlhIGEga2V5Ym9hcmQpXHJcbiAgICovXHJcbiAgTWFudWFsOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIHJmaWQ6IEFuIFJGSUQgY2hpcCByZWFkZXIgY2FwdHVyZWQgdGhlIGRhdGEgZnJvbSB0aGUgZGV2aWNlIGxhYmVsXHJcbiAgICovXHJcbiAgUkZJRDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBzZWxmLXJlcG9ydGVkOiBUaGUgZGF0YSBvcmlnaW5hdGVkIGZyb20gYSBwYXRpZW50IHNvdXJjZSBhbmQgbm90IGRpcmVjdGx5IHNjYW5uZWQgb3IgcmVhZCBmcm9tIGEgbGFiZWwgb3IgY2FyZC5cclxuICAgKi9cclxuICBTZWxmUmVwb3J0ZWQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogdW5rbm93bjogVGhlIG1ldGhvZCBvZiBkYXRhIGNhcHR1cmUgaGFzIG5vdCBiZWVuIGRldGVybWluZWRcclxuICAgKi9cclxuICBVbmtub3duOiBDb2RpbmdBcmdzO1xyXG59XHJcblxyXG4vKipcclxuICogQ29kZXMgdG8gaWRlbnRpZnkgaG93IFVESSBkYXRhIHdhcyBlbnRlcmVkXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgVWRpRW50cnlUeXBlQ29kaW5nczpVZGlFbnRyeVR5cGVDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIGJhcmNvZGU6IEEgQmFyY29kZSBzY2FubmVyIGNhcHR1cmVkIHRoZSBkYXRhIGZyb20gdGhlIGRldmljZSBsYWJlbFxyXG4gICAqL1xyXG4gIEJhckNvZGU6IHtcclxuICAgIGRpc3BsYXk6IFwiQmFyQ29kZVwiLFxyXG4gICAgY29kZTogXCJiYXJjb2RlXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci91ZGktZW50cnktdHlwZVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogY2FyZDogVGhlIGRhdGEgb3JpZ2luYXRlZCBmcm9tIGEgcGF0aWVudCdzIGltcGxhbnQgY2FyZCBhbmQgcmVhZCBieSBhbiBvcGVyYXRvci5cclxuICAgKi9cclxuICBDYXJkOiB7XHJcbiAgICBkaXNwbGF5OiBcIkNhcmRcIixcclxuICAgIGNvZGU6IFwiY2FyZFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvdWRpLWVudHJ5LXR5cGVcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIG1hbnVhbDogVGhlIGRhdGEgd2FzIHJlYWQgZnJvbSB0aGUgbGFiZWwgYnkgYSBwZXJzb24gYW5kIG1hbnVhbGx5IGVudGVyZWQuIChlLmcuICB2aWEgYSBrZXlib2FyZClcclxuICAgKi9cclxuICBNYW51YWw6IHtcclxuICAgIGRpc3BsYXk6IFwiTWFudWFsXCIsXHJcbiAgICBjb2RlOiBcIm1hbnVhbFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvdWRpLWVudHJ5LXR5cGVcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIHJmaWQ6IEFuIFJGSUQgY2hpcCByZWFkZXIgY2FwdHVyZWQgdGhlIGRhdGEgZnJvbSB0aGUgZGV2aWNlIGxhYmVsXHJcbiAgICovXHJcbiAgUkZJRDoge1xyXG4gICAgZGlzcGxheTogXCJSRklEXCIsXHJcbiAgICBjb2RlOiBcInJmaWRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3VkaS1lbnRyeS10eXBlXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBzZWxmLXJlcG9ydGVkOiBUaGUgZGF0YSBvcmlnaW5hdGVkIGZyb20gYSBwYXRpZW50IHNvdXJjZSBhbmQgbm90IGRpcmVjdGx5IHNjYW5uZWQgb3IgcmVhZCBmcm9tIGEgbGFiZWwgb3IgY2FyZC5cclxuICAgKi9cclxuICBTZWxmUmVwb3J0ZWQ6IHtcclxuICAgIGRpc3BsYXk6IFwiU2VsZiBSZXBvcnRlZFwiLFxyXG4gICAgY29kZTogXCJzZWxmLXJlcG9ydGVkXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci91ZGktZW50cnktdHlwZVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogdW5rbm93bjogVGhlIG1ldGhvZCBvZiBkYXRhIGNhcHR1cmUgaGFzIG5vdCBiZWVuIGRldGVybWluZWRcclxuICAgKi9cclxuICBVbmtub3duOiB7XHJcbiAgICBkaXNwbGF5OiBcIlVua25vd25cIixcclxuICAgIGNvZGU6IFwidW5rbm93blwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvdWRpLWVudHJ5LXR5cGVcIixcclxuICB9LFxyXG59IGFzIGNvbnN0O1xyXG4iXX0=