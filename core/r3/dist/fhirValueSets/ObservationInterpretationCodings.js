// <auto-generated/>
// Contents of: hl7.fhir.r3.core version: 3.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/observation-interpretation|3.0.2
/**
 * This value set defines the set of codes that can be used to indicate the meaning/use of a reference range.
 */
export const ObservationInterpretationCodings = {
    /**
     * Code: &lt;
     */
    OffScaleLow: {
        display: "Off scale low",
        code: "<",
        system: "http://hl7.org/fhir/v2/0078",
    },
    /**
     * Code: &gt;
     */
    OffScaleHigh: {
        display: "Off scale high",
        code: ">",
        system: "http://hl7.org/fhir/v2/0078",
    },
    /**
     * Code: A
     */
    Abnormal: {
        display: "Abnormal",
        code: "A",
        system: "http://hl7.org/fhir/v2/0078",
    },
    /**
     * Code: AA
     */
    CriticallyAbnormal: {
        display: "Critically abnormal",
        code: "AA",
        system: "http://hl7.org/fhir/v2/0078",
    },
    /**
     * Code: AC
     */
    AntiComplementarySubstancesPresent: {
        display: "Anti-complementary substances present",
        code: "AC",
        system: "http://hl7.org/fhir/v2/0078",
    },
    /**
     * Code: B
     */
    Better: {
        display: "Better",
        code: "B",
        system: "http://hl7.org/fhir/v2/0078",
    },
    /**
     * Code: D
     */
    SignificantChangeDown: {
        display: "Significant change down",
        code: "D",
        system: "http://hl7.org/fhir/v2/0078",
    },
    /**
     * Code: DET
     */
    Detected: {
        display: "Detected",
        code: "DET",
        system: "http://hl7.org/fhir/v2/0078",
    },
    /**
     * Code: H
     */
    High: {
        display: "High",
        code: "H",
        system: "http://hl7.org/fhir/v2/0078",
    },
    /**
     * Code: HH
     */
    CriticallyHigh: {
        display: "Critically high",
        code: "HH",
        system: "http://hl7.org/fhir/v2/0078",
    },
    /**
     * Code: HM
     */
    HoldForMedicalReview: {
        display: "Hold for Medical Review",
        code: "HM",
        system: "http://hl7.org/fhir/v2/0078",
    },
    /**
     * Code: HU
     */
    VeryHigh: {
        display: "Very high",
        code: "HU",
        system: "http://hl7.org/fhir/v2/0078",
    },
    /**
     * Code: I
     */
    Intermediate: {
        display: "Intermediate",
        code: "I",
        system: "http://hl7.org/fhir/v2/0078",
    },
    /**
     * Code: IE
     */
    InsufficientEvidence: {
        display: "Insufficient evidence",
        code: "IE",
        system: "http://hl7.org/fhir/v2/0078",
    },
    /**
     * Code: IND
     */
    Indeterminate: {
        display: "Indeterminate",
        code: "IND",
        system: "http://hl7.org/fhir/v2/0078",
    },
    /**
     * Code: L
     */
    Low: {
        display: "Low",
        code: "L",
        system: "http://hl7.org/fhir/v2/0078",
    },
    /**
     * Code: LL
     */
    CriticallyLow: {
        display: "Critically low",
        code: "LL",
        system: "http://hl7.org/fhir/v2/0078",
    },
    /**
     * Code: LU
     */
    VeryLow: {
        display: "Very low",
        code: "LU",
        system: "http://hl7.org/fhir/v2/0078",
    },
    /**
     * Code: MS
     */
    ModeratelySusceptibleIndicatesForMicrobiologySusceptibilitiesOnly: {
        display: "Moderately susceptible. Indicates for microbiology susceptibilities only.",
        code: "MS",
        system: "http://hl7.org/fhir/v2/0078",
    },
    /**
     * Code: N
     */
    Normal: {
        display: "Normal",
        code: "N",
        system: "http://hl7.org/fhir/v2/0078",
    },
    /**
     * Code: ND
     */
    NotDetected: {
        display: "Not Detected",
        code: "ND",
        system: "http://hl7.org/fhir/v2/0078",
    },
    /**
     * Code: NEG
     */
    Negative: {
        display: "Negative",
        code: "NEG",
        system: "http://hl7.org/fhir/v2/0078",
    },
    /**
     * Code: NR
     */
    NonReactive: {
        display: "Non-reactive",
        code: "NR",
        system: "http://hl7.org/fhir/v2/0078",
    },
    /**
     * Code: NS
     */
    NonSusceptible: {
        display: "Non-susceptible",
        code: "NS",
        system: "http://hl7.org/fhir/v2/0078",
    },
    /**
     * Code: null
     */
    NoRangeDefinedOrNormalRangesDonQuoteTApply: {
        display: "No range defined, or normal ranges don't apply",
        code: "null",
        system: "http://hl7.org/fhir/v2/0078",
    },
    /**
     * Code: OBX
     */
    InterpretationQualifiersInSeparateOBXSegments: {
        display: "Interpretation qualifiers in separate OBX segments",
        code: "OBX",
        system: "http://hl7.org/fhir/v2/0078",
    },
    /**
     * Code: POS
     */
    Positive: {
        display: "Positive",
        code: "POS",
        system: "http://hl7.org/fhir/v2/0078",
    },
    /**
     * Code: QCF
     */
    QualityControlFailure: {
        display: "Quality Control Failure",
        code: "QCF",
        system: "http://hl7.org/fhir/v2/0078",
    },
    /**
     * Code: R
     */
    Resistant: {
        display: "Resistant",
        code: "R",
        system: "http://hl7.org/fhir/v2/0078",
    },
    /**
     * Code: RR
     */
    Reactive: {
        display: "Reactive",
        code: "RR",
        system: "http://hl7.org/fhir/v2/0078",
    },
    /**
     * Code: S
     */
    Susceptible: {
        display: "Susceptible",
        code: "S",
        system: "http://hl7.org/fhir/v2/0078",
    },
    /**
     * Code: SDD
     */
    SusceptibleDoseDependent: {
        display: "Susceptible-dose dependent",
        code: "SDD",
        system: "http://hl7.org/fhir/v2/0078",
    },
    /**
     * Code: SYN-R
     */
    SynergyResistant: {
        display: "Synergy - resistant",
        code: "SYN-R",
        system: "http://hl7.org/fhir/v2/0078",
    },
    /**
     * Code: SYN-S
     */
    SynergySusceptible: {
        display: "Synergy - susceptible",
        code: "SYN-S",
        system: "http://hl7.org/fhir/v2/0078",
    },
    /**
     * Code: TOX
     */
    CytotoxicSubstancePresent: {
        display: "Cytotoxic substance present",
        code: "TOX",
        system: "http://hl7.org/fhir/v2/0078",
    },
    /**
     * Code: U
     */
    SignificantChangeUp: {
        display: "Significant change up",
        code: "U",
        system: "http://hl7.org/fhir/v2/0078",
    },
    /**
     * Code: VS
     */
    VerySusceptibleIndicatesForMicrobiologySusceptibilitiesOnly: {
        display: "Very susceptible. Indicates for microbiology susceptibilities only.",
        code: "VS",
        system: "http://hl7.org/fhir/v2/0078",
    },
    /**
     * Code: W
     */
    Worse: {
        display: "Worse",
        code: "W",
        system: "http://hl7.org/fhir/v2/0078",
    },
    /**
     * Code: WR
     */
    WeaklyReactive: {
        display: "Weakly reactive",
        code: "WR",
        system: "http://hl7.org/fhir/v2/0078",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiT2JzZXJ2YXRpb25JbnRlcnByZXRhdGlvbkNvZGluZ3MuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL09ic2VydmF0aW9uSW50ZXJwcmV0YXRpb25Db2RpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQiwrQ0FBK0M7QUFDL0Msa0NBQWtDO0FBQ2xDLCtFQUErRTtBQXNLL0U7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxnQ0FBZ0MsR0FBdUM7SUFDbEY7O09BRUc7SUFDSCxXQUFXLEVBQUU7UUFDWCxPQUFPLEVBQUUsZUFBZTtRQUN4QixJQUFJLEVBQUUsR0FBRztRQUNULE1BQU0sRUFBRSw2QkFBNkI7S0FDdEM7SUFDRDs7T0FFRztJQUNILFlBQVksRUFBRTtRQUNaLE9BQU8sRUFBRSxnQkFBZ0I7UUFDekIsSUFBSSxFQUFFLEdBQUc7UUFDVCxNQUFNLEVBQUUsNkJBQTZCO0tBQ3RDO0lBQ0Q7O09BRUc7SUFDSCxRQUFRLEVBQUU7UUFDUixPQUFPLEVBQUUsVUFBVTtRQUNuQixJQUFJLEVBQUUsR0FBRztRQUNULE1BQU0sRUFBRSw2QkFBNkI7S0FDdEM7SUFDRDs7T0FFRztJQUNILGtCQUFrQixFQUFFO1FBQ2xCLE9BQU8sRUFBRSxxQkFBcUI7UUFDOUIsSUFBSSxFQUFFLElBQUk7UUFDVixNQUFNLEVBQUUsNkJBQTZCO0tBQ3RDO0lBQ0Q7O09BRUc7SUFDSCxrQ0FBa0MsRUFBRTtRQUNsQyxPQUFPLEVBQUUsdUNBQXVDO1FBQ2hELElBQUksRUFBRSxJQUFJO1FBQ1YsTUFBTSxFQUFFLDZCQUE2QjtLQUN0QztJQUNEOztPQUVHO0lBQ0gsTUFBTSxFQUFFO1FBQ04sT0FBTyxFQUFFLFFBQVE7UUFDakIsSUFBSSxFQUFFLEdBQUc7UUFDVCxNQUFNLEVBQUUsNkJBQTZCO0tBQ3RDO0lBQ0Q7O09BRUc7SUFDSCxxQkFBcUIsRUFBRTtRQUNyQixPQUFPLEVBQUUseUJBQXlCO1FB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RUFBRSw2QkFBNkI7UUFDdEMsSUFBSSxFQUFFLEtBQUs7UUFDWCxNQUFNLEVBQUUsNkJBQTZCO0tBQ3RDO0lBQ0Q7O09BRUc7SUFDSCxtQkFBbUIsRUFBRTtRQUNuQixPQUFPLEVBQUUsdUJBQXVCO1FBQ2hDLElBQUksRUFBRSxHQUFHO1FBQ1QsTUFBTSxFQUFFLDZCQUE2QjtLQUN0QztJQUNEOztPQUVHO0lBQ0gsMkRBQTJELEVBQUU7UUFDM0QsT0FBTyxFQUFFLHFFQUFxRTtRQUM5RSxJQUFJLEVBQUUsSUFBSTtRQUNWLE1BQU0sRUFBRSw2QkFBNkI7S0FDdEM7SUFDRDs7T0FFRztJQUNILEtBQUssRUFBRTtRQUNMLE9BQU8sRUFBRSxPQUFPO1FBQ2hCLElBQUksRUFBRSxHQUFHO1FBQ1QsTUFBTSxFQUFFLDZCQUE2QjtLQUN0QztJQUNEOztPQUVHO0lBQ0gsY0FBYyxFQUFFO1FBQ2QsT0FBTyxFQUFFLGlCQUFpQjtRQUMxQixJQUFJLEVBQUUsSUFBSTtRQUNWLE1BQU0sRUFBRSw2QkFBNkI7S0FDdEM7Q0FDTyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnIzLmNvcmUgdmVyc2lvbjogMy4wLjJcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L29ic2VydmF0aW9uLWludGVycHJldGF0aW9ufDMuMC4yXHJcblxyXG5pbXBvcnQgeyBDb2RpbmdBcmdzIH0gZnJvbSAnLi4vZmhpci9Db2RpbmcuanMnXHJcblxyXG4vKipcclxuICogVGhpcyB2YWx1ZSBzZXQgZGVmaW5lcyB0aGUgc2V0IG9mIGNvZGVzIHRoYXQgY2FuIGJlIHVzZWQgdG8gaW5kaWNhdGUgdGhlIG1lYW5pbmcvdXNlIG9mIGEgcmVmZXJlbmNlIHJhbmdlLlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgT2JzZXJ2YXRpb25JbnRlcnByZXRhdGlvbkNvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogJmx0O1xyXG4gICAqL1xyXG4gIE9mZlNjYWxlTG93OiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6ICZndDtcclxuICAgKi9cclxuICBPZmZTY2FsZUhpZ2g6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogQVxyXG4gICAqL1xyXG4gIEFibm9ybWFsOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IEFBXHJcbiAgICovXHJcbiAgQ3JpdGljYWxseUFibm9ybWFsOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IEFDXHJcbiAgICovXHJcbiAgQW50aUNvbXBsZW1lbnRhcnlTdWJzdGFuY2VzUHJlc2VudDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiBCXHJcbiAgICovXHJcbiAgQmV0dGVyOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IERcclxuICAgKi9cclxuICBTaWduaWZpY2FudENoYW5nZURvd246IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogREVUXHJcbiAgICovXHJcbiAgRGV0ZWN0ZWQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogSFxyXG4gICAqL1xyXG4gIEhpZ2g6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogSEhcclxuICAgKi9cclxuICBDcml0aWNhbGx5SGlnaDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiBITVxyXG4gICAqL1xyXG4gIEhvbGRGb3JNZWRpY2FsUmV2aWV3OiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IEhVXHJcbiAgICovXHJcbiAgVmVyeUhpZ2g6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogSVxyXG4gICAqL1xyXG4gIEludGVybWVkaWF0ZTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiBJRVxyXG4gICAqL1xyXG4gIEluc3VmZmljaWVudEV2aWRlbmNlOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IElORFxyXG4gICAqL1xyXG4gIEluZGV0ZXJtaW5hdGU6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogTFxyXG4gICAqL1xyXG4gIExvdzogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiBMTFxyXG4gICAqL1xyXG4gIENyaXRpY2FsbHlMb3c6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogTFVcclxuICAgKi9cclxuICBWZXJ5TG93OiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IE1TXHJcbiAgICovXHJcbiAgTW9kZXJhdGVseVN1c2NlcHRpYmxlSW5kaWNhdGVzRm9yTWljcm9iaW9sb2d5U3VzY2VwdGliaWxpdGllc09ubHk6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogTlxyXG4gICAqL1xyXG4gIE5vcm1hbDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiBORFxyXG4gICAqL1xyXG4gIE5vdERldGVjdGVkOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IE5FR1xyXG4gICAqL1xyXG4gIE5lZ2F0aXZlOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IE5SXHJcbiAgICovXHJcbiAgTm9uUmVhY3RpdmU6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogTlNcclxuICAgKi9cclxuICBOb25TdXNjZXB0aWJsZTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiBudWxsXHJcbiAgICovXHJcbiAgTm9SYW5nZURlZmluZWRPck5vcm1hbFJhbmdlc0RvblF1b3RlVEFwcGx5OiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IE9CWFxyXG4gICAqL1xyXG4gIEludGVycHJldGF0aW9uUXVhbGlmaWVyc0luU2VwYXJhdGVPQlhTZWdtZW50czogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiBQT1NcclxuICAgKi9cclxuICBQb3NpdGl2ZTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiBRQ0ZcclxuICAgKi9cclxuICBRdWFsaXR5Q29udHJvbEZhaWx1cmU6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogUlxyXG4gICAqL1xyXG4gIFJlc2lzdGFudDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiBSUlxyXG4gICAqL1xyXG4gIFJlYWN0aXZlOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IFNcclxuICAgKi9cclxuICBTdXNjZXB0aWJsZTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiBTRERcclxuICAgKi9cclxuICBTdXNjZXB0aWJsZURvc2VEZXBlbmRlbnQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogU1lOLVJcclxuICAgKi9cclxuICBTeW5lcmd5UmVzaXN0YW50OiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IFNZTi1TXHJcbiAgICovXHJcbiAgU3luZXJneVN1c2NlcHRpYmxlOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IFRPWFxyXG4gICAqL1xyXG4gIEN5dG90b3hpY1N1YnN0YW5jZVByZXNlbnQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogVVxyXG4gICAqL1xyXG4gIFNpZ25pZmljYW50Q2hhbmdlVXA6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogVlNcclxuICAgKi9cclxuICBWZXJ5U3VzY2VwdGlibGVJbmRpY2F0ZXNGb3JNaWNyb2Jpb2xvZ3lTdXNjZXB0aWJpbGl0aWVzT25seTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiBXXHJcbiAgICovXHJcbiAgV29yc2U6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogV1JcclxuICAgKi9cclxuICBXZWFrbHlSZWFjdGl2ZTogQ29kaW5nQXJncztcclxufVxyXG5cclxuLyoqXHJcbiAqIFRoaXMgdmFsdWUgc2V0IGRlZmluZXMgdGhlIHNldCBvZiBjb2RlcyB0aGF0IGNhbiBiZSB1c2VkIHRvIGluZGljYXRlIHRoZSBtZWFuaW5nL3VzZSBvZiBhIHJlZmVyZW5jZSByYW5nZS5cclxuICovXHJcbmV4cG9ydCBjb25zdCBPYnNlcnZhdGlvbkludGVycHJldGF0aW9uQ29kaW5nczpPYnNlcnZhdGlvbkludGVycHJldGF0aW9uQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBDb2RlOiAmbHQ7XHJcbiAgICovXHJcbiAgT2ZmU2NhbGVMb3c6IHtcclxuICAgIGRpc3BsYXk6IFwiT2ZmIHNjYWxlIGxvd1wiLFxyXG4gICAgY29kZTogXCI8XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci92Mi8wMDc4XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiAmZ3Q7XHJcbiAgICovXHJcbiAgT2ZmU2NhbGVIaWdoOiB7XHJcbiAgICBkaXNwbGF5OiBcIk9mZiBzY2FsZSBoaWdoXCIsXHJcbiAgICBjb2RlOiBcIj5cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3YyLzAwNzhcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IEFcclxuICAgKi9cclxuICBBYm5vcm1hbDoge1xyXG4gICAgZGlzcGxheTogXCJBYm5vcm1hbFwiLFxyXG4gICAgY29kZTogXCJBXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci92Mi8wMDc4XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiBBQVxyXG4gICAqL1xyXG4gIENyaXRpY2FsbHlBYm5vcm1hbDoge1xyXG4gICAgZGlzcGxheTogXCJDcml0aWNhbGx5IGFibm9ybWFsXCIsXHJcbiAgICBjb2RlOiBcIkFBXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci92Mi8wMDc4XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiBBQ1xyXG4gICAqL1xyXG4gIEFudGlDb21wbGVtZW50YXJ5U3Vic3RhbmNlc1ByZXNlbnQ6IHtcclxuICAgIGRpc3BsYXk6IFwiQW50aS1jb21wbGVtZW50YXJ5IHN1YnN0YW5jZXMgcHJlc2VudFwiLFxyXG4gICAgY29kZTogXCJBQ1wiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvdjIvMDA3OFwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogQlxyXG4gICAqL1xyXG4gIEJldHRlcjoge1xyXG4gICAgZGlzcGxheTogXCJCZXR0ZXJcIixcclxuICAgIGNvZGU6IFwiQlwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvdjIvMDA3OFwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogRFxyXG4gICAqL1xyXG4gIFNpZ25pZmljYW50Q2hhbmdlRG93bjoge1xyXG4gICAgZGlzcGxheTogXCJTaWduaWZpY2FudCBjaGFuZ2UgZG93blwiLFxyXG4gICAgY29kZTogXCJEXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci92Mi8wMDc4XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiBERVRcclxuICAgKi9cclxuICBEZXRlY3RlZDoge1xyXG4gICAgZGlzcGxheTogXCJEZXRlY3RlZFwiLFxyXG4gICAgY29kZTogXCJERVRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3YyLzAwNzhcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IEhcclxuICAgKi9cclxuICBIaWdoOiB7XHJcbiAgICBkaXNwbGF5OiBcIkhpZ2hcIixcclxuICAgIGNvZGU6IFwiSFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvdjIvMDA3OFwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogSEhcclxuICAgKi9cclxuICBDcml0aWNhbGx5SGlnaDoge1xyXG4gICAgZGlzcGxheTogXCJDcml0aWNhbGx5IGhpZ2hcIixcclxuICAgIGNvZGU6IFwiSEhcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3YyLzAwNzhcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IEhNXHJcbiAgICovXHJcbiAgSG9sZEZvck1lZGljYWxSZXZpZXc6IHtcclxuICAgIGRpc3BsYXk6IFwiSG9sZCBmb3IgTWVkaWNhbCBSZXZpZXdcIixcclxuICAgIGNvZGU6IFwiSE1cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3YyLzAwNzhcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IEhVXHJcbiAgICovXHJcbiAgVmVyeUhpZ2g6IHtcclxuICAgIGRpc3BsYXk6IFwiVmVyeSBoaWdoXCIsXHJcbiAgICBjb2RlOiBcIkhVXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci92Mi8wMDc4XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiBJXHJcbiAgICovXHJcbiAgSW50ZXJtZWRpYXRlOiB7XHJcbiAgICBkaXNwbGF5OiBcIkludGVybWVkaWF0ZVwiLFxyXG4gICAgY29kZTogXCJJXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci92Mi8wMDc4XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiBJRVxyXG4gICAqL1xyXG4gIEluc3VmZmljaWVudEV2aWRlbmNlOiB7XHJcbiAgICBkaXNwbGF5OiBcIkluc3VmZmljaWVudCBldmlkZW5jZVwiLFxyXG4gICAgY29kZTogXCJJRVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvdjIvMDA3OFwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogSU5EXHJcbiAgICovXHJcbiAgSW5kZXRlcm1pbmF0ZToge1xyXG4gICAgZGlzcGxheTogXCJJbmRldGVybWluYXRlXCIsXHJcbiAgICBjb2RlOiBcIklORFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvdjIvMDA3OFwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogTFxyXG4gICAqL1xyXG4gIExvdzoge1xyXG4gICAgZGlzcGxheTogXCJMb3dcIixcclxuICAgIGNvZGU6IFwiTFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvdjIvMDA3OFwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogTExcclxuICAgKi9cclxuICBDcml0aWNhbGx5TG93OiB7XHJcbiAgICBkaXNwbGF5OiBcIkNyaXRpY2FsbHkgbG93XCIsXHJcbiAgICBjb2RlOiBcIkxMXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci92Mi8wMDc4XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiBMVVxyXG4gICAqL1xyXG4gIFZlcnlMb3c6IHtcclxuICAgIGRpc3BsYXk6IFwiVmVyeSBsb3dcIixcclxuICAgIGNvZGU6IFwiTFVcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3YyLzAwNzhcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IE1TXHJcbiAgICovXHJcbiAgTW9kZXJhdGVseVN1c2NlcHRpYmxlSW5kaWNhdGVzRm9yTWljcm9iaW9sb2d5U3VzY2VwdGliaWxpdGllc09ubHk6IHtcclxuICAgIGRpc3BsYXk6IFwiTW9kZXJhdGVseSBzdXNjZXB0aWJsZS4gSW5kaWNhdGVzIGZvciBtaWNyb2Jpb2xvZ3kgc3VzY2VwdGliaWxpdGllcyBvbmx5LlwiLFxyXG4gICAgY29kZTogXCJNU1wiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvdjIvMDA3OFwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogTlxyXG4gICAqL1xyXG4gIE5vcm1hbDoge1xyXG4gICAgZGlzcGxheTogXCJOb3JtYWxcIixcclxuICAgIGNvZGU6IFwiTlwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvdjIvMDA3OFwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogTkRcclxuICAgKi9cclxuICBOb3REZXRlY3RlZDoge1xyXG4gICAgZGlzcGxheTogXCJOb3QgRGV0ZWN0ZWRcIixcclxuICAgIGNvZGU6IFwiTkRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3YyLzAwNzhcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IE5FR1xyXG4gICAqL1xyXG4gIE5lZ2F0aXZlOiB7XHJcbiAgICBkaXNwbGF5OiBcIk5lZ2F0aXZlXCIsXHJcbiAgICBjb2RlOiBcIk5FR1wiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvdjIvMDA3OFwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogTlJcclxuICAgKi9cclxuICBOb25SZWFjdGl2ZToge1xyXG4gICAgZGlzcGxheTogXCJOb24tcmVhY3RpdmVcIixcclxuICAgIGNvZGU6IFwiTlJcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3YyLzAwNzhcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IE5TXHJcbiAgICovXHJcbiAgTm9uU3VzY2VwdGlibGU6IHtcclxuICAgIGRpc3BsYXk6IFwiTm9uLXN1c2NlcHRpYmxlXCIsXHJcbiAgICBjb2RlOiBcIk5TXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci92Mi8wMDc4XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiBudWxsXHJcbiAgICovXHJcbiAgTm9SYW5nZURlZmluZWRPck5vcm1hbFJhbmdlc0RvblF1b3RlVEFwcGx5OiB7XHJcbiAgICBkaXNwbGF5OiBcIk5vIHJhbmdlIGRlZmluZWQsIG9yIG5vcm1hbCByYW5nZXMgZG9uJ3QgYXBwbHlcIixcclxuICAgIGNvZGU6IFwibnVsbFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvdjIvMDA3OFwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogT0JYXHJcbiAgICovXHJcbiAgSW50ZXJwcmV0YXRpb25RdWFsaWZpZXJzSW5TZXBhcmF0ZU9CWFNlZ21lbnRzOiB7XHJcbiAgICBkaXNwbGF5OiBcIkludGVycHJldGF0aW9uIHF1YWxpZmllcnMgaW4gc2VwYXJhdGUgT0JYIHNlZ21lbnRzXCIsXHJcbiAgICBjb2RlOiBcIk9CWFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvdjIvMDA3OFwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogUE9TXHJcbiAgICovXHJcbiAgUG9zaXRpdmU6IHtcclxuICAgIGRpc3BsYXk6IFwiUG9zaXRpdmVcIixcclxuICAgIGNvZGU6IFwiUE9TXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci92Mi8wMDc4XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiBRQ0ZcclxuICAgKi9cclxuICBRdWFsaXR5Q29udHJvbEZhaWx1cmU6IHtcclxuICAgIGRpc3BsYXk6IFwiUXVhbGl0eSBDb250cm9sIEZhaWx1cmVcIixcclxuICAgIGNvZGU6IFwiUUNGXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci92Mi8wMDc4XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiBSXHJcbiAgICovXHJcbiAgUmVzaXN0YW50OiB7XHJcbiAgICBkaXNwbGF5OiBcIlJlc2lzdGFudFwiLFxyXG4gICAgY29kZTogXCJSXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci92Mi8wMDc4XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiBSUlxyXG4gICAqL1xyXG4gIFJlYWN0aXZlOiB7XHJcbiAgICBkaXNwbGF5OiBcIlJlYWN0aXZlXCIsXHJcbiAgICBjb2RlOiBcIlJSXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci92Mi8wMDc4XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiBTXHJcbiAgICovXHJcbiAgU3VzY2VwdGlibGU6IHtcclxuICAgIGRpc3BsYXk6IFwiU3VzY2VwdGlibGVcIixcclxuICAgIGNvZGU6IFwiU1wiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvdjIvMDA3OFwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogU0REXHJcbiAgICovXHJcbiAgU3VzY2VwdGlibGVEb3NlRGVwZW5kZW50OiB7XHJcbiAgICBkaXNwbGF5OiBcIlN1c2NlcHRpYmxlLWRvc2UgZGVwZW5kZW50XCIsXHJcbiAgICBjb2RlOiBcIlNERFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvdjIvMDA3OFwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogU1lOLVJcclxuICAgKi9cclxuICBTeW5lcmd5UmVzaXN0YW50OiB7XHJcbiAgICBkaXNwbGF5OiBcIlN5bmVyZ3kgLSByZXNpc3RhbnRcIixcclxuICAgIGNvZGU6IFwiU1lOLVJcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3YyLzAwNzhcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IFNZTi1TXHJcbiAgICovXHJcbiAgU3luZXJneVN1c2NlcHRpYmxlOiB7XHJcbiAgICBkaXNwbGF5OiBcIlN5bmVyZ3kgLSBzdXNjZXB0aWJsZVwiLFxyXG4gICAgY29kZTogXCJTWU4tU1wiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvdjIvMDA3OFwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogVE9YXHJcbiAgICovXHJcbiAgQ3l0b3RveGljU3Vic3RhbmNlUHJlc2VudDoge1xyXG4gICAgZGlzcGxheTogXCJDeXRvdG94aWMgc3Vic3RhbmNlIHByZXNlbnRcIixcclxuICAgIGNvZGU6IFwiVE9YXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci92Mi8wMDc4XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiBVXHJcbiAgICovXHJcbiAgU2lnbmlmaWNhbnRDaGFuZ2VVcDoge1xyXG4gICAgZGlzcGxheTogXCJTaWduaWZpY2FudCBjaGFuZ2UgdXBcIixcclxuICAgIGNvZGU6IFwiVVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvdjIvMDA3OFwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogVlNcclxuICAgKi9cclxuICBWZXJ5U3VzY2VwdGlibGVJbmRpY2F0ZXNGb3JNaWNyb2Jpb2xvZ3lTdXNjZXB0aWJpbGl0aWVzT25seToge1xyXG4gICAgZGlzcGxheTogXCJWZXJ5IHN1c2NlcHRpYmxlLiBJbmRpY2F0ZXMgZm9yIG1pY3JvYmlvbG9neSBzdXNjZXB0aWJpbGl0aWVzIG9ubHkuXCIsXHJcbiAgICBjb2RlOiBcIlZTXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci92Mi8wMDc4XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiBXXHJcbiAgICovXHJcbiAgV29yc2U6IHtcclxuICAgIGRpc3BsYXk6IFwiV29yc2VcIixcclxuICAgIGNvZGU6IFwiV1wiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvdjIvMDA3OFwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogV1JcclxuICAgKi9cclxuICBXZWFrbHlSZWFjdGl2ZToge1xyXG4gICAgZGlzcGxheTogXCJXZWFrbHkgcmVhY3RpdmVcIixcclxuICAgIGNvZGU6IFwiV1JcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3YyLzAwNzhcIixcclxuICB9LFxyXG59IGFzIGNvbnN0O1xyXG4iXX0=