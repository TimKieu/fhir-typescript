// <auto-generated/>
// Contents of: hl7.fhir.r3.core version: 3.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/research-study-status|3.0.2
/**
 * Codes that convey the current status of the research study
 */
export const ResearchStudyStatusCodings = {
    /**
     * completed: The information sought by the study has been gathered and compiled and no further work is being performed
     */
    Completed: {
        display: "Completed",
        code: "completed",
        system: "http://hl7.org/fhir/research-study-status",
    },
    /**
     * draft: The study is undergoing design but the process of selecting study subjects and capturing data has not yet begun.
     */
    Draft: {
        display: "Draft",
        code: "draft",
        system: "http://hl7.org/fhir/research-study-status",
    },
    /**
     * entered-in-error: This study never actually existed.  The record is retained for tracking purposes in the event decisions may have been made based on this erroneous information.
     */
    EnteredInError: {
        display: "Entered in error",
        code: "entered-in-error",
        system: "http://hl7.org/fhir/research-study-status",
    },
    /**
     * in-progress: The study is currently being executed
     */
    InProgress: {
        display: "In-progress",
        code: "in-progress",
        system: "http://hl7.org/fhir/research-study-status",
    },
    /**
     * stopped: The study was terminated prior to the final determination of results
     */
    Stopped: {
        display: "Stopped",
        code: "stopped",
        system: "http://hl7.org/fhir/research-study-status",
    },
    /**
     * suspended: Execution of the study has been temporarily paused
     */
    Suspended: {
        display: "Suspended",
        code: "suspended",
        system: "http://hl7.org/fhir/research-study-status",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVzZWFyY2hTdHVkeVN0YXR1c0NvZGluZ3MuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL1Jlc2VhcmNoU3R1ZHlTdGF0dXNDb2RpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQiwrQ0FBK0M7QUFDL0Msa0NBQWtDO0FBQ2xDLDBFQUEwRTtBQWtDMUU7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSwwQkFBMEIsR0FBaUM7SUFDdEU7O09BRUc7SUFDSCxTQUFTLEVBQUU7UUFDVCxPQUFPLEVBQUUsV0FBVztRQUNwQixJQUFJLEVBQUUsV0FBVztRQUNqQixNQUFNLEVBQUUsMkNBQTJDO0tBQ3BEO0lBQ0Q7O09BRUc7SUFDSCxLQUFLLEVBQUU7UUFDTCxPQUFPLEVBQUUsT0FBTztRQUNoQixJQUFJLEVBQUUsT0FBTztRQUNiLE1BQU0sRUFBRSwyQ0FBMkM7S0FDcEQ7SUFDRDs7T0FFRztJQUNILGNBQWMsRUFBRTtRQUNkLE9BQU8sRUFBRSxrQkFBa0I7UUFDM0IsSUFBSSxFQUFFLGtCQUFrQjtRQUN4QixNQUFNLEVBQUUsMkNBQTJDO0tBQ3BEO0lBQ0Q7O09BRUc7SUFDSCxVQUFVLEVBQUU7UUFDVixPQUFPLEVBQUUsYUFBYTtRQUN0QixJQUFJLEVBQUUsYUFBYTtRQUNuQixNQUFNLEVBQUUsMkNBQTJDO0tBQ3BEO0lBQ0Q7O09BRUc7SUFDSCxPQUFPLEVBQUU7UUFDUCxPQUFPLEVBQUUsU0FBUztRQUNsQixJQUFJLEVBQUUsU0FBUztRQUNmLE1BQU0sRUFBRSwyQ0FBMkM7S0FDcEQ7SUFDRDs7T0FFRztJQUNILFNBQVMsRUFBRTtRQUNULE9BQU8sRUFBRSxXQUFXO1FBQ3BCLElBQUksRUFBRSxXQUFXO1FBQ2pCLE1BQU0sRUFBRSwyQ0FBMkM7S0FDcEQ7Q0FDTyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnIzLmNvcmUgdmVyc2lvbjogMy4wLjJcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L3Jlc2VhcmNoLXN0dWR5LXN0YXR1c3wzLjAuMlxyXG5cclxuaW1wb3J0IHsgQ29kaW5nQXJncyB9IGZyb20gJy4uL2ZoaXIvQ29kaW5nLmpzJ1xyXG5cclxuLyoqXHJcbiAqIENvZGVzIHRoYXQgY29udmV5IHRoZSBjdXJyZW50IHN0YXR1cyBvZiB0aGUgcmVzZWFyY2ggc3R1ZHlcclxuICovXHJcbmV4cG9ydCB0eXBlIFJlc2VhcmNoU3R1ZHlTdGF0dXNDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIGNvbXBsZXRlZDogVGhlIGluZm9ybWF0aW9uIHNvdWdodCBieSB0aGUgc3R1ZHkgaGFzIGJlZW4gZ2F0aGVyZWQgYW5kIGNvbXBpbGVkIGFuZCBubyBmdXJ0aGVyIHdvcmsgaXMgYmVpbmcgcGVyZm9ybWVkXHJcbiAgICovXHJcbiAgQ29tcGxldGVkOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIGRyYWZ0OiBUaGUgc3R1ZHkgaXMgdW5kZXJnb2luZyBkZXNpZ24gYnV0IHRoZSBwcm9jZXNzIG9mIHNlbGVjdGluZyBzdHVkeSBzdWJqZWN0cyBhbmQgY2FwdHVyaW5nIGRhdGEgaGFzIG5vdCB5ZXQgYmVndW4uXHJcbiAgICovXHJcbiAgRHJhZnQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogZW50ZXJlZC1pbi1lcnJvcjogVGhpcyBzdHVkeSBuZXZlciBhY3R1YWxseSBleGlzdGVkLiAgVGhlIHJlY29yZCBpcyByZXRhaW5lZCBmb3IgdHJhY2tpbmcgcHVycG9zZXMgaW4gdGhlIGV2ZW50IGRlY2lzaW9ucyBtYXkgaGF2ZSBiZWVuIG1hZGUgYmFzZWQgb24gdGhpcyBlcnJvbmVvdXMgaW5mb3JtYXRpb24uXHJcbiAgICovXHJcbiAgRW50ZXJlZEluRXJyb3I6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogaW4tcHJvZ3Jlc3M6IFRoZSBzdHVkeSBpcyBjdXJyZW50bHkgYmVpbmcgZXhlY3V0ZWRcclxuICAgKi9cclxuICBJblByb2dyZXNzOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIHN0b3BwZWQ6IFRoZSBzdHVkeSB3YXMgdGVybWluYXRlZCBwcmlvciB0byB0aGUgZmluYWwgZGV0ZXJtaW5hdGlvbiBvZiByZXN1bHRzXHJcbiAgICovXHJcbiAgU3RvcHBlZDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBzdXNwZW5kZWQ6IEV4ZWN1dGlvbiBvZiB0aGUgc3R1ZHkgaGFzIGJlZW4gdGVtcG9yYXJpbHkgcGF1c2VkXHJcbiAgICovXHJcbiAgU3VzcGVuZGVkOiBDb2RpbmdBcmdzO1xyXG59XHJcblxyXG4vKipcclxuICogQ29kZXMgdGhhdCBjb252ZXkgdGhlIGN1cnJlbnQgc3RhdHVzIG9mIHRoZSByZXNlYXJjaCBzdHVkeVxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IFJlc2VhcmNoU3R1ZHlTdGF0dXNDb2RpbmdzOlJlc2VhcmNoU3R1ZHlTdGF0dXNDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIGNvbXBsZXRlZDogVGhlIGluZm9ybWF0aW9uIHNvdWdodCBieSB0aGUgc3R1ZHkgaGFzIGJlZW4gZ2F0aGVyZWQgYW5kIGNvbXBpbGVkIGFuZCBubyBmdXJ0aGVyIHdvcmsgaXMgYmVpbmcgcGVyZm9ybWVkXHJcbiAgICovXHJcbiAgQ29tcGxldGVkOiB7XHJcbiAgICBkaXNwbGF5OiBcIkNvbXBsZXRlZFwiLFxyXG4gICAgY29kZTogXCJjb21wbGV0ZWRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc2VhcmNoLXN0dWR5LXN0YXR1c1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogZHJhZnQ6IFRoZSBzdHVkeSBpcyB1bmRlcmdvaW5nIGRlc2lnbiBidXQgdGhlIHByb2Nlc3Mgb2Ygc2VsZWN0aW5nIHN0dWR5IHN1YmplY3RzIGFuZCBjYXB0dXJpbmcgZGF0YSBoYXMgbm90IHlldCBiZWd1bi5cclxuICAgKi9cclxuICBEcmFmdDoge1xyXG4gICAgZGlzcGxheTogXCJEcmFmdFwiLFxyXG4gICAgY29kZTogXCJkcmFmdFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVzZWFyY2gtc3R1ZHktc3RhdHVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBlbnRlcmVkLWluLWVycm9yOiBUaGlzIHN0dWR5IG5ldmVyIGFjdHVhbGx5IGV4aXN0ZWQuICBUaGUgcmVjb3JkIGlzIHJldGFpbmVkIGZvciB0cmFja2luZyBwdXJwb3NlcyBpbiB0aGUgZXZlbnQgZGVjaXNpb25zIG1heSBoYXZlIGJlZW4gbWFkZSBiYXNlZCBvbiB0aGlzIGVycm9uZW91cyBpbmZvcm1hdGlvbi5cclxuICAgKi9cclxuICBFbnRlcmVkSW5FcnJvcjoge1xyXG4gICAgZGlzcGxheTogXCJFbnRlcmVkIGluIGVycm9yXCIsXHJcbiAgICBjb2RlOiBcImVudGVyZWQtaW4tZXJyb3JcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc2VhcmNoLXN0dWR5LXN0YXR1c1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogaW4tcHJvZ3Jlc3M6IFRoZSBzdHVkeSBpcyBjdXJyZW50bHkgYmVpbmcgZXhlY3V0ZWRcclxuICAgKi9cclxuICBJblByb2dyZXNzOiB7XHJcbiAgICBkaXNwbGF5OiBcIkluLXByb2dyZXNzXCIsXHJcbiAgICBjb2RlOiBcImluLXByb2dyZXNzXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNlYXJjaC1zdHVkeS1zdGF0dXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIHN0b3BwZWQ6IFRoZSBzdHVkeSB3YXMgdGVybWluYXRlZCBwcmlvciB0byB0aGUgZmluYWwgZGV0ZXJtaW5hdGlvbiBvZiByZXN1bHRzXHJcbiAgICovXHJcbiAgU3RvcHBlZDoge1xyXG4gICAgZGlzcGxheTogXCJTdG9wcGVkXCIsXHJcbiAgICBjb2RlOiBcInN0b3BwZWRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc2VhcmNoLXN0dWR5LXN0YXR1c1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogc3VzcGVuZGVkOiBFeGVjdXRpb24gb2YgdGhlIHN0dWR5IGhhcyBiZWVuIHRlbXBvcmFyaWx5IHBhdXNlZFxyXG4gICAqL1xyXG4gIFN1c3BlbmRlZDoge1xyXG4gICAgZGlzcGxheTogXCJTdXNwZW5kZWRcIixcclxuICAgIGNvZGU6IFwic3VzcGVuZGVkXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNlYXJjaC1zdHVkeS1zdGF0dXNcIixcclxuICB9LFxyXG59IGFzIGNvbnN0O1xyXG4iXX0=