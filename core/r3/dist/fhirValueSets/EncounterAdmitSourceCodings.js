// <auto-generated/>
// Contents of: hl7.fhir.r3.core version: 3.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/encounter-admit-source|3.0.2
/**
 * This value set defines a set of codes that can be used to indicate from where the patient came in.
 */
export const EncounterAdmitSourceCodings = {
    /**
     * born: The patient is a newborn and the encounter will track the baby related activities (as opposed to the Mothers encounter - that may be associated using the newborn encounters partof property)
     */
    BornInHospital: {
        display: "Born in hospital",
        code: "born",
        system: "http://hl7.org/fhir/admit-source",
    },
    /**
     * emd: The patient has been transferred from the emergency department within the hospital. This is typically used in the transition to an inpatient encounter
     */
    FromAccidentEmergencyDepartment: {
        display: "From accident/emergency department",
        code: "emd",
        system: "http://hl7.org/fhir/admit-source",
    },
    /**
     * gp: The patient has been admitted due to a referred from a General Practitioner.
     */
    GeneralPractitionerReferral: {
        display: "General Practitioner referral",
        code: "gp",
        system: "http://hl7.org/fhir/admit-source",
    },
    /**
     * hosp-trans: The Patient has been transferred from another hospital for this encounter.
     */
    TransferredFromOtherHospital: {
        display: "Transferred from other hospital",
        code: "hosp-trans",
        system: "http://hl7.org/fhir/admit-source",
    },
    /**
     * mp: The patient has been admitted due to a referred from a Specialist (as opposed to a General Practitioner).
     */
    MedicalPractitionerPhysicianReferral: {
        display: "Medical Practitioner/physician referral",
        code: "mp",
        system: "http://hl7.org/fhir/admit-source",
    },
    /**
     * nursing: The patient has been transferred from a nursing home.
     */
    FromNursingHome: {
        display: "From nursing home",
        code: "nursing",
        system: "http://hl7.org/fhir/admit-source",
    },
    /**
     * other: The patient has been admitted from a source otherwise not specified here.
     */
    Other: {
        display: "Other",
        code: "other",
        system: "http://hl7.org/fhir/admit-source",
    },
    /**
     * outp: The patient has been transferred from an outpatient department within the hospital.
     */
    FromOutpatientDepartment: {
        display: "From outpatient department",
        code: "outp",
        system: "http://hl7.org/fhir/admit-source",
    },
    /**
     * psych: The patient has been transferred from a psychiatric facility.
     */
    FromPsychiatricHospital: {
        display: "From psychiatric hospital",
        code: "psych",
        system: "http://hl7.org/fhir/admit-source",
    },
    /**
     * rehab: The patient has been transferred from a rehabilitiation facility or clinic.
     */
    FromRehabilitationFacility: {
        display: "From rehabilitation facility",
        code: "rehab",
        system: "http://hl7.org/fhir/admit-source",
    },
};
//# sourceMappingURL=data:application/json;base64,