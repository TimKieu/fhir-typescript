// <auto-generated/>
// Contents of: hl7.fhir.r3.core version: 3.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/specimen-collection-method|3.0.2
/**
 *  This example value set defines a set of codes that can be used to indicate the method of collection of a specimen. It includes values from HL7 v2 table 0048.
 */
export const SpecimenCollectionMethodCodes = {
    /**
     * Code: 119295008
     */
    SpecimenObtainedByAspiration: "119295008",
    /**
     * Code: 16404004
     */
    Induced: "16404004",
    /**
     * Code: 20255002
     */
    Blushing: "20255002",
    /**
     * Code: 258431006
     */
    Scrapings: "258431006",
    /**
     * Code: 278450005
     */
    FingerStick: "278450005",
    /**
     * Code: 29240004
     */
    AutopsyExamination: "29240004",
    /**
     * Code: 360020006
     */
    ExtirpationAction: "360020006",
    /**
     * Code: 386147002
     */
    SmearProcedure: "386147002",
    /**
     * Code: 413651001
     */
    Bioptics: "413651001",
    /**
     * Code: 430823004
     */
    ExaminationOfMidstreamUrineSpecimen: "430823004",
    /**
     * Code: 45710003
     */
    Sputum: "45710003",
    /**
     * Code: 67889009
     */
    Irrigation: "67889009",
    /**
     * Code: 7800008
     */
    Punctate: "7800008",
    /**
     * Code: ANP
     */
    PlatesAnaerobic: "ANP",
    /**
     * Code: BAP
     */
    PlatesBloodAgar: "BAP",
    /**
     * Code: BCAE
     */
    BloodCultureAerobicBottle: "BCAE",
    /**
     * Code: BCAN
     */
    BloodCultureAnaerobicBottle: "BCAN",
    /**
     * Code: BCPD
     */
    BloodCulturePediatricBottle: "BCPD",
    /**
     * Code: BIO
     */
    Biopsy: "BIO",
    /**
     * Code: CAP
     */
    CapillarySpecimen: "CAP",
    /**
     * Code: CATH
     */
    Catheterized: "CATH",
    /**
     * Code: CVP
     */
    LineCVP: "CVP",
    /**
     * Code: EPLA
     */
    EnvironmentalPlate: "EPLA",
    /**
     * Code: ESWA
     */
    EnvironmentalSwab: "ESWA",
    /**
     * Code: FNA
     */
    AspirationFineNeedle: "FNA",
    /**
     * Code: KOFFP
     */
    PlateCough: "KOFFP",
    /**
     * Code: LNA
     */
    LineArterial: "LNA",
    /**
     * Code: LNV
     */
    LineVenous: "LNV",
    /**
     * Code: MARTL
     */
    MartinLewisAgar: "MARTL",
    /**
     * Code: ML11
     */
    ModMartinLewisAgar: "ML11",
    /**
     * Code: MLP
     */
    PlateMartinLewis: "MLP",
    /**
     * Code: NYP
     */
    PlateNewYorkCity: "NYP",
    /**
     * Code: PACE
     */
    PaceGenProbe: "PACE",
    /**
     * Code: PIN
     */
    PinwormPrep: "PIN",
    /**
     * Code: PNA
     */
    ArterialPuncture: "PNA",
    /**
     * Code: PRIME
     */
    PumpPrime: "PRIME",
    /**
     * Code: PUMP
     */
    PumpSpecimen: "PUMP",
    /**
     * Code: QC5
     */
    QualityControlForMicro: "QC5",
    /**
     * Code: SCLP
     */
    ScalpFetalVein: "SCLP",
    /**
     * Code: SCRAPS
     */
    ScrapingsSCRAPS: "SCRAPS",
    /**
     * Code: SHA
     */
    Shaving: "SHA",
    /**
     * Code: SWA
     */
    Swab: "SWA",
    /**
     * Code: SWD
     */
    SwabDacronTipped: "SWD",
    /**
     * Code: TMAN
     */
    TransportMediaAnaerobic: "TMAN",
    /**
     * Code: TMCH
     */
    TransportMediaChalamydia: "TMCH",
    /**
     * Code: TMM4
     */
    TransportMediaM4: "TMM4",
    /**
     * Code: TMMY
     */
    TransportMediaMycoplasma: "TMMY",
    /**
     * Code: TMOT
     */
    TransportMedia: "TMOT",
    /**
     * Code: TMP
     */
    PlateThayerMartin: "TMP",
    /**
     * Code: TMPV
     */
    TransportMediaPVA: "TMPV",
    /**
     * Code: TMSC
     */
    TransportMediaStoolCulture: "TMSC",
    /**
     * Code: TMUP
     */
    TransportMediaUreaplasma: "TMUP",
    /**
     * Code: TMVI
     */
    TransportMediaViral: "TMVI",
    /**
     * Code: VENIP
     */
    Venipuncture: "VENIP",
    /**
     * Code: WOOD
     */
    SwabWoodenShaft: "WOOD",
};
//# sourceMappingURL=data:application/json;base64,