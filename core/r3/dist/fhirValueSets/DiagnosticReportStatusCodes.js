// <auto-generated/>
// Contents of: hl7.fhir.r3.core version: 3.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/diagnostic-report-status|3.0.2
/**
 * The status of the diagnostic report as a whole.
 */
export const DiagnosticReportStatusCodes = {
    /**
     * amended: Subsequent to being final, the report has been modified.  This includes any change in the results, diagnosis, narrative text, or other content of a report that has been issued.
     */
    Amended: "amended",
    /**
     * appended: Subsequent to being final, the report has been modified by adding new content. The existing content is unchanged.
     */
    Appended: "appended",
    /**
     * cancelled: The report is unavailable because the measurement was not started or not completed (also sometimes called "aborted").
     */
    Cancelled: "cancelled",
    /**
     * corrected: Subsequent to being final, the report has been modified  to correct an error in the report or referenced results.
     */
    Corrected: "corrected",
    /**
     * entered-in-error: The report has been withdrawn following a previous final release.  This electronic record should never have existed, though it is possible that real-world decisions were based on it. (If real-world activity has occurred, the status should be "cancelled" rather than "entered-in-error".)
     */
    EnteredInError: "entered-in-error",
    /**
     * final: The report is complete and verified by an authorized person.
     */
    Final: "final",
    /**
     * partial: This is a partial (e.g. initial, interim or preliminary) report: data in the report may be incomplete or unverified.
     */
    Partial: "partial",
    /**
     * preliminary: Verified early results are available, but not all  results are final.
     */
    Preliminary: "preliminary",
    /**
     * registered: The existence of the report is registered, but there is nothing yet available.
     */
    Registered: "registered",
    /**
     * unknown: The authoring system does not know which of the status values currently applies for this request. Note: This concept is not to be used for "other" - one of the listed statuses is presumed to apply, it's just not known which one.
     */
    Unknown: "unknown",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGlhZ25vc3RpY1JlcG9ydFN0YXR1c0NvZGVzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9EaWFnbm9zdGljUmVwb3J0U3RhdHVzQ29kZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLCtDQUErQztBQUMvQyxrQ0FBa0M7QUFDbEMsNkVBQTZFO0FBRTdFOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sMkJBQTJCLEdBQUc7SUFDekM7O09BRUc7SUFDSCxPQUFPLEVBQUUsU0FBUztJQUNsQjs7T0FFRztJQUNILFFBQVEsRUFBRSxVQUFVO0lBQ3BCOztPQUVHO0lBQ0gsU0FBUyxFQUFFLFdBQVc7SUFDdEI7O09BRUc7SUFDSCxTQUFTLEVBQUUsV0FBVztJQUN0Qjs7T0FFRztJQUNILGNBQWMsRUFBRSxrQkFBa0I7SUFDbEM7O09BRUc7SUFDSCxLQUFLLEVBQUUsT0FBTztJQUNkOztPQUVHO0lBQ0gsT0FBTyxFQUFFLFNBQVM7SUFDbEI7O09BRUc7SUFDSCxXQUFXLEVBQUUsYUFBYTtJQUMxQjs7T0FFRztJQUNILFVBQVUsRUFBRSxZQUFZO0lBQ3hCOztPQUVHO0lBQ0gsT0FBTyxFQUFFLFNBQVM7Q0FDVixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnIzLmNvcmUgdmVyc2lvbjogMy4wLjJcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L2RpYWdub3N0aWMtcmVwb3J0LXN0YXR1c3wzLjAuMlxyXG5cclxuLyoqXHJcbiAqIFRoZSBzdGF0dXMgb2YgdGhlIGRpYWdub3N0aWMgcmVwb3J0IGFzIGEgd2hvbGUuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgRGlhZ25vc3RpY1JlcG9ydFN0YXR1c0NvZGVzID0ge1xyXG4gIC8qKlxyXG4gICAqIGFtZW5kZWQ6IFN1YnNlcXVlbnQgdG8gYmVpbmcgZmluYWwsIHRoZSByZXBvcnQgaGFzIGJlZW4gbW9kaWZpZWQuICBUaGlzIGluY2x1ZGVzIGFueSBjaGFuZ2UgaW4gdGhlIHJlc3VsdHMsIGRpYWdub3NpcywgbmFycmF0aXZlIHRleHQsIG9yIG90aGVyIGNvbnRlbnQgb2YgYSByZXBvcnQgdGhhdCBoYXMgYmVlbiBpc3N1ZWQuXHJcbiAgICovXHJcbiAgQW1lbmRlZDogXCJhbWVuZGVkXCIsXHJcbiAgLyoqXHJcbiAgICogYXBwZW5kZWQ6IFN1YnNlcXVlbnQgdG8gYmVpbmcgZmluYWwsIHRoZSByZXBvcnQgaGFzIGJlZW4gbW9kaWZpZWQgYnkgYWRkaW5nIG5ldyBjb250ZW50LiBUaGUgZXhpc3RpbmcgY29udGVudCBpcyB1bmNoYW5nZWQuXHJcbiAgICovXHJcbiAgQXBwZW5kZWQ6IFwiYXBwZW5kZWRcIixcclxuICAvKipcclxuICAgKiBjYW5jZWxsZWQ6IFRoZSByZXBvcnQgaXMgdW5hdmFpbGFibGUgYmVjYXVzZSB0aGUgbWVhc3VyZW1lbnQgd2FzIG5vdCBzdGFydGVkIG9yIG5vdCBjb21wbGV0ZWQgKGFsc28gc29tZXRpbWVzIGNhbGxlZCBcImFib3J0ZWRcIikuXHJcbiAgICovXHJcbiAgQ2FuY2VsbGVkOiBcImNhbmNlbGxlZFwiLFxyXG4gIC8qKlxyXG4gICAqIGNvcnJlY3RlZDogU3Vic2VxdWVudCB0byBiZWluZyBmaW5hbCwgdGhlIHJlcG9ydCBoYXMgYmVlbiBtb2RpZmllZCAgdG8gY29ycmVjdCBhbiBlcnJvciBpbiB0aGUgcmVwb3J0IG9yIHJlZmVyZW5jZWQgcmVzdWx0cy5cclxuICAgKi9cclxuICBDb3JyZWN0ZWQ6IFwiY29ycmVjdGVkXCIsXHJcbiAgLyoqXHJcbiAgICogZW50ZXJlZC1pbi1lcnJvcjogVGhlIHJlcG9ydCBoYXMgYmVlbiB3aXRoZHJhd24gZm9sbG93aW5nIGEgcHJldmlvdXMgZmluYWwgcmVsZWFzZS4gIFRoaXMgZWxlY3Ryb25pYyByZWNvcmQgc2hvdWxkIG5ldmVyIGhhdmUgZXhpc3RlZCwgdGhvdWdoIGl0IGlzIHBvc3NpYmxlIHRoYXQgcmVhbC13b3JsZCBkZWNpc2lvbnMgd2VyZSBiYXNlZCBvbiBpdC4gKElmIHJlYWwtd29ybGQgYWN0aXZpdHkgaGFzIG9jY3VycmVkLCB0aGUgc3RhdHVzIHNob3VsZCBiZSBcImNhbmNlbGxlZFwiIHJhdGhlciB0aGFuIFwiZW50ZXJlZC1pbi1lcnJvclwiLilcclxuICAgKi9cclxuICBFbnRlcmVkSW5FcnJvcjogXCJlbnRlcmVkLWluLWVycm9yXCIsXHJcbiAgLyoqXHJcbiAgICogZmluYWw6IFRoZSByZXBvcnQgaXMgY29tcGxldGUgYW5kIHZlcmlmaWVkIGJ5IGFuIGF1dGhvcml6ZWQgcGVyc29uLlxyXG4gICAqL1xyXG4gIEZpbmFsOiBcImZpbmFsXCIsXHJcbiAgLyoqXHJcbiAgICogcGFydGlhbDogVGhpcyBpcyBhIHBhcnRpYWwgKGUuZy4gaW5pdGlhbCwgaW50ZXJpbSBvciBwcmVsaW1pbmFyeSkgcmVwb3J0OiBkYXRhIGluIHRoZSByZXBvcnQgbWF5IGJlIGluY29tcGxldGUgb3IgdW52ZXJpZmllZC5cclxuICAgKi9cclxuICBQYXJ0aWFsOiBcInBhcnRpYWxcIixcclxuICAvKipcclxuICAgKiBwcmVsaW1pbmFyeTogVmVyaWZpZWQgZWFybHkgcmVzdWx0cyBhcmUgYXZhaWxhYmxlLCBidXQgbm90IGFsbCAgcmVzdWx0cyBhcmUgZmluYWwuXHJcbiAgICovXHJcbiAgUHJlbGltaW5hcnk6IFwicHJlbGltaW5hcnlcIixcclxuICAvKipcclxuICAgKiByZWdpc3RlcmVkOiBUaGUgZXhpc3RlbmNlIG9mIHRoZSByZXBvcnQgaXMgcmVnaXN0ZXJlZCwgYnV0IHRoZXJlIGlzIG5vdGhpbmcgeWV0IGF2YWlsYWJsZS5cclxuICAgKi9cclxuICBSZWdpc3RlcmVkOiBcInJlZ2lzdGVyZWRcIixcclxuICAvKipcclxuICAgKiB1bmtub3duOiBUaGUgYXV0aG9yaW5nIHN5c3RlbSBkb2VzIG5vdCBrbm93IHdoaWNoIG9mIHRoZSBzdGF0dXMgdmFsdWVzIGN1cnJlbnRseSBhcHBsaWVzIGZvciB0aGlzIHJlcXVlc3QuIE5vdGU6IFRoaXMgY29uY2VwdCBpcyBub3QgdG8gYmUgdXNlZCBmb3IgXCJvdGhlclwiIC0gb25lIG9mIHRoZSBsaXN0ZWQgc3RhdHVzZXMgaXMgcHJlc3VtZWQgdG8gYXBwbHksIGl0J3MganVzdCBub3Qga25vd24gd2hpY2ggb25lLlxyXG4gICAqL1xyXG4gIFVua25vd246IFwidW5rbm93blwiLFxyXG59IGFzIGNvbnN0O1xyXG5cclxuLyoqXHJcbiAqIFRoZSBzdGF0dXMgb2YgdGhlIGRpYWdub3N0aWMgcmVwb3J0IGFzIGEgd2hvbGUuXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBEaWFnbm9zdGljUmVwb3J0U3RhdHVzQ29kZVR5cGUgPSB0eXBlb2YgRGlhZ25vc3RpY1JlcG9ydFN0YXR1c0NvZGVzW2tleW9mIHR5cGVvZiBEaWFnbm9zdGljUmVwb3J0U3RhdHVzQ29kZXNdO1xyXG4iXX0=