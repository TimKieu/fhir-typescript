// <auto-generated/>
// Contents of: hl7.fhir.r3.core version: 3.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/medication-package-form|3.0.2
/**
 * A coded concept defining the kind of container a medication package is packaged in
 */
export const MedicationPackageFormCodes = {
    /**
     * ampoule: A sealed glass capsule containing a liquid
     */
    Ampoule: "ampoule",
    /**
     * bottle: A container, typically made of glass or plastic and with a narrow neck, used for storing liquids.
     */
    Bottle: "bottle",
    /**
     * box: A container with a flat base and sides, typically square or rectangular and having a lid.
     */
    Box: "box",
    /**
     * cartridge: A device of various configuration and composition used with a syringe for the application of anesthetic or other materials to a patient.
     */
    Cartridge: "cartridge",
    /**
     * container: A package intended to store pharmaceuticals.
     */
    Container: "container",
    /**
     * tube: A long, hollow cylinder of metal, plastic, glass, etc., for holding medications, typically creams or ointments
     */
    Tube: "tube",
    /**
     * unitdose: A dose of medicine prepared in an individual package for convenience, safety or monitoring.
     */
    UnitDoseBlister: "unitdose",
    /**
     * vial: A small container, typically cylindrical and made of glass, used especially for holding liquid medications.
     */
    Vial: "vial",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWVkaWNhdGlvblBhY2thZ2VGb3JtQ29kZXMuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL01lZGljYXRpb25QYWNrYWdlRm9ybUNvZGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQiwrQ0FBK0M7QUFDL0Msa0NBQWtDO0FBQ2xDLDRFQUE0RTtBQUU1RTs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLDBCQUEwQixHQUFHO0lBQ3hDOztPQUVHO0lBQ0gsT0FBTyxFQUFFLFNBQVM7SUFDbEI7O09BRUc7SUFDSCxNQUFNLEVBQUUsUUFBUTtJQUNoQjs7T0FFRztJQUNILEdBQUcsRUFBRSxLQUFLO0lBQ1Y7O09BRUc7SUFDSCxTQUFTLEVBQUUsV0FBVztJQUN0Qjs7T0FFRztJQUNILFNBQVMsRUFBRSxXQUFXO0lBQ3RCOztPQUVHO0lBQ0gsSUFBSSxFQUFFLE1BQU07SUFDWjs7T0FFRztJQUNILGVBQWUsRUFBRSxVQUFVO0lBQzNCOztPQUVHO0lBQ0gsSUFBSSxFQUFFLE1BQU07Q0FDSixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnIzLmNvcmUgdmVyc2lvbjogMy4wLjJcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L21lZGljYXRpb24tcGFja2FnZS1mb3JtfDMuMC4yXHJcblxyXG4vKipcclxuICogQSBjb2RlZCBjb25jZXB0IGRlZmluaW5nIHRoZSBraW5kIG9mIGNvbnRhaW5lciBhIG1lZGljYXRpb24gcGFja2FnZSBpcyBwYWNrYWdlZCBpblxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IE1lZGljYXRpb25QYWNrYWdlRm9ybUNvZGVzID0ge1xyXG4gIC8qKlxyXG4gICAqIGFtcG91bGU6IEEgc2VhbGVkIGdsYXNzIGNhcHN1bGUgY29udGFpbmluZyBhIGxpcXVpZFxyXG4gICAqL1xyXG4gIEFtcG91bGU6IFwiYW1wb3VsZVwiLFxyXG4gIC8qKlxyXG4gICAqIGJvdHRsZTogQSBjb250YWluZXIsIHR5cGljYWxseSBtYWRlIG9mIGdsYXNzIG9yIHBsYXN0aWMgYW5kIHdpdGggYSBuYXJyb3cgbmVjaywgdXNlZCBmb3Igc3RvcmluZyBsaXF1aWRzLlxyXG4gICAqL1xyXG4gIEJvdHRsZTogXCJib3R0bGVcIixcclxuICAvKipcclxuICAgKiBib3g6IEEgY29udGFpbmVyIHdpdGggYSBmbGF0IGJhc2UgYW5kIHNpZGVzLCB0eXBpY2FsbHkgc3F1YXJlIG9yIHJlY3Rhbmd1bGFyIGFuZCBoYXZpbmcgYSBsaWQuXHJcbiAgICovXHJcbiAgQm94OiBcImJveFwiLFxyXG4gIC8qKlxyXG4gICAqIGNhcnRyaWRnZTogQSBkZXZpY2Ugb2YgdmFyaW91cyBjb25maWd1cmF0aW9uIGFuZCBjb21wb3NpdGlvbiB1c2VkIHdpdGggYSBzeXJpbmdlIGZvciB0aGUgYXBwbGljYXRpb24gb2YgYW5lc3RoZXRpYyBvciBvdGhlciBtYXRlcmlhbHMgdG8gYSBwYXRpZW50LlxyXG4gICAqL1xyXG4gIENhcnRyaWRnZTogXCJjYXJ0cmlkZ2VcIixcclxuICAvKipcclxuICAgKiBjb250YWluZXI6IEEgcGFja2FnZSBpbnRlbmRlZCB0byBzdG9yZSBwaGFybWFjZXV0aWNhbHMuXHJcbiAgICovXHJcbiAgQ29udGFpbmVyOiBcImNvbnRhaW5lclwiLFxyXG4gIC8qKlxyXG4gICAqIHR1YmU6IEEgbG9uZywgaG9sbG93IGN5bGluZGVyIG9mIG1ldGFsLCBwbGFzdGljLCBnbGFzcywgZXRjLiwgZm9yIGhvbGRpbmcgbWVkaWNhdGlvbnMsIHR5cGljYWxseSBjcmVhbXMgb3Igb2ludG1lbnRzXHJcbiAgICovXHJcbiAgVHViZTogXCJ0dWJlXCIsXHJcbiAgLyoqXHJcbiAgICogdW5pdGRvc2U6IEEgZG9zZSBvZiBtZWRpY2luZSBwcmVwYXJlZCBpbiBhbiBpbmRpdmlkdWFsIHBhY2thZ2UgZm9yIGNvbnZlbmllbmNlLCBzYWZldHkgb3IgbW9uaXRvcmluZy5cclxuICAgKi9cclxuICBVbml0RG9zZUJsaXN0ZXI6IFwidW5pdGRvc2VcIixcclxuICAvKipcclxuICAgKiB2aWFsOiBBIHNtYWxsIGNvbnRhaW5lciwgdHlwaWNhbGx5IGN5bGluZHJpY2FsIGFuZCBtYWRlIG9mIGdsYXNzLCB1c2VkIGVzcGVjaWFsbHkgZm9yIGhvbGRpbmcgbGlxdWlkIG1lZGljYXRpb25zLlxyXG4gICAqL1xyXG4gIFZpYWw6IFwidmlhbFwiLFxyXG59IGFzIGNvbnN0O1xyXG5cclxuLyoqXHJcbiAqIEEgY29kZWQgY29uY2VwdCBkZWZpbmluZyB0aGUga2luZCBvZiBjb250YWluZXIgYSBtZWRpY2F0aW9uIHBhY2thZ2UgaXMgcGFja2FnZWQgaW5cclxuICovXHJcbmV4cG9ydCB0eXBlIE1lZGljYXRpb25QYWNrYWdlRm9ybUNvZGVUeXBlID0gdHlwZW9mIE1lZGljYXRpb25QYWNrYWdlRm9ybUNvZGVzW2tleW9mIHR5cGVvZiBNZWRpY2F0aW9uUGFja2FnZUZvcm1Db2Rlc107XHJcbiJdfQ==