// <auto-generated/>
// Contents of: hl7.fhir.r3.core version: 3.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/data-absent-reason|3.0.2
/**
 * Used to specify why the normally expected content of the data element is missing.
 */
export const DataAbsentReasonCodes = {
    /**
     * asked: The source human does not know the value.
     */
    Asked: "asked",
    /**
     * astext: The content of the data is represented in the resource narrative.
     */
    AsText: "astext",
    /**
     * error: Some system or workflow process error means that the information is not available.
     */
    Error: "error",
    /**
     * masked: The information is not available due to security, privacy or related reasons.
     */
    Masked: "masked",
    /**
     * NaN: NaN, standing for not a number, is a numeric data type value representing an undefined or unrepresentable value.
     */
    NotANumber: "NaN",
    /**
     * not-asked: The workflow didn't lead to this value being known.
     */
    NotAsked: "not-asked",
    /**
     * not-performed: The value is not available because the observation procedure (test, etc.) was not performed.
     */
    NotPerformed: "not-performed",
    /**
     * temp: There is reason to expect (from the workflow) that the value may become known.
     */
    Temp: "temp",
    /**
     * unknown: The value is not known.
     */
    Unknown: "unknown",
    /**
     * unsupported: The source system wasn't capable of supporting this element.
     */
    Unsupported: "unsupported",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGF0YUFic2VudFJlYXNvbkNvZGVzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9EYXRhQWJzZW50UmVhc29uQ29kZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLCtDQUErQztBQUMvQyxrQ0FBa0M7QUFDbEMsdUVBQXVFO0FBRXZFOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0scUJBQXFCLEdBQUc7SUFDbkM7O09BRUc7SUFDSCxLQUFLLEVBQUUsT0FBTztJQUNkOztPQUVHO0lBQ0gsTUFBTSxFQUFFLFFBQVE7SUFDaEI7O09BRUc7SUFDSCxLQUFLLEVBQUUsT0FBTztJQUNkOztPQUVHO0lBQ0gsTUFBTSxFQUFFLFFBQVE7SUFDaEI7O09BRUc7SUFDSCxVQUFVLEVBQUUsS0FBSztJQUNqQjs7T0FFRztJQUNILFFBQVEsRUFBRSxXQUFXO0lBQ3JCOztPQUVHO0lBQ0gsWUFBWSxFQUFFLGVBQWU7SUFDN0I7O09BRUc7SUFDSCxJQUFJLEVBQUUsTUFBTTtJQUNaOztPQUVHO0lBQ0gsT0FBTyxFQUFFLFNBQVM7SUFDbEI7O09BRUc7SUFDSCxXQUFXLEVBQUUsYUFBYTtDQUNsQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnIzLmNvcmUgdmVyc2lvbjogMy4wLjJcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L2RhdGEtYWJzZW50LXJlYXNvbnwzLjAuMlxyXG5cclxuLyoqXHJcbiAqIFVzZWQgdG8gc3BlY2lmeSB3aHkgdGhlIG5vcm1hbGx5IGV4cGVjdGVkIGNvbnRlbnQgb2YgdGhlIGRhdGEgZWxlbWVudCBpcyBtaXNzaW5nLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IERhdGFBYnNlbnRSZWFzb25Db2RlcyA9IHtcclxuICAvKipcclxuICAgKiBhc2tlZDogVGhlIHNvdXJjZSBodW1hbiBkb2VzIG5vdCBrbm93IHRoZSB2YWx1ZS5cclxuICAgKi9cclxuICBBc2tlZDogXCJhc2tlZFwiLFxyXG4gIC8qKlxyXG4gICAqIGFzdGV4dDogVGhlIGNvbnRlbnQgb2YgdGhlIGRhdGEgaXMgcmVwcmVzZW50ZWQgaW4gdGhlIHJlc291cmNlIG5hcnJhdGl2ZS5cclxuICAgKi9cclxuICBBc1RleHQ6IFwiYXN0ZXh0XCIsXHJcbiAgLyoqXHJcbiAgICogZXJyb3I6IFNvbWUgc3lzdGVtIG9yIHdvcmtmbG93IHByb2Nlc3MgZXJyb3IgbWVhbnMgdGhhdCB0aGUgaW5mb3JtYXRpb24gaXMgbm90IGF2YWlsYWJsZS5cclxuICAgKi9cclxuICBFcnJvcjogXCJlcnJvclwiLFxyXG4gIC8qKlxyXG4gICAqIG1hc2tlZDogVGhlIGluZm9ybWF0aW9uIGlzIG5vdCBhdmFpbGFibGUgZHVlIHRvIHNlY3VyaXR5LCBwcml2YWN5IG9yIHJlbGF0ZWQgcmVhc29ucy5cclxuICAgKi9cclxuICBNYXNrZWQ6IFwibWFza2VkXCIsXHJcbiAgLyoqXHJcbiAgICogTmFOOiBOYU4sIHN0YW5kaW5nIGZvciBub3QgYSBudW1iZXIsIGlzIGEgbnVtZXJpYyBkYXRhIHR5cGUgdmFsdWUgcmVwcmVzZW50aW5nIGFuIHVuZGVmaW5lZCBvciB1bnJlcHJlc2VudGFibGUgdmFsdWUuXHJcbiAgICovXHJcbiAgTm90QU51bWJlcjogXCJOYU5cIixcclxuICAvKipcclxuICAgKiBub3QtYXNrZWQ6IFRoZSB3b3JrZmxvdyBkaWRuJ3QgbGVhZCB0byB0aGlzIHZhbHVlIGJlaW5nIGtub3duLlxyXG4gICAqL1xyXG4gIE5vdEFza2VkOiBcIm5vdC1hc2tlZFwiLFxyXG4gIC8qKlxyXG4gICAqIG5vdC1wZXJmb3JtZWQ6IFRoZSB2YWx1ZSBpcyBub3QgYXZhaWxhYmxlIGJlY2F1c2UgdGhlIG9ic2VydmF0aW9uIHByb2NlZHVyZSAodGVzdCwgZXRjLikgd2FzIG5vdCBwZXJmb3JtZWQuXHJcbiAgICovXHJcbiAgTm90UGVyZm9ybWVkOiBcIm5vdC1wZXJmb3JtZWRcIixcclxuICAvKipcclxuICAgKiB0ZW1wOiBUaGVyZSBpcyByZWFzb24gdG8gZXhwZWN0IChmcm9tIHRoZSB3b3JrZmxvdykgdGhhdCB0aGUgdmFsdWUgbWF5IGJlY29tZSBrbm93bi5cclxuICAgKi9cclxuICBUZW1wOiBcInRlbXBcIixcclxuICAvKipcclxuICAgKiB1bmtub3duOiBUaGUgdmFsdWUgaXMgbm90IGtub3duLlxyXG4gICAqL1xyXG4gIFVua25vd246IFwidW5rbm93blwiLFxyXG4gIC8qKlxyXG4gICAqIHVuc3VwcG9ydGVkOiBUaGUgc291cmNlIHN5c3RlbSB3YXNuJ3QgY2FwYWJsZSBvZiBzdXBwb3J0aW5nIHRoaXMgZWxlbWVudC5cclxuICAgKi9cclxuICBVbnN1cHBvcnRlZDogXCJ1bnN1cHBvcnRlZFwiLFxyXG59IGFzIGNvbnN0O1xyXG5cclxuLyoqXHJcbiAqIFVzZWQgdG8gc3BlY2lmeSB3aHkgdGhlIG5vcm1hbGx5IGV4cGVjdGVkIGNvbnRlbnQgb2YgdGhlIGRhdGEgZWxlbWVudCBpcyBtaXNzaW5nLlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgRGF0YUFic2VudFJlYXNvbkNvZGVUeXBlID0gdHlwZW9mIERhdGFBYnNlbnRSZWFzb25Db2Rlc1trZXlvZiB0eXBlb2YgRGF0YUFic2VudFJlYXNvbkNvZGVzXTtcclxuIl19