// <auto-generated/>
// Contents of: hl7.fhir.r3.core version: 3.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/chargeitem-status|3.0.2
/**
 * Codes identifying the stage lifecycle stage of a ChargeItem
 */
export const ChargeitemStatusCodings = {
    /**
     * aborted: The processing of the charge was aborted
     */
    Aborted: {
        display: "Aborted",
        code: "aborted",
        system: "http://hl7.org/fhir/chargeitem-status",
    },
    /**
     * billable: The charge item is ready for billing
     */
    Billable: {
        display: "Billable",
        code: "billable",
        system: "http://hl7.org/fhir/chargeitem-status",
    },
    /**
     * billed: The charge item has been billed (e.g. a billing engine has generated financial transactions by applying the associated ruled for the charge item to the context of the Encounter, and placed them into Claims/Invoices
     */
    Billed: {
        display: "Billed",
        code: "billed",
        system: "http://hl7.org/fhir/chargeitem-status",
    },
    /**
     * entered-in-error: The charge item has been entered in error and should not be processed for billing
     */
    EnteredInError: {
        display: "Entered in Error",
        code: "entered-in-error",
        system: "http://hl7.org/fhir/chargeitem-status",
    },
    /**
     * not-billable: The charge item has been determined to be not billable (e.g. due to rules associated with the billing code)
     */
    NotBillable: {
        display: "Not billable",
        code: "not-billable",
        system: "http://hl7.org/fhir/chargeitem-status",
    },
    /**
     * planned: The charge item has been entered, but the charged service is not  yet complete, so it shall not be billed yet but might be used in the context of pre-authorization
     */
    Planned: {
        display: "Planned",
        code: "planned",
        system: "http://hl7.org/fhir/chargeitem-status",
    },
    /**
     * unknown: The authoring system does not know which of the status values currently applies for this charge item  Note: This concept is not to be used for "other" - one of the listed statuses is presumed to apply, it's just not known which one.
     */
    Unknown: {
        display: "Unknown",
        code: "unknown",
        system: "http://hl7.org/fhir/chargeitem-status",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2hhcmdlaXRlbVN0YXR1c0NvZGluZ3MuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL0NoYXJnZWl0ZW1TdGF0dXNDb2RpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQiwrQ0FBK0M7QUFDL0Msa0NBQWtDO0FBQ2xDLHNFQUFzRTtBQXNDdEU7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSx1QkFBdUIsR0FBOEI7SUFDaEU7O09BRUc7SUFDSCxPQUFPLEVBQUU7UUFDUCxPQUFPLEVBQUUsU0FBUztRQUNsQixJQUFJLEVBQUUsU0FBUztRQUNmLE1BQU0sRUFBRSx1Q0FBdUM7S0FDaEQ7SUFDRDs7T0FFRztJQUNILFFBQVEsRUFBRTtRQUNSLE9BQU8sRUFBRSxVQUFVO1FBQ25CLElBQUksRUFBRSxVQUFVO1FBQ2hCLE1BQU0sRUFBRSx1Q0FBdUM7S0FDaEQ7SUFDRDs7T0FFRztJQUNILE1BQU0sRUFBRTtRQUNOLE9BQU8sRUFBRSxRQUFRO1FBQ2pCLElBQUksRUFBRSxRQUFRO1FBQ2QsTUFBTSxFQUFFLHVDQUF1QztLQUNoRDtJQUNEOztPQUVHO0lBQ0gsY0FBYyxFQUFFO1FBQ2QsT0FBTyxFQUFFLGtCQUFrQjtRQUMzQixJQUFJLEVBQUUsa0JBQWtCO1FBQ3hCLE1BQU0sRUFBRSx1Q0FBdUM7S0FDaEQ7SUFDRDs7T0FFRztJQUNILFdBQVcsRUFBRTtRQUNYLE9BQU8sRUFBRSxjQUFjO1FBQ3ZCLElBQUksRUFBRSxjQUFjO1FBQ3BCLE1BQU0sRUFBRSx1Q0FBdUM7S0FDaEQ7SUFDRDs7T0FFRztJQUNILE9BQU8sRUFBRTtRQUNQLE9BQU8sRUFBRSxTQUFTO1FBQ2xCLElBQUksRUFBRSxTQUFTO1FBQ2YsTUFBTSxFQUFFLHVDQUF1QztLQUNoRDtJQUNEOztPQUVHO0lBQ0gsT0FBTyxFQUFFO1FBQ1AsT0FBTyxFQUFFLFNBQVM7UUFDbEIsSUFBSSxFQUFFLFNBQVM7UUFDZixNQUFNLEVBQUUsdUNBQXVDO0tBQ2hEO0NBQ08sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yMy5jb3JlIHZlcnNpb246IDMuMC4yXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9jaGFyZ2VpdGVtLXN0YXR1c3wzLjAuMlxyXG5cclxuaW1wb3J0IHsgQ29kaW5nQXJncyB9IGZyb20gJy4uL2ZoaXIvQ29kaW5nLmpzJ1xyXG5cclxuLyoqXHJcbiAqIENvZGVzIGlkZW50aWZ5aW5nIHRoZSBzdGFnZSBsaWZlY3ljbGUgc3RhZ2Ugb2YgYSBDaGFyZ2VJdGVtXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBDaGFyZ2VpdGVtU3RhdHVzQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBhYm9ydGVkOiBUaGUgcHJvY2Vzc2luZyBvZiB0aGUgY2hhcmdlIHdhcyBhYm9ydGVkXHJcbiAgICovXHJcbiAgQWJvcnRlZDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBiaWxsYWJsZTogVGhlIGNoYXJnZSBpdGVtIGlzIHJlYWR5IGZvciBiaWxsaW5nXHJcbiAgICovXHJcbiAgQmlsbGFibGU6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogYmlsbGVkOiBUaGUgY2hhcmdlIGl0ZW0gaGFzIGJlZW4gYmlsbGVkIChlLmcuIGEgYmlsbGluZyBlbmdpbmUgaGFzIGdlbmVyYXRlZCBmaW5hbmNpYWwgdHJhbnNhY3Rpb25zIGJ5IGFwcGx5aW5nIHRoZSBhc3NvY2lhdGVkIHJ1bGVkIGZvciB0aGUgY2hhcmdlIGl0ZW0gdG8gdGhlIGNvbnRleHQgb2YgdGhlIEVuY291bnRlciwgYW5kIHBsYWNlZCB0aGVtIGludG8gQ2xhaW1zL0ludm9pY2VzXHJcbiAgICovXHJcbiAgQmlsbGVkOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIGVudGVyZWQtaW4tZXJyb3I6IFRoZSBjaGFyZ2UgaXRlbSBoYXMgYmVlbiBlbnRlcmVkIGluIGVycm9yIGFuZCBzaG91bGQgbm90IGJlIHByb2Nlc3NlZCBmb3IgYmlsbGluZ1xyXG4gICAqL1xyXG4gIEVudGVyZWRJbkVycm9yOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIG5vdC1iaWxsYWJsZTogVGhlIGNoYXJnZSBpdGVtIGhhcyBiZWVuIGRldGVybWluZWQgdG8gYmUgbm90IGJpbGxhYmxlIChlLmcuIGR1ZSB0byBydWxlcyBhc3NvY2lhdGVkIHdpdGggdGhlIGJpbGxpbmcgY29kZSlcclxuICAgKi9cclxuICBOb3RCaWxsYWJsZTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBwbGFubmVkOiBUaGUgY2hhcmdlIGl0ZW0gaGFzIGJlZW4gZW50ZXJlZCwgYnV0IHRoZSBjaGFyZ2VkIHNlcnZpY2UgaXMgbm90ICB5ZXQgY29tcGxldGUsIHNvIGl0IHNoYWxsIG5vdCBiZSBiaWxsZWQgeWV0IGJ1dCBtaWdodCBiZSB1c2VkIGluIHRoZSBjb250ZXh0IG9mIHByZS1hdXRob3JpemF0aW9uXHJcbiAgICovXHJcbiAgUGxhbm5lZDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiB1bmtub3duOiBUaGUgYXV0aG9yaW5nIHN5c3RlbSBkb2VzIG5vdCBrbm93IHdoaWNoIG9mIHRoZSBzdGF0dXMgdmFsdWVzIGN1cnJlbnRseSBhcHBsaWVzIGZvciB0aGlzIGNoYXJnZSBpdGVtICBOb3RlOiBUaGlzIGNvbmNlcHQgaXMgbm90IHRvIGJlIHVzZWQgZm9yIFwib3RoZXJcIiAtIG9uZSBvZiB0aGUgbGlzdGVkIHN0YXR1c2VzIGlzIHByZXN1bWVkIHRvIGFwcGx5LCBpdCdzIGp1c3Qgbm90IGtub3duIHdoaWNoIG9uZS5cclxuICAgKi9cclxuICBVbmtub3duOiBDb2RpbmdBcmdzO1xyXG59XHJcblxyXG4vKipcclxuICogQ29kZXMgaWRlbnRpZnlpbmcgdGhlIHN0YWdlIGxpZmVjeWNsZSBzdGFnZSBvZiBhIENoYXJnZUl0ZW1cclxuICovXHJcbmV4cG9ydCBjb25zdCBDaGFyZ2VpdGVtU3RhdHVzQ29kaW5nczpDaGFyZ2VpdGVtU3RhdHVzQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBhYm9ydGVkOiBUaGUgcHJvY2Vzc2luZyBvZiB0aGUgY2hhcmdlIHdhcyBhYm9ydGVkXHJcbiAgICovXHJcbiAgQWJvcnRlZDoge1xyXG4gICAgZGlzcGxheTogXCJBYm9ydGVkXCIsXHJcbiAgICBjb2RlOiBcImFib3J0ZWRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2NoYXJnZWl0ZW0tc3RhdHVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBiaWxsYWJsZTogVGhlIGNoYXJnZSBpdGVtIGlzIHJlYWR5IGZvciBiaWxsaW5nXHJcbiAgICovXHJcbiAgQmlsbGFibGU6IHtcclxuICAgIGRpc3BsYXk6IFwiQmlsbGFibGVcIixcclxuICAgIGNvZGU6IFwiYmlsbGFibGVcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2NoYXJnZWl0ZW0tc3RhdHVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBiaWxsZWQ6IFRoZSBjaGFyZ2UgaXRlbSBoYXMgYmVlbiBiaWxsZWQgKGUuZy4gYSBiaWxsaW5nIGVuZ2luZSBoYXMgZ2VuZXJhdGVkIGZpbmFuY2lhbCB0cmFuc2FjdGlvbnMgYnkgYXBwbHlpbmcgdGhlIGFzc29jaWF0ZWQgcnVsZWQgZm9yIHRoZSBjaGFyZ2UgaXRlbSB0byB0aGUgY29udGV4dCBvZiB0aGUgRW5jb3VudGVyLCBhbmQgcGxhY2VkIHRoZW0gaW50byBDbGFpbXMvSW52b2ljZXNcclxuICAgKi9cclxuICBCaWxsZWQ6IHtcclxuICAgIGRpc3BsYXk6IFwiQmlsbGVkXCIsXHJcbiAgICBjb2RlOiBcImJpbGxlZFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvY2hhcmdlaXRlbS1zdGF0dXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIGVudGVyZWQtaW4tZXJyb3I6IFRoZSBjaGFyZ2UgaXRlbSBoYXMgYmVlbiBlbnRlcmVkIGluIGVycm9yIGFuZCBzaG91bGQgbm90IGJlIHByb2Nlc3NlZCBmb3IgYmlsbGluZ1xyXG4gICAqL1xyXG4gIEVudGVyZWRJbkVycm9yOiB7XHJcbiAgICBkaXNwbGF5OiBcIkVudGVyZWQgaW4gRXJyb3JcIixcclxuICAgIGNvZGU6IFwiZW50ZXJlZC1pbi1lcnJvclwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvY2hhcmdlaXRlbS1zdGF0dXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIG5vdC1iaWxsYWJsZTogVGhlIGNoYXJnZSBpdGVtIGhhcyBiZWVuIGRldGVybWluZWQgdG8gYmUgbm90IGJpbGxhYmxlIChlLmcuIGR1ZSB0byBydWxlcyBhc3NvY2lhdGVkIHdpdGggdGhlIGJpbGxpbmcgY29kZSlcclxuICAgKi9cclxuICBOb3RCaWxsYWJsZToge1xyXG4gICAgZGlzcGxheTogXCJOb3QgYmlsbGFibGVcIixcclxuICAgIGNvZGU6IFwibm90LWJpbGxhYmxlXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9jaGFyZ2VpdGVtLXN0YXR1c1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogcGxhbm5lZDogVGhlIGNoYXJnZSBpdGVtIGhhcyBiZWVuIGVudGVyZWQsIGJ1dCB0aGUgY2hhcmdlZCBzZXJ2aWNlIGlzIG5vdCAgeWV0IGNvbXBsZXRlLCBzbyBpdCBzaGFsbCBub3QgYmUgYmlsbGVkIHlldCBidXQgbWlnaHQgYmUgdXNlZCBpbiB0aGUgY29udGV4dCBvZiBwcmUtYXV0aG9yaXphdGlvblxyXG4gICAqL1xyXG4gIFBsYW5uZWQ6IHtcclxuICAgIGRpc3BsYXk6IFwiUGxhbm5lZFwiLFxyXG4gICAgY29kZTogXCJwbGFubmVkXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9jaGFyZ2VpdGVtLXN0YXR1c1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogdW5rbm93bjogVGhlIGF1dGhvcmluZyBzeXN0ZW0gZG9lcyBub3Qga25vdyB3aGljaCBvZiB0aGUgc3RhdHVzIHZhbHVlcyBjdXJyZW50bHkgYXBwbGllcyBmb3IgdGhpcyBjaGFyZ2UgaXRlbSAgTm90ZTogVGhpcyBjb25jZXB0IGlzIG5vdCB0byBiZSB1c2VkIGZvciBcIm90aGVyXCIgLSBvbmUgb2YgdGhlIGxpc3RlZCBzdGF0dXNlcyBpcyBwcmVzdW1lZCB0byBhcHBseSwgaXQncyBqdXN0IG5vdCBrbm93biB3aGljaCBvbmUuXHJcbiAgICovXHJcbiAgVW5rbm93bjoge1xyXG4gICAgZGlzcGxheTogXCJVbmtub3duXCIsXHJcbiAgICBjb2RlOiBcInVua25vd25cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2NoYXJnZWl0ZW0tc3RhdHVzXCIsXHJcbiAgfSxcclxufSBhcyBjb25zdDtcclxuIl19