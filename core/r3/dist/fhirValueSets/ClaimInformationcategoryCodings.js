// <auto-generated/>
// Contents of: hl7.fhir.r3.core version: 3.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/claim-informationcategory|3.0.2
/**
 * This value set includes sample Information Category codes.
 */
export const ClaimInformationcategoryCodings = {
    /**
     * attachment: Materials attached such as images, documents and resources.
     */
    Attachment: {
        display: "Attachment",
        code: "attachment",
        system: "http://hl7.org/fhir/claiminformationcategory",
    },
    /**
     * discharge: Discharge status and discharge to locations.
     */
    Discharge: {
        display: "Discharge",
        code: "discharge",
        system: "http://hl7.org/fhir/claiminformationcategory",
    },
    /**
     * exception: Insurance policy exceptions.
     */
    Exception: {
        display: "Exception",
        code: "exception",
        system: "http://hl7.org/fhir/claiminformationcategory",
    },
    /**
     * info: Codes conveying additional situation and condition information.
     */
    Information: {
        display: "Information",
        code: "info",
        system: "http://hl7.org/fhir/claiminformationcategory",
    },
    /**
     * material: Materials being forwarded, eg. Models, molds, images, documents.
     */
    MaterialsForwarded: {
        display: "Materials Forwarded",
        code: "material",
        system: "http://hl7.org/fhir/claiminformationcategory",
    },
    /**
     * missingtooth: Teeth which are missing for any reason, for example: prior extraction, never developed.
     */
    MissingTooth: {
        display: "Missing Tooth",
        code: "missingtooth",
        system: "http://hl7.org/fhir/claiminformationcategory",
    },
    /**
     * onset: Period, start or end dates of aspects of the Condition.
     */
    Onset: {
        display: "Onset",
        code: "onset",
        system: "http://hl7.org/fhir/claiminformationcategory",
    },
    /**
     * other: Other information identified by the type.system.
     */
    Other: {
        display: "Other",
        code: "other",
        system: "http://hl7.org/fhir/claiminformationcategory",
    },
    /**
     * prosthesis: The type of prosthesis and date of supply if a previously supplied prosthesis.
     */
    Prosthesis: {
        display: "Prosthesis",
        code: "prosthesis",
        system: "http://hl7.org/fhir/claiminformationcategory",
    },
    /**
     * related: Nature and date of the related event eg. Last exam, service, Xray etc.
     */
    RelatedServices: {
        display: "Related Services",
        code: "related",
        system: "http://hl7.org/fhir/claiminformationcategory",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2xhaW1JbmZvcm1hdGlvbmNhdGVnb3J5Q29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvQ2xhaW1JbmZvcm1hdGlvbmNhdGVnb3J5Q29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyw4RUFBOEU7QUFrRDlFOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sK0JBQStCLEdBQXNDO0lBQ2hGOztPQUVHO0lBQ0gsVUFBVSxFQUFFO1FBQ1YsT0FBTyxFQUFFLFlBQVk7UUFDckIsSUFBSSxFQUFFLFlBQVk7UUFDbEIsTUFBTSxFQUFFLDhDQUE4QztLQUN2RDtJQUNEOztPQUVHO0lBQ0gsU0FBUyxFQUFFO1FBQ1QsT0FBTyxFQUFFLFdBQVc7UUFDcEIsSUFBSSxFQUFFLFdBQVc7UUFDakIsTUFBTSxFQUFFLDhDQUE4QztLQUN2RDtJQUNEOztPQUVHO0lBQ0gsU0FBUyxFQUFFO1FBQ1QsT0FBTyxFQUFFLFdBQVc7UUFDcEIsSUFBSSxFQUFFLFdBQVc7UUFDakIsTUFBTSxFQUFFLDhDQUE4QztLQUN2RDtJQUNEOztPQUVHO0lBQ0gsV0FBVyxFQUFFO1FBQ1gsT0FBTyxFQUFFLGFBQWE7UUFDdEIsSUFBSSxFQUFFLE1BQU07UUFDWixNQUFNLEVBQUUsOENBQThDO0tBQ3ZEO0lBQ0Q7O09BRUc7SUFDSCxrQkFBa0IsRUFBRTtRQUNsQixPQUFPLEVBQUUscUJBQXFCO1FBQzlCLElBQUksRUFBRSxVQUFVO1FBQ2hCLE1BQU0sRUFBRSw4Q0FBOEM7S0FDdkQ7SUFDRDs7T0FFRztJQUNILFlBQVksRUFBRTtRQUNaLE9BQU8sRUFBRSxlQUFlO1FBQ3hCLElBQUksRUFBRSxjQUFjO1FBQ3BCLE1BQU0sRUFBRSw4Q0FBOEM7S0FDdkQ7SUFDRDs7T0FFRztJQUNILEtBQUssRUFBRTtRQUNMLE9BQU8sRUFBRSxPQUFPO1FBQ2hCLElBQUksRUFBRSxPQUFPO1FBQ2IsTUFBTSxFQUFFLDhDQUE4QztLQUN2RDtJQUNEOztPQUVHO0lBQ0gsS0FBSyxFQUFFO1FBQ0wsT0FBTyxFQUFFLE9BQU87UUFDaEIsSUFBSSxFQUFFLE9BQU87UUFDYixNQUFNLEVBQUUsOENBQThDO0tBQ3ZEO0lBQ0Q7O09BRUc7SUFDSCxVQUFVLEVBQUU7UUFDVixPQUFPLEVBQUUsWUFBWTtRQUNyQixJQUFJLEVBQUUsWUFBWTtRQUNsQixNQUFNLEVBQUUsOENBQThDO0tBQ3ZEO0lBQ0Q7O09BRUc7SUFDSCxlQUFlLEVBQUU7UUFDZixPQUFPLEVBQUUsa0JBQWtCO1FBQzNCLElBQUksRUFBRSxTQUFTO1FBQ2YsTUFBTSxFQUFFLDhDQUE4QztLQUN2RDtDQUNPLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjMuY29yZSB2ZXJzaW9uOiAzLjAuMlxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvY2xhaW0taW5mb3JtYXRpb25jYXRlZ29yeXwzLjAuMlxyXG5cclxuaW1wb3J0IHsgQ29kaW5nQXJncyB9IGZyb20gJy4uL2ZoaXIvQ29kaW5nLmpzJ1xyXG5cclxuLyoqXHJcbiAqIFRoaXMgdmFsdWUgc2V0IGluY2x1ZGVzIHNhbXBsZSBJbmZvcm1hdGlvbiBDYXRlZ29yeSBjb2Rlcy5cclxuICovXHJcbmV4cG9ydCB0eXBlIENsYWltSW5mb3JtYXRpb25jYXRlZ29yeUNvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogYXR0YWNobWVudDogTWF0ZXJpYWxzIGF0dGFjaGVkIHN1Y2ggYXMgaW1hZ2VzLCBkb2N1bWVudHMgYW5kIHJlc291cmNlcy5cclxuICAgKi9cclxuICBBdHRhY2htZW50OiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIGRpc2NoYXJnZTogRGlzY2hhcmdlIHN0YXR1cyBhbmQgZGlzY2hhcmdlIHRvIGxvY2F0aW9ucy5cclxuICAgKi9cclxuICBEaXNjaGFyZ2U6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogZXhjZXB0aW9uOiBJbnN1cmFuY2UgcG9saWN5IGV4Y2VwdGlvbnMuXHJcbiAgICovXHJcbiAgRXhjZXB0aW9uOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIGluZm86IENvZGVzIGNvbnZleWluZyBhZGRpdGlvbmFsIHNpdHVhdGlvbiBhbmQgY29uZGl0aW9uIGluZm9ybWF0aW9uLlxyXG4gICAqL1xyXG4gIEluZm9ybWF0aW9uOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIG1hdGVyaWFsOiBNYXRlcmlhbHMgYmVpbmcgZm9yd2FyZGVkLCBlZy4gTW9kZWxzLCBtb2xkcywgaW1hZ2VzLCBkb2N1bWVudHMuXHJcbiAgICovXHJcbiAgTWF0ZXJpYWxzRm9yd2FyZGVkOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIG1pc3Npbmd0b290aDogVGVldGggd2hpY2ggYXJlIG1pc3NpbmcgZm9yIGFueSByZWFzb24sIGZvciBleGFtcGxlOiBwcmlvciBleHRyYWN0aW9uLCBuZXZlciBkZXZlbG9wZWQuXHJcbiAgICovXHJcbiAgTWlzc2luZ1Rvb3RoOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIG9uc2V0OiBQZXJpb2QsIHN0YXJ0IG9yIGVuZCBkYXRlcyBvZiBhc3BlY3RzIG9mIHRoZSBDb25kaXRpb24uXHJcbiAgICovXHJcbiAgT25zZXQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogb3RoZXI6IE90aGVyIGluZm9ybWF0aW9uIGlkZW50aWZpZWQgYnkgdGhlIHR5cGUuc3lzdGVtLlxyXG4gICAqL1xyXG4gIE90aGVyOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIHByb3N0aGVzaXM6IFRoZSB0eXBlIG9mIHByb3N0aGVzaXMgYW5kIGRhdGUgb2Ygc3VwcGx5IGlmIGEgcHJldmlvdXNseSBzdXBwbGllZCBwcm9zdGhlc2lzLlxyXG4gICAqL1xyXG4gIFByb3N0aGVzaXM6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogcmVsYXRlZDogTmF0dXJlIGFuZCBkYXRlIG9mIHRoZSByZWxhdGVkIGV2ZW50IGVnLiBMYXN0IGV4YW0sIHNlcnZpY2UsIFhyYXkgZXRjLlxyXG4gICAqL1xyXG4gIFJlbGF0ZWRTZXJ2aWNlczogQ29kaW5nQXJncztcclxufVxyXG5cclxuLyoqXHJcbiAqIFRoaXMgdmFsdWUgc2V0IGluY2x1ZGVzIHNhbXBsZSBJbmZvcm1hdGlvbiBDYXRlZ29yeSBjb2Rlcy5cclxuICovXHJcbmV4cG9ydCBjb25zdCBDbGFpbUluZm9ybWF0aW9uY2F0ZWdvcnlDb2RpbmdzOkNsYWltSW5mb3JtYXRpb25jYXRlZ29yeUNvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogYXR0YWNobWVudDogTWF0ZXJpYWxzIGF0dGFjaGVkIHN1Y2ggYXMgaW1hZ2VzLCBkb2N1bWVudHMgYW5kIHJlc291cmNlcy5cclxuICAgKi9cclxuICBBdHRhY2htZW50OiB7XHJcbiAgICBkaXNwbGF5OiBcIkF0dGFjaG1lbnRcIixcclxuICAgIGNvZGU6IFwiYXR0YWNobWVudFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvY2xhaW1pbmZvcm1hdGlvbmNhdGVnb3J5XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBkaXNjaGFyZ2U6IERpc2NoYXJnZSBzdGF0dXMgYW5kIGRpc2NoYXJnZSB0byBsb2NhdGlvbnMuXHJcbiAgICovXHJcbiAgRGlzY2hhcmdlOiB7XHJcbiAgICBkaXNwbGF5OiBcIkRpc2NoYXJnZVwiLFxyXG4gICAgY29kZTogXCJkaXNjaGFyZ2VcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2NsYWltaW5mb3JtYXRpb25jYXRlZ29yeVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogZXhjZXB0aW9uOiBJbnN1cmFuY2UgcG9saWN5IGV4Y2VwdGlvbnMuXHJcbiAgICovXHJcbiAgRXhjZXB0aW9uOiB7XHJcbiAgICBkaXNwbGF5OiBcIkV4Y2VwdGlvblwiLFxyXG4gICAgY29kZTogXCJleGNlcHRpb25cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2NsYWltaW5mb3JtYXRpb25jYXRlZ29yeVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogaW5mbzogQ29kZXMgY29udmV5aW5nIGFkZGl0aW9uYWwgc2l0dWF0aW9uIGFuZCBjb25kaXRpb24gaW5mb3JtYXRpb24uXHJcbiAgICovXHJcbiAgSW5mb3JtYXRpb246IHtcclxuICAgIGRpc3BsYXk6IFwiSW5mb3JtYXRpb25cIixcclxuICAgIGNvZGU6IFwiaW5mb1wiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvY2xhaW1pbmZvcm1hdGlvbmNhdGVnb3J5XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBtYXRlcmlhbDogTWF0ZXJpYWxzIGJlaW5nIGZvcndhcmRlZCwgZWcuIE1vZGVscywgbW9sZHMsIGltYWdlcywgZG9jdW1lbnRzLlxyXG4gICAqL1xyXG4gIE1hdGVyaWFsc0ZvcndhcmRlZDoge1xyXG4gICAgZGlzcGxheTogXCJNYXRlcmlhbHMgRm9yd2FyZGVkXCIsXHJcbiAgICBjb2RlOiBcIm1hdGVyaWFsXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9jbGFpbWluZm9ybWF0aW9uY2F0ZWdvcnlcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIG1pc3Npbmd0b290aDogVGVldGggd2hpY2ggYXJlIG1pc3NpbmcgZm9yIGFueSByZWFzb24sIGZvciBleGFtcGxlOiBwcmlvciBleHRyYWN0aW9uLCBuZXZlciBkZXZlbG9wZWQuXHJcbiAgICovXHJcbiAgTWlzc2luZ1Rvb3RoOiB7XHJcbiAgICBkaXNwbGF5OiBcIk1pc3NpbmcgVG9vdGhcIixcclxuICAgIGNvZGU6IFwibWlzc2luZ3Rvb3RoXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9jbGFpbWluZm9ybWF0aW9uY2F0ZWdvcnlcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIG9uc2V0OiBQZXJpb2QsIHN0YXJ0IG9yIGVuZCBkYXRlcyBvZiBhc3BlY3RzIG9mIHRoZSBDb25kaXRpb24uXHJcbiAgICovXHJcbiAgT25zZXQ6IHtcclxuICAgIGRpc3BsYXk6IFwiT25zZXRcIixcclxuICAgIGNvZGU6IFwib25zZXRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2NsYWltaW5mb3JtYXRpb25jYXRlZ29yeVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogb3RoZXI6IE90aGVyIGluZm9ybWF0aW9uIGlkZW50aWZpZWQgYnkgdGhlIHR5cGUuc3lzdGVtLlxyXG4gICAqL1xyXG4gIE90aGVyOiB7XHJcbiAgICBkaXNwbGF5OiBcIk90aGVyXCIsXHJcbiAgICBjb2RlOiBcIm90aGVyXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9jbGFpbWluZm9ybWF0aW9uY2F0ZWdvcnlcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIHByb3N0aGVzaXM6IFRoZSB0eXBlIG9mIHByb3N0aGVzaXMgYW5kIGRhdGUgb2Ygc3VwcGx5IGlmIGEgcHJldmlvdXNseSBzdXBwbGllZCBwcm9zdGhlc2lzLlxyXG4gICAqL1xyXG4gIFByb3N0aGVzaXM6IHtcclxuICAgIGRpc3BsYXk6IFwiUHJvc3RoZXNpc1wiLFxyXG4gICAgY29kZTogXCJwcm9zdGhlc2lzXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9jbGFpbWluZm9ybWF0aW9uY2F0ZWdvcnlcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIHJlbGF0ZWQ6IE5hdHVyZSBhbmQgZGF0ZSBvZiB0aGUgcmVsYXRlZCBldmVudCBlZy4gTGFzdCBleGFtLCBzZXJ2aWNlLCBYcmF5IGV0Yy5cclxuICAgKi9cclxuICBSZWxhdGVkU2VydmljZXM6IHtcclxuICAgIGRpc3BsYXk6IFwiUmVsYXRlZCBTZXJ2aWNlc1wiLFxyXG4gICAgY29kZTogXCJyZWxhdGVkXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9jbGFpbWluZm9ybWF0aW9uY2F0ZWdvcnlcIixcclxuICB9LFxyXG59IGFzIGNvbnN0O1xyXG4iXX0=