// <auto-generated/>
// Contents of: hl7.fhir.r3.core version: 3.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/type-derivation-rule|3.0.2
/**
 * How a type relates to its baseDefinition.
 */
export const TypeDerivationRuleCodings = {
    /**
     * constraint: This definition adds additional rules to an existing concrete type
     */
    Constraint: {
        display: "Constraint",
        code: "constraint",
        system: "http://hl7.org/fhir/type-derivation-rule",
    },
    /**
     * specialization: This definition defines a new type that adds additional elements to the base type
     */
    Specialization: {
        display: "Specialization",
        code: "specialization",
        system: "http://hl7.org/fhir/type-derivation-rule",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVHlwZURlcml2YXRpb25SdWxlQ29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvVHlwZURlcml2YXRpb25SdWxlQ29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyx5RUFBeUU7QUFrQnpFOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0seUJBQXlCLEdBQWdDO0lBQ3BFOztPQUVHO0lBQ0gsVUFBVSxFQUFFO1FBQ1YsT0FBTyxFQUFFLFlBQVk7UUFDckIsSUFBSSxFQUFFLFlBQVk7UUFDbEIsTUFBTSxFQUFFLDBDQUEwQztLQUNuRDtJQUNEOztPQUVHO0lBQ0gsY0FBYyxFQUFFO1FBQ2QsT0FBTyxFQUFFLGdCQUFnQjtRQUN6QixJQUFJLEVBQUUsZ0JBQWdCO1FBQ3RCLE1BQU0sRUFBRSwwQ0FBMEM7S0FDbkQ7Q0FDTyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnIzLmNvcmUgdmVyc2lvbjogMy4wLjJcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L3R5cGUtZGVyaXZhdGlvbi1ydWxlfDMuMC4yXHJcblxyXG5pbXBvcnQgeyBDb2RpbmdBcmdzIH0gZnJvbSAnLi4vZmhpci9Db2RpbmcuanMnXHJcblxyXG4vKipcclxuICogSG93IGEgdHlwZSByZWxhdGVzIHRvIGl0cyBiYXNlRGVmaW5pdGlvbi5cclxuICovXHJcbmV4cG9ydCB0eXBlIFR5cGVEZXJpdmF0aW9uUnVsZUNvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogY29uc3RyYWludDogVGhpcyBkZWZpbml0aW9uIGFkZHMgYWRkaXRpb25hbCBydWxlcyB0byBhbiBleGlzdGluZyBjb25jcmV0ZSB0eXBlXHJcbiAgICovXHJcbiAgQ29uc3RyYWludDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBzcGVjaWFsaXphdGlvbjogVGhpcyBkZWZpbml0aW9uIGRlZmluZXMgYSBuZXcgdHlwZSB0aGF0IGFkZHMgYWRkaXRpb25hbCBlbGVtZW50cyB0byB0aGUgYmFzZSB0eXBlXHJcbiAgICovXHJcbiAgU3BlY2lhbGl6YXRpb246IENvZGluZ0FyZ3M7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBIb3cgYSB0eXBlIHJlbGF0ZXMgdG8gaXRzIGJhc2VEZWZpbml0aW9uLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IFR5cGVEZXJpdmF0aW9uUnVsZUNvZGluZ3M6VHlwZURlcml2YXRpb25SdWxlQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBjb25zdHJhaW50OiBUaGlzIGRlZmluaXRpb24gYWRkcyBhZGRpdGlvbmFsIHJ1bGVzIHRvIGFuIGV4aXN0aW5nIGNvbmNyZXRlIHR5cGVcclxuICAgKi9cclxuICBDb25zdHJhaW50OiB7XHJcbiAgICBkaXNwbGF5OiBcIkNvbnN0cmFpbnRcIixcclxuICAgIGNvZGU6IFwiY29uc3RyYWludFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvdHlwZS1kZXJpdmF0aW9uLXJ1bGVcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIHNwZWNpYWxpemF0aW9uOiBUaGlzIGRlZmluaXRpb24gZGVmaW5lcyBhIG5ldyB0eXBlIHRoYXQgYWRkcyBhZGRpdGlvbmFsIGVsZW1lbnRzIHRvIHRoZSBiYXNlIHR5cGVcclxuICAgKi9cclxuICBTcGVjaWFsaXphdGlvbjoge1xyXG4gICAgZGlzcGxheTogXCJTcGVjaWFsaXphdGlvblwiLFxyXG4gICAgY29kZTogXCJzcGVjaWFsaXphdGlvblwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvdHlwZS1kZXJpdmF0aW9uLXJ1bGVcIixcclxuICB9LFxyXG59IGFzIGNvbnN0O1xyXG4iXX0=