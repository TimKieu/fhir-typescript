// <auto-generated/>
// Contents of: hl7.fhir.r3.core version: 3.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/codesystem-content-mode|3.0.2
/**
 * How much of the content of the code system - the concepts and codes it defines - are represented in a code system resource
 */
export const CodesystemContentModeCodings = {
    /**
     * complete: All the concepts defined by the code system are included in the code system resource
     */
    Complete: {
        display: "Complete",
        code: "complete",
        system: "http://hl7.org/fhir/codesystem-content-mode",
    },
    /**
     * example: A few representative concepts are included in the code system resource
     */
    Example: {
        display: "Example",
        code: "example",
        system: "http://hl7.org/fhir/codesystem-content-mode",
    },
    /**
     * fragment: A subset of the code system concepts are included in the code system resource
     */
    Fragment: {
        display: "Fragment",
        code: "fragment",
        system: "http://hl7.org/fhir/codesystem-content-mode",
    },
    /**
     * not-present: None of the concepts defined by the code system are included in the code system resource
     */
    NotPresent: {
        display: "Not Present",
        code: "not-present",
        system: "http://hl7.org/fhir/codesystem-content-mode",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29kZXN5c3RlbUNvbnRlbnRNb2RlQ29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvQ29kZXN5c3RlbUNvbnRlbnRNb2RlQ29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyw0RUFBNEU7QUEwQjVFOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sNEJBQTRCLEdBQW1DO0lBQzFFOztPQUVHO0lBQ0gsUUFBUSxFQUFFO1FBQ1IsT0FBTyxFQUFFLFVBQVU7UUFDbkIsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLDZDQUE2QztLQUN0RDtJQUNEOztPQUVHO0lBQ0gsT0FBTyxFQUFFO1FBQ1AsT0FBTyxFQUFFLFNBQVM7UUFDbEIsSUFBSSxFQUFFLFNBQVM7UUFDZixNQUFNLEVBQUUsNkNBQTZDO0tBQ3REO0lBQ0Q7O09BRUc7SUFDSCxRQUFRLEVBQUU7UUFDUixPQUFPLEVBQUUsVUFBVTtRQUNuQixJQUFJLEVBQUUsVUFBVTtRQUNoQixNQUFNLEVBQUUsNkNBQTZDO0tBQ3REO0lBQ0Q7O09BRUc7SUFDSCxVQUFVLEVBQUU7UUFDVixPQUFPLEVBQUUsYUFBYTtRQUN0QixJQUFJLEVBQUUsYUFBYTtRQUNuQixNQUFNLEVBQUUsNkNBQTZDO0tBQ3REO0NBQ08sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yMy5jb3JlIHZlcnNpb246IDMuMC4yXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9jb2Rlc3lzdGVtLWNvbnRlbnQtbW9kZXwzLjAuMlxyXG5cclxuaW1wb3J0IHsgQ29kaW5nQXJncyB9IGZyb20gJy4uL2ZoaXIvQ29kaW5nLmpzJ1xyXG5cclxuLyoqXHJcbiAqIEhvdyBtdWNoIG9mIHRoZSBjb250ZW50IG9mIHRoZSBjb2RlIHN5c3RlbSAtIHRoZSBjb25jZXB0cyBhbmQgY29kZXMgaXQgZGVmaW5lcyAtIGFyZSByZXByZXNlbnRlZCBpbiBhIGNvZGUgc3lzdGVtIHJlc291cmNlXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBDb2Rlc3lzdGVtQ29udGVudE1vZGVDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIGNvbXBsZXRlOiBBbGwgdGhlIGNvbmNlcHRzIGRlZmluZWQgYnkgdGhlIGNvZGUgc3lzdGVtIGFyZSBpbmNsdWRlZCBpbiB0aGUgY29kZSBzeXN0ZW0gcmVzb3VyY2VcclxuICAgKi9cclxuICBDb21wbGV0ZTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBleGFtcGxlOiBBIGZldyByZXByZXNlbnRhdGl2ZSBjb25jZXB0cyBhcmUgaW5jbHVkZWQgaW4gdGhlIGNvZGUgc3lzdGVtIHJlc291cmNlXHJcbiAgICovXHJcbiAgRXhhbXBsZTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBmcmFnbWVudDogQSBzdWJzZXQgb2YgdGhlIGNvZGUgc3lzdGVtIGNvbmNlcHRzIGFyZSBpbmNsdWRlZCBpbiB0aGUgY29kZSBzeXN0ZW0gcmVzb3VyY2VcclxuICAgKi9cclxuICBGcmFnbWVudDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBub3QtcHJlc2VudDogTm9uZSBvZiB0aGUgY29uY2VwdHMgZGVmaW5lZCBieSB0aGUgY29kZSBzeXN0ZW0gYXJlIGluY2x1ZGVkIGluIHRoZSBjb2RlIHN5c3RlbSByZXNvdXJjZVxyXG4gICAqL1xyXG4gIE5vdFByZXNlbnQ6IENvZGluZ0FyZ3M7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBIb3cgbXVjaCBvZiB0aGUgY29udGVudCBvZiB0aGUgY29kZSBzeXN0ZW0gLSB0aGUgY29uY2VwdHMgYW5kIGNvZGVzIGl0IGRlZmluZXMgLSBhcmUgcmVwcmVzZW50ZWQgaW4gYSBjb2RlIHN5c3RlbSByZXNvdXJjZVxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IENvZGVzeXN0ZW1Db250ZW50TW9kZUNvZGluZ3M6Q29kZXN5c3RlbUNvbnRlbnRNb2RlQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBjb21wbGV0ZTogQWxsIHRoZSBjb25jZXB0cyBkZWZpbmVkIGJ5IHRoZSBjb2RlIHN5c3RlbSBhcmUgaW5jbHVkZWQgaW4gdGhlIGNvZGUgc3lzdGVtIHJlc291cmNlXHJcbiAgICovXHJcbiAgQ29tcGxldGU6IHtcclxuICAgIGRpc3BsYXk6IFwiQ29tcGxldGVcIixcclxuICAgIGNvZGU6IFwiY29tcGxldGVcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2NvZGVzeXN0ZW0tY29udGVudC1tb2RlXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBleGFtcGxlOiBBIGZldyByZXByZXNlbnRhdGl2ZSBjb25jZXB0cyBhcmUgaW5jbHVkZWQgaW4gdGhlIGNvZGUgc3lzdGVtIHJlc291cmNlXHJcbiAgICovXHJcbiAgRXhhbXBsZToge1xyXG4gICAgZGlzcGxheTogXCJFeGFtcGxlXCIsXHJcbiAgICBjb2RlOiBcImV4YW1wbGVcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2NvZGVzeXN0ZW0tY29udGVudC1tb2RlXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBmcmFnbWVudDogQSBzdWJzZXQgb2YgdGhlIGNvZGUgc3lzdGVtIGNvbmNlcHRzIGFyZSBpbmNsdWRlZCBpbiB0aGUgY29kZSBzeXN0ZW0gcmVzb3VyY2VcclxuICAgKi9cclxuICBGcmFnbWVudDoge1xyXG4gICAgZGlzcGxheTogXCJGcmFnbWVudFwiLFxyXG4gICAgY29kZTogXCJmcmFnbWVudFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvY29kZXN5c3RlbS1jb250ZW50LW1vZGVcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIG5vdC1wcmVzZW50OiBOb25lIG9mIHRoZSBjb25jZXB0cyBkZWZpbmVkIGJ5IHRoZSBjb2RlIHN5c3RlbSBhcmUgaW5jbHVkZWQgaW4gdGhlIGNvZGUgc3lzdGVtIHJlc291cmNlXHJcbiAgICovXHJcbiAgTm90UHJlc2VudDoge1xyXG4gICAgZGlzcGxheTogXCJOb3QgUHJlc2VudFwiLFxyXG4gICAgY29kZTogXCJub3QtcHJlc2VudFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvY29kZXN5c3RlbS1jb250ZW50LW1vZGVcIixcclxuICB9LFxyXG59IGFzIGNvbnN0O1xyXG4iXX0=