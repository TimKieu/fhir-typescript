// <auto-generated/>
// Contents of: hl7.fhir.r3.core version: 3.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/action-relationship-type|3.0.2
/**
 * Defines the types of relationships between actions
 */
export const ActionRelationshipTypeCodings = {
    /**
     * after: The action must be performed after the related action
     */
    After: {
        display: "After",
        code: "after",
        system: "http://hl7.org/fhir/action-relationship-type",
    },
    /**
     * after-end: The action must be performed after the end of the related action
     */
    AfterEnd: {
        display: "After End",
        code: "after-end",
        system: "http://hl7.org/fhir/action-relationship-type",
    },
    /**
     * after-start: The action must be performed after the start of the related action
     */
    AfterStart: {
        display: "After Start",
        code: "after-start",
        system: "http://hl7.org/fhir/action-relationship-type",
    },
    /**
     * before: The action must be performed before the related action
     */
    Before: {
        display: "Before",
        code: "before",
        system: "http://hl7.org/fhir/action-relationship-type",
    },
    /**
     * before-end: The action must be performed before the end of the related action
     */
    BeforeEnd: {
        display: "Before End",
        code: "before-end",
        system: "http://hl7.org/fhir/action-relationship-type",
    },
    /**
     * before-start: The action must be performed before the start of the related action
     */
    BeforeStart: {
        display: "Before Start",
        code: "before-start",
        system: "http://hl7.org/fhir/action-relationship-type",
    },
    /**
     * concurrent: The action must be performed concurrent with the related action
     */
    Concurrent: {
        display: "Concurrent",
        code: "concurrent",
        system: "http://hl7.org/fhir/action-relationship-type",
    },
    /**
     * concurrent-with-end: The action must be performed concurrent with the end of the related action
     */
    ConcurrentWithEnd: {
        display: "Concurrent With End",
        code: "concurrent-with-end",
        system: "http://hl7.org/fhir/action-relationship-type",
    },
    /**
     * concurrent-with-start: The action must be performed concurrent with the start of the related action
     */
    ConcurrentWithStart: {
        display: "Concurrent With Start",
        code: "concurrent-with-start",
        system: "http://hl7.org/fhir/action-relationship-type",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQWN0aW9uUmVsYXRpb25zaGlwVHlwZUNvZGluZ3MuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL0FjdGlvblJlbGF0aW9uc2hpcFR5cGVDb2RpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQiwrQ0FBK0M7QUFDL0Msa0NBQWtDO0FBQ2xDLDZFQUE2RTtBQThDN0U7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSw2QkFBNkIsR0FBb0M7SUFDNUU7O09BRUc7SUFDSCxLQUFLLEVBQUU7UUFDTCxPQUFPLEVBQUUsT0FBTztRQUNoQixJQUFJLEVBQUUsT0FBTztRQUNiLE1BQU0sRUFBRSw4Q0FBOEM7S0FDdkQ7SUFDRDs7T0FFRztJQUNILFFBQVEsRUFBRTtRQUNSLE9BQU8sRUFBRSxXQUFXO1FBQ3BCLElBQUksRUFBRSxXQUFXO1FBQ2pCLE1BQU0sRUFBRSw4Q0FBOEM7S0FDdkQ7SUFDRDs7T0FFRztJQUNILFVBQVUsRUFBRTtRQUNWLE9BQU8sRUFBRSxhQUFhO1FBQ3RCLElBQUksRUFBRSxhQUFhO1FBQ25CLE1BQU0sRUFBRSw4Q0FBOEM7S0FDdkQ7SUFDRDs7T0FFRztJQUNILE1BQU0sRUFBRTtRQUNOLE9BQU8sRUFBRSxRQUFRO1FBQ2pCLElBQUksRUFBRSxRQUFRO1FBQ2QsTUFBTSxFQUFFLDhDQUE4QztLQUN2RDtJQUNEOztPQUVHO0lBQ0gsU0FBUyxFQUFFO1FBQ1QsT0FBTyxFQUFFLFlBQVk7UUFDckIsSUFBSSxFQUFFLFlBQVk7UUFDbEIsTUFBTSxFQUFFLDhDQUE4QztLQUN2RDtJQUNEOztPQUVHO0lBQ0gsV0FBVyxFQUFFO1FBQ1gsT0FBTyxFQUFFLGNBQWM7UUFDdkIsSUFBSSxFQUFFLGNBQWM7UUFDcEIsTUFBTSxFQUFFLDhDQUE4QztLQUN2RDtJQUNEOztPQUVHO0lBQ0gsVUFBVSxFQUFFO1FBQ1YsT0FBTyxFQUFFLFlBQVk7UUFDckIsSUFBSSxFQUFFLFlBQVk7UUFDbEIsTUFBTSxFQUFFLDhDQUE4QztLQUN2RDtJQUNEOztPQUVHO0lBQ0gsaUJBQWlCLEVBQUU7UUFDakIsT0FBTyxFQUFFLHFCQUFxQjtRQUM5QixJQUFJLEVBQUUscUJBQXFCO1FBQzNCLE1BQU0sRUFBRSw4Q0FBOEM7S0FDdkQ7SUFDRDs7T0FFRztJQUNILG1CQUFtQixFQUFFO1FBQ25CLE9BQU8sRUFBRSx1QkFBdUI7UUFDaEMsSUFBSSxFQUFFLHVCQUF1QjtRQUM3QixNQUFNLEVBQUUsOENBQThDO0tBQ3ZEO0NBQ08sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yMy5jb3JlIHZlcnNpb246IDMuMC4yXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9hY3Rpb24tcmVsYXRpb25zaGlwLXR5cGV8My4wLjJcclxuXHJcbmltcG9ydCB7IENvZGluZ0FyZ3MgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiBEZWZpbmVzIHRoZSB0eXBlcyBvZiByZWxhdGlvbnNoaXBzIGJldHdlZW4gYWN0aW9uc1xyXG4gKi9cclxuZXhwb3J0IHR5cGUgQWN0aW9uUmVsYXRpb25zaGlwVHlwZUNvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogYWZ0ZXI6IFRoZSBhY3Rpb24gbXVzdCBiZSBwZXJmb3JtZWQgYWZ0ZXIgdGhlIHJlbGF0ZWQgYWN0aW9uXHJcbiAgICovXHJcbiAgQWZ0ZXI6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogYWZ0ZXItZW5kOiBUaGUgYWN0aW9uIG11c3QgYmUgcGVyZm9ybWVkIGFmdGVyIHRoZSBlbmQgb2YgdGhlIHJlbGF0ZWQgYWN0aW9uXHJcbiAgICovXHJcbiAgQWZ0ZXJFbmQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogYWZ0ZXItc3RhcnQ6IFRoZSBhY3Rpb24gbXVzdCBiZSBwZXJmb3JtZWQgYWZ0ZXIgdGhlIHN0YXJ0IG9mIHRoZSByZWxhdGVkIGFjdGlvblxyXG4gICAqL1xyXG4gIEFmdGVyU3RhcnQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogYmVmb3JlOiBUaGUgYWN0aW9uIG11c3QgYmUgcGVyZm9ybWVkIGJlZm9yZSB0aGUgcmVsYXRlZCBhY3Rpb25cclxuICAgKi9cclxuICBCZWZvcmU6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogYmVmb3JlLWVuZDogVGhlIGFjdGlvbiBtdXN0IGJlIHBlcmZvcm1lZCBiZWZvcmUgdGhlIGVuZCBvZiB0aGUgcmVsYXRlZCBhY3Rpb25cclxuICAgKi9cclxuICBCZWZvcmVFbmQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogYmVmb3JlLXN0YXJ0OiBUaGUgYWN0aW9uIG11c3QgYmUgcGVyZm9ybWVkIGJlZm9yZSB0aGUgc3RhcnQgb2YgdGhlIHJlbGF0ZWQgYWN0aW9uXHJcbiAgICovXHJcbiAgQmVmb3JlU3RhcnQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogY29uY3VycmVudDogVGhlIGFjdGlvbiBtdXN0IGJlIHBlcmZvcm1lZCBjb25jdXJyZW50IHdpdGggdGhlIHJlbGF0ZWQgYWN0aW9uXHJcbiAgICovXHJcbiAgQ29uY3VycmVudDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBjb25jdXJyZW50LXdpdGgtZW5kOiBUaGUgYWN0aW9uIG11c3QgYmUgcGVyZm9ybWVkIGNvbmN1cnJlbnQgd2l0aCB0aGUgZW5kIG9mIHRoZSByZWxhdGVkIGFjdGlvblxyXG4gICAqL1xyXG4gIENvbmN1cnJlbnRXaXRoRW5kOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIGNvbmN1cnJlbnQtd2l0aC1zdGFydDogVGhlIGFjdGlvbiBtdXN0IGJlIHBlcmZvcm1lZCBjb25jdXJyZW50IHdpdGggdGhlIHN0YXJ0IG9mIHRoZSByZWxhdGVkIGFjdGlvblxyXG4gICAqL1xyXG4gIENvbmN1cnJlbnRXaXRoU3RhcnQ6IENvZGluZ0FyZ3M7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBEZWZpbmVzIHRoZSB0eXBlcyBvZiByZWxhdGlvbnNoaXBzIGJldHdlZW4gYWN0aW9uc1xyXG4gKi9cclxuZXhwb3J0IGNvbnN0IEFjdGlvblJlbGF0aW9uc2hpcFR5cGVDb2RpbmdzOkFjdGlvblJlbGF0aW9uc2hpcFR5cGVDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIGFmdGVyOiBUaGUgYWN0aW9uIG11c3QgYmUgcGVyZm9ybWVkIGFmdGVyIHRoZSByZWxhdGVkIGFjdGlvblxyXG4gICAqL1xyXG4gIEFmdGVyOiB7XHJcbiAgICBkaXNwbGF5OiBcIkFmdGVyXCIsXHJcbiAgICBjb2RlOiBcImFmdGVyXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9hY3Rpb24tcmVsYXRpb25zaGlwLXR5cGVcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIGFmdGVyLWVuZDogVGhlIGFjdGlvbiBtdXN0IGJlIHBlcmZvcm1lZCBhZnRlciB0aGUgZW5kIG9mIHRoZSByZWxhdGVkIGFjdGlvblxyXG4gICAqL1xyXG4gIEFmdGVyRW5kOiB7XHJcbiAgICBkaXNwbGF5OiBcIkFmdGVyIEVuZFwiLFxyXG4gICAgY29kZTogXCJhZnRlci1lbmRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2FjdGlvbi1yZWxhdGlvbnNoaXAtdHlwZVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogYWZ0ZXItc3RhcnQ6IFRoZSBhY3Rpb24gbXVzdCBiZSBwZXJmb3JtZWQgYWZ0ZXIgdGhlIHN0YXJ0IG9mIHRoZSByZWxhdGVkIGFjdGlvblxyXG4gICAqL1xyXG4gIEFmdGVyU3RhcnQ6IHtcclxuICAgIGRpc3BsYXk6IFwiQWZ0ZXIgU3RhcnRcIixcclxuICAgIGNvZGU6IFwiYWZ0ZXItc3RhcnRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2FjdGlvbi1yZWxhdGlvbnNoaXAtdHlwZVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogYmVmb3JlOiBUaGUgYWN0aW9uIG11c3QgYmUgcGVyZm9ybWVkIGJlZm9yZSB0aGUgcmVsYXRlZCBhY3Rpb25cclxuICAgKi9cclxuICBCZWZvcmU6IHtcclxuICAgIGRpc3BsYXk6IFwiQmVmb3JlXCIsXHJcbiAgICBjb2RlOiBcImJlZm9yZVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvYWN0aW9uLXJlbGF0aW9uc2hpcC10eXBlXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBiZWZvcmUtZW5kOiBUaGUgYWN0aW9uIG11c3QgYmUgcGVyZm9ybWVkIGJlZm9yZSB0aGUgZW5kIG9mIHRoZSByZWxhdGVkIGFjdGlvblxyXG4gICAqL1xyXG4gIEJlZm9yZUVuZDoge1xyXG4gICAgZGlzcGxheTogXCJCZWZvcmUgRW5kXCIsXHJcbiAgICBjb2RlOiBcImJlZm9yZS1lbmRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2FjdGlvbi1yZWxhdGlvbnNoaXAtdHlwZVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogYmVmb3JlLXN0YXJ0OiBUaGUgYWN0aW9uIG11c3QgYmUgcGVyZm9ybWVkIGJlZm9yZSB0aGUgc3RhcnQgb2YgdGhlIHJlbGF0ZWQgYWN0aW9uXHJcbiAgICovXHJcbiAgQmVmb3JlU3RhcnQ6IHtcclxuICAgIGRpc3BsYXk6IFwiQmVmb3JlIFN0YXJ0XCIsXHJcbiAgICBjb2RlOiBcImJlZm9yZS1zdGFydFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvYWN0aW9uLXJlbGF0aW9uc2hpcC10eXBlXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBjb25jdXJyZW50OiBUaGUgYWN0aW9uIG11c3QgYmUgcGVyZm9ybWVkIGNvbmN1cnJlbnQgd2l0aCB0aGUgcmVsYXRlZCBhY3Rpb25cclxuICAgKi9cclxuICBDb25jdXJyZW50OiB7XHJcbiAgICBkaXNwbGF5OiBcIkNvbmN1cnJlbnRcIixcclxuICAgIGNvZGU6IFwiY29uY3VycmVudFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvYWN0aW9uLXJlbGF0aW9uc2hpcC10eXBlXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBjb25jdXJyZW50LXdpdGgtZW5kOiBUaGUgYWN0aW9uIG11c3QgYmUgcGVyZm9ybWVkIGNvbmN1cnJlbnQgd2l0aCB0aGUgZW5kIG9mIHRoZSByZWxhdGVkIGFjdGlvblxyXG4gICAqL1xyXG4gIENvbmN1cnJlbnRXaXRoRW5kOiB7XHJcbiAgICBkaXNwbGF5OiBcIkNvbmN1cnJlbnQgV2l0aCBFbmRcIixcclxuICAgIGNvZGU6IFwiY29uY3VycmVudC13aXRoLWVuZFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvYWN0aW9uLXJlbGF0aW9uc2hpcC10eXBlXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBjb25jdXJyZW50LXdpdGgtc3RhcnQ6IFRoZSBhY3Rpb24gbXVzdCBiZSBwZXJmb3JtZWQgY29uY3VycmVudCB3aXRoIHRoZSBzdGFydCBvZiB0aGUgcmVsYXRlZCBhY3Rpb25cclxuICAgKi9cclxuICBDb25jdXJyZW50V2l0aFN0YXJ0OiB7XHJcbiAgICBkaXNwbGF5OiBcIkNvbmN1cnJlbnQgV2l0aCBTdGFydFwiLFxyXG4gICAgY29kZTogXCJjb25jdXJyZW50LXdpdGgtc3RhcnRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2FjdGlvbi1yZWxhdGlvbnNoaXAtdHlwZVwiLFxyXG4gIH0sXHJcbn0gYXMgY29uc3Q7XHJcbiJdfQ==