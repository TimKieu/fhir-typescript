// <auto-generated/>
// Contents of: hl7.fhir.r3.core version: 3.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/http-operations|3.0.2
/**
 * The allowable request method or HTTP operation codes.
 */
export const HttpOperationsCodings = {
    /**
     * delete: HTTP DELETE operation
     */
    DELETE: {
        display: "DELETE",
        code: "delete",
        system: "http://hl7.org/fhir/http-operations",
    },
    /**
     * get: HTTP GET operation
     */
    GET: {
        display: "GET",
        code: "get",
        system: "http://hl7.org/fhir/http-operations",
    },
    /**
     * options: HTTP OPTIONS operation
     */
    OPTIONS: {
        display: "OPTIONS",
        code: "options",
        system: "http://hl7.org/fhir/http-operations",
    },
    /**
     * patch: HTTP PATCH operation
     */
    PATCH: {
        display: "PATCH",
        code: "patch",
        system: "http://hl7.org/fhir/http-operations",
    },
    /**
     * post: HTTP POST operation
     */
    POST: {
        display: "POST",
        code: "post",
        system: "http://hl7.org/fhir/http-operations",
    },
    /**
     * put: HTTP PUT operation
     */
    PUT: {
        display: "PUT",
        code: "put",
        system: "http://hl7.org/fhir/http-operations",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSHR0cE9wZXJhdGlvbnNDb2RpbmdzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9IdHRwT3BlcmF0aW9uc0NvZGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLCtDQUErQztBQUMvQyxrQ0FBa0M7QUFDbEMsb0VBQW9FO0FBa0NwRTs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUE0QjtJQUM1RDs7T0FFRztJQUNILE1BQU0sRUFBRTtRQUNOLE9BQU8sRUFBRSxRQUFRO1FBQ2pCLElBQUksRUFBRSxRQUFRO1FBQ2QsTUFBTSxFQUFFLHFDQUFxQztLQUM5QztJQUNEOztPQUVHO0lBQ0gsR0FBRyxFQUFFO1FBQ0gsT0FBTyxFQUFFLEtBQUs7UUFDZCxJQUFJLEVBQUUsS0FBSztRQUNYLE1BQU0sRUFBRSxxQ0FBcUM7S0FDOUM7SUFDRDs7T0FFRztJQUNILE9BQU8sRUFBRTtRQUNQLE9BQU8sRUFBRSxTQUFTO1FBQ2xCLElBQUksRUFBRSxTQUFTO1FBQ2YsTUFBTSxFQUFFLHFDQUFxQztLQUM5QztJQUNEOztPQUVHO0lBQ0gsS0FBSyxFQUFFO1FBQ0wsT0FBTyxFQUFFLE9BQU87UUFDaEIsSUFBSSxFQUFFLE9BQU87UUFDYixNQUFNLEVBQUUscUNBQXFDO0tBQzlDO0lBQ0Q7O09BRUc7SUFDSCxJQUFJLEVBQUU7UUFDSixPQUFPLEVBQUUsTUFBTTtRQUNmLElBQUksRUFBRSxNQUFNO1FBQ1osTUFBTSxFQUFFLHFDQUFxQztLQUM5QztJQUNEOztPQUVHO0lBQ0gsR0FBRyxFQUFFO1FBQ0gsT0FBTyxFQUFFLEtBQUs7UUFDZCxJQUFJLEVBQUUsS0FBSztRQUNYLE1BQU0sRUFBRSxxQ0FBcUM7S0FDOUM7Q0FDTyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnIzLmNvcmUgdmVyc2lvbjogMy4wLjJcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L2h0dHAtb3BlcmF0aW9uc3wzLjAuMlxyXG5cclxuaW1wb3J0IHsgQ29kaW5nQXJncyB9IGZyb20gJy4uL2ZoaXIvQ29kaW5nLmpzJ1xyXG5cclxuLyoqXHJcbiAqIFRoZSBhbGxvd2FibGUgcmVxdWVzdCBtZXRob2Qgb3IgSFRUUCBvcGVyYXRpb24gY29kZXMuXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBIdHRwT3BlcmF0aW9uc0NvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogZGVsZXRlOiBIVFRQIERFTEVURSBvcGVyYXRpb25cclxuICAgKi9cclxuICBERUxFVEU6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogZ2V0OiBIVFRQIEdFVCBvcGVyYXRpb25cclxuICAgKi9cclxuICBHRVQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogb3B0aW9uczogSFRUUCBPUFRJT05TIG9wZXJhdGlvblxyXG4gICAqL1xyXG4gIE9QVElPTlM6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogcGF0Y2g6IEhUVFAgUEFUQ0ggb3BlcmF0aW9uXHJcbiAgICovXHJcbiAgUEFUQ0g6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogcG9zdDogSFRUUCBQT1NUIG9wZXJhdGlvblxyXG4gICAqL1xyXG4gIFBPU1Q6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogcHV0OiBIVFRQIFBVVCBvcGVyYXRpb25cclxuICAgKi9cclxuICBQVVQ6IENvZGluZ0FyZ3M7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBUaGUgYWxsb3dhYmxlIHJlcXVlc3QgbWV0aG9kIG9yIEhUVFAgb3BlcmF0aW9uIGNvZGVzLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IEh0dHBPcGVyYXRpb25zQ29kaW5nczpIdHRwT3BlcmF0aW9uc0NvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogZGVsZXRlOiBIVFRQIERFTEVURSBvcGVyYXRpb25cclxuICAgKi9cclxuICBERUxFVEU6IHtcclxuICAgIGRpc3BsYXk6IFwiREVMRVRFXCIsXHJcbiAgICBjb2RlOiBcImRlbGV0ZVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvaHR0cC1vcGVyYXRpb25zXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBnZXQ6IEhUVFAgR0VUIG9wZXJhdGlvblxyXG4gICAqL1xyXG4gIEdFVDoge1xyXG4gICAgZGlzcGxheTogXCJHRVRcIixcclxuICAgIGNvZGU6IFwiZ2V0XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9odHRwLW9wZXJhdGlvbnNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIG9wdGlvbnM6IEhUVFAgT1BUSU9OUyBvcGVyYXRpb25cclxuICAgKi9cclxuICBPUFRJT05TOiB7XHJcbiAgICBkaXNwbGF5OiBcIk9QVElPTlNcIixcclxuICAgIGNvZGU6IFwib3B0aW9uc1wiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvaHR0cC1vcGVyYXRpb25zXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBwYXRjaDogSFRUUCBQQVRDSCBvcGVyYXRpb25cclxuICAgKi9cclxuICBQQVRDSDoge1xyXG4gICAgZGlzcGxheTogXCJQQVRDSFwiLFxyXG4gICAgY29kZTogXCJwYXRjaFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvaHR0cC1vcGVyYXRpb25zXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBwb3N0OiBIVFRQIFBPU1Qgb3BlcmF0aW9uXHJcbiAgICovXHJcbiAgUE9TVDoge1xyXG4gICAgZGlzcGxheTogXCJQT1NUXCIsXHJcbiAgICBjb2RlOiBcInBvc3RcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2h0dHAtb3BlcmF0aW9uc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogcHV0OiBIVFRQIFBVVCBvcGVyYXRpb25cclxuICAgKi9cclxuICBQVVQ6IHtcclxuICAgIGRpc3BsYXk6IFwiUFVUXCIsXHJcbiAgICBjb2RlOiBcInB1dFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvaHR0cC1vcGVyYXRpb25zXCIsXHJcbiAgfSxcclxufSBhcyBjb25zdDtcclxuIl19