// <auto-generated/>
// Contents of: hl7.fhir.r3.core version: 3.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/timing-abbreviation|3.0.2
/**
 * Code for a known / defined timing pattern.
 */
export const TimingAbbreviationCodings = {
    /**
     * AM: Every morning at institution specified times.
     */
    AM: {
        display: "AM",
        code: "AM",
        system: "http://hl7.org/fhir/v3/GTSAbbreviation",
    },
    /**
     * BID: Two times a day at institution specified time
     */
    BID: {
        display: "BID",
        code: "BID",
        system: "http://hl7.org/fhir/v3/GTSAbbreviation",
    },
    /**
     * PM: Every afternoon at institution specified times.
     */
    PM: {
        display: "PM",
        code: "PM",
        system: "http://hl7.org/fhir/v3/GTSAbbreviation",
    },
    /**
     * Q4H: Every 4 hours at institution specified time
     */
    Q4H: {
        display: "Q4H",
        code: "Q4H",
        system: "http://hl7.org/fhir/v3/GTSAbbreviation",
    },
    /**
     * Q6H: Every 6 hours at institution specified time
     */
    Q6H: {
        display: "Q6H",
        code: "Q6H",
        system: "http://hl7.org/fhir/v3/GTSAbbreviation",
    },
    /**
     * QD: Every day at institution specified times.
     */
    QD: {
        display: "QD",
        code: "QD",
        system: "http://hl7.org/fhir/v3/GTSAbbreviation",
    },
    /**
     * QID: Four times a day at institution specified time
     */
    QID: {
        display: "QID",
        code: "QID",
        system: "http://hl7.org/fhir/v3/GTSAbbreviation",
    },
    /**
     * QOD: Every other day at institution specified times.
     */
    QOD: {
        display: "QOD",
        code: "QOD",
        system: "http://hl7.org/fhir/v3/GTSAbbreviation",
    },
    /**
     * TID: Three times a day at institution specified time
     */
    TID: {
        display: "TID",
        code: "TID",
        system: "http://hl7.org/fhir/v3/GTSAbbreviation",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGltaW5nQWJicmV2aWF0aW9uQ29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvVGltaW5nQWJicmV2aWF0aW9uQ29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyx3RUFBd0U7QUE4Q3hFOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0seUJBQXlCLEdBQWdDO0lBQ3BFOztPQUVHO0lBQ0gsRUFBRSxFQUFFO1FBQ0YsT0FBTyxFQUFFLElBQUk7UUFDYixJQUFJLEVBQUUsSUFBSTtRQUNWLE1BQU0sRUFBRSx3Q0FBd0M7S0FDakQ7SUFDRDs7T0FFRztJQUNILEdBQUcsRUFBRTtRQUNILE9BQU8sRUFBRSxLQUFLO1FBQ2QsSUFBSSxFQUFFLEtBQUs7UUFDWCxNQUFNLEVBQUUsd0NBQXdDO0tBQ2pEO0lBQ0Q7O09BRUc7SUFDSCxFQUFFLEVBQUU7UUFDRixPQUFPLEVBQUUsSUFBSTtRQUNiLElBQUksRUFBRSxJQUFJO1FBQ1YsTUFBTSxFQUFFLHdDQUF3QztLQUNqRDtJQUNEOztPQUVHO0lBQ0gsR0FBRyxFQUFFO1FBQ0gsT0FBTyxFQUFFLEtBQUs7UUFDZCxJQUFJLEVBQUUsS0FBSztRQUNYLE1BQU0sRUFBRSx3Q0FBd0M7S0FDakQ7SUFDRDs7T0FFRztJQUNILEdBQUcsRUFBRTtRQUNILE9BQU8sRUFBRSxLQUFLO1FBQ2QsSUFBSSxFQUFFLEtBQUs7UUFDWCxNQUFNLEVBQUUsd0NBQXdDO0tBQ2pEO0lBQ0Q7O09BRUc7SUFDSCxFQUFFLEVBQUU7UUFDRixPQUFPLEVBQUUsSUFBSTtRQUNiLElBQUksRUFBRSxJQUFJO1FBQ1YsTUFBTSxFQUFFLHdDQUF3QztLQUNqRDtJQUNEOztPQUVHO0lBQ0gsR0FBRyxFQUFFO1FBQ0gsT0FBTyxFQUFFLEtBQUs7UUFDZCxJQUFJLEVBQUUsS0FBSztRQUNYLE1BQU0sRUFBRSx3Q0FBd0M7S0FDakQ7SUFDRDs7T0FFRztJQUNILEdBQUcsRUFBRTtRQUNILE9BQU8sRUFBRSxLQUFLO1FBQ2QsSUFBSSxFQUFFLEtBQUs7UUFDWCxNQUFNLEVBQUUsd0NBQXdDO0tBQ2pEO0lBQ0Q7O09BRUc7SUFDSCxHQUFHLEVBQUU7UUFDSCxPQUFPLEVBQUUsS0FBSztRQUNkLElBQUksRUFBRSxLQUFLO1FBQ1gsTUFBTSxFQUFFLHdDQUF3QztLQUNqRDtDQUNPLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjMuY29yZSB2ZXJzaW9uOiAzLjAuMlxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvdGltaW5nLWFiYnJldmlhdGlvbnwzLjAuMlxyXG5cclxuaW1wb3J0IHsgQ29kaW5nQXJncyB9IGZyb20gJy4uL2ZoaXIvQ29kaW5nLmpzJ1xyXG5cclxuLyoqXHJcbiAqIENvZGUgZm9yIGEga25vd24gLyBkZWZpbmVkIHRpbWluZyBwYXR0ZXJuLlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgVGltaW5nQWJicmV2aWF0aW9uQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBBTTogRXZlcnkgbW9ybmluZyBhdCBpbnN0aXR1dGlvbiBzcGVjaWZpZWQgdGltZXMuXHJcbiAgICovXHJcbiAgQU06IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQklEOiBUd28gdGltZXMgYSBkYXkgYXQgaW5zdGl0dXRpb24gc3BlY2lmaWVkIHRpbWVcclxuICAgKi9cclxuICBCSUQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogUE06IEV2ZXJ5IGFmdGVybm9vbiBhdCBpbnN0aXR1dGlvbiBzcGVjaWZpZWQgdGltZXMuXHJcbiAgICovXHJcbiAgUE06IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogUTRIOiBFdmVyeSA0IGhvdXJzIGF0IGluc3RpdHV0aW9uIHNwZWNpZmllZCB0aW1lXHJcbiAgICovXHJcbiAgUTRIOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIFE2SDogRXZlcnkgNiBob3VycyBhdCBpbnN0aXR1dGlvbiBzcGVjaWZpZWQgdGltZVxyXG4gICAqL1xyXG4gIFE2SDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBRRDogRXZlcnkgZGF5IGF0IGluc3RpdHV0aW9uIHNwZWNpZmllZCB0aW1lcy5cclxuICAgKi9cclxuICBRRDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBRSUQ6IEZvdXIgdGltZXMgYSBkYXkgYXQgaW5zdGl0dXRpb24gc3BlY2lmaWVkIHRpbWVcclxuICAgKi9cclxuICBRSUQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogUU9EOiBFdmVyeSBvdGhlciBkYXkgYXQgaW5zdGl0dXRpb24gc3BlY2lmaWVkIHRpbWVzLlxyXG4gICAqL1xyXG4gIFFPRDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBUSUQ6IFRocmVlIHRpbWVzIGEgZGF5IGF0IGluc3RpdHV0aW9uIHNwZWNpZmllZCB0aW1lXHJcbiAgICovXHJcbiAgVElEOiBDb2RpbmdBcmdzO1xyXG59XHJcblxyXG4vKipcclxuICogQ29kZSBmb3IgYSBrbm93biAvIGRlZmluZWQgdGltaW5nIHBhdHRlcm4uXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgVGltaW5nQWJicmV2aWF0aW9uQ29kaW5nczpUaW1pbmdBYmJyZXZpYXRpb25Db2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIEFNOiBFdmVyeSBtb3JuaW5nIGF0IGluc3RpdHV0aW9uIHNwZWNpZmllZCB0aW1lcy5cclxuICAgKi9cclxuICBBTToge1xyXG4gICAgZGlzcGxheTogXCJBTVwiLFxyXG4gICAgY29kZTogXCJBTVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvdjMvR1RTQWJicmV2aWF0aW9uXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBCSUQ6IFR3byB0aW1lcyBhIGRheSBhdCBpbnN0aXR1dGlvbiBzcGVjaWZpZWQgdGltZVxyXG4gICAqL1xyXG4gIEJJRDoge1xyXG4gICAgZGlzcGxheTogXCJCSURcIixcclxuICAgIGNvZGU6IFwiQklEXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci92My9HVFNBYmJyZXZpYXRpb25cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIFBNOiBFdmVyeSBhZnRlcm5vb24gYXQgaW5zdGl0dXRpb24gc3BlY2lmaWVkIHRpbWVzLlxyXG4gICAqL1xyXG4gIFBNOiB7XHJcbiAgICBkaXNwbGF5OiBcIlBNXCIsXHJcbiAgICBjb2RlOiBcIlBNXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci92My9HVFNBYmJyZXZpYXRpb25cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIFE0SDogRXZlcnkgNCBob3VycyBhdCBpbnN0aXR1dGlvbiBzcGVjaWZpZWQgdGltZVxyXG4gICAqL1xyXG4gIFE0SDoge1xyXG4gICAgZGlzcGxheTogXCJRNEhcIixcclxuICAgIGNvZGU6IFwiUTRIXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci92My9HVFNBYmJyZXZpYXRpb25cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIFE2SDogRXZlcnkgNiBob3VycyBhdCBpbnN0aXR1dGlvbiBzcGVjaWZpZWQgdGltZVxyXG4gICAqL1xyXG4gIFE2SDoge1xyXG4gICAgZGlzcGxheTogXCJRNkhcIixcclxuICAgIGNvZGU6IFwiUTZIXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci92My9HVFNBYmJyZXZpYXRpb25cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIFFEOiBFdmVyeSBkYXkgYXQgaW5zdGl0dXRpb24gc3BlY2lmaWVkIHRpbWVzLlxyXG4gICAqL1xyXG4gIFFEOiB7XHJcbiAgICBkaXNwbGF5OiBcIlFEXCIsXHJcbiAgICBjb2RlOiBcIlFEXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci92My9HVFNBYmJyZXZpYXRpb25cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIFFJRDogRm91ciB0aW1lcyBhIGRheSBhdCBpbnN0aXR1dGlvbiBzcGVjaWZpZWQgdGltZVxyXG4gICAqL1xyXG4gIFFJRDoge1xyXG4gICAgZGlzcGxheTogXCJRSURcIixcclxuICAgIGNvZGU6IFwiUUlEXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci92My9HVFNBYmJyZXZpYXRpb25cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIFFPRDogRXZlcnkgb3RoZXIgZGF5IGF0IGluc3RpdHV0aW9uIHNwZWNpZmllZCB0aW1lcy5cclxuICAgKi9cclxuICBRT0Q6IHtcclxuICAgIGRpc3BsYXk6IFwiUU9EXCIsXHJcbiAgICBjb2RlOiBcIlFPRFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvdjMvR1RTQWJicmV2aWF0aW9uXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBUSUQ6IFRocmVlIHRpbWVzIGEgZGF5IGF0IGluc3RpdHV0aW9uIHNwZWNpZmllZCB0aW1lXHJcbiAgICovXHJcbiAgVElEOiB7XHJcbiAgICBkaXNwbGF5OiBcIlRJRFwiLFxyXG4gICAgY29kZTogXCJUSURcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3YzL0dUU0FiYnJldmlhdGlvblwiLFxyXG4gIH0sXHJcbn0gYXMgY29uc3Q7XHJcbiJdfQ==