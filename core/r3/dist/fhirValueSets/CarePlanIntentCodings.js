// <auto-generated/>
// Contents of: hl7.fhir.r3.core version: 3.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/care-plan-intent|3.0.2
/**
 * Codes indicating the degree of authority/intentionality associated with a care plan
 */
export const CarePlanIntentCodings = {
    /**
     * option: The care plan represents a component or option for a RequestGroup that establishes timing, conditionality and/or other constraints among a set of requests.
     * Refer to [[[RequestGroup]]] for additional information on how this status is used
     */
    Option: {
        display: "Option",
        code: "option",
        system: "http://hl7.org/fhir/care-plan-intent",
    },
    /**
     * order: The care plan represents a request/demand and authorization for action
     */
    Order: {
        display: "Order",
        code: "order",
        system: "http://hl7.org/fhir/care-plan-intent",
    },
    /**
     * plan: The care plan represents an intention to ensure something occurs without providing an authorization for others to act
     */
    Plan: {
        display: "Plan",
        code: "plan",
        system: "http://hl7.org/fhir/care-plan-intent",
    },
    /**
     * proposal: The care plan is a suggestion made by someone/something that doesn't have an intention to ensure it occurs and without providing an authorization to act
     */
    Proposal: {
        display: "Proposal",
        code: "proposal",
        system: "http://hl7.org/fhir/care-plan-intent",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2FyZVBsYW5JbnRlbnRDb2RpbmdzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9DYXJlUGxhbkludGVudENvZGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLCtDQUErQztBQUMvQyxrQ0FBa0M7QUFDbEMscUVBQXFFO0FBMkJyRTs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUE0QjtJQUM1RDs7O09BR0c7SUFDSCxNQUFNLEVBQUU7UUFDTixPQUFPLEVBQUUsUUFBUTtRQUNqQixJQUFJLEVBQUUsUUFBUTtRQUNkLE1BQU0sRUFBRSxzQ0FBc0M7S0FDL0M7SUFDRDs7T0FFRztJQUNILEtBQUssRUFBRTtRQUNMLE9BQU8sRUFBRSxPQUFPO1FBQ2hCLElBQUksRUFBRSxPQUFPO1FBQ2IsTUFBTSxFQUFFLHNDQUFzQztLQUMvQztJQUNEOztPQUVHO0lBQ0gsSUFBSSxFQUFFO1FBQ0osT0FBTyxFQUFFLE1BQU07UUFDZixJQUFJLEVBQUUsTUFBTTtRQUNaLE1BQU0sRUFBRSxzQ0FBc0M7S0FDL0M7SUFDRDs7T0FFRztJQUNILFFBQVEsRUFBRTtRQUNSLE9BQU8sRUFBRSxVQUFVO1FBQ25CLElBQUksRUFBRSxVQUFVO1FBQ2hCLE1BQU0sRUFBRSxzQ0FBc0M7S0FDL0M7Q0FDTyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnIzLmNvcmUgdmVyc2lvbjogMy4wLjJcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L2NhcmUtcGxhbi1pbnRlbnR8My4wLjJcclxuXHJcbmltcG9ydCB7IENvZGluZ0FyZ3MgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiBDb2RlcyBpbmRpY2F0aW5nIHRoZSBkZWdyZWUgb2YgYXV0aG9yaXR5L2ludGVudGlvbmFsaXR5IGFzc29jaWF0ZWQgd2l0aCBhIGNhcmUgcGxhblxyXG4gKi9cclxuZXhwb3J0IHR5cGUgQ2FyZVBsYW5JbnRlbnRDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIG9wdGlvbjogVGhlIGNhcmUgcGxhbiByZXByZXNlbnRzIGEgY29tcG9uZW50IG9yIG9wdGlvbiBmb3IgYSBSZXF1ZXN0R3JvdXAgdGhhdCBlc3RhYmxpc2hlcyB0aW1pbmcsIGNvbmRpdGlvbmFsaXR5IGFuZC9vciBvdGhlciBjb25zdHJhaW50cyBhbW9uZyBhIHNldCBvZiByZXF1ZXN0cy5cclxuICAgKiBSZWZlciB0byBbW1tSZXF1ZXN0R3JvdXBdXV0gZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24gb24gaG93IHRoaXMgc3RhdHVzIGlzIHVzZWRcclxuICAgKi9cclxuICBPcHRpb246IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogb3JkZXI6IFRoZSBjYXJlIHBsYW4gcmVwcmVzZW50cyBhIHJlcXVlc3QvZGVtYW5kIGFuZCBhdXRob3JpemF0aW9uIGZvciBhY3Rpb25cclxuICAgKi9cclxuICBPcmRlcjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBwbGFuOiBUaGUgY2FyZSBwbGFuIHJlcHJlc2VudHMgYW4gaW50ZW50aW9uIHRvIGVuc3VyZSBzb21ldGhpbmcgb2NjdXJzIHdpdGhvdXQgcHJvdmlkaW5nIGFuIGF1dGhvcml6YXRpb24gZm9yIG90aGVycyB0byBhY3RcclxuICAgKi9cclxuICBQbGFuOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIHByb3Bvc2FsOiBUaGUgY2FyZSBwbGFuIGlzIGEgc3VnZ2VzdGlvbiBtYWRlIGJ5IHNvbWVvbmUvc29tZXRoaW5nIHRoYXQgZG9lc24ndCBoYXZlIGFuIGludGVudGlvbiB0byBlbnN1cmUgaXQgb2NjdXJzIGFuZCB3aXRob3V0IHByb3ZpZGluZyBhbiBhdXRob3JpemF0aW9uIHRvIGFjdFxyXG4gICAqL1xyXG4gIFByb3Bvc2FsOiBDb2RpbmdBcmdzO1xyXG59XHJcblxyXG4vKipcclxuICogQ29kZXMgaW5kaWNhdGluZyB0aGUgZGVncmVlIG9mIGF1dGhvcml0eS9pbnRlbnRpb25hbGl0eSBhc3NvY2lhdGVkIHdpdGggYSBjYXJlIHBsYW5cclxuICovXHJcbmV4cG9ydCBjb25zdCBDYXJlUGxhbkludGVudENvZGluZ3M6Q2FyZVBsYW5JbnRlbnRDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIG9wdGlvbjogVGhlIGNhcmUgcGxhbiByZXByZXNlbnRzIGEgY29tcG9uZW50IG9yIG9wdGlvbiBmb3IgYSBSZXF1ZXN0R3JvdXAgdGhhdCBlc3RhYmxpc2hlcyB0aW1pbmcsIGNvbmRpdGlvbmFsaXR5IGFuZC9vciBvdGhlciBjb25zdHJhaW50cyBhbW9uZyBhIHNldCBvZiByZXF1ZXN0cy5cclxuICAgKiBSZWZlciB0byBbW1tSZXF1ZXN0R3JvdXBdXV0gZm9yIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24gb24gaG93IHRoaXMgc3RhdHVzIGlzIHVzZWRcclxuICAgKi9cclxuICBPcHRpb246IHtcclxuICAgIGRpc3BsYXk6IFwiT3B0aW9uXCIsXHJcbiAgICBjb2RlOiBcIm9wdGlvblwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvY2FyZS1wbGFuLWludGVudFwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogb3JkZXI6IFRoZSBjYXJlIHBsYW4gcmVwcmVzZW50cyBhIHJlcXVlc3QvZGVtYW5kIGFuZCBhdXRob3JpemF0aW9uIGZvciBhY3Rpb25cclxuICAgKi9cclxuICBPcmRlcjoge1xyXG4gICAgZGlzcGxheTogXCJPcmRlclwiLFxyXG4gICAgY29kZTogXCJvcmRlclwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvY2FyZS1wbGFuLWludGVudFwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogcGxhbjogVGhlIGNhcmUgcGxhbiByZXByZXNlbnRzIGFuIGludGVudGlvbiB0byBlbnN1cmUgc29tZXRoaW5nIG9jY3VycyB3aXRob3V0IHByb3ZpZGluZyBhbiBhdXRob3JpemF0aW9uIGZvciBvdGhlcnMgdG8gYWN0XHJcbiAgICovXHJcbiAgUGxhbjoge1xyXG4gICAgZGlzcGxheTogXCJQbGFuXCIsXHJcbiAgICBjb2RlOiBcInBsYW5cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2NhcmUtcGxhbi1pbnRlbnRcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIHByb3Bvc2FsOiBUaGUgY2FyZSBwbGFuIGlzIGEgc3VnZ2VzdGlvbiBtYWRlIGJ5IHNvbWVvbmUvc29tZXRoaW5nIHRoYXQgZG9lc24ndCBoYXZlIGFuIGludGVudGlvbiB0byBlbnN1cmUgaXQgb2NjdXJzIGFuZCB3aXRob3V0IHByb3ZpZGluZyBhbiBhdXRob3JpemF0aW9uIHRvIGFjdFxyXG4gICAqL1xyXG4gIFByb3Bvc2FsOiB7XHJcbiAgICBkaXNwbGF5OiBcIlByb3Bvc2FsXCIsXHJcbiAgICBjb2RlOiBcInByb3Bvc2FsXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9jYXJlLXBsYW4taW50ZW50XCIsXHJcbiAgfSxcclxufSBhcyBjb25zdDtcclxuIl19