// <auto-generated/>
// Contents of: hl7.fhir.r3.core version: 3.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/codesystem-hierarchy-meaning|3.0.2
/**
 * The meaning of the hierarchy of concepts in a code system
 */
export const CodesystemHierarchyMeaningCodes = {
    /**
     * classified-with: Child concepts in the hierarchy may have only one parent, and there is a presumption that the code system is a "closed world" meaning all things must be in the hierarchy. This results in concepts such as "not otherwise classified."
     */
    ClassifiedWith: "classified-with",
    /**
     * grouped-by: No particular relationship between the concepts can be assumed, except what can be determined by inspection of the definitions of the elements (possible reasons to use this: importing from a source where this is not defined, or where various parts of the hierarchy have different meanings)
     */
    GroupedBy: "grouped-by",
    /**
     * is-a: A hierarchy where the child concepts have an IS-A relationship with the parents - that is, all the properties of the parent are also true for its child concepts
     */
    IsA: "is-a",
    /**
     * part-of: Child elements list the individual parts of a composite whole (e.g. body site)
     */
    PartOf: "part-of",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29kZXN5c3RlbUhpZXJhcmNoeU1lYW5pbmdDb2Rlcy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvQ29kZXN5c3RlbUhpZXJhcmNoeU1lYW5pbmdDb2Rlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyxpRkFBaUY7QUFFakY7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSwrQkFBK0IsR0FBRztJQUM3Qzs7T0FFRztJQUNILGNBQWMsRUFBRSxpQkFBaUI7SUFDakM7O09BRUc7SUFDSCxTQUFTLEVBQUUsWUFBWTtJQUN2Qjs7T0FFRztJQUNILEdBQUcsRUFBRSxNQUFNO0lBQ1g7O09BRUc7SUFDSCxNQUFNLEVBQUUsU0FBUztDQUNULENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjMuY29yZSB2ZXJzaW9uOiAzLjAuMlxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvY29kZXN5c3RlbS1oaWVyYXJjaHktbWVhbmluZ3wzLjAuMlxyXG5cclxuLyoqXHJcbiAqIFRoZSBtZWFuaW5nIG9mIHRoZSBoaWVyYXJjaHkgb2YgY29uY2VwdHMgaW4gYSBjb2RlIHN5c3RlbVxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IENvZGVzeXN0ZW1IaWVyYXJjaHlNZWFuaW5nQ29kZXMgPSB7XHJcbiAgLyoqXHJcbiAgICogY2xhc3NpZmllZC13aXRoOiBDaGlsZCBjb25jZXB0cyBpbiB0aGUgaGllcmFyY2h5IG1heSBoYXZlIG9ubHkgb25lIHBhcmVudCwgYW5kIHRoZXJlIGlzIGEgcHJlc3VtcHRpb24gdGhhdCB0aGUgY29kZSBzeXN0ZW0gaXMgYSBcImNsb3NlZCB3b3JsZFwiIG1lYW5pbmcgYWxsIHRoaW5ncyBtdXN0IGJlIGluIHRoZSBoaWVyYXJjaHkuIFRoaXMgcmVzdWx0cyBpbiBjb25jZXB0cyBzdWNoIGFzIFwibm90IG90aGVyd2lzZSBjbGFzc2lmaWVkLlwiXHJcbiAgICovXHJcbiAgQ2xhc3NpZmllZFdpdGg6IFwiY2xhc3NpZmllZC13aXRoXCIsXHJcbiAgLyoqXHJcbiAgICogZ3JvdXBlZC1ieTogTm8gcGFydGljdWxhciByZWxhdGlvbnNoaXAgYmV0d2VlbiB0aGUgY29uY2VwdHMgY2FuIGJlIGFzc3VtZWQsIGV4Y2VwdCB3aGF0IGNhbiBiZSBkZXRlcm1pbmVkIGJ5IGluc3BlY3Rpb24gb2YgdGhlIGRlZmluaXRpb25zIG9mIHRoZSBlbGVtZW50cyAocG9zc2libGUgcmVhc29ucyB0byB1c2UgdGhpczogaW1wb3J0aW5nIGZyb20gYSBzb3VyY2Ugd2hlcmUgdGhpcyBpcyBub3QgZGVmaW5lZCwgb3Igd2hlcmUgdmFyaW91cyBwYXJ0cyBvZiB0aGUgaGllcmFyY2h5IGhhdmUgZGlmZmVyZW50IG1lYW5pbmdzKVxyXG4gICAqL1xyXG4gIEdyb3VwZWRCeTogXCJncm91cGVkLWJ5XCIsXHJcbiAgLyoqXHJcbiAgICogaXMtYTogQSBoaWVyYXJjaHkgd2hlcmUgdGhlIGNoaWxkIGNvbmNlcHRzIGhhdmUgYW4gSVMtQSByZWxhdGlvbnNoaXAgd2l0aCB0aGUgcGFyZW50cyAtIHRoYXQgaXMsIGFsbCB0aGUgcHJvcGVydGllcyBvZiB0aGUgcGFyZW50IGFyZSBhbHNvIHRydWUgZm9yIGl0cyBjaGlsZCBjb25jZXB0c1xyXG4gICAqL1xyXG4gIElzQTogXCJpcy1hXCIsXHJcbiAgLyoqXHJcbiAgICogcGFydC1vZjogQ2hpbGQgZWxlbWVudHMgbGlzdCB0aGUgaW5kaXZpZHVhbCBwYXJ0cyBvZiBhIGNvbXBvc2l0ZSB3aG9sZSAoZS5nLiBib2R5IHNpdGUpXHJcbiAgICovXHJcbiAgUGFydE9mOiBcInBhcnQtb2ZcIixcclxufSBhcyBjb25zdDtcclxuXHJcbi8qKlxyXG4gKiBUaGUgbWVhbmluZyBvZiB0aGUgaGllcmFyY2h5IG9mIGNvbmNlcHRzIGluIGEgY29kZSBzeXN0ZW1cclxuICovXHJcbmV4cG9ydCB0eXBlIENvZGVzeXN0ZW1IaWVyYXJjaHlNZWFuaW5nQ29kZVR5cGUgPSB0eXBlb2YgQ29kZXN5c3RlbUhpZXJhcmNoeU1lYW5pbmdDb2Rlc1trZXlvZiB0eXBlb2YgQ29kZXN5c3RlbUhpZXJhcmNoeU1lYW5pbmdDb2Rlc107XHJcbiJdfQ==