// <auto-generated/>
// Contents of: hl7.fhir.r3.core version: 3.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/observation-category|3.0.2
/**
 * Observation Category codes.
 */
export const ObservationCategoryCodings = {
    /**
     * exam: Observations generated by physical exam findings including direct observations made by a clinician and use of simple instruments and the result of simple maneuvers performed directly on the patient's body.
     */
    Exam: {
        display: "Exam",
        code: "exam",
        system: "http://hl7.org/fhir/observation-category",
    },
    /**
     * imaging: Observations generated by imaging. The scope includes observations, plain x-ray, ultrasound, CT, MRI, angiography, echocardiography, nuclear medicine.
     */
    Imaging: {
        display: "Imaging",
        code: "imaging",
        system: "http://hl7.org/fhir/observation-category",
    },
    /**
     * laboratory: The results of observations generated by laboratories.  Laboratory results are typically generated by laboratories providing analytic services in areas such as chemistry, hematology, serology, histology, cytology, anatomic pathology, microbiology, and/or virology. These observations are based on analysis of specimens obtained from the patient and submitted to the laboratory.
     */
    Laboratory: {
        display: "Laboratory",
        code: "laboratory",
        system: "http://hl7.org/fhir/observation-category",
    },
    /**
     * procedure: Observations generated by other procedures.  This category includes observations resulting from interventional and non-interventional procedures excluding lab and imaging (e.g. cardiology catheterization, endoscopy, electrodiagnostics, etc.).  Procedure results are typically generated by a clinician to provide more granular information about component observations made during a procedure, such as where a gastroenterologist reports the size of a polyp observed during a colonoscopy.
     */
    Procedure: {
        display: "Procedure",
        code: "procedure",
        system: "http://hl7.org/fhir/observation-category",
    },
    /**
     * social-history: The Social History Observations define the patient's occupational, personal (e.g. lifestyle), social, and environmental history and health risk factors, as well as administrative data such as marital status, race, ethnicity and religious affiliation.
     */
    SocialHistory: {
        display: "Social History",
        code: "social-history",
        system: "http://hl7.org/fhir/observation-category",
    },
    /**
     * survey: Assessment tool/survey instrument observations (e.g. Apgar Scores, Montreal Cognitive Assessment (MoCA))
     */
    Survey: {
        display: "Survey",
        code: "survey",
        system: "http://hl7.org/fhir/observation-category",
    },
    /**
     * therapy: Observations generated by non-interventional treatment protocols (e.g. occupational, physical, radiation, nutritional and medication therapy)
     */
    Therapy: {
        display: "Therapy",
        code: "therapy",
        system: "http://hl7.org/fhir/observation-category",
    },
    /**
     * vital-signs:  Clinical observations measure the body's basic functions such as such as blood pressure, heart rate, respiratory rate, height, weight, body mass index, head circumference, pulse oximetry, temperature, and body surface area.
     */
    VitalSigns: {
        display: "Vital Signs",
        code: "vital-signs",
        system: "http://hl7.org/fhir/observation-category",
    },
};
//# sourceMappingURL=data:application/json;base64,