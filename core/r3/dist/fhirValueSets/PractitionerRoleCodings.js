// <auto-generated/>
// Contents of: hl7.fhir.r3.core version: 3.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/practitioner-role|3.0.2
/**
 * This example value set defines a set of codes that can be used to indicate the role of a Practitioner.
 */
export const PractitionerRoleCodings = {
    /**
     * doctor: A qualified/registered medical practitioner
     */
    Doctor: {
        display: "Doctor",
        code: "doctor",
        system: "http://hl7.org/fhir/practitioner-role",
    },
    /**
     * ict: Someone who is qualified in Information and Communication Technologies
     */
    ICTProfessional: {
        display: "ICT professional",
        code: "ict",
        system: "http://hl7.org/fhir/practitioner-role",
    },
    /**
     * nurse: A practitoner with nursing experience that may be qualified/registered
     */
    Nurse: {
        display: "Nurse",
        code: "nurse",
        system: "http://hl7.org/fhir/practitioner-role",
    },
    /**
     * pharmacist: A qualified/registered/licensed pharmacist
     */
    Pharmacist: {
        display: "Pharmacist",
        code: "pharmacist",
        system: "http://hl7.org/fhir/practitioner-role",
    },
    /**
     * researcher: A practitioner that may perform research
     */
    Researcher: {
        display: "Researcher",
        code: "researcher",
        system: "http://hl7.org/fhir/practitioner-role",
    },
    /**
     * teacher: Someone who is able to provide educational services
     */
    TeacherEducator: {
        display: "Teacher/educator",
        code: "teacher",
        system: "http://hl7.org/fhir/practitioner-role",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUHJhY3RpdGlvbmVyUm9sZUNvZGluZ3MuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL1ByYWN0aXRpb25lclJvbGVDb2RpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQiwrQ0FBK0M7QUFDL0Msa0NBQWtDO0FBQ2xDLHNFQUFzRTtBQWtDdEU7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSx1QkFBdUIsR0FBOEI7SUFDaEU7O09BRUc7SUFDSCxNQUFNLEVBQUU7UUFDTixPQUFPLEVBQUUsUUFBUTtRQUNqQixJQUFJLEVBQUUsUUFBUTtRQUNkLE1BQU0sRUFBRSx1Q0FBdUM7S0FDaEQ7SUFDRDs7T0FFRztJQUNILGVBQWUsRUFBRTtRQUNmLE9BQU8sRUFBRSxrQkFBa0I7UUFDM0IsSUFBSSxFQUFFLEtBQUs7UUFDWCxNQUFNLEVBQUUsdUNBQXVDO0tBQ2hEO0lBQ0Q7O09BRUc7SUFDSCxLQUFLLEVBQUU7UUFDTCxPQUFPLEVBQUUsT0FBTztRQUNoQixJQUFJLEVBQUUsT0FBTztRQUNiLE1BQU0sRUFBRSx1Q0FBdUM7S0FDaEQ7SUFDRDs7T0FFRztJQUNILFVBQVUsRUFBRTtRQUNWLE9BQU8sRUFBRSxZQUFZO1FBQ3JCLElBQUksRUFBRSxZQUFZO1FBQ2xCLE1BQU0sRUFBRSx1Q0FBdUM7S0FDaEQ7SUFDRDs7T0FFRztJQUNILFVBQVUsRUFBRTtRQUNWLE9BQU8sRUFBRSxZQUFZO1FBQ3JCLElBQUksRUFBRSxZQUFZO1FBQ2xCLE1BQU0sRUFBRSx1Q0FBdUM7S0FDaEQ7SUFDRDs7T0FFRztJQUNILGVBQWUsRUFBRTtRQUNmLE9BQU8sRUFBRSxrQkFBa0I7UUFDM0IsSUFBSSxFQUFFLFNBQVM7UUFDZixNQUFNLEVBQUUsdUNBQXVDO0tBQ2hEO0NBQ08sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yMy5jb3JlIHZlcnNpb246IDMuMC4yXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9wcmFjdGl0aW9uZXItcm9sZXwzLjAuMlxyXG5cclxuaW1wb3J0IHsgQ29kaW5nQXJncyB9IGZyb20gJy4uL2ZoaXIvQ29kaW5nLmpzJ1xyXG5cclxuLyoqXHJcbiAqIFRoaXMgZXhhbXBsZSB2YWx1ZSBzZXQgZGVmaW5lcyBhIHNldCBvZiBjb2RlcyB0aGF0IGNhbiBiZSB1c2VkIHRvIGluZGljYXRlIHRoZSByb2xlIG9mIGEgUHJhY3RpdGlvbmVyLlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgUHJhY3RpdGlvbmVyUm9sZUNvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogZG9jdG9yOiBBIHF1YWxpZmllZC9yZWdpc3RlcmVkIG1lZGljYWwgcHJhY3RpdGlvbmVyXHJcbiAgICovXHJcbiAgRG9jdG9yOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIGljdDogU29tZW9uZSB3aG8gaXMgcXVhbGlmaWVkIGluIEluZm9ybWF0aW9uIGFuZCBDb21tdW5pY2F0aW9uIFRlY2hub2xvZ2llc1xyXG4gICAqL1xyXG4gIElDVFByb2Zlc3Npb25hbDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBudXJzZTogQSBwcmFjdGl0b25lciB3aXRoIG51cnNpbmcgZXhwZXJpZW5jZSB0aGF0IG1heSBiZSBxdWFsaWZpZWQvcmVnaXN0ZXJlZFxyXG4gICAqL1xyXG4gIE51cnNlOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIHBoYXJtYWNpc3Q6IEEgcXVhbGlmaWVkL3JlZ2lzdGVyZWQvbGljZW5zZWQgcGhhcm1hY2lzdFxyXG4gICAqL1xyXG4gIFBoYXJtYWNpc3Q6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogcmVzZWFyY2hlcjogQSBwcmFjdGl0aW9uZXIgdGhhdCBtYXkgcGVyZm9ybSByZXNlYXJjaFxyXG4gICAqL1xyXG4gIFJlc2VhcmNoZXI6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogdGVhY2hlcjogU29tZW9uZSB3aG8gaXMgYWJsZSB0byBwcm92aWRlIGVkdWNhdGlvbmFsIHNlcnZpY2VzXHJcbiAgICovXHJcbiAgVGVhY2hlckVkdWNhdG9yOiBDb2RpbmdBcmdzO1xyXG59XHJcblxyXG4vKipcclxuICogVGhpcyBleGFtcGxlIHZhbHVlIHNldCBkZWZpbmVzIGEgc2V0IG9mIGNvZGVzIHRoYXQgY2FuIGJlIHVzZWQgdG8gaW5kaWNhdGUgdGhlIHJvbGUgb2YgYSBQcmFjdGl0aW9uZXIuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgUHJhY3RpdGlvbmVyUm9sZUNvZGluZ3M6UHJhY3RpdGlvbmVyUm9sZUNvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogZG9jdG9yOiBBIHF1YWxpZmllZC9yZWdpc3RlcmVkIG1lZGljYWwgcHJhY3RpdGlvbmVyXHJcbiAgICovXHJcbiAgRG9jdG9yOiB7XHJcbiAgICBkaXNwbGF5OiBcIkRvY3RvclwiLFxyXG4gICAgY29kZTogXCJkb2N0b3JcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3ByYWN0aXRpb25lci1yb2xlXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBpY3Q6IFNvbWVvbmUgd2hvIGlzIHF1YWxpZmllZCBpbiBJbmZvcm1hdGlvbiBhbmQgQ29tbXVuaWNhdGlvbiBUZWNobm9sb2dpZXNcclxuICAgKi9cclxuICBJQ1RQcm9mZXNzaW9uYWw6IHtcclxuICAgIGRpc3BsYXk6IFwiSUNUIHByb2Zlc3Npb25hbFwiLFxyXG4gICAgY29kZTogXCJpY3RcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3ByYWN0aXRpb25lci1yb2xlXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBudXJzZTogQSBwcmFjdGl0b25lciB3aXRoIG51cnNpbmcgZXhwZXJpZW5jZSB0aGF0IG1heSBiZSBxdWFsaWZpZWQvcmVnaXN0ZXJlZFxyXG4gICAqL1xyXG4gIE51cnNlOiB7XHJcbiAgICBkaXNwbGF5OiBcIk51cnNlXCIsXHJcbiAgICBjb2RlOiBcIm51cnNlXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9wcmFjdGl0aW9uZXItcm9sZVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogcGhhcm1hY2lzdDogQSBxdWFsaWZpZWQvcmVnaXN0ZXJlZC9saWNlbnNlZCBwaGFybWFjaXN0XHJcbiAgICovXHJcbiAgUGhhcm1hY2lzdDoge1xyXG4gICAgZGlzcGxheTogXCJQaGFybWFjaXN0XCIsXHJcbiAgICBjb2RlOiBcInBoYXJtYWNpc3RcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3ByYWN0aXRpb25lci1yb2xlXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiByZXNlYXJjaGVyOiBBIHByYWN0aXRpb25lciB0aGF0IG1heSBwZXJmb3JtIHJlc2VhcmNoXHJcbiAgICovXHJcbiAgUmVzZWFyY2hlcjoge1xyXG4gICAgZGlzcGxheTogXCJSZXNlYXJjaGVyXCIsXHJcbiAgICBjb2RlOiBcInJlc2VhcmNoZXJcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3ByYWN0aXRpb25lci1yb2xlXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiB0ZWFjaGVyOiBTb21lb25lIHdobyBpcyBhYmxlIHRvIHByb3ZpZGUgZWR1Y2F0aW9uYWwgc2VydmljZXNcclxuICAgKi9cclxuICBUZWFjaGVyRWR1Y2F0b3I6IHtcclxuICAgIGRpc3BsYXk6IFwiVGVhY2hlci9lZHVjYXRvclwiLFxyXG4gICAgY29kZTogXCJ0ZWFjaGVyXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9wcmFjdGl0aW9uZXItcm9sZVwiLFxyXG4gIH0sXHJcbn0gYXMgY29uc3Q7XHJcbiJdfQ==