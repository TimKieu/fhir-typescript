// <auto-generated/>
// Contents of: hl7.fhir.r3.core version: 3.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/property-representation|3.0.2
/**
 * How a property is represented when serialized.
 */
export const PropertyRepresentationCodings = {
    /**
     * cdaText: Use CDA narrative instead of XHTML
     */
    CDATextFormat: {
        display: "CDA Text Format",
        code: "cdaText",
        system: "http://hl7.org/fhir/property-representation",
    },
    /**
     * typeAttr: The type of this element is indicated using xsi:type
     */
    TypeAttribute: {
        display: "Type Attribute",
        code: "typeAttr",
        system: "http://hl7.org/fhir/property-representation",
    },
    /**
     * xhtml: The property is represented using XHTML
     */
    XHTML: {
        display: "XHTML",
        code: "xhtml",
        system: "http://hl7.org/fhir/property-representation",
    },
    /**
     * xmlAttr: In XML, this property is represented as an attribute not an element.
     */
    XMLAttribute: {
        display: "XML Attribute",
        code: "xmlAttr",
        system: "http://hl7.org/fhir/property-representation",
    },
    /**
     * xmlText: This element is represented using the XML text attribute (primitives only)
     */
    XMLText: {
        display: "XML Text",
        code: "xmlText",
        system: "http://hl7.org/fhir/property-representation",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUHJvcGVydHlSZXByZXNlbnRhdGlvbkNvZGluZ3MuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL1Byb3BlcnR5UmVwcmVzZW50YXRpb25Db2RpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQiwrQ0FBK0M7QUFDL0Msa0NBQWtDO0FBQ2xDLDRFQUE0RTtBQThCNUU7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSw2QkFBNkIsR0FBb0M7SUFDNUU7O09BRUc7SUFDSCxhQUFhLEVBQUU7UUFDYixPQUFPLEVBQUUsaUJBQWlCO1FBQzFCLElBQUksRUFBRSxTQUFTO1FBQ2YsTUFBTSxFQUFFLDZDQUE2QztLQUN0RDtJQUNEOztPQUVHO0lBQ0gsYUFBYSxFQUFFO1FBQ2IsT0FBTyxFQUFFLGdCQUFnQjtRQUN6QixJQUFJLEVBQUUsVUFBVTtRQUNoQixNQUFNLEVBQUUsNkNBQTZDO0tBQ3REO0lBQ0Q7O09BRUc7SUFDSCxLQUFLLEVBQUU7UUFDTCxPQUFPLEVBQUUsT0FBTztRQUNoQixJQUFJLEVBQUUsT0FBTztRQUNiLE1BQU0sRUFBRSw2Q0FBNkM7S0FDdEQ7SUFDRDs7T0FFRztJQUNILFlBQVksRUFBRTtRQUNaLE9BQU8sRUFBRSxlQUFlO1FBQ3hCLElBQUksRUFBRSxTQUFTO1FBQ2YsTUFBTSxFQUFFLDZDQUE2QztLQUN0RDtJQUNEOztPQUVHO0lBQ0gsT0FBTyxFQUFFO1FBQ1AsT0FBTyxFQUFFLFVBQVU7UUFDbkIsSUFBSSxFQUFFLFNBQVM7UUFDZixNQUFNLEVBQUUsNkNBQTZDO0tBQ3REO0NBQ08sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yMy5jb3JlIHZlcnNpb246IDMuMC4yXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9wcm9wZXJ0eS1yZXByZXNlbnRhdGlvbnwzLjAuMlxyXG5cclxuaW1wb3J0IHsgQ29kaW5nQXJncyB9IGZyb20gJy4uL2ZoaXIvQ29kaW5nLmpzJ1xyXG5cclxuLyoqXHJcbiAqIEhvdyBhIHByb3BlcnR5IGlzIHJlcHJlc2VudGVkIHdoZW4gc2VyaWFsaXplZC5cclxuICovXHJcbmV4cG9ydCB0eXBlIFByb3BlcnR5UmVwcmVzZW50YXRpb25Db2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIGNkYVRleHQ6IFVzZSBDREEgbmFycmF0aXZlIGluc3RlYWQgb2YgWEhUTUxcclxuICAgKi9cclxuICBDREFUZXh0Rm9ybWF0OiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIHR5cGVBdHRyOiBUaGUgdHlwZSBvZiB0aGlzIGVsZW1lbnQgaXMgaW5kaWNhdGVkIHVzaW5nIHhzaTp0eXBlXHJcbiAgICovXHJcbiAgVHlwZUF0dHJpYnV0ZTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiB4aHRtbDogVGhlIHByb3BlcnR5IGlzIHJlcHJlc2VudGVkIHVzaW5nIFhIVE1MXHJcbiAgICovXHJcbiAgWEhUTUw6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogeG1sQXR0cjogSW4gWE1MLCB0aGlzIHByb3BlcnR5IGlzIHJlcHJlc2VudGVkIGFzIGFuIGF0dHJpYnV0ZSBub3QgYW4gZWxlbWVudC5cclxuICAgKi9cclxuICBYTUxBdHRyaWJ1dGU6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogeG1sVGV4dDogVGhpcyBlbGVtZW50IGlzIHJlcHJlc2VudGVkIHVzaW5nIHRoZSBYTUwgdGV4dCBhdHRyaWJ1dGUgKHByaW1pdGl2ZXMgb25seSlcclxuICAgKi9cclxuICBYTUxUZXh0OiBDb2RpbmdBcmdzO1xyXG59XHJcblxyXG4vKipcclxuICogSG93IGEgcHJvcGVydHkgaXMgcmVwcmVzZW50ZWQgd2hlbiBzZXJpYWxpemVkLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IFByb3BlcnR5UmVwcmVzZW50YXRpb25Db2RpbmdzOlByb3BlcnR5UmVwcmVzZW50YXRpb25Db2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIGNkYVRleHQ6IFVzZSBDREEgbmFycmF0aXZlIGluc3RlYWQgb2YgWEhUTUxcclxuICAgKi9cclxuICBDREFUZXh0Rm9ybWF0OiB7XHJcbiAgICBkaXNwbGF5OiBcIkNEQSBUZXh0IEZvcm1hdFwiLFxyXG4gICAgY29kZTogXCJjZGFUZXh0XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9wcm9wZXJ0eS1yZXByZXNlbnRhdGlvblwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogdHlwZUF0dHI6IFRoZSB0eXBlIG9mIHRoaXMgZWxlbWVudCBpcyBpbmRpY2F0ZWQgdXNpbmcgeHNpOnR5cGVcclxuICAgKi9cclxuICBUeXBlQXR0cmlidXRlOiB7XHJcbiAgICBkaXNwbGF5OiBcIlR5cGUgQXR0cmlidXRlXCIsXHJcbiAgICBjb2RlOiBcInR5cGVBdHRyXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9wcm9wZXJ0eS1yZXByZXNlbnRhdGlvblwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogeGh0bWw6IFRoZSBwcm9wZXJ0eSBpcyByZXByZXNlbnRlZCB1c2luZyBYSFRNTFxyXG4gICAqL1xyXG4gIFhIVE1MOiB7XHJcbiAgICBkaXNwbGF5OiBcIlhIVE1MXCIsXHJcbiAgICBjb2RlOiBcInhodG1sXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9wcm9wZXJ0eS1yZXByZXNlbnRhdGlvblwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogeG1sQXR0cjogSW4gWE1MLCB0aGlzIHByb3BlcnR5IGlzIHJlcHJlc2VudGVkIGFzIGFuIGF0dHJpYnV0ZSBub3QgYW4gZWxlbWVudC5cclxuICAgKi9cclxuICBYTUxBdHRyaWJ1dGU6IHtcclxuICAgIGRpc3BsYXk6IFwiWE1MIEF0dHJpYnV0ZVwiLFxyXG4gICAgY29kZTogXCJ4bWxBdHRyXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9wcm9wZXJ0eS1yZXByZXNlbnRhdGlvblwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogeG1sVGV4dDogVGhpcyBlbGVtZW50IGlzIHJlcHJlc2VudGVkIHVzaW5nIHRoZSBYTUwgdGV4dCBhdHRyaWJ1dGUgKHByaW1pdGl2ZXMgb25seSlcclxuICAgKi9cclxuICBYTUxUZXh0OiB7XHJcbiAgICBkaXNwbGF5OiBcIlhNTCBUZXh0XCIsXHJcbiAgICBjb2RlOiBcInhtbFRleHRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Byb3BlcnR5LXJlcHJlc2VudGF0aW9uXCIsXHJcbiAgfSxcclxufSBhcyBjb25zdDtcclxuIl19