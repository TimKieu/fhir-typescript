// <auto-generated/>
// Contents of: hl7.fhir.r3.core version: 3.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/guidance-response-status|3.0.2
/**
 * The status of a guidance response
 */
export const GuidanceResponseStatusCodings = {
    /**
     * data-requested: The request was processed successfully, but more data may result in a more complete evaluation
     */
    DataRequested: {
        display: "Data Requested",
        code: "data-requested",
        system: "http://hl7.org/fhir/guidance-response-status",
    },
    /**
     * data-required: The request was processed, but more data is required to complete the evaluation
     */
    DataRequired: {
        display: "Data Required",
        code: "data-required",
        system: "http://hl7.org/fhir/guidance-response-status",
    },
    /**
     * entered-in-error: The response was entered in error
     */
    EnteredInError: {
        display: "Entered In Error",
        code: "entered-in-error",
        system: "http://hl7.org/fhir/guidance-response-status",
    },
    /**
     * failure: The request was not processed successfully
     */
    Failure: {
        display: "Failure",
        code: "failure",
        system: "http://hl7.org/fhir/guidance-response-status",
    },
    /**
     * in-progress: The request is currently being processed
     */
    InProgress: {
        display: "In Progress",
        code: "in-progress",
        system: "http://hl7.org/fhir/guidance-response-status",
    },
    /**
     * success: The request was processed successfully
     */
    Success: {
        display: "Success",
        code: "success",
        system: "http://hl7.org/fhir/guidance-response-status",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR3VpZGFuY2VSZXNwb25zZVN0YXR1c0NvZGluZ3MuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL0d1aWRhbmNlUmVzcG9uc2VTdGF0dXNDb2RpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQiwrQ0FBK0M7QUFDL0Msa0NBQWtDO0FBQ2xDLDZFQUE2RTtBQWtDN0U7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSw2QkFBNkIsR0FBb0M7SUFDNUU7O09BRUc7SUFDSCxhQUFhLEVBQUU7UUFDYixPQUFPLEVBQUUsZ0JBQWdCO1FBQ3pCLElBQUksRUFBRSxnQkFBZ0I7UUFDdEIsTUFBTSxFQUFFLDhDQUE4QztLQUN2RDtJQUNEOztPQUVHO0lBQ0gsWUFBWSxFQUFFO1FBQ1osT0FBTyxFQUFFLGVBQWU7UUFDeEIsSUFBSSxFQUFFLGVBQWU7UUFDckIsTUFBTSxFQUFFLDhDQUE4QztLQUN2RDtJQUNEOztPQUVHO0lBQ0gsY0FBYyxFQUFFO1FBQ2QsT0FBTyxFQUFFLGtCQUFrQjtRQUMzQixJQUFJLEVBQUUsa0JBQWtCO1FBQ3hCLE1BQU0sRUFBRSw4Q0FBOEM7S0FDdkQ7SUFDRDs7T0FFRztJQUNILE9BQU8sRUFBRTtRQUNQLE9BQU8sRUFBRSxTQUFTO1FBQ2xCLElBQUksRUFBRSxTQUFTO1FBQ2YsTUFBTSxFQUFFLDhDQUE4QztLQUN2RDtJQUNEOztPQUVHO0lBQ0gsVUFBVSxFQUFFO1FBQ1YsT0FBTyxFQUFFLGFBQWE7UUFDdEIsSUFBSSxFQUFFLGFBQWE7UUFDbkIsTUFBTSxFQUFFLDhDQUE4QztLQUN2RDtJQUNEOztPQUVHO0lBQ0gsT0FBTyxFQUFFO1FBQ1AsT0FBTyxFQUFFLFNBQVM7UUFDbEIsSUFBSSxFQUFFLFNBQVM7UUFDZixNQUFNLEVBQUUsOENBQThDO0tBQ3ZEO0NBQ08sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yMy5jb3JlIHZlcnNpb246IDMuMC4yXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9ndWlkYW5jZS1yZXNwb25zZS1zdGF0dXN8My4wLjJcclxuXHJcbmltcG9ydCB7IENvZGluZ0FyZ3MgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiBUaGUgc3RhdHVzIG9mIGEgZ3VpZGFuY2UgcmVzcG9uc2VcclxuICovXHJcbmV4cG9ydCB0eXBlIEd1aWRhbmNlUmVzcG9uc2VTdGF0dXNDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIGRhdGEtcmVxdWVzdGVkOiBUaGUgcmVxdWVzdCB3YXMgcHJvY2Vzc2VkIHN1Y2Nlc3NmdWxseSwgYnV0IG1vcmUgZGF0YSBtYXkgcmVzdWx0IGluIGEgbW9yZSBjb21wbGV0ZSBldmFsdWF0aW9uXHJcbiAgICovXHJcbiAgRGF0YVJlcXVlc3RlZDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBkYXRhLXJlcXVpcmVkOiBUaGUgcmVxdWVzdCB3YXMgcHJvY2Vzc2VkLCBidXQgbW9yZSBkYXRhIGlzIHJlcXVpcmVkIHRvIGNvbXBsZXRlIHRoZSBldmFsdWF0aW9uXHJcbiAgICovXHJcbiAgRGF0YVJlcXVpcmVkOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIGVudGVyZWQtaW4tZXJyb3I6IFRoZSByZXNwb25zZSB3YXMgZW50ZXJlZCBpbiBlcnJvclxyXG4gICAqL1xyXG4gIEVudGVyZWRJbkVycm9yOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIGZhaWx1cmU6IFRoZSByZXF1ZXN0IHdhcyBub3QgcHJvY2Vzc2VkIHN1Y2Nlc3NmdWxseVxyXG4gICAqL1xyXG4gIEZhaWx1cmU6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogaW4tcHJvZ3Jlc3M6IFRoZSByZXF1ZXN0IGlzIGN1cnJlbnRseSBiZWluZyBwcm9jZXNzZWRcclxuICAgKi9cclxuICBJblByb2dyZXNzOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIHN1Y2Nlc3M6IFRoZSByZXF1ZXN0IHdhcyBwcm9jZXNzZWQgc3VjY2Vzc2Z1bGx5XHJcbiAgICovXHJcbiAgU3VjY2VzczogQ29kaW5nQXJncztcclxufVxyXG5cclxuLyoqXHJcbiAqIFRoZSBzdGF0dXMgb2YgYSBndWlkYW5jZSByZXNwb25zZVxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IEd1aWRhbmNlUmVzcG9uc2VTdGF0dXNDb2RpbmdzOkd1aWRhbmNlUmVzcG9uc2VTdGF0dXNDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIGRhdGEtcmVxdWVzdGVkOiBUaGUgcmVxdWVzdCB3YXMgcHJvY2Vzc2VkIHN1Y2Nlc3NmdWxseSwgYnV0IG1vcmUgZGF0YSBtYXkgcmVzdWx0IGluIGEgbW9yZSBjb21wbGV0ZSBldmFsdWF0aW9uXHJcbiAgICovXHJcbiAgRGF0YVJlcXVlc3RlZDoge1xyXG4gICAgZGlzcGxheTogXCJEYXRhIFJlcXVlc3RlZFwiLFxyXG4gICAgY29kZTogXCJkYXRhLXJlcXVlc3RlZFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvZ3VpZGFuY2UtcmVzcG9uc2Utc3RhdHVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBkYXRhLXJlcXVpcmVkOiBUaGUgcmVxdWVzdCB3YXMgcHJvY2Vzc2VkLCBidXQgbW9yZSBkYXRhIGlzIHJlcXVpcmVkIHRvIGNvbXBsZXRlIHRoZSBldmFsdWF0aW9uXHJcbiAgICovXHJcbiAgRGF0YVJlcXVpcmVkOiB7XHJcbiAgICBkaXNwbGF5OiBcIkRhdGEgUmVxdWlyZWRcIixcclxuICAgIGNvZGU6IFwiZGF0YS1yZXF1aXJlZFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvZ3VpZGFuY2UtcmVzcG9uc2Utc3RhdHVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBlbnRlcmVkLWluLWVycm9yOiBUaGUgcmVzcG9uc2Ugd2FzIGVudGVyZWQgaW4gZXJyb3JcclxuICAgKi9cclxuICBFbnRlcmVkSW5FcnJvcjoge1xyXG4gICAgZGlzcGxheTogXCJFbnRlcmVkIEluIEVycm9yXCIsXHJcbiAgICBjb2RlOiBcImVudGVyZWQtaW4tZXJyb3JcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2d1aWRhbmNlLXJlc3BvbnNlLXN0YXR1c1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogZmFpbHVyZTogVGhlIHJlcXVlc3Qgd2FzIG5vdCBwcm9jZXNzZWQgc3VjY2Vzc2Z1bGx5XHJcbiAgICovXHJcbiAgRmFpbHVyZToge1xyXG4gICAgZGlzcGxheTogXCJGYWlsdXJlXCIsXHJcbiAgICBjb2RlOiBcImZhaWx1cmVcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2d1aWRhbmNlLXJlc3BvbnNlLXN0YXR1c1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogaW4tcHJvZ3Jlc3M6IFRoZSByZXF1ZXN0IGlzIGN1cnJlbnRseSBiZWluZyBwcm9jZXNzZWRcclxuICAgKi9cclxuICBJblByb2dyZXNzOiB7XHJcbiAgICBkaXNwbGF5OiBcIkluIFByb2dyZXNzXCIsXHJcbiAgICBjb2RlOiBcImluLXByb2dyZXNzXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9ndWlkYW5jZS1yZXNwb25zZS1zdGF0dXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIHN1Y2Nlc3M6IFRoZSByZXF1ZXN0IHdhcyBwcm9jZXNzZWQgc3VjY2Vzc2Z1bGx5XHJcbiAgICovXHJcbiAgU3VjY2Vzczoge1xyXG4gICAgZGlzcGxheTogXCJTdWNjZXNzXCIsXHJcbiAgICBjb2RlOiBcInN1Y2Nlc3NcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2d1aWRhbmNlLXJlc3BvbnNlLXN0YXR1c1wiLFxyXG4gIH0sXHJcbn0gYXMgY29uc3Q7XHJcbiJdfQ==