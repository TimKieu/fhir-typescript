// <auto-generated/>
// Contents of: hl7.fhir.r3.core version: 3.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/research-subject-status|3.0.2
/**
 * Indicates the progression of a study subject through a study
 */
export const ResearchSubjectStatusCodings = {
    /**
     * active: The subject is currently being monitored and/or subject to treatment as part of the study
     */
    Active: {
        display: "Active",
        code: "active",
        system: "http://hl7.org/fhir/research-subject-status",
    },
    /**
     * candidate: The subject has been identified as a potential participant in the study but has not yet agreed to participate
     */
    Candidate: {
        display: "Candidate",
        code: "candidate",
        system: "http://hl7.org/fhir/research-subject-status",
    },
    /**
     * completed: All intended monitoring/treatment of the subject has been completed and their engagement with the study is now ended
     */
    Completed: {
        display: "Completed",
        code: "completed",
        system: "http://hl7.org/fhir/research-subject-status",
    },
    /**
     * enrolled: The subject has agreed to participate in the study but has not yet begun performing any action within the study
     */
    Enrolled: {
        display: "Enrolled",
        code: "enrolled",
        system: "http://hl7.org/fhir/research-subject-status",
    },
    /**
     * suspended: The subject has temporarily discontinued monitoring/treatment as part of the study
     */
    Suspended: {
        display: "Suspended",
        code: "suspended",
        system: "http://hl7.org/fhir/research-subject-status",
    },
    /**
     * withdrawn: The subject has permanently ended participation in the study prior to completion of the intended monitoring/treatment
     */
    Withdrawn: {
        display: "Withdrawn",
        code: "withdrawn",
        system: "http://hl7.org/fhir/research-subject-status",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVzZWFyY2hTdWJqZWN0U3RhdHVzQ29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvUmVzZWFyY2hTdWJqZWN0U3RhdHVzQ29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyw0RUFBNEU7QUFrQzVFOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sNEJBQTRCLEdBQW1DO0lBQzFFOztPQUVHO0lBQ0gsTUFBTSxFQUFFO1FBQ04sT0FBTyxFQUFFLFFBQVE7UUFDakIsSUFBSSxFQUFFLFFBQVE7UUFDZCxNQUFNLEVBQUUsNkNBQTZDO0tBQ3REO0lBQ0Q7O09BRUc7SUFDSCxTQUFTLEVBQUU7UUFDVCxPQUFPLEVBQUUsV0FBVztRQUNwQixJQUFJLEVBQUUsV0FBVztRQUNqQixNQUFNLEVBQUUsNkNBQTZDO0tBQ3REO0lBQ0Q7O09BRUc7SUFDSCxTQUFTLEVBQUU7UUFDVCxPQUFPLEVBQUUsV0FBVztRQUNwQixJQUFJLEVBQUUsV0FBVztRQUNqQixNQUFNLEVBQUUsNkNBQTZDO0tBQ3REO0lBQ0Q7O09BRUc7SUFDSCxRQUFRLEVBQUU7UUFDUixPQUFPLEVBQUUsVUFBVTtRQUNuQixJQUFJLEVBQUUsVUFBVTtRQUNoQixNQUFNLEVBQUUsNkNBQTZDO0tBQ3REO0lBQ0Q7O09BRUc7SUFDSCxTQUFTLEVBQUU7UUFDVCxPQUFPLEVBQUUsV0FBVztRQUNwQixJQUFJLEVBQUUsV0FBVztRQUNqQixNQUFNLEVBQUUsNkNBQTZDO0tBQ3REO0lBQ0Q7O09BRUc7SUFDSCxTQUFTLEVBQUU7UUFDVCxPQUFPLEVBQUUsV0FBVztRQUNwQixJQUFJLEVBQUUsV0FBVztRQUNqQixNQUFNLEVBQUUsNkNBQTZDO0tBQ3REO0NBQ08sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yMy5jb3JlIHZlcnNpb246IDMuMC4yXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9yZXNlYXJjaC1zdWJqZWN0LXN0YXR1c3wzLjAuMlxyXG5cclxuaW1wb3J0IHsgQ29kaW5nQXJncyB9IGZyb20gJy4uL2ZoaXIvQ29kaW5nLmpzJ1xyXG5cclxuLyoqXHJcbiAqIEluZGljYXRlcyB0aGUgcHJvZ3Jlc3Npb24gb2YgYSBzdHVkeSBzdWJqZWN0IHRocm91Z2ggYSBzdHVkeVxyXG4gKi9cclxuZXhwb3J0IHR5cGUgUmVzZWFyY2hTdWJqZWN0U3RhdHVzQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBhY3RpdmU6IFRoZSBzdWJqZWN0IGlzIGN1cnJlbnRseSBiZWluZyBtb25pdG9yZWQgYW5kL29yIHN1YmplY3QgdG8gdHJlYXRtZW50IGFzIHBhcnQgb2YgdGhlIHN0dWR5XHJcbiAgICovXHJcbiAgQWN0aXZlOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIGNhbmRpZGF0ZTogVGhlIHN1YmplY3QgaGFzIGJlZW4gaWRlbnRpZmllZCBhcyBhIHBvdGVudGlhbCBwYXJ0aWNpcGFudCBpbiB0aGUgc3R1ZHkgYnV0IGhhcyBub3QgeWV0IGFncmVlZCB0byBwYXJ0aWNpcGF0ZVxyXG4gICAqL1xyXG4gIENhbmRpZGF0ZTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBjb21wbGV0ZWQ6IEFsbCBpbnRlbmRlZCBtb25pdG9yaW5nL3RyZWF0bWVudCBvZiB0aGUgc3ViamVjdCBoYXMgYmVlbiBjb21wbGV0ZWQgYW5kIHRoZWlyIGVuZ2FnZW1lbnQgd2l0aCB0aGUgc3R1ZHkgaXMgbm93IGVuZGVkXHJcbiAgICovXHJcbiAgQ29tcGxldGVkOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIGVucm9sbGVkOiBUaGUgc3ViamVjdCBoYXMgYWdyZWVkIHRvIHBhcnRpY2lwYXRlIGluIHRoZSBzdHVkeSBidXQgaGFzIG5vdCB5ZXQgYmVndW4gcGVyZm9ybWluZyBhbnkgYWN0aW9uIHdpdGhpbiB0aGUgc3R1ZHlcclxuICAgKi9cclxuICBFbnJvbGxlZDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBzdXNwZW5kZWQ6IFRoZSBzdWJqZWN0IGhhcyB0ZW1wb3JhcmlseSBkaXNjb250aW51ZWQgbW9uaXRvcmluZy90cmVhdG1lbnQgYXMgcGFydCBvZiB0aGUgc3R1ZHlcclxuICAgKi9cclxuICBTdXNwZW5kZWQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogd2l0aGRyYXduOiBUaGUgc3ViamVjdCBoYXMgcGVybWFuZW50bHkgZW5kZWQgcGFydGljaXBhdGlvbiBpbiB0aGUgc3R1ZHkgcHJpb3IgdG8gY29tcGxldGlvbiBvZiB0aGUgaW50ZW5kZWQgbW9uaXRvcmluZy90cmVhdG1lbnRcclxuICAgKi9cclxuICBXaXRoZHJhd246IENvZGluZ0FyZ3M7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBJbmRpY2F0ZXMgdGhlIHByb2dyZXNzaW9uIG9mIGEgc3R1ZHkgc3ViamVjdCB0aHJvdWdoIGEgc3R1ZHlcclxuICovXHJcbmV4cG9ydCBjb25zdCBSZXNlYXJjaFN1YmplY3RTdGF0dXNDb2RpbmdzOlJlc2VhcmNoU3ViamVjdFN0YXR1c0NvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogYWN0aXZlOiBUaGUgc3ViamVjdCBpcyBjdXJyZW50bHkgYmVpbmcgbW9uaXRvcmVkIGFuZC9vciBzdWJqZWN0IHRvIHRyZWF0bWVudCBhcyBwYXJ0IG9mIHRoZSBzdHVkeVxyXG4gICAqL1xyXG4gIEFjdGl2ZToge1xyXG4gICAgZGlzcGxheTogXCJBY3RpdmVcIixcclxuICAgIGNvZGU6IFwiYWN0aXZlXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXNlYXJjaC1zdWJqZWN0LXN0YXR1c1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogY2FuZGlkYXRlOiBUaGUgc3ViamVjdCBoYXMgYmVlbiBpZGVudGlmaWVkIGFzIGEgcG90ZW50aWFsIHBhcnRpY2lwYW50IGluIHRoZSBzdHVkeSBidXQgaGFzIG5vdCB5ZXQgYWdyZWVkIHRvIHBhcnRpY2lwYXRlXHJcbiAgICovXHJcbiAgQ2FuZGlkYXRlOiB7XHJcbiAgICBkaXNwbGF5OiBcIkNhbmRpZGF0ZVwiLFxyXG4gICAgY29kZTogXCJjYW5kaWRhdGVcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc2VhcmNoLXN1YmplY3Qtc3RhdHVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBjb21wbGV0ZWQ6IEFsbCBpbnRlbmRlZCBtb25pdG9yaW5nL3RyZWF0bWVudCBvZiB0aGUgc3ViamVjdCBoYXMgYmVlbiBjb21wbGV0ZWQgYW5kIHRoZWlyIGVuZ2FnZW1lbnQgd2l0aCB0aGUgc3R1ZHkgaXMgbm93IGVuZGVkXHJcbiAgICovXHJcbiAgQ29tcGxldGVkOiB7XHJcbiAgICBkaXNwbGF5OiBcIkNvbXBsZXRlZFwiLFxyXG4gICAgY29kZTogXCJjb21wbGV0ZWRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc2VhcmNoLXN1YmplY3Qtc3RhdHVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBlbnJvbGxlZDogVGhlIHN1YmplY3QgaGFzIGFncmVlZCB0byBwYXJ0aWNpcGF0ZSBpbiB0aGUgc3R1ZHkgYnV0IGhhcyBub3QgeWV0IGJlZ3VuIHBlcmZvcm1pbmcgYW55IGFjdGlvbiB3aXRoaW4gdGhlIHN0dWR5XHJcbiAgICovXHJcbiAgRW5yb2xsZWQ6IHtcclxuICAgIGRpc3BsYXk6IFwiRW5yb2xsZWRcIixcclxuICAgIGNvZGU6IFwiZW5yb2xsZWRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc2VhcmNoLXN1YmplY3Qtc3RhdHVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBzdXNwZW5kZWQ6IFRoZSBzdWJqZWN0IGhhcyB0ZW1wb3JhcmlseSBkaXNjb250aW51ZWQgbW9uaXRvcmluZy90cmVhdG1lbnQgYXMgcGFydCBvZiB0aGUgc3R1ZHlcclxuICAgKi9cclxuICBTdXNwZW5kZWQ6IHtcclxuICAgIGRpc3BsYXk6IFwiU3VzcGVuZGVkXCIsXHJcbiAgICBjb2RlOiBcInN1c3BlbmRlZFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVzZWFyY2gtc3ViamVjdC1zdGF0dXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIHdpdGhkcmF3bjogVGhlIHN1YmplY3QgaGFzIHBlcm1hbmVudGx5IGVuZGVkIHBhcnRpY2lwYXRpb24gaW4gdGhlIHN0dWR5IHByaW9yIHRvIGNvbXBsZXRpb24gb2YgdGhlIGludGVuZGVkIG1vbml0b3JpbmcvdHJlYXRtZW50XHJcbiAgICovXHJcbiAgV2l0aGRyYXduOiB7XHJcbiAgICBkaXNwbGF5OiBcIldpdGhkcmF3blwiLFxyXG4gICAgY29kZTogXCJ3aXRoZHJhd25cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Jlc2VhcmNoLXN1YmplY3Qtc3RhdHVzXCIsXHJcbiAgfSxcclxufSBhcyBjb25zdDtcclxuIl19