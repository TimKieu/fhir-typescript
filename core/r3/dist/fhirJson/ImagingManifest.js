// <auto-generated/>
// Contents of: hl7.fhir.r3.core version: 3.0.2
// Minimum TypeScript Version: 3.7
// FHIR Resource: ImagingManifest
export {};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSW1hZ2luZ01hbmlmZXN0LmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpckpzb24vSW1hZ2luZ01hbmlmZXN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQiwrQ0FBK0M7QUFDL0Msa0NBQWtDO0FBQ2xDLGlDQUFpQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yMy5jb3JlIHZlcnNpb246IDMuMC4yXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBSZXNvdXJjZTogSW1hZ2luZ01hbmlmZXN0XHJcblxyXG5pbXBvcnQgKiBhcyBmaGlyIGZyb20gJy4uL2ZoaXJKc29uLmpzJztcclxuXHJcblxyXG4vKipcclxuICogU09QIEluc3RhbmNlIGNvbXBvbmVudCBpZGVudGlmeSB0aGUgaW5zdGFuY2Ugc2VsZWN0ZWQsIGFsb25nIHdpdGggdGhlIHN0dWR5IGFuZCBzZXJpZXMgaWRlbnRpdGllcyB0byBmb3JtIHRoZSBESUNPTSBpZGVudGl0eSBoaWVyYXJjaHkuXHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIEltYWdpbmdNYW5pZmVzdFN0dWR5U2VyaWVzSW5zdGFuY2UgZXh0ZW5kcyBmaGlyLkJhY2tib25lRWxlbWVudCB7IFxyXG4gIC8qKlxyXG4gICAqIFNPUCBjbGFzcyBVSUQgaWRlbnRpZmllcyB0aGUgdHlwZSBvZiB0aGUgc2VsZWN0ZWQgaW5zdGFuY2VzLCBlLmcuIENUIGltYWdlLCBHcmF5IHNjYWxlIHNvZnRjb3B5IHByZXNlbnRhdGlvbiBzdGF0ZSwgRUNHIHdhdmVmb3JtLCBldGMuXHJcbiAgICovXHJcbiAgc29wQ2xhc3M6IHN0cmluZ3xudWxsO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBJbWFnaW5nTWFuaWZlc3Quc3R1ZHkuc2VyaWVzLmluc3RhbmNlLnNvcENsYXNzXHJcbiAgICovXHJcbiAgX3NvcENsYXNzPzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIFNPUCBpbnN0YW5jZSBVSUQgaWRlbnRpZmllcyB0aGUgaW5zdGFuY2UuXHJcbiAgICovXHJcbiAgdWlkOiBzdHJpbmd8bnVsbDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogSW1hZ2luZ01hbmlmZXN0LnN0dWR5LnNlcmllcy5pbnN0YW5jZS51aWRcclxuICAgKi9cclxuICBfdWlkPzpmaGlyLkZoaXJFbGVtZW50O1xyXG59XHJcblxyXG4vKipcclxuICogU2VyaWVzIGNvbXBvbmVudCByZXByZXNlbnRzIHRoZSBzZXJpZXMgbGV2ZWwgaWRlbnRpdHkgYW5kIGxvY2F0b3IgaW5mb3JtYXRpb24gb2YgdGhlIERJQ09NIFNPUCBpbnN0YW5jZXMgaW4gdGhlIHNlbGVjdGlvbi5cclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgSW1hZ2luZ01hbmlmZXN0U3R1ZHlTZXJpZXMgZXh0ZW5kcyBmaGlyLkJhY2tib25lRWxlbWVudCB7IFxyXG4gIC8qKlxyXG4gICAqIFNlcmllcyBpbnN0YW5jZSBVSUQgb2YgdGhlIFNPUCBpbnN0YW5jZXMgaW4gdGhlIHNlbGVjdGlvbi5cclxuICAgKi9cclxuICB1aWQ6IHN0cmluZ3xudWxsO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBJbWFnaW5nTWFuaWZlc3Quc3R1ZHkuc2VyaWVzLnVpZFxyXG4gICAqL1xyXG4gIF91aWQ/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbiAgLyoqXHJcbiAgICogVGhlIG5ldHdvcmsgc2VydmljZSBwcm92aWRpbmcgYWNjZXNzIChlLmcuLCBxdWVyeSwgdmlldywgb3IgcmV0cmlldmFsKSBmb3IgdGhpcyBzZXJpZXMuIFNlZSBpbXBsZW1lbnRhdGlvbiBub3RlcyBmb3IgaW5mb3JtYXRpb24gYWJvdXQgdXNpbmcgRElDT00gZW5kcG9pbnRzLiBBIHNlcmllcy1sZXZlbCBlbmRwb2ludCwgaWYgcHJlc2VudCwgaGFzIHByZWNlZGVuY2Ugb3ZlciBhIHN0dWR5LWxldmVsIGVuZHBvaW50IHdpdGggdGhlIHNhbWUgRW5kcG9pbnQudHlwZS5cclxuICAgKi9cclxuICBlbmRwb2ludD86IChmaGlyLlJlZmVyZW5jZXxudWxsKVtdfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBTT1AgSW5zdGFuY2UgY29tcG9uZW50IGlkZW50aWZ5IHRoZSBpbnN0YW5jZSBzZWxlY3RlZCwgYWxvbmcgd2l0aCB0aGUgc3R1ZHkgYW5kIHNlcmllcyBpZGVudGl0aWVzIHRvIGZvcm0gdGhlIERJQ09NIGlkZW50aXR5IGhpZXJhcmNoeS5cclxuICAgKi9cclxuICBpbnN0YW5jZTogKGZoaXIuSW1hZ2luZ01hbmlmZXN0U3R1ZHlTZXJpZXNJbnN0YW5jZXxudWxsKVtdfG51bGw7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBTdHVkeSBjb21wb25lbnQgcmVwcmVzZW50cyB0aGUgc3R1ZHkgbGV2ZWwgaWRlbnRpdHkgYW5kIGxvY2F0b3IgaW5mb3JtYXRpb24gb2YgdGhlIERJQ09NIFNPUCBpbnN0YW5jZXMgaW4gdGhlIHNlbGVjdGlvbi4gSXQgaXMgdGhlIHRvcCBsZXZlbCBpZGVudGl0eSBvZiB0aGUgaGllcmFyY2hpY2FsIGlkZW50aWZpY2F0aW9uIG9mIHRoZSBpbnN0YW5jZXMuXHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIEltYWdpbmdNYW5pZmVzdFN0dWR5IGV4dGVuZHMgZmhpci5CYWNrYm9uZUVsZW1lbnQgeyBcclxuICAvKipcclxuICAgKiBTdHVkeSBpbnN0YW5jZSBVSUQgb2YgdGhlIFNPUCBpbnN0YW5jZXMgaW4gdGhlIHNlbGVjdGlvbi5cclxuICAgKi9cclxuICB1aWQ6IHN0cmluZ3xudWxsO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBJbWFnaW5nTWFuaWZlc3Quc3R1ZHkudWlkXHJcbiAgICovXHJcbiAgX3VpZD86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBSZWZlcmVuY2UgdG8gdGhlIEltYWdpbmcgU3R1ZHkgaW4gRkhJUiBmb3JtLlxyXG4gICAqL1xyXG4gIGltYWdpbmdTdHVkeT86IGZoaXIuUmVmZXJlbmNlfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBUaGUgbmV0d29yayBzZXJ2aWNlIHByb3ZpZGluZyBhY2Nlc3MgKGUuZy4sIHF1ZXJ5LCB2aWV3LCBvciByZXRyaWV2YWwpIGZvciB0aGUgc3R1ZHkuIFNlZSBpbXBsZW1lbnRhdGlvbiBub3RlcyBmb3IgaW5mb3JtYXRpb24gYWJvdXQgdXNpbmcgRElDT00gZW5kcG9pbnRzLiBBIHN0dWR5LWxldmVsIGVuZHBvaW50IGFwcGxpZXMgdG8gZWFjaCBzZXJpZXMgaW4gdGhlIHN0dWR5LCB1bmxlc3Mgb3ZlcnJpZGRlbiBieSBhIHNlcmllcy1sZXZlbCBlbmRwb2ludCB3aXRoIHRoZSBzYW1lIEVuZHBvaW50LnR5cGUuXHJcbiAgICovXHJcbiAgZW5kcG9pbnQ/OiAoZmhpci5SZWZlcmVuY2V8bnVsbClbXXx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogU2VyaWVzIGNvbXBvbmVudCByZXByZXNlbnRzIHRoZSBzZXJpZXMgbGV2ZWwgaWRlbnRpdHkgYW5kIGxvY2F0b3IgaW5mb3JtYXRpb24gb2YgdGhlIERJQ09NIFNPUCBpbnN0YW5jZXMgaW4gdGhlIHNlbGVjdGlvbi5cclxuICAgKi9cclxuICBzZXJpZXM6IChmaGlyLkltYWdpbmdNYW5pZmVzdFN0dWR5U2VyaWVzfG51bGwpW118bnVsbDtcclxufVxyXG5cclxuLyoqXHJcbiAqIEEgdGV4dCBkZXNjcmlwdGlvbiBvZiB0aGUgRElDT00gU09QIGluc3RhbmNlcyBzZWxlY3RlZCBpbiB0aGUgSW1hZ2luZ01hbmlmZXN0OyBvciB0aGUgcmVhc29uIGZvciwgb3Igc2lnbmlmaWNhbmNlIG9mLCB0aGUgc2VsZWN0aW9uLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBJbWFnaW5nTWFuaWZlc3QgZXh0ZW5kcyBmaGlyLkRvbWFpblJlc291cmNlIHsgXHJcbiAgLyoqXHJcbiAgICogUmVzb3VyY2UgVHlwZSBOYW1lXHJcbiAgICovXHJcbiAgcmVzb3VyY2VUeXBlOiBcIkltYWdpbmdNYW5pZmVzdFwifG51bGw7XHJcbiAgLyoqXHJcbiAgICogVW5pcXVlIGlkZW50aWZpZXIgb2YgdGhlIERJQ09NIEtleSBPYmplY3QgU2VsZWN0aW9uIChLT1MpIHRoYXQgdGhpcyByZXNvdXJjZSByZXByZXNlbnRzLlxyXG4gICAqL1xyXG4gIGlkZW50aWZpZXI/OiBmaGlyLklkZW50aWZpZXJ8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIFNPUCBpbnN0YW5jZXMgc2VsZWN0ZWQgaW4gdGhlIEltYWdpbmdNYW5pZmVzdCBjYW4gYmUgZnJvbSBkaWZmZXJlbnQgc3R1ZGllcywgYnV0IG11c3QgYmUgb2YgdGhlIHNhbWUgcGF0aWVudC5cclxuICAgKi9cclxuICBwYXRpZW50OiBmaGlyLlJlZmVyZW5jZXxudWxsO1xyXG4gIC8qKlxyXG4gICAqIERhdGUgYW5kIHRpbWUgd2hlbiB0aGUgc2VsZWN0aW9uIG9mIHRoZSByZWZlcmVuY2VkIGluc3RhbmNlcyB3ZXJlIG1hZGUuIEl0IGlzICh0eXBpY2FsbHkpIGRpZmZlcmVudCBmcm9tIHRoZSBjcmVhdGlvbiBkYXRlIG9mIHRoZSBzZWxlY3Rpb24gcmVzb3VyY2UsIGFuZCBmcm9tIGRhdGVzIGFzc29jaWF0ZWQgd2l0aCB0aGUgcmVmZXJlbmNlZCBpbnN0YW5jZXMgKGUuZy4gY2FwdHVyZSB0aW1lIG9mIHRoZSByZWZlcmVuY2VkIGltYWdlKS5cclxuICAgKi9cclxuICBhdXRob3JpbmdUaW1lPzogc3RyaW5nfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogSW1hZ2luZ01hbmlmZXN0LmF1dGhvcmluZ1RpbWVcclxuICAgKi9cclxuICBfYXV0aG9yaW5nVGltZT86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBBdXRob3Igb2YgSW1hZ2luZ01hbmlmZXN0LiBJdCBjYW4gYmUgYSBodW1hbiBhdXRob3Igb3IgYSBkZXZpY2Ugd2hpY2ggbWFkZSB0aGUgZGVjaXNpb24gb2YgdGhlIFNPUCBpbnN0YW5jZXMgc2VsZWN0ZWQuIEZvciBleGFtcGxlLCBhIHJhZGlvbG9naXN0IHNlbGVjdGVkIGEgc2V0IG9mIGltYWdpbmcgU09QIGluc3RhbmNlcyB0byBhdHRhY2ggaW4gYSBkaWFnbm9zdGljIHJlcG9ydCwgYW5kIGEgQ0FEIGFwcGxpY2F0aW9uIG1heSBhdXRob3IgYSBzZWxlY3Rpb24gdG8gZGVzY3JpYmUgU09QIGluc3RhbmNlcyBpdCB1c2VkIHRvIGdlbmVyYXRlIGEgZGV0ZWN0aW9uIGNvbmNsdXNpb24uXHJcbiAgICovXHJcbiAgYXV0aG9yPzogZmhpci5SZWZlcmVuY2V8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEZyZWUgdGV4dCBuYXJyYXRpdmUgZGVzY3JpcHRpb24gb2YgdGhlIEltYWdpbmdNYW5pZmVzdC5cclxuICAgKi9cclxuICBkZXNjcmlwdGlvbj86IHN0cmluZ3x1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IEltYWdpbmdNYW5pZmVzdC5kZXNjcmlwdGlvblxyXG4gICAqL1xyXG4gIF9kZXNjcmlwdGlvbj86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBTdHVkeSBjb21wb25lbnQgcmVwcmVzZW50cyB0aGUgc3R1ZHkgbGV2ZWwgaWRlbnRpdHkgYW5kIGxvY2F0b3IgaW5mb3JtYXRpb24gb2YgdGhlIERJQ09NIFNPUCBpbnN0YW5jZXMgaW4gdGhlIHNlbGVjdGlvbi4gSXQgaXMgdGhlIHRvcCBsZXZlbCBpZGVudGl0eSBvZiB0aGUgaGllcmFyY2hpY2FsIGlkZW50aWZpY2F0aW9uIG9mIHRoZSBpbnN0YW5jZXMuXHJcbiAgICovXHJcbiAgc3R1ZHk6IChmaGlyLkltYWdpbmdNYW5pZmVzdFN0dWR5fG51bGwpW118bnVsbDtcclxufVxyXG4iXX0=