// <auto-generated/>
// Contents of: hl7.fhir.r3.core version: 3.0.2
// Minimum TypeScript Version: 3.7
// FHIR Resource: ActivityDefinition
export {};
//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"ActivityDefinition.js","sourceRoot":"./src/","sources":["fhirJson/ActivityDefinition.ts"],"names":[],"mappings":"AAAA,oBAAoB;AACpB,+CAA+C;AAC/C,kCAAkC;AAClC,oCAAoC","sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r3.core version: 3.0.2\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR Resource: ActivityDefinition\r\n\r\nimport * as fhir from '../fhirJson.js';\r\n\r\n\r\n/**\r\n * Indicates who should participate in performing the action described.\r\n */\r\nexport interface ActivityDefinitionParticipant extends fhir.BackboneElement { \r\n  /**\r\n   * The type of participant in the action.\r\n   */\r\n  type: 'patient'|'practitioner'|'related-person'|null;\r\n  /**\r\n   * Extended properties for primitive element: ActivityDefinition.participant.type\r\n   */\r\n  _type?:fhir.FhirElement;\r\n  /**\r\n   * The role the participant should play in performing the described action.\r\n   */\r\n  role?: fhir.CodeableConcept|undefined;\r\n}\r\n\r\n/**\r\n * Dynamic values that will be evaluated to produce values for elements of the resulting resource. For example, if the dosage of a medication must be computed based on the patient's weight, a dynamic value would be used to specify an expression that calculated the weight, and the path on the intent resource that would contain the result.\r\n */\r\nexport interface ActivityDefinitionDynamicValue extends fhir.BackboneElement { \r\n  /**\r\n   * A brief, natural language description of the intended semantics of the dynamic value.\r\n   */\r\n  description?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ActivityDefinition.dynamicValue.description\r\n   */\r\n  _description?:fhir.FhirElement;\r\n  /**\r\n   * The path to the element to be customized. This is the path on the resource that will hold the result of the calculation defined by the expression.\r\n   */\r\n  path?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ActivityDefinition.dynamicValue.path\r\n   */\r\n  _path?:fhir.FhirElement;\r\n  /**\r\n   * The media type of the language for the expression.\r\n   */\r\n  language?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ActivityDefinition.dynamicValue.language\r\n   */\r\n  _language?:fhir.FhirElement;\r\n  /**\r\n   * The expression may be inlined, or may be a reference to a named expression within a logic library referenced by the library element.\r\n   */\r\n  expression?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ActivityDefinition.dynamicValue.expression\r\n   */\r\n  _expression?:fhir.FhirElement;\r\n}\r\n\r\n/**\r\n * This resource allows for the definition of some activity to be performed, independent of a particular patient, practitioner, or other performance context.\r\n */\r\nexport interface ActivityDefinition extends fhir.DomainResource { \r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  resourceType: \"ActivityDefinition\"|null;\r\n  /**\r\n   * Can be a urn:uuid: or a urn:oid:, but real http: addresses are preferred.  Multiple instances may share the same url if they have a distinct version.\r\n   */\r\n  url?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ActivityDefinition.url\r\n   */\r\n  _url?:fhir.FhirElement;\r\n  /**\r\n   * Typically, this is used for identifiers that can go in an HL7 V3 II (instance identifier) data type, e.g., to identify this activity definition outside of FHIR, where it is not possible to use the logical URI.\r\n   */\r\n  identifier?: (fhir.Identifier|null)[]|undefined;\r\n  /**\r\n   * There may be different activity definition instances that have the same identifier but different versions.  The version can be appended to the url in a reference to allow a refrence to a particular business version of the activity definition with the format [url]|[version].\r\n   */\r\n  version?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ActivityDefinition.version\r\n   */\r\n  _version?:fhir.FhirElement;\r\n  /**\r\n   * The name is not expected to be globally unique. The name should be a simple alpha-numeric type name to ensure that it is computable friendly.\r\n   */\r\n  name?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ActivityDefinition.name\r\n   */\r\n  _name?:fhir.FhirElement;\r\n  /**\r\n   * This name does not need to be machine-processing friendly and may contain punctuation, white-space, etc.\r\n   */\r\n  title?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ActivityDefinition.title\r\n   */\r\n  _title?:fhir.FhirElement;\r\n  /**\r\n   * Allows filtering of activity definitions that are appropriate for use vs. not.  \r\n   * This is labeled as \"Is Modifier\" because applications should not use a retired activity definition without due consideration.\r\n   */\r\n  status: 'active'|'draft'|'retired'|'unknown'|null;\r\n  /**\r\n   * Extended properties for primitive element: ActivityDefinition.status\r\n   */\r\n  _status?:fhir.FhirElement;\r\n  /**\r\n   * Allows filtering of activity definition that are appropriate for use vs. not. This is labeled as \"Is Modifier\" because applications should not use an experimental activity definition in production.\r\n   */\r\n  experimental?: boolean|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ActivityDefinition.experimental\r\n   */\r\n  _experimental?:fhir.FhirElement;\r\n  /**\r\n   * Note that this is not the same as the resource last-modified-date, since the resource may be a secondary representation of the activity definition. Additional specific dates may be added as extensions or be found by consulting Provenances associated with past versions of the resource.\r\n   */\r\n  date?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ActivityDefinition.date\r\n   */\r\n  _date?:fhir.FhirElement;\r\n  /**\r\n   * Usually an organization, but may be an individual. The publisher (or steward) of the activity definition is the organization or individual primarily responsible for the maintenance and upkeep of the activity definition. This is not necessarily the same individual or organization that developed and initially authored the content. The publisher is the primary point of contact for questions or issues with the activity definition. This item SHOULD be populated unless the information is available from context.\r\n   */\r\n  publisher?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ActivityDefinition.publisher\r\n   */\r\n  _publisher?:fhir.FhirElement;\r\n  /**\r\n   * This description can be used to capture details such as why the activity definition was built, comments about misuse, instructions for clinical use and interpretation, literature references, examples from the paper world, etc. It is not a rendering of the activity definition as conveyed in the 'text' field of the resource itself. This item SHOULD be populated unless the information is available from context (e.g. the language of the profile is presumed to be the predominant language in the place the profile was created).\r\n   */\r\n  description?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ActivityDefinition.description\r\n   */\r\n  _description?:fhir.FhirElement;\r\n  /**\r\n   * This element does not describe the usage of the activity definition Instead  it provides traceability of ''why'' the resource is either needed or ''why'' it is defined as it is.  This may be used to point to source materials or specifications that drove the structure of this activity definition.\r\n   */\r\n  purpose?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ActivityDefinition.purpose\r\n   */\r\n  _purpose?:fhir.FhirElement;\r\n  /**\r\n   * A detailed description of how the asset is used from a clinical perspective.\r\n   */\r\n  usage?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ActivityDefinition.usage\r\n   */\r\n  _usage?:fhir.FhirElement;\r\n  /**\r\n   * The 'date' element may be more recent than the approval date because of minor changes / editorial corrections.\r\n   */\r\n  approvalDate?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ActivityDefinition.approvalDate\r\n   */\r\n  _approvalDate?:fhir.FhirElement;\r\n  /**\r\n   * If specified, this is usually after the approval date.\r\n   */\r\n  lastReviewDate?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ActivityDefinition.lastReviewDate\r\n   */\r\n  _lastReviewDate?:fhir.FhirElement;\r\n  /**\r\n   * The effective period for a activity definition  determines when the content is applicable for usage and is independent of publication and review dates. For example, a measure intended to be used for the year 2016 might be published in 2015.\r\n   */\r\n  effectivePeriod?: fhir.Period|undefined;\r\n  /**\r\n   * When multiple useContexts are specified, there is no expectation whether all or any of the contexts apply.\r\n   */\r\n  useContext?: (fhir.UsageContext|null)[]|undefined;\r\n  /**\r\n   * It may be possible for the activity definition to be used in jurisdictions other than those for which it was originally designed or intended.\r\n   */\r\n  jurisdiction?: (fhir.CodeableConcept|null)[]|undefined;\r\n  /**\r\n   * Descriptive topics related to the content of the activity. Topics provide a high-level categorization of the activity that can be useful for filtering and searching.\r\n   */\r\n  topic?: (fhir.CodeableConcept|null)[]|undefined;\r\n  /**\r\n   * A contributor to the content of the asset, including authors, editors, reviewers, and endorsers.\r\n   */\r\n  contributor?: (fhir.Contributor|null)[]|undefined;\r\n  /**\r\n   * May be a web site, an email address, a telephone number, etc.\r\n   */\r\n  contact?: (fhir.ContactDetail|null)[]|undefined;\r\n  /**\r\n   * A copyright statement relating to the activity definition and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the activity definition.\r\n   */\r\n  copyright?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ActivityDefinition.copyright\r\n   */\r\n  _copyright?:fhir.FhirElement;\r\n  /**\r\n   * Each related artifact is either an attachment, or a reference to another resource, but not both.\r\n   */\r\n  relatedArtifact?: (fhir.RelatedArtifact|null)[]|undefined;\r\n  /**\r\n   * A reference to a Library resource containing any formal logic used by the asset.\r\n   */\r\n  library?: (fhir.Reference|null)[]|undefined;\r\n  /**\r\n   * May determine what types of extensions are permitted.\r\n   */\r\n  kind?: 'Account'|'ActivityDefinition'|'AdverseEvent'|'AllergyIntolerance'|'Appointment'|'AppointmentResponse'|'AuditEvent'|'Basic'|'Binary'|'BodySite'|'Bundle'|'CapabilityStatement'|'CarePlan'|'CareTeam'|'ChargeItem'|'Claim'|'ClaimResponse'|'ClinicalImpression'|'CodeSystem'|'Communication'|'CommunicationRequest'|'CompartmentDefinition'|'Composition'|'ConceptMap'|'Condition'|'Consent'|'Contract'|'Coverage'|'DataElement'|'DetectedIssue'|'Device'|'DeviceComponent'|'DeviceMetric'|'DeviceRequest'|'DeviceUseStatement'|'DiagnosticReport'|'DocumentManifest'|'DocumentReference'|'DomainResource'|'EligibilityRequest'|'EligibilityResponse'|'Encounter'|'Endpoint'|'EnrollmentRequest'|'EnrollmentResponse'|'EpisodeOfCare'|'ExpansionProfile'|'ExplanationOfBenefit'|'FamilyMemberHistory'|'Flag'|'Goal'|'GraphDefinition'|'Group'|'GuidanceResponse'|'HealthcareService'|'ImagingManifest'|'ImagingStudy'|'Immunization'|'ImmunizationRecommendation'|'ImplementationGuide'|'Library'|'Linkage'|'List'|'Location'|'Measure'|'MeasureReport'|'Media'|'Medication'|'MedicationAdministration'|'MedicationDispense'|'MedicationRequest'|'MedicationStatement'|'MessageDefinition'|'MessageHeader'|'NamingSystem'|'NutritionOrder'|'Observation'|'OperationDefinition'|'OperationOutcome'|'Organization'|'Parameters'|'Patient'|'PaymentNotice'|'PaymentReconciliation'|'Person'|'PlanDefinition'|'Practitioner'|'PractitionerRole'|'Procedure'|'ProcedureRequest'|'ProcessRequest'|'ProcessResponse'|'Provenance'|'Questionnaire'|'QuestionnaireResponse'|'ReferralRequest'|'RelatedPerson'|'RequestGroup'|'ResearchStudy'|'ResearchSubject'|'Resource'|'RiskAssessment'|'Schedule'|'SearchParameter'|'Sequence'|'ServiceDefinition'|'Slot'|'Specimen'|'StructureDefinition'|'StructureMap'|'Subscription'|'Substance'|'SupplyDelivery'|'SupplyRequest'|'Task'|'TestReport'|'TestScript'|'ValueSet'|'VisionPrescription'|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ActivityDefinition.kind\r\n   */\r\n  _kind?:fhir.FhirElement;\r\n  /**\r\n   * Tends to be less relevant for activities involving particular products.\r\n   */\r\n  code?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * The period, timing or frequency upon which the described activity is to occur.\r\n   */\r\n  timingTiming?: fhir.Timing|undefined;\r\n  /**\r\n   * The period, timing or frequency upon which the described activity is to occur.\r\n   */\r\n  timingDateTime?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ActivityDefinition.timing[x]\r\n   */\r\n  _timingDateTime?:fhir.FhirElement;\r\n  /**\r\n   * The period, timing or frequency upon which the described activity is to occur.\r\n   */\r\n  timingPeriod?: fhir.Period|undefined;\r\n  /**\r\n   * The period, timing or frequency upon which the described activity is to occur.\r\n   */\r\n  timingRange?: fhir.Range|undefined;\r\n  /**\r\n   * May reference a specific clinical location or may just identify a type of location.\r\n   */\r\n  location?: fhir.Reference|undefined;\r\n  /**\r\n   * Indicates who should participate in performing the action described.\r\n   */\r\n  participant?: (fhir.ActivityDefinitionParticipant|null)[]|undefined;\r\n  /**\r\n   * Identifies the food, drug or other product being consumed or supplied in the activity.\r\n   */\r\n  productReference?: fhir.Reference|undefined;\r\n  /**\r\n   * Identifies the food, drug or other product being consumed or supplied in the activity.\r\n   */\r\n  productCodeableConcept?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * Identifies the quantity expected to be consumed at once (per dose, per meal, etc.).\r\n   */\r\n  quantity?: fhir.Quantity|undefined;\r\n  /**\r\n   * If a dosage instruction is used, the definition should not specify timing or quantity.\r\n   */\r\n  dosage?: (fhir.Dosage|null)[]|undefined;\r\n  /**\r\n   * Only used if not implicit in the code found in ProcedureRequest.type.\r\n   */\r\n  bodySite?: (fhir.CodeableConcept|null)[]|undefined;\r\n  /**\r\n   * A reference to a StructureMap resource that defines a transform that can be executed to produce the intent resource using the ActivityDefinition instance as the input.\r\n   */\r\n  transform?: fhir.Reference|undefined;\r\n  /**\r\n   * Dynamic values that will be evaluated to produce values for elements of the resulting resource. For example, if the dosage of a medication must be computed based on the patient's weight, a dynamic value would be used to specify an expression that calculated the weight, and the path on the intent resource that would contain the result.\r\n   */\r\n  dynamicValue?: (fhir.ActivityDefinitionDynamicValue|null)[]|undefined;\r\n}\r\n"]}