// <auto-generated/>
// Contents of: hl7.fhir.r3.core version: 3.0.2
// Minimum TypeScript Version: 3.7
// FHIR Resource: DeviceComponent
export {};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGV2aWNlQ29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpckpzb24vRGV2aWNlQ29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQiwrQ0FBK0M7QUFDL0Msa0NBQWtDO0FBQ2xDLGlDQUFpQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yMy5jb3JlIHZlcnNpb246IDMuMC4yXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBSZXNvdXJjZTogRGV2aWNlQ29tcG9uZW50XHJcblxyXG5pbXBvcnQgKiBhcyBmaGlyIGZyb20gJy4uL2ZoaXJKc29uLmpzJztcclxuXHJcblxyXG4vKipcclxuICogVGhlIHByb2R1Y3Rpb24gc3BlY2lmaWNhdGlvbiBzdWNoIGFzIGNvbXBvbmVudCByZXZpc2lvbiwgc2VyaWFsIG51bWJlciwgZXRjLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBEZXZpY2VDb21wb25lbnRQcm9kdWN0aW9uU3BlY2lmaWNhdGlvbiBleHRlbmRzIGZoaXIuQmFja2JvbmVFbGVtZW50IHsgXHJcbiAgLyoqXHJcbiAgICogVGhlIHNwZWNpZmljYXRpb24gdHlwZSwgc3VjaCBhcywgc2VyaWFsIG51bWJlciwgcGFydCBudW1iZXIsIGhhcmR3YXJlIHJldmlzaW9uLCBzb2Z0d2FyZSByZXZpc2lvbiwgZXRjLlxyXG4gICAqL1xyXG4gIHNwZWNUeXBlPzogZmhpci5Db2RlYWJsZUNvbmNlcHR8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIFRoZSBpbnRlcm5hbCBjb21wb25lbnQgdW5pcXVlIGlkZW50aWZpY2F0aW9uLiBUaGlzIGlzIGEgcHJvdmlzaW9uIGZvciBtYW51ZmFjdHVyZSBzcGVjaWZpYyBzdGFuZGFyZCBjb21wb25lbnRzIHVzaW5nIGEgcHJpdmF0ZSBPSUQuIDExMDczLTEwMTAxIGhhcyBhIHBhcnRpdGlvbiBmb3IgcHJpdmF0ZSBPSUQgc2VtYW50aWMgdGhhdCB0aGUgbWFudWZhY3R1cmVyIGNhbiBtYWtlIHVzZSBvZi5cclxuICAgKi9cclxuICBjb21wb25lbnRJZD86IGZoaXIuSWRlbnRpZmllcnx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogVGhlIHByaW50YWJsZSBzdHJpbmcgZGVmaW5pbmcgdGhlIGNvbXBvbmVudC5cclxuICAgKi9cclxuICBwcm9kdWN0aW9uU3BlYz86IHN0cmluZ3x1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IERldmljZUNvbXBvbmVudC5wcm9kdWN0aW9uU3BlY2lmaWNhdGlvbi5wcm9kdWN0aW9uU3BlY1xyXG4gICAqL1xyXG4gIF9wcm9kdWN0aW9uU3BlYz86Zmhpci5GaGlyRWxlbWVudDtcclxufVxyXG5cclxuLyoqXHJcbiAqIFRoZSBjaGFyYWN0ZXJpc3RpY3MsIG9wZXJhdGlvbmFsIHN0YXR1cyBhbmQgY2FwYWJpbGl0aWVzIG9mIGEgbWVkaWNhbC1yZWxhdGVkIGNvbXBvbmVudCBvZiBhIG1lZGljYWwgZGV2aWNlLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBEZXZpY2VDb21wb25lbnQgZXh0ZW5kcyBmaGlyLkRvbWFpblJlc291cmNlIHsgXHJcbiAgLyoqXHJcbiAgICogUmVzb3VyY2UgVHlwZSBOYW1lXHJcbiAgICovXHJcbiAgcmVzb3VyY2VUeXBlOiBcIkRldmljZUNvbXBvbmVudFwifG51bGw7XHJcbiAgLyoqXHJcbiAgICogVGhlIGxvY2FsbHkgYXNzaWduZWQgdW5pcXVlIGlkZW50aWZpY2F0aW9uIGJ5IHRoZSBzb2Z0d2FyZS4gRm9yIGV4YW1wbGU6IGhhbmRsZSBJRC5cclxuICAgKi9cclxuICBpZGVudGlmaWVyOiBmaGlyLklkZW50aWZpZXJ8bnVsbDtcclxuICAvKipcclxuICAgKiBEZXZpY2VDb21wb25lbnQudHlwZSBjYW4gYmUgcmVmZXJyZWQgdG8gZWl0aGVyIEdETU4gKG5vbWVuY2xhdHVyZSBzeXN0ZW0gc3VwcG9ydGVkIGJ5IEZEQSBHbG9iYWwgVURJIERhdGFiYXNlKSBvciBwcmVmZXJhYmxlIFJUTU1TIGNvZGluZyBzeXN0ZW0uXHJcbiAgICovXHJcbiAgdHlwZTogZmhpci5Db2RlYWJsZUNvbmNlcHR8bnVsbDtcclxuICAvKipcclxuICAgKiBUaGUgdGltZXN0YW1wIGZvciB0aGUgbW9zdCByZWNlbnQgc3lzdGVtIGNoYW5nZSB3aGljaCBpbmNsdWRlcyBkZXZpY2UgY29uZmlndXJhdGlvbiBvciBzZXR0aW5nIGNoYW5nZS5cclxuICAgKi9cclxuICBsYXN0U3lzdGVtQ2hhbmdlPzogc3RyaW5nfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogRGV2aWNlQ29tcG9uZW50Lmxhc3RTeXN0ZW1DaGFuZ2VcclxuICAgKi9cclxuICBfbGFzdFN5c3RlbUNoYW5nZT86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBUaGUgbGluayB0byB0aGUgc291cmNlIERldmljZSB0aGF0IGNvbnRhaW5zIGFkbWluaXN0cmF0aXZlIGRldmljZSBpbmZvcm1hdGlvbiBzdWNoIGFzIG1hbnVmYWN0dXJlLCBzZXJpYWwgbnVtYmVyLCBldGMuXHJcbiAgICovXHJcbiAgc291cmNlPzogZmhpci5SZWZlcmVuY2V8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIFRoZSBsaW5rIHRvIHRoZSBwYXJlbnQgcmVzb3VyY2UuIEZvciBleGFtcGxlOiBDaGFubmVsIGlzIGxpbmtlZCB0byBpdHMgVk1EIHBhcmVudC5cclxuICAgKi9cclxuICBwYXJlbnQ/OiBmaGlyLlJlZmVyZW5jZXx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogT3BlcmF0aW9uYWxTdGF0dXMgZm9yIHRoZSBNRFMsIFZNRCwgb3IgQ2hhbm5lbCB3aWxsIGJlIGJvdW5kIHRvIGEgc3BlY2lmaWMgVmFsdWVTZXQgdGhhdCBpcyBkZWZpbmVkIGluIGl0cyBwcm9maWxlLlxyXG4gICAqL1xyXG4gIG9wZXJhdGlvbmFsU3RhdHVzPzogKGZoaXIuQ29kZWFibGVDb25jZXB0fG51bGwpW118dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIFRoZSBwYXJhbWV0ZXIgZ3JvdXAgc3VwcG9ydGVkIGJ5IHRoZSBjdXJyZW50IGRldmljZSBjb21wb25lbnQgdGhhdCBpcyBiYXNlZCBvbiBzb21lIG5vbWVuY2xhdHVyZSwgZS5nLiBjYXJkaW92YXNjdWxhci5cclxuICAgKi9cclxuICBwYXJhbWV0ZXJHcm91cD86IGZoaXIuQ29kZWFibGVDb25jZXB0fHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBUaGUgcGh5c2ljYWwgcHJpbmNpcGxlIG9mIHRoZSBtZWFzdXJlbWVudC4gRm9yIGV4YW1wbGU6IHRoZXJtYWwsIGNoZW1pY2FsLCBhY291c3RpY2FsLCBldGMuXHJcbiAgICovXHJcbiAgbWVhc3VyZW1lbnRQcmluY2lwbGU/OiAnYWNvdXN0aWNhbCd8J2Jpb2xvZ2ljYWwnfCdjaGVtaWNhbCd8J2VsZWN0cmljYWwnfCdpbXBlZGFuY2UnfCdtYW51YWwnfCdtZWNoYW5pY2FsJ3wnbnVjbGVhcid8J29wdGljYWwnfCdvdGhlcid8J3RoZXJtYWwnfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogRGV2aWNlQ29tcG9uZW50Lm1lYXN1cmVtZW50UHJpbmNpcGxlXHJcbiAgICovXHJcbiAgX21lYXN1cmVtZW50UHJpbmNpcGxlPzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIFRoZSBwcm9kdWN0aW9uIHNwZWNpZmljYXRpb24gc3VjaCBhcyBjb21wb25lbnQgcmV2aXNpb24sIHNlcmlhbCBudW1iZXIsIGV0Yy5cclxuICAgKi9cclxuICBwcm9kdWN0aW9uU3BlY2lmaWNhdGlvbj86IChmaGlyLkRldmljZUNvbXBvbmVudFByb2R1Y3Rpb25TcGVjaWZpY2F0aW9ufG51bGwpW118dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIFRoZSBsYW5ndWFnZSBjb2RlIGZvciB0aGUgaHVtYW4tcmVhZGFibGUgdGV4dCBzdHJpbmcgcHJvZHVjZWQgYnkgdGhlIGRldmljZS4gVGhpcyBsYW5ndWFnZSBjb2RlIHdpbGwgZm9sbG93IHRoZSBJRVRGIGxhbmd1YWdlIHRhZy4gRXhhbXBsZTogZW4tVVMuXHJcbiAgICovXHJcbiAgbGFuZ3VhZ2VDb2RlPzogZmhpci5Db2RlYWJsZUNvbmNlcHR8dW5kZWZpbmVkO1xyXG59XHJcbiJdfQ==