// <auto-generated/>
// Contents of: hl7.fhir.r3.core version: 3.0.2
// Minimum TypeScript Version: 3.7
// FHIR Resource: Location
export {};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTG9jYXRpb24uanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlySnNvbi9Mb2NhdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQywwQkFBMEIiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjMuY29yZSB2ZXJzaW9uOiAzLjAuMlxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgUmVzb3VyY2U6IExvY2F0aW9uXHJcblxyXG5pbXBvcnQgKiBhcyBmaGlyIGZyb20gJy4uL2ZoaXJKc29uLmpzJztcclxuXHJcblxyXG4vKipcclxuICogVGhlIGFic29sdXRlIGdlb2dyYXBoaWMgbG9jYXRpb24gb2YgdGhlIExvY2F0aW9uLCBleHByZXNzZWQgdXNpbmcgdGhlIFdHUzg0IGRhdHVtIChUaGlzIGlzIHRoZSBzYW1lIGNvLW9yZGluYXRlIHN5c3RlbSB1c2VkIGluIEtNTCkuXHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIExvY2F0aW9uUG9zaXRpb24gZXh0ZW5kcyBmaGlyLkJhY2tib25lRWxlbWVudCB7IFxyXG4gIC8qKlxyXG4gICAqIExvbmdpdHVkZS4gVGhlIHZhbHVlIGRvbWFpbiBhbmQgdGhlIGludGVycHJldGF0aW9uIGFyZSB0aGUgc2FtZSBhcyBmb3IgdGhlIHRleHQgb2YgdGhlIGxvbmdpdHVkZSBlbGVtZW50IGluIEtNTCAoc2VlIG5vdGVzIGJlbG93KS5cclxuICAgKi9cclxuICBsb25naXR1ZGU6IG51bWJlcnxudWxsO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBMb2NhdGlvbi5wb3NpdGlvbi5sb25naXR1ZGVcclxuICAgKi9cclxuICBfbG9uZ2l0dWRlPzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIExhdGl0dWRlLiBUaGUgdmFsdWUgZG9tYWluIGFuZCB0aGUgaW50ZXJwcmV0YXRpb24gYXJlIHRoZSBzYW1lIGFzIGZvciB0aGUgdGV4dCBvZiB0aGUgbGF0aXR1ZGUgZWxlbWVudCBpbiBLTUwgKHNlZSBub3RlcyBiZWxvdykuXHJcbiAgICovXHJcbiAgbGF0aXR1ZGU6IG51bWJlcnxudWxsO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBMb2NhdGlvbi5wb3NpdGlvbi5sYXRpdHVkZVxyXG4gICAqL1xyXG4gIF9sYXRpdHVkZT86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBBbHRpdHVkZS4gVGhlIHZhbHVlIGRvbWFpbiBhbmQgdGhlIGludGVycHJldGF0aW9uIGFyZSB0aGUgc2FtZSBhcyBmb3IgdGhlIHRleHQgb2YgdGhlIGFsdGl0dWRlIGVsZW1lbnQgaW4gS01MIChzZWUgbm90ZXMgYmVsb3cpLlxyXG4gICAqL1xyXG4gIGFsdGl0dWRlPzogbnVtYmVyfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogTG9jYXRpb24ucG9zaXRpb24uYWx0aXR1ZGVcclxuICAgKi9cclxuICBfYWx0aXR1ZGU/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBEZXRhaWxzIGFuZCBwb3NpdGlvbiBpbmZvcm1hdGlvbiBmb3IgYSBwaHlzaWNhbCBwbGFjZSB3aGVyZSBzZXJ2aWNlcyBhcmUgcHJvdmlkZWQgIGFuZCByZXNvdXJjZXMgYW5kIHBhcnRpY2lwYW50cyBtYXkgYmUgc3RvcmVkLCBmb3VuZCwgY29udGFpbmVkIG9yIGFjY29tbW9kYXRlZC5cclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgTG9jYXRpb24gZXh0ZW5kcyBmaGlyLkRvbWFpblJlc291cmNlIHsgXHJcbiAgLyoqXHJcbiAgICogUmVzb3VyY2UgVHlwZSBOYW1lXHJcbiAgICovXHJcbiAgcmVzb3VyY2VUeXBlOiBcIkxvY2F0aW9uXCJ8bnVsbDtcclxuICAvKipcclxuICAgKiBVbmlxdWUgY29kZSBvciBudW1iZXIgaWRlbnRpZnlpbmcgdGhlIGxvY2F0aW9uIHRvIGl0cyB1c2Vycy5cclxuICAgKi9cclxuICBpZGVudGlmaWVyPzogKGZoaXIuSWRlbnRpZmllcnxudWxsKVtdfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBUaGlzIGVsZW1lbnQgaXMgbGFiZWxlZCBhcyBhIG1vZGlmaWVyIGJlY2F1c2UgdGhlIHN0YXR1cyBjb250YWlucyBjb2RlcyB0aGF0IG1hcmsgdGhlIHJlc291cmNlIGFzIG5vdCBjdXJyZW50bHkgdmFsaWQuXHJcbiAgICovXHJcbiAgc3RhdHVzPzogJ2FjdGl2ZSd8J2luYWN0aXZlJ3wnc3VzcGVuZGVkJ3x1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IExvY2F0aW9uLnN0YXR1c1xyXG4gICAqL1xyXG4gIF9zdGF0dXM/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbiAgLyoqXHJcbiAgICogVGhlIE9wZXJhdGlvbmFsIHN0YXR1cyBjb3ZlcnMgb3BlcmF0aW9uIHZhbHVlcyBtb3N0IHJlbGV2YW50IHRvIGJlZHMgKGJ1dCBjYW4gYWxzbyBhcHBseSB0byByb29tcy91bml0cy9jaGFpci9ldGMgc3VjaCBhcyBhbiBpc29sYXRpb24gdW5pdC9kaWFsaXN5cyBjaGFpcikuIFRoaXMgdHlwaWNhbGx5IGNvdmVycyBjb25jZXB0cyBzdWNoIGFzIGNvbnRhbWluYXRpb24sIGhvdXNla2VlcGluZyBhbmQgb3RoZXIgYWN0aXZpdGllc8KgbGlrZSBtYWludGVuYW5jZS5cclxuICAgKi9cclxuICBvcGVyYXRpb25hbFN0YXR1cz86IGZoaXIuQ29kaW5nfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBJZiB0aGUgbmFtZSBvZiBhbiBsb2NhdGlvbiBjaGFuZ2VzLCBjb25zaWRlciBwdXR0aW5nIHRoZSBvbGQgbmFtZSBpbiB0aGUgYWxpYXMgY29sdW1uIHNvIHRoYXQgaXQgY2FuIHN0aWxsIGJlIGxvY2F0ZWQgdGhyb3VnaCBzZWFyY2hlcy5cclxuICAgKi9cclxuICBuYW1lPzogc3RyaW5nfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogTG9jYXRpb24ubmFtZVxyXG4gICAqL1xyXG4gIF9uYW1lPzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIFRoZXJlIGFyZSBubyBkYXRlcyBhc3NvY2lhdGVkIHdpdGggdGhlIGFsaWFzL2hpc3RvcmljIG5hbWVzLCBhcyB0aGlzIGlzIG5vdCBpbnRlbmRlZCB0byB0cmFjayB3aGVuIG5hbWVzIHdlcmUgdXNlZCwgYnV0IHRvIGFzc2lzdCBpbiBzZWFyY2hpbmcgc28gdGhhdCBvbGRlciBuYW1lcyBjYW4gc3RpbGwgcmVzdWx0IGluIGlkZW50aWZ5aW5nIHRoZSBsb2NhdGlvbi5cclxuICAgKi9cclxuICBhbGlhcz86IChzdHJpbmd8bnVsbClbXXx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IExvY2F0aW9uLmFsaWFzXHJcbiAgICovXHJcbiAgX2FsaWFzPzooZmhpci5GaGlyRWxlbWVudHxudWxsKVtdO1xyXG4gIC8qKlxyXG4gICAqIERlc2NyaXB0aW9uIG9mIHRoZSBMb2NhdGlvbiwgd2hpY2ggaGVscHMgaW4gZmluZGluZyBvciByZWZlcmVuY2luZyB0aGUgcGxhY2UuXHJcbiAgICovXHJcbiAgZGVzY3JpcHRpb24/OiBzdHJpbmd8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBMb2NhdGlvbi5kZXNjcmlwdGlvblxyXG4gICAqL1xyXG4gIF9kZXNjcmlwdGlvbj86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBUaGlzIGlzIGxhYmVsZWQgYXMgYSBtb2RpZmVyIGJlY2F1c2Ugd2hldGhlciBvciBub3QgdGhlIGxvY2F0aW9uIGlzIGEgY2xhc3Mgb2YgbG9jYXRpb25zIGNoYW5nZXMgaG93IGl0IGNhbiBiZSB1c2VkIGFuZCB1bmRlcnN0b29kLlxyXG4gICAqL1xyXG4gIG1vZGU/OiAnaW5zdGFuY2UnfCdraW5kJ3x1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IExvY2F0aW9uLm1vZGVcclxuICAgKi9cclxuICBfbW9kZT86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBJbmRpY2F0ZXMgdGhlIHR5cGUgb2YgZnVuY3Rpb24gcGVyZm9ybWVkIGF0IHRoZSBsb2NhdGlvbi5cclxuICAgKi9cclxuICB0eXBlPzogZmhpci5Db2RlYWJsZUNvbmNlcHR8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIFRoZSBjb250YWN0IGRldGFpbHMgb2YgY29tbXVuaWNhdGlvbiBkZXZpY2VzIGF2YWlsYWJsZSBhdCB0aGUgbG9jYXRpb24uIFRoaXMgY2FuIGluY2x1ZGUgcGhvbmUgbnVtYmVycywgZmF4IG51bWJlcnMsIG1vYmlsZSBudW1iZXJzLCBlbWFpbCBhZGRyZXNzZXMgYW5kIHdlYiBzaXRlcy5cclxuICAgKi9cclxuICB0ZWxlY29tPzogKGZoaXIuQ29udGFjdFBvaW50fG51bGwpW118dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIFRoaXMgd2FzIGtlcHQgYXMgMC4uMSBhcyB0aGVyZSBpcyBubyB1c2UgcHJvcGVydHkgb24gdGhlIGFkZHJlc3MsIHNvIHdvdWxkbid0IGJlIGFibGUgdG8gaWRlbnRpZnkgZGlmZmVyZW50IGFkZHJlc3MgdHlwZXMuXHJcbiAgICovXHJcbiAgYWRkcmVzcz86IGZoaXIuQWRkcmVzc3x1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogUGh5c2ljYWwgZm9ybSBvZiB0aGUgbG9jYXRpb24sIGUuZy4gYnVpbGRpbmcsIHJvb20sIHZlaGljbGUsIHJvYWQuXHJcbiAgICovXHJcbiAgcGh5c2ljYWxUeXBlPzogZmhpci5Db2RlYWJsZUNvbmNlcHR8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIFRoZSBhYnNvbHV0ZSBnZW9ncmFwaGljIGxvY2F0aW9uIG9mIHRoZSBMb2NhdGlvbiwgZXhwcmVzc2VkIHVzaW5nIHRoZSBXR1M4NCBkYXR1bSAoVGhpcyBpcyB0aGUgc2FtZSBjby1vcmRpbmF0ZSBzeXN0ZW0gdXNlZCBpbiBLTUwpLlxyXG4gICAqL1xyXG4gIHBvc2l0aW9uPzogZmhpci5Mb2NhdGlvblBvc2l0aW9ufHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBUaGlzIGNhbiBhbHNvIGJlIHVzZWQgYXMgdGhlIHBhcnQgb2YgdGhlIG9yZ2FuaXphdGlvbiBoaWVyYXJjaHkgd2hlcmUgdGhpcyBsb2NhdGlvbiBwcm92aWRlcyBzZXJ2aWNlcy4gVGhlc2Ugc2VydmljZXMgY2FuIGJlIGRlZmluZWQgdGhyb3VnaCB0aGUgSGVhbHRoY2FyZVNlcnZpY2UgcmVzb3VyY2UuXHJcbiAgICovXHJcbiAgbWFuYWdpbmdPcmdhbml6YXRpb24/OiBmaGlyLlJlZmVyZW5jZXx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogQW5vdGhlciBMb2NhdGlvbiB3aGljaCB0aGlzIExvY2F0aW9uIGlzIHBoeXNpY2FsbHkgcGFydCBvZi5cclxuICAgKi9cclxuICBwYXJ0T2Y/OiBmaGlyLlJlZmVyZW5jZXx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogVGVjaG5pY2FsIGVuZHBvaW50cyBwcm92aWRpbmcgYWNjZXNzIHRvIHNlcnZpY2VzIG9wZXJhdGVkIGZvciB0aGUgbG9jYXRpb24uXHJcbiAgICovXHJcbiAgZW5kcG9pbnQ/OiAoZmhpci5SZWZlcmVuY2V8bnVsbClbXXx1bmRlZmluZWQ7XHJcbn1cclxuIl19