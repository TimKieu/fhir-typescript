// <auto-generated/>
// Contents of: hl7.fhir.r3.core version: 3.0.2
// Minimum TypeScript Version: 3.7
// FHIR Resource: Subscription
export {};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3Vic2NyaXB0aW9uLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpckpzb24vU3Vic2NyaXB0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQiwrQ0FBK0M7QUFDL0Msa0NBQWtDO0FBQ2xDLDhCQUE4QiIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yMy5jb3JlIHZlcnNpb246IDMuMC4yXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBSZXNvdXJjZTogU3Vic2NyaXB0aW9uXHJcblxyXG5pbXBvcnQgKiBhcyBmaGlyIGZyb20gJy4uL2ZoaXJKc29uLmpzJztcclxuXHJcblxyXG4vKipcclxuICogRGV0YWlscyB3aGVyZSB0byBzZW5kIG5vdGlmaWNhdGlvbnMgd2hlbiByZXNvdXJjZXMgYXJlIHJlY2VpdmVkIHRoYXQgbWVldCB0aGUgY3JpdGVyaWEuXHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIFN1YnNjcmlwdGlvbkNoYW5uZWwgZXh0ZW5kcyBmaGlyLkJhY2tib25lRWxlbWVudCB7IFxyXG4gIC8qKlxyXG4gICAqIFRoZSB0eXBlIG9mIGNoYW5uZWwgdG8gc2VuZCBub3RpZmljYXRpb25zIG9uLlxyXG4gICAqL1xyXG4gIHR5cGU6ICdlbWFpbCd8J21lc3NhZ2UnfCdyZXN0LWhvb2snfCdzbXMnfCd3ZWJzb2NrZXQnfG51bGw7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IFN1YnNjcmlwdGlvbi5jaGFubmVsLnR5cGVcclxuICAgKi9cclxuICBfdHlwZT86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBGb3IgcmVzdC1ob29rLCBhbmQgd2Vic29ja2V0LCB0aGUgZW5kLXBvaW50IG11c3QgYmUgYW4gaHR0cDogb3IgaHR0cHM6IFVSTDsgZm9yIGVtYWlsLCBhIG1haWx0bzogdXJsLCBmb3Igc21zLCBhIHRlbDogdXJsLCBhbmQgZm9yIG1lc3NhZ2UgdGhlIGVuZHBvaW50IGNhbiBiZSBpbiBhbnkgZm9ybSBvZiB1cmwgdGhlIHNlcnZlciB1bmRlcnN0YW5kcyAodXN1YWxseSwgaHR0cDogb3IgbWxscDopLiBUaGUgVVJJIGlzIGFsbG93ZWQgdG8gYmUgcmVsYXRpdmU7IGluIHdoaWNoIGNhc2UsIGl0IGlzIHJlbGF0aXZlIHRvIHRoZSBzZXJ2ZXIgZW5kLXBvaW50IChzaW5jZSB0aGVpciBtYXkgYmUgbW9yZSB0aGFuIG9uZSwgY2xpZW50cyBzaG91bGQgYXZvaWQgdXNpbmcgcmVsYXRpdmUgVVJJcykuXHJcbiAgICovXHJcbiAgZW5kcG9pbnQ/OiBzdHJpbmd8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBTdWJzY3JpcHRpb24uY2hhbm5lbC5lbmRwb2ludFxyXG4gICAqL1xyXG4gIF9lbmRwb2ludD86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBTZW5kaW5nIHRoZSBwYXlsb2FkIGhhcyBvYnZpb3VzIHNlY3VyaXR5IGltcGxpY2F0aW9ucy4gVGhlIHNlcnZlciBpcyByZXNwb25zaWJsZSBmb3IgZW5zdXJpbmcgdGhhdCB0aGUgY29udGVudCBpcyBhcHByb3ByaWF0ZWx5IHNlY3VyZWQuXHJcbiAgICovXHJcbiAgcGF5bG9hZD86IHN0cmluZ3x1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IFN1YnNjcmlwdGlvbi5jaGFubmVsLnBheWxvYWRcclxuICAgKi9cclxuICBfcGF5bG9hZD86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBFeGFjdGx5IHdoYXQgdGhlc2UgbWVhbiBkZXBlbmQgb24gdGhlIGNoYW5uZWwgdHlwZS4gVGhleSBjYW4gY29udmV5IGFkZGl0aW9uYWwgaW5mb3JtYXRpb24gdG8gdGhlIHJlY2lwaWVudCBhbmQvb3IgbWVldCBzZWN1cml0eSByZXF1aXJlbWVudHM7IGZvciBleGFtcGxlLCBzdXBwb3J0IG9mIG11bHRpcGxlIGhlYWRlcnMgaW4gdGhlIG91dGdvaW5nIG5vdGlmaWNhdGlvbnMgZm9yIHJlc3QtaG9vayB0eXBlIHN1YnNjcmlwdGlvbnMuXHJcbiAgICovXHJcbiAgaGVhZGVyPzogKHN0cmluZ3xudWxsKVtdfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogU3Vic2NyaXB0aW9uLmNoYW5uZWwuaGVhZGVyXHJcbiAgICovXHJcbiAgX2hlYWRlcj86KGZoaXIuRmhpckVsZW1lbnR8bnVsbClbXTtcclxufVxyXG5cclxuLyoqXHJcbiAqIFRoZSBzdWJzY3JpcHRpb24gcmVzb3VyY2UgaXMgdXNlZCB0byBkZWZpbmUgYSBwdXNoIGJhc2VkIHN1YnNjcmlwdGlvbiBmcm9tIGEgc2VydmVyIHRvIGFub3RoZXIgc3lzdGVtLiBPbmNlIGEgc3Vic2NyaXB0aW9uIGlzIHJlZ2lzdGVyZWQgd2l0aCB0aGUgc2VydmVyLCB0aGUgc2VydmVyIGNoZWNrcyBldmVyeSByZXNvdXJjZSB0aGF0IGlzIGNyZWF0ZWQgb3IgdXBkYXRlZCwgYW5kIGlmIHRoZSByZXNvdXJjZSBtYXRjaGVzIHRoZSBnaXZlbiBjcml0ZXJpYSwgaXQgc2VuZHMgYSBtZXNzYWdlIG9uIHRoZSBkZWZpbmVkIFwiY2hhbm5lbFwiIHNvIHRoYXQgYW5vdGhlciBzeXN0ZW0gaXMgYWJsZSB0byB0YWtlIGFuIGFwcHJvcHJpYXRlIGFjdGlvbi5cclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgU3Vic2NyaXB0aW9uIGV4dGVuZHMgZmhpci5Eb21haW5SZXNvdXJjZSB7IFxyXG4gIC8qKlxyXG4gICAqIFJlc291cmNlIFR5cGUgTmFtZVxyXG4gICAqL1xyXG4gIHJlc291cmNlVHlwZTogXCJTdWJzY3JpcHRpb25cInxudWxsO1xyXG4gIC8qKlxyXG4gICAqIEEgY2xpZW50IGNhbiBvbmx5IHN1Ym1pdCBzdWJzY3JpcHRpb24gcmVzb3VyY2VzIGluIHRoZSByZXF1ZXN0ZWQgb3Igb2ZmIHN0YXRlLiBPbmx5IHRoZSBzZXJ2ZXIgY2FuICBtb3ZlIGEgc3Vic2NyaXB0aW9uIGZyb20gcmVxdWVzdGVkIHRvIGFjdGl2ZSwgYW5kIHRoZW4gdG8gZXJyb3IuIEVpdGhlciB0aGUgc2VydmVyIG9yIHRoZSBjbGllbnQgY2FuIHR1cm4gYSBzdWJzY3JpcHRpb24gb2ZmLlxyXG4gICAqIFRoaXMgZWxlbWVudCBpcyBsYWJlbGVkIGFzIGEgbW9kaWZpZXIgYmVjYXVzZSB0aGUgc3RhdHVzIGNvbnRhaW5zIGNvZGVzIHRoYXQgbWFyayB0aGUgcmVzb3VyY2UgYXMgbm90IGN1cnJlbnRseSB2YWxpZC5cclxuICAgKi9cclxuICBzdGF0dXM6ICdhY3RpdmUnfCdlcnJvcid8J29mZid8J3JlcXVlc3RlZCd8bnVsbDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogU3Vic2NyaXB0aW9uLnN0YXR1c1xyXG4gICAqL1xyXG4gIF9zdGF0dXM/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbiAgLyoqXHJcbiAgICogQ29udGFjdCBkZXRhaWxzIGZvciBhIGh1bWFuIHRvIGNvbnRhY3QgYWJvdXQgdGhlIHN1YnNjcmlwdGlvbi4gVGhlIHByaW1hcnkgdXNlIG9mIHRoaXMgZm9yIHN5c3RlbSBhZG1pbmlzdHJhdG9yIHRyb3VibGVzaG9vdGluZy5cclxuICAgKi9cclxuICBjb250YWN0PzogKGZoaXIuQ29udGFjdFBvaW50fG51bGwpW118dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIFRoZSBzZXJ2ZXIgaXMgcGVybWl0dGVkIHRvIGRldmlhdGUgZnJvbSB0aGlzIHRpbWUsIGJ1dCBzaG91bGQgb2JzZXJ2ZSBpdC5cclxuICAgKi9cclxuICBlbmQ/OiBzdHJpbmd8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBTdWJzY3JpcHRpb24uZW5kXHJcbiAgICovXHJcbiAgX2VuZD86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBBIGRlc2NyaXB0aW9uIG9mIHdoeSB0aGlzIHN1YnNjcmlwdGlvbiBpcyBkZWZpbmVkLlxyXG4gICAqL1xyXG4gIHJlYXNvbjogc3RyaW5nfG51bGw7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IFN1YnNjcmlwdGlvbi5yZWFzb25cclxuICAgKi9cclxuICBfcmVhc29uPzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIFRoZSBydWxlcyBhcmUgYSBzZWFyY2ggY3JpdGVyaWEgKHdpdGhvdXQgdGhlIFtiYXNlXSBwYXJ0KS4gTGlrZSBCdW5kbGUuZW50cnkucmVxdWVzdC51cmwsIGl0IGhhcyBubyBsZWFkaW5nIFwiL1wiLlxyXG4gICAqL1xyXG4gIGNyaXRlcmlhOiBzdHJpbmd8bnVsbDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogU3Vic2NyaXB0aW9uLmNyaXRlcmlhXHJcbiAgICovXHJcbiAgX2NyaXRlcmlhPzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIEEgcmVjb3JkIG9mIHRoZSBsYXN0IGVycm9yIHRoYXQgb2NjdXJyZWQgd2hlbiB0aGUgc2VydmVyIHByb2Nlc3NlZCBhIG5vdGlmaWNhdGlvbi5cclxuICAgKi9cclxuICBlcnJvcj86IHN0cmluZ3x1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IFN1YnNjcmlwdGlvbi5lcnJvclxyXG4gICAqL1xyXG4gIF9lcnJvcj86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBEZXRhaWxzIHdoZXJlIHRvIHNlbmQgbm90aWZpY2F0aW9ucyB3aGVuIHJlc291cmNlcyBhcmUgcmVjZWl2ZWQgdGhhdCBtZWV0IHRoZSBjcml0ZXJpYS5cclxuICAgKi9cclxuICBjaGFubmVsOiBmaGlyLlN1YnNjcmlwdGlvbkNoYW5uZWx8bnVsbDtcclxuICAvKipcclxuICAgKiBTbyB0aGF0IG90aGVyIHN5c3RlbXMgY2FuIHRlbGwgd2hpY2ggcmVzb3VyY2VzIGhhdmUgYmVlbiB0aGUgc3ViamVjdCBvZiBhIG5vdGlmaWNhdGlvbi5cclxuICAgKi9cclxuICB0YWc/OiAoZmhpci5Db2Rpbmd8bnVsbClbXXx1bmRlZmluZWQ7XHJcbn1cclxuIl19