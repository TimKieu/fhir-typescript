// <auto-generated/>
// Contents of: hl7.fhir.r3.core version: 3.0.2
// Minimum TypeScript Version: 3.7
// FHIR Resource: OperationOutcome
export {};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiT3BlcmF0aW9uT3V0Y29tZS5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJKc29uL09wZXJhdGlvbk91dGNvbWUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLCtDQUErQztBQUMvQyxrQ0FBa0M7QUFDbEMsa0NBQWtDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnIzLmNvcmUgdmVyc2lvbjogMy4wLjJcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFJlc291cmNlOiBPcGVyYXRpb25PdXRjb21lXHJcblxyXG5pbXBvcnQgKiBhcyBmaGlyIGZyb20gJy4uL2ZoaXJKc29uLmpzJztcclxuXHJcblxyXG4vKipcclxuICogQW4gZXJyb3IsIHdhcm5pbmcgb3IgaW5mb3JtYXRpb24gbWVzc2FnZSB0aGF0IHJlc3VsdHMgZnJvbSBhIHN5c3RlbSBhY3Rpb24uXHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIE9wZXJhdGlvbk91dGNvbWVJc3N1ZSBleHRlbmRzIGZoaXIuQmFja2JvbmVFbGVtZW50IHsgXHJcbiAgLyoqXHJcbiAgICogVGhpcyBpcyBsYWJlbGVkIGFzIFwiSXMgTW9kaWZpZXJcIiBiZWNhdXNlIGFwcGxpY2F0aW9ucyBzaG91bGQgbm90IGNvbmZ1c2UgaGludHMgYW5kIHdhcm5pbmdzIHdpdGggZXJyb3JzLlxyXG4gICAqL1xyXG4gIHNldmVyaXR5OiAnZXJyb3InfCdmYXRhbCd8J2luZm9ybWF0aW9uJ3wnd2FybmluZyd8bnVsbDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogT3BlcmF0aW9uT3V0Y29tZS5pc3N1ZS5zZXZlcml0eVxyXG4gICAqL1xyXG4gIF9zZXZlcml0eT86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBEZXNjcmliZXMgdGhlIHR5cGUgb2YgdGhlIGlzc3VlLiBUaGUgc3lzdGVtIHRoYXQgY3JlYXRlcyBhbiBPcGVyYXRpb25PdXRjb21lIFNIQUxMIGNob29zZSB0aGUgbW9zdCBhcHBsaWNhYmxlIGNvZGUgZnJvbSB0aGUgSXNzdWVUeXBlIHZhbHVlIHNldCwgYW5kIG1heSBhZGRpdGlvbmFsIHByb3ZpZGUgaXRzIG93biBjb2RlIGZvciB0aGUgZXJyb3IgaW4gdGhlIGRldGFpbHMgZWxlbWVudC5cclxuICAgKi9cclxuICBjb2RlOiAnYnVzaW5lc3MtcnVsZSd8J2NvZGUtaW52YWxpZCd8J2NvbmZsaWN0J3wnZHVwbGljYXRlJ3wnZXhjZXB0aW9uJ3wnZXhwaXJlZCd8J2V4dGVuc2lvbid8J2ZvcmJpZGRlbid8J2luY29tcGxldGUnfCdpbmZvcm1hdGlvbmFsJ3wnaW52YWxpZCd8J2ludmFyaWFudCd8J2xvY2stZXJyb3InfCdsb2dpbid8J25vLXN0b3JlJ3wnbm90LWZvdW5kJ3wnbm90LXN1cHBvcnRlZCd8J3Byb2Nlc3NpbmcnfCdyZXF1aXJlZCd8J3NlY3VyaXR5J3wnc3RydWN0dXJlJ3wnc3VwcHJlc3NlZCd8J3Rocm90dGxlZCd8J3RpbWVvdXQnfCd0b28tY29zdGx5J3wndG9vLWxvbmcnfCd0cmFuc2llbnQnfCd1bmtub3duJ3wndmFsdWUnfG51bGw7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IE9wZXJhdGlvbk91dGNvbWUuaXNzdWUuY29kZVxyXG4gICAqL1xyXG4gIF9jb2RlPzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIEEgaHVtYW4gcmVhZGFibGUgZGVzY3JpcHRpb24gb2YgdGhlIGVycm9yIGlzc3VlIFNIT1VMRCBiZSBwbGFjZWQgaW4gZGV0YWlscy50ZXh0LlxyXG4gICAqL1xyXG4gIGRldGFpbHM/OiBmaGlyLkNvZGVhYmxlQ29uY2VwdHx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogVHlwaWNhbGx5IHRoaXMgZmllbGQgaXMgdXNlZCB0byBwcm92aWRlIHRyb3VibGVzaG9vdGluZyBpbmZvcm1hdGlvbiBhYm91dCB0aGUgZXJyb3IuXHJcbiAgICovXHJcbiAgZGlhZ25vc3RpY3M/OiBzdHJpbmd8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBPcGVyYXRpb25PdXRjb21lLmlzc3VlLmRpYWdub3N0aWNzXHJcbiAgICovXHJcbiAgX2RpYWdub3N0aWNzPzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIFRoZSByb290IG9mIHRoZSBYUGF0aCBpcyB0aGUgcmVzb3VyY2Ugb3IgYnVuZGxlIHRoYXQgZ2VuZXJhdGVkIE9wZXJhdGlvbk91dGNvbWUuICBFYWNoIFhQYXRoIFNIQUxMIHJlc29sdmUgdG8gYSBzaW5nbGUgbm9kZS4gIFRoZSBYUGF0aCBzeW50YXggaXMgdXNlZCB3aGV0aGVyIHRoZSByZWZlcmVuY2VkIGluc3RhbmNlIGlzIGV4cHJlc3NlZCBpbiBYTUwgb3IgSlNPTi4gTm90ZSB0aGF0IGV4cHJlc3Npb24gaXMgYmVpbmcgdHJpYWxlZCBhcyBhbiBhbHRlcm5hdGl2ZSB0byBYUGF0aC5cclxuICAgKi9cclxuICBsb2NhdGlvbj86IChzdHJpbmd8bnVsbClbXXx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IE9wZXJhdGlvbk91dGNvbWUuaXNzdWUubG9jYXRpb25cclxuICAgKi9cclxuICBfbG9jYXRpb24/OihmaGlyLkZoaXJFbGVtZW50fG51bGwpW107XHJcbiAgLyoqXHJcbiAgICogVGhlIHJvb3Qgb2YgdGhlIEZISVJQYXRoIGlzIHRoZSByZXNvdXJjZSBvciBidW5kbGUgdGhhdCBnZW5lcmF0ZWQgT3BlcmF0aW9uT3V0Y29tZS4gIEVhY2ggRkhJUlBhdGggU0hBTEwgcmVzb2x2ZSB0byBhIHNpbmdsZSBub2RlLlxyXG4gICAqL1xyXG4gIGV4cHJlc3Npb24/OiAoc3RyaW5nfG51bGwpW118dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBPcGVyYXRpb25PdXRjb21lLmlzc3VlLmV4cHJlc3Npb25cclxuICAgKi9cclxuICBfZXhwcmVzc2lvbj86KGZoaXIuRmhpckVsZW1lbnR8bnVsbClbXTtcclxufVxyXG5cclxuLyoqXHJcbiAqIEEgY29sbGVjdGlvbiBvZiBlcnJvciwgd2FybmluZyBvciBpbmZvcm1hdGlvbiBtZXNzYWdlcyB0aGF0IHJlc3VsdCBmcm9tIGEgc3lzdGVtIGFjdGlvbi5cclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgT3BlcmF0aW9uT3V0Y29tZSBleHRlbmRzIGZoaXIuRG9tYWluUmVzb3VyY2UgeyBcclxuICAvKipcclxuICAgKiBSZXNvdXJjZSBUeXBlIE5hbWVcclxuICAgKi9cclxuICByZXNvdXJjZVR5cGU6IFwiT3BlcmF0aW9uT3V0Y29tZVwifG51bGw7XHJcbiAgLyoqXHJcbiAgICogQW4gZXJyb3IsIHdhcm5pbmcgb3IgaW5mb3JtYXRpb24gbWVzc2FnZSB0aGF0IHJlc3VsdHMgZnJvbSBhIHN5c3RlbSBhY3Rpb24uXHJcbiAgICovXHJcbiAgaXNzdWU6IChmaGlyLk9wZXJhdGlvbk91dGNvbWVJc3N1ZXxudWxsKVtdfG51bGw7XHJcbn1cclxuIl19