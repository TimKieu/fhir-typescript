// <auto-generated/>
// Contents of: hl7.fhir.r3.core version: 3.0.2
// Minimum TypeScript Version: 3.7
// FHIR Resource: EnrollmentRequest

import * as fhir from '../fhir.js';

// @ts-ignore
import { FmStatusCodes,  FmStatusCodeType } from '../fhirValueSets/FmStatusCodes.js';
// @ts-ignore
import { FmStatusVsValidation } from '../fhirValueSets/FmStatusVsValidation.js';
/**
 * Valid arguments for the EnrollmentRequest type.
 */
export interface EnrollmentRequestArgs extends fhir.DomainResourceArgs {
  /**
   * Resource Type Name
   */
  resourceType: "EnrollmentRequest"|undefined;
  /**
   * The Response business identifier.
   */
  identifier?: fhir.IdentifierArgs[]|undefined;
  /**
   * This element is labeled as a modifier because the status contains codes that mark the request as not currently valid.
   */
  status?: fhir.FhirCode<FmStatusCodeType>|string|undefined;
  /**
   * Extended properties for primitive element: EnrollmentRequest.status
   */
  _status?:fhir.FhirElementArgs;
  /**
   * The date when this resource was created.
   */
  created?: fhir.FhirDateTime|string|undefined;
  /**
   * Extended properties for primitive element: EnrollmentRequest.created
   */
  _created?:fhir.FhirElementArgs;
  /**
   * The Insurer who is target  of the request.
   */
  insurer?: fhir.ReferenceArgs|undefined;
  /**
   * The practitioner who is responsible for the services rendered to the patient.
   */
  provider?: fhir.ReferenceArgs|undefined;
  /**
   * The organization which is responsible for the services rendered to the patient.
   */
  organization?: fhir.ReferenceArgs|undefined;
  /**
   * Patient Resource.
   */
  subject?: fhir.ReferenceArgs|undefined;
  /**
   * Reference to the program or plan identification, underwriter or payor.
   */
  coverage?: fhir.ReferenceArgs|undefined;
}

/**
 * This resource provides the insurance enrollment details to the insurer regarding a specified coverage.
 */
export class EnrollmentRequest extends fhir.DomainResource {
  /**
   * Mapping of this datatype to a FHIR equivalent
   */
  public static override readonly _fts_dataType:string = 'EnrollmentRequest';
  /**
   * Resource Type Name
   */
  public override resourceType: "EnrollmentRequest";
  /**
   * The Response business identifier.
   */
  public identifier: fhir.Identifier[];
  /**
   * This element is labeled as a modifier because the status contains codes that mark the request as not currently valid.
   */
  public status?: fhir.FhirCode<FmStatusCodeType>|undefined;
  /**
   * The date when this resource was created.
   */
  public created?: fhir.FhirDateTime|undefined;
  /**
   * The Insurer who is target  of the request.
   */
  public insurer?: fhir.Reference|undefined;
  /**
   * The practitioner who is responsible for the services rendered to the patient.
   */
  public provider?: fhir.Reference|undefined;
  /**
   * The organization which is responsible for the services rendered to the patient.
   */
  public organization?: fhir.Reference|undefined;
  /**
   * Patient Resource.
   */
  public subject?: fhir.Reference|undefined;
  /**
   * Reference to the program or plan identification, underwriter or payor.
   */
  public coverage?: fhir.Reference|undefined;
  /**
   * Default constructor for EnrollmentRequest - initializes any required elements to null if a value is not provided.
   */
  constructor(source:Partial<EnrollmentRequestArgs> = {}, options:fhir.FhirConstructorOptions = {}) {
    super(source, options);
    this.resourceType = 'EnrollmentRequest';
    if (source['identifier']) { this.identifier = source.identifier.map((x) => new fhir.Identifier(x)); }
    else { this.identifier = []; }
    if (source['status']) { this.status = new fhir.FhirCode<FmStatusCodeType>({value: source.status}); }
    if (source['_status']) {
      if (this.status) { this.status.addExtendedProperties(source._status!); }
      else { this.status = new fhir.FhirCode<FmStatusCodeType>(source._status as Partial<fhir.FhirCode>); }
    }
    if (source['created']) { this.created = new fhir.FhirDateTime({value: source.created}); }
    if (source['_created']) {
      if (this.created) { this.created.addExtendedProperties(source._created!); }
      else { this.created = new fhir.FhirDateTime(source._created as Partial<fhir.FhirDateTimeArgs>); }
    }
    if (source['insurer']) { this.insurer = new fhir.Reference(source.insurer); }
    if (source['provider']) { this.provider = new fhir.Reference(source.provider); }
    if (source['organization']) { this.organization = new fhir.Reference(source.organization); }
    if (source['subject']) { this.subject = new fhir.Reference(source.subject); }
    if (source['coverage']) { this.coverage = new fhir.Reference(source.coverage); }
  }
  /**
   * Function to perform basic model validation (e.g., check if required elements are present).
   */
  public override doModelValidation(exp:string = ''):fhir.FtsIssue[] {
    let iss:fhir.FtsIssue[] = super.doModelValidation(exp);
    if (exp === '') { exp = 'EnrollmentRequest' }
    iss.push(...this.vRPS('resourceType',exp));
    iss.push(...this.vOA('identifier',exp));
    iss.push(...this.vOSV('status',exp,'FmStatus',FmStatusVsValidation,'r'));
    iss.push(...this.vOS('created',exp));
    iss.push(...this.vOS('insurer',exp));
    iss.push(...this.vOS('provider',exp));
    iss.push(...this.vOS('organization',exp));
    iss.push(...this.vOS('subject',exp));
    iss.push(...this.vOS('coverage',exp));
    return iss;
  }
}
