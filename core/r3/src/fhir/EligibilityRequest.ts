// <auto-generated/>
// Contents of: hl7.fhir.r3.core version: 3.0.2
// Minimum TypeScript Version: 3.7
// FHIR Resource: EligibilityRequest

import * as fhir from '../fhir.js';

// @ts-ignore
import { FmStatusCodes,  FmStatusCodeType } from '../fhirValueSets/FmStatusCodes.js';
// @ts-ignore
import { FmStatusVsValidation } from '../fhirValueSets/FmStatusVsValidation.js';
// @ts-ignore
import { ProcessPriorityCodes,  ProcessPriorityCodeType } from '../fhirValueSets/ProcessPriorityCodes.js';
// @ts-ignore
import { ProcessPriorityVsValidation } from '../fhirValueSets/ProcessPriorityVsValidation.js';
// @ts-ignore
import { BenefitCategoryCodes,  BenefitCategoryCodeType } from '../fhirValueSets/BenefitCategoryCodes.js';
// @ts-ignore
import { BenefitCategoryVsValidation } from '../fhirValueSets/BenefitCategoryVsValidation.js';
// @ts-ignore
import { BenefitSubcategoryCodes,  BenefitSubcategoryCodeType } from '../fhirValueSets/BenefitSubcategoryCodes.js';
// @ts-ignore
import { BenefitSubcategoryVsValidation } from '../fhirValueSets/BenefitSubcategoryVsValidation.js';
/**
 * Valid arguments for the EligibilityRequest type.
 */
export interface EligibilityRequestArgs extends fhir.DomainResourceArgs {
  /**
   * Resource Type Name
   */
  resourceType: "EligibilityRequest"|undefined;
  /**
   * The Response business identifier.
   */
  identifier?: fhir.IdentifierArgs[]|undefined;
  /**
   * The status of the resource instance.
   */
  status?: fhir.FhirCode<FmStatusCodeType>|string|undefined;
  /**
   * Extended properties for primitive element: EligibilityRequest.status
   */
  _status?:fhir.FhirElementArgs;
  /**
   * Immediate (STAT), best effort (NORMAL), deferred (DEFER).
   */
  priority?: fhir.CodeableConceptArgs|undefined;
  /**
   * 1..1.
   */
  patient?: fhir.ReferenceArgs|undefined;
  /**
   * The date or dates when the enclosed suite of services were performed or completed.
   */
  serviced?: fhir.FhirDate|fhir.Period|undefined;
  /**
   * The date or dates when the enclosed suite of services were performed or completed.
   */
  servicedDate?: fhir.FhirDate|string|undefined;
  /**
   * The date or dates when the enclosed suite of services were performed or completed.
   */
  servicedPeriod?: fhir.PeriodArgs|undefined;
  /**
   * The date when this resource was created.
   */
  created?: fhir.FhirDateTime|string|undefined;
  /**
   * Extended properties for primitive element: EligibilityRequest.created
   */
  _created?:fhir.FhirElementArgs;
  /**
   * Person who created the invoice/claim/pre-determination or pre-authorization.
   */
  enterer?: fhir.ReferenceArgs|undefined;
  /**
   * The practitioner who is responsible for the services rendered to the patient.
   */
  provider?: fhir.ReferenceArgs|undefined;
  /**
   * The organization which is responsible for the services rendered to the patient.
   */
  organization?: fhir.ReferenceArgs|undefined;
  /**
   * The Insurer who is target  of the request.
   */
  insurer?: fhir.ReferenceArgs|undefined;
  /**
   * Facility where the services were provided.
   */
  facility?: fhir.ReferenceArgs|undefined;
  /**
   * 1..1.
   */
  coverage?: fhir.ReferenceArgs|undefined;
  /**
   * The contract number of a business agreement which describes the terms and conditions.
   */
  businessArrangement?: fhir.FhirString|string|undefined;
  /**
   * Extended properties for primitive element: EligibilityRequest.businessArrangement
   */
  _businessArrangement?:fhir.FhirElementArgs;
  /**
   * Dental, Vision, Medical, Pharmacy, Rehab etc.
   */
  benefitCategory?: fhir.CodeableConceptArgs|undefined;
  /**
   * Dental: basic, major, ortho; Vision exam, glasses, contacts; etc.
   */
  benefitSubCategory?: fhir.CodeableConceptArgs|undefined;
}

/**
 * The EligibilityRequest provides patient and insurance coverage information to an insurer for them to respond, in the form of an EligibilityResponse, with information regarding whether the stated coverage is valid and in-force and optionally to provide the insurance details of the policy.
 */
export class EligibilityRequest extends fhir.DomainResource {
  /**
   * Mapping of this datatype to a FHIR equivalent
   */
  public static override readonly _fts_dataType:string = 'EligibilityRequest';
  /**
   * Resource Type Name
   */
  public override resourceType: "EligibilityRequest";
  /**
   * The Response business identifier.
   */
  public identifier: fhir.Identifier[];
  /**
   * The status of the resource instance.
   */
  public status?: fhir.FhirCode<FmStatusCodeType>|undefined;
  /**
   * Immediate (STAT), best effort (NORMAL), deferred (DEFER).
   */
  public priority?: fhir.CodeableConcept|undefined;
  /**
   * 1..1.
   */
  public patient?: fhir.Reference|undefined;
  /**
   * The date or dates when the enclosed suite of services were performed or completed.
   */
  public serviced?: (fhir.FhirDate|fhir.Period)|undefined;
  /**
   * Internal flag to properly serialize choice-type element EligibilityRequest.serviced[x]
   */
  protected static readonly _fts_servicedIsChoice:true = true;
  /**
   * The date when this resource was created.
   */
  public created?: fhir.FhirDateTime|undefined;
  /**
   * Person who created the invoice/claim/pre-determination or pre-authorization.
   */
  public enterer?: fhir.Reference|undefined;
  /**
   * The practitioner who is responsible for the services rendered to the patient.
   */
  public provider?: fhir.Reference|undefined;
  /**
   * The organization which is responsible for the services rendered to the patient.
   */
  public organization?: fhir.Reference|undefined;
  /**
   * The Insurer who is target  of the request.
   */
  public insurer?: fhir.Reference|undefined;
  /**
   * Facility where the services were provided.
   */
  public facility?: fhir.Reference|undefined;
  /**
   * 1..1.
   */
  public coverage?: fhir.Reference|undefined;
  /**
   * The contract number of a business agreement which describes the terms and conditions.
   */
  public businessArrangement?: fhir.FhirString|undefined;
  /**
   * Dental, Vision, Medical, Pharmacy, Rehab etc.
   */
  public benefitCategory?: fhir.CodeableConcept|undefined;
  /**
   * Dental: basic, major, ortho; Vision exam, glasses, contacts; etc.
   */
  public benefitSubCategory?: fhir.CodeableConcept|undefined;
  /**
   * Default constructor for EligibilityRequest - initializes any required elements to null if a value is not provided.
   */
  constructor(source:Partial<EligibilityRequestArgs> = {}, options:fhir.FhirConstructorOptions = {}) {
    super(source, options);
    this.resourceType = 'EligibilityRequest';
    if (source['identifier']) { this.identifier = source.identifier.map((x) => new fhir.Identifier(x)); }
    else { this.identifier = []; }
    if (source['status']) { this.status = new fhir.FhirCode<FmStatusCodeType>({value: source.status}); }
    if (source['_status']) {
      if (this.status) { this.status.addExtendedProperties(source._status!); }
      else { this.status = new fhir.FhirCode<FmStatusCodeType>(source._status as Partial<fhir.FhirCode>); }
    }
    if (source['priority']) { this.priority = new fhir.CodeableConcept(source.priority); }
    if (source['patient']) { this.patient = new fhir.Reference(source.patient); }
    if (source['serviced']) { this.serviced = source.serviced; }
    else if (source['servicedDate']) { this.serviced = new fhir.FhirDate({value: source.servicedDate}); }
    else if (source['servicedPeriod']) { this.serviced = new fhir.Period(source.servicedPeriod); }
    if (source['created']) { this.created = new fhir.FhirDateTime({value: source.created}); }
    if (source['_created']) {
      if (this.created) { this.created.addExtendedProperties(source._created!); }
      else { this.created = new fhir.FhirDateTime(source._created as Partial<fhir.FhirDateTimeArgs>); }
    }
    if (source['enterer']) { this.enterer = new fhir.Reference(source.enterer); }
    if (source['provider']) { this.provider = new fhir.Reference(source.provider); }
    if (source['organization']) { this.organization = new fhir.Reference(source.organization); }
    if (source['insurer']) { this.insurer = new fhir.Reference(source.insurer); }
    if (source['facility']) { this.facility = new fhir.Reference(source.facility); }
    if (source['coverage']) { this.coverage = new fhir.Reference(source.coverage); }
    if (source['businessArrangement']) { this.businessArrangement = new fhir.FhirString({value: source.businessArrangement}); }
    if (source['_businessArrangement']) {
      if (this.businessArrangement) { this.businessArrangement.addExtendedProperties(source._businessArrangement!); }
      else { this.businessArrangement = new fhir.FhirString(source._businessArrangement as Partial<fhir.FhirStringArgs>); }
    }
    if (source['benefitCategory']) { this.benefitCategory = new fhir.CodeableConcept(source.benefitCategory); }
    if (source['benefitSubCategory']) { this.benefitSubCategory = new fhir.CodeableConcept(source.benefitSubCategory); }
  }
  /**
   * Function to perform basic model validation (e.g., check if required elements are present).
   */
  public override doModelValidation(exp:string = ''):fhir.FtsIssue[] {
    let issues:fhir.FtsIssue[] = super.doModelValidation(exp);
    if (exp === '') { exp = 'EligibilityRequest' }
    this.vRS('resourceType',exp)
    this.vOA('identifier',exp)
    this.vOSV('status',exp,'FmStatus',FmStatusVsValidation,'r')
    this.vOS('priority',exp)
    this.vOS('patient',exp)
    this.vOS('serviced',exp)
    this.vOS('created',exp)
    this.vOS('enterer',exp)
    this.vOS('provider',exp)
    this.vOS('organization',exp)
    this.vOS('insurer',exp)
    this.vOS('facility',exp)
    this.vOS('coverage',exp)
    this.vOS('businessArrangement',exp)
    this.vOS('benefitCategory',exp)
    this.vOS('benefitSubCategory',exp)
    return issues;
  }
}
