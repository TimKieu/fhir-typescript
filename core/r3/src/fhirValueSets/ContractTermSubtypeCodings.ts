// <auto-generated/>
// Contents of: hl7.fhir.r3.core version: 3.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/contract-term-subtype|3.0.2

import { CodingArgs } from '../fhir/Coding.js'

/**
 * This value set includes sample Contract Term SubType codes.
 */
export type ContractTermSubtypeCodingType = {
  /**
   * condition: Terms that go to the very root of a contract.
   */
  Condition: CodingArgs;
  /**
   * innominate: Breach of which may or may not go to the root of the contract depending upon the nature of the breach
   */
  Innominate: CodingArgs;
  /**
   * warranty: Less imperative than a condition, so the contract will survive a breach
   */
  Warranty: CodingArgs;
}

/**
 * This value set includes sample Contract Term SubType codes.
 */
export const ContractTermSubtypeCodings:ContractTermSubtypeCodingType = {
  /**
   * condition: Terms that go to the very root of a contract.
   */
  Condition: {
    display: "Condition",
    code: "condition",
    system: "http://hl7.org/fhir/contracttermsubtypecodes",
  },
  /**
   * innominate: Breach of which may or may not go to the root of the contract depending upon the nature of the breach
   */
  Innominate: {
    display: "Innominate",
    code: "innominate",
    system: "http://hl7.org/fhir/contracttermsubtypecodes",
  },
  /**
   * warranty: Less imperative than a condition, so the contract will survive a breach
   */
  Warranty: {
    display: "Warranty",
    code: "warranty",
    system: "http://hl7.org/fhir/contracttermsubtypecodes",
  },
} as const;
