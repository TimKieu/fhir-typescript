// <auto-generated/>
// Contents of: hl7.fhir.r3.core version: 3.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/unknown-content-code|3.0.2

import { CodingArgs } from '../fhir/Coding.js'

/**
 * A code that indicates whether an application accepts unknown elements or extensions when reading resources.
 */
export type UnknownContentCodingType = {
  /**
   * both: The application accepts unknown elements and extensions.
   */
  UnknownElementsAndExtensions: CodingArgs;
  /**
   * elements: The application accepts unknown elements, but not unknown extensions.
   */
  UnknownElements: CodingArgs;
  /**
   * extensions: The application accepts unknown extensions, but not unknown elements.
   */
  UnknownExtensions: CodingArgs;
  /**
   * no: The application does not accept either unknown elements or extensions.
   */
  NeitherElementsOrExtensions: CodingArgs;
}

/**
 * A code that indicates whether an application accepts unknown elements or extensions when reading resources.
 */
export const UnknownContentCodings:UnknownContentCodingType = {
  /**
   * both: The application accepts unknown elements and extensions.
   */
  UnknownElementsAndExtensions: {
    display: "Unknown Elements and Extensions",
    code: "both",
    system: "http://hl7.org/fhir/unknown-content-code",
  },
  /**
   * elements: The application accepts unknown elements, but not unknown extensions.
   */
  UnknownElements: {
    display: "Unknown Elements",
    code: "elements",
    system: "http://hl7.org/fhir/unknown-content-code",
  },
  /**
   * extensions: The application accepts unknown extensions, but not unknown elements.
   */
  UnknownExtensions: {
    display: "Unknown Extensions",
    code: "extensions",
    system: "http://hl7.org/fhir/unknown-content-code",
  },
  /**
   * no: The application does not accept either unknown elements or extensions.
   */
  NeitherElementsOrExtensions: {
    display: "Neither Elements or Extensions",
    code: "no",
    system: "http://hl7.org/fhir/unknown-content-code",
  },
} as const;
