// <auto-generated/>
// Contents of: hl7.fhir.r3.core version: 3.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/observation-valueabsentreason|3.0.2

/**
 * This value set defines the set of codes for identifying the reason why the expected result in Observation.value[x] is missing.
 */
export const ObservationValueabsentreasonCodes = {
  /**
   * asked: The source human does not know the value.
   */
  Asked: "asked",
  /**
   * astext: The content of the data is represented in the resource narrative.
   */
  AsText: "astext",
  /**
   * error: Some system or workflow process error means that the information is not available.
   */
  Error: "error",
  /**
   * masked: The information is not available due to security, privacy or related reasons.
   */
  Masked: "masked",
  /**
   * NaN: NaN, standing for not a number, is a numeric data type value representing an undefined or unrepresentable value.
   */
  NotANumber: "NaN",
  /**
   * not-asked: The workflow didn't lead to this value being known.
   */
  NotAsked: "not-asked",
  /**
   * not-performed: The value is not available because the observation procedure (test, etc.) was not performed.
   */
  NotPerformed: "not-performed",
  /**
   * temp: There is reason to expect (from the workflow) that the value may become known.
   */
  Temp: "temp",
  /**
   * unknown: The value is not known.
   */
  Unknown: "unknown",
  /**
   * unsupported: The source system wasn't capable of supporting this element.
   */
  Unsupported: "unsupported",
} as const;

/**
 * This value set defines the set of codes for identifying the reason why the expected result in Observation.value[x] is missing.
 */
export type ObservationValueabsentreasonCodeType = typeof ObservationValueabsentreasonCodes[keyof typeof ObservationValueabsentreasonCodes];
