// <auto-generated/>
// Contents of: hl7.fhir.r3.core version: 3.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/filter-operator|3.0.2

/**
 * The kind of operation to perform as a part of a property based filter.
 */
export const FilterOperatorCodes = {
  /**
   * =: The specified property of the code equals the provided value.
   */
  Equals: "=",
  /**
   * descendent-of: Includes all concept ids that have a transitive is-a relationship with the concept Id provided as the value, excluding the provided concept itself (i.e. include child codes)
   */
  DescendentOfBySubsumption: "descendent-of",
  /**
   * exists: The specified property of the code has at least one value (if the specified value is true; if the specified value is false, then matches when the specified property of the code has no values)
   */
  Exists: "exists",
  /**
   * generalizes: Includes all concept ids that have a transitive is-a relationship from the concept Id provided as the value, including the provided concept itself (e.g. include parent codes)
   */
  GeneralizesBySubsumption: "generalizes",
  /**
   * in: The specified property of the code is in the set of codes or concepts specified in the provided value (comma separated list).
   */
  InSet: "in",
  /**
   * is-a: Includes all concept ids that have a transitive is-a relationship with the concept Id provided as the value, including the provided concept itself (i.e. include child codes)
   */
  IsABySubsumption: "is-a",
  /**
   * is-not-a: The specified property of the code does not have an is-a relationship with the provided value.
   */
  NotIsABySubsumption: "is-not-a",
  /**
   * not-in: The specified property of the code is not in the set of codes or concepts specified in the provided value (comma separated list).
   */
  NotInSet: "not-in",
  /**
   * regex: The specified property of the code  matches the regex specified in the provided value.
   */
  RegularExpression: "regex",
} as const;

/**
 * The kind of operation to perform as a part of a property based filter.
 */
export type FilterOperatorCodeType = typeof FilterOperatorCodes[keyof typeof FilterOperatorCodes];
