// <auto-generated/>
// Contents of: hl7.fhir.r3.core version: 3.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/metric-calibration-state|3.0.2

import { CodingArgs } from '../fhir/Coding.js'

/**
 * Describes the state of a metric calibration.
 */
export type MetricCalibrationStateCodingType = {
  /**
   * calibrated: The metric has been calibrated.
   */
  Calibrated: CodingArgs;
  /**
   * calibration-required: The metric needs to be calibrated.
   */
  CalibrationRequired: CodingArgs;
  /**
   * not-calibrated: The metric has not been calibrated.
   */
  NotCalibrated: CodingArgs;
  /**
   * unspecified: The state of calibration of this metric is unspecified.
   */
  Unspecified: CodingArgs;
}

/**
 * Describes the state of a metric calibration.
 */
export const MetricCalibrationStateCodings:MetricCalibrationStateCodingType = {
  /**
   * calibrated: The metric has been calibrated.
   */
  Calibrated: {
    display: "Calibrated",
    code: "calibrated",
    system: "http://hl7.org/fhir/metric-calibration-state",
  },
  /**
   * calibration-required: The metric needs to be calibrated.
   */
  CalibrationRequired: {
    display: "Calibration Required",
    code: "calibration-required",
    system: "http://hl7.org/fhir/metric-calibration-state",
  },
  /**
   * not-calibrated: The metric has not been calibrated.
   */
  NotCalibrated: {
    display: "Not Calibrated",
    code: "not-calibrated",
    system: "http://hl7.org/fhir/metric-calibration-state",
  },
  /**
   * unspecified: The state of calibration of this metric is unspecified.
   */
  Unspecified: {
    display: "Unspecified",
    code: "unspecified",
    system: "http://hl7.org/fhir/metric-calibration-state",
  },
} as const;
