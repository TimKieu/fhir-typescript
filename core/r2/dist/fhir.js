// <auto-generated/>
// Contents of: hl7.fhir.r2.core version: 1.0.2
// Minimum TypeScript Version: 3.7
import { FhirBase } from './fhir/FhirBase.js';
import { FhirPrimitive } from './fhir/FhirPrimitive.js';
import { FhirBase64Binary } from './fhir/FhirBase64Binary.js';
import { FhirBoolean } from './fhir/FhirBoolean.js';
import { FhirCode } from './fhir/FhirCode.js';
import { FhirDate } from './fhir/FhirDate.js';
import { FhirDateTime } from './fhir/FhirDateTime.js';
import { FhirDecimal } from './fhir/FhirDecimal.js';
import { FhirId } from './fhir/FhirId.js';
import { FhirInstant } from './fhir/FhirInstant.js';
import { FhirInteger } from './fhir/FhirInteger.js';
import { FhirMarkdown } from './fhir/FhirMarkdown.js';
import { FhirOid } from './fhir/FhirOid.js';
import { FhirPositiveInt } from './fhir/FhirPositiveInt.js';
import { FhirString } from './fhir/FhirString.js';
import { FhirTime } from './fhir/FhirTime.js';
import { FhirUnsignedInt } from './fhir/FhirUnsignedInt.js';
import { FhirUri } from './fhir/FhirUri.js';
import { FhirUuid } from './fhir/FhirUuid.js';
import { FhirXhtml } from './fhir/FhirXhtml.js';
import { FhirElement } from './fhir/FhirElement.js';
import { Coding } from './fhir/Coding.js';
import { Address } from './fhir/Address.js';
import { Quantity } from './fhir/Quantity.js';
import { Age } from './fhir/Age.js';
import { Annotation } from './fhir/Annotation.js';
import { Attachment } from './fhir/Attachment.js';
import { BackboneElement } from './fhir/BackboneElement.js';
import { CodeableConcept } from './fhir/CodeableConcept.js';
import { ContactPoint } from './fhir/ContactPoint.js';
import { Count } from './fhir/Count.js';
import { Distance } from './fhir/Distance.js';
import { Duration } from './fhir/Duration.js';
import { ElementDefinition, ElementDefinitionSlicing, ElementDefinitionBase, ElementDefinitionType, ElementDefinitionConstraint, ElementDefinitionBinding, ElementDefinitionMapping } from './fhir/ElementDefinition.js';
import { Extension } from './fhir/Extension.js';
import { HumanName } from './fhir/HumanName.js';
import { Identifier } from './fhir/Identifier.js';
import { Meta } from './fhir/Meta.js';
import { Money } from './fhir/Money.js';
import { Narrative } from './fhir/Narrative.js';
import { Period } from './fhir/Period.js';
import { Range } from './fhir/Range.js';
import { Ratio } from './fhir/Ratio.js';
import { Reference } from './fhir/Reference.js';
import { SampledData } from './fhir/SampledData.js';
import { Signature } from './fhir/Signature.js';
import { SimpleQuantity } from './fhir/SimpleQuantity.js';
import { Timing, TimingRepeat } from './fhir/Timing.js';
import { Resource } from './fhir/Resource.js';
import { DomainResource } from './fhir/DomainResource.js';
import { Account } from './fhir/Account.js';
import { AllergyIntolerance, AllergyIntoleranceReaction } from './fhir/AllergyIntolerance.js';
import { Appointment, AppointmentParticipant } from './fhir/Appointment.js';
import { AppointmentResponse } from './fhir/AppointmentResponse.js';
import { AuditEvent, AuditEventEvent, AuditEventParticipant, AuditEventParticipantNetwork, AuditEventSource, AuditEventObject, AuditEventObjectDetail } from './fhir/AuditEvent.js';
import { Basic } from './fhir/Basic.js';
import { Binary } from './fhir/Binary.js';
import { BodySite } from './fhir/BodySite.js';
import { Bundle, BundleLink, BundleEntry, BundleEntrySearch, BundleEntryRequest, BundleEntryResponse } from './fhir/Bundle.js';
import { CarePlan, CarePlanRelatedPlan, CarePlanParticipant, CarePlanActivity, CarePlanActivityDetail } from './fhir/CarePlan.js';
import { Claim, ClaimPayee, ClaimDiagnosis, ClaimCoverage, ClaimItem, ClaimItemDetail, ClaimItemDetailSubDetail, ClaimItemProsthesis, ClaimMissingTeeth } from './fhir/Claim.js';
import { ClaimResponse, ClaimResponseItem, ClaimResponseItemAdjudication, ClaimResponseItemDetail, ClaimResponseItemDetailAdjudication, ClaimResponseItemDetailSubDetail, ClaimResponseItemDetailSubDetailAdjudication, ClaimResponseAddItem, ClaimResponseAddItemAdjudication, ClaimResponseAddItemDetail, ClaimResponseAddItemDetailAdjudication, ClaimResponseError, ClaimResponseNote, ClaimResponseCoverage } from './fhir/ClaimResponse.js';
import { ClinicalImpression, ClinicalImpressionInvestigations, ClinicalImpressionFinding, ClinicalImpressionRuledOut } from './fhir/ClinicalImpression.js';
import { Communication, CommunicationPayload } from './fhir/Communication.js';
import { CommunicationRequest, CommunicationRequestPayload } from './fhir/CommunicationRequest.js';
import { Composition, CompositionAttester, CompositionEvent, CompositionSection } from './fhir/Composition.js';
import { ConceptMap, ConceptMapContact, ConceptMapElement, ConceptMapElementTarget, ConceptMapElementTargetDependsOn } from './fhir/ConceptMap.js';
import { Condition, ConditionStage, ConditionEvidence } from './fhir/Condition.js';
import { Conformance, ConformanceContact, ConformanceSoftware, ConformanceImplementation, ConformanceRest, ConformanceRestSecurity, ConformanceRestSecurityCertificate, ConformanceRestResource, ConformanceRestResourceInteraction, ConformanceRestResourceSearchParam, ConformanceRestInteraction, ConformanceRestOperation, ConformanceMessaging, ConformanceMessagingEndpoint, ConformanceMessagingEvent, ConformanceDocument } from './fhir/Conformance.js';
import { Contract, ContractActor, ContractValuedItem, ContractSigner, ContractTerm, ContractTermActor, ContractTermValuedItem, ContractFriendly, ContractLegal, ContractRule } from './fhir/Contract.js';
import { Coverage } from './fhir/Coverage.js';
import { DataElement, DataElementContact, DataElementMapping } from './fhir/DataElement.js';
import { DetectedIssue, DetectedIssueMitigation } from './fhir/DetectedIssue.js';
import { Device } from './fhir/Device.js';
import { DeviceComponent, DeviceComponentProductionSpecification } from './fhir/DeviceComponent.js';
import { DeviceMetric, DeviceMetricCalibration } from './fhir/DeviceMetric.js';
import { DeviceUseRequest } from './fhir/DeviceUseRequest.js';
import { DeviceUseStatement } from './fhir/DeviceUseStatement.js';
import { DiagnosticOrder, DiagnosticOrderEvent, DiagnosticOrderItem } from './fhir/DiagnosticOrder.js';
import { DiagnosticReport, DiagnosticReportImage } from './fhir/DiagnosticReport.js';
import { DocumentManifest, DocumentManifestContent, DocumentManifestRelated } from './fhir/DocumentManifest.js';
import { DocumentReference, DocumentReferenceRelatesTo, DocumentReferenceContent, DocumentReferenceContext, DocumentReferenceContextRelated } from './fhir/DocumentReference.js';
import { EligibilityRequest } from './fhir/EligibilityRequest.js';
import { EligibilityResponse } from './fhir/EligibilityResponse.js';
import { Encounter, EncounterStatusHistory, EncounterParticipant, EncounterHospitalization, EncounterLocation } from './fhir/Encounter.js';
import { EnrollmentRequest } from './fhir/EnrollmentRequest.js';
import { EnrollmentResponse } from './fhir/EnrollmentResponse.js';
import { EpisodeOfCare, EpisodeOfCareStatusHistory, EpisodeOfCareCareTeam } from './fhir/EpisodeOfCare.js';
import { ExplanationOfBenefit } from './fhir/ExplanationOfBenefit.js';
import { FamilyMemberHistory, FamilyMemberHistoryCondition } from './fhir/FamilyMemberHistory.js';
import { Flag } from './fhir/Flag.js';
import { Goal, GoalOutcome } from './fhir/Goal.js';
import { Group, GroupCharacteristic, GroupMember } from './fhir/Group.js';
import { HealthcareService, HealthcareServiceServiceType, HealthcareServiceAvailableTime, HealthcareServiceNotAvailable } from './fhir/HealthcareService.js';
import { ImagingObjectSelection, ImagingObjectSelectionStudy, ImagingObjectSelectionStudySeries, ImagingObjectSelectionStudySeriesInstance, ImagingObjectSelectionStudySeriesInstanceFrames } from './fhir/ImagingObjectSelection.js';
import { ImagingStudy, ImagingStudySeries, ImagingStudySeriesInstance } from './fhir/ImagingStudy.js';
import { Immunization, ImmunizationExplanation, ImmunizationReaction, ImmunizationVaccinationProtocol } from './fhir/Immunization.js';
import { ImmunizationRecommendation, ImmunizationRecommendationRecommendation, ImmunizationRecommendationRecommendationDateCriterion, ImmunizationRecommendationRecommendationProtocol } from './fhir/ImmunizationRecommendation.js';
import { ImplementationGuide, ImplementationGuideContact, ImplementationGuideDependency, ImplementationGuidePackage, ImplementationGuidePackageResource, ImplementationGuideGlobal, ImplementationGuidePage } from './fhir/ImplementationGuide.js';
import { List, ListEntry } from './fhir/List.js';
import { Location, LocationPosition } from './fhir/Location.js';
import { Media } from './fhir/Media.js';
import { Medication, MedicationProduct, MedicationProductIngredient, MedicationProductBatch, MedicationPackage, MedicationPackageContent } from './fhir/Medication.js';
import { MedicationAdministration, MedicationAdministrationDosage } from './fhir/MedicationAdministration.js';
import { MedicationDispense, MedicationDispenseDosageInstruction, MedicationDispenseSubstitution } from './fhir/MedicationDispense.js';
import { MedicationOrder, MedicationOrderDosageInstruction, MedicationOrderDispenseRequest, MedicationOrderSubstitution } from './fhir/MedicationOrder.js';
import { MedicationStatement, MedicationStatementDosage } from './fhir/MedicationStatement.js';
import { MessageHeader, MessageHeaderResponse, MessageHeaderSource, MessageHeaderDestination } from './fhir/MessageHeader.js';
import { NamingSystem, NamingSystemContact, NamingSystemUniqueId } from './fhir/NamingSystem.js';
import { NutritionOrder, NutritionOrderOralDiet, NutritionOrderOralDietNutrient, NutritionOrderOralDietTexture, NutritionOrderSupplement, NutritionOrderEnteralFormula, NutritionOrderEnteralFormulaAdministration } from './fhir/NutritionOrder.js';
import { Observation, ObservationReferenceRange, ObservationRelated, ObservationComponent } from './fhir/Observation.js';
import { OperationDefinition, OperationDefinitionContact, OperationDefinitionParameter, OperationDefinitionParameterBinding } from './fhir/OperationDefinition.js';
import { OperationOutcome, OperationOutcomeIssue } from './fhir/OperationOutcome.js';
import { Order, OrderWhen } from './fhir/Order.js';
import { OrderResponse } from './fhir/OrderResponse.js';
import { Organization, OrganizationContact } from './fhir/Organization.js';
import { Parameters, ParametersParameter } from './fhir/Parameters.js';
import { Patient, PatientContact, PatientAnimal, PatientCommunication, PatientLink } from './fhir/Patient.js';
import { PaymentNotice } from './fhir/PaymentNotice.js';
import { PaymentReconciliation, PaymentReconciliationDetail, PaymentReconciliationNote } from './fhir/PaymentReconciliation.js';
import { Person, PersonLink } from './fhir/Person.js';
import { Practitioner, PractitionerPractitionerRole, PractitionerQualification } from './fhir/Practitioner.js';
import { Procedure, ProcedurePerformer, ProcedureFocalDevice } from './fhir/Procedure.js';
import { ProcedureRequest } from './fhir/ProcedureRequest.js';
import { ProcessRequest, ProcessRequestItem } from './fhir/ProcessRequest.js';
import { ProcessResponse, ProcessResponseNotes } from './fhir/ProcessResponse.js';
import { Provenance, ProvenanceAgent, ProvenanceAgentRelatedAgent, ProvenanceEntity } from './fhir/Provenance.js';
import { Questionnaire, QuestionnaireGroup, QuestionnaireGroupQuestion } from './fhir/Questionnaire.js';
import { QuestionnaireResponse, QuestionnaireResponseGroup, QuestionnaireResponseGroupQuestion, QuestionnaireResponseGroupQuestionAnswer } from './fhir/QuestionnaireResponse.js';
import { ReferralRequest } from './fhir/ReferralRequest.js';
import { RelatedPerson } from './fhir/RelatedPerson.js';
import { RiskAssessment, RiskAssessmentPrediction } from './fhir/RiskAssessment.js';
import { Schedule } from './fhir/Schedule.js';
import { SearchParameter, SearchParameterContact } from './fhir/SearchParameter.js';
import { Slot } from './fhir/Slot.js';
import { Specimen, SpecimenCollection, SpecimenTreatment, SpecimenContainer } from './fhir/Specimen.js';
import { StructureDefinition, StructureDefinitionContact, StructureDefinitionMapping, StructureDefinitionSnapshot, StructureDefinitionDifferential } from './fhir/StructureDefinition.js';
import { Subscription, SubscriptionChannel } from './fhir/Subscription.js';
import { Substance, SubstanceInstance, SubstanceIngredient } from './fhir/Substance.js';
import { SupplyDelivery } from './fhir/SupplyDelivery.js';
import { SupplyRequest, SupplyRequestWhen } from './fhir/SupplyRequest.js';
import { TestScript, TestScriptContact, TestScriptMetadata, TestScriptMetadataLink, TestScriptMetadataCapability, TestScriptFixture, TestScriptVariable, TestScriptSetup, TestScriptSetupAction, TestScriptSetupActionOperation, TestScriptSetupActionOperationRequestHeader, TestScriptSetupActionAssert, TestScriptTest, TestScriptTestAction, TestScriptTeardown, TestScriptTeardownAction } from './fhir/TestScript.js';
import { ValueSet, ValueSetContact, ValueSetCodeSystem, ValueSetCodeSystemConcept, ValueSetCodeSystemConceptDesignation, ValueSetCompose, ValueSetComposeInclude, ValueSetComposeIncludeConcept, ValueSetComposeIncludeFilter, ValueSetExpansion, ValueSetExpansionParameter, ValueSetExpansionContains } from './fhir/ValueSet.js';
import { VisionPrescription, VisionPrescriptionDispense } from './fhir/VisionPrescription.js';
/**
 * Factory creator for FHIR Resources
 */
function resourceFactory(source) {
    switch (source['resourceType']) {
        case "Account": return new Account(source);
        case "AllergyIntolerance": return new AllergyIntolerance(source);
        case "Appointment": return new Appointment(source);
        case "AppointmentResponse": return new AppointmentResponse(source);
        case "AuditEvent": return new AuditEvent(source);
        case "Basic": return new Basic(source);
        case "Binary": return new Binary(source);
        case "BodySite": return new BodySite(source);
        case "Bundle": return new Bundle(source);
        case "CarePlan": return new CarePlan(source);
        case "Claim": return new Claim(source);
        case "ClaimResponse": return new ClaimResponse(source);
        case "ClinicalImpression": return new ClinicalImpression(source);
        case "Communication": return new Communication(source);
        case "CommunicationRequest": return new CommunicationRequest(source);
        case "Composition": return new Composition(source);
        case "ConceptMap": return new ConceptMap(source);
        case "Condition": return new Condition(source);
        case "Conformance": return new Conformance(source);
        case "Contract": return new Contract(source);
        case "Coverage": return new Coverage(source);
        case "DataElement": return new DataElement(source);
        case "DetectedIssue": return new DetectedIssue(source);
        case "Device": return new Device(source);
        case "DeviceComponent": return new DeviceComponent(source);
        case "DeviceMetric": return new DeviceMetric(source);
        case "DeviceUseRequest": return new DeviceUseRequest(source);
        case "DeviceUseStatement": return new DeviceUseStatement(source);
        case "DiagnosticOrder": return new DiagnosticOrder(source);
        case "DiagnosticReport": return new DiagnosticReport(source);
        case "DocumentManifest": return new DocumentManifest(source);
        case "DocumentReference": return new DocumentReference(source);
        case "DomainResource": return new DomainResource(source);
        case "EligibilityRequest": return new EligibilityRequest(source);
        case "EligibilityResponse": return new EligibilityResponse(source);
        case "Encounter": return new Encounter(source);
        case "EnrollmentRequest": return new EnrollmentRequest(source);
        case "EnrollmentResponse": return new EnrollmentResponse(source);
        case "EpisodeOfCare": return new EpisodeOfCare(source);
        case "ExplanationOfBenefit": return new ExplanationOfBenefit(source);
        case "FamilyMemberHistory": return new FamilyMemberHistory(source);
        case "Flag": return new Flag(source);
        case "Goal": return new Goal(source);
        case "Group": return new Group(source);
        case "HealthcareService": return new HealthcareService(source);
        case "ImagingObjectSelection": return new ImagingObjectSelection(source);
        case "ImagingStudy": return new ImagingStudy(source);
        case "Immunization": return new Immunization(source);
        case "ImmunizationRecommendation": return new ImmunizationRecommendation(source);
        case "ImplementationGuide": return new ImplementationGuide(source);
        case "List": return new List(source);
        case "Location": return new Location(source);
        case "Media": return new Media(source);
        case "Medication": return new Medication(source);
        case "MedicationAdministration": return new MedicationAdministration(source);
        case "MedicationDispense": return new MedicationDispense(source);
        case "MedicationOrder": return new MedicationOrder(source);
        case "MedicationStatement": return new MedicationStatement(source);
        case "MessageHeader": return new MessageHeader(source);
        case "NamingSystem": return new NamingSystem(source);
        case "NutritionOrder": return new NutritionOrder(source);
        case "Observation": return new Observation(source);
        case "OperationDefinition": return new OperationDefinition(source);
        case "OperationOutcome": return new OperationOutcome(source);
        case "Order": return new Order(source);
        case "OrderResponse": return new OrderResponse(source);
        case "Organization": return new Organization(source);
        case "Parameters": return new Parameters(source);
        case "Patient": return new Patient(source);
        case "PaymentNotice": return new PaymentNotice(source);
        case "PaymentReconciliation": return new PaymentReconciliation(source);
        case "Person": return new Person(source);
        case "Practitioner": return new Practitioner(source);
        case "Procedure": return new Procedure(source);
        case "ProcedureRequest": return new ProcedureRequest(source);
        case "ProcessRequest": return new ProcessRequest(source);
        case "ProcessResponse": return new ProcessResponse(source);
        case "Provenance": return new Provenance(source);
        case "Questionnaire": return new Questionnaire(source);
        case "QuestionnaireResponse": return new QuestionnaireResponse(source);
        case "ReferralRequest": return new ReferralRequest(source);
        case "RelatedPerson": return new RelatedPerson(source);
        case "Resource": return new Resource(source);
        case "RiskAssessment": return new RiskAssessment(source);
        case "Schedule": return new Schedule(source);
        case "SearchParameter": return new SearchParameter(source);
        case "Slot": return new Slot(source);
        case "Specimen": return new Specimen(source);
        case "StructureDefinition": return new StructureDefinition(source);
        case "Subscription": return new Subscription(source);
        case "Substance": return new Substance(source);
        case "SupplyDelivery": return new SupplyDelivery(source);
        case "SupplyRequest": return new SupplyRequest(source);
        case "TestScript": return new TestScript(source);
        case "ValueSet": return new ValueSet(source);
        case "VisionPrescription": return new VisionPrescription(source);
        default: return null;
    }
}
export { FhirBase, FhirPrimitive, FhirBase64Binary, FhirBoolean, FhirCode, FhirDate, FhirDateTime, FhirDecimal, FhirId, FhirInstant, FhirInteger, FhirMarkdown, FhirOid, FhirPositiveInt, FhirString, FhirTime, FhirUnsignedInt, FhirUri, FhirUuid, FhirXhtml, FhirElement, Coding, Address, Quantity, Age, Annotation, Attachment, BackboneElement, CodeableConcept, ContactPoint, Count, Distance, Duration, ElementDefinition, ElementDefinitionSlicing, ElementDefinitionBase, ElementDefinitionType, ElementDefinitionConstraint, ElementDefinitionBinding, ElementDefinitionMapping, Extension, HumanName, Identifier, Meta, Money, Narrative, Period, Range, Ratio, Reference, SampledData, Signature, SimpleQuantity, Timing, TimingRepeat, Resource, DomainResource, Account, AllergyIntolerance, AllergyIntoleranceReaction, Appointment, AppointmentParticipant, AppointmentResponse, AuditEvent, AuditEventEvent, AuditEventParticipant, AuditEventParticipantNetwork, AuditEventSource, AuditEventObject, AuditEventObjectDetail, Basic, Binary, BodySite, Bundle, BundleLink, BundleEntry, BundleEntrySearch, BundleEntryRequest, BundleEntryResponse, CarePlan, CarePlanRelatedPlan, CarePlanParticipant, CarePlanActivity, CarePlanActivityDetail, Claim, ClaimPayee, ClaimDiagnosis, ClaimCoverage, ClaimItem, ClaimItemDetail, ClaimItemDetailSubDetail, ClaimItemProsthesis, ClaimMissingTeeth, ClaimResponse, ClaimResponseItem, ClaimResponseItemAdjudication, ClaimResponseItemDetail, ClaimResponseItemDetailAdjudication, ClaimResponseItemDetailSubDetail, ClaimResponseItemDetailSubDetailAdjudication, ClaimResponseAddItem, ClaimResponseAddItemAdjudication, ClaimResponseAddItemDetail, ClaimResponseAddItemDetailAdjudication, ClaimResponseError, ClaimResponseNote, ClaimResponseCoverage, ClinicalImpression, ClinicalImpressionInvestigations, ClinicalImpressionFinding, ClinicalImpressionRuledOut, Communication, CommunicationPayload, CommunicationRequest, CommunicationRequestPayload, Composition, CompositionAttester, CompositionEvent, CompositionSection, ConceptMap, ConceptMapContact, ConceptMapElement, ConceptMapElementTarget, ConceptMapElementTargetDependsOn, Condition, ConditionStage, ConditionEvidence, Conformance, ConformanceContact, ConformanceSoftware, ConformanceImplementation, ConformanceRest, ConformanceRestSecurity, ConformanceRestSecurityCertificate, ConformanceRestResource, ConformanceRestResourceInteraction, ConformanceRestResourceSearchParam, ConformanceRestInteraction, ConformanceRestOperation, ConformanceMessaging, ConformanceMessagingEndpoint, ConformanceMessagingEvent, ConformanceDocument, Contract, ContractActor, ContractValuedItem, ContractSigner, ContractTerm, ContractTermActor, ContractTermValuedItem, ContractFriendly, ContractLegal, ContractRule, Coverage, DataElement, DataElementContact, DataElementMapping, DetectedIssue, DetectedIssueMitigation, Device, DeviceComponent, DeviceComponentProductionSpecification, DeviceMetric, DeviceMetricCalibration, DeviceUseRequest, DeviceUseStatement, DiagnosticOrder, DiagnosticOrderEvent, DiagnosticOrderItem, DiagnosticReport, DiagnosticReportImage, DocumentManifest, DocumentManifestContent, DocumentManifestRelated, DocumentReference, DocumentReferenceRelatesTo, DocumentReferenceContent, DocumentReferenceContext, DocumentReferenceContextRelated, EligibilityRequest, EligibilityResponse, Encounter, EncounterStatusHistory, EncounterParticipant, EncounterHospitalization, EncounterLocation, EnrollmentRequest, EnrollmentResponse, EpisodeOfCare, EpisodeOfCareStatusHistory, EpisodeOfCareCareTeam, ExplanationOfBenefit, FamilyMemberHistory, FamilyMemberHistoryCondition, Flag, Goal, GoalOutcome, Group, GroupCharacteristic, GroupMember, HealthcareService, HealthcareServiceServiceType, HealthcareServiceAvailableTime, HealthcareServiceNotAvailable, ImagingObjectSelection, ImagingObjectSelectionStudy, ImagingObjectSelectionStudySeries, ImagingObjectSelectionStudySeriesInstance, ImagingObjectSelectionStudySeriesInstanceFrames, ImagingStudy, ImagingStudySeries, ImagingStudySeriesInstance, Immunization, ImmunizationExplanation, ImmunizationReaction, ImmunizationVaccinationProtocol, ImmunizationRecommendation, ImmunizationRecommendationRecommendation, ImmunizationRecommendationRecommendationDateCriterion, ImmunizationRecommendationRecommendationProtocol, ImplementationGuide, ImplementationGuideContact, ImplementationGuideDependency, ImplementationGuidePackage, ImplementationGuidePackageResource, ImplementationGuideGlobal, ImplementationGuidePage, List, ListEntry, Location, LocationPosition, Media, Medication, MedicationProduct, MedicationProductIngredient, MedicationProductBatch, MedicationPackage, MedicationPackageContent, MedicationAdministration, MedicationAdministrationDosage, MedicationDispense, MedicationDispenseDosageInstruction, MedicationDispenseSubstitution, MedicationOrder, MedicationOrderDosageInstruction, MedicationOrderDispenseRequest, MedicationOrderSubstitution, MedicationStatement, MedicationStatementDosage, MessageHeader, MessageHeaderResponse, MessageHeaderSource, MessageHeaderDestination, NamingSystem, NamingSystemContact, NamingSystemUniqueId, NutritionOrder, NutritionOrderOralDiet, NutritionOrderOralDietNutrient, NutritionOrderOralDietTexture, NutritionOrderSupplement, NutritionOrderEnteralFormula, NutritionOrderEnteralFormulaAdministration, Observation, ObservationReferenceRange, ObservationRelated, ObservationComponent, OperationDefinition, OperationDefinitionContact, OperationDefinitionParameter, OperationDefinitionParameterBinding, OperationOutcome, OperationOutcomeIssue, Order, OrderWhen, OrderResponse, Organization, OrganizationContact, Parameters, ParametersParameter, Patient, PatientContact, PatientAnimal, PatientCommunication, PatientLink, PaymentNotice, PaymentReconciliation, PaymentReconciliationDetail, PaymentReconciliationNote, Person, PersonLink, Practitioner, PractitionerPractitionerRole, PractitionerQualification, Procedure, ProcedurePerformer, ProcedureFocalDevice, ProcedureRequest, ProcessRequest, ProcessRequestItem, ProcessResponse, ProcessResponseNotes, Provenance, ProvenanceAgent, ProvenanceAgentRelatedAgent, ProvenanceEntity, Questionnaire, QuestionnaireGroup, QuestionnaireGroupQuestion, QuestionnaireResponse, QuestionnaireResponseGroup, QuestionnaireResponseGroupQuestion, QuestionnaireResponseGroupQuestionAnswer, ReferralRequest, RelatedPerson, RiskAssessment, RiskAssessmentPrediction, Schedule, SearchParameter, SearchParameterContact, Slot, Specimen, SpecimenCollection, SpecimenTreatment, SpecimenContainer, StructureDefinition, StructureDefinitionContact, StructureDefinitionMapping, StructureDefinitionSnapshot, StructureDefinitionDifferential, Subscription, SubscriptionChannel, Substance, SubstanceInstance, SubstanceIngredient, SupplyDelivery, SupplyRequest, SupplyRequestWhen, TestScript, TestScriptContact, TestScriptMetadata, TestScriptMetadataLink, TestScriptMetadataCapability, TestScriptFixture, TestScriptVariable, TestScriptSetup, TestScriptSetupAction, TestScriptSetupActionOperation, TestScriptSetupActionOperationRequestHeader, TestScriptSetupActionAssert, TestScriptTest, TestScriptTestAction, TestScriptTeardown, TestScriptTeardownAction, ValueSet, ValueSetContact, ValueSetCodeSystem, ValueSetCodeSystemConcept, ValueSetCodeSystemConceptDesignation, ValueSetCompose, ValueSetComposeInclude, ValueSetComposeIncludeConcept, ValueSetComposeIncludeFilter, ValueSetExpansion, ValueSetExpansionParameter, ValueSetExpansionContains, VisionPrescription, VisionPrescriptionDispense, resourceFactory, };
//# sourceMappingURL=data:application/json;base64,