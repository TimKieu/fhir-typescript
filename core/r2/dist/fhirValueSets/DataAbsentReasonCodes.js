// <auto-generated/>
// Contents of: hl7.fhir.r2.core version: 1.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/data-absent-reason|1.0.2
/**
 * Used to specify why the normally expected content of the data element is missing.
 */
export const DataAbsentReasonCodes = {
    /**
     * asked: The source human does not know the value.
     */
    Asked: "asked",
    /**
     * astext: The content of the data is represented in the resource narrative.
     */
    AsText: "astext",
    /**
     * error: Some system or workflow process error means that the information is not available.
     */
    Error: "error",
    /**
     * masked: The information is not available due to security, privacy or related reasons.
     */
    Masked: "masked",
    /**
     * NaN: NaN, standing for not a number, is a numeric data type value representing an undefined or unrepresentable value.
     */
    NotANumber: "NaN",
    /**
     * not-asked: The workflow didn't lead to this value being known.
     */
    NotAsked: "not-asked",
    /**
     * temp: There is reason to expect (from the workflow) that the value may become known.
     */
    Temp: "temp",
    /**
     * unknown: The value is not known.
     */
    Unknown: "unknown",
    /**
     * unsupported: The source system wasn't capable of supporting this element.
     */
    Unsupported: "unsupported",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGF0YUFic2VudFJlYXNvbkNvZGVzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9EYXRhQWJzZW50UmVhc29uQ29kZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLCtDQUErQztBQUMvQyxrQ0FBa0M7QUFDbEMsdUVBQXVFO0FBRXZFOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0scUJBQXFCLEdBQUc7SUFDbkM7O09BRUc7SUFDSCxLQUFLLEVBQUUsT0FBTztJQUNkOztPQUVHO0lBQ0gsTUFBTSxFQUFFLFFBQVE7SUFDaEI7O09BRUc7SUFDSCxLQUFLLEVBQUUsT0FBTztJQUNkOztPQUVHO0lBQ0gsTUFBTSxFQUFFLFFBQVE7SUFDaEI7O09BRUc7SUFDSCxVQUFVLEVBQUUsS0FBSztJQUNqQjs7T0FFRztJQUNILFFBQVEsRUFBRSxXQUFXO0lBQ3JCOztPQUVHO0lBQ0gsSUFBSSxFQUFFLE1BQU07SUFDWjs7T0FFRztJQUNILE9BQU8sRUFBRSxTQUFTO0lBQ2xCOztPQUVHO0lBQ0gsV0FBVyxFQUFFLGFBQWE7Q0FDbEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yMi5jb3JlIHZlcnNpb246IDEuMC4yXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9kYXRhLWFic2VudC1yZWFzb258MS4wLjJcclxuXHJcbi8qKlxyXG4gKiBVc2VkIHRvIHNwZWNpZnkgd2h5IHRoZSBub3JtYWxseSBleHBlY3RlZCBjb250ZW50IG9mIHRoZSBkYXRhIGVsZW1lbnQgaXMgbWlzc2luZy5cclxuICovXHJcbmV4cG9ydCBjb25zdCBEYXRhQWJzZW50UmVhc29uQ29kZXMgPSB7XHJcbiAgLyoqXHJcbiAgICogYXNrZWQ6IFRoZSBzb3VyY2UgaHVtYW4gZG9lcyBub3Qga25vdyB0aGUgdmFsdWUuXHJcbiAgICovXHJcbiAgQXNrZWQ6IFwiYXNrZWRcIixcclxuICAvKipcclxuICAgKiBhc3RleHQ6IFRoZSBjb250ZW50IG9mIHRoZSBkYXRhIGlzIHJlcHJlc2VudGVkIGluIHRoZSByZXNvdXJjZSBuYXJyYXRpdmUuXHJcbiAgICovXHJcbiAgQXNUZXh0OiBcImFzdGV4dFwiLFxyXG4gIC8qKlxyXG4gICAqIGVycm9yOiBTb21lIHN5c3RlbSBvciB3b3JrZmxvdyBwcm9jZXNzIGVycm9yIG1lYW5zIHRoYXQgdGhlIGluZm9ybWF0aW9uIGlzIG5vdCBhdmFpbGFibGUuXHJcbiAgICovXHJcbiAgRXJyb3I6IFwiZXJyb3JcIixcclxuICAvKipcclxuICAgKiBtYXNrZWQ6IFRoZSBpbmZvcm1hdGlvbiBpcyBub3QgYXZhaWxhYmxlIGR1ZSB0byBzZWN1cml0eSwgcHJpdmFjeSBvciByZWxhdGVkIHJlYXNvbnMuXHJcbiAgICovXHJcbiAgTWFza2VkOiBcIm1hc2tlZFwiLFxyXG4gIC8qKlxyXG4gICAqIE5hTjogTmFOLCBzdGFuZGluZyBmb3Igbm90IGEgbnVtYmVyLCBpcyBhIG51bWVyaWMgZGF0YSB0eXBlIHZhbHVlIHJlcHJlc2VudGluZyBhbiB1bmRlZmluZWQgb3IgdW5yZXByZXNlbnRhYmxlIHZhbHVlLlxyXG4gICAqL1xyXG4gIE5vdEFOdW1iZXI6IFwiTmFOXCIsXHJcbiAgLyoqXHJcbiAgICogbm90LWFza2VkOiBUaGUgd29ya2Zsb3cgZGlkbid0IGxlYWQgdG8gdGhpcyB2YWx1ZSBiZWluZyBrbm93bi5cclxuICAgKi9cclxuICBOb3RBc2tlZDogXCJub3QtYXNrZWRcIixcclxuICAvKipcclxuICAgKiB0ZW1wOiBUaGVyZSBpcyByZWFzb24gdG8gZXhwZWN0IChmcm9tIHRoZSB3b3JrZmxvdykgdGhhdCB0aGUgdmFsdWUgbWF5IGJlY29tZSBrbm93bi5cclxuICAgKi9cclxuICBUZW1wOiBcInRlbXBcIixcclxuICAvKipcclxuICAgKiB1bmtub3duOiBUaGUgdmFsdWUgaXMgbm90IGtub3duLlxyXG4gICAqL1xyXG4gIFVua25vd246IFwidW5rbm93blwiLFxyXG4gIC8qKlxyXG4gICAqIHVuc3VwcG9ydGVkOiBUaGUgc291cmNlIHN5c3RlbSB3YXNuJ3QgY2FwYWJsZSBvZiBzdXBwb3J0aW5nIHRoaXMgZWxlbWVudC5cclxuICAgKi9cclxuICBVbnN1cHBvcnRlZDogXCJ1bnN1cHBvcnRlZFwiLFxyXG59IGFzIGNvbnN0O1xyXG5cclxuLyoqXHJcbiAqIFVzZWQgdG8gc3BlY2lmeSB3aHkgdGhlIG5vcm1hbGx5IGV4cGVjdGVkIGNvbnRlbnQgb2YgdGhlIGRhdGEgZWxlbWVudCBpcyBtaXNzaW5nLlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgRGF0YUFic2VudFJlYXNvbkNvZGVUeXBlID0gdHlwZW9mIERhdGFBYnNlbnRSZWFzb25Db2Rlc1trZXlvZiB0eXBlb2YgRGF0YUFic2VudFJlYXNvbkNvZGVzXTtcclxuIl19