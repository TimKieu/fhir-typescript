// <auto-generated/>
// Contents of: hl7.fhir.r2.core version: 1.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/identity-assuranceLevel|1.0.2
/**
 * The level of confidence that this link represents the same actual person, based on NIST Authentication Levels.
 */
export const IdentityAssuranceLevelCodings = {
    /**
     * level1: Little or no confidence in the asserted identity's accuracy.
     */
    Level1: {
        display: "Level 1",
        code: "level1",
        system: "http://hl7.org/fhir/identity-assuranceLevel",
    },
    /**
     * level2: Some confidence in the asserted identity's accuracy.
     */
    Level2: {
        display: "Level 2",
        code: "level2",
        system: "http://hl7.org/fhir/identity-assuranceLevel",
    },
    /**
     * level3: High confidence in the asserted identity's accuracy.
     */
    Level3: {
        display: "Level 3",
        code: "level3",
        system: "http://hl7.org/fhir/identity-assuranceLevel",
    },
    /**
     * level4: Very high confidence in the asserted identity's accuracy.
     */
    Level4: {
        display: "Level 4",
        code: "level4",
        system: "http://hl7.org/fhir/identity-assuranceLevel",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSWRlbnRpdHlBc3N1cmFuY2VMZXZlbENvZGluZ3MuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL0lkZW50aXR5QXNzdXJhbmNlTGV2ZWxDb2RpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQiwrQ0FBK0M7QUFDL0Msa0NBQWtDO0FBQ2xDLDRFQUE0RTtBQTBCNUU7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSw2QkFBNkIsR0FBb0M7SUFDNUU7O09BRUc7SUFDSCxNQUFNLEVBQUU7UUFDTixPQUFPLEVBQUUsU0FBUztRQUNsQixJQUFJLEVBQUUsUUFBUTtRQUNkLE1BQU0sRUFBRSw2Q0FBNkM7S0FDdEQ7SUFDRDs7T0FFRztJQUNILE1BQU0sRUFBRTtRQUNOLE9BQU8sRUFBRSxTQUFTO1FBQ2xCLElBQUksRUFBRSxRQUFRO1FBQ2QsTUFBTSxFQUFFLDZDQUE2QztLQUN0RDtJQUNEOztPQUVHO0lBQ0gsTUFBTSxFQUFFO1FBQ04sT0FBTyxFQUFFLFNBQVM7UUFDbEIsSUFBSSxFQUFFLFFBQVE7UUFDZCxNQUFNLEVBQUUsNkNBQTZDO0tBQ3REO0lBQ0Q7O09BRUc7SUFDSCxNQUFNLEVBQUU7UUFDTixPQUFPLEVBQUUsU0FBUztRQUNsQixJQUFJLEVBQUUsUUFBUTtRQUNkLE1BQU0sRUFBRSw2Q0FBNkM7S0FDdEQ7Q0FDTyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnIyLmNvcmUgdmVyc2lvbjogMS4wLjJcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L2lkZW50aXR5LWFzc3VyYW5jZUxldmVsfDEuMC4yXHJcblxyXG5pbXBvcnQgeyBDb2RpbmdBcmdzIH0gZnJvbSAnLi4vZmhpci9Db2RpbmcuanMnXHJcblxyXG4vKipcclxuICogVGhlIGxldmVsIG9mIGNvbmZpZGVuY2UgdGhhdCB0aGlzIGxpbmsgcmVwcmVzZW50cyB0aGUgc2FtZSBhY3R1YWwgcGVyc29uLCBiYXNlZCBvbiBOSVNUIEF1dGhlbnRpY2F0aW9uIExldmVscy5cclxuICovXHJcbmV4cG9ydCB0eXBlIElkZW50aXR5QXNzdXJhbmNlTGV2ZWxDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIGxldmVsMTogTGl0dGxlIG9yIG5vIGNvbmZpZGVuY2UgaW4gdGhlIGFzc2VydGVkIGlkZW50aXR5J3MgYWNjdXJhY3kuXHJcbiAgICovXHJcbiAgTGV2ZWwxOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIGxldmVsMjogU29tZSBjb25maWRlbmNlIGluIHRoZSBhc3NlcnRlZCBpZGVudGl0eSdzIGFjY3VyYWN5LlxyXG4gICAqL1xyXG4gIExldmVsMjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBsZXZlbDM6IEhpZ2ggY29uZmlkZW5jZSBpbiB0aGUgYXNzZXJ0ZWQgaWRlbnRpdHkncyBhY2N1cmFjeS5cclxuICAgKi9cclxuICBMZXZlbDM6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogbGV2ZWw0OiBWZXJ5IGhpZ2ggY29uZmlkZW5jZSBpbiB0aGUgYXNzZXJ0ZWQgaWRlbnRpdHkncyBhY2N1cmFjeS5cclxuICAgKi9cclxuICBMZXZlbDQ6IENvZGluZ0FyZ3M7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBUaGUgbGV2ZWwgb2YgY29uZmlkZW5jZSB0aGF0IHRoaXMgbGluayByZXByZXNlbnRzIHRoZSBzYW1lIGFjdHVhbCBwZXJzb24sIGJhc2VkIG9uIE5JU1QgQXV0aGVudGljYXRpb24gTGV2ZWxzLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IElkZW50aXR5QXNzdXJhbmNlTGV2ZWxDb2RpbmdzOklkZW50aXR5QXNzdXJhbmNlTGV2ZWxDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIGxldmVsMTogTGl0dGxlIG9yIG5vIGNvbmZpZGVuY2UgaW4gdGhlIGFzc2VydGVkIGlkZW50aXR5J3MgYWNjdXJhY3kuXHJcbiAgICovXHJcbiAgTGV2ZWwxOiB7XHJcbiAgICBkaXNwbGF5OiBcIkxldmVsIDFcIixcclxuICAgIGNvZGU6IFwibGV2ZWwxXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9pZGVudGl0eS1hc3N1cmFuY2VMZXZlbFwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogbGV2ZWwyOiBTb21lIGNvbmZpZGVuY2UgaW4gdGhlIGFzc2VydGVkIGlkZW50aXR5J3MgYWNjdXJhY3kuXHJcbiAgICovXHJcbiAgTGV2ZWwyOiB7XHJcbiAgICBkaXNwbGF5OiBcIkxldmVsIDJcIixcclxuICAgIGNvZGU6IFwibGV2ZWwyXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9pZGVudGl0eS1hc3N1cmFuY2VMZXZlbFwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogbGV2ZWwzOiBIaWdoIGNvbmZpZGVuY2UgaW4gdGhlIGFzc2VydGVkIGlkZW50aXR5J3MgYWNjdXJhY3kuXHJcbiAgICovXHJcbiAgTGV2ZWwzOiB7XHJcbiAgICBkaXNwbGF5OiBcIkxldmVsIDNcIixcclxuICAgIGNvZGU6IFwibGV2ZWwzXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9pZGVudGl0eS1hc3N1cmFuY2VMZXZlbFwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogbGV2ZWw0OiBWZXJ5IGhpZ2ggY29uZmlkZW5jZSBpbiB0aGUgYXNzZXJ0ZWQgaWRlbnRpdHkncyBhY2N1cmFjeS5cclxuICAgKi9cclxuICBMZXZlbDQ6IHtcclxuICAgIGRpc3BsYXk6IFwiTGV2ZWwgNFwiLFxyXG4gICAgY29kZTogXCJsZXZlbDRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2lkZW50aXR5LWFzc3VyYW5jZUxldmVsXCIsXHJcbiAgfSxcclxufSBhcyBjb25zdDtcclxuIl19