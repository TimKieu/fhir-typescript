// <auto-generated/>
// Contents of: hl7.fhir.r2.core version: 1.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/quantity-comparator|1.0.2
/**
 * How the Quantity should be understood and represented.
 */
export const QuantityComparatorCodings = {
    /**
     * &lt;: The actual value is less than the given value.
     */
    LessThan: {
        display: "Less than",
        code: "<",
        system: "http://hl7.org/fhir/quantity-comparator",
    },
    /**
     * &lt;=: The actual value is less than or equal to the given value.
     */
    LessOrEqualTo: {
        display: "Less or Equal to",
        code: "<=",
        system: "http://hl7.org/fhir/quantity-comparator",
    },
    /**
     * &gt;: The actual value is greater than the given value.
     */
    GreaterThan: {
        display: "Greater than",
        code: ">",
        system: "http://hl7.org/fhir/quantity-comparator",
    },
    /**
     * &gt;=: The actual value is greater than or equal to the given value.
     */
    GreaterOrEqualTo: {
        display: "Greater or Equal to",
        code: ">=",
        system: "http://hl7.org/fhir/quantity-comparator",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUXVhbnRpdHlDb21wYXJhdG9yQ29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvUXVhbnRpdHlDb21wYXJhdG9yQ29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyx3RUFBd0U7QUEwQnhFOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0seUJBQXlCLEdBQWdDO0lBQ3BFOztPQUVHO0lBQ0gsUUFBUSxFQUFFO1FBQ1IsT0FBTyxFQUFFLFdBQVc7UUFDcEIsSUFBSSxFQUFFLEdBQUc7UUFDVCxNQUFNLEVBQUUseUNBQXlDO0tBQ2xEO0lBQ0Q7O09BRUc7SUFDSCxhQUFhLEVBQUU7UUFDYixPQUFPLEVBQUUsa0JBQWtCO1FBQzNCLElBQUksRUFBRSxJQUFJO1FBQ1YsTUFBTSxFQUFFLHlDQUF5QztLQUNsRDtJQUNEOztPQUVHO0lBQ0gsV0FBVyxFQUFFO1FBQ1gsT0FBTyxFQUFFLGNBQWM7UUFDdkIsSUFBSSxFQUFFLEdBQUc7UUFDVCxNQUFNLEVBQUUseUNBQXlDO0tBQ2xEO0lBQ0Q7O09BRUc7SUFDSCxnQkFBZ0IsRUFBRTtRQUNoQixPQUFPLEVBQUUscUJBQXFCO1FBQzlCLElBQUksRUFBRSxJQUFJO1FBQ1YsTUFBTSxFQUFFLHlDQUF5QztLQUNsRDtDQUNPLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjIuY29yZSB2ZXJzaW9uOiAxLjAuMlxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvcXVhbnRpdHktY29tcGFyYXRvcnwxLjAuMlxyXG5cclxuaW1wb3J0IHsgQ29kaW5nQXJncyB9IGZyb20gJy4uL2ZoaXIvQ29kaW5nLmpzJ1xyXG5cclxuLyoqXHJcbiAqIEhvdyB0aGUgUXVhbnRpdHkgc2hvdWxkIGJlIHVuZGVyc3Rvb2QgYW5kIHJlcHJlc2VudGVkLlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgUXVhbnRpdHlDb21wYXJhdG9yQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiAmbHQ7OiBUaGUgYWN0dWFsIHZhbHVlIGlzIGxlc3MgdGhhbiB0aGUgZ2l2ZW4gdmFsdWUuXHJcbiAgICovXHJcbiAgTGVzc1RoYW46IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogJmx0Oz06IFRoZSBhY3R1YWwgdmFsdWUgaXMgbGVzcyB0aGFuIG9yIGVxdWFsIHRvIHRoZSBnaXZlbiB2YWx1ZS5cclxuICAgKi9cclxuICBMZXNzT3JFcXVhbFRvOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqICZndDs6IFRoZSBhY3R1YWwgdmFsdWUgaXMgZ3JlYXRlciB0aGFuIHRoZSBnaXZlbiB2YWx1ZS5cclxuICAgKi9cclxuICBHcmVhdGVyVGhhbjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiAmZ3Q7PTogVGhlIGFjdHVhbCB2YWx1ZSBpcyBncmVhdGVyIHRoYW4gb3IgZXF1YWwgdG8gdGhlIGdpdmVuIHZhbHVlLlxyXG4gICAqL1xyXG4gIEdyZWF0ZXJPckVxdWFsVG86IENvZGluZ0FyZ3M7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBIb3cgdGhlIFF1YW50aXR5IHNob3VsZCBiZSB1bmRlcnN0b29kIGFuZCByZXByZXNlbnRlZC5cclxuICovXHJcbmV4cG9ydCBjb25zdCBRdWFudGl0eUNvbXBhcmF0b3JDb2RpbmdzOlF1YW50aXR5Q29tcGFyYXRvckNvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogJmx0OzogVGhlIGFjdHVhbCB2YWx1ZSBpcyBsZXNzIHRoYW4gdGhlIGdpdmVuIHZhbHVlLlxyXG4gICAqL1xyXG4gIExlc3NUaGFuOiB7XHJcbiAgICBkaXNwbGF5OiBcIkxlc3MgdGhhblwiLFxyXG4gICAgY29kZTogXCI8XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9xdWFudGl0eS1jb21wYXJhdG9yXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiAmbHQ7PTogVGhlIGFjdHVhbCB2YWx1ZSBpcyBsZXNzIHRoYW4gb3IgZXF1YWwgdG8gdGhlIGdpdmVuIHZhbHVlLlxyXG4gICAqL1xyXG4gIExlc3NPckVxdWFsVG86IHtcclxuICAgIGRpc3BsYXk6IFwiTGVzcyBvciBFcXVhbCB0b1wiLFxyXG4gICAgY29kZTogXCI8PVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcXVhbnRpdHktY29tcGFyYXRvclwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogJmd0OzogVGhlIGFjdHVhbCB2YWx1ZSBpcyBncmVhdGVyIHRoYW4gdGhlIGdpdmVuIHZhbHVlLlxyXG4gICAqL1xyXG4gIEdyZWF0ZXJUaGFuOiB7XHJcbiAgICBkaXNwbGF5OiBcIkdyZWF0ZXIgdGhhblwiLFxyXG4gICAgY29kZTogXCI+XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9xdWFudGl0eS1jb21wYXJhdG9yXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiAmZ3Q7PTogVGhlIGFjdHVhbCB2YWx1ZSBpcyBncmVhdGVyIHRoYW4gb3IgZXF1YWwgdG8gdGhlIGdpdmVuIHZhbHVlLlxyXG4gICAqL1xyXG4gIEdyZWF0ZXJPckVxdWFsVG86IHtcclxuICAgIGRpc3BsYXk6IFwiR3JlYXRlciBvciBFcXVhbCB0b1wiLFxyXG4gICAgY29kZTogXCI+PVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcXVhbnRpdHktY29tcGFyYXRvclwiLFxyXG4gIH0sXHJcbn0gYXMgY29uc3Q7XHJcbiJdfQ==