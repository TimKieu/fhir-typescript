// <auto-generated/>
// Contents of: hl7.fhir.r2.core version: 1.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/identifier-use|1.0.2
/**
 * Identifies the purpose for this identifier, if known .
 */
export const IdentifierUseCodings = {
    /**
     * official: The identifier considered to be most trusted for the identification of this item.
     */
    Official: {
        display: "Official",
        code: "official",
        system: "http://hl7.org/fhir/identifier-use",
    },
    /**
     * secondary: An identifier that was assigned in secondary use - it serves to identify the object in a relative context, but cannot be consistently assigned to the same object again in a different context.
     */
    Secondary: {
        display: "Secondary",
        code: "secondary",
        system: "http://hl7.org/fhir/identifier-use",
    },
    /**
     * temp: A temporary identifier.
     */
    Temp: {
        display: "Temp",
        code: "temp",
        system: "http://hl7.org/fhir/identifier-use",
    },
    /**
     * usual: The identifier recommended for display and use in real-world interactions.
     */
    Usual: {
        display: "Usual",
        code: "usual",
        system: "http://hl7.org/fhir/identifier-use",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSWRlbnRpZmllclVzZUNvZGluZ3MuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL0lkZW50aWZpZXJVc2VDb2RpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQiwrQ0FBK0M7QUFDL0Msa0NBQWtDO0FBQ2xDLG1FQUFtRTtBQTBCbkU7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxvQkFBb0IsR0FBMkI7SUFDMUQ7O09BRUc7SUFDSCxRQUFRLEVBQUU7UUFDUixPQUFPLEVBQUUsVUFBVTtRQUNuQixJQUFJLEVBQUUsVUFBVTtRQUNoQixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxTQUFTLEVBQUU7UUFDVCxPQUFPLEVBQUUsV0FBVztRQUNwQixJQUFJLEVBQUUsV0FBVztRQUNqQixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxJQUFJLEVBQUU7UUFDSixPQUFPLEVBQUUsTUFBTTtRQUNmLElBQUksRUFBRSxNQUFNO1FBQ1osTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gsS0FBSyxFQUFFO1FBQ0wsT0FBTyxFQUFFLE9BQU87UUFDaEIsSUFBSSxFQUFFLE9BQU87UUFDYixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0NBQ08sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yMi5jb3JlIHZlcnNpb246IDEuMC4yXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9pZGVudGlmaWVyLXVzZXwxLjAuMlxyXG5cclxuaW1wb3J0IHsgQ29kaW5nQXJncyB9IGZyb20gJy4uL2ZoaXIvQ29kaW5nLmpzJ1xyXG5cclxuLyoqXHJcbiAqIElkZW50aWZpZXMgdGhlIHB1cnBvc2UgZm9yIHRoaXMgaWRlbnRpZmllciwgaWYga25vd24gLlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgSWRlbnRpZmllclVzZUNvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogb2ZmaWNpYWw6IFRoZSBpZGVudGlmaWVyIGNvbnNpZGVyZWQgdG8gYmUgbW9zdCB0cnVzdGVkIGZvciB0aGUgaWRlbnRpZmljYXRpb24gb2YgdGhpcyBpdGVtLlxyXG4gICAqL1xyXG4gIE9mZmljaWFsOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIHNlY29uZGFyeTogQW4gaWRlbnRpZmllciB0aGF0IHdhcyBhc3NpZ25lZCBpbiBzZWNvbmRhcnkgdXNlIC0gaXQgc2VydmVzIHRvIGlkZW50aWZ5IHRoZSBvYmplY3QgaW4gYSByZWxhdGl2ZSBjb250ZXh0LCBidXQgY2Fubm90IGJlIGNvbnNpc3RlbnRseSBhc3NpZ25lZCB0byB0aGUgc2FtZSBvYmplY3QgYWdhaW4gaW4gYSBkaWZmZXJlbnQgY29udGV4dC5cclxuICAgKi9cclxuICBTZWNvbmRhcnk6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogdGVtcDogQSB0ZW1wb3JhcnkgaWRlbnRpZmllci5cclxuICAgKi9cclxuICBUZW1wOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIHVzdWFsOiBUaGUgaWRlbnRpZmllciByZWNvbW1lbmRlZCBmb3IgZGlzcGxheSBhbmQgdXNlIGluIHJlYWwtd29ybGQgaW50ZXJhY3Rpb25zLlxyXG4gICAqL1xyXG4gIFVzdWFsOiBDb2RpbmdBcmdzO1xyXG59XHJcblxyXG4vKipcclxuICogSWRlbnRpZmllcyB0aGUgcHVycG9zZSBmb3IgdGhpcyBpZGVudGlmaWVyLCBpZiBrbm93biAuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgSWRlbnRpZmllclVzZUNvZGluZ3M6SWRlbnRpZmllclVzZUNvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogb2ZmaWNpYWw6IFRoZSBpZGVudGlmaWVyIGNvbnNpZGVyZWQgdG8gYmUgbW9zdCB0cnVzdGVkIGZvciB0aGUgaWRlbnRpZmljYXRpb24gb2YgdGhpcyBpdGVtLlxyXG4gICAqL1xyXG4gIE9mZmljaWFsOiB7XHJcbiAgICBkaXNwbGF5OiBcIk9mZmljaWFsXCIsXHJcbiAgICBjb2RlOiBcIm9mZmljaWFsXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9pZGVudGlmaWVyLXVzZVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogc2Vjb25kYXJ5OiBBbiBpZGVudGlmaWVyIHRoYXQgd2FzIGFzc2lnbmVkIGluIHNlY29uZGFyeSB1c2UgLSBpdCBzZXJ2ZXMgdG8gaWRlbnRpZnkgdGhlIG9iamVjdCBpbiBhIHJlbGF0aXZlIGNvbnRleHQsIGJ1dCBjYW5ub3QgYmUgY29uc2lzdGVudGx5IGFzc2lnbmVkIHRvIHRoZSBzYW1lIG9iamVjdCBhZ2FpbiBpbiBhIGRpZmZlcmVudCBjb250ZXh0LlxyXG4gICAqL1xyXG4gIFNlY29uZGFyeToge1xyXG4gICAgZGlzcGxheTogXCJTZWNvbmRhcnlcIixcclxuICAgIGNvZGU6IFwic2Vjb25kYXJ5XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9pZGVudGlmaWVyLXVzZVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogdGVtcDogQSB0ZW1wb3JhcnkgaWRlbnRpZmllci5cclxuICAgKi9cclxuICBUZW1wOiB7XHJcbiAgICBkaXNwbGF5OiBcIlRlbXBcIixcclxuICAgIGNvZGU6IFwidGVtcFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvaWRlbnRpZmllci11c2VcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIHVzdWFsOiBUaGUgaWRlbnRpZmllciByZWNvbW1lbmRlZCBmb3IgZGlzcGxheSBhbmQgdXNlIGluIHJlYWwtd29ybGQgaW50ZXJhY3Rpb25zLlxyXG4gICAqL1xyXG4gIFVzdWFsOiB7XHJcbiAgICBkaXNwbGF5OiBcIlVzdWFsXCIsXHJcbiAgICBjb2RlOiBcInVzdWFsXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9pZGVudGlmaWVyLXVzZVwiLFxyXG4gIH0sXHJcbn0gYXMgY29uc3Q7XHJcbiJdfQ==