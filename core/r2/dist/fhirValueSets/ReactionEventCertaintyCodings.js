// <auto-generated/>
// Contents of: hl7.fhir.r2.core version: 1.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/reaction-event-certainty|1.0.2
/**
 * Statement about the degree of clinical certainty that a Specific Substance was the cause of the Manifestation in an reaction event.
 */
export const ReactionEventCertaintyCodings = {
    /**
     * confirmed: There is a very high level of clinical certainty that the reaction was due to the identified Substance, which may include clinical evidence by testing or rechallenge.
     */
    Confirmed: {
        display: "Confirmed",
        code: "confirmed",
        system: "http://hl7.org/fhir/reaction-event-certainty",
    },
    /**
     * likely: There is a high level of clinical certainty that the reaction was caused by the identified Substance.
     */
    Likely: {
        display: "Likely",
        code: "likely",
        system: "http://hl7.org/fhir/reaction-event-certainty",
    },
    /**
     * unlikely: There is a low level of clinical certainty that the reaction was caused by the identified Substance.
     */
    Unlikely: {
        display: "Unlikely",
        code: "unlikely",
        system: "http://hl7.org/fhir/reaction-event-certainty",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVhY3Rpb25FdmVudENlcnRhaW50eUNvZGluZ3MuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL1JlYWN0aW9uRXZlbnRDZXJ0YWludHlDb2RpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQiwrQ0FBK0M7QUFDL0Msa0NBQWtDO0FBQ2xDLDZFQUE2RTtBQXNCN0U7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSw2QkFBNkIsR0FBb0M7SUFDNUU7O09BRUc7SUFDSCxTQUFTLEVBQUU7UUFDVCxPQUFPLEVBQUUsV0FBVztRQUNwQixJQUFJLEVBQUUsV0FBVztRQUNqQixNQUFNLEVBQUUsOENBQThDO0tBQ3ZEO0lBQ0Q7O09BRUc7SUFDSCxNQUFNLEVBQUU7UUFDTixPQUFPLEVBQUUsUUFBUTtRQUNqQixJQUFJLEVBQUUsUUFBUTtRQUNkLE1BQU0sRUFBRSw4Q0FBOEM7S0FDdkQ7SUFDRDs7T0FFRztJQUNILFFBQVEsRUFBRTtRQUNSLE9BQU8sRUFBRSxVQUFVO1FBQ25CLElBQUksRUFBRSxVQUFVO1FBQ2hCLE1BQU0sRUFBRSw4Q0FBOEM7S0FDdkQ7Q0FDTyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnIyLmNvcmUgdmVyc2lvbjogMS4wLjJcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L3JlYWN0aW9uLWV2ZW50LWNlcnRhaW50eXwxLjAuMlxyXG5cclxuaW1wb3J0IHsgQ29kaW5nQXJncyB9IGZyb20gJy4uL2ZoaXIvQ29kaW5nLmpzJ1xyXG5cclxuLyoqXHJcbiAqIFN0YXRlbWVudCBhYm91dCB0aGUgZGVncmVlIG9mIGNsaW5pY2FsIGNlcnRhaW50eSB0aGF0IGEgU3BlY2lmaWMgU3Vic3RhbmNlIHdhcyB0aGUgY2F1c2Ugb2YgdGhlIE1hbmlmZXN0YXRpb24gaW4gYW4gcmVhY3Rpb24gZXZlbnQuXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBSZWFjdGlvbkV2ZW50Q2VydGFpbnR5Q29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBjb25maXJtZWQ6IFRoZXJlIGlzIGEgdmVyeSBoaWdoIGxldmVsIG9mIGNsaW5pY2FsIGNlcnRhaW50eSB0aGF0IHRoZSByZWFjdGlvbiB3YXMgZHVlIHRvIHRoZSBpZGVudGlmaWVkIFN1YnN0YW5jZSwgd2hpY2ggbWF5IGluY2x1ZGUgY2xpbmljYWwgZXZpZGVuY2UgYnkgdGVzdGluZyBvciByZWNoYWxsZW5nZS5cclxuICAgKi9cclxuICBDb25maXJtZWQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogbGlrZWx5OiBUaGVyZSBpcyBhIGhpZ2ggbGV2ZWwgb2YgY2xpbmljYWwgY2VydGFpbnR5IHRoYXQgdGhlIHJlYWN0aW9uIHdhcyBjYXVzZWQgYnkgdGhlIGlkZW50aWZpZWQgU3Vic3RhbmNlLlxyXG4gICAqL1xyXG4gIExpa2VseTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiB1bmxpa2VseTogVGhlcmUgaXMgYSBsb3cgbGV2ZWwgb2YgY2xpbmljYWwgY2VydGFpbnR5IHRoYXQgdGhlIHJlYWN0aW9uIHdhcyBjYXVzZWQgYnkgdGhlIGlkZW50aWZpZWQgU3Vic3RhbmNlLlxyXG4gICAqL1xyXG4gIFVubGlrZWx5OiBDb2RpbmdBcmdzO1xyXG59XHJcblxyXG4vKipcclxuICogU3RhdGVtZW50IGFib3V0IHRoZSBkZWdyZWUgb2YgY2xpbmljYWwgY2VydGFpbnR5IHRoYXQgYSBTcGVjaWZpYyBTdWJzdGFuY2Ugd2FzIHRoZSBjYXVzZSBvZiB0aGUgTWFuaWZlc3RhdGlvbiBpbiBhbiByZWFjdGlvbiBldmVudC5cclxuICovXHJcbmV4cG9ydCBjb25zdCBSZWFjdGlvbkV2ZW50Q2VydGFpbnR5Q29kaW5nczpSZWFjdGlvbkV2ZW50Q2VydGFpbnR5Q29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBjb25maXJtZWQ6IFRoZXJlIGlzIGEgdmVyeSBoaWdoIGxldmVsIG9mIGNsaW5pY2FsIGNlcnRhaW50eSB0aGF0IHRoZSByZWFjdGlvbiB3YXMgZHVlIHRvIHRoZSBpZGVudGlmaWVkIFN1YnN0YW5jZSwgd2hpY2ggbWF5IGluY2x1ZGUgY2xpbmljYWwgZXZpZGVuY2UgYnkgdGVzdGluZyBvciByZWNoYWxsZW5nZS5cclxuICAgKi9cclxuICBDb25maXJtZWQ6IHtcclxuICAgIGRpc3BsYXk6IFwiQ29uZmlybWVkXCIsXHJcbiAgICBjb2RlOiBcImNvbmZpcm1lZFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVhY3Rpb24tZXZlbnQtY2VydGFpbnR5XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBsaWtlbHk6IFRoZXJlIGlzIGEgaGlnaCBsZXZlbCBvZiBjbGluaWNhbCBjZXJ0YWludHkgdGhhdCB0aGUgcmVhY3Rpb24gd2FzIGNhdXNlZCBieSB0aGUgaWRlbnRpZmllZCBTdWJzdGFuY2UuXHJcbiAgICovXHJcbiAgTGlrZWx5OiB7XHJcbiAgICBkaXNwbGF5OiBcIkxpa2VseVwiLFxyXG4gICAgY29kZTogXCJsaWtlbHlcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3JlYWN0aW9uLWV2ZW50LWNlcnRhaW50eVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogdW5saWtlbHk6IFRoZXJlIGlzIGEgbG93IGxldmVsIG9mIGNsaW5pY2FsIGNlcnRhaW50eSB0aGF0IHRoZSByZWFjdGlvbiB3YXMgY2F1c2VkIGJ5IHRoZSBpZGVudGlmaWVkIFN1YnN0YW5jZS5cclxuICAgKi9cclxuICBVbmxpa2VseToge1xyXG4gICAgZGlzcGxheTogXCJVbmxpa2VseVwiLFxyXG4gICAgY29kZTogXCJ1bmxpa2VseVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcmVhY3Rpb24tZXZlbnQtY2VydGFpbnR5XCIsXHJcbiAgfSxcclxufSBhcyBjb25zdDtcclxuIl19