// <auto-generated/>
// Contents of: hl7.fhir.r2.core version: 1.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/slotstatus|1.0.2
/**
 * The free/busy status of a slot.
 */
export const SlotstatusCodings = {
    /**
     * busy: Indicates that the time interval is busy because one  or more events have been scheduled for that interval.
     */
    Busy: {
        display: "Busy",
        code: "busy",
        system: "http://hl7.org/fhir/slotstatus",
    },
    /**
     * busy-tentative: Indicates that the time interval is busy because one or more events have been tentatively scheduled for that interval.
     */
    BusyTentative: {
        display: "Busy (Tentative)",
        code: "busy-tentative",
        system: "http://hl7.org/fhir/slotstatus",
    },
    /**
     * busy-unavailable: Indicates that the time interval is busy and that the interval can not be scheduled.
     */
    BusyUnavailable: {
        display: "Busy (Unavailable)",
        code: "busy-unavailable",
        system: "http://hl7.org/fhir/slotstatus",
    },
    /**
     * free: Indicates that the time interval is free for scheduling.
     */
    Free: {
        display: "Free",
        code: "free",
        system: "http://hl7.org/fhir/slotstatus",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2xvdHN0YXR1c0NvZGluZ3MuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL1Nsb3RzdGF0dXNDb2RpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQiwrQ0FBK0M7QUFDL0Msa0NBQWtDO0FBQ2xDLCtEQUErRDtBQTBCL0Q7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FBd0I7SUFDcEQ7O09BRUc7SUFDSCxJQUFJLEVBQUU7UUFDSixPQUFPLEVBQUUsTUFBTTtRQUNmLElBQUksRUFBRSxNQUFNO1FBQ1osTUFBTSxFQUFFLGdDQUFnQztLQUN6QztJQUNEOztPQUVHO0lBQ0gsYUFBYSxFQUFFO1FBQ2IsT0FBTyxFQUFFLGtCQUFrQjtRQUMzQixJQUFJLEVBQUUsZ0JBQWdCO1FBQ3RCLE1BQU0sRUFBRSxnQ0FBZ0M7S0FDekM7SUFDRDs7T0FFRztJQUNILGVBQWUsRUFBRTtRQUNmLE9BQU8sRUFBRSxvQkFBb0I7UUFDN0IsSUFBSSxFQUFFLGtCQUFrQjtRQUN4QixNQUFNLEVBQUUsZ0NBQWdDO0tBQ3pDO0lBQ0Q7O09BRUc7SUFDSCxJQUFJLEVBQUU7UUFDSixPQUFPLEVBQUUsTUFBTTtRQUNmLElBQUksRUFBRSxNQUFNO1FBQ1osTUFBTSxFQUFFLGdDQUFnQztLQUN6QztDQUNPLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjIuY29yZSB2ZXJzaW9uOiAxLjAuMlxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvc2xvdHN0YXR1c3wxLjAuMlxyXG5cclxuaW1wb3J0IHsgQ29kaW5nQXJncyB9IGZyb20gJy4uL2ZoaXIvQ29kaW5nLmpzJ1xyXG5cclxuLyoqXHJcbiAqIFRoZSBmcmVlL2J1c3kgc3RhdHVzIG9mIGEgc2xvdC5cclxuICovXHJcbmV4cG9ydCB0eXBlIFNsb3RzdGF0dXNDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIGJ1c3k6IEluZGljYXRlcyB0aGF0IHRoZSB0aW1lIGludGVydmFsIGlzIGJ1c3kgYmVjYXVzZSBvbmUgIG9yIG1vcmUgZXZlbnRzIGhhdmUgYmVlbiBzY2hlZHVsZWQgZm9yIHRoYXQgaW50ZXJ2YWwuXHJcbiAgICovXHJcbiAgQnVzeTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBidXN5LXRlbnRhdGl2ZTogSW5kaWNhdGVzIHRoYXQgdGhlIHRpbWUgaW50ZXJ2YWwgaXMgYnVzeSBiZWNhdXNlIG9uZSBvciBtb3JlIGV2ZW50cyBoYXZlIGJlZW4gdGVudGF0aXZlbHkgc2NoZWR1bGVkIGZvciB0aGF0IGludGVydmFsLlxyXG4gICAqL1xyXG4gIEJ1c3lUZW50YXRpdmU6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogYnVzeS11bmF2YWlsYWJsZTogSW5kaWNhdGVzIHRoYXQgdGhlIHRpbWUgaW50ZXJ2YWwgaXMgYnVzeSBhbmQgdGhhdCB0aGUgaW50ZXJ2YWwgY2FuIG5vdCBiZSBzY2hlZHVsZWQuXHJcbiAgICovXHJcbiAgQnVzeVVuYXZhaWxhYmxlOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIGZyZWU6IEluZGljYXRlcyB0aGF0IHRoZSB0aW1lIGludGVydmFsIGlzIGZyZWUgZm9yIHNjaGVkdWxpbmcuXHJcbiAgICovXHJcbiAgRnJlZTogQ29kaW5nQXJncztcclxufVxyXG5cclxuLyoqXHJcbiAqIFRoZSBmcmVlL2J1c3kgc3RhdHVzIG9mIGEgc2xvdC5cclxuICovXHJcbmV4cG9ydCBjb25zdCBTbG90c3RhdHVzQ29kaW5nczpTbG90c3RhdHVzQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBidXN5OiBJbmRpY2F0ZXMgdGhhdCB0aGUgdGltZSBpbnRlcnZhbCBpcyBidXN5IGJlY2F1c2Ugb25lICBvciBtb3JlIGV2ZW50cyBoYXZlIGJlZW4gc2NoZWR1bGVkIGZvciB0aGF0IGludGVydmFsLlxyXG4gICAqL1xyXG4gIEJ1c3k6IHtcclxuICAgIGRpc3BsYXk6IFwiQnVzeVwiLFxyXG4gICAgY29kZTogXCJidXN5XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9zbG90c3RhdHVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBidXN5LXRlbnRhdGl2ZTogSW5kaWNhdGVzIHRoYXQgdGhlIHRpbWUgaW50ZXJ2YWwgaXMgYnVzeSBiZWNhdXNlIG9uZSBvciBtb3JlIGV2ZW50cyBoYXZlIGJlZW4gdGVudGF0aXZlbHkgc2NoZWR1bGVkIGZvciB0aGF0IGludGVydmFsLlxyXG4gICAqL1xyXG4gIEJ1c3lUZW50YXRpdmU6IHtcclxuICAgIGRpc3BsYXk6IFwiQnVzeSAoVGVudGF0aXZlKVwiLFxyXG4gICAgY29kZTogXCJidXN5LXRlbnRhdGl2ZVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvc2xvdHN0YXR1c1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogYnVzeS11bmF2YWlsYWJsZTogSW5kaWNhdGVzIHRoYXQgdGhlIHRpbWUgaW50ZXJ2YWwgaXMgYnVzeSBhbmQgdGhhdCB0aGUgaW50ZXJ2YWwgY2FuIG5vdCBiZSBzY2hlZHVsZWQuXHJcbiAgICovXHJcbiAgQnVzeVVuYXZhaWxhYmxlOiB7XHJcbiAgICBkaXNwbGF5OiBcIkJ1c3kgKFVuYXZhaWxhYmxlKVwiLFxyXG4gICAgY29kZTogXCJidXN5LXVuYXZhaWxhYmxlXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9zbG90c3RhdHVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBmcmVlOiBJbmRpY2F0ZXMgdGhhdCB0aGUgdGltZSBpbnRlcnZhbCBpcyBmcmVlIGZvciBzY2hlZHVsaW5nLlxyXG4gICAqL1xyXG4gIEZyZWU6IHtcclxuICAgIGRpc3BsYXk6IFwiRnJlZVwiLFxyXG4gICAgY29kZTogXCJmcmVlXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9zbG90c3RhdHVzXCIsXHJcbiAgfSxcclxufSBhcyBjb25zdDtcclxuIl19