// <auto-generated/>
// Contents of: hl7.fhir.r2.core version: 1.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/communication-request-status|1.0.2
/**
 * The status of the communication.
 */
export const CommunicationRequestStatusCodes = {
    /**
     * accepted: The receiving system has accepted the order, but work has not yet commenced.
     */
    Accepted: "accepted",
    /**
     * completed: The work has been complete, the report(s) released, and no further work is planned.
     */
    Completed: "completed",
    /**
     * failed: The communication was attempted, but due to some procedural error, it could not be completed.
     */
    Failed: "failed",
    /**
     * in-progress: The work to fulfill the order is happening.
     */
    InProgress: "in-progress",
    /**
     * planned: The request has been planned.
     */
    Planned: "planned",
    /**
     * proposed: The request has been proposed.
     */
    Proposed: "proposed",
    /**
     * received: The receiving system has received the request but not yet decided whether it will be performed.
     */
    Received: "received",
    /**
     * rejected: The receiving system has declined to fulfill the request
     */
    Rejected: "rejected",
    /**
     * requested: The request has been placed.
     */
    Requested: "requested",
    /**
     * suspended: The request has been held by originating system/user request.
     */
    Suspended: "suspended",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29tbXVuaWNhdGlvblJlcXVlc3RTdGF0dXNDb2Rlcy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvQ29tbXVuaWNhdGlvblJlcXVlc3RTdGF0dXNDb2Rlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyxpRkFBaUY7QUFFakY7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSwrQkFBK0IsR0FBRztJQUM3Qzs7T0FFRztJQUNILFFBQVEsRUFBRSxVQUFVO0lBQ3BCOztPQUVHO0lBQ0gsU0FBUyxFQUFFLFdBQVc7SUFDdEI7O09BRUc7SUFDSCxNQUFNLEVBQUUsUUFBUTtJQUNoQjs7T0FFRztJQUNILFVBQVUsRUFBRSxhQUFhO0lBQ3pCOztPQUVHO0lBQ0gsT0FBTyxFQUFFLFNBQVM7SUFDbEI7O09BRUc7SUFDSCxRQUFRLEVBQUUsVUFBVTtJQUNwQjs7T0FFRztJQUNILFFBQVEsRUFBRSxVQUFVO0lBQ3BCOztPQUVHO0lBQ0gsUUFBUSxFQUFFLFVBQVU7SUFDcEI7O09BRUc7SUFDSCxTQUFTLEVBQUUsV0FBVztJQUN0Qjs7T0FFRztJQUNILFNBQVMsRUFBRSxXQUFXO0NBQ2QsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yMi5jb3JlIHZlcnNpb246IDEuMC4yXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9jb21tdW5pY2F0aW9uLXJlcXVlc3Qtc3RhdHVzfDEuMC4yXHJcblxyXG4vKipcclxuICogVGhlIHN0YXR1cyBvZiB0aGUgY29tbXVuaWNhdGlvbi5cclxuICovXHJcbmV4cG9ydCBjb25zdCBDb21tdW5pY2F0aW9uUmVxdWVzdFN0YXR1c0NvZGVzID0ge1xyXG4gIC8qKlxyXG4gICAqIGFjY2VwdGVkOiBUaGUgcmVjZWl2aW5nIHN5c3RlbSBoYXMgYWNjZXB0ZWQgdGhlIG9yZGVyLCBidXQgd29yayBoYXMgbm90IHlldCBjb21tZW5jZWQuXHJcbiAgICovXHJcbiAgQWNjZXB0ZWQ6IFwiYWNjZXB0ZWRcIixcclxuICAvKipcclxuICAgKiBjb21wbGV0ZWQ6IFRoZSB3b3JrIGhhcyBiZWVuIGNvbXBsZXRlLCB0aGUgcmVwb3J0KHMpIHJlbGVhc2VkLCBhbmQgbm8gZnVydGhlciB3b3JrIGlzIHBsYW5uZWQuXHJcbiAgICovXHJcbiAgQ29tcGxldGVkOiBcImNvbXBsZXRlZFwiLFxyXG4gIC8qKlxyXG4gICAqIGZhaWxlZDogVGhlIGNvbW11bmljYXRpb24gd2FzIGF0dGVtcHRlZCwgYnV0IGR1ZSB0byBzb21lIHByb2NlZHVyYWwgZXJyb3IsIGl0IGNvdWxkIG5vdCBiZSBjb21wbGV0ZWQuXHJcbiAgICovXHJcbiAgRmFpbGVkOiBcImZhaWxlZFwiLFxyXG4gIC8qKlxyXG4gICAqIGluLXByb2dyZXNzOiBUaGUgd29yayB0byBmdWxmaWxsIHRoZSBvcmRlciBpcyBoYXBwZW5pbmcuXHJcbiAgICovXHJcbiAgSW5Qcm9ncmVzczogXCJpbi1wcm9ncmVzc1wiLFxyXG4gIC8qKlxyXG4gICAqIHBsYW5uZWQ6IFRoZSByZXF1ZXN0IGhhcyBiZWVuIHBsYW5uZWQuXHJcbiAgICovXHJcbiAgUGxhbm5lZDogXCJwbGFubmVkXCIsXHJcbiAgLyoqXHJcbiAgICogcHJvcG9zZWQ6IFRoZSByZXF1ZXN0IGhhcyBiZWVuIHByb3Bvc2VkLlxyXG4gICAqL1xyXG4gIFByb3Bvc2VkOiBcInByb3Bvc2VkXCIsXHJcbiAgLyoqXHJcbiAgICogcmVjZWl2ZWQ6IFRoZSByZWNlaXZpbmcgc3lzdGVtIGhhcyByZWNlaXZlZCB0aGUgcmVxdWVzdCBidXQgbm90IHlldCBkZWNpZGVkIHdoZXRoZXIgaXQgd2lsbCBiZSBwZXJmb3JtZWQuXHJcbiAgICovXHJcbiAgUmVjZWl2ZWQ6IFwicmVjZWl2ZWRcIixcclxuICAvKipcclxuICAgKiByZWplY3RlZDogVGhlIHJlY2VpdmluZyBzeXN0ZW0gaGFzIGRlY2xpbmVkIHRvIGZ1bGZpbGwgdGhlIHJlcXVlc3RcclxuICAgKi9cclxuICBSZWplY3RlZDogXCJyZWplY3RlZFwiLFxyXG4gIC8qKlxyXG4gICAqIHJlcXVlc3RlZDogVGhlIHJlcXVlc3QgaGFzIGJlZW4gcGxhY2VkLlxyXG4gICAqL1xyXG4gIFJlcXVlc3RlZDogXCJyZXF1ZXN0ZWRcIixcclxuICAvKipcclxuICAgKiBzdXNwZW5kZWQ6IFRoZSByZXF1ZXN0IGhhcyBiZWVuIGhlbGQgYnkgb3JpZ2luYXRpbmcgc3lzdGVtL3VzZXIgcmVxdWVzdC5cclxuICAgKi9cclxuICBTdXNwZW5kZWQ6IFwic3VzcGVuZGVkXCIsXHJcbn0gYXMgY29uc3Q7XHJcblxyXG4vKipcclxuICogVGhlIHN0YXR1cyBvZiB0aGUgY29tbXVuaWNhdGlvbi5cclxuICovXHJcbmV4cG9ydCB0eXBlIENvbW11bmljYXRpb25SZXF1ZXN0U3RhdHVzQ29kZVR5cGUgPSB0eXBlb2YgQ29tbXVuaWNhdGlvblJlcXVlc3RTdGF0dXNDb2Rlc1trZXlvZiB0eXBlb2YgQ29tbXVuaWNhdGlvblJlcXVlc3RTdGF0dXNDb2Rlc107XHJcbiJdfQ==