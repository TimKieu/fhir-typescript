// <auto-generated/>
// Contents of: hl7.fhir.r2.core version: 1.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/filter-operator|1.0.2
/**
 * The kind of operation to perform as a part of a property based filter.
 */
export const FilterOperatorCodes = {
    /**
     * =: The specified property of the code equals the provided value.
     */
    Equals: "=",
    /**
     * in: The specified property of the code is in the set of codes or concepts specified in the provided value (comma separated list).
     */
    InSet: "in",
    /**
     * is-a: Includes all concept ids that have a transitive is-a relationship with the concept Id provided as the value, including the provided concept itself.
     */
    IsABySubsumption: "is-a",
    /**
     * is-not-a: The specified property of the code does not have an is-a relationship with the provided value.
     */
    NotIsABySubsumption: "is-not-a",
    /**
     * not-in: The specified property of the code is not in the set of codes or concepts specified in the provided value (comma separated list).
     */
    NotInSet: "not-in",
    /**
     * regex: The specified property of the code  matches the regex specified in the provided value.
     */
    RegularExpression: "regex",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRmlsdGVyT3BlcmF0b3JDb2Rlcy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvRmlsdGVyT3BlcmF0b3JDb2Rlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyxvRUFBb0U7QUFFcEU7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxtQkFBbUIsR0FBRztJQUNqQzs7T0FFRztJQUNILE1BQU0sRUFBRSxHQUFHO0lBQ1g7O09BRUc7SUFDSCxLQUFLLEVBQUUsSUFBSTtJQUNYOztPQUVHO0lBQ0gsZ0JBQWdCLEVBQUUsTUFBTTtJQUN4Qjs7T0FFRztJQUNILG1CQUFtQixFQUFFLFVBQVU7SUFDL0I7O09BRUc7SUFDSCxRQUFRLEVBQUUsUUFBUTtJQUNsQjs7T0FFRztJQUNILGlCQUFpQixFQUFFLE9BQU87Q0FDbEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yMi5jb3JlIHZlcnNpb246IDEuMC4yXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9maWx0ZXItb3BlcmF0b3J8MS4wLjJcclxuXHJcbi8qKlxyXG4gKiBUaGUga2luZCBvZiBvcGVyYXRpb24gdG8gcGVyZm9ybSBhcyBhIHBhcnQgb2YgYSBwcm9wZXJ0eSBiYXNlZCBmaWx0ZXIuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgRmlsdGVyT3BlcmF0b3JDb2RlcyA9IHtcclxuICAvKipcclxuICAgKiA9OiBUaGUgc3BlY2lmaWVkIHByb3BlcnR5IG9mIHRoZSBjb2RlIGVxdWFscyB0aGUgcHJvdmlkZWQgdmFsdWUuXHJcbiAgICovXHJcbiAgRXF1YWxzOiBcIj1cIixcclxuICAvKipcclxuICAgKiBpbjogVGhlIHNwZWNpZmllZCBwcm9wZXJ0eSBvZiB0aGUgY29kZSBpcyBpbiB0aGUgc2V0IG9mIGNvZGVzIG9yIGNvbmNlcHRzIHNwZWNpZmllZCBpbiB0aGUgcHJvdmlkZWQgdmFsdWUgKGNvbW1hIHNlcGFyYXRlZCBsaXN0KS5cclxuICAgKi9cclxuICBJblNldDogXCJpblwiLFxyXG4gIC8qKlxyXG4gICAqIGlzLWE6IEluY2x1ZGVzIGFsbCBjb25jZXB0IGlkcyB0aGF0IGhhdmUgYSB0cmFuc2l0aXZlIGlzLWEgcmVsYXRpb25zaGlwIHdpdGggdGhlIGNvbmNlcHQgSWQgcHJvdmlkZWQgYXMgdGhlIHZhbHVlLCBpbmNsdWRpbmcgdGhlIHByb3ZpZGVkIGNvbmNlcHQgaXRzZWxmLlxyXG4gICAqL1xyXG4gIElzQUJ5U3Vic3VtcHRpb246IFwiaXMtYVwiLFxyXG4gIC8qKlxyXG4gICAqIGlzLW5vdC1hOiBUaGUgc3BlY2lmaWVkIHByb3BlcnR5IG9mIHRoZSBjb2RlIGRvZXMgbm90IGhhdmUgYW4gaXMtYSByZWxhdGlvbnNoaXAgd2l0aCB0aGUgcHJvdmlkZWQgdmFsdWUuXHJcbiAgICovXHJcbiAgTm90SXNBQnlTdWJzdW1wdGlvbjogXCJpcy1ub3QtYVwiLFxyXG4gIC8qKlxyXG4gICAqIG5vdC1pbjogVGhlIHNwZWNpZmllZCBwcm9wZXJ0eSBvZiB0aGUgY29kZSBpcyBub3QgaW4gdGhlIHNldCBvZiBjb2RlcyBvciBjb25jZXB0cyBzcGVjaWZpZWQgaW4gdGhlIHByb3ZpZGVkIHZhbHVlIChjb21tYSBzZXBhcmF0ZWQgbGlzdCkuXHJcbiAgICovXHJcbiAgTm90SW5TZXQ6IFwibm90LWluXCIsXHJcbiAgLyoqXHJcbiAgICogcmVnZXg6IFRoZSBzcGVjaWZpZWQgcHJvcGVydHkgb2YgdGhlIGNvZGUgIG1hdGNoZXMgdGhlIHJlZ2V4IHNwZWNpZmllZCBpbiB0aGUgcHJvdmlkZWQgdmFsdWUuXHJcbiAgICovXHJcbiAgUmVndWxhckV4cHJlc3Npb246IFwicmVnZXhcIixcclxufSBhcyBjb25zdDtcclxuXHJcbi8qKlxyXG4gKiBUaGUga2luZCBvZiBvcGVyYXRpb24gdG8gcGVyZm9ybSBhcyBhIHBhcnQgb2YgYSBwcm9wZXJ0eSBiYXNlZCBmaWx0ZXIuXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBGaWx0ZXJPcGVyYXRvckNvZGVUeXBlID0gdHlwZW9mIEZpbHRlck9wZXJhdG9yQ29kZXNba2V5b2YgdHlwZW9mIEZpbHRlck9wZXJhdG9yQ29kZXNdO1xyXG4iXX0=