// <auto-generated/>
// Contents of: hl7.fhir.r2.core version: 1.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/diagnostic-report-status|1.0.2
/**
 * The status of the diagnostic report as a whole.
 */
export const DiagnosticReportStatusCodes = {
    /**
     * appended: The report has been modified subsequent to being Final, and is complete and verified by an authorized person. New content has been added, but existing content hasn't changed.
     */
    Appended: "appended",
    /**
     * cancelled: The report is unavailable because the measurement was not started or not completed (also sometimes called "aborted").
     */
    Cancelled: "cancelled",
    /**
     * corrected: The report has been modified subsequent to being Final, and is complete and verified by an authorized person. New content has been added, but existing content hasn't changed
     */
    Corrected: "corrected",
    /**
     * entered-in-error: The report has been withdrawn following a previous final release.
     */
    EnteredInError: "entered-in-error",
    /**
     * final: The report is complete and verified by an authorized person.
     */
    Final: "final",
    /**
     * partial: This is a partial (e.g. initial, interim or preliminary) report: data in the report may be incomplete or unverified.
     */
    Partial: "partial",
    /**
     * registered: The existence of the report is registered, but there is nothing yet available.
     */
    Registered: "registered",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGlhZ25vc3RpY1JlcG9ydFN0YXR1c0NvZGVzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9EaWFnbm9zdGljUmVwb3J0U3RhdHVzQ29kZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLCtDQUErQztBQUMvQyxrQ0FBa0M7QUFDbEMsNkVBQTZFO0FBRTdFOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sMkJBQTJCLEdBQUc7SUFDekM7O09BRUc7SUFDSCxRQUFRLEVBQUUsVUFBVTtJQUNwQjs7T0FFRztJQUNILFNBQVMsRUFBRSxXQUFXO0lBQ3RCOztPQUVHO0lBQ0gsU0FBUyxFQUFFLFdBQVc7SUFDdEI7O09BRUc7SUFDSCxjQUFjLEVBQUUsa0JBQWtCO0lBQ2xDOztPQUVHO0lBQ0gsS0FBSyxFQUFFLE9BQU87SUFDZDs7T0FFRztJQUNILE9BQU8sRUFBRSxTQUFTO0lBQ2xCOztPQUVHO0lBQ0gsVUFBVSxFQUFFLFlBQVk7Q0FDaEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yMi5jb3JlIHZlcnNpb246IDEuMC4yXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9kaWFnbm9zdGljLXJlcG9ydC1zdGF0dXN8MS4wLjJcclxuXHJcbi8qKlxyXG4gKiBUaGUgc3RhdHVzIG9mIHRoZSBkaWFnbm9zdGljIHJlcG9ydCBhcyBhIHdob2xlLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IERpYWdub3N0aWNSZXBvcnRTdGF0dXNDb2RlcyA9IHtcclxuICAvKipcclxuICAgKiBhcHBlbmRlZDogVGhlIHJlcG9ydCBoYXMgYmVlbiBtb2RpZmllZCBzdWJzZXF1ZW50IHRvIGJlaW5nIEZpbmFsLCBhbmQgaXMgY29tcGxldGUgYW5kIHZlcmlmaWVkIGJ5IGFuIGF1dGhvcml6ZWQgcGVyc29uLiBOZXcgY29udGVudCBoYXMgYmVlbiBhZGRlZCwgYnV0IGV4aXN0aW5nIGNvbnRlbnQgaGFzbid0IGNoYW5nZWQuXHJcbiAgICovXHJcbiAgQXBwZW5kZWQ6IFwiYXBwZW5kZWRcIixcclxuICAvKipcclxuICAgKiBjYW5jZWxsZWQ6IFRoZSByZXBvcnQgaXMgdW5hdmFpbGFibGUgYmVjYXVzZSB0aGUgbWVhc3VyZW1lbnQgd2FzIG5vdCBzdGFydGVkIG9yIG5vdCBjb21wbGV0ZWQgKGFsc28gc29tZXRpbWVzIGNhbGxlZCBcImFib3J0ZWRcIikuXHJcbiAgICovXHJcbiAgQ2FuY2VsbGVkOiBcImNhbmNlbGxlZFwiLFxyXG4gIC8qKlxyXG4gICAqIGNvcnJlY3RlZDogVGhlIHJlcG9ydCBoYXMgYmVlbiBtb2RpZmllZCBzdWJzZXF1ZW50IHRvIGJlaW5nIEZpbmFsLCBhbmQgaXMgY29tcGxldGUgYW5kIHZlcmlmaWVkIGJ5IGFuIGF1dGhvcml6ZWQgcGVyc29uLiBOZXcgY29udGVudCBoYXMgYmVlbiBhZGRlZCwgYnV0IGV4aXN0aW5nIGNvbnRlbnQgaGFzbid0IGNoYW5nZWRcclxuICAgKi9cclxuICBDb3JyZWN0ZWQ6IFwiY29ycmVjdGVkXCIsXHJcbiAgLyoqXHJcbiAgICogZW50ZXJlZC1pbi1lcnJvcjogVGhlIHJlcG9ydCBoYXMgYmVlbiB3aXRoZHJhd24gZm9sbG93aW5nIGEgcHJldmlvdXMgZmluYWwgcmVsZWFzZS5cclxuICAgKi9cclxuICBFbnRlcmVkSW5FcnJvcjogXCJlbnRlcmVkLWluLWVycm9yXCIsXHJcbiAgLyoqXHJcbiAgICogZmluYWw6IFRoZSByZXBvcnQgaXMgY29tcGxldGUgYW5kIHZlcmlmaWVkIGJ5IGFuIGF1dGhvcml6ZWQgcGVyc29uLlxyXG4gICAqL1xyXG4gIEZpbmFsOiBcImZpbmFsXCIsXHJcbiAgLyoqXHJcbiAgICogcGFydGlhbDogVGhpcyBpcyBhIHBhcnRpYWwgKGUuZy4gaW5pdGlhbCwgaW50ZXJpbSBvciBwcmVsaW1pbmFyeSkgcmVwb3J0OiBkYXRhIGluIHRoZSByZXBvcnQgbWF5IGJlIGluY29tcGxldGUgb3IgdW52ZXJpZmllZC5cclxuICAgKi9cclxuICBQYXJ0aWFsOiBcInBhcnRpYWxcIixcclxuICAvKipcclxuICAgKiByZWdpc3RlcmVkOiBUaGUgZXhpc3RlbmNlIG9mIHRoZSByZXBvcnQgaXMgcmVnaXN0ZXJlZCwgYnV0IHRoZXJlIGlzIG5vdGhpbmcgeWV0IGF2YWlsYWJsZS5cclxuICAgKi9cclxuICBSZWdpc3RlcmVkOiBcInJlZ2lzdGVyZWRcIixcclxufSBhcyBjb25zdDtcclxuXHJcbi8qKlxyXG4gKiBUaGUgc3RhdHVzIG9mIHRoZSBkaWFnbm9zdGljIHJlcG9ydCBhcyBhIHdob2xlLlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgRGlhZ25vc3RpY1JlcG9ydFN0YXR1c0NvZGVUeXBlID0gdHlwZW9mIERpYWdub3N0aWNSZXBvcnRTdGF0dXNDb2Rlc1trZXlvZiB0eXBlb2YgRGlhZ25vc3RpY1JlcG9ydFN0YXR1c0NvZGVzXTtcclxuIl19