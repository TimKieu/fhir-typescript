// <auto-generated/>
// Contents of: hl7.fhir.r2.core version: 1.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/order-status|1.0.2
/**
 * The status of the response to an order.
 */
export const OrderStatusCodings = {
    /**
     * aborted: Processing the order was stopped because of some workflow/business logic reason.
     */
    Aborted: {
        display: "Aborted",
        code: "aborted",
        system: "http://hl7.org/fhir/order-status",
    },
    /**
     * accepted: The order has been accepted, and work is in progress.
     */
    Accepted: {
        display: "Accepted",
        code: "accepted",
        system: "http://hl7.org/fhir/order-status",
    },
    /**
     * cancelled: Processing the order was halted at the initiators request.
     */
    Cancelled: {
        display: "Cancelled",
        code: "cancelled",
        system: "http://hl7.org/fhir/order-status",
    },
    /**
     * completed: The order has been completed.
     */
    Completed: {
        display: "Completed",
        code: "completed",
        system: "http://hl7.org/fhir/order-status",
    },
    /**
     * error: The order was unable to be processed because of a technical error (i.e. unexpected error)
     */
    Error: {
        display: "Error",
        code: "error",
        system: "http://hl7.org/fhir/order-status",
    },
    /**
     * pending: The order is known, but no processing has occurred at this time
     */
    Pending: {
        display: "Pending",
        code: "pending",
        system: "http://hl7.org/fhir/order-status",
    },
    /**
     * rejected: The order was rejected because of a workflow/business logic reason
     */
    Rejected: {
        display: "Rejected",
        code: "rejected",
        system: "http://hl7.org/fhir/order-status",
    },
    /**
     * replaced: The order has been cancelled and replaced by another.
     */
    Replaced: {
        display: "Replaced",
        code: "replaced",
        system: "http://hl7.org/fhir/order-status",
    },
    /**
     * review: The order is undergoing initial processing to determine whether it will be accepted (usually this involves human review)
     */
    Review: {
        display: "Review",
        code: "review",
        system: "http://hl7.org/fhir/order-status",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiT3JkZXJTdGF0dXNDb2RpbmdzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9PcmRlclN0YXR1c0NvZGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLCtDQUErQztBQUMvQyxrQ0FBa0M7QUFDbEMsaUVBQWlFO0FBOENqRTs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLGtCQUFrQixHQUF5QjtJQUN0RDs7T0FFRztJQUNILE9BQU8sRUFBRTtRQUNQLE9BQU8sRUFBRSxTQUFTO1FBQ2xCLElBQUksRUFBRSxTQUFTO1FBQ2YsTUFBTSxFQUFFLGtDQUFrQztLQUMzQztJQUNEOztPQUVHO0lBQ0gsUUFBUSxFQUFFO1FBQ1IsT0FBTyxFQUFFLFVBQVU7UUFDbkIsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLGtDQUFrQztLQUMzQztJQUNEOztPQUVHO0lBQ0gsU0FBUyxFQUFFO1FBQ1QsT0FBTyxFQUFFLFdBQVc7UUFDcEIsSUFBSSxFQUFFLFdBQVc7UUFDakIsTUFBTSxFQUFFLGtDQUFrQztLQUMzQztJQUNEOztPQUVHO0lBQ0gsU0FBUyxFQUFFO1FBQ1QsT0FBTyxFQUFFLFdBQVc7UUFDcEIsSUFBSSxFQUFFLFdBQVc7UUFDakIsTUFBTSxFQUFFLGtDQUFrQztLQUMzQztJQUNEOztPQUVHO0lBQ0gsS0FBSyxFQUFFO1FBQ0wsT0FBTyxFQUFFLE9BQU87UUFDaEIsSUFBSSxFQUFFLE9BQU87UUFDYixNQUFNLEVBQUUsa0NBQWtDO0tBQzNDO0lBQ0Q7O09BRUc7SUFDSCxPQUFPLEVBQUU7UUFDUCxPQUFPLEVBQUUsU0FBUztRQUNsQixJQUFJLEVBQUUsU0FBUztRQUNmLE1BQU0sRUFBRSxrQ0FBa0M7S0FDM0M7SUFDRDs7T0FFRztJQUNILFFBQVEsRUFBRTtRQUNSLE9BQU8sRUFBRSxVQUFVO1FBQ25CLElBQUksRUFBRSxVQUFVO1FBQ2hCLE1BQU0sRUFBRSxrQ0FBa0M7S0FDM0M7SUFDRDs7T0FFRztJQUNILFFBQVEsRUFBRTtRQUNSLE9BQU8sRUFBRSxVQUFVO1FBQ25CLElBQUksRUFBRSxVQUFVO1FBQ2hCLE1BQU0sRUFBRSxrQ0FBa0M7S0FDM0M7SUFDRDs7T0FFRztJQUNILE1BQU0sRUFBRTtRQUNOLE9BQU8sRUFBRSxRQUFRO1FBQ2pCLElBQUksRUFBRSxRQUFRO1FBQ2QsTUFBTSxFQUFFLGtDQUFrQztLQUMzQztDQUNPLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjIuY29yZSB2ZXJzaW9uOiAxLjAuMlxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvb3JkZXItc3RhdHVzfDEuMC4yXHJcblxyXG5pbXBvcnQgeyBDb2RpbmdBcmdzIH0gZnJvbSAnLi4vZmhpci9Db2RpbmcuanMnXHJcblxyXG4vKipcclxuICogVGhlIHN0YXR1cyBvZiB0aGUgcmVzcG9uc2UgdG8gYW4gb3JkZXIuXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBPcmRlclN0YXR1c0NvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogYWJvcnRlZDogUHJvY2Vzc2luZyB0aGUgb3JkZXIgd2FzIHN0b3BwZWQgYmVjYXVzZSBvZiBzb21lIHdvcmtmbG93L2J1c2luZXNzIGxvZ2ljIHJlYXNvbi5cclxuICAgKi9cclxuICBBYm9ydGVkOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIGFjY2VwdGVkOiBUaGUgb3JkZXIgaGFzIGJlZW4gYWNjZXB0ZWQsIGFuZCB3b3JrIGlzIGluIHByb2dyZXNzLlxyXG4gICAqL1xyXG4gIEFjY2VwdGVkOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIGNhbmNlbGxlZDogUHJvY2Vzc2luZyB0aGUgb3JkZXIgd2FzIGhhbHRlZCBhdCB0aGUgaW5pdGlhdG9ycyByZXF1ZXN0LlxyXG4gICAqL1xyXG4gIENhbmNlbGxlZDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBjb21wbGV0ZWQ6IFRoZSBvcmRlciBoYXMgYmVlbiBjb21wbGV0ZWQuXHJcbiAgICovXHJcbiAgQ29tcGxldGVkOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIGVycm9yOiBUaGUgb3JkZXIgd2FzIHVuYWJsZSB0byBiZSBwcm9jZXNzZWQgYmVjYXVzZSBvZiBhIHRlY2huaWNhbCBlcnJvciAoaS5lLiB1bmV4cGVjdGVkIGVycm9yKVxyXG4gICAqL1xyXG4gIEVycm9yOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIHBlbmRpbmc6IFRoZSBvcmRlciBpcyBrbm93biwgYnV0IG5vIHByb2Nlc3NpbmcgaGFzIG9jY3VycmVkIGF0IHRoaXMgdGltZVxyXG4gICAqL1xyXG4gIFBlbmRpbmc6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogcmVqZWN0ZWQ6IFRoZSBvcmRlciB3YXMgcmVqZWN0ZWQgYmVjYXVzZSBvZiBhIHdvcmtmbG93L2J1c2luZXNzIGxvZ2ljIHJlYXNvblxyXG4gICAqL1xyXG4gIFJlamVjdGVkOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIHJlcGxhY2VkOiBUaGUgb3JkZXIgaGFzIGJlZW4gY2FuY2VsbGVkIGFuZCByZXBsYWNlZCBieSBhbm90aGVyLlxyXG4gICAqL1xyXG4gIFJlcGxhY2VkOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIHJldmlldzogVGhlIG9yZGVyIGlzIHVuZGVyZ29pbmcgaW5pdGlhbCBwcm9jZXNzaW5nIHRvIGRldGVybWluZSB3aGV0aGVyIGl0IHdpbGwgYmUgYWNjZXB0ZWQgKHVzdWFsbHkgdGhpcyBpbnZvbHZlcyBodW1hbiByZXZpZXcpXHJcbiAgICovXHJcbiAgUmV2aWV3OiBDb2RpbmdBcmdzO1xyXG59XHJcblxyXG4vKipcclxuICogVGhlIHN0YXR1cyBvZiB0aGUgcmVzcG9uc2UgdG8gYW4gb3JkZXIuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgT3JkZXJTdGF0dXNDb2RpbmdzOk9yZGVyU3RhdHVzQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBhYm9ydGVkOiBQcm9jZXNzaW5nIHRoZSBvcmRlciB3YXMgc3RvcHBlZCBiZWNhdXNlIG9mIHNvbWUgd29ya2Zsb3cvYnVzaW5lc3MgbG9naWMgcmVhc29uLlxyXG4gICAqL1xyXG4gIEFib3J0ZWQ6IHtcclxuICAgIGRpc3BsYXk6IFwiQWJvcnRlZFwiLFxyXG4gICAgY29kZTogXCJhYm9ydGVkXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9vcmRlci1zdGF0dXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIGFjY2VwdGVkOiBUaGUgb3JkZXIgaGFzIGJlZW4gYWNjZXB0ZWQsIGFuZCB3b3JrIGlzIGluIHByb2dyZXNzLlxyXG4gICAqL1xyXG4gIEFjY2VwdGVkOiB7XHJcbiAgICBkaXNwbGF5OiBcIkFjY2VwdGVkXCIsXHJcbiAgICBjb2RlOiBcImFjY2VwdGVkXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9vcmRlci1zdGF0dXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIGNhbmNlbGxlZDogUHJvY2Vzc2luZyB0aGUgb3JkZXIgd2FzIGhhbHRlZCBhdCB0aGUgaW5pdGlhdG9ycyByZXF1ZXN0LlxyXG4gICAqL1xyXG4gIENhbmNlbGxlZDoge1xyXG4gICAgZGlzcGxheTogXCJDYW5jZWxsZWRcIixcclxuICAgIGNvZGU6IFwiY2FuY2VsbGVkXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9vcmRlci1zdGF0dXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIGNvbXBsZXRlZDogVGhlIG9yZGVyIGhhcyBiZWVuIGNvbXBsZXRlZC5cclxuICAgKi9cclxuICBDb21wbGV0ZWQ6IHtcclxuICAgIGRpc3BsYXk6IFwiQ29tcGxldGVkXCIsXHJcbiAgICBjb2RlOiBcImNvbXBsZXRlZFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvb3JkZXItc3RhdHVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBlcnJvcjogVGhlIG9yZGVyIHdhcyB1bmFibGUgdG8gYmUgcHJvY2Vzc2VkIGJlY2F1c2Ugb2YgYSB0ZWNobmljYWwgZXJyb3IgKGkuZS4gdW5leHBlY3RlZCBlcnJvcilcclxuICAgKi9cclxuICBFcnJvcjoge1xyXG4gICAgZGlzcGxheTogXCJFcnJvclwiLFxyXG4gICAgY29kZTogXCJlcnJvclwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvb3JkZXItc3RhdHVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBwZW5kaW5nOiBUaGUgb3JkZXIgaXMga25vd24sIGJ1dCBubyBwcm9jZXNzaW5nIGhhcyBvY2N1cnJlZCBhdCB0aGlzIHRpbWVcclxuICAgKi9cclxuICBQZW5kaW5nOiB7XHJcbiAgICBkaXNwbGF5OiBcIlBlbmRpbmdcIixcclxuICAgIGNvZGU6IFwicGVuZGluZ1wiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvb3JkZXItc3RhdHVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiByZWplY3RlZDogVGhlIG9yZGVyIHdhcyByZWplY3RlZCBiZWNhdXNlIG9mIGEgd29ya2Zsb3cvYnVzaW5lc3MgbG9naWMgcmVhc29uXHJcbiAgICovXHJcbiAgUmVqZWN0ZWQ6IHtcclxuICAgIGRpc3BsYXk6IFwiUmVqZWN0ZWRcIixcclxuICAgIGNvZGU6IFwicmVqZWN0ZWRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL29yZGVyLXN0YXR1c1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogcmVwbGFjZWQ6IFRoZSBvcmRlciBoYXMgYmVlbiBjYW5jZWxsZWQgYW5kIHJlcGxhY2VkIGJ5IGFub3RoZXIuXHJcbiAgICovXHJcbiAgUmVwbGFjZWQ6IHtcclxuICAgIGRpc3BsYXk6IFwiUmVwbGFjZWRcIixcclxuICAgIGNvZGU6IFwicmVwbGFjZWRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL29yZGVyLXN0YXR1c1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogcmV2aWV3OiBUaGUgb3JkZXIgaXMgdW5kZXJnb2luZyBpbml0aWFsIHByb2Nlc3NpbmcgdG8gZGV0ZXJtaW5lIHdoZXRoZXIgaXQgd2lsbCBiZSBhY2NlcHRlZCAodXN1YWxseSB0aGlzIGludm9sdmVzIGh1bWFuIHJldmlldylcclxuICAgKi9cclxuICBSZXZpZXc6IHtcclxuICAgIGRpc3BsYXk6IFwiUmV2aWV3XCIsXHJcbiAgICBjb2RlOiBcInJldmlld1wiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvb3JkZXItc3RhdHVzXCIsXHJcbiAgfSxcclxufSBhcyBjb25zdDtcclxuIl19