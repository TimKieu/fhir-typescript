// <auto-generated/>
// Contents of: hl7.fhir.r2.core version: 1.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/goal-status|1.0.2
/**
 * Indicates whether the goal has been met and is still being targeted
 */
export const GoalStatusCodings = {
    /**
     * accepted: A proposed goal was accepted
     */
    Accepted: {
        display: "Accepted",
        code: "accepted",
        system: "http://hl7.org/fhir/goal-status",
    },
    /**
     * achieved: The goal has been met and no further action is needed
     */
    Achieved: {
        display: "Achieved",
        code: "achieved",
        system: "http://hl7.org/fhir/goal-status",
    },
    /**
     * cancelled: The goal is no longer being sought
     */
    Cancelled: {
        display: "Cancelled",
        code: "cancelled",
        system: "http://hl7.org/fhir/goal-status",
    },
    /**
     * in-progress: The goal is being sought but has not yet been reached.  (Also applies if goal was reached in the past but there has been regression and goal is being sought again)
     */
    InProgress: {
        display: "In Progress",
        code: "in-progress",
        system: "http://hl7.org/fhir/goal-status",
    },
    /**
     * on-hold: The goal remains a long term objective but is no longer being actively pursued for a temporary period of time.
     */
    OnHold: {
        display: "On Hold",
        code: "on-hold",
        system: "http://hl7.org/fhir/goal-status",
    },
    /**
     * planned: A goal is planned for this patient
     */
    Planned: {
        display: "Planned",
        code: "planned",
        system: "http://hl7.org/fhir/goal-status",
    },
    /**
     * proposed: A goal is proposed for this patient
     */
    Proposed: {
        display: "Proposed",
        code: "proposed",
        system: "http://hl7.org/fhir/goal-status",
    },
    /**
     * rejected: A proposed goal was rejected
     */
    Rejected: {
        display: "Rejected",
        code: "rejected",
        system: "http://hl7.org/fhir/goal-status",
    },
    /**
     * sustaining: The goal has been met, but ongoing activity is needed to sustain the goal objective
     */
    Sustaining: {
        display: "Sustaining",
        code: "sustaining",
        system: "http://hl7.org/fhir/goal-status",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR29hbFN0YXR1c0NvZGluZ3MuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL0dvYWxTdGF0dXNDb2RpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQiwrQ0FBK0M7QUFDL0Msa0NBQWtDO0FBQ2xDLGdFQUFnRTtBQThDaEU7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FBd0I7SUFDcEQ7O09BRUc7SUFDSCxRQUFRLEVBQUU7UUFDUixPQUFPLEVBQUUsVUFBVTtRQUNuQixJQUFJLEVBQUUsVUFBVTtRQUNoQixNQUFNLEVBQUUsaUNBQWlDO0tBQzFDO0lBQ0Q7O09BRUc7SUFDSCxRQUFRLEVBQUU7UUFDUixPQUFPLEVBQUUsVUFBVTtRQUNuQixJQUFJLEVBQUUsVUFBVTtRQUNoQixNQUFNLEVBQUUsaUNBQWlDO0tBQzFDO0lBQ0Q7O09BRUc7SUFDSCxTQUFTLEVBQUU7UUFDVCxPQUFPLEVBQUUsV0FBVztRQUNwQixJQUFJLEVBQUUsV0FBVztRQUNqQixNQUFNLEVBQUUsaUNBQWlDO0tBQzFDO0lBQ0Q7O09BRUc7SUFDSCxVQUFVLEVBQUU7UUFDVixPQUFPLEVBQUUsYUFBYTtRQUN0QixJQUFJLEVBQUUsYUFBYTtRQUNuQixNQUFNLEVBQUUsaUNBQWlDO0tBQzFDO0lBQ0Q7O09BRUc7SUFDSCxNQUFNLEVBQUU7UUFDTixPQUFPLEVBQUUsU0FBUztRQUNsQixJQUFJLEVBQUUsU0FBUztRQUNmLE1BQU0sRUFBRSxpQ0FBaUM7S0FDMUM7SUFDRDs7T0FFRztJQUNILE9BQU8sRUFBRTtRQUNQLE9BQU8sRUFBRSxTQUFTO1FBQ2xCLElBQUksRUFBRSxTQUFTO1FBQ2YsTUFBTSxFQUFFLGlDQUFpQztLQUMxQztJQUNEOztPQUVHO0lBQ0gsUUFBUSxFQUFFO1FBQ1IsT0FBTyxFQUFFLFVBQVU7UUFDbkIsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLGlDQUFpQztLQUMxQztJQUNEOztPQUVHO0lBQ0gsUUFBUSxFQUFFO1FBQ1IsT0FBTyxFQUFFLFVBQVU7UUFDbkIsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLGlDQUFpQztLQUMxQztJQUNEOztPQUVHO0lBQ0gsVUFBVSxFQUFFO1FBQ1YsT0FBTyxFQUFFLFlBQVk7UUFDckIsSUFBSSxFQUFFLFlBQVk7UUFDbEIsTUFBTSxFQUFFLGlDQUFpQztLQUMxQztDQUNPLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjIuY29yZSB2ZXJzaW9uOiAxLjAuMlxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvZ29hbC1zdGF0dXN8MS4wLjJcclxuXHJcbmltcG9ydCB7IENvZGluZ0FyZ3MgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiBJbmRpY2F0ZXMgd2hldGhlciB0aGUgZ29hbCBoYXMgYmVlbiBtZXQgYW5kIGlzIHN0aWxsIGJlaW5nIHRhcmdldGVkXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBHb2FsU3RhdHVzQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBhY2NlcHRlZDogQSBwcm9wb3NlZCBnb2FsIHdhcyBhY2NlcHRlZFxyXG4gICAqL1xyXG4gIEFjY2VwdGVkOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIGFjaGlldmVkOiBUaGUgZ29hbCBoYXMgYmVlbiBtZXQgYW5kIG5vIGZ1cnRoZXIgYWN0aW9uIGlzIG5lZWRlZFxyXG4gICAqL1xyXG4gIEFjaGlldmVkOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIGNhbmNlbGxlZDogVGhlIGdvYWwgaXMgbm8gbG9uZ2VyIGJlaW5nIHNvdWdodFxyXG4gICAqL1xyXG4gIENhbmNlbGxlZDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBpbi1wcm9ncmVzczogVGhlIGdvYWwgaXMgYmVpbmcgc291Z2h0IGJ1dCBoYXMgbm90IHlldCBiZWVuIHJlYWNoZWQuICAoQWxzbyBhcHBsaWVzIGlmIGdvYWwgd2FzIHJlYWNoZWQgaW4gdGhlIHBhc3QgYnV0IHRoZXJlIGhhcyBiZWVuIHJlZ3Jlc3Npb24gYW5kIGdvYWwgaXMgYmVpbmcgc291Z2h0IGFnYWluKVxyXG4gICAqL1xyXG4gIEluUHJvZ3Jlc3M6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogb24taG9sZDogVGhlIGdvYWwgcmVtYWlucyBhIGxvbmcgdGVybSBvYmplY3RpdmUgYnV0IGlzIG5vIGxvbmdlciBiZWluZyBhY3RpdmVseSBwdXJzdWVkIGZvciBhIHRlbXBvcmFyeSBwZXJpb2Qgb2YgdGltZS5cclxuICAgKi9cclxuICBPbkhvbGQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogcGxhbm5lZDogQSBnb2FsIGlzIHBsYW5uZWQgZm9yIHRoaXMgcGF0aWVudFxyXG4gICAqL1xyXG4gIFBsYW5uZWQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogcHJvcG9zZWQ6IEEgZ29hbCBpcyBwcm9wb3NlZCBmb3IgdGhpcyBwYXRpZW50XHJcbiAgICovXHJcbiAgUHJvcG9zZWQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogcmVqZWN0ZWQ6IEEgcHJvcG9zZWQgZ29hbCB3YXMgcmVqZWN0ZWRcclxuICAgKi9cclxuICBSZWplY3RlZDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBzdXN0YWluaW5nOiBUaGUgZ29hbCBoYXMgYmVlbiBtZXQsIGJ1dCBvbmdvaW5nIGFjdGl2aXR5IGlzIG5lZWRlZCB0byBzdXN0YWluIHRoZSBnb2FsIG9iamVjdGl2ZVxyXG4gICAqL1xyXG4gIFN1c3RhaW5pbmc6IENvZGluZ0FyZ3M7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBJbmRpY2F0ZXMgd2hldGhlciB0aGUgZ29hbCBoYXMgYmVlbiBtZXQgYW5kIGlzIHN0aWxsIGJlaW5nIHRhcmdldGVkXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgR29hbFN0YXR1c0NvZGluZ3M6R29hbFN0YXR1c0NvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogYWNjZXB0ZWQ6IEEgcHJvcG9zZWQgZ29hbCB3YXMgYWNjZXB0ZWRcclxuICAgKi9cclxuICBBY2NlcHRlZDoge1xyXG4gICAgZGlzcGxheTogXCJBY2NlcHRlZFwiLFxyXG4gICAgY29kZTogXCJhY2NlcHRlZFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvZ29hbC1zdGF0dXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIGFjaGlldmVkOiBUaGUgZ29hbCBoYXMgYmVlbiBtZXQgYW5kIG5vIGZ1cnRoZXIgYWN0aW9uIGlzIG5lZWRlZFxyXG4gICAqL1xyXG4gIEFjaGlldmVkOiB7XHJcbiAgICBkaXNwbGF5OiBcIkFjaGlldmVkXCIsXHJcbiAgICBjb2RlOiBcImFjaGlldmVkXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9nb2FsLXN0YXR1c1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogY2FuY2VsbGVkOiBUaGUgZ29hbCBpcyBubyBsb25nZXIgYmVpbmcgc291Z2h0XHJcbiAgICovXHJcbiAgQ2FuY2VsbGVkOiB7XHJcbiAgICBkaXNwbGF5OiBcIkNhbmNlbGxlZFwiLFxyXG4gICAgY29kZTogXCJjYW5jZWxsZWRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2dvYWwtc3RhdHVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBpbi1wcm9ncmVzczogVGhlIGdvYWwgaXMgYmVpbmcgc291Z2h0IGJ1dCBoYXMgbm90IHlldCBiZWVuIHJlYWNoZWQuICAoQWxzbyBhcHBsaWVzIGlmIGdvYWwgd2FzIHJlYWNoZWQgaW4gdGhlIHBhc3QgYnV0IHRoZXJlIGhhcyBiZWVuIHJlZ3Jlc3Npb24gYW5kIGdvYWwgaXMgYmVpbmcgc291Z2h0IGFnYWluKVxyXG4gICAqL1xyXG4gIEluUHJvZ3Jlc3M6IHtcclxuICAgIGRpc3BsYXk6IFwiSW4gUHJvZ3Jlc3NcIixcclxuICAgIGNvZGU6IFwiaW4tcHJvZ3Jlc3NcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2dvYWwtc3RhdHVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBvbi1ob2xkOiBUaGUgZ29hbCByZW1haW5zIGEgbG9uZyB0ZXJtIG9iamVjdGl2ZSBidXQgaXMgbm8gbG9uZ2VyIGJlaW5nIGFjdGl2ZWx5IHB1cnN1ZWQgZm9yIGEgdGVtcG9yYXJ5IHBlcmlvZCBvZiB0aW1lLlxyXG4gICAqL1xyXG4gIE9uSG9sZDoge1xyXG4gICAgZGlzcGxheTogXCJPbiBIb2xkXCIsXHJcbiAgICBjb2RlOiBcIm9uLWhvbGRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2dvYWwtc3RhdHVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBwbGFubmVkOiBBIGdvYWwgaXMgcGxhbm5lZCBmb3IgdGhpcyBwYXRpZW50XHJcbiAgICovXHJcbiAgUGxhbm5lZDoge1xyXG4gICAgZGlzcGxheTogXCJQbGFubmVkXCIsXHJcbiAgICBjb2RlOiBcInBsYW5uZWRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2dvYWwtc3RhdHVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBwcm9wb3NlZDogQSBnb2FsIGlzIHByb3Bvc2VkIGZvciB0aGlzIHBhdGllbnRcclxuICAgKi9cclxuICBQcm9wb3NlZDoge1xyXG4gICAgZGlzcGxheTogXCJQcm9wb3NlZFwiLFxyXG4gICAgY29kZTogXCJwcm9wb3NlZFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvZ29hbC1zdGF0dXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIHJlamVjdGVkOiBBIHByb3Bvc2VkIGdvYWwgd2FzIHJlamVjdGVkXHJcbiAgICovXHJcbiAgUmVqZWN0ZWQ6IHtcclxuICAgIGRpc3BsYXk6IFwiUmVqZWN0ZWRcIixcclxuICAgIGNvZGU6IFwicmVqZWN0ZWRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2dvYWwtc3RhdHVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBzdXN0YWluaW5nOiBUaGUgZ29hbCBoYXMgYmVlbiBtZXQsIGJ1dCBvbmdvaW5nIGFjdGl2aXR5IGlzIG5lZWRlZCB0byBzdXN0YWluIHRoZSBnb2FsIG9iamVjdGl2ZVxyXG4gICAqL1xyXG4gIFN1c3RhaW5pbmc6IHtcclxuICAgIGRpc3BsYXk6IFwiU3VzdGFpbmluZ1wiLFxyXG4gICAgY29kZTogXCJzdXN0YWluaW5nXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9nb2FsLXN0YXR1c1wiLFxyXG4gIH0sXHJcbn0gYXMgY29uc3Q7XHJcbiJdfQ==