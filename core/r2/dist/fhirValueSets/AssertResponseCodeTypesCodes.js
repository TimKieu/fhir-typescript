// <auto-generated/>
// Contents of: hl7.fhir.r2.core version: 1.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/assert-response-code-types|1.0.2
/**
 * The type of response code to use for assertion.
 *
 * The response code to expect in the response.
 */
export const AssertResponseCodeTypesCodes = {
    /**
     * bad: Response code is 400.
     */
    Bad: "bad",
    /**
     * conflict: Response code is 409.
     */
    Conflict: "conflict",
    /**
     * created: Response code is 201.
     */
    Created: "created",
    /**
     * forbidden: Response code is 403.
     */
    Forbidden: "forbidden",
    /**
     * gone: Response code is 410.
     */
    Gone: "gone",
    /**
     * methodNotAllowed: Response code is 405.
     */
    MethodNotAllowed: "methodNotAllowed",
    /**
     * noContent: Response code is 204.
     */
    NoContent: "noContent",
    /**
     * notFound: Response code is 404.
     */
    NotFound: "notFound",
    /**
     * notModified: Response code is 304.
     */
    NotModified: "notModified",
    /**
     * okay: Response code is 200.
     */
    Okay: "okay",
    /**
     * preconditionFailed: Response code is 412.
     */
    PreconditionFailed: "preconditionFailed",
    /**
     * unprocessable: Response code is 422.
     */
    Unprocessable: "unprocessable",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXNzZXJ0UmVzcG9uc2VDb2RlVHlwZXNDb2Rlcy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvQXNzZXJ0UmVzcG9uc2VDb2RlVHlwZXNDb2Rlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQywrRUFBK0U7QUFFL0U7Ozs7R0FJRztBQUNILE1BQU0sQ0FBQyxNQUFNLDRCQUE0QixHQUFHO0lBQzFDOztPQUVHO0lBQ0gsR0FBRyxFQUFFLEtBQUs7SUFDVjs7T0FFRztJQUNILFFBQVEsRUFBRSxVQUFVO0lBQ3BCOztPQUVHO0lBQ0gsT0FBTyxFQUFFLFNBQVM7SUFDbEI7O09BRUc7SUFDSCxTQUFTLEVBQUUsV0FBVztJQUN0Qjs7T0FFRztJQUNILElBQUksRUFBRSxNQUFNO0lBQ1o7O09BRUc7SUFDSCxnQkFBZ0IsRUFBRSxrQkFBa0I7SUFDcEM7O09BRUc7SUFDSCxTQUFTLEVBQUUsV0FBVztJQUN0Qjs7T0FFRztJQUNILFFBQVEsRUFBRSxVQUFVO0lBQ3BCOztPQUVHO0lBQ0gsV0FBVyxFQUFFLGFBQWE7SUFDMUI7O09BRUc7SUFDSCxJQUFJLEVBQUUsTUFBTTtJQUNaOztPQUVHO0lBQ0gsa0JBQWtCLEVBQUUsb0JBQW9CO0lBQ3hDOztPQUVHO0lBQ0gsYUFBYSxFQUFFLGVBQWU7Q0FDdEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yMi5jb3JlIHZlcnNpb246IDEuMC4yXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9hc3NlcnQtcmVzcG9uc2UtY29kZS10eXBlc3wxLjAuMlxyXG5cclxuLyoqXHJcbiAqIFRoZSB0eXBlIG9mIHJlc3BvbnNlIGNvZGUgdG8gdXNlIGZvciBhc3NlcnRpb24uXHJcbiAqIFxyXG4gKiBUaGUgcmVzcG9uc2UgY29kZSB0byBleHBlY3QgaW4gdGhlIHJlc3BvbnNlLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IEFzc2VydFJlc3BvbnNlQ29kZVR5cGVzQ29kZXMgPSB7XHJcbiAgLyoqXHJcbiAgICogYmFkOiBSZXNwb25zZSBjb2RlIGlzIDQwMC5cclxuICAgKi9cclxuICBCYWQ6IFwiYmFkXCIsXHJcbiAgLyoqXHJcbiAgICogY29uZmxpY3Q6IFJlc3BvbnNlIGNvZGUgaXMgNDA5LlxyXG4gICAqL1xyXG4gIENvbmZsaWN0OiBcImNvbmZsaWN0XCIsXHJcbiAgLyoqXHJcbiAgICogY3JlYXRlZDogUmVzcG9uc2UgY29kZSBpcyAyMDEuXHJcbiAgICovXHJcbiAgQ3JlYXRlZDogXCJjcmVhdGVkXCIsXHJcbiAgLyoqXHJcbiAgICogZm9yYmlkZGVuOiBSZXNwb25zZSBjb2RlIGlzIDQwMy5cclxuICAgKi9cclxuICBGb3JiaWRkZW46IFwiZm9yYmlkZGVuXCIsXHJcbiAgLyoqXHJcbiAgICogZ29uZTogUmVzcG9uc2UgY29kZSBpcyA0MTAuXHJcbiAgICovXHJcbiAgR29uZTogXCJnb25lXCIsXHJcbiAgLyoqXHJcbiAgICogbWV0aG9kTm90QWxsb3dlZDogUmVzcG9uc2UgY29kZSBpcyA0MDUuXHJcbiAgICovXHJcbiAgTWV0aG9kTm90QWxsb3dlZDogXCJtZXRob2ROb3RBbGxvd2VkXCIsXHJcbiAgLyoqXHJcbiAgICogbm9Db250ZW50OiBSZXNwb25zZSBjb2RlIGlzIDIwNC5cclxuICAgKi9cclxuICBOb0NvbnRlbnQ6IFwibm9Db250ZW50XCIsXHJcbiAgLyoqXHJcbiAgICogbm90Rm91bmQ6IFJlc3BvbnNlIGNvZGUgaXMgNDA0LlxyXG4gICAqL1xyXG4gIE5vdEZvdW5kOiBcIm5vdEZvdW5kXCIsXHJcbiAgLyoqXHJcbiAgICogbm90TW9kaWZpZWQ6IFJlc3BvbnNlIGNvZGUgaXMgMzA0LlxyXG4gICAqL1xyXG4gIE5vdE1vZGlmaWVkOiBcIm5vdE1vZGlmaWVkXCIsXHJcbiAgLyoqXHJcbiAgICogb2theTogUmVzcG9uc2UgY29kZSBpcyAyMDAuXHJcbiAgICovXHJcbiAgT2theTogXCJva2F5XCIsXHJcbiAgLyoqXHJcbiAgICogcHJlY29uZGl0aW9uRmFpbGVkOiBSZXNwb25zZSBjb2RlIGlzIDQxMi5cclxuICAgKi9cclxuICBQcmVjb25kaXRpb25GYWlsZWQ6IFwicHJlY29uZGl0aW9uRmFpbGVkXCIsXHJcbiAgLyoqXHJcbiAgICogdW5wcm9jZXNzYWJsZTogUmVzcG9uc2UgY29kZSBpcyA0MjIuXHJcbiAgICovXHJcbiAgVW5wcm9jZXNzYWJsZTogXCJ1bnByb2Nlc3NhYmxlXCIsXHJcbn0gYXMgY29uc3Q7XHJcblxyXG4vKipcclxuICogVGhlIHR5cGUgb2YgcmVzcG9uc2UgY29kZSB0byB1c2UgZm9yIGFzc2VydGlvbi5cclxuICogXHJcbiAqIFRoZSByZXNwb25zZSBjb2RlIHRvIGV4cGVjdCBpbiB0aGUgcmVzcG9uc2UuXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBBc3NlcnRSZXNwb25zZUNvZGVUeXBlc0NvZGVUeXBlID0gdHlwZW9mIEFzc2VydFJlc3BvbnNlQ29kZVR5cGVzQ29kZXNba2V5b2YgdHlwZW9mIEFzc2VydFJlc3BvbnNlQ29kZVR5cGVzQ29kZXNdO1xyXG4iXX0=