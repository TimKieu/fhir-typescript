// <auto-generated/>
// Contents of: hl7.fhir.r2.core version: 1.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/bundle-type|1.0.2
/**
 * Indicates the purpose of a bundle - how it was intended to be used.
 */
export const BundleTypeCodings = {
    /**
     * batch: The bundle is a transaction - intended to be processed by a server as a group of actions.
     */
    Batch: {
        display: "Batch",
        code: "batch",
        system: "http://hl7.org/fhir/bundle-type",
    },
    /**
     * batch-response: The bundle is a batch response. Note that as a batch, some responses may indicate failure and others success.
     */
    BatchResponse: {
        display: "Batch Response",
        code: "batch-response",
        system: "http://hl7.org/fhir/bundle-type",
    },
    /**
     * collection: The bundle is a set of resources collected into a single document for ease of distribution.
     */
    Collection: {
        display: "Collection",
        code: "collection",
        system: "http://hl7.org/fhir/bundle-type",
    },
    /**
     * document: The bundle is a document. The first resource is a Composition.
     */
    Document: {
        display: "Document",
        code: "document",
        system: "http://hl7.org/fhir/bundle-type",
    },
    /**
     * history: The bundle is a list of resources from a history interaction on a server.
     */
    HistoryList: {
        display: "History List",
        code: "history",
        system: "http://hl7.org/fhir/bundle-type",
    },
    /**
     * message: The bundle is a message. The first resource is a MessageHeader.
     */
    Message: {
        display: "Message",
        code: "message",
        system: "http://hl7.org/fhir/bundle-type",
    },
    /**
     * searchset: The bundle is a list of resources returned as a result of a search/query interaction, operation, or message.
     */
    SearchResults: {
        display: "Search Results",
        code: "searchset",
        system: "http://hl7.org/fhir/bundle-type",
    },
    /**
     * transaction: The bundle is a transaction - intended to be processed by a server as an atomic commit.
     */
    Transaction: {
        display: "Transaction",
        code: "transaction",
        system: "http://hl7.org/fhir/bundle-type",
    },
    /**
     * transaction-response: The bundle is a transaction response. Because the response is a transaction response, the transactionhas succeeded, and all responses are error free.
     */
    TransactionResponse: {
        display: "Transaction Response",
        code: "transaction-response",
        system: "http://hl7.org/fhir/bundle-type",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQnVuZGxlVHlwZUNvZGluZ3MuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL0J1bmRsZVR5cGVDb2RpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQiwrQ0FBK0M7QUFDL0Msa0NBQWtDO0FBQ2xDLGdFQUFnRTtBQThDaEU7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FBd0I7SUFDcEQ7O09BRUc7SUFDSCxLQUFLLEVBQUU7UUFDTCxPQUFPLEVBQUUsT0FBTztRQUNoQixJQUFJLEVBQUUsT0FBTztRQUNiLE1BQU0sRUFBRSxpQ0FBaUM7S0FDMUM7SUFDRDs7T0FFRztJQUNILGFBQWEsRUFBRTtRQUNiLE9BQU8sRUFBRSxnQkFBZ0I7UUFDekIsSUFBSSxFQUFFLGdCQUFnQjtRQUN0QixNQUFNLEVBQUUsaUNBQWlDO0tBQzFDO0lBQ0Q7O09BRUc7SUFDSCxVQUFVLEVBQUU7UUFDVixPQUFPLEVBQUUsWUFBWTtRQUNyQixJQUFJLEVBQUUsWUFBWTtRQUNsQixNQUFNLEVBQUUsaUNBQWlDO0tBQzFDO0lBQ0Q7O09BRUc7SUFDSCxRQUFRLEVBQUU7UUFDUixPQUFPLEVBQUUsVUFBVTtRQUNuQixJQUFJLEVBQUUsVUFBVTtRQUNoQixNQUFNLEVBQUUsaUNBQWlDO0tBQzFDO0lBQ0Q7O09BRUc7SUFDSCxXQUFXLEVBQUU7UUFDWCxPQUFPLEVBQUUsY0FBYztRQUN2QixJQUFJLEVBQUUsU0FBUztRQUNmLE1BQU0sRUFBRSxpQ0FBaUM7S0FDMUM7SUFDRDs7T0FFRztJQUNILE9BQU8sRUFBRTtRQUNQLE9BQU8sRUFBRSxTQUFTO1FBQ2xCLElBQUksRUFBRSxTQUFTO1FBQ2YsTUFBTSxFQUFFLGlDQUFpQztLQUMxQztJQUNEOztPQUVHO0lBQ0gsYUFBYSxFQUFFO1FBQ2IsT0FBTyxFQUFFLGdCQUFnQjtRQUN6QixJQUFJLEVBQUUsV0FBVztRQUNqQixNQUFNLEVBQUUsaUNBQWlDO0tBQzFDO0lBQ0Q7O09BRUc7SUFDSCxXQUFXLEVBQUU7UUFDWCxPQUFPLEVBQUUsYUFBYTtRQUN0QixJQUFJLEVBQUUsYUFBYTtRQUNuQixNQUFNLEVBQUUsaUNBQWlDO0tBQzFDO0lBQ0Q7O09BRUc7SUFDSCxtQkFBbUIsRUFBRTtRQUNuQixPQUFPLEVBQUUsc0JBQXNCO1FBQy9CLElBQUksRUFBRSxzQkFBc0I7UUFDNUIsTUFBTSxFQUFFLGlDQUFpQztLQUMxQztDQUNPLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjIuY29yZSB2ZXJzaW9uOiAxLjAuMlxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvYnVuZGxlLXR5cGV8MS4wLjJcclxuXHJcbmltcG9ydCB7IENvZGluZ0FyZ3MgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiBJbmRpY2F0ZXMgdGhlIHB1cnBvc2Ugb2YgYSBidW5kbGUgLSBob3cgaXQgd2FzIGludGVuZGVkIHRvIGJlIHVzZWQuXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBCdW5kbGVUeXBlQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBiYXRjaDogVGhlIGJ1bmRsZSBpcyBhIHRyYW5zYWN0aW9uIC0gaW50ZW5kZWQgdG8gYmUgcHJvY2Vzc2VkIGJ5IGEgc2VydmVyIGFzIGEgZ3JvdXAgb2YgYWN0aW9ucy5cclxuICAgKi9cclxuICBCYXRjaDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBiYXRjaC1yZXNwb25zZTogVGhlIGJ1bmRsZSBpcyBhIGJhdGNoIHJlc3BvbnNlLiBOb3RlIHRoYXQgYXMgYSBiYXRjaCwgc29tZSByZXNwb25zZXMgbWF5IGluZGljYXRlIGZhaWx1cmUgYW5kIG90aGVycyBzdWNjZXNzLlxyXG4gICAqL1xyXG4gIEJhdGNoUmVzcG9uc2U6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogY29sbGVjdGlvbjogVGhlIGJ1bmRsZSBpcyBhIHNldCBvZiByZXNvdXJjZXMgY29sbGVjdGVkIGludG8gYSBzaW5nbGUgZG9jdW1lbnQgZm9yIGVhc2Ugb2YgZGlzdHJpYnV0aW9uLlxyXG4gICAqL1xyXG4gIENvbGxlY3Rpb246IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogZG9jdW1lbnQ6IFRoZSBidW5kbGUgaXMgYSBkb2N1bWVudC4gVGhlIGZpcnN0IHJlc291cmNlIGlzIGEgQ29tcG9zaXRpb24uXHJcbiAgICovXHJcbiAgRG9jdW1lbnQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogaGlzdG9yeTogVGhlIGJ1bmRsZSBpcyBhIGxpc3Qgb2YgcmVzb3VyY2VzIGZyb20gYSBoaXN0b3J5IGludGVyYWN0aW9uIG9uIGEgc2VydmVyLlxyXG4gICAqL1xyXG4gIEhpc3RvcnlMaXN0OiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIG1lc3NhZ2U6IFRoZSBidW5kbGUgaXMgYSBtZXNzYWdlLiBUaGUgZmlyc3QgcmVzb3VyY2UgaXMgYSBNZXNzYWdlSGVhZGVyLlxyXG4gICAqL1xyXG4gIE1lc3NhZ2U6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogc2VhcmNoc2V0OiBUaGUgYnVuZGxlIGlzIGEgbGlzdCBvZiByZXNvdXJjZXMgcmV0dXJuZWQgYXMgYSByZXN1bHQgb2YgYSBzZWFyY2gvcXVlcnkgaW50ZXJhY3Rpb24sIG9wZXJhdGlvbiwgb3IgbWVzc2FnZS5cclxuICAgKi9cclxuICBTZWFyY2hSZXN1bHRzOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIHRyYW5zYWN0aW9uOiBUaGUgYnVuZGxlIGlzIGEgdHJhbnNhY3Rpb24gLSBpbnRlbmRlZCB0byBiZSBwcm9jZXNzZWQgYnkgYSBzZXJ2ZXIgYXMgYW4gYXRvbWljIGNvbW1pdC5cclxuICAgKi9cclxuICBUcmFuc2FjdGlvbjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiB0cmFuc2FjdGlvbi1yZXNwb25zZTogVGhlIGJ1bmRsZSBpcyBhIHRyYW5zYWN0aW9uIHJlc3BvbnNlLiBCZWNhdXNlIHRoZSByZXNwb25zZSBpcyBhIHRyYW5zYWN0aW9uIHJlc3BvbnNlLCB0aGUgdHJhbnNhY3Rpb25oYXMgc3VjY2VlZGVkLCBhbmQgYWxsIHJlc3BvbnNlcyBhcmUgZXJyb3IgZnJlZS5cclxuICAgKi9cclxuICBUcmFuc2FjdGlvblJlc3BvbnNlOiBDb2RpbmdBcmdzO1xyXG59XHJcblxyXG4vKipcclxuICogSW5kaWNhdGVzIHRoZSBwdXJwb3NlIG9mIGEgYnVuZGxlIC0gaG93IGl0IHdhcyBpbnRlbmRlZCB0byBiZSB1c2VkLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IEJ1bmRsZVR5cGVDb2RpbmdzOkJ1bmRsZVR5cGVDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIGJhdGNoOiBUaGUgYnVuZGxlIGlzIGEgdHJhbnNhY3Rpb24gLSBpbnRlbmRlZCB0byBiZSBwcm9jZXNzZWQgYnkgYSBzZXJ2ZXIgYXMgYSBncm91cCBvZiBhY3Rpb25zLlxyXG4gICAqL1xyXG4gIEJhdGNoOiB7XHJcbiAgICBkaXNwbGF5OiBcIkJhdGNoXCIsXHJcbiAgICBjb2RlOiBcImJhdGNoXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9idW5kbGUtdHlwZVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogYmF0Y2gtcmVzcG9uc2U6IFRoZSBidW5kbGUgaXMgYSBiYXRjaCByZXNwb25zZS4gTm90ZSB0aGF0IGFzIGEgYmF0Y2gsIHNvbWUgcmVzcG9uc2VzIG1heSBpbmRpY2F0ZSBmYWlsdXJlIGFuZCBvdGhlcnMgc3VjY2Vzcy5cclxuICAgKi9cclxuICBCYXRjaFJlc3BvbnNlOiB7XHJcbiAgICBkaXNwbGF5OiBcIkJhdGNoIFJlc3BvbnNlXCIsXHJcbiAgICBjb2RlOiBcImJhdGNoLXJlc3BvbnNlXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9idW5kbGUtdHlwZVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogY29sbGVjdGlvbjogVGhlIGJ1bmRsZSBpcyBhIHNldCBvZiByZXNvdXJjZXMgY29sbGVjdGVkIGludG8gYSBzaW5nbGUgZG9jdW1lbnQgZm9yIGVhc2Ugb2YgZGlzdHJpYnV0aW9uLlxyXG4gICAqL1xyXG4gIENvbGxlY3Rpb246IHtcclxuICAgIGRpc3BsYXk6IFwiQ29sbGVjdGlvblwiLFxyXG4gICAgY29kZTogXCJjb2xsZWN0aW9uXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9idW5kbGUtdHlwZVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogZG9jdW1lbnQ6IFRoZSBidW5kbGUgaXMgYSBkb2N1bWVudC4gVGhlIGZpcnN0IHJlc291cmNlIGlzIGEgQ29tcG9zaXRpb24uXHJcbiAgICovXHJcbiAgRG9jdW1lbnQ6IHtcclxuICAgIGRpc3BsYXk6IFwiRG9jdW1lbnRcIixcclxuICAgIGNvZGU6IFwiZG9jdW1lbnRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2J1bmRsZS10eXBlXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBoaXN0b3J5OiBUaGUgYnVuZGxlIGlzIGEgbGlzdCBvZiByZXNvdXJjZXMgZnJvbSBhIGhpc3RvcnkgaW50ZXJhY3Rpb24gb24gYSBzZXJ2ZXIuXHJcbiAgICovXHJcbiAgSGlzdG9yeUxpc3Q6IHtcclxuICAgIGRpc3BsYXk6IFwiSGlzdG9yeSBMaXN0XCIsXHJcbiAgICBjb2RlOiBcImhpc3RvcnlcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2J1bmRsZS10eXBlXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBtZXNzYWdlOiBUaGUgYnVuZGxlIGlzIGEgbWVzc2FnZS4gVGhlIGZpcnN0IHJlc291cmNlIGlzIGEgTWVzc2FnZUhlYWRlci5cclxuICAgKi9cclxuICBNZXNzYWdlOiB7XHJcbiAgICBkaXNwbGF5OiBcIk1lc3NhZ2VcIixcclxuICAgIGNvZGU6IFwibWVzc2FnZVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvYnVuZGxlLXR5cGVcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIHNlYXJjaHNldDogVGhlIGJ1bmRsZSBpcyBhIGxpc3Qgb2YgcmVzb3VyY2VzIHJldHVybmVkIGFzIGEgcmVzdWx0IG9mIGEgc2VhcmNoL3F1ZXJ5IGludGVyYWN0aW9uLCBvcGVyYXRpb24sIG9yIG1lc3NhZ2UuXHJcbiAgICovXHJcbiAgU2VhcmNoUmVzdWx0czoge1xyXG4gICAgZGlzcGxheTogXCJTZWFyY2ggUmVzdWx0c1wiLFxyXG4gICAgY29kZTogXCJzZWFyY2hzZXRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2J1bmRsZS10eXBlXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiB0cmFuc2FjdGlvbjogVGhlIGJ1bmRsZSBpcyBhIHRyYW5zYWN0aW9uIC0gaW50ZW5kZWQgdG8gYmUgcHJvY2Vzc2VkIGJ5IGEgc2VydmVyIGFzIGFuIGF0b21pYyBjb21taXQuXHJcbiAgICovXHJcbiAgVHJhbnNhY3Rpb246IHtcclxuICAgIGRpc3BsYXk6IFwiVHJhbnNhY3Rpb25cIixcclxuICAgIGNvZGU6IFwidHJhbnNhY3Rpb25cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2J1bmRsZS10eXBlXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiB0cmFuc2FjdGlvbi1yZXNwb25zZTogVGhlIGJ1bmRsZSBpcyBhIHRyYW5zYWN0aW9uIHJlc3BvbnNlLiBCZWNhdXNlIHRoZSByZXNwb25zZSBpcyBhIHRyYW5zYWN0aW9uIHJlc3BvbnNlLCB0aGUgdHJhbnNhY3Rpb25oYXMgc3VjY2VlZGVkLCBhbmQgYWxsIHJlc3BvbnNlcyBhcmUgZXJyb3IgZnJlZS5cclxuICAgKi9cclxuICBUcmFuc2FjdGlvblJlc3BvbnNlOiB7XHJcbiAgICBkaXNwbGF5OiBcIlRyYW5zYWN0aW9uIFJlc3BvbnNlXCIsXHJcbiAgICBjb2RlOiBcInRyYW5zYWN0aW9uLXJlc3BvbnNlXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9idW5kbGUtdHlwZVwiLFxyXG4gIH0sXHJcbn0gYXMgY29uc3Q7XHJcbiJdfQ==