// <auto-generated/>
// Contents of: hl7.fhir.r2.core version: 1.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/care-plan-status|1.0.2
/**
 * Indicates whether the plan is currently being acted upon, represents future intentions or is now a historical record.
 */
export const CarePlanStatusCodings = {
    /**
     * active: The plan is intended to be followed and used as part of patient care.
     */
    Active: {
        display: "Active",
        code: "active",
        system: "http://hl7.org/fhir/care-plan-status",
    },
    /**
     * cancelled: The plan has been terminated prior to reaching completion (though it may have been replaced by a new plan).
     */
    Cancelled: {
        display: "Cancelled",
        code: "cancelled",
        system: "http://hl7.org/fhir/care-plan-status",
    },
    /**
     * completed: The plan is no longer in use and is not expected to be followed or used in patient care.
     */
    Completed: {
        display: "Completed",
        code: "completed",
        system: "http://hl7.org/fhir/care-plan-status",
    },
    /**
     * draft: The plan is in development or awaiting use but is not yet intended to be acted upon.
     */
    Pending: {
        display: "Pending",
        code: "draft",
        system: "http://hl7.org/fhir/care-plan-status",
    },
    /**
     * proposed: The plan has been suggested but no commitment to it has yet been made.
     */
    Proposed: {
        display: "Proposed",
        code: "proposed",
        system: "http://hl7.org/fhir/care-plan-status",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2FyZVBsYW5TdGF0dXNDb2RpbmdzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9DYXJlUGxhblN0YXR1c0NvZGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLCtDQUErQztBQUMvQyxrQ0FBa0M7QUFDbEMscUVBQXFFO0FBOEJyRTs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUE0QjtJQUM1RDs7T0FFRztJQUNILE1BQU0sRUFBRTtRQUNOLE9BQU8sRUFBRSxRQUFRO1FBQ2pCLElBQUksRUFBRSxRQUFRO1FBQ2QsTUFBTSxFQUFFLHNDQUFzQztLQUMvQztJQUNEOztPQUVHO0lBQ0gsU0FBUyxFQUFFO1FBQ1QsT0FBTyxFQUFFLFdBQVc7UUFDcEIsSUFBSSxFQUFFLFdBQVc7UUFDakIsTUFBTSxFQUFFLHNDQUFzQztLQUMvQztJQUNEOztPQUVHO0lBQ0gsU0FBUyxFQUFFO1FBQ1QsT0FBTyxFQUFFLFdBQVc7UUFDcEIsSUFBSSxFQUFFLFdBQVc7UUFDakIsTUFBTSxFQUFFLHNDQUFzQztLQUMvQztJQUNEOztPQUVHO0lBQ0gsT0FBTyxFQUFFO1FBQ1AsT0FBTyxFQUFFLFNBQVM7UUFDbEIsSUFBSSxFQUFFLE9BQU87UUFDYixNQUFNLEVBQUUsc0NBQXNDO0tBQy9DO0lBQ0Q7O09BRUc7SUFDSCxRQUFRLEVBQUU7UUFDUixPQUFPLEVBQUUsVUFBVTtRQUNuQixJQUFJLEVBQUUsVUFBVTtRQUNoQixNQUFNLEVBQUUsc0NBQXNDO0tBQy9DO0NBQ08sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yMi5jb3JlIHZlcnNpb246IDEuMC4yXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9jYXJlLXBsYW4tc3RhdHVzfDEuMC4yXHJcblxyXG5pbXBvcnQgeyBDb2RpbmdBcmdzIH0gZnJvbSAnLi4vZmhpci9Db2RpbmcuanMnXHJcblxyXG4vKipcclxuICogSW5kaWNhdGVzIHdoZXRoZXIgdGhlIHBsYW4gaXMgY3VycmVudGx5IGJlaW5nIGFjdGVkIHVwb24sIHJlcHJlc2VudHMgZnV0dXJlIGludGVudGlvbnMgb3IgaXMgbm93IGEgaGlzdG9yaWNhbCByZWNvcmQuXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBDYXJlUGxhblN0YXR1c0NvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogYWN0aXZlOiBUaGUgcGxhbiBpcyBpbnRlbmRlZCB0byBiZSBmb2xsb3dlZCBhbmQgdXNlZCBhcyBwYXJ0IG9mIHBhdGllbnQgY2FyZS5cclxuICAgKi9cclxuICBBY3RpdmU6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogY2FuY2VsbGVkOiBUaGUgcGxhbiBoYXMgYmVlbiB0ZXJtaW5hdGVkIHByaW9yIHRvIHJlYWNoaW5nIGNvbXBsZXRpb24gKHRob3VnaCBpdCBtYXkgaGF2ZSBiZWVuIHJlcGxhY2VkIGJ5IGEgbmV3IHBsYW4pLlxyXG4gICAqL1xyXG4gIENhbmNlbGxlZDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBjb21wbGV0ZWQ6IFRoZSBwbGFuIGlzIG5vIGxvbmdlciBpbiB1c2UgYW5kIGlzIG5vdCBleHBlY3RlZCB0byBiZSBmb2xsb3dlZCBvciB1c2VkIGluIHBhdGllbnQgY2FyZS5cclxuICAgKi9cclxuICBDb21wbGV0ZWQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogZHJhZnQ6IFRoZSBwbGFuIGlzIGluIGRldmVsb3BtZW50IG9yIGF3YWl0aW5nIHVzZSBidXQgaXMgbm90IHlldCBpbnRlbmRlZCB0byBiZSBhY3RlZCB1cG9uLlxyXG4gICAqL1xyXG4gIFBlbmRpbmc6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogcHJvcG9zZWQ6IFRoZSBwbGFuIGhhcyBiZWVuIHN1Z2dlc3RlZCBidXQgbm8gY29tbWl0bWVudCB0byBpdCBoYXMgeWV0IGJlZW4gbWFkZS5cclxuICAgKi9cclxuICBQcm9wb3NlZDogQ29kaW5nQXJncztcclxufVxyXG5cclxuLyoqXHJcbiAqIEluZGljYXRlcyB3aGV0aGVyIHRoZSBwbGFuIGlzIGN1cnJlbnRseSBiZWluZyBhY3RlZCB1cG9uLCByZXByZXNlbnRzIGZ1dHVyZSBpbnRlbnRpb25zIG9yIGlzIG5vdyBhIGhpc3RvcmljYWwgcmVjb3JkLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IENhcmVQbGFuU3RhdHVzQ29kaW5nczpDYXJlUGxhblN0YXR1c0NvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogYWN0aXZlOiBUaGUgcGxhbiBpcyBpbnRlbmRlZCB0byBiZSBmb2xsb3dlZCBhbmQgdXNlZCBhcyBwYXJ0IG9mIHBhdGllbnQgY2FyZS5cclxuICAgKi9cclxuICBBY3RpdmU6IHtcclxuICAgIGRpc3BsYXk6IFwiQWN0aXZlXCIsXHJcbiAgICBjb2RlOiBcImFjdGl2ZVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvY2FyZS1wbGFuLXN0YXR1c1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogY2FuY2VsbGVkOiBUaGUgcGxhbiBoYXMgYmVlbiB0ZXJtaW5hdGVkIHByaW9yIHRvIHJlYWNoaW5nIGNvbXBsZXRpb24gKHRob3VnaCBpdCBtYXkgaGF2ZSBiZWVuIHJlcGxhY2VkIGJ5IGEgbmV3IHBsYW4pLlxyXG4gICAqL1xyXG4gIENhbmNlbGxlZDoge1xyXG4gICAgZGlzcGxheTogXCJDYW5jZWxsZWRcIixcclxuICAgIGNvZGU6IFwiY2FuY2VsbGVkXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9jYXJlLXBsYW4tc3RhdHVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBjb21wbGV0ZWQ6IFRoZSBwbGFuIGlzIG5vIGxvbmdlciBpbiB1c2UgYW5kIGlzIG5vdCBleHBlY3RlZCB0byBiZSBmb2xsb3dlZCBvciB1c2VkIGluIHBhdGllbnQgY2FyZS5cclxuICAgKi9cclxuICBDb21wbGV0ZWQ6IHtcclxuICAgIGRpc3BsYXk6IFwiQ29tcGxldGVkXCIsXHJcbiAgICBjb2RlOiBcImNvbXBsZXRlZFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvY2FyZS1wbGFuLXN0YXR1c1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogZHJhZnQ6IFRoZSBwbGFuIGlzIGluIGRldmVsb3BtZW50IG9yIGF3YWl0aW5nIHVzZSBidXQgaXMgbm90IHlldCBpbnRlbmRlZCB0byBiZSBhY3RlZCB1cG9uLlxyXG4gICAqL1xyXG4gIFBlbmRpbmc6IHtcclxuICAgIGRpc3BsYXk6IFwiUGVuZGluZ1wiLFxyXG4gICAgY29kZTogXCJkcmFmdFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvY2FyZS1wbGFuLXN0YXR1c1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogcHJvcG9zZWQ6IFRoZSBwbGFuIGhhcyBiZWVuIHN1Z2dlc3RlZCBidXQgbm8gY29tbWl0bWVudCB0byBpdCBoYXMgeWV0IGJlZW4gbWFkZS5cclxuICAgKi9cclxuICBQcm9wb3NlZDoge1xyXG4gICAgZGlzcGxheTogXCJQcm9wb3NlZFwiLFxyXG4gICAgY29kZTogXCJwcm9wb3NlZFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvY2FyZS1wbGFuLXN0YXR1c1wiLFxyXG4gIH0sXHJcbn0gYXMgY29uc3Q7XHJcbiJdfQ==