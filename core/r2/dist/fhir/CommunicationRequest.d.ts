import * as fhir from '../fhir.js';
import { CommunicationRequestStatusCodeType } from '../fhirValueSets/CommunicationRequestStatusCodes.js';
/**
 * Valid arguments for the CommunicationRequestPayload type.
 */
export interface CommunicationRequestPayloadArgs extends fhir.BackboneElementArgs {
    /**
     * The communicated content (or for multi-part communications, one portion of the communication).
     */
    content?: fhir.FhirString | fhir.Attachment | fhir.Reference | undefined;
    /**
     * The communicated content (or for multi-part communications, one portion of the communication).
     */
    contentString?: fhir.FhirString | string | undefined;
    /**
     * The communicated content (or for multi-part communications, one portion of the communication).
     */
    contentAttachment?: fhir.AttachmentArgs | undefined;
    /**
     * The communicated content (or for multi-part communications, one portion of the communication).
     */
    contentReference?: fhir.ReferenceArgs | undefined;
}
/**
 * Text, attachment(s), or resource(s) to be communicated to the recipient.
 */
export declare class CommunicationRequestPayload extends fhir.BackboneElement {
    /**
     * Mapping of this datatype to a FHIR equivalent
     */
    static readonly _fts_dataType: string;
    /**
     * The communicated content (or for multi-part communications, one portion of the communication).
     */
    content: (fhir.FhirString | fhir.Attachment | fhir.Reference) | null;
    /**
     * Internal flag to properly serialize choice-type element CommunicationRequest.payload.content[x]
     */
    protected static readonly _fts_contentIsChoice: true;
    /**
     * Default constructor for CommunicationRequestPayload - initializes any required elements to null if a value is not provided.
     */
    constructor(source?: Partial<CommunicationRequestPayloadArgs>, options?: fhir.FhirConstructorOptions);
    /**
     * Function to perform basic model validation (e.g., check if required elements are present).
     */
    doModelValidation(exp?: string): fhir.FtsIssue[];
}
/**
 * Valid arguments for the CommunicationRequest type.
 */
export interface CommunicationRequestArgs extends fhir.DomainResourceArgs {
    /**
     * Resource Type Name
     */
    resourceType: "CommunicationRequest" | undefined;
    /**
     * A unique ID of this request for reference purposes. It must be provided if user wants it returned as part of any output, otherwise it will be autogenerated, if needed, by CDS system. Does not need to be the actual ID of the source system.
     */
    identifier?: fhir.IdentifierArgs[] | undefined;
    /**
     * The type of message to be sent such as alert, notification, reminder, instruction, etc.
     */
    category?: fhir.CodeableConceptArgs | undefined;
    /**
     * The entity (e.g. person, organization, clinical information system, or device) which is to be the source of the communication.
     */
    sender?: fhir.ReferenceArgs | undefined;
    /**
     * The entity (e.g. person, organization, clinical information system, or device) which is the intended target of the communication.
     */
    recipient?: fhir.ReferenceArgs[] | undefined;
    /**
     * Text, attachment(s), or resource(s) to be communicated to the recipient.
     */
    payload?: fhir.CommunicationRequestPayloadArgs[] | undefined;
    /**
     * A channel that was used for this communication (e.g. email, fax).
     */
    medium?: fhir.CodeableConceptArgs[] | undefined;
    /**
     * The responsible person who authorizes this order, e.g. physician. This may be different than the author of the order statement, e.g. clerk, who may have entered the statement into the order entry application.
     */
    requester?: fhir.ReferenceArgs | undefined;
    /**
     * The status of the proposal or order.
     */
    status?: fhir.FhirCode<CommunicationRequestStatusCodeType> | string | undefined;
    /**
     * Extended properties for primitive element: CommunicationRequest.status
     */
    _status?: fhir.FhirElementArgs;
    /**
     * The encounter within which the communication request was created.
     */
    encounter?: fhir.ReferenceArgs | undefined;
    /**
     * The time when this communication is to occur.
     */
    scheduled?: fhir.FhirDateTime | fhir.Period | undefined;
    /**
     * The time when this communication is to occur.
     */
    scheduledDateTime?: fhir.FhirDateTime | string | undefined;
    /**
     * The time when this communication is to occur.
     */
    scheduledPeriod?: fhir.PeriodArgs | undefined;
    /**
     * The reason or justification for the communication request.
     */
    reason?: fhir.CodeableConceptArgs[] | undefined;
    /**
     * The time when the request was made.
     */
    requestedOn?: fhir.FhirDateTime | string | undefined;
    /**
     * Extended properties for primitive element: CommunicationRequest.requestedOn
     */
    _requestedOn?: fhir.FhirElementArgs;
    /**
     * The patient who is the focus of this communication request.
     */
    subject?: fhir.ReferenceArgs | undefined;
    /**
     * Characterizes how quickly the proposed act must be initiated. Includes concepts such as stat, urgent, routine.
     */
    priority?: fhir.CodeableConceptArgs | undefined;
}
/**
 * A request to convey information; e.g. the CDS system proposes that an alert be sent to a responsible provider, the CDS system proposes that the public health agency be notified about a reportable condition.
 */
export declare class CommunicationRequest extends fhir.DomainResource {
    /**
     * Mapping of this datatype to a FHIR equivalent
     */
    static readonly _fts_dataType: string;
    /**
     * Resource Type Name
     */
    resourceType: "CommunicationRequest";
    /**
     * A unique ID of this request for reference purposes. It must be provided if user wants it returned as part of any output, otherwise it will be autogenerated, if needed, by CDS system. Does not need to be the actual ID of the source system.
     */
    identifier: fhir.Identifier[];
    /**
     * The type of message to be sent such as alert, notification, reminder, instruction, etc.
     */
    category?: fhir.CodeableConcept | undefined;
    /**
     * The entity (e.g. person, organization, clinical information system, or device) which is to be the source of the communication.
     */
    sender?: fhir.Reference | undefined;
    /**
     * The entity (e.g. person, organization, clinical information system, or device) which is the intended target of the communication.
     */
    recipient: fhir.Reference[];
    /**
     * Text, attachment(s), or resource(s) to be communicated to the recipient.
     */
    payload: fhir.CommunicationRequestPayload[];
    /**
     * A channel that was used for this communication (e.g. email, fax).
     */
    medium: fhir.CodeableConcept[];
    /**
     * The responsible person who authorizes this order, e.g. physician. This may be different than the author of the order statement, e.g. clerk, who may have entered the statement into the order entry application.
     */
    requester?: fhir.Reference | undefined;
    /**
     * The status of the proposal or order.
     */
    status?: fhir.FhirCode<CommunicationRequestStatusCodeType> | undefined;
    /**
     * The encounter within which the communication request was created.
     */
    encounter?: fhir.Reference | undefined;
    /**
     * The time when this communication is to occur.
     */
    scheduled?: (fhir.FhirDateTime | fhir.Period) | undefined;
    /**
     * Internal flag to properly serialize choice-type element CommunicationRequest.scheduled[x]
     */
    protected static readonly _fts_scheduledIsChoice: true;
    /**
     * The reason or justification for the communication request.
     */
    reason: fhir.CodeableConcept[];
    /**
     * The time when the request was made.
     */
    requestedOn?: fhir.FhirDateTime | undefined;
    /**
     * The patient who is the focus of this communication request.
     */
    subject?: fhir.Reference | undefined;
    /**
     * Characterizes how quickly the proposed act must be initiated. Includes concepts such as stat, urgent, routine.
     */
    priority?: fhir.CodeableConcept | undefined;
    /**
     * Default constructor for CommunicationRequest - initializes any required elements to null if a value is not provided.
     */
    constructor(source?: Partial<CommunicationRequestArgs>, options?: fhir.FhirConstructorOptions);
    /**
     * Function to perform basic model validation (e.g., check if required elements are present).
     */
    doModelValidation(exp?: string): fhir.FtsIssue[];
}
//# sourceMappingURL=CommunicationRequest.d.ts.map