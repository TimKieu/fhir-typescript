// <auto-generated/>
// Contents of: hl7.fhir.r2.core version: 1.0.2
// Minimum TypeScript Version: 3.7
// FHIR ComplexType: Meta
export {};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWV0YS5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJKc29uL01ldGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLCtDQUErQztBQUMvQyxrQ0FBa0M7QUFDbEMseUJBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnIyLmNvcmUgdmVyc2lvbjogMS4wLjJcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIENvbXBsZXhUeXBlOiBNZXRhXHJcblxyXG5pbXBvcnQgKiBhcyBmaGlyIGZyb20gJy4uL2ZoaXJKc29uLmpzJztcclxuXHJcblxyXG4vKipcclxuICogVGhlIG1ldGFkYXRhIGFib3V0IGEgcmVzb3VyY2UuIFRoaXMgaXMgY29udGVudCBpbiB0aGUgcmVzb3VyY2UgdGhhdCBpcyBtYWludGFpbmVkIGJ5IHRoZSBpbmZyYXN0cnVjdHVyZS4gQ2hhbmdlcyB0byB0aGUgY29udGVudCBtYXkgbm90IGFsd2F5cyBiZSBhc3NvY2lhdGVkIHdpdGggdmVyc2lvbiBjaGFuZ2VzIHRvIHRoZSByZXNvdXJjZS5cclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgTWV0YSBleHRlbmRzIGZoaXIuRmhpckVsZW1lbnQgeyBcclxuICAvKipcclxuICAgKiBUaGUgdmVyc2lvbiBzcGVjaWZpYyBpZGVudGlmaWVyLCBhcyBpdCBhcHBlYXJzIGluIHRoZSB2ZXJzaW9uIHBvcnRpb24gb2YgdGhlIFVSTC4gVGhpcyB2YWx1ZXMgY2hhbmdlcyB3aGVuIHRoZSByZXNvdXJjZSBpcyBjcmVhdGVkLCB1cGRhdGVkLCBvciBkZWxldGVkLlxyXG4gICAqL1xyXG4gIHZlcnNpb25JZD86IHN0cmluZ3x1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IE1ldGEudmVyc2lvbklkXHJcbiAgICovXHJcbiAgX3ZlcnNpb25JZD86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBXaGVuIHRoZSByZXNvdXJjZSBsYXN0IGNoYW5nZWQgLSBlLmcuIHdoZW4gdGhlIHZlcnNpb24gY2hhbmdlZC5cclxuICAgKi9cclxuICBsYXN0VXBkYXRlZD86IHN0cmluZ3x1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IE1ldGEubGFzdFVwZGF0ZWRcclxuICAgKi9cclxuICBfbGFzdFVwZGF0ZWQ/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbiAgLyoqXHJcbiAgICogQSBsaXN0IG9mIHByb2ZpbGVzIFtbW1N0cnVjdHVyZURlZmluaXRpb25dXV1zIHRoYXQgdGhpcyByZXNvdXJjZSBjbGFpbXMgdG8gY29uZm9ybSB0by4gVGhlIFVSTCBpcyBhIHJlZmVyZW5jZSB0byBbW1tTdHJ1Y3R1cmVEZWZpbml0aW9uLnVybF1dXS5cclxuICAgKi9cclxuICBwcm9maWxlPzogKHN0cmluZ3xudWxsKVtdfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogTWV0YS5wcm9maWxlXHJcbiAgICovXHJcbiAgX3Byb2ZpbGU/OihmaGlyLkZoaXJFbGVtZW50fG51bGwpW107XHJcbiAgLyoqXHJcbiAgICogU2VjdXJpdHkgbGFiZWxzIGFwcGxpZWQgdG8gdGhpcyByZXNvdXJjZS4gVGhlc2UgdGFncyBjb25uZWN0IHNwZWNpZmljIHJlc291cmNlcyB0byB0aGUgb3ZlcmFsbCBzZWN1cml0eSBwb2xpY3kgYW5kIGluZnJhc3RydWN0dXJlLlxyXG4gICAqL1xyXG4gIHNlY3VyaXR5PzogKGZoaXIuQ29kaW5nfG51bGwpW118dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIFRhZ3MgYXBwbGllZCB0byB0aGlzIHJlc291cmNlLiBUYWdzIGFyZSBpbnRlbmRlZCB0byBiZSB1c2VkIHRvIGlkZW50aWZ5IGFuZCByZWxhdGUgcmVzb3VyY2VzIHRvIHByb2Nlc3MgYW5kIHdvcmtmbG93LCBhbmQgYXBwbGljYXRpb25zIGFyZSBub3QgcmVxdWlyZWQgdG8gY29uc2lkZXIgdGhlIHRhZ3Mgd2hlbiBpbnRlcnByZXRpbmcgdGhlIG1lYW5pbmcgb2YgYSByZXNvdXJjZS5cclxuICAgKi9cclxuICB0YWc/OiAoZmhpci5Db2Rpbmd8bnVsbClbXXx1bmRlZmluZWQ7XHJcbn1cclxuIl19