// <auto-generated/>
// Contents of: hl7.fhir.r2.core version: 1.0.2
// Minimum TypeScript Version: 3.7
// FHIR Resource: DeviceComponent
export {};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGV2aWNlQ29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpckpzb24vRGV2aWNlQ29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQiwrQ0FBK0M7QUFDL0Msa0NBQWtDO0FBQ2xDLGlDQUFpQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yMi5jb3JlIHZlcnNpb246IDEuMC4yXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBSZXNvdXJjZTogRGV2aWNlQ29tcG9uZW50XHJcblxyXG5pbXBvcnQgKiBhcyBmaGlyIGZyb20gJy4uL2ZoaXJKc29uLmpzJztcclxuXHJcblxyXG4vKipcclxuICogRGVzY3JpYmVzIHRoZSBwcm9kdWN0aW9uIHNwZWNpZmljYXRpb24gc3VjaCBhcyBjb21wb25lbnQgcmV2aXNpb24sIHNlcmlhbCBudW1iZXIsIGV0Yy5cclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgRGV2aWNlQ29tcG9uZW50UHJvZHVjdGlvblNwZWNpZmljYXRpb24gZXh0ZW5kcyBmaGlyLkJhY2tib25lRWxlbWVudCB7IFxyXG4gIC8qKlxyXG4gICAqIERlc2NyaWJlcyB0aGUgc3BlY2lmaWNhdGlvbiB0eXBlLCBzdWNoIGFzLCBzZXJpYWwgbnVtYmVyLCBwYXJ0IG51bWJlciwgaGFyZHdhcmUgcmV2aXNpb24sIHNvZnR3YXJlIHJldmlzaW9uLCBldGMuXHJcbiAgICovXHJcbiAgc3BlY1R5cGU/OiBmaGlyLkNvZGVhYmxlQ29uY2VwdHx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRGVzY3JpYmVzIHRoZSBpbnRlcm5hbCBjb21wb25lbnQgdW5pcXVlIGlkZW50aWZpY2F0aW9uLiBUaGlzIGlzIGEgcHJvdmlzaW9uIGZvciBtYW51ZmFjdHVyZSBzcGVjaWZpYyBzdGFuZGFyZCBjb21wb25lbnRzIHVzaW5nIGEgcHJpdmF0ZSBPSUQuIDExMDczLTEwMTAxIGhhcyBhIHBhcnRpdGlvbiBmb3IgcHJpdmF0ZSBPSUQgc2VtYW50aWMgdGhhdCB0aGUgbWFudWZhY3R1cmUgY2FuIG1ha2UgdXNlIG9mLlxyXG4gICAqL1xyXG4gIGNvbXBvbmVudElkPzogZmhpci5JZGVudGlmaWVyfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBEZXNjcmliZXMgdGhlIHByaW50YWJsZSBzdHJpbmcgZGVmaW5pbmcgdGhlIGNvbXBvbmVudC5cclxuICAgKi9cclxuICBwcm9kdWN0aW9uU3BlYz86IHN0cmluZ3x1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IERldmljZUNvbXBvbmVudC5wcm9kdWN0aW9uU3BlY2lmaWNhdGlvbi5wcm9kdWN0aW9uU3BlY1xyXG4gICAqL1xyXG4gIF9wcm9kdWN0aW9uU3BlYz86Zmhpci5GaGlyRWxlbWVudDtcclxufVxyXG5cclxuLyoqXHJcbiAqIERlc2NyaWJlcyB0aGUgY2hhcmFjdGVyaXN0aWNzLCBvcGVyYXRpb25hbCBzdGF0dXMgYW5kIGNhcGFiaWxpdGllcyBvZiBhIG1lZGljYWwtcmVsYXRlZCBjb21wb25lbnQgb2YgYSBtZWRpY2FsIGRldmljZS5cclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgRGV2aWNlQ29tcG9uZW50IGV4dGVuZHMgZmhpci5Eb21haW5SZXNvdXJjZSB7IFxyXG4gIC8qKlxyXG4gICAqIFJlc291cmNlIFR5cGUgTmFtZVxyXG4gICAqL1xyXG4gIHJlc291cmNlVHlwZTogXCJEZXZpY2VDb21wb25lbnRcInxudWxsO1xyXG4gIC8qKlxyXG4gICAqIERlc2NyaWJlcyB0aGUgc3BlY2lmaWMgY29tcG9uZW50IHR5cGUgYXMgZGVmaW5lZCBpbiB0aGUgb2JqZWN0LW9yaWVudGVkIG9yIG1ldHJpYyBub21lbmNsYXR1cmUgcGFydGl0aW9uLlxyXG4gICAqL1xyXG4gIHR5cGU6IGZoaXIuQ29kZWFibGVDb25jZXB0fG51bGw7XHJcbiAgLyoqXHJcbiAgICogRGVzY3JpYmVzIHRoZSBsb2NhbCBhc3NpZ25lZCB1bmlxdWUgaWRlbnRpZmljYXRpb24gYnkgdGhlIHNvZnR3YXJlLiBGb3IgZXhhbXBsZTogaGFuZGxlIElELlxyXG4gICAqL1xyXG4gIGlkZW50aWZpZXI6IGZoaXIuSWRlbnRpZmllcnxudWxsO1xyXG4gIC8qKlxyXG4gICAqIERlc2NyaWJlcyB0aGUgdGltZXN0YW1wIGZvciB0aGUgbW9zdCByZWNlbnQgc3lzdGVtIGNoYW5nZSB3aGljaCBpbmNsdWRlcyBkZXZpY2UgY29uZmlndXJhdGlvbiBvciBzZXR0aW5nIGNoYW5nZS5cclxuICAgKi9cclxuICBsYXN0U3lzdGVtQ2hhbmdlOiBzdHJpbmd8bnVsbDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogRGV2aWNlQ29tcG9uZW50Lmxhc3RTeXN0ZW1DaGFuZ2VcclxuICAgKi9cclxuICBfbGFzdFN5c3RlbUNoYW5nZT86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBEZXNjcmliZXMgdGhlIGxpbmsgdG8gdGhlIHNvdXJjZSBEZXZpY2UgdGhhdCBjb250YWlucyBhZG1pbmlzdHJhdGl2ZSBkZXZpY2UgaW5mb3JtYXRpb24gc3VjaCBhcyBtYW51ZmFjdHVyZSwgc2VyaWFsIG51bWJlciwgZXRjLlxyXG4gICAqL1xyXG4gIHNvdXJjZT86IGZoaXIuUmVmZXJlbmNlfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBEZXNjcmliZXMgdGhlIGxpbmsgdG8gdGhlIHBhcmVudCByZXNvdXJjZS4gRm9yIGV4YW1wbGU6IENoYW5uZWwgaXMgbGlua2VkIHRvIGl0cyBWTUQgcGFyZW50LlxyXG4gICAqL1xyXG4gIHBhcmVudD86IGZoaXIuUmVmZXJlbmNlfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBJbmRpY2F0ZXMgY3VycmVudCBvcGVyYXRpb25hbCBzdGF0dXMgb2YgdGhlIGRldmljZS4gRm9yIGV4YW1wbGU6IE9uLCBPZmYsIFN0YW5kYnksIGV0Yy5cclxuICAgKi9cclxuICBvcGVyYXRpb25hbFN0YXR1cz86IChmaGlyLkNvZGVhYmxlQ29uY2VwdHxudWxsKVtdfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBEZXNjcmliZXMgdGhlIHBhcmFtZXRlciBncm91cCBzdXBwb3J0ZWQgYnkgdGhlIGN1cnJlbnQgZGV2aWNlIGNvbXBvbmVudCB0aGF0IGlzIGJhc2VkIG9uIHNvbWUgbm9tZW5jbGF0dXJlLCBlLmcuIGNhcmRpb3Zhc2N1bGFyLlxyXG4gICAqL1xyXG4gIHBhcmFtZXRlckdyb3VwPzogZmhpci5Db2RlYWJsZUNvbmNlcHR8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIERlc2NyaWJlcyB0aGUgcGh5c2ljYWwgcHJpbmNpcGxlIG9mIHRoZSBtZWFzdXJlbWVudC4gRm9yIGV4YW1wbGU6IHRoZXJtYWwsIGNoZW1pY2FsLCBhY291c3RpY2FsLCBldGMuXHJcbiAgICovXHJcbiAgbWVhc3VyZW1lbnRQcmluY2lwbGU/OiAnYWNvdXN0aWNhbCd8J2Jpb2xvZ2ljYWwnfCdjaGVtaWNhbCd8J2VsZWN0cmljYWwnfCdpbXBlZGFuY2UnfCdtYW51YWwnfCdtZWNoYW5pY2FsJ3wnbnVjbGVhcid8J29wdGljYWwnfCdvdGhlcid8J3RoZXJtYWwnfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogRGV2aWNlQ29tcG9uZW50Lm1lYXN1cmVtZW50UHJpbmNpcGxlXHJcbiAgICovXHJcbiAgX21lYXN1cmVtZW50UHJpbmNpcGxlPzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIERlc2NyaWJlcyB0aGUgcHJvZHVjdGlvbiBzcGVjaWZpY2F0aW9uIHN1Y2ggYXMgY29tcG9uZW50IHJldmlzaW9uLCBzZXJpYWwgbnVtYmVyLCBldGMuXHJcbiAgICovXHJcbiAgcHJvZHVjdGlvblNwZWNpZmljYXRpb24/OiAoZmhpci5EZXZpY2VDb21wb25lbnRQcm9kdWN0aW9uU3BlY2lmaWNhdGlvbnxudWxsKVtdfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBEZXNjcmliZXMgdGhlIGxhbmd1YWdlIGNvZGUgZm9yIHRoZSBodW1hbi1yZWFkYWJsZSB0ZXh0IHN0cmluZyBwcm9kdWNlZCBieSB0aGUgZGV2aWNlLiBUaGlzIGxhbmd1YWdlIGNvZGUgd2lsbCBmb2xsb3cgdGhlIElFVEYgbGFuZ3VhZ2UgdGFnLiBFeGFtcGxlOiBlbi1VUy5cclxuICAgKi9cclxuICBsYW5ndWFnZUNvZGU/OiBmaGlyLkNvZGVhYmxlQ29uY2VwdHx1bmRlZmluZWQ7XHJcbn1cclxuIl19