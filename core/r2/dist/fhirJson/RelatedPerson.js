// <auto-generated/>
// Contents of: hl7.fhir.r2.core version: 1.0.2
// Minimum TypeScript Version: 3.7
// FHIR Resource: RelatedPerson
export {};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVsYXRlZFBlcnNvbi5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJKc29uL1JlbGF0ZWRQZXJzb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLCtDQUErQztBQUMvQyxrQ0FBa0M7QUFDbEMsK0JBQStCIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnIyLmNvcmUgdmVyc2lvbjogMS4wLjJcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFJlc291cmNlOiBSZWxhdGVkUGVyc29uXHJcblxyXG5pbXBvcnQgKiBhcyBmaGlyIGZyb20gJy4uL2ZoaXJKc29uLmpzJztcclxuXHJcblxyXG4vKipcclxuICogSW5mb3JtYXRpb24gYWJvdXQgYSBwZXJzb24gdGhhdCBpcyBpbnZvbHZlZCBpbiB0aGUgY2FyZSBmb3IgYSBwYXRpZW50LCBidXQgd2hvIGlzIG5vdCB0aGUgdGFyZ2V0IG9mIGhlYWx0aGNhcmUsIG5vciBoYXMgYSBmb3JtYWwgcmVzcG9uc2liaWxpdHkgaW4gdGhlIGNhcmUgcHJvY2Vzcy5cclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgUmVsYXRlZFBlcnNvbiBleHRlbmRzIGZoaXIuRG9tYWluUmVzb3VyY2UgeyBcclxuICAvKipcclxuICAgKiBSZXNvdXJjZSBUeXBlIE5hbWVcclxuICAgKi9cclxuICByZXNvdXJjZVR5cGU6IFwiUmVsYXRlZFBlcnNvblwifG51bGw7XHJcbiAgLyoqXHJcbiAgICogUGVvcGxlIGFyZSBrbm93biBieSBhIHZhcmlldHkgb2YgaWRzLiBTb21lIGluc3RpdHV0aW9ucyBtYWludGFpbiBzZXZlcmFsLCBhbmQgbW9zdCBjb2xsZWN0IGlkZW50aWZpZXJzIGZvciBleGNoYW5nZSB3aXRoIG90aGVyIG9yZ2FuaXphdGlvbnMgY29uY2VybmluZyB0aGUgcGF0aWVudC4gRXhhbXBsZXMgYXJlIG5hdGlvbmFsIHBlcnNvbiBpZGVudGlmaWVyIGFuZCBsb2NhbCBpZGVudGlmaWVyLlxyXG4gICAqL1xyXG4gIGlkZW50aWZpZXI/OiAoZmhpci5JZGVudGlmaWVyfG51bGwpW118dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIFdlIG5lZWQgdG8ga25vdyB3aGljaCBwYXRpZW50IHRoaXMgUmVsYXRlZFBlcnNvbiBpcyByZWxhdGVkIHRvLlxyXG4gICAqL1xyXG4gIHBhdGllbnQ6IGZoaXIuUmVmZXJlbmNlfG51bGw7XHJcbiAgLyoqXHJcbiAgICogV2UgbmVlZCB0byBrbm93IHRoZSByZWxhdGlvbnNoaXAgd2l0aCB0aGUgcGF0aWVudCBzaW5jZSBpdCBpbmZsdWVuY2VzIHRoZSBpbnRlcnByZXRhdGlvbiBvZiB0aGUgaW5mb3JtYXRpb24gYXR0cmlidXRlZCB0byB0aGlzIHBlcnNvbi5cclxuICAgKi9cclxuICByZWxhdGlvbnNoaXA/OiBmaGlyLkNvZGVhYmxlQ29uY2VwdHx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogUmVsYXRlZCBwZXJzb25zIG5lZWQgdG8gYmUgaWRlbnRpZmllZCBieSBuYW1lLCBidXQgaXQgaXMgdW5jb21tb24gdG8gbmVlZCBkZXRhaWxzIGFib3V0IG11bHRpcGxlIG90aGVyIG5hbWVzIGZvciB0aGF0IHBlcnNvbi5cclxuICAgKi9cclxuICBuYW1lPzogZmhpci5IdW1hbk5hbWV8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIFBlb3BsZSBoYXZlIChwcmltYXJ5KSB3YXlzIHRvIGNvbnRhY3QgdGhlbSBpbiBzb21lIHdheSBzdWNoIGFzIHBob25lLCBlbWFpbC5cclxuICAgKi9cclxuICB0ZWxlY29tPzogKGZoaXIuQ29udGFjdFBvaW50fG51bGwpW118dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIE5lZWRlZCBmb3IgaWRlbnRpZmljYXRpb24gb2YgdGhlIHBlcnNvbiwgaW4gY29tYmluYXRpb24gd2l0aCAoYXQgbGVhc3QpIG5hbWUgYW5kIGJpcnRoIGRhdGUuXHJcbiAgICovXHJcbiAgZ2VuZGVyPzogJ2ZlbWFsZSd8J21hbGUnfCdvdGhlcid8J3Vua25vd24nfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogUmVsYXRlZFBlcnNvbi5nZW5kZXJcclxuICAgKi9cclxuICBfZ2VuZGVyPzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIFRoZSBkYXRlIG9uIHdoaWNoIHRoZSByZWxhdGVkIHBlcnNvbiB3YXMgYm9ybi5cclxuICAgKi9cclxuICBiaXJ0aERhdGU/OiBzdHJpbmd8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBSZWxhdGVkUGVyc29uLmJpcnRoRGF0ZVxyXG4gICAqL1xyXG4gIF9iaXJ0aERhdGU/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbiAgLyoqXHJcbiAgICogTmVlZCB0byBrZWVwIHRyYWNrIHdoZXJlIHRoZSByZWxhdGVkIHBlcnNvbiBjYW4gYmUgY29udGFjdGVkIHBlciBwb3N0YWwgbWFpbCBvciB2aXNpdGVkLlxyXG4gICAqL1xyXG4gIGFkZHJlc3M/OiAoZmhpci5BZGRyZXNzfG51bGwpW118dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIE1hbnkgRUhSIHN5c3RlbXMgaGF2ZSB0aGUgY2FwYWJpbGl0eSB0byBjYXB0dXJlIGFuIGltYWdlIG9mIHBlcnNvbnMuIEZpdHMgd2l0aCBuZXdlciBzb2NpYWwgbWVkaWEgdXNhZ2UgdG9vLlxyXG4gICAqL1xyXG4gIHBob3RvPzogKGZoaXIuQXR0YWNobWVudHxudWxsKVtdfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBUaGUgcGVyaW9kIG9mIHRpbWUgdGhhdCB0aGlzIHJlbGF0aW9uc2hpcCBpcyBjb25zaWRlcmVkIHRvIGJlIHZhbGlkLiBJZiB0aGVyZSBhcmUgbm8gZGF0ZXMgZGVmaW5lZCwgdGhlbiB0aGUgaW50ZXJ2YWwgaXMgdW5rbm93bi5cclxuICAgKi9cclxuICBwZXJpb2Q/OiBmaGlyLlBlcmlvZHx1bmRlZmluZWQ7XHJcbn1cclxuIl19