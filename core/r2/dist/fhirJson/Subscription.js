// <auto-generated/>
// Contents of: hl7.fhir.r2.core version: 1.0.2
// Minimum TypeScript Version: 3.7
// FHIR Resource: Subscription
export {};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3Vic2NyaXB0aW9uLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpckpzb24vU3Vic2NyaXB0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQiwrQ0FBK0M7QUFDL0Msa0NBQWtDO0FBQ2xDLDhCQUE4QiIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yMi5jb3JlIHZlcnNpb246IDEuMC4yXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBSZXNvdXJjZTogU3Vic2NyaXB0aW9uXHJcblxyXG5pbXBvcnQgKiBhcyBmaGlyIGZyb20gJy4uL2ZoaXJKc29uLmpzJztcclxuXHJcblxyXG4vKipcclxuICogRGV0YWlscyB3aGVyZSB0byBzZW5kIG5vdGlmaWNhdGlvbnMgd2hlbiByZXNvdXJjZXMgYXJlIHJlY2VpdmVkIHRoYXQgbWVldCB0aGUgY3JpdGVyaWEuXHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIFN1YnNjcmlwdGlvbkNoYW5uZWwgZXh0ZW5kcyBmaGlyLkJhY2tib25lRWxlbWVudCB7IFxyXG4gIC8qKlxyXG4gICAqIFRoZSB0eXBlIG9mIGNoYW5uZWwgdG8gc2VuZCBub3RpZmljYXRpb25zIG9uLlxyXG4gICAqL1xyXG4gIHR5cGU6ICdlbWFpbCd8J21lc3NhZ2UnfCdyZXN0LWhvb2snfCdzbXMnfCd3ZWJzb2NrZXQnfG51bGw7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IFN1YnNjcmlwdGlvbi5jaGFubmVsLnR5cGVcclxuICAgKi9cclxuICBfdHlwZT86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBUaGUgdXJpIHRoYXQgZGVzY3JpYmVzIHRoZSBhY3R1YWwgZW5kLXBvaW50IHRvIHNlbmQgbWVzc2FnZXMgdG8uXHJcbiAgICovXHJcbiAgZW5kcG9pbnQ/OiBzdHJpbmd8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBTdWJzY3JpcHRpb24uY2hhbm5lbC5lbmRwb2ludFxyXG4gICAqL1xyXG4gIF9lbmRwb2ludD86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBUaGUgbWltZSB0eXBlIHRvIHNlbmQgdGhlIHBheWxvYWQgaW4gLSBlaXRoZXIgYXBwbGljYXRpb24veG1sK2ZoaXIsIG9yIGFwcGxpY2F0aW9uL2pzb24rZmhpci4gSWYgdGhlIG1pbWUgdHlwZSBpcyBibGFuaywgdGhlbiB0aGVyZSBpcyBubyBwYXlsb2FkIGluIHRoZSBub3RpZmljYXRpb24sIGp1c3QgYSBub3RpZmljYXRpb24uXHJcbiAgICovXHJcbiAgcGF5bG9hZDogc3RyaW5nfG51bGw7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IFN1YnNjcmlwdGlvbi5jaGFubmVsLnBheWxvYWRcclxuICAgKi9cclxuICBfcGF5bG9hZD86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBBZGRpdGlvbmFsIGhlYWRlcnMgLyBpbmZvcm1hdGlvbiB0byBzZW5kIGFzIHBhcnQgb2YgdGhlIG5vdGlmaWNhdGlvbi5cclxuICAgKi9cclxuICBoZWFkZXI/OiBzdHJpbmd8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBTdWJzY3JpcHRpb24uY2hhbm5lbC5oZWFkZXJcclxuICAgKi9cclxuICBfaGVhZGVyPzpmaGlyLkZoaXJFbGVtZW50O1xyXG59XHJcblxyXG4vKipcclxuICogVGhlIHN1YnNjcmlwdGlvbiByZXNvdXJjZSBpcyB1c2VkIHRvIGRlZmluZSBhIHB1c2ggYmFzZWQgc3Vic2NyaXB0aW9uIGZyb20gYSBzZXJ2ZXIgdG8gYW5vdGhlciBzeXN0ZW0uIE9uY2UgYSBzdWJzY3JpcHRpb24gaXMgcmVnaXN0ZXJlZCB3aXRoIHRoZSBzZXJ2ZXIsIHRoZSBzZXJ2ZXIgY2hlY2tzIGV2ZXJ5IHJlc291cmNlIHRoYXQgaXMgY3JlYXRlZCBvciB1cGRhdGVkLCBhbmQgaWYgdGhlIHJlc291cmNlIG1hdGNoZXMgdGhlIGdpdmVuIGNyaXRlcmlhLCBpdCBzZW5kcyBhIG1lc3NhZ2Ugb24gdGhlIGRlZmluZWQgXCJjaGFubmVsXCIgc28gdGhhdCBhbm90aGVyIHN5c3RlbSBpcyBhYmxlIHRvIHRha2UgYW4gYXBwcm9wcmlhdGUgYWN0aW9uLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBTdWJzY3JpcHRpb24gZXh0ZW5kcyBmaGlyLkRvbWFpblJlc291cmNlIHsgXHJcbiAgLyoqXHJcbiAgICogUmVzb3VyY2UgVHlwZSBOYW1lXHJcbiAgICovXHJcbiAgcmVzb3VyY2VUeXBlOiBcIlN1YnNjcmlwdGlvblwifG51bGw7XHJcbiAgLyoqXHJcbiAgICogVGhlIHJ1bGVzIHRoYXQgdGhlIHNlcnZlciBzaG91bGQgdXNlIHRvIGRldGVybWluZSB3aGVuIHRvIGdlbmVyYXRlIG5vdGlmaWNhdGlvbnMgZm9yIHRoaXMgc3Vic2NyaXB0aW9uLlxyXG4gICAqL1xyXG4gIGNyaXRlcmlhOiBzdHJpbmd8bnVsbDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogU3Vic2NyaXB0aW9uLmNyaXRlcmlhXHJcbiAgICovXHJcbiAgX2NyaXRlcmlhPzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIENvbnRhY3QgZGV0YWlscyBmb3IgYSBodW1hbiB0byBjb250YWN0IGFib3V0IHRoZSBzdWJzY3JpcHRpb24uIFRoZSBwcmltYXJ5IHVzZSBvZiB0aGlzIGZvciBzeXN0ZW0gYWRtaW5pc3RyYXRvciB0cm91Ymxlc2hvb3RpbmcuXHJcbiAgICovXHJcbiAgY29udGFjdD86IChmaGlyLkNvbnRhY3RQb2ludHxudWxsKVtdfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBBIGRlc2NyaXB0aW9uIG9mIHdoeSB0aGlzIHN1YnNjcmlwdGlvbiBpcyBkZWZpbmVkLlxyXG4gICAqL1xyXG4gIHJlYXNvbjogc3RyaW5nfG51bGw7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IFN1YnNjcmlwdGlvbi5yZWFzb25cclxuICAgKi9cclxuICBfcmVhc29uPzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIFRoZSBzdGF0dXMgb2YgdGhlIHN1YnNjcmlwdGlvbiwgd2hpY2ggbWFya3MgdGhlIHNlcnZlciBzdGF0ZSBmb3IgbWFuYWdpbmcgdGhlIHN1YnNjcmlwdGlvbi5cclxuICAgKi9cclxuICBzdGF0dXM6ICdhY3RpdmUnfCdlcnJvcid8J29mZid8J3JlcXVlc3RlZCd8bnVsbDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogU3Vic2NyaXB0aW9uLnN0YXR1c1xyXG4gICAqL1xyXG4gIF9zdGF0dXM/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbiAgLyoqXHJcbiAgICogQSByZWNvcmQgb2YgdGhlIGxhc3QgZXJyb3IgdGhhdCBvY2N1cnJlZCB3aGVuIHRoZSBzZXJ2ZXIgcHJvY2Vzc2VkIGEgbm90aWZpY2F0aW9uLlxyXG4gICAqL1xyXG4gIGVycm9yPzogc3RyaW5nfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogU3Vic2NyaXB0aW9uLmVycm9yXHJcbiAgICovXHJcbiAgX2Vycm9yPzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIERldGFpbHMgd2hlcmUgdG8gc2VuZCBub3RpZmljYXRpb25zIHdoZW4gcmVzb3VyY2VzIGFyZSByZWNlaXZlZCB0aGF0IG1lZXQgdGhlIGNyaXRlcmlhLlxyXG4gICAqL1xyXG4gIGNoYW5uZWw6IGZoaXIuU3Vic2NyaXB0aW9uQ2hhbm5lbHxudWxsO1xyXG4gIC8qKlxyXG4gICAqIFRoZSB0aW1lIGZvciB0aGUgc2VydmVyIHRvIHR1cm4gdGhlIHN1YnNjcmlwdGlvbiBvZmYuXHJcbiAgICovXHJcbiAgZW5kPzogc3RyaW5nfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogU3Vic2NyaXB0aW9uLmVuZFxyXG4gICAqL1xyXG4gIF9lbmQ/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbiAgLyoqXHJcbiAgICogQSB0YWcgdG8gYWRkIHRvIGFueSByZXNvdXJjZSB0aGF0IG1hdGNoZXMgdGhlIGNyaXRlcmlhLCBhZnRlciB0aGUgc3Vic2NyaXB0aW9uIGlzIHByb2Nlc3NlZC5cclxuICAgKi9cclxuICB0YWc/OiAoZmhpci5Db2Rpbmd8bnVsbClbXXx1bmRlZmluZWQ7XHJcbn1cclxuIl19