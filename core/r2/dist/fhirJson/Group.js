// <auto-generated/>
// Contents of: hl7.fhir.r2.core version: 1.0.2
// Minimum TypeScript Version: 3.7
// FHIR Resource: Group
export {};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR3JvdXAuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlySnNvbi9Hcm91cC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyx1QkFBdUIiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjIuY29yZSB2ZXJzaW9uOiAxLjAuMlxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgUmVzb3VyY2U6IEdyb3VwXHJcblxyXG5pbXBvcnQgKiBhcyBmaGlyIGZyb20gJy4uL2ZoaXJKc29uLmpzJztcclxuXHJcblxyXG4vKipcclxuICogTmVlZHMgdG8gYmUgYSBnZW5lcmljIG1lY2hhbmlzbSBmb3IgaWRlbnRpZnlpbmcgd2hhdCBpbmRpdmlkdWFscyBjYW4gYmUgcGFydCBvZiBhIGdyb3VwLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBHcm91cENoYXJhY3RlcmlzdGljIGV4dGVuZHMgZmhpci5CYWNrYm9uZUVsZW1lbnQgeyBcclxuICAvKipcclxuICAgKiBOZWVkIGEgZm9ybWFsIHdheSBvZiBpZGVudGlmeWluZyB0aGUgY2hhcmFjdGVyaXN0aWMgYmVpbmcgZGVzY3JpYmVkLlxyXG4gICAqL1xyXG4gIGNvZGU6IGZoaXIuQ29kZWFibGVDb25jZXB0fG51bGw7XHJcbiAgLyoqXHJcbiAgICogVGhlIHZhbHVlIG9mIHRoZSBjaGFyYWN0ZXJpc3RpYyBpcyB3aGF0IGRldGVybWluZXMgZ3JvdXAgbWVtYmVyc2hpcC5cclxuICAgKi9cclxuICB2YWx1ZUNvZGVhYmxlQ29uY2VwdD86IGZoaXIuQ29kZWFibGVDb25jZXB0fHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBUaGUgdmFsdWUgb2YgdGhlIGNoYXJhY3RlcmlzdGljIGlzIHdoYXQgZGV0ZXJtaW5lcyBncm91cCBtZW1iZXJzaGlwLlxyXG4gICAqL1xyXG4gIHZhbHVlQm9vbGVhbj86IGJvb2xlYW58dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBHcm91cC5jaGFyYWN0ZXJpc3RpYy52YWx1ZVt4XVxyXG4gICAqL1xyXG4gIF92YWx1ZUJvb2xlYW4/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbiAgLyoqXHJcbiAgICogVGhlIHZhbHVlIG9mIHRoZSBjaGFyYWN0ZXJpc3RpYyBpcyB3aGF0IGRldGVybWluZXMgZ3JvdXAgbWVtYmVyc2hpcC5cclxuICAgKi9cclxuICB2YWx1ZVF1YW50aXR5PzogZmhpci5RdWFudGl0eXx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogVGhlIHZhbHVlIG9mIHRoZSBjaGFyYWN0ZXJpc3RpYyBpcyB3aGF0IGRldGVybWluZXMgZ3JvdXAgbWVtYmVyc2hpcC5cclxuICAgKi9cclxuICB2YWx1ZVJhbmdlPzogZmhpci5SYW5nZXx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogU29tZXRpbWVzIGdyb3VwIG1lbWJlcnNoaXAgaXMgZGV0ZXJtaW5lZCBieSBjaGFyYWN0ZXJpc3RpY3Mgbm90IHBvc3Nlc3NlZC5cclxuICAgKi9cclxuICBleGNsdWRlOiBib29sZWFufG51bGw7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IEdyb3VwLmNoYXJhY3RlcmlzdGljLmV4Y2x1ZGVcclxuICAgKi9cclxuICBfZXhjbHVkZT86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBUaGUgcGVyaW9kIG92ZXIgd2hpY2ggdGhlIGNoYXJhY3RlcmlzdGljIGlzIHRlc3RlZDsgZS5nLiB0aGUgcGF0aWVudCBoYWQgYW4gb3BlcmF0aW9uIGR1cmluZyB0aGUgbW9udGggb2YgSnVuZS5cclxuICAgKi9cclxuICBwZXJpb2Q/OiBmaGlyLlBlcmlvZHx1bmRlZmluZWQ7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBPZnRlbiB0aGUgb25seSB0aGluZyBvZiBpbnRlcmVzdCBhYm91dCBhIGdyb3VwIGlzIFwid2hvJ3MgaW4gaXRcIi5cclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgR3JvdXBNZW1iZXIgZXh0ZW5kcyBmaGlyLkJhY2tib25lRWxlbWVudCB7IFxyXG4gIC8qKlxyXG4gICAqIEEgcmVmZXJlbmNlIHRvIHRoZSBlbnRpdHkgdGhhdCBpcyBhIG1lbWJlciBvZiB0aGUgZ3JvdXAuIE11c3QgYmUgY29uc2lzdGVudCB3aXRoIEdyb3VwLnR5cGUuXHJcbiAgICovXHJcbiAgZW50aXR5OiBmaGlyLlJlZmVyZW5jZXxudWxsO1xyXG4gIC8qKlxyXG4gICAqIE5lZWQgdG8gdHJhY2sgd2hvIHdhcyBpbiBhIGdyb3VwIGF0IGEgIHBhcnRpY3VsYXIgdGltZS5cclxuICAgKi9cclxuICBwZXJpb2Q/OiBmaGlyLlBlcmlvZHx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogU29tZXRpbWVzIHlvdSBkb24ndCBrbm93IHdoZW4gc29tZW9uZSBzdG9wcGVkIGJlaW5nIGluIGEgZ3JvdXAsIGJ1dCBub3Qgd2hlbi5cclxuICAgKi9cclxuICBpbmFjdGl2ZT86IGJvb2xlYW58dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBHcm91cC5tZW1iZXIuaW5hY3RpdmVcclxuICAgKi9cclxuICBfaW5hY3RpdmU/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBSZXByZXNlbnRzIGEgZGVmaW5lZCBjb2xsZWN0aW9uIG9mIGVudGl0aWVzIHRoYXQgbWF5IGJlIGRpc2N1c3NlZCBvciBhY3RlZCB1cG9uIGNvbGxlY3RpdmVseSBidXQgd2hpY2ggYXJlIG5vdCBleHBlY3RlZCB0byBhY3QgY29sbGVjdGl2ZWx5IGFuZCBhcmUgbm90IGZvcm1hbGx5IG9yIGxlZ2FsbHkgcmVjb2duaXplZDsgaS5lLiBhIGNvbGxlY3Rpb24gb2YgZW50aXRpZXMgdGhhdCBpc24ndCBhbiBPcmdhbml6YXRpb24uXHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIEdyb3VwIGV4dGVuZHMgZmhpci5Eb21haW5SZXNvdXJjZSB7IFxyXG4gIC8qKlxyXG4gICAqIFJlc291cmNlIFR5cGUgTmFtZVxyXG4gICAqL1xyXG4gIHJlc291cmNlVHlwZTogXCJHcm91cFwifG51bGw7XHJcbiAgLyoqXHJcbiAgICogQWxsb3dzIHRoZSBncm91cCB0byBiZSByZWZlcmVuY2VkIGZyb20gZXh0ZXJuYWwgc3BlY2lmaWNhdGlvbnMuXHJcbiAgICovXHJcbiAgaWRlbnRpZmllcj86IChmaGlyLklkZW50aWZpZXJ8bnVsbClbXXx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogSWRlbnRpZmllcyB3aGF0IHR5cGUgb2YgcmVzb3VyY2VzIHRoZSBncm91cCBpcyBtYWRlIHVwIG9mLlxyXG4gICAqL1xyXG4gIHR5cGU6ICdhbmltYWwnfCdkZXZpY2UnfCdtZWRpY2F0aW9uJ3wncGVyc29uJ3wncHJhY3RpdGlvbmVyJ3wnc3Vic3RhbmNlJ3xudWxsO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBHcm91cC50eXBlXHJcbiAgICovXHJcbiAgX3R5cGU/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbiAgLyoqXHJcbiAgICogVGhlcmUgYXJlIHVzZS1jYXNlcyBmb3IgZ3JvdXBzIHRoYXQgZGVmaW5lIHNwZWNpZmljIGNvbGxlY3Rpb25zIG9mIGluZGl2aWR1YWxzLCBhbmQgb3RoZXIgZ3JvdXBzIHRoYXQgZGVmaW5lIFwidHlwZXNcIiBvZiBpbnRlbmRlZCBpbmRpdmlkdWFscy4gIFRoZSByZXF1aXJlbWVudHMgZm9yIGJvdGgga2luZHMgb2YgZ3JvdXBzIGFyZSBzaW1pbGFyLCBzbyB3ZSB1c2UgYSBzaW5nbGUgcmVzb3VyY2UsIGRpc3Rpbmd1aXNoZWQgYnkgdGhpcyBmbGFnLlxyXG4gICAqL1xyXG4gIGFjdHVhbDogYm9vbGVhbnxudWxsO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBHcm91cC5hY3R1YWxcclxuICAgKi9cclxuICBfYWN0dWFsPzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIFByb3ZpZGVzIGEgc3BlY2lmaWMgdHlwZSBvZiByZXNvdXJjZSB0aGUgZ3JvdXAgaW5jbHVkZXM7IGUuZy4gXCJjb3dcIiwgXCJzeXJpbmdlXCIsIGV0Yy5cclxuICAgKi9cclxuICBjb2RlPzogZmhpci5Db2RlYWJsZUNvbmNlcHR8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIFVzZWQgdG8gaWRlbnRpZnkgdGhlIGdyb3VwIGluIGh1bWFuIGNvbW11bmljYXRpb24uXHJcbiAgICovXHJcbiAgbmFtZT86IHN0cmluZ3x1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IEdyb3VwLm5hbWVcclxuICAgKi9cclxuICBfbmFtZT86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBHcm91cCBzaXplIGlzIGEgY29tbW9uIGRlZmluaW5nIGNoYXJhY3RlcmlzdGljLlxyXG4gICAqL1xyXG4gIHF1YW50aXR5PzogbnVtYmVyfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogR3JvdXAucXVhbnRpdHlcclxuICAgKi9cclxuICBfcXVhbnRpdHk/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbiAgLyoqXHJcbiAgICogTmVlZHMgdG8gYmUgYSBnZW5lcmljIG1lY2hhbmlzbSBmb3IgaWRlbnRpZnlpbmcgd2hhdCBpbmRpdmlkdWFscyBjYW4gYmUgcGFydCBvZiBhIGdyb3VwLlxyXG4gICAqL1xyXG4gIGNoYXJhY3RlcmlzdGljPzogKGZoaXIuR3JvdXBDaGFyYWN0ZXJpc3RpY3xudWxsKVtdfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBPZnRlbiB0aGUgb25seSB0aGluZyBvZiBpbnRlcmVzdCBhYm91dCBhIGdyb3VwIGlzIFwid2hvJ3MgaW4gaXRcIi5cclxuICAgKi9cclxuICBtZW1iZXI/OiAoZmhpci5Hcm91cE1lbWJlcnxudWxsKVtdfHVuZGVmaW5lZDtcclxufVxyXG4iXX0=