// <auto-generated/>
// Contents of: hl7.fhir.r2.core version: 1.0.2
// Minimum TypeScript Version: 3.7
// FHIR Resource: AuditEvent
export {};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXVkaXRFdmVudC5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJKc29uL0F1ZGl0RXZlbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLCtDQUErQztBQUMvQyxrQ0FBa0M7QUFDbEMsNEJBQTRCIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnIyLmNvcmUgdmVyc2lvbjogMS4wLjJcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFJlc291cmNlOiBBdWRpdEV2ZW50XHJcblxyXG5pbXBvcnQgKiBhcyBmaGlyIGZyb20gJy4uL2ZoaXJKc29uLmpzJztcclxuXHJcblxyXG4vKipcclxuICogVGhlIGV2ZW50IG11c3QgYmUgaWRlbnRpZmllZC5cclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgQXVkaXRFdmVudEV2ZW50IGV4dGVuZHMgZmhpci5CYWNrYm9uZUVsZW1lbnQgeyBcclxuICAvKipcclxuICAgKiBUaGlzIGlkZW50aWZpZXMgdGhlIHBlcmZvcm1lZCBmdW5jdGlvbi4gRm9yIFwiRXhlY3V0ZVwiIEV2ZW50IEFjdGlvbiBDb2RlIGF1ZGl0IHJlY29yZHMsIHRoaXMgaWRlbnRpZmllcyB0aGUgYXBwbGljYXRpb24gZnVuY3Rpb24gcGVyZm9ybWVkLlxyXG4gICAqL1xyXG4gIHR5cGU6IGZoaXIuQ29kaW5nfG51bGw7XHJcbiAgLyoqXHJcbiAgICogVGhpcyBmaWVsZCBlbmFibGVzIHF1ZXJpZXMgb2YgbWVzc2FnZXMgYnkgaW1wbGVtZW50YXRpb24tZGVmaW5lZCBldmVudCBjYXRlZ29yaWVzLlxyXG4gICAqL1xyXG4gIHN1YnR5cGU/OiAoZmhpci5Db2Rpbmd8bnVsbClbXXx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogVGhpcyBicm9hZGx5IGluZGljYXRlcyB3aGF0IGtpbmQgb2YgYWN0aW9uIHdhcyBkb25lIG9uIHRoZSBQYXJ0aWNpcGFudCBPYmplY3QuXHJcbiAgICovXHJcbiAgYWN0aW9uPzogJ0MnfCdEJ3wnRSd8J1InfCdVJ3x1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IEF1ZGl0RXZlbnQuZXZlbnQuYWN0aW9uXHJcbiAgICovXHJcbiAgX2FjdGlvbj86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBUaGlzIHRpZXMgYW4gZXZlbnQgdG8gYSBzcGVjaWZpYyBkYXRlIGFuZCB0aW1lLiBTZWN1cml0eSBhdWRpdHMgdHlwaWNhbGx5IHJlcXVpcmUgYSBjb25zaXN0ZW50IHRpbWUgYmFzZSAoZS5nLiBVVEMpLCB0byBlbGltaW5hdGUgdGltZS16b25lIGlzc3VlcyBhcmlzaW5nIGZyb20gZ2VvZ3JhcGhpY2FsIGRpc3RyaWJ1dGlvbi5cclxuICAgKi9cclxuICBkYXRlVGltZTogc3RyaW5nfG51bGw7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IEF1ZGl0RXZlbnQuZXZlbnQuZGF0ZVRpbWVcclxuICAgKi9cclxuICBfZGF0ZVRpbWU/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbiAgLyoqXHJcbiAgICogSW5kaWNhdGVzIHdoZXRoZXIgdGhlIGV2ZW50IHN1Y2NlZWRlZCBvciBmYWlsZWQuXHJcbiAgICovXHJcbiAgb3V0Y29tZT86ICcwJ3wnMTInfCc0J3wnOCd8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBBdWRpdEV2ZW50LmV2ZW50Lm91dGNvbWVcclxuICAgKi9cclxuICBfb3V0Y29tZT86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBBIGZyZWUgdGV4dCBkZXNjcmlwdGlvbiBvZiB0aGUgb3V0Y29tZSBvZiB0aGUgZXZlbnQuXHJcbiAgICovXHJcbiAgb3V0Y29tZURlc2M/OiBzdHJpbmd8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBBdWRpdEV2ZW50LmV2ZW50Lm91dGNvbWVEZXNjXHJcbiAgICovXHJcbiAgX291dGNvbWVEZXNjPzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIFRoZSBwdXJwb3NlT2ZVc2UgKHJlYXNvbikgdGhhdCB3YXMgdXNlZCBkdXJpbmcgdGhlIGV2ZW50IGJlaW5nIHJlY29yZGVkLlxyXG4gICAqL1xyXG4gIHB1cnBvc2VPZkV2ZW50PzogKGZoaXIuQ29kaW5nfG51bGwpW118dW5kZWZpbmVkO1xyXG59XHJcblxyXG4vKipcclxuICogTG9naWNhbCBuZXR3b3JrIGxvY2F0aW9uIGZvciBhcHBsaWNhdGlvbiBhY3Rpdml0eSwgaWYgdGhlIGFjdGl2aXR5IGhhcyBhIG5ldHdvcmsgbG9jYXRpb24uXHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIEF1ZGl0RXZlbnRQYXJ0aWNpcGFudE5ldHdvcmsgZXh0ZW5kcyBmaGlyLkJhY2tib25lRWxlbWVudCB7IFxyXG4gIC8qKlxyXG4gICAqIFRoaXMgZGF0dW0gaWRlbnRpZmllcyB0aGUgdXNlcidzIG5ldHdvcmsgYWNjZXNzIHBvaW50LCB3aGljaCBtYXkgYmUgZGlzdGluY3QgZnJvbSB0aGUgc2VydmVyIHRoYXQgcGVyZm9ybWVkIHRoZSBhY3Rpb24uIEl0IGlzIGFuIG9wdGlvbmFsIHZhbHVlIHRoYXQgbWF5IGJlIHVzZWQgdG8gZ3JvdXAgZXZlbnRzIHJlY29yZGVkIG9uIHNlcGFyYXRlIHNlcnZlcnMgZm9yIGFuYWx5c2lzIG9mIGEgc3BlY2lmaWMgbmV0d29yayBhY2Nlc3MgcG9pbnQncyBkYXRhIGFjY2VzcyBhY3Jvc3MgYWxsIHNlcnZlcnMuXHJcbiAgICovXHJcbiAgYWRkcmVzcz86IHN0cmluZ3x1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IEF1ZGl0RXZlbnQucGFydGljaXBhbnQubmV0d29yay5hZGRyZXNzXHJcbiAgICovXHJcbiAgX2FkZHJlc3M/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbiAgLyoqXHJcbiAgICogVGhpcyBkYXR1bSBpZGVudGlmaWVzIHRoZSB0eXBlIG9mIG5ldHdvcmsgYWNjZXNzIHBvaW50IGlkZW50aWZpZXIgb2YgdGhlIHVzZXIgZGV2aWNlIGZvciB0aGUgYXVkaXQgZXZlbnQuIEl0IGlzIGFuIG9wdGlvbmFsIHZhbHVlIHRoYXQgbWF5IGJlIHVzZWQgdG8gZ3JvdXAgZXZlbnRzIHJlY29yZGVkIG9uIHNlcGFyYXRlIHNlcnZlcnMgZm9yIGFuYWx5c2lzIG9mIGFjY2VzcyBhY2NvcmRpbmcgdG8gYSBuZXR3b3JrIGFjY2VzcyBwb2ludCdzIHR5cGUuXHJcbiAgICovXHJcbiAgdHlwZT86ICcxJ3wnMid8JzMnfCc0J3wnNSd8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBBdWRpdEV2ZW50LnBhcnRpY2lwYW50Lm5ldHdvcmsudHlwZVxyXG4gICAqL1xyXG4gIF90eXBlPzpmaGlyLkZoaXJFbGVtZW50O1xyXG59XHJcblxyXG4vKipcclxuICogVGhlIGV2ZW50IGhhcyBvbmUgb3IgbW9yZSBhY3RpdmUgcGFydGljaXBhbnRzLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBBdWRpdEV2ZW50UGFydGljaXBhbnQgZXh0ZW5kcyBmaGlyLkJhY2tib25lRWxlbWVudCB7IFxyXG4gIC8qKlxyXG4gICAqIFRoaXMgdmFsdWUgdGllcyBhbiBhdWRpdGVkIGV2ZW50IHRvIGEgdXNlcidzIHJvbGUocykuIEl0IGlzIGFuIG9wdGlvbmFsIHZhbHVlIHRoYXQgbWlnaHQgYmUgdXNlZCB0byBncm91cCBldmVudHMgZm9yIGFuYWx5c2lzIGJ5IHVzZXIgZnVuY3Rpb25hbCByb2xlIGNhdGVnb3JpZXMuXHJcbiAgICovXHJcbiAgcm9sZT86IChmaGlyLkNvZGVhYmxlQ29uY2VwdHxudWxsKVtdfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBUaGlzIGZpZWxkIHRpZXMgYW4gYXVkaXQgZXZlbnQgdG8gYSBzcGVjaWZpYyByZXNvdXJjZS5cclxuICAgKi9cclxuICByZWZlcmVuY2U/OiBmaGlyLlJlZmVyZW5jZXx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogVGhpcyBmaWVsZCB0aWVzIGFuIGF1ZGl0IGV2ZW50IHRvIGEgc3BlY2lmaWMgdXNlci5cclxuICAgKi9cclxuICB1c2VySWQ/OiBmaGlyLklkZW50aWZpZXJ8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEluIHNvbWUgc2l0dWF0aW9ucyBhIGh1bWFuIHVzZXIgbWF5IGF1dGhlbnRpY2F0ZSB3aXRoIG9uZSBpZGVudGl0eSBidXQsIHRvIGFjY2VzcyBhIHNwZWNpZmljIGFwcGxpY2F0aW9uIHN5c3RlbSwgbWF5IHVzZSBhIHN5bm9ueW1vdXMgaWRlbnRpZnkuIEZvciBleGFtcGxlLCBzb21lIFwic2luZ2xlIHNpZ24gb25cIiBpbXBsZW1lbnRhdGlvbnMgd2lsbCBkbyB0aGlzLiBUaGUgYWx0ZXJuYXRpdmUgaWRlbnRpZmllciB3b3VsZCB0aGVuIGJlIHRoZSBvcmlnaW5hbCBpZGVudGlmeSAgdXNlZCBmb3IgYXV0aGVudGljYXRpb24sIGFuZCB0aGUgVXNlciBJRCBpcyB0aGUgb25lIGtub3duIHRvIGFuZCB1c2VkIGJ5IHRoZSBhcHBsaWNhdGlvbi5cclxuICAgKi9cclxuICBhbHRJZD86IHN0cmluZ3x1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IEF1ZGl0RXZlbnQucGFydGljaXBhbnQuYWx0SWRcclxuICAgKi9cclxuICBfYWx0SWQ/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbiAgLyoqXHJcbiAgICogVGhlIFVzZXIgSUQgYW5kIEF1dGhvcml6YXRpb24gVXNlciBJRCBtYXkgYmUgaW50ZXJuYWwgb3Igb3RoZXJ3aXNlIG9ic2N1cmUgdmFsdWVzLiBUaGlzIGZpZWxkIGFzc2lzdHMgdGhlIGF1ZGl0b3IgaW4gaWRlbnRpZnlpbmcgdGhlIGFjdHVhbCB1c2VyLlxyXG4gICAqL1xyXG4gIG5hbWU/OiBzdHJpbmd8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBBdWRpdEV2ZW50LnBhcnRpY2lwYW50Lm5hbWVcclxuICAgKi9cclxuICBfbmFtZT86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBUaGlzIHZhbHVlIGlzIHVzZWQgdG8gZGlzdGluZ3Vpc2ggYmV0d2VlbiByZXF1ZXN0b3ItdXNlcnMgYW5kIHJlY2lwaWVudC11c2Vycy4gRm9yIGV4YW1wbGUsIG9uZSBwZXJzb24gbWF5IGluaXRpYXRlIGEgcmVwb3J0LW91dHB1dCB0byBiZSBzZW50IHRvIGFub3RoZXIgdXNlci5cclxuICAgKi9cclxuICByZXF1ZXN0b3I6IGJvb2xlYW58bnVsbDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogQXVkaXRFdmVudC5wYXJ0aWNpcGFudC5yZXF1ZXN0b3JcclxuICAgKi9cclxuICBfcmVxdWVzdG9yPzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIFdoZXJlIHRoZSBldmVudCBvY2N1cnJlZC5cclxuICAgKi9cclxuICBsb2NhdGlvbj86IGZoaXIuUmVmZXJlbmNlfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBUaGlzIHZhbHVlIGlzIHVzZWQgcmV0cm9zcGVjdGl2ZWx5IHRvIGRldGVybWluZSB0aGUgYXV0aG9yaXphdGlvbiBwb2xpY2llcy5cclxuICAgKi9cclxuICBwb2xpY3k/OiAoc3RyaW5nfG51bGwpW118dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBBdWRpdEV2ZW50LnBhcnRpY2lwYW50LnBvbGljeVxyXG4gICAqL1xyXG4gIF9wb2xpY3k/OihmaGlyLkZoaXJFbGVtZW50fG51bGwpW107XHJcbiAgLyoqXHJcbiAgICogVXN1YWxseSwgdGhpcyBpcyB1c2VkIGluc3RlYWQgb2Ygc3BlY2lmeWluZyBhIG5ldHdvcmsgYWRkcmVzcy4gVGhpcyBmaWVsZCBpcyBub3QgdXNlZCBmb3IgTWVkaWEgSWQgKGkuZS4gdGhlIHNlcmlhbCBudW1iZXIgb2YgYSBDRCkuXHJcbiAgICovXHJcbiAgbWVkaWE/OiBmaGlyLkNvZGluZ3x1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogTG9naWNhbCBuZXR3b3JrIGxvY2F0aW9uIGZvciBhcHBsaWNhdGlvbiBhY3Rpdml0eSwgaWYgdGhlIGFjdGl2aXR5IGhhcyBhIG5ldHdvcmsgbG9jYXRpb24uXHJcbiAgICovXHJcbiAgbmV0d29yaz86IGZoaXIuQXVkaXRFdmVudFBhcnRpY2lwYW50TmV0d29ya3x1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogVGhlIHJlYXNvbiAocHVycG9zZSBvZiB1c2UpLCBzcGVjaWZpYyB0byB0aGlzIHBhcnRpY2lwYW50LCB0aGF0IHdhcyB1c2VkIGR1cmluZyB0aGUgZXZlbnQgYmVpbmcgcmVjb3JkZWQuXHJcbiAgICovXHJcbiAgcHVycG9zZU9mVXNlPzogKGZoaXIuQ29kaW5nfG51bGwpW118dW5kZWZpbmVkO1xyXG59XHJcblxyXG4vKipcclxuICogVGhlIGV2ZW50IGlzIHJlcG9ydGVkIGJ5IG9uZSBzb3VyY2UuXHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIEF1ZGl0RXZlbnRTb3VyY2UgZXh0ZW5kcyBmaGlyLkJhY2tib25lRWxlbWVudCB7IFxyXG4gIC8qKlxyXG4gICAqIFRoaXMgdmFsdWUgZGlmZmVyZW50aWF0ZXMgYW1vbmcgdGhlIHNpdGVzIGluIGEgbXVsdGktc2l0ZSBlbnRlcnByaXNlIGhlYWx0aCBpbmZvcm1hdGlvbiBzeXN0ZW0uXHJcbiAgICovXHJcbiAgc2l0ZT86IHN0cmluZ3x1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IEF1ZGl0RXZlbnQuc291cmNlLnNpdGVcclxuICAgKi9cclxuICBfc2l0ZT86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBUaGlzIGZpZWxkIHRpZXMgdGhlIGV2ZW50IHRvIGEgc3BlY2lmaWMgc291cmNlIHN5c3RlbS4gSXQgbWF5IGJlIHVzZWQgdG8gZ3JvdXAgZXZlbnRzIGZvciBhbmFseXNpcyBhY2NvcmRpbmcgdG8gd2hlcmUgdGhlIGV2ZW50IHdhcyBkZXRlY3RlZC5cclxuICAgKi9cclxuICBpZGVudGlmaWVyOiBmaGlyLklkZW50aWZpZXJ8bnVsbDtcclxuICAvKipcclxuICAgKiBUaGlzIGZpZWxkIGluZGljYXRlcyB3aGljaCB0eXBlIG9mIHNvdXJjZSBpcyBpZGVudGlmaWVkIGJ5IHRoZSBBdWRpdCBTb3VyY2UgSUQuIEl0IGlzIGFuIG9wdGlvbmFsIHZhbHVlIHRoYXQgbWF5IGJlIHVzZWQgdG8gZ3JvdXAgZXZlbnRzIGZvciBhbmFseXNpcyBhY2NvcmRpbmcgdG8gdGhlIHR5cGUgb2Ygc291cmNlIHdoZXJlIHRoZSBldmVudCBvY2N1cnJlZC5cclxuICAgKi9cclxuICB0eXBlPzogKGZoaXIuQ29kaW5nfG51bGwpW118dW5kZWZpbmVkO1xyXG59XHJcblxyXG4vKipcclxuICogQWRkaXRpb25hbCBJbmZvcm1hdGlvbiBhYm91dCB0aGUgT2JqZWN0LlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBBdWRpdEV2ZW50T2JqZWN0RGV0YWlsIGV4dGVuZHMgZmhpci5CYWNrYm9uZUVsZW1lbnQgeyBcclxuICAvKipcclxuICAgKiBOYW1lIG9mIHRoZSBwcm9wZXJ0eS5cclxuICAgKi9cclxuICB0eXBlOiBzdHJpbmd8bnVsbDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogQXVkaXRFdmVudC5vYmplY3QuZGV0YWlsLnR5cGVcclxuICAgKi9cclxuICBfdHlwZT86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBQcm9wZXJ0eSB2YWx1ZS5cclxuICAgKi9cclxuICB2YWx1ZTogc3RyaW5nfG51bGw7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IEF1ZGl0RXZlbnQub2JqZWN0LmRldGFpbC52YWx1ZVxyXG4gICAqL1xyXG4gIF92YWx1ZT86Zmhpci5GaGlyRWxlbWVudDtcclxufVxyXG5cclxuLyoqXHJcbiAqIFRoZSBldmVudCBtYXkgaGF2ZSBvdGhlciBvYmplY3RzIGludm9sdmVkLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBBdWRpdEV2ZW50T2JqZWN0IGV4dGVuZHMgZmhpci5CYWNrYm9uZUVsZW1lbnQgeyBcclxuICAvKipcclxuICAgKiBJZGVudGlmaWVzIGEgc3BlY2lmaWMgaW5zdGFuY2Ugb2YgdGhlIHBhcnRpY2lwYW50IG9iamVjdC4gVGhlIHJlZmVyZW5jZSBzaG91bGQgYWx3YXlzIGJlIHZlcnNpb24gc3BlY2lmaWMuXHJcbiAgICovXHJcbiAgaWRlbnRpZmllcj86IGZoaXIuSWRlbnRpZmllcnx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogSWRlbnRpZmllcyBhIHNwZWNpZmljIGluc3RhbmNlIG9mIHRoZSBwYXJ0aWNpcGFudCBvYmplY3QuIFRoZSByZWZlcmVuY2Ugc2hvdWxkIGFsd2F5cyBiZSB2ZXJzaW9uIHNwZWNpZmljLlxyXG4gICAqL1xyXG4gIHJlZmVyZW5jZT86IGZoaXIuUmVmZXJlbmNlfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBUbyBkZXNjcmliZSB0aGUgb2JqZWN0IGJlaW5nIGFjdGVkIHVwb24uIEluIGFkZGl0aW9uIHRvIHF1ZXJpZXMgb24gdGhlIHN1YmplY3Qgb2YgdGhlIGFjdGlvbiBpbiBhbiBhdWRpdGFibGUgZXZlbnQsIGl0IGlzIGFsc28gaW1wb3J0YW50IHRvIGJlIGFibGUgdG8gcXVlcnkgb24gdGhlIG9iamVjdCB0eXBlIGZvciB0aGUgYWN0aW9uLlxyXG4gICAqL1xyXG4gIHR5cGU/OiBmaGlyLkNvZGluZ3x1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRm9yIHNvbWUgZGV0YWlsZWQgYXVkaXQgYW5hbHlzaXMgaXQgbWF5IGJlIG5lY2Vzc2FyeSB0byBpbmRpY2F0ZSBhIG1vcmUgZ3JhbnVsYXIgdHlwZSBvZiBwYXJ0aWNpcGFudCwgYmFzZWQgb24gdGhlIGFwcGxpY2F0aW9uIHJvbGUgaXQgc2VydmVzLlxyXG4gICAqL1xyXG4gIHJvbGU/OiBmaGlyLkNvZGluZ3x1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogSW5zdGl0dXRpb25hbCBwb2xpY2llcyBmb3IgcHJpdmFjeSBhbmQgc2VjdXJpdHkgbWF5IG9wdGlvbmFsbHkgZmFsbCB1bmRlciBkaWZmZXJlbnQgYWNjb3VudGFiaWxpdHkgcnVsZXMgYmFzZWQgb24gZGF0YSBsaWZlIGN5Y2xlLiBUaGlzIHByb3ZpZGVzIGEgZGlmZmVyZW50aWF0aW5nIHZhbHVlIGZvciB0aG9zZSBjYXNlcy5cclxuICAgKi9cclxuICBsaWZlY3ljbGU/OiBmaGlyLkNvZGluZ3x1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogVGhpcyBmaWVsZCBpZGVudGlmaWVzIHRoZSBzZWN1cml0eSBsYWJlbHMgZm9yIGEgc3BlY2lmaWMgaW5zdGFuY2Ugb2YgYW4gb2JqZWN0LCBzdWNoIGFzIGEgcGF0aWVudCwgdG8gZGV0ZWN0L3RyYWNrIHByaXZhY3kgYW5kIHNlY3VyaXR5IGlzc3Vlcy5cclxuICAgKi9cclxuICBzZWN1cml0eUxhYmVsPzogKGZoaXIuQ29kaW5nfG51bGwpW118dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEFuIGluc3RhbmNlLXNwZWNpZmljIGRlc2NyaXB0b3Igb2YgdGhlIFBhcnRpY2lwYW50IE9iamVjdCBJRCBhdWRpdGVkLCBzdWNoIGFzIGEgcGVyc29uJ3MgbmFtZS5cclxuICAgKi9cclxuICBuYW1lPzogc3RyaW5nfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogQXVkaXRFdmVudC5vYmplY3QubmFtZVxyXG4gICAqL1xyXG4gIF9uYW1lPzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIFRleHQgdGhhdCBkZXNjcmliZXMgdGhlIG9iamVjdCBpbiBtb3JlIGRldGFpbC5cclxuICAgKi9cclxuICBkZXNjcmlwdGlvbj86IHN0cmluZ3x1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IEF1ZGl0RXZlbnQub2JqZWN0LmRlc2NyaXB0aW9uXHJcbiAgICovXHJcbiAgX2Rlc2NyaXB0aW9uPzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIEZvciBxdWVyeSBldmVudHMgaXQgbWF5IGJlIG5lY2Vzc2FyeSB0byBjYXB0dXJlIHRoZSBhY3R1YWwgcXVlcnkgaW5wdXQgdG8gdGhlIHF1ZXJ5IHByb2Nlc3MgaW4gb3JkZXIgdG8gaWRlbnRpZnkgdGhlIHNwZWNpZmljIGV2ZW50LiBCZWNhdXNlIG9mIGRpZmZlcmVuY2VzIGFtb25nIHF1ZXJ5IGltcGxlbWVudGF0aW9ucyBhbmQgZGF0YSBlbmNvZGluZyBmb3IgdGhlbSwgdGhpcyBpcyBhIGJhc2UgNjQgZW5jb2RlZCBkYXRhIGJsb2IuIEl0IG1heSBiZSBzdWJzZXF1ZW50bHkgZGVjb2RlZCBvciBpbnRlcnByZXRlZCBieSBkb3duc3RyZWFtIGF1ZGl0IGFuYWx5c2lzIHByb2Nlc3NpbmcuXHJcbiAgICovXHJcbiAgcXVlcnk/OiBzdHJpbmd8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBBdWRpdEV2ZW50Lm9iamVjdC5xdWVyeVxyXG4gICAqL1xyXG4gIF9xdWVyeT86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBBZGRpdGlvbmFsIEluZm9ybWF0aW9uIGFib3V0IHRoZSBPYmplY3QuXHJcbiAgICovXHJcbiAgZGV0YWlsPzogKGZoaXIuQXVkaXRFdmVudE9iamVjdERldGFpbHxudWxsKVtdfHVuZGVmaW5lZDtcclxufVxyXG5cclxuLyoqXHJcbiAqIEEgcmVjb3JkIG9mIGFuIGV2ZW50IG1hZGUgZm9yIHB1cnBvc2VzIG9mIG1haW50YWluaW5nIGEgc2VjdXJpdHkgbG9nLiBUeXBpY2FsIHVzZXMgaW5jbHVkZSBkZXRlY3Rpb24gb2YgaW50cnVzaW9uIGF0dGVtcHRzIGFuZCBtb25pdG9yaW5nIGZvciBpbmFwcHJvcHJpYXRlIHVzYWdlLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBBdWRpdEV2ZW50IGV4dGVuZHMgZmhpci5Eb21haW5SZXNvdXJjZSB7IFxyXG4gIC8qKlxyXG4gICAqIFJlc291cmNlIFR5cGUgTmFtZVxyXG4gICAqL1xyXG4gIHJlc291cmNlVHlwZTogXCJBdWRpdEV2ZW50XCJ8bnVsbDtcclxuICAvKipcclxuICAgKiBUaGUgZXZlbnQgbXVzdCBiZSBpZGVudGlmaWVkLlxyXG4gICAqL1xyXG4gIGV2ZW50OiBmaGlyLkF1ZGl0RXZlbnRFdmVudHxudWxsO1xyXG4gIC8qKlxyXG4gICAqIFRoZSBldmVudCBoYXMgb25lIG9yIG1vcmUgYWN0aXZlIHBhcnRpY2lwYW50cy5cclxuICAgKi9cclxuICBwYXJ0aWNpcGFudDogKGZoaXIuQXVkaXRFdmVudFBhcnRpY2lwYW50fG51bGwpW118bnVsbDtcclxuICAvKipcclxuICAgKiBUaGUgZXZlbnQgaXMgcmVwb3J0ZWQgYnkgb25lIHNvdXJjZS5cclxuICAgKi9cclxuICBzb3VyY2U6IGZoaXIuQXVkaXRFdmVudFNvdXJjZXxudWxsO1xyXG4gIC8qKlxyXG4gICAqIFRoZSBldmVudCBtYXkgaGF2ZSBvdGhlciBvYmplY3RzIGludm9sdmVkLlxyXG4gICAqL1xyXG4gIG9iamVjdD86IChmaGlyLkF1ZGl0RXZlbnRPYmplY3R8bnVsbClbXXx1bmRlZmluZWQ7XHJcbn1cclxuIl19