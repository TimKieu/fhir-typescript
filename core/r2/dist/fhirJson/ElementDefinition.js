// <auto-generated/>
// Contents of: hl7.fhir.r2.core version: 1.0.2
// Minimum TypeScript Version: 3.7
// FHIR ComplexType: ElementDefinition
export {};
//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"ElementDefinition.js","sourceRoot":"./src/","sources":["fhirJson/ElementDefinition.ts"],"names":[],"mappings":"AAAA,oBAAoB;AACpB,+CAA+C;AAC/C,kCAAkC;AAClC,sCAAsC","sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r2.core version: 1.0.2\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR ComplexType: ElementDefinition\r\n\r\nimport * as fhir from '../fhirJson.js';\r\n\r\n\r\n/**\r\n * Indicates that the element is sliced into a set of alternative definitions (i.e. in a structure definition, there are multiple different constraints on a single element in the base resource). Slicing can be used in any resource that has cardinality ..* on the base resource, or any resource with a choice of types. The set of slices is any elements that come after this in the element sequence that have the same path, until a shorter path occurs (the shorter path terminates the set).\r\n */\r\nexport interface ElementDefinitionSlicing extends fhir.FhirElement { \r\n  /**\r\n   * Designates which child elements are used to discriminate between the slices when processing an instance. If one or more discriminators are provided, the value of the child elements in the instance data SHALL completely distinguish which slice the element in the resource matches based on the allowed values for those elements in each of the slices.\r\n   */\r\n  discriminator?: (string|null)[]|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.slicing.discriminator\r\n   */\r\n  _discriminator?:(fhir.FhirElement|null)[];\r\n  /**\r\n   * A human-readable text description of how the slicing works. If there is no discriminator, this is required to be present to provide whatever information is possible about how the slices can be differentiated.\r\n   */\r\n  description?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.slicing.description\r\n   */\r\n  _description?:fhir.FhirElement;\r\n  /**\r\n   * If the matching elements have to occur in the same order as defined in the profile.\r\n   */\r\n  ordered?: boolean|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.slicing.ordered\r\n   */\r\n  _ordered?:fhir.FhirElement;\r\n  /**\r\n   * Whether additional slices are allowed or not. When the slices are ordered, profile authors can also say that additional slices are only allowed at the end.\r\n   */\r\n  rules: 'closed'|'open'|'openAtEnd'|null;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.slicing.rules\r\n   */\r\n  _rules?:fhir.FhirElement;\r\n}\r\n\r\n/**\r\n * Information about the base definition of the element, provided to make it unncessary for tools to trace the deviation of the element through the derived and related profiles. This information is only provided where the element definition represents a constraint on another element definition, and must be present if there is a base element definition.\r\n */\r\nexport interface ElementDefinitionBase extends fhir.FhirElement { \r\n  /**\r\n   * The Path that identifies the base element - this matches the ElementDefinition.path for that element. Across FHIR, there is only one base definition of any element - that is, an element definition on a [[[StructureDefinition]]] without a StructureDefinition.base.\r\n   */\r\n  path: string|null;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.base.path\r\n   */\r\n  _path?:fhir.FhirElement;\r\n  /**\r\n   * Minimum cardinality of the base element identified by the path.\r\n   */\r\n  min: number|null;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.base.min\r\n   */\r\n  _min?:fhir.FhirElement;\r\n  /**\r\n   * Maximum cardinality of the base element identified by the path.\r\n   */\r\n  max: string|null;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.base.max\r\n   */\r\n  _max?:fhir.FhirElement;\r\n}\r\n\r\n/**\r\n * The data type or resource that the value of this element is permitted to be.\r\n */\r\nexport interface ElementDefinitionType extends fhir.FhirElement { \r\n  /**\r\n   * Name of Data type or Resource that is a(or the) type used for this element.\r\n   */\r\n  code: 'Account'|'Address'|'Age'|'AllergyIntolerance'|'Annotation'|'Appointment'|'AppointmentResponse'|'Attachment'|'AuditEvent'|'BackboneElement'|'base64Binary'|'Basic'|'Binary'|'BodySite'|'boolean'|'Bundle'|'CarePlan'|'Claim'|'ClaimResponse'|'ClinicalImpression'|'code'|'CodeableConcept'|'Coding'|'Communication'|'CommunicationRequest'|'Composition'|'ConceptMap'|'Condition'|'Conformance'|'ContactPoint'|'Contract'|'Count'|'Coverage'|'DataElement'|'date'|'dateTime'|'decimal'|'DetectedIssue'|'Device'|'DeviceComponent'|'DeviceMetric'|'DeviceUseRequest'|'DeviceUseStatement'|'DiagnosticOrder'|'DiagnosticReport'|'Distance'|'DocumentManifest'|'DocumentReference'|'DomainResource'|'Duration'|'Element'|'ElementDefinition'|'EligibilityRequest'|'EligibilityResponse'|'Encounter'|'EnrollmentRequest'|'EnrollmentResponse'|'EpisodeOfCare'|'ExplanationOfBenefit'|'Extension'|'FamilyMemberHistory'|'Flag'|'Goal'|'Group'|'HealthcareService'|'HumanName'|'id'|'Identifier'|'ImagingObjectSelection'|'ImagingStudy'|'Immunization'|'ImmunizationRecommendation'|'ImplementationGuide'|'instant'|'integer'|'List'|'Location'|'markdown'|'Media'|'Medication'|'MedicationAdministration'|'MedicationDispense'|'MedicationOrder'|'MedicationStatement'|'MessageHeader'|'Meta'|'Money'|'NamingSystem'|'Narrative'|'NutritionOrder'|'Observation'|'oid'|'OperationDefinition'|'OperationOutcome'|'Order'|'OrderResponse'|'Organization'|'Parameters'|'Patient'|'PaymentNotice'|'PaymentReconciliation'|'Period'|'Person'|'positiveInt'|'Practitioner'|'Procedure'|'ProcedureRequest'|'ProcessRequest'|'ProcessResponse'|'Provenance'|'Quantity'|'Questionnaire'|'QuestionnaireResponse'|'Range'|'Ratio'|'Reference'|'ReferralRequest'|'RelatedPerson'|'Resource'|'RiskAssessment'|'SampledData'|'Schedule'|'SearchParameter'|'Signature'|'SimpleQuantity'|'Slot'|'Specimen'|'string'|'StructureDefinition'|'Subscription'|'Substance'|'SupplyDelivery'|'SupplyRequest'|'TestScript'|'time'|'Timing'|'unsignedInt'|'uri'|'uuid'|'ValueSet'|'VisionPrescription'|'xhtml'|null;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.type.code\r\n   */\r\n  _code?:fhir.FhirElement;\r\n  /**\r\n   * Identifies a profile structure or implementation Guide that SHALL hold for resources or datatypes referenced as the type of this element. Can be a local reference - to another structure in this profile, or a reference to a structure in another profile. When more than one profile is specified, the content must conform to all of them. When an implementation guide is specified, the resource SHALL conform to at least one profile defined in the implementation guide.\r\n   */\r\n  profile?: (string|null)[]|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.type.profile\r\n   */\r\n  _profile?:(fhir.FhirElement|null)[];\r\n  /**\r\n   * If the type is a reference to another resource, how the resource is or can be aggregated - is it a contained resource, or a reference, and if the context is a bundle, is it included in the bundle.\r\n   */\r\n  aggregation?: (('bundled'|'contained'|'referenced')|null)[]|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.type.aggregation\r\n   */\r\n  _aggregation?:(fhir.FhirElement|null)[];\r\n}\r\n\r\n/**\r\n * Formal constraints such as co-occurrence and other constraints that can be computationally evaluated within the context of the instance.\r\n */\r\nexport interface ElementDefinitionConstraint extends fhir.FhirElement { \r\n  /**\r\n   * Allows identification of which elements have their cardinalities impacted by the constraint.  Will not be referenced for constraints that do not affect cardinality.\r\n   */\r\n  key: string|null;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.constraint.key\r\n   */\r\n  _key?:fhir.FhirElement;\r\n  /**\r\n   * Description of why this constraint is necessary or appropriate.\r\n   */\r\n  requirements?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.constraint.requirements\r\n   */\r\n  _requirements?:fhir.FhirElement;\r\n  /**\r\n   * Identifies the impact constraint violation has on the conformance of the instance.\r\n   */\r\n  severity: 'error'|'warning'|null;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.constraint.severity\r\n   */\r\n  _severity?:fhir.FhirElement;\r\n  /**\r\n   * Text that can be used to describe the constraint in messages identifying that the constraint has been violated.\r\n   */\r\n  human: string|null;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.constraint.human\r\n   */\r\n  _human?:fhir.FhirElement;\r\n  /**\r\n   * Used in Schematron tests of the validity of the resource.\r\n   */\r\n  xpath: string|null;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.constraint.xpath\r\n   */\r\n  _xpath?:fhir.FhirElement;\r\n}\r\n\r\n/**\r\n * Binds to a value set if this element is coded (code, Coding, CodeableConcept).\r\n */\r\nexport interface ElementDefinitionBinding extends fhir.FhirElement { \r\n  /**\r\n   * Indicates the degree of conformance expectations associated with this binding - that is, the degree to which the provided value set must be adhered to in the instances.\r\n   */\r\n  strength: 'example'|'extensible'|'preferred'|'required'|null;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.binding.strength\r\n   */\r\n  _strength?:fhir.FhirElement;\r\n  /**\r\n   * Describes the intended use of this particular set of codes.\r\n   */\r\n  description?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.binding.description\r\n   */\r\n  _description?:fhir.FhirElement;\r\n  /**\r\n   * Points to the value set or external definition (e.g. implicit value set) that identifies the set of codes to be used.\r\n   */\r\n  valueSetUri?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.binding.valueSet[x]\r\n   */\r\n  _valueSetUri?:fhir.FhirElement;\r\n  /**\r\n   * Points to the value set or external definition (e.g. implicit value set) that identifies the set of codes to be used.\r\n   */\r\n  valueSetReference?: fhir.Reference|undefined;\r\n}\r\n\r\n/**\r\n * Provides guidance to implementers familiar with or converting content from other specifications.\r\n */\r\nexport interface ElementDefinitionMapping extends fhir.FhirElement { \r\n  /**\r\n   * An internal reference to the definition of a mapping.\r\n   */\r\n  identity: string|null;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.mapping.identity\r\n   */\r\n  _identity?:fhir.FhirElement;\r\n  /**\r\n   * Identifies the computable language in which mapping.map is expressed.\r\n   */\r\n  language?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.mapping.language\r\n   */\r\n  _language?:fhir.FhirElement;\r\n  /**\r\n   * Expresses what part of the target specification corresponds to this element.\r\n   */\r\n  map: string|null;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.mapping.map\r\n   */\r\n  _map?:fhir.FhirElement;\r\n}\r\n\r\n/**\r\n * Captures constraints on each element within the resource, profile, or extension.\r\n */\r\nexport interface ElementDefinition extends fhir.FhirElement { \r\n  /**\r\n   * The path identifies the element and is expressed as a \".\"-separated list of ancestor elements, beginning with the name of the resource or extension.\r\n   */\r\n  path: string|null;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.path\r\n   */\r\n  _path?:fhir.FhirElement;\r\n  /**\r\n   * Codes that define how this element is represented in instances, when the deviation varies from the normal case.\r\n   */\r\n  representation?: (('xmlAttr')|null)[]|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.representation\r\n   */\r\n  _representation?:(fhir.FhirElement|null)[];\r\n  /**\r\n   * Allows referencing a defined element.  May also be used for code generation purposes.\r\n   */\r\n  name?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.name\r\n   */\r\n  _name?:fhir.FhirElement;\r\n  /**\r\n   * The text to display beside the element indicating its meaning or to use to prompt for the element in a user display or form.\r\n   */\r\n  label?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.label\r\n   */\r\n  _label?:fhir.FhirElement;\r\n  /**\r\n   * Links the meaning of an element to an external terminology.\r\n   */\r\n  code?: (fhir.Coding|null)[]|undefined;\r\n  /**\r\n   * Indicates that the element is sliced into a set of alternative definitions (i.e. in a structure definition, there are multiple different constraints on a single element in the base resource). Slicing can be used in any resource that has cardinality ..* on the base resource, or any resource with a choice of types. The set of slices is any elements that come after this in the element sequence that have the same path, until a shorter path occurs (the shorter path terminates the set).\r\n   */\r\n  slicing?: fhir.ElementDefinitionSlicing|undefined;\r\n  /**\r\n   * A concise description of what this element means (e.g. for use in autogenerated summaries).\r\n   */\r\n  short?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.short\r\n   */\r\n  _short?:fhir.FhirElement;\r\n  /**\r\n   * To allow a user to state the usage of an element in a particular context.\r\n   */\r\n  definition?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.definition\r\n   */\r\n  _definition?:fhir.FhirElement;\r\n  /**\r\n   * Explanatory notes and implementation guidance about the data element, including notes about how to use the data properly, exceptions to proper use, etc.\r\n   */\r\n  comments?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.comments\r\n   */\r\n  _comments?:fhir.FhirElement;\r\n  /**\r\n   * This element is for traceability of why the element was created and why the constraints exist as they do. This may be used to point to source materials or specifications that drove the structure of this element.\r\n   */\r\n  requirements?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.requirements\r\n   */\r\n  _requirements?:fhir.FhirElement;\r\n  /**\r\n   * Allows for better easier recognition of the element by multiple communities, including international communities.\r\n   */\r\n  alias?: (string|null)[]|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.alias\r\n   */\r\n  _alias?:(fhir.FhirElement|null)[];\r\n  /**\r\n   * The minimum number of times this element SHALL appear in the instance.\r\n   */\r\n  min?: number|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.min\r\n   */\r\n  _min?:fhir.FhirElement;\r\n  /**\r\n   * The maximum number of times this element is permitted to appear in the instance.\r\n   */\r\n  max?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.max\r\n   */\r\n  _max?:fhir.FhirElement;\r\n  /**\r\n   * Information about the base definition of the element, provided to make it unncessary for tools to trace the deviation of the element through the derived and related profiles. This information is only provided where the element definition represents a constraint on another element definition, and must be present if there is a base element definition.\r\n   */\r\n  base?: fhir.ElementDefinitionBase|undefined;\r\n  /**\r\n   * The data type or resource that the value of this element is permitted to be.\r\n   */\r\n  type?: (fhir.ElementDefinitionType|null)[]|undefined;\r\n  /**\r\n   * Identifies the name of a slice defined elsewhere in the profile whose constraints should be applied to the current element.\r\n   */\r\n  nameReference?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.nameReference\r\n   */\r\n  _nameReference?:fhir.FhirElement;\r\n  /**\r\n   * The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').\r\n   */\r\n  defaultValueBoolean?: boolean|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.defaultValue[x]\r\n   */\r\n  _defaultValueBoolean?:fhir.FhirElement;\r\n  /**\r\n   * The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').\r\n   */\r\n  defaultValueInteger?: number|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.defaultValue[x]\r\n   */\r\n  _defaultValueInteger?:fhir.FhirElement;\r\n  /**\r\n   * The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').\r\n   */\r\n  defaultValueDecimal?: number|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.defaultValue[x]\r\n   */\r\n  _defaultValueDecimal?:fhir.FhirElement;\r\n  /**\r\n   * The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').\r\n   */\r\n  defaultValueBase64Binary?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.defaultValue[x]\r\n   */\r\n  _defaultValueBase64Binary?:fhir.FhirElement;\r\n  /**\r\n   * The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').\r\n   */\r\n  defaultValueInstant?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.defaultValue[x]\r\n   */\r\n  _defaultValueInstant?:fhir.FhirElement;\r\n  /**\r\n   * The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').\r\n   */\r\n  defaultValueString?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.defaultValue[x]\r\n   */\r\n  _defaultValueString?:fhir.FhirElement;\r\n  /**\r\n   * The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').\r\n   */\r\n  defaultValueUri?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.defaultValue[x]\r\n   */\r\n  _defaultValueUri?:fhir.FhirElement;\r\n  /**\r\n   * The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').\r\n   */\r\n  defaultValueDate?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.defaultValue[x]\r\n   */\r\n  _defaultValueDate?:fhir.FhirElement;\r\n  /**\r\n   * The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').\r\n   */\r\n  defaultValueDateTime?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.defaultValue[x]\r\n   */\r\n  _defaultValueDateTime?:fhir.FhirElement;\r\n  /**\r\n   * The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').\r\n   */\r\n  defaultValueTime?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.defaultValue[x]\r\n   */\r\n  _defaultValueTime?:fhir.FhirElement;\r\n  /**\r\n   * The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').\r\n   */\r\n  defaultValueCode?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.defaultValue[x]\r\n   */\r\n  _defaultValueCode?:fhir.FhirElement;\r\n  /**\r\n   * The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').\r\n   */\r\n  defaultValueOid?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.defaultValue[x]\r\n   */\r\n  _defaultValueOid?:fhir.FhirElement;\r\n  /**\r\n   * The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').\r\n   */\r\n  defaultValueId?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.defaultValue[x]\r\n   */\r\n  _defaultValueId?:fhir.FhirElement;\r\n  /**\r\n   * The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').\r\n   */\r\n  defaultValueUnsignedInt?: number|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.defaultValue[x]\r\n   */\r\n  _defaultValueUnsignedInt?:fhir.FhirElement;\r\n  /**\r\n   * The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').\r\n   */\r\n  defaultValuePositiveInt?: number|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.defaultValue[x]\r\n   */\r\n  _defaultValuePositiveInt?:fhir.FhirElement;\r\n  /**\r\n   * The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').\r\n   */\r\n  defaultValueMarkdown?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.defaultValue[x]\r\n   */\r\n  _defaultValueMarkdown?:fhir.FhirElement;\r\n  /**\r\n   * The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').\r\n   */\r\n  defaultValueAnnotation?: fhir.Annotation|undefined;\r\n  /**\r\n   * The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').\r\n   */\r\n  defaultValueAttachment?: fhir.Attachment|undefined;\r\n  /**\r\n   * The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').\r\n   */\r\n  defaultValueIdentifier?: fhir.Identifier|undefined;\r\n  /**\r\n   * The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').\r\n   */\r\n  defaultValueCodeableConcept?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').\r\n   */\r\n  defaultValueCoding?: fhir.Coding|undefined;\r\n  /**\r\n   * The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').\r\n   */\r\n  defaultValueQuantity?: fhir.Quantity|undefined;\r\n  /**\r\n   * The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').\r\n   */\r\n  defaultValueRange?: fhir.Range|undefined;\r\n  /**\r\n   * The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').\r\n   */\r\n  defaultValuePeriod?: fhir.Period|undefined;\r\n  /**\r\n   * The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').\r\n   */\r\n  defaultValueRatio?: fhir.Ratio|undefined;\r\n  /**\r\n   * The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').\r\n   */\r\n  defaultValueSampledData?: fhir.SampledData|undefined;\r\n  /**\r\n   * The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').\r\n   */\r\n  defaultValueSignature?: fhir.Signature|undefined;\r\n  /**\r\n   * The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').\r\n   */\r\n  defaultValueHumanName?: fhir.HumanName|undefined;\r\n  /**\r\n   * The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').\r\n   */\r\n  defaultValueAddress?: fhir.Address|undefined;\r\n  /**\r\n   * The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').\r\n   */\r\n  defaultValueContactPoint?: fhir.ContactPoint|undefined;\r\n  /**\r\n   * The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').\r\n   */\r\n  defaultValueTiming?: fhir.Timing|undefined;\r\n  /**\r\n   * The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').\r\n   */\r\n  defaultValueReference?: fhir.Reference|undefined;\r\n  /**\r\n   * The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').\r\n   */\r\n  defaultValueMeta?: fhir.Meta|undefined;\r\n  /**\r\n   * The Implicit meaning that is to be understood when this element is missing (e.g. 'when this element is missing, the period is ongoing'.\r\n   */\r\n  meaningWhenMissing?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.meaningWhenMissing\r\n   */\r\n  _meaningWhenMissing?:fhir.FhirElement;\r\n  /**\r\n   * Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.\r\n   */\r\n  fixedBoolean?: boolean|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.fixed[x]\r\n   */\r\n  _fixedBoolean?:fhir.FhirElement;\r\n  /**\r\n   * Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.\r\n   */\r\n  fixedInteger?: number|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.fixed[x]\r\n   */\r\n  _fixedInteger?:fhir.FhirElement;\r\n  /**\r\n   * Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.\r\n   */\r\n  fixedDecimal?: number|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.fixed[x]\r\n   */\r\n  _fixedDecimal?:fhir.FhirElement;\r\n  /**\r\n   * Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.\r\n   */\r\n  fixedBase64Binary?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.fixed[x]\r\n   */\r\n  _fixedBase64Binary?:fhir.FhirElement;\r\n  /**\r\n   * Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.\r\n   */\r\n  fixedInstant?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.fixed[x]\r\n   */\r\n  _fixedInstant?:fhir.FhirElement;\r\n  /**\r\n   * Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.\r\n   */\r\n  fixedString?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.fixed[x]\r\n   */\r\n  _fixedString?:fhir.FhirElement;\r\n  /**\r\n   * Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.\r\n   */\r\n  fixedUri?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.fixed[x]\r\n   */\r\n  _fixedUri?:fhir.FhirElement;\r\n  /**\r\n   * Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.\r\n   */\r\n  fixedDate?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.fixed[x]\r\n   */\r\n  _fixedDate?:fhir.FhirElement;\r\n  /**\r\n   * Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.\r\n   */\r\n  fixedDateTime?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.fixed[x]\r\n   */\r\n  _fixedDateTime?:fhir.FhirElement;\r\n  /**\r\n   * Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.\r\n   */\r\n  fixedTime?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.fixed[x]\r\n   */\r\n  _fixedTime?:fhir.FhirElement;\r\n  /**\r\n   * Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.\r\n   */\r\n  fixedCode?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.fixed[x]\r\n   */\r\n  _fixedCode?:fhir.FhirElement;\r\n  /**\r\n   * Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.\r\n   */\r\n  fixedOid?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.fixed[x]\r\n   */\r\n  _fixedOid?:fhir.FhirElement;\r\n  /**\r\n   * Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.\r\n   */\r\n  fixedId?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.fixed[x]\r\n   */\r\n  _fixedId?:fhir.FhirElement;\r\n  /**\r\n   * Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.\r\n   */\r\n  fixedUnsignedInt?: number|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.fixed[x]\r\n   */\r\n  _fixedUnsignedInt?:fhir.FhirElement;\r\n  /**\r\n   * Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.\r\n   */\r\n  fixedPositiveInt?: number|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.fixed[x]\r\n   */\r\n  _fixedPositiveInt?:fhir.FhirElement;\r\n  /**\r\n   * Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.\r\n   */\r\n  fixedMarkdown?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.fixed[x]\r\n   */\r\n  _fixedMarkdown?:fhir.FhirElement;\r\n  /**\r\n   * Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.\r\n   */\r\n  fixedAnnotation?: fhir.Annotation|undefined;\r\n  /**\r\n   * Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.\r\n   */\r\n  fixedAttachment?: fhir.Attachment|undefined;\r\n  /**\r\n   * Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.\r\n   */\r\n  fixedIdentifier?: fhir.Identifier|undefined;\r\n  /**\r\n   * Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.\r\n   */\r\n  fixedCodeableConcept?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.\r\n   */\r\n  fixedCoding?: fhir.Coding|undefined;\r\n  /**\r\n   * Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.\r\n   */\r\n  fixedQuantity?: fhir.Quantity|undefined;\r\n  /**\r\n   * Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.\r\n   */\r\n  fixedRange?: fhir.Range|undefined;\r\n  /**\r\n   * Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.\r\n   */\r\n  fixedPeriod?: fhir.Period|undefined;\r\n  /**\r\n   * Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.\r\n   */\r\n  fixedRatio?: fhir.Ratio|undefined;\r\n  /**\r\n   * Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.\r\n   */\r\n  fixedSampledData?: fhir.SampledData|undefined;\r\n  /**\r\n   * Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.\r\n   */\r\n  fixedSignature?: fhir.Signature|undefined;\r\n  /**\r\n   * Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.\r\n   */\r\n  fixedHumanName?: fhir.HumanName|undefined;\r\n  /**\r\n   * Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.\r\n   */\r\n  fixedAddress?: fhir.Address|undefined;\r\n  /**\r\n   * Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.\r\n   */\r\n  fixedContactPoint?: fhir.ContactPoint|undefined;\r\n  /**\r\n   * Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.\r\n   */\r\n  fixedTiming?: fhir.Timing|undefined;\r\n  /**\r\n   * Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.\r\n   */\r\n  fixedReference?: fhir.Reference|undefined;\r\n  /**\r\n   * Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.\r\n   */\r\n  fixedMeta?: fhir.Meta|undefined;\r\n  /**\r\n   * Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).\r\n   */\r\n  patternBoolean?: boolean|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.pattern[x]\r\n   */\r\n  _patternBoolean?:fhir.FhirElement;\r\n  /**\r\n   * Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).\r\n   */\r\n  patternInteger?: number|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.pattern[x]\r\n   */\r\n  _patternInteger?:fhir.FhirElement;\r\n  /**\r\n   * Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).\r\n   */\r\n  patternDecimal?: number|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.pattern[x]\r\n   */\r\n  _patternDecimal?:fhir.FhirElement;\r\n  /**\r\n   * Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).\r\n   */\r\n  patternBase64Binary?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.pattern[x]\r\n   */\r\n  _patternBase64Binary?:fhir.FhirElement;\r\n  /**\r\n   * Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).\r\n   */\r\n  patternInstant?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.pattern[x]\r\n   */\r\n  _patternInstant?:fhir.FhirElement;\r\n  /**\r\n   * Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).\r\n   */\r\n  patternString?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.pattern[x]\r\n   */\r\n  _patternString?:fhir.FhirElement;\r\n  /**\r\n   * Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).\r\n   */\r\n  patternUri?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.pattern[x]\r\n   */\r\n  _patternUri?:fhir.FhirElement;\r\n  /**\r\n   * Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).\r\n   */\r\n  patternDate?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.pattern[x]\r\n   */\r\n  _patternDate?:fhir.FhirElement;\r\n  /**\r\n   * Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).\r\n   */\r\n  patternDateTime?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.pattern[x]\r\n   */\r\n  _patternDateTime?:fhir.FhirElement;\r\n  /**\r\n   * Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).\r\n   */\r\n  patternTime?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.pattern[x]\r\n   */\r\n  _patternTime?:fhir.FhirElement;\r\n  /**\r\n   * Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).\r\n   */\r\n  patternCode?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.pattern[x]\r\n   */\r\n  _patternCode?:fhir.FhirElement;\r\n  /**\r\n   * Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).\r\n   */\r\n  patternOid?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.pattern[x]\r\n   */\r\n  _patternOid?:fhir.FhirElement;\r\n  /**\r\n   * Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).\r\n   */\r\n  patternId?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.pattern[x]\r\n   */\r\n  _patternId?:fhir.FhirElement;\r\n  /**\r\n   * Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).\r\n   */\r\n  patternUnsignedInt?: number|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.pattern[x]\r\n   */\r\n  _patternUnsignedInt?:fhir.FhirElement;\r\n  /**\r\n   * Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).\r\n   */\r\n  patternPositiveInt?: number|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.pattern[x]\r\n   */\r\n  _patternPositiveInt?:fhir.FhirElement;\r\n  /**\r\n   * Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).\r\n   */\r\n  patternMarkdown?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.pattern[x]\r\n   */\r\n  _patternMarkdown?:fhir.FhirElement;\r\n  /**\r\n   * Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).\r\n   */\r\n  patternAnnotation?: fhir.Annotation|undefined;\r\n  /**\r\n   * Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).\r\n   */\r\n  patternAttachment?: fhir.Attachment|undefined;\r\n  /**\r\n   * Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).\r\n   */\r\n  patternIdentifier?: fhir.Identifier|undefined;\r\n  /**\r\n   * Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).\r\n   */\r\n  patternCodeableConcept?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).\r\n   */\r\n  patternCoding?: fhir.Coding|undefined;\r\n  /**\r\n   * Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).\r\n   */\r\n  patternQuantity?: fhir.Quantity|undefined;\r\n  /**\r\n   * Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).\r\n   */\r\n  patternRange?: fhir.Range|undefined;\r\n  /**\r\n   * Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).\r\n   */\r\n  patternPeriod?: fhir.Period|undefined;\r\n  /**\r\n   * Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).\r\n   */\r\n  patternRatio?: fhir.Ratio|undefined;\r\n  /**\r\n   * Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).\r\n   */\r\n  patternSampledData?: fhir.SampledData|undefined;\r\n  /**\r\n   * Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).\r\n   */\r\n  patternSignature?: fhir.Signature|undefined;\r\n  /**\r\n   * Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).\r\n   */\r\n  patternHumanName?: fhir.HumanName|undefined;\r\n  /**\r\n   * Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).\r\n   */\r\n  patternAddress?: fhir.Address|undefined;\r\n  /**\r\n   * Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).\r\n   */\r\n  patternContactPoint?: fhir.ContactPoint|undefined;\r\n  /**\r\n   * Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).\r\n   */\r\n  patternTiming?: fhir.Timing|undefined;\r\n  /**\r\n   * Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).\r\n   */\r\n  patternReference?: fhir.Reference|undefined;\r\n  /**\r\n   * Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).\r\n   */\r\n  patternMeta?: fhir.Meta|undefined;\r\n  /**\r\n   * A sample value for this element demonstrating the type of information that would typically be captured.\r\n   */\r\n  exampleBoolean?: boolean|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.example[x]\r\n   */\r\n  _exampleBoolean?:fhir.FhirElement;\r\n  /**\r\n   * A sample value for this element demonstrating the type of information that would typically be captured.\r\n   */\r\n  exampleInteger?: number|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.example[x]\r\n   */\r\n  _exampleInteger?:fhir.FhirElement;\r\n  /**\r\n   * A sample value for this element demonstrating the type of information that would typically be captured.\r\n   */\r\n  exampleDecimal?: number|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.example[x]\r\n   */\r\n  _exampleDecimal?:fhir.FhirElement;\r\n  /**\r\n   * A sample value for this element demonstrating the type of information that would typically be captured.\r\n   */\r\n  exampleBase64Binary?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.example[x]\r\n   */\r\n  _exampleBase64Binary?:fhir.FhirElement;\r\n  /**\r\n   * A sample value for this element demonstrating the type of information that would typically be captured.\r\n   */\r\n  exampleInstant?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.example[x]\r\n   */\r\n  _exampleInstant?:fhir.FhirElement;\r\n  /**\r\n   * A sample value for this element demonstrating the type of information that would typically be captured.\r\n   */\r\n  exampleString?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.example[x]\r\n   */\r\n  _exampleString?:fhir.FhirElement;\r\n  /**\r\n   * A sample value for this element demonstrating the type of information that would typically be captured.\r\n   */\r\n  exampleUri?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.example[x]\r\n   */\r\n  _exampleUri?:fhir.FhirElement;\r\n  /**\r\n   * A sample value for this element demonstrating the type of information that would typically be captured.\r\n   */\r\n  exampleDate?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.example[x]\r\n   */\r\n  _exampleDate?:fhir.FhirElement;\r\n  /**\r\n   * A sample value for this element demonstrating the type of information that would typically be captured.\r\n   */\r\n  exampleDateTime?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.example[x]\r\n   */\r\n  _exampleDateTime?:fhir.FhirElement;\r\n  /**\r\n   * A sample value for this element demonstrating the type of information that would typically be captured.\r\n   */\r\n  exampleTime?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.example[x]\r\n   */\r\n  _exampleTime?:fhir.FhirElement;\r\n  /**\r\n   * A sample value for this element demonstrating the type of information that would typically be captured.\r\n   */\r\n  exampleCode?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.example[x]\r\n   */\r\n  _exampleCode?:fhir.FhirElement;\r\n  /**\r\n   * A sample value for this element demonstrating the type of information that would typically be captured.\r\n   */\r\n  exampleOid?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.example[x]\r\n   */\r\n  _exampleOid?:fhir.FhirElement;\r\n  /**\r\n   * A sample value for this element demonstrating the type of information that would typically be captured.\r\n   */\r\n  exampleId?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.example[x]\r\n   */\r\n  _exampleId?:fhir.FhirElement;\r\n  /**\r\n   * A sample value for this element demonstrating the type of information that would typically be captured.\r\n   */\r\n  exampleUnsignedInt?: number|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.example[x]\r\n   */\r\n  _exampleUnsignedInt?:fhir.FhirElement;\r\n  /**\r\n   * A sample value for this element demonstrating the type of information that would typically be captured.\r\n   */\r\n  examplePositiveInt?: number|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.example[x]\r\n   */\r\n  _examplePositiveInt?:fhir.FhirElement;\r\n  /**\r\n   * A sample value for this element demonstrating the type of information that would typically be captured.\r\n   */\r\n  exampleMarkdown?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.example[x]\r\n   */\r\n  _exampleMarkdown?:fhir.FhirElement;\r\n  /**\r\n   * A sample value for this element demonstrating the type of information that would typically be captured.\r\n   */\r\n  exampleAnnotation?: fhir.Annotation|undefined;\r\n  /**\r\n   * A sample value for this element demonstrating the type of information that would typically be captured.\r\n   */\r\n  exampleAttachment?: fhir.Attachment|undefined;\r\n  /**\r\n   * A sample value for this element demonstrating the type of information that would typically be captured.\r\n   */\r\n  exampleIdentifier?: fhir.Identifier|undefined;\r\n  /**\r\n   * A sample value for this element demonstrating the type of information that would typically be captured.\r\n   */\r\n  exampleCodeableConcept?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * A sample value for this element demonstrating the type of information that would typically be captured.\r\n   */\r\n  exampleCoding?: fhir.Coding|undefined;\r\n  /**\r\n   * A sample value for this element demonstrating the type of information that would typically be captured.\r\n   */\r\n  exampleQuantity?: fhir.Quantity|undefined;\r\n  /**\r\n   * A sample value for this element demonstrating the type of information that would typically be captured.\r\n   */\r\n  exampleRange?: fhir.Range|undefined;\r\n  /**\r\n   * A sample value for this element demonstrating the type of information that would typically be captured.\r\n   */\r\n  examplePeriod?: fhir.Period|undefined;\r\n  /**\r\n   * A sample value for this element demonstrating the type of information that would typically be captured.\r\n   */\r\n  exampleRatio?: fhir.Ratio|undefined;\r\n  /**\r\n   * A sample value for this element demonstrating the type of information that would typically be captured.\r\n   */\r\n  exampleSampledData?: fhir.SampledData|undefined;\r\n  /**\r\n   * A sample value for this element demonstrating the type of information that would typically be captured.\r\n   */\r\n  exampleSignature?: fhir.Signature|undefined;\r\n  /**\r\n   * A sample value for this element demonstrating the type of information that would typically be captured.\r\n   */\r\n  exampleHumanName?: fhir.HumanName|undefined;\r\n  /**\r\n   * A sample value for this element demonstrating the type of information that would typically be captured.\r\n   */\r\n  exampleAddress?: fhir.Address|undefined;\r\n  /**\r\n   * A sample value for this element demonstrating the type of information that would typically be captured.\r\n   */\r\n  exampleContactPoint?: fhir.ContactPoint|undefined;\r\n  /**\r\n   * A sample value for this element demonstrating the type of information that would typically be captured.\r\n   */\r\n  exampleTiming?: fhir.Timing|undefined;\r\n  /**\r\n   * A sample value for this element demonstrating the type of information that would typically be captured.\r\n   */\r\n  exampleReference?: fhir.Reference|undefined;\r\n  /**\r\n   * A sample value for this element demonstrating the type of information that would typically be captured.\r\n   */\r\n  exampleMeta?: fhir.Meta|undefined;\r\n  /**\r\n   * The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  minValueBoolean?: boolean|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.minValue[x]\r\n   */\r\n  _minValueBoolean?:fhir.FhirElement;\r\n  /**\r\n   * The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  minValueInteger?: number|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.minValue[x]\r\n   */\r\n  _minValueInteger?:fhir.FhirElement;\r\n  /**\r\n   * The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  minValueDecimal?: number|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.minValue[x]\r\n   */\r\n  _minValueDecimal?:fhir.FhirElement;\r\n  /**\r\n   * The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  minValueBase64Binary?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.minValue[x]\r\n   */\r\n  _minValueBase64Binary?:fhir.FhirElement;\r\n  /**\r\n   * The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  minValueInstant?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.minValue[x]\r\n   */\r\n  _minValueInstant?:fhir.FhirElement;\r\n  /**\r\n   * The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  minValueString?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.minValue[x]\r\n   */\r\n  _minValueString?:fhir.FhirElement;\r\n  /**\r\n   * The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  minValueUri?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.minValue[x]\r\n   */\r\n  _minValueUri?:fhir.FhirElement;\r\n  /**\r\n   * The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  minValueDate?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.minValue[x]\r\n   */\r\n  _minValueDate?:fhir.FhirElement;\r\n  /**\r\n   * The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  minValueDateTime?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.minValue[x]\r\n   */\r\n  _minValueDateTime?:fhir.FhirElement;\r\n  /**\r\n   * The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  minValueTime?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.minValue[x]\r\n   */\r\n  _minValueTime?:fhir.FhirElement;\r\n  /**\r\n   * The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  minValueCode?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.minValue[x]\r\n   */\r\n  _minValueCode?:fhir.FhirElement;\r\n  /**\r\n   * The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  minValueOid?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.minValue[x]\r\n   */\r\n  _minValueOid?:fhir.FhirElement;\r\n  /**\r\n   * The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  minValueId?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.minValue[x]\r\n   */\r\n  _minValueId?:fhir.FhirElement;\r\n  /**\r\n   * The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  minValueUnsignedInt?: number|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.minValue[x]\r\n   */\r\n  _minValueUnsignedInt?:fhir.FhirElement;\r\n  /**\r\n   * The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  minValuePositiveInt?: number|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.minValue[x]\r\n   */\r\n  _minValuePositiveInt?:fhir.FhirElement;\r\n  /**\r\n   * The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  minValueMarkdown?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.minValue[x]\r\n   */\r\n  _minValueMarkdown?:fhir.FhirElement;\r\n  /**\r\n   * The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  minValueAnnotation?: fhir.Annotation|undefined;\r\n  /**\r\n   * The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  minValueAttachment?: fhir.Attachment|undefined;\r\n  /**\r\n   * The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  minValueIdentifier?: fhir.Identifier|undefined;\r\n  /**\r\n   * The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  minValueCodeableConcept?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  minValueCoding?: fhir.Coding|undefined;\r\n  /**\r\n   * The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  minValueQuantity?: fhir.Quantity|undefined;\r\n  /**\r\n   * The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  minValueRange?: fhir.Range|undefined;\r\n  /**\r\n   * The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  minValuePeriod?: fhir.Period|undefined;\r\n  /**\r\n   * The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  minValueRatio?: fhir.Ratio|undefined;\r\n  /**\r\n   * The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  minValueSampledData?: fhir.SampledData|undefined;\r\n  /**\r\n   * The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  minValueSignature?: fhir.Signature|undefined;\r\n  /**\r\n   * The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  minValueHumanName?: fhir.HumanName|undefined;\r\n  /**\r\n   * The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  minValueAddress?: fhir.Address|undefined;\r\n  /**\r\n   * The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  minValueContactPoint?: fhir.ContactPoint|undefined;\r\n  /**\r\n   * The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  minValueTiming?: fhir.Timing|undefined;\r\n  /**\r\n   * The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  minValueReference?: fhir.Reference|undefined;\r\n  /**\r\n   * The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  minValueMeta?: fhir.Meta|undefined;\r\n  /**\r\n   * The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  maxValueBoolean?: boolean|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.maxValue[x]\r\n   */\r\n  _maxValueBoolean?:fhir.FhirElement;\r\n  /**\r\n   * The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  maxValueInteger?: number|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.maxValue[x]\r\n   */\r\n  _maxValueInteger?:fhir.FhirElement;\r\n  /**\r\n   * The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  maxValueDecimal?: number|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.maxValue[x]\r\n   */\r\n  _maxValueDecimal?:fhir.FhirElement;\r\n  /**\r\n   * The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  maxValueBase64Binary?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.maxValue[x]\r\n   */\r\n  _maxValueBase64Binary?:fhir.FhirElement;\r\n  /**\r\n   * The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  maxValueInstant?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.maxValue[x]\r\n   */\r\n  _maxValueInstant?:fhir.FhirElement;\r\n  /**\r\n   * The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  maxValueString?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.maxValue[x]\r\n   */\r\n  _maxValueString?:fhir.FhirElement;\r\n  /**\r\n   * The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  maxValueUri?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.maxValue[x]\r\n   */\r\n  _maxValueUri?:fhir.FhirElement;\r\n  /**\r\n   * The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  maxValueDate?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.maxValue[x]\r\n   */\r\n  _maxValueDate?:fhir.FhirElement;\r\n  /**\r\n   * The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  maxValueDateTime?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.maxValue[x]\r\n   */\r\n  _maxValueDateTime?:fhir.FhirElement;\r\n  /**\r\n   * The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  maxValueTime?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.maxValue[x]\r\n   */\r\n  _maxValueTime?:fhir.FhirElement;\r\n  /**\r\n   * The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  maxValueCode?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.maxValue[x]\r\n   */\r\n  _maxValueCode?:fhir.FhirElement;\r\n  /**\r\n   * The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  maxValueOid?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.maxValue[x]\r\n   */\r\n  _maxValueOid?:fhir.FhirElement;\r\n  /**\r\n   * The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  maxValueId?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.maxValue[x]\r\n   */\r\n  _maxValueId?:fhir.FhirElement;\r\n  /**\r\n   * The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  maxValueUnsignedInt?: number|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.maxValue[x]\r\n   */\r\n  _maxValueUnsignedInt?:fhir.FhirElement;\r\n  /**\r\n   * The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  maxValuePositiveInt?: number|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.maxValue[x]\r\n   */\r\n  _maxValuePositiveInt?:fhir.FhirElement;\r\n  /**\r\n   * The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  maxValueMarkdown?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.maxValue[x]\r\n   */\r\n  _maxValueMarkdown?:fhir.FhirElement;\r\n  /**\r\n   * The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  maxValueAnnotation?: fhir.Annotation|undefined;\r\n  /**\r\n   * The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  maxValueAttachment?: fhir.Attachment|undefined;\r\n  /**\r\n   * The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  maxValueIdentifier?: fhir.Identifier|undefined;\r\n  /**\r\n   * The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  maxValueCodeableConcept?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  maxValueCoding?: fhir.Coding|undefined;\r\n  /**\r\n   * The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  maxValueQuantity?: fhir.Quantity|undefined;\r\n  /**\r\n   * The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  maxValueRange?: fhir.Range|undefined;\r\n  /**\r\n   * The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  maxValuePeriod?: fhir.Period|undefined;\r\n  /**\r\n   * The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  maxValueRatio?: fhir.Ratio|undefined;\r\n  /**\r\n   * The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  maxValueSampledData?: fhir.SampledData|undefined;\r\n  /**\r\n   * The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  maxValueSignature?: fhir.Signature|undefined;\r\n  /**\r\n   * The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  maxValueHumanName?: fhir.HumanName|undefined;\r\n  /**\r\n   * The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  maxValueAddress?: fhir.Address|undefined;\r\n  /**\r\n   * The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  maxValueContactPoint?: fhir.ContactPoint|undefined;\r\n  /**\r\n   * The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  maxValueTiming?: fhir.Timing|undefined;\r\n  /**\r\n   * The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  maxValueReference?: fhir.Reference|undefined;\r\n  /**\r\n   * The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.\r\n   */\r\n  maxValueMeta?: fhir.Meta|undefined;\r\n  /**\r\n   * Indicates the maximum length in characters that is permitted to be present in conformant instances and which is expected to be supported by conformant consumers that support the element.\r\n   */\r\n  maxLength?: number|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.maxLength\r\n   */\r\n  _maxLength?:fhir.FhirElement;\r\n  /**\r\n   * A reference to an invariant that may make additional statements about the cardinality or value in the instance.\r\n   */\r\n  condition?: (string|null)[]|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.condition\r\n   */\r\n  _condition?:(fhir.FhirElement|null)[];\r\n  /**\r\n   * Formal constraints such as co-occurrence and other constraints that can be computationally evaluated within the context of the instance.\r\n   */\r\n  constraint?: (fhir.ElementDefinitionConstraint|null)[]|undefined;\r\n  /**\r\n   * Allows a profile to set expectations for system capabilities beyond merely respecting cardinality constraints.\r\n   */\r\n  mustSupport?: boolean|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.mustSupport\r\n   */\r\n  _mustSupport?:fhir.FhirElement;\r\n  /**\r\n   * Allows elements to be introduced into a specification that can't safely be ignored by applications that don't recognize them.\r\n   */\r\n  isModifier?: boolean|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.isModifier\r\n   */\r\n  _isModifier?:fhir.FhirElement;\r\n  /**\r\n   * Allow clients to search through large resources quickly.\r\n   */\r\n  isSummary?: boolean|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ElementDefinition.isSummary\r\n   */\r\n  _isSummary?:fhir.FhirElement;\r\n  /**\r\n   * Binds to a value set if this element is coded (code, Coding, CodeableConcept).\r\n   */\r\n  binding?: fhir.ElementDefinitionBinding|undefined;\r\n  /**\r\n   * Provides guidance to implementers familiar with or converting content from other specifications.\r\n   */\r\n  mapping?: (fhir.ElementDefinitionMapping|null)[]|undefined;\r\n}\r\n"]}