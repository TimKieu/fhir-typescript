// <auto-generated/>
// Contents of: hl7.fhir.r2.core version: 1.0.2
// Minimum TypeScript Version: 3.7
// FHIR Resource: MessageHeader
export {};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWVzc2FnZUhlYWRlci5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJKc29uL01lc3NhZ2VIZWFkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLCtDQUErQztBQUMvQyxrQ0FBa0M7QUFDbEMsK0JBQStCIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnIyLmNvcmUgdmVyc2lvbjogMS4wLjJcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFJlc291cmNlOiBNZXNzYWdlSGVhZGVyXHJcblxyXG5pbXBvcnQgKiBhcyBmaGlyIGZyb20gJy4uL2ZoaXJKc29uLmpzJztcclxuXHJcblxyXG4vKipcclxuICogSW5mb3JtYXRpb24gYWJvdXQgdGhlIG1lc3NhZ2UgdGhhdCB0aGlzIG1lc3NhZ2UgaXMgYSByZXNwb25zZSB0by4gIE9ubHkgcHJlc2VudCBpZiB0aGlzIG1lc3NhZ2UgaXMgYSByZXNwb25zZS5cclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgTWVzc2FnZUhlYWRlclJlc3BvbnNlIGV4dGVuZHMgZmhpci5CYWNrYm9uZUVsZW1lbnQgeyBcclxuICAvKipcclxuICAgKiBBbGxvd3MgcmVjZWl2ZXIgdG8ga25vdyB3aGF0IG1lc3NhZ2UgaXMgYmVpbmcgcmVzcG9uZGVkIHRvLlxyXG4gICAqL1xyXG4gIGlkZW50aWZpZXI6IHN0cmluZ3xudWxsO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBNZXNzYWdlSGVhZGVyLnJlc3BvbnNlLmlkZW50aWZpZXJcclxuICAgKi9cclxuICBfaWRlbnRpZmllcj86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBBbGxvd3MgdGhlIHNlbmRlciBvZiB0aGUgYWNrbm93bGVkZ2UgbWVzc2FnZSB0byBrbm93IGlmIHRoZSByZXF1ZXN0IHdhcyBzdWNjZXNzZnVsIG9yIGlmIGFjdGlvbiBpcyBuZWVkZWQuXHJcbiAgICovXHJcbiAgY29kZTogJ2ZhdGFsLWVycm9yJ3wnb2snfCd0cmFuc2llbnQtZXJyb3InfG51bGw7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IE1lc3NhZ2VIZWFkZXIucmVzcG9uc2UuY29kZVxyXG4gICAqL1xyXG4gIF9jb2RlPzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIEFsbG93cyB0aGUgc2VuZGVyIG9mIHRoZSBtZXNzYWdlIHRvIGRldGVybWluZSB3aGF0IHRoZSBzcGVjaWZpYyBpc3N1ZXMgYXJlLlxyXG4gICAqL1xyXG4gIGRldGFpbHM/OiBmaGlyLlJlZmVyZW5jZXx1bmRlZmluZWQ7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBBbGxvd3MgcmVwbGllcywgc3VwcG9ydHMgYXVkaXQuXHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIE1lc3NhZ2VIZWFkZXJTb3VyY2UgZXh0ZW5kcyBmaGlyLkJhY2tib25lRWxlbWVudCB7IFxyXG4gIC8qKlxyXG4gICAqIE1heSBiZSB1c2VkIHRvIHN1cHBvcnQgYXVkaXQuXHJcbiAgICovXHJcbiAgbmFtZT86IHN0cmluZ3x1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IE1lc3NhZ2VIZWFkZXIuc291cmNlLm5hbWVcclxuICAgKi9cclxuICBfbmFtZT86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBTdXBwb3J0cyBhdWRpdCBhbmQgcG9zc2libHkgaW50ZXJmYWNlIGVuZ2luZSBiZWhhdmlvci5cclxuICAgKi9cclxuICBzb2Z0d2FyZT86IHN0cmluZ3x1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IE1lc3NhZ2VIZWFkZXIuc291cmNlLnNvZnR3YXJlXHJcbiAgICovXHJcbiAgX3NvZnR3YXJlPzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIFN1cHBvcnRzIGF1ZGl0IGFuZCBwb3NzaWJseSBpbnRlcmZhY2UgZW5naW5lIGJlaGF2aW9yLlxyXG4gICAqL1xyXG4gIHZlcnNpb24/OiBzdHJpbmd8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBNZXNzYWdlSGVhZGVyLnNvdXJjZS52ZXJzaW9uXHJcbiAgICovXHJcbiAgX3ZlcnNpb24/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbiAgLyoqXHJcbiAgICogQWxsb3dzIGVzY2FsYXRpb24gb2YgdGVjaG5pY2FsIGlzc3Vlcy5cclxuICAgKi9cclxuICBjb250YWN0PzogZmhpci5Db250YWN0UG9pbnR8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIElkZW50aWZpZXMgd2hlcmUgdG8gc2VuZCByZXNwb25zZXMsIG1heSBpbmZsdWVuY2Ugc2VjdXJpdHkgcGVybWlzc2lvbnMuXHJcbiAgICovXHJcbiAgZW5kcG9pbnQ6IHN0cmluZ3xudWxsO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBNZXNzYWdlSGVhZGVyLnNvdXJjZS5lbmRwb2ludFxyXG4gICAqL1xyXG4gIF9lbmRwb2ludD86Zmhpci5GaGlyRWxlbWVudDtcclxufVxyXG5cclxuLyoqXHJcbiAqIEluZGljYXRlcyB3aGVyZSBtZXNzYWdlIGlzIHRvIGJlIHNlbnQgZm9yIHJvdXRpbmcgcHVycG9zZXMuICBBbGxvd3MgdmVyaWZpY2F0aW9uIG9mIFwiYW0gSSB0aGUgaW50ZW5kZWQgcmVjaXBpZW50XCIuXHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIE1lc3NhZ2VIZWFkZXJEZXN0aW5hdGlvbiBleHRlbmRzIGZoaXIuQmFja2JvbmVFbGVtZW50IHsgXHJcbiAgLyoqXHJcbiAgICogTWF5IGJlIHVzZWQgZm9yIHJvdXRpbmcgb2YgcmVzcG9uc2UgYW5kL29yIHRvIHN1cHBvcnQgYXVkaXQuXHJcbiAgICovXHJcbiAgbmFtZT86IHN0cmluZ3x1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IE1lc3NhZ2VIZWFkZXIuZGVzdGluYXRpb24ubmFtZVxyXG4gICAqL1xyXG4gIF9uYW1lPzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIFN1cHBvcnRzIG11bHRpLWhvcCByb3V0aW5nLlxyXG4gICAqL1xyXG4gIHRhcmdldD86IGZoaXIuUmVmZXJlbmNlfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBJZGVudGlmaWVzIHdoZXJlIHRvIHJvdXRlIHRoZSBtZXNzYWdlLlxyXG4gICAqL1xyXG4gIGVuZHBvaW50OiBzdHJpbmd8bnVsbDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogTWVzc2FnZUhlYWRlci5kZXN0aW5hdGlvbi5lbmRwb2ludFxyXG4gICAqL1xyXG4gIF9lbmRwb2ludD86Zmhpci5GaGlyRWxlbWVudDtcclxufVxyXG5cclxuLyoqXHJcbiAqIFRoZSBoZWFkZXIgZm9yIGEgbWVzc2FnZSBleGNoYW5nZSB0aGF0IGlzIGVpdGhlciByZXF1ZXN0aW5nIG9yIHJlc3BvbmRpbmcgdG8gYW4gYWN0aW9uLiAgVGhlIHJlZmVyZW5jZShzKSB0aGF0IGFyZSB0aGUgc3ViamVjdCBvZiB0aGUgYWN0aW9uIGFzIHdlbGwgYXMgb3RoZXIgaW5mb3JtYXRpb24gcmVsYXRlZCB0byB0aGUgYWN0aW9uIGFyZSB0eXBpY2FsbHkgdHJhbnNtaXR0ZWQgaW4gYSBidW5kbGUgaW4gd2hpY2ggdGhlIE1lc3NhZ2VIZWFkZXIgcmVzb3VyY2UgaW5zdGFuY2UgaXMgdGhlIGZpcnN0IHJlc291cmNlIGluIHRoZSBidW5kbGUuXHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIE1lc3NhZ2VIZWFkZXIgZXh0ZW5kcyBmaGlyLkRvbWFpblJlc291cmNlIHsgXHJcbiAgLyoqXHJcbiAgICogUmVzb3VyY2UgVHlwZSBOYW1lXHJcbiAgICovXHJcbiAgcmVzb3VyY2VUeXBlOiBcIk1lc3NhZ2VIZWFkZXJcInxudWxsO1xyXG4gIC8qKlxyXG4gICAqIEFsbG93cyBsaW1pdGVkIGRldGVjdGlvbiBvZiBvdXQtb2Ytb3JkZXIgYW5kIGRlbGF5ZWQgdHJhbnNtaXNzaW9uLiAgQWxzbyBzdXBwb3J0cyBhdWRpdC5cclxuICAgKi9cclxuICB0aW1lc3RhbXA6IHN0cmluZ3xudWxsO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBNZXNzYWdlSGVhZGVyLnRpbWVzdGFtcFxyXG4gICAqL1xyXG4gIF90aW1lc3RhbXA/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbiAgLyoqXHJcbiAgICogRHJpdmVzIHRoZSBiZWhhdmlvciBhc3NvY2lhdGVkIHdpdGggdGhpcyBtZXNzYWdlLlxyXG4gICAqL1xyXG4gIGV2ZW50OiBmaGlyLkNvZGluZ3xudWxsO1xyXG4gIC8qKlxyXG4gICAqIEluZm9ybWF0aW9uIGFib3V0IHRoZSBtZXNzYWdlIHRoYXQgdGhpcyBtZXNzYWdlIGlzIGEgcmVzcG9uc2UgdG8uICBPbmx5IHByZXNlbnQgaWYgdGhpcyBtZXNzYWdlIGlzIGEgcmVzcG9uc2UuXHJcbiAgICovXHJcbiAgcmVzcG9uc2U/OiBmaGlyLk1lc3NhZ2VIZWFkZXJSZXNwb25zZXx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogQWxsb3dzIHJlcGxpZXMsIHN1cHBvcnRzIGF1ZGl0LlxyXG4gICAqL1xyXG4gIHNvdXJjZTogZmhpci5NZXNzYWdlSGVhZGVyU291cmNlfG51bGw7XHJcbiAgLyoqXHJcbiAgICogSW5kaWNhdGVzIHdoZXJlIG1lc3NhZ2UgaXMgdG8gYmUgc2VudCBmb3Igcm91dGluZyBwdXJwb3Nlcy4gIEFsbG93cyB2ZXJpZmljYXRpb24gb2YgXCJhbSBJIHRoZSBpbnRlbmRlZCByZWNpcGllbnRcIi5cclxuICAgKi9cclxuICBkZXN0aW5hdGlvbj86IChmaGlyLk1lc3NhZ2VIZWFkZXJEZXN0aW5hdGlvbnxudWxsKVtdfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBOZWVkIHRvIGtub3cgZm9yIGF1ZGl0L3RyYWNlYmFjayByZXF1aXJlbWVudHMgYW5kIHBvc3NpYmx5IGZvciBhdXRob3JpemF0aW9uLlxyXG4gICAqL1xyXG4gIGVudGVyZXI/OiBmaGlyLlJlZmVyZW5jZXx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogTmVlZCB0byBrbm93IGZvciBhdWRpdC90cmFjZWJhY2sgcmVxdWlyZW1lbnRzIGFuZCBwb3NzaWJseSBmb3IgYXV0aG9yaXphdGlvbi5cclxuICAgKi9cclxuICBhdXRob3I/OiBmaGlyLlJlZmVyZW5jZXx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogQWxsb3dzIHJvdXRpbmcgYmV5b25kIGp1c3QgdGhlIGFwcGxpY2F0aW9uIGxldmVsLlxyXG4gICAqL1xyXG4gIHJlY2VpdmVyPzogZmhpci5SZWZlcmVuY2V8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIE5lZWQgdG8ga25vdyBmb3IgYXVkaXQvdHJhY2ViYWNrIHJlcXVpcmVtZW50cyBhbmQgcG9zc2libHkgZm9yIGF1dGhvcml6YXRpb24uXHJcbiAgICovXHJcbiAgcmVzcG9uc2libGU/OiBmaGlyLlJlZmVyZW5jZXx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogTmVlZCB0byBiZSBhYmxlIHRvIHRyYWNrIHdoeSByZXNvdXJjZXMgYXJlIGJlaW5nIGNoYW5nZWQgYW5kIHJlcG9ydCBpbiB0aGUgYXVkaXQgbG9nL2hpc3Rvcnkgb2YgdGhlIHJlc291cmNlLiAgTWF5IGFmZmVjdCBhdXRob3JpemF0aW9uLlxyXG4gICAqL1xyXG4gIHJlYXNvbj86IGZoaXIuQ29kZWFibGVDb25jZXB0fHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBFdmVyeSBtZXNzYWdlIGV2ZW50IGlzIGFib3V0IGFjdHVhbCBkYXRhLCBhIHNpbmdsZSByZXNvdXJjZSwgdGhhdCBpcyBpZGVudGlmaWVkIGluIHRoZSBkZWZpbml0aW9uIG9mIHRoZSBldmVudCwgYW5kIHBlcmhhcHMgc29tZSBvciBhbGwgbGlua2VkIHJlc291cmNlcy5cclxuICAgKi9cclxuICBkYXRhPzogKGZoaXIuUmVmZXJlbmNlfG51bGwpW118dW5kZWZpbmVkO1xyXG59XHJcbiJdfQ==