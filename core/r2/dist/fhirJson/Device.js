// <auto-generated/>
// Contents of: hl7.fhir.r2.core version: 1.0.2
// Minimum TypeScript Version: 3.7
// FHIR Resource: Device
export {};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGV2aWNlLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpckpzb24vRGV2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQiwrQ0FBK0M7QUFDL0Msa0NBQWtDO0FBQ2xDLHdCQUF3QiIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yMi5jb3JlIHZlcnNpb246IDEuMC4yXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBSZXNvdXJjZTogRGV2aWNlXHJcblxyXG5pbXBvcnQgKiBhcyBmaGlyIGZyb20gJy4uL2ZoaXJKc29uLmpzJztcclxuXHJcblxyXG4vKipcclxuICogVGhpcyByZXNvdXJjZSBpZGVudGlmaWVzIGFuIGluc3RhbmNlIG9mIGEgbWFudWZhY3R1cmVkIGl0ZW0gdGhhdCBpcyB1c2VkIGluIHRoZSBwcm92aXNpb24gb2YgaGVhbHRoY2FyZSB3aXRob3V0IGJlaW5nIHN1YnN0YW50aWFsbHkgY2hhbmdlZCB0aHJvdWdoIHRoYXQgYWN0aXZpdHkuIFRoZSBkZXZpY2UgbWF5IGJlIGEgbWVkaWNhbCBvciBub24tbWVkaWNhbCBkZXZpY2UuICBNZWRpY2FsIGRldmljZXMgaW5jbHVkZXMgZHVyYWJsZSAocmV1c2FibGUpIG1lZGljYWwgZXF1aXBtZW50LCBpbXBsYW50YWJsZSBkZXZpY2VzLCBhcyB3ZWxsIGFzIGRpc3Bvc2FibGUgZXF1aXBtZW50IHVzZWQgZm9yIGRpYWdub3N0aWMsIHRyZWF0bWVudCwgYW5kIHJlc2VhcmNoIGZvciBoZWFsdGhjYXJlIGFuZCBwdWJsaWMgaGVhbHRoLiAgTm9uLW1lZGljYWwgZGV2aWNlcyBtYXkgaW5jbHVkZSBpdGVtcyBzdWNoIGFzIGEgbWFjaGluZSwgY2VsbHBob25lLCBjb21wdXRlciwgYXBwbGljYXRpb24sIGV0Yy5cclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgRGV2aWNlIGV4dGVuZHMgZmhpci5Eb21haW5SZXNvdXJjZSB7IFxyXG4gIC8qKlxyXG4gICAqIFJlc291cmNlIFR5cGUgTmFtZVxyXG4gICAqL1xyXG4gIHJlc291cmNlVHlwZTogXCJEZXZpY2VcInxudWxsO1xyXG4gIC8qKlxyXG4gICAqIFVuaXF1ZSBpbnN0YW5jZSBpZGVudGlmaWVycyBhc3NpZ25lZCB0byBhIGRldmljZSBieSBvcmdhbml6YXRpb25zIGxpa2UgbWFudWZhY3R1cmVycyBvciBvd25lcnMuIElmIHRoZSBpZGVudGlmaWVyIGlkZW50aWZpZXMgdGhlIHR5cGUgb2YgZGV2aWNlLCBEZXZpY2UudHlwZSBzaG91bGQgYmUgdXNlZC5cclxuICAgKi9cclxuICBpZGVudGlmaWVyPzogKGZoaXIuSWRlbnRpZmllcnxudWxsKVtdfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBDb2RlIG9yIGlkZW50aWZpZXIgdG8gaWRlbnRpZnkgYSBraW5kIG9mIGRldmljZS5cclxuICAgKi9cclxuICB0eXBlOiBmaGlyLkNvZGVhYmxlQ29uY2VwdHxudWxsO1xyXG4gIC8qKlxyXG4gICAqIERlc2NyaXB0aXZlIGluZm9ybWF0aW9uLCB1c2FnZSBpbmZvcm1hdGlvbiBvciBpbXBsYW50YXRpb24gaW5mb3JtYXRpb24gdGhhdCBpcyBub3QgY2FwdHVyZWQgaW4gYW4gZXhpc3RpbmcgZWxlbWVudC5cclxuICAgKi9cclxuICBub3RlPzogKGZoaXIuQW5ub3RhdGlvbnxudWxsKVtdfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBTdGF0dXMgb2YgdGhlIERldmljZSBhdmFpbGFiaWxpdHkuXHJcbiAgICovXHJcbiAgc3RhdHVzPzogJ2F2YWlsYWJsZSd8J2VudGVyZWQtaW4tZXJyb3InfCdub3QtYXZhaWxhYmxlJ3x1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IERldmljZS5zdGF0dXNcclxuICAgKi9cclxuICBfc3RhdHVzPzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIEEgbmFtZSBvZiB0aGUgbWFudWZhY3R1cmVyLlxyXG4gICAqL1xyXG4gIG1hbnVmYWN0dXJlcj86IHN0cmluZ3x1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IERldmljZS5tYW51ZmFjdHVyZXJcclxuICAgKi9cclxuICBfbWFudWZhY3R1cmVyPzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIFRoZSBcIm1vZGVsXCIgaXMgYW4gaWRlbnRpZmllciBhc3NpZ25lZCBieSB0aGUgbWFudWZhY3R1cmVyIHRvIGlkZW50aWZ5IHRoZSBwcm9kdWN0IGJ5IGl0cyB0eXBlLiBUaGlzIG51bWJlciBpcyBzaGFyZWQgYnkgdGhlIGFsbCBkZXZpY2VzIHNvbGQgYXMgdGhlIHNhbWUgdHlwZS5cclxuICAgKi9cclxuICBtb2RlbD86IHN0cmluZ3x1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IERldmljZS5tb2RlbFxyXG4gICAqL1xyXG4gIF9tb2RlbD86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBUaGUgdmVyc2lvbiBvZiB0aGUgZGV2aWNlLCBpZiB0aGUgZGV2aWNlIGhhcyBtdWx0aXBsZSByZWxlYXNlcyB1bmRlciB0aGUgc2FtZSBtb2RlbCwgb3IgaWYgdGhlIGRldmljZSBpcyBzb2Z0d2FyZSBvciBjYXJyaWVzIGZpcm13YXJlLlxyXG4gICAqL1xyXG4gIHZlcnNpb24/OiBzdHJpbmd8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBEZXZpY2UudmVyc2lvblxyXG4gICAqL1xyXG4gIF92ZXJzaW9uPzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIFRoZSBkYXRlIGFuZCB0aW1lIHdoZW4gdGhlIGRldmljZSB3YXMgbWFudWZhY3R1cmVkLlxyXG4gICAqL1xyXG4gIG1hbnVmYWN0dXJlRGF0ZT86IHN0cmluZ3x1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IERldmljZS5tYW51ZmFjdHVyZURhdGVcclxuICAgKi9cclxuICBfbWFudWZhY3R1cmVEYXRlPzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIFRoZSBkYXRlIGFuZCB0aW1lIGJleW9uZCB3aGljaCB0aGlzIGRldmljZSBpcyBubyBsb25nZXIgdmFsaWQgb3Igc2hvdWxkIG5vdCBiZSB1c2VkIChpZiBhcHBsaWNhYmxlKS5cclxuICAgKi9cclxuICBleHBpcnk/OiBzdHJpbmd8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBEZXZpY2UuZXhwaXJ5XHJcbiAgICovXHJcbiAgX2V4cGlyeT86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBVbml0ZWQgU3RhdGVzIEZvb2QgYW5kIERydWcgQWRtaW5pc3RyYXRpb24gbWFuZGF0ZWQgVW5pcXVlIERldmljZSBJZGVudGlmaWVyIChVREkpLiBVc2UgdGhlIGh1bWFuIHJlYWRhYmxlIGluZm9ybWF0aW9uICh0aGUgY29udGVudCB0aGF0IHRoZSB1c2VyIHNlZXMsIHdoaWNoIGlzIHNvbWV0aW1lcyBkaWZmZXJlbnQgdG8gdGhlIGV4YWN0IHN5bnRheCByZXByZXNlbnRlZCBpbiB0aGUgYmFyY29kZSkgIC0gc2VlIGh0dHA6Ly93d3cuZmRhLmdvdi9NZWRpY2FsRGV2aWNlcy9EZXZpY2VSZWd1bGF0aW9uYW5kR3VpZGFuY2UvVW5pcXVlRGV2aWNlSWRlbnRpZmljYXRpb24vZGVmYXVsdC5odG0uXHJcbiAgICovXHJcbiAgdWRpPzogc3RyaW5nfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogRGV2aWNlLnVkaVxyXG4gICAqL1xyXG4gIF91ZGk/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbiAgLyoqXHJcbiAgICogTG90IG51bWJlciBhc3NpZ25lZCBieSB0aGUgbWFudWZhY3R1cmVyLlxyXG4gICAqL1xyXG4gIGxvdE51bWJlcj86IHN0cmluZ3x1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IERldmljZS5sb3ROdW1iZXJcclxuICAgKi9cclxuICBfbG90TnVtYmVyPzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIEFuIG9yZ2FuaXphdGlvbiB0aGF0IGlzIHJlc3BvbnNpYmxlIGZvciB0aGUgcHJvdmlzaW9uIGFuZCBvbmdvaW5nIG1haW50ZW5hbmNlIG9mIHRoZSBkZXZpY2UuXHJcbiAgICovXHJcbiAgb3duZXI/OiBmaGlyLlJlZmVyZW5jZXx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogVGhlIHBsYWNlIHdoZXJlIHRoZSBkZXZpY2UgY2FuIGJlIGZvdW5kLlxyXG4gICAqL1xyXG4gIGxvY2F0aW9uPzogZmhpci5SZWZlcmVuY2V8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIFBhdGllbnQgaW5mb3JtYXRpb24sIGlmIHRoZSByZXNvdXJjZSBpcyBhZmZpeGVkIHRvIGEgcGVyc29uLlxyXG4gICAqL1xyXG4gIHBhdGllbnQ/OiBmaGlyLlJlZmVyZW5jZXx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogQ29udGFjdCBkZXRhaWxzIGZvciBhbiBvcmdhbml6YXRpb24gb3IgYSBwYXJ0aWN1bGFyIGh1bWFuIHRoYXQgaXMgcmVzcG9uc2libGUgZm9yIHRoZSBkZXZpY2UuXHJcbiAgICovXHJcbiAgY29udGFjdD86IChmaGlyLkNvbnRhY3RQb2ludHxudWxsKVtdfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBBIG5ldHdvcmsgYWRkcmVzcyBvbiB3aGljaCB0aGUgZGV2aWNlIG1heSBiZSBjb250YWN0ZWQgZGlyZWN0bHkuXHJcbiAgICovXHJcbiAgdXJsPzogc3RyaW5nfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogRGV2aWNlLnVybFxyXG4gICAqL1xyXG4gIF91cmw/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbn1cclxuIl19