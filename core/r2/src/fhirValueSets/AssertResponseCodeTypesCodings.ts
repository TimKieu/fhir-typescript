// <auto-generated/>
// Contents of: hl7.fhir.r2.core version: 1.0.2
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/assert-response-code-types|1.0.2

import { CodingArgs } from '../fhir/Coding.js'

/**
 * The type of response code to use for assertion.
 * 
 * The response code to expect in the response.
 */
export type AssertResponseCodeTypesCodingType = {
  /**
   * bad: Response code is 400.
   */
  Bad: CodingArgs;
  /**
   * conflict: Response code is 409.
   */
  Conflict: CodingArgs;
  /**
   * created: Response code is 201.
   */
  Created: CodingArgs;
  /**
   * forbidden: Response code is 403.
   */
  Forbidden: CodingArgs;
  /**
   * gone: Response code is 410.
   */
  Gone: CodingArgs;
  /**
   * methodNotAllowed: Response code is 405.
   */
  MethodNotAllowed: CodingArgs;
  /**
   * noContent: Response code is 204.
   */
  NoContent: CodingArgs;
  /**
   * notFound: Response code is 404.
   */
  NotFound: CodingArgs;
  /**
   * notModified: Response code is 304.
   */
  NotModified: CodingArgs;
  /**
   * okay: Response code is 200.
   */
  Okay: CodingArgs;
  /**
   * preconditionFailed: Response code is 412.
   */
  PreconditionFailed: CodingArgs;
  /**
   * unprocessable: Response code is 422.
   */
  Unprocessable: CodingArgs;
}

/**
 * The type of response code to use for assertion.
 * 
 * The response code to expect in the response.
 */
export const AssertResponseCodeTypesCodings:AssertResponseCodeTypesCodingType = {
  /**
   * bad: Response code is 400.
   */
  Bad: {
    display: "bad",
    code: "bad",
    system: "http://hl7.org/fhir/assert-response-code-types",
  },
  /**
   * conflict: Response code is 409.
   */
  Conflict: {
    display: "conflict",
    code: "conflict",
    system: "http://hl7.org/fhir/assert-response-code-types",
  },
  /**
   * created: Response code is 201.
   */
  Created: {
    display: "created",
    code: "created",
    system: "http://hl7.org/fhir/assert-response-code-types",
  },
  /**
   * forbidden: Response code is 403.
   */
  Forbidden: {
    display: "forbidden",
    code: "forbidden",
    system: "http://hl7.org/fhir/assert-response-code-types",
  },
  /**
   * gone: Response code is 410.
   */
  Gone: {
    display: "gone",
    code: "gone",
    system: "http://hl7.org/fhir/assert-response-code-types",
  },
  /**
   * methodNotAllowed: Response code is 405.
   */
  MethodNotAllowed: {
    display: "methodNotAllowed",
    code: "methodNotAllowed",
    system: "http://hl7.org/fhir/assert-response-code-types",
  },
  /**
   * noContent: Response code is 204.
   */
  NoContent: {
    display: "noContent",
    code: "noContent",
    system: "http://hl7.org/fhir/assert-response-code-types",
  },
  /**
   * notFound: Response code is 404.
   */
  NotFound: {
    display: "notFound",
    code: "notFound",
    system: "http://hl7.org/fhir/assert-response-code-types",
  },
  /**
   * notModified: Response code is 304.
   */
  NotModified: {
    display: "notModified",
    code: "notModified",
    system: "http://hl7.org/fhir/assert-response-code-types",
  },
  /**
   * okay: Response code is 200.
   */
  Okay: {
    display: "okay",
    code: "okay",
    system: "http://hl7.org/fhir/assert-response-code-types",
  },
  /**
   * preconditionFailed: Response code is 412.
   */
  PreconditionFailed: {
    display: "preconditionFailed",
    code: "preconditionFailed",
    system: "http://hl7.org/fhir/assert-response-code-types",
  },
  /**
   * unprocessable: Response code is 422.
   */
  Unprocessable: {
    display: "unprocessable",
    code: "unprocessable",
    system: "http://hl7.org/fhir/assert-response-code-types",
  },
} as const;
