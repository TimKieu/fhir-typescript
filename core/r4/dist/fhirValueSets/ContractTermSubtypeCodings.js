// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/contract-term-subtype|4.0.1
import { Coding } from '../fhir/Coding.js';
/**
 * This value set includes sample Contract Term SubType codes.
 */
export const ContractTermSubtypeCodings = {
    /**
     * condition: Terms that go to the very root of a contract.
     */
    Condition: new Coding({
        display: "Condition",
        code: "condition",
        system: "http://terminology.hl7.org/CodeSystem/contracttermsubtypecodes",
    }),
    /**
     * innominate: Breach of which might or might not go to the root of the contract depending upon the nature of the breach
     */
    Innominate: new Coding({
        display: "Innominate",
        code: "innominate",
        system: "http://terminology.hl7.org/CodeSystem/contracttermsubtypecodes",
    }),
    /**
     * warranty: Less imperative than a condition, so the contract will survive a breach
     */
    Warranty: new Coding({
        display: "Warranty",
        code: "warranty",
        system: "http://terminology.hl7.org/CodeSystem/contracttermsubtypecodes",
    }),
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29udHJhY3RUZXJtU3VidHlwZUNvZGluZ3MuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL0NvbnRyYWN0VGVybVN1YnR5cGVDb2RpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQiwrQ0FBK0M7QUFDL0Msa0NBQWtDO0FBQ2xDLDBFQUEwRTtBQUUxRSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sbUJBQW1CLENBQUE7QUFFMUM7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSwwQkFBMEIsR0FBRztJQUN4Qzs7T0FFRztJQUNILFNBQVMsRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUNwQixPQUFPLEVBQUUsV0FBVztRQUNwQixJQUFJLEVBQUUsV0FBVztRQUNqQixNQUFNLEVBQUUsZ0VBQWdFO0tBQ3pFLENBQUM7SUFDRjs7T0FFRztJQUNILFVBQVUsRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUNyQixPQUFPLEVBQUUsWUFBWTtRQUNyQixJQUFJLEVBQUUsWUFBWTtRQUNsQixNQUFNLEVBQUUsZ0VBQWdFO0tBQ3pFLENBQUM7SUFDRjs7T0FFRztJQUNILFFBQVEsRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUNuQixPQUFPLEVBQUUsVUFBVTtRQUNuQixJQUFJLEVBQUUsVUFBVTtRQUNoQixNQUFNLEVBQUUsZ0VBQWdFO0tBQ3pFLENBQUM7Q0FDTSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0LmNvcmUgdmVyc2lvbjogNC4wLjFcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L2NvbnRyYWN0LXRlcm0tc3VidHlwZXw0LjAuMVxyXG5cclxuaW1wb3J0IHsgQ29kaW5nIH0gZnJvbSAnLi4vZmhpci9Db2RpbmcuanMnXHJcblxyXG4vKipcclxuICogVGhpcyB2YWx1ZSBzZXQgaW5jbHVkZXMgc2FtcGxlIENvbnRyYWN0IFRlcm0gU3ViVHlwZSBjb2Rlcy5cclxuICovXHJcbmV4cG9ydCBjb25zdCBDb250cmFjdFRlcm1TdWJ0eXBlQ29kaW5ncyA9IHtcclxuICAvKipcclxuICAgKiBjb25kaXRpb246IFRlcm1zIHRoYXQgZ28gdG8gdGhlIHZlcnkgcm9vdCBvZiBhIGNvbnRyYWN0LlxyXG4gICAqL1xyXG4gIENvbmRpdGlvbjogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIkNvbmRpdGlvblwiLFxyXG4gICAgY29kZTogXCJjb25kaXRpb25cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2NvbnRyYWN0dGVybXN1YnR5cGVjb2Rlc1wiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIGlubm9taW5hdGU6IEJyZWFjaCBvZiB3aGljaCBtaWdodCBvciBtaWdodCBub3QgZ28gdG8gdGhlIHJvb3Qgb2YgdGhlIGNvbnRyYWN0IGRlcGVuZGluZyB1cG9uIHRoZSBuYXR1cmUgb2YgdGhlIGJyZWFjaFxyXG4gICAqL1xyXG4gIElubm9taW5hdGU6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJJbm5vbWluYXRlXCIsXHJcbiAgICBjb2RlOiBcImlubm9taW5hdGVcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2NvbnRyYWN0dGVybXN1YnR5cGVjb2Rlc1wiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIHdhcnJhbnR5OiBMZXNzIGltcGVyYXRpdmUgdGhhbiBhIGNvbmRpdGlvbiwgc28gdGhlIGNvbnRyYWN0IHdpbGwgc3Vydml2ZSBhIGJyZWFjaFxyXG4gICAqL1xyXG4gIFdhcnJhbnR5OiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiV2FycmFudHlcIixcclxuICAgIGNvZGU6IFwid2FycmFudHlcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2NvbnRyYWN0dGVybXN1YnR5cGVjb2Rlc1wiLFxyXG4gIH0pLFxyXG59IGFzIGNvbnN0O1xyXG5cclxuLyoqXHJcbiAqIFRoaXMgdmFsdWUgc2V0IGluY2x1ZGVzIHNhbXBsZSBDb250cmFjdCBUZXJtIFN1YlR5cGUgY29kZXMuXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBDb250cmFjdFRlcm1TdWJ0eXBlQ29kaW5nVHlwZSA9IHR5cGVvZiBDb250cmFjdFRlcm1TdWJ0eXBlQ29kaW5ncztcclxuIl19