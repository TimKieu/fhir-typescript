// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/verificationresult-primary-source-type|4.0.1
import { Coding } from '../fhir/Coding.js';
/**
 * Type of the validation primary source
 */
export const VerificationresultPrimarySourceTypeCodings = {
    /**
     * Code: auth-source
     */
    AuthoritativeSource: new Coding({
        display: "Authoritative source",
        code: "auth-source",
        system: "http://terminology.hl7.org/CodeSystem/primary-source-type",
    }),
    /**
     * Code: cont-ed
     */
    ContinuingEducation: new Coding({
        display: "Continuing Education",
        code: "cont-ed",
        system: "http://terminology.hl7.org/CodeSystem/primary-source-type",
    }),
    /**
     * Code: issuer
     */
    IssuingSource: new Coding({
        display: "Issuing source",
        code: "issuer",
        system: "http://terminology.hl7.org/CodeSystem/primary-source-type",
    }),
    /**
     * Code: legal
     */
    LegalSource: new Coding({
        display: "Legal source",
        code: "legal",
        system: "http://terminology.hl7.org/CodeSystem/primary-source-type",
    }),
    /**
     * Code: lic-board
     */
    LicenseBoard: new Coding({
        display: "License Board",
        code: "lic-board",
        system: "http://terminology.hl7.org/CodeSystem/primary-source-type",
    }),
    /**
     * Code: post-serv
     */
    PostalService: new Coding({
        display: "Postal Service",
        code: "post-serv",
        system: "http://terminology.hl7.org/CodeSystem/primary-source-type",
    }),
    /**
     * Code: prim
     */
    PrimaryEducation: new Coding({
        display: "Primary Education",
        code: "prim",
        system: "http://terminology.hl7.org/CodeSystem/primary-source-type",
    }),
    /**
     * Code: reg-auth
     */
    RegistrationAuthority: new Coding({
        display: "Registration Authority",
        code: "reg-auth",
        system: "http://terminology.hl7.org/CodeSystem/primary-source-type",
    }),
    /**
     * Code: rel-own
     */
    RelationshipOwner: new Coding({
        display: "Relationship owner",
        code: "rel-own",
        system: "http://terminology.hl7.org/CodeSystem/primary-source-type",
    }),
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVmVyaWZpY2F0aW9ucmVzdWx0UHJpbWFyeVNvdXJjZVR5cGVDb2RpbmdzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9WZXJpZmljYXRpb25yZXN1bHRQcmltYXJ5U291cmNlVHlwZUNvZGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLCtDQUErQztBQUMvQyxrQ0FBa0M7QUFDbEMsMkZBQTJGO0FBRTNGLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQTtBQUUxQzs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLDBDQUEwQyxHQUFHO0lBQ3hEOztPQUVHO0lBQ0gsbUJBQW1CLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDOUIsT0FBTyxFQUFFLHNCQUFzQjtRQUMvQixJQUFJLEVBQUUsYUFBYTtRQUNuQixNQUFNLEVBQUUsMkRBQTJEO0tBQ3BFLENBQUM7SUFDRjs7T0FFRztJQUNILG1CQUFtQixFQUFFLElBQUksTUFBTSxDQUFDO1FBQzlCLE9BQU8sRUFBRSxzQkFBc0I7UUFDL0IsSUFBSSxFQUFFLFNBQVM7UUFDZixNQUFNLEVBQUUsMkRBQTJEO0tBQ3BFLENBQUM7SUFDRjs7T0FFRztJQUNILGFBQWEsRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUN4QixPQUFPLEVBQUUsZ0JBQWdCO1FBQ3pCLElBQUksRUFBRSxRQUFRO1FBQ2QsTUFBTSxFQUFFLDJEQUEyRDtLQUNwRSxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxXQUFXLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDdEIsT0FBTyxFQUFFLGNBQWM7UUFDdkIsSUFBSSxFQUFFLE9BQU87UUFDYixNQUFNLEVBQUUsMkRBQTJEO0tBQ3BFLENBQUM7SUFDRjs7T0FFRztJQUNILFlBQVksRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUN2QixPQUFPLEVBQUUsZUFBZTtRQUN4QixJQUFJLEVBQUUsV0FBVztRQUNqQixNQUFNLEVBQUUsMkRBQTJEO0tBQ3BFLENBQUM7SUFDRjs7T0FFRztJQUNILGFBQWEsRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUN4QixPQUFPLEVBQUUsZ0JBQWdCO1FBQ3pCLElBQUksRUFBRSxXQUFXO1FBQ2pCLE1BQU0sRUFBRSwyREFBMkQ7S0FDcEUsQ0FBQztJQUNGOztPQUVHO0lBQ0gsZ0JBQWdCLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDM0IsT0FBTyxFQUFFLG1CQUFtQjtRQUM1QixJQUFJLEVBQUUsTUFBTTtRQUNaLE1BQU0sRUFBRSwyREFBMkQ7S0FDcEUsQ0FBQztJQUNGOztPQUVHO0lBQ0gscUJBQXFCLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDaEMsT0FBTyxFQUFFLHdCQUF3QjtRQUNqQyxJQUFJLEVBQUUsVUFBVTtRQUNoQixNQUFNLEVBQUUsMkRBQTJEO0tBQ3BFLENBQUM7SUFDRjs7T0FFRztJQUNILGlCQUFpQixFQUFFLElBQUksTUFBTSxDQUFDO1FBQzVCLE9BQU8sRUFBRSxvQkFBb0I7UUFDN0IsSUFBSSxFQUFFLFNBQVM7UUFDZixNQUFNLEVBQUUsMkRBQTJEO0tBQ3BFLENBQUM7Q0FDTSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0LmNvcmUgdmVyc2lvbjogNC4wLjFcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L3ZlcmlmaWNhdGlvbnJlc3VsdC1wcmltYXJ5LXNvdXJjZS10eXBlfDQuMC4xXHJcblxyXG5pbXBvcnQgeyBDb2RpbmcgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiBUeXBlIG9mIHRoZSB2YWxpZGF0aW9uIHByaW1hcnkgc291cmNlXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgVmVyaWZpY2F0aW9ucmVzdWx0UHJpbWFyeVNvdXJjZVR5cGVDb2RpbmdzID0ge1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IGF1dGgtc291cmNlXHJcbiAgICovXHJcbiAgQXV0aG9yaXRhdGl2ZVNvdXJjZTogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIkF1dGhvcml0YXRpdmUgc291cmNlXCIsXHJcbiAgICBjb2RlOiBcImF1dGgtc291cmNlXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9wcmltYXJ5LXNvdXJjZS10eXBlXCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogQ29kZTogY29udC1lZFxyXG4gICAqL1xyXG4gIENvbnRpbnVpbmdFZHVjYXRpb246IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJDb250aW51aW5nIEVkdWNhdGlvblwiLFxyXG4gICAgY29kZTogXCJjb250LWVkXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9wcmltYXJ5LXNvdXJjZS10eXBlXCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogQ29kZTogaXNzdWVyXHJcbiAgICovXHJcbiAgSXNzdWluZ1NvdXJjZTogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIklzc3Vpbmcgc291cmNlXCIsXHJcbiAgICBjb2RlOiBcImlzc3VlclwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vcHJpbWFyeS1zb3VyY2UtdHlwZVwiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IGxlZ2FsXHJcbiAgICovXHJcbiAgTGVnYWxTb3VyY2U6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJMZWdhbCBzb3VyY2VcIixcclxuICAgIGNvZGU6IFwibGVnYWxcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL3ByaW1hcnktc291cmNlLXR5cGVcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBDb2RlOiBsaWMtYm9hcmRcclxuICAgKi9cclxuICBMaWNlbnNlQm9hcmQ6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJMaWNlbnNlIEJvYXJkXCIsXHJcbiAgICBjb2RlOiBcImxpYy1ib2FyZFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vcHJpbWFyeS1zb3VyY2UtdHlwZVwiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IHBvc3Qtc2VydlxyXG4gICAqL1xyXG4gIFBvc3RhbFNlcnZpY2U6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJQb3N0YWwgU2VydmljZVwiLFxyXG4gICAgY29kZTogXCJwb3N0LXNlcnZcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL3ByaW1hcnktc291cmNlLXR5cGVcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBDb2RlOiBwcmltXHJcbiAgICovXHJcbiAgUHJpbWFyeUVkdWNhdGlvbjogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIlByaW1hcnkgRWR1Y2F0aW9uXCIsXHJcbiAgICBjb2RlOiBcInByaW1cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL3ByaW1hcnktc291cmNlLXR5cGVcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBDb2RlOiByZWctYXV0aFxyXG4gICAqL1xyXG4gIFJlZ2lzdHJhdGlvbkF1dGhvcml0eTogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIlJlZ2lzdHJhdGlvbiBBdXRob3JpdHlcIixcclxuICAgIGNvZGU6IFwicmVnLWF1dGhcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL3ByaW1hcnktc291cmNlLXR5cGVcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBDb2RlOiByZWwtb3duXHJcbiAgICovXHJcbiAgUmVsYXRpb25zaGlwT3duZXI6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJSZWxhdGlvbnNoaXAgb3duZXJcIixcclxuICAgIGNvZGU6IFwicmVsLW93blwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vcHJpbWFyeS1zb3VyY2UtdHlwZVwiLFxyXG4gIH0pLFxyXG59IGFzIGNvbnN0O1xyXG5cclxuLyoqXHJcbiAqIFR5cGUgb2YgdGhlIHZhbGlkYXRpb24gcHJpbWFyeSBzb3VyY2VcclxuICovXHJcbmV4cG9ydCB0eXBlIFZlcmlmaWNhdGlvbnJlc3VsdFByaW1hcnlTb3VyY2VUeXBlQ29kaW5nVHlwZSA9IHR5cGVvZiBWZXJpZmljYXRpb25yZXN1bHRQcmltYXJ5U291cmNlVHlwZUNvZGluZ3M7XHJcbiJdfQ==