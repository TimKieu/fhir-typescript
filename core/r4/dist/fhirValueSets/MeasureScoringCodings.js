// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/measure-scoring|4.0.1
/**
 * The scoring type of the measure.
 */
export const MeasureScoringCodings = {
    /**
     * cohort: The measure is a cohort definition.
     */
    Cohort: {
        display: "Cohort",
        code: "cohort",
        system: "http://terminology.hl7.org/CodeSystem/measure-scoring",
    },
    /**
     * continuous-variable: The score is defined by a calculation of some quantity.
     */
    ContinuousVariable: {
        display: "Continuous Variable",
        code: "continuous-variable",
        system: "http://terminology.hl7.org/CodeSystem/measure-scoring",
    },
    /**
     * proportion: The measure score is defined using a proportion.
     */
    Proportion: {
        display: "Proportion",
        code: "proportion",
        system: "http://terminology.hl7.org/CodeSystem/measure-scoring",
    },
    /**
     * ratio: The measure score is defined using a ratio.
     */
    Ratio: {
        display: "Ratio",
        code: "ratio",
        system: "http://terminology.hl7.org/CodeSystem/measure-scoring",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWVhc3VyZVNjb3JpbmdDb2RpbmdzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9NZWFzdXJlU2NvcmluZ0NvZGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLCtDQUErQztBQUMvQyxrQ0FBa0M7QUFDbEMsb0VBQW9FO0FBMEJwRTs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUE0QjtJQUM1RDs7T0FFRztJQUNILE1BQU0sRUFBRTtRQUNOLE9BQU8sRUFBRSxRQUFRO1FBQ2pCLElBQUksRUFBRSxRQUFRO1FBQ2QsTUFBTSxFQUFFLHVEQUF1RDtLQUNoRTtJQUNEOztPQUVHO0lBQ0gsa0JBQWtCLEVBQUU7UUFDbEIsT0FBTyxFQUFFLHFCQUFxQjtRQUM5QixJQUFJLEVBQUUscUJBQXFCO1FBQzNCLE1BQU0sRUFBRSx1REFBdUQ7S0FDaEU7SUFDRDs7T0FFRztJQUNILFVBQVUsRUFBRTtRQUNWLE9BQU8sRUFBRSxZQUFZO1FBQ3JCLElBQUksRUFBRSxZQUFZO1FBQ2xCLE1BQU0sRUFBRSx1REFBdUQ7S0FDaEU7SUFDRDs7T0FFRztJQUNILEtBQUssRUFBRTtRQUNMLE9BQU8sRUFBRSxPQUFPO1FBQ2hCLElBQUksRUFBRSxPQUFPO1FBQ2IsTUFBTSxFQUFFLHVEQUF1RDtLQUNoRTtDQUNPLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjQuY29yZSB2ZXJzaW9uOiA0LjAuMVxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvbWVhc3VyZS1zY29yaW5nfDQuMC4xXHJcblxyXG5pbXBvcnQgeyBDb2RpbmdBcmdzIH0gZnJvbSAnLi4vZmhpci9Db2RpbmcuanMnXHJcblxyXG4vKipcclxuICogVGhlIHNjb3JpbmcgdHlwZSBvZiB0aGUgbWVhc3VyZS5cclxuICovXHJcbmV4cG9ydCB0eXBlIE1lYXN1cmVTY29yaW5nQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBjb2hvcnQ6IFRoZSBtZWFzdXJlIGlzIGEgY29ob3J0IGRlZmluaXRpb24uXHJcbiAgICovXHJcbiAgQ29ob3J0OiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIGNvbnRpbnVvdXMtdmFyaWFibGU6IFRoZSBzY29yZSBpcyBkZWZpbmVkIGJ5IGEgY2FsY3VsYXRpb24gb2Ygc29tZSBxdWFudGl0eS5cclxuICAgKi9cclxuICBDb250aW51b3VzVmFyaWFibGU6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogcHJvcG9ydGlvbjogVGhlIG1lYXN1cmUgc2NvcmUgaXMgZGVmaW5lZCB1c2luZyBhIHByb3BvcnRpb24uXHJcbiAgICovXHJcbiAgUHJvcG9ydGlvbjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiByYXRpbzogVGhlIG1lYXN1cmUgc2NvcmUgaXMgZGVmaW5lZCB1c2luZyBhIHJhdGlvLlxyXG4gICAqL1xyXG4gIFJhdGlvOiBDb2RpbmdBcmdzO1xyXG59XHJcblxyXG4vKipcclxuICogVGhlIHNjb3JpbmcgdHlwZSBvZiB0aGUgbWVhc3VyZS5cclxuICovXHJcbmV4cG9ydCBjb25zdCBNZWFzdXJlU2NvcmluZ0NvZGluZ3M6TWVhc3VyZVNjb3JpbmdDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIGNvaG9ydDogVGhlIG1lYXN1cmUgaXMgYSBjb2hvcnQgZGVmaW5pdGlvbi5cclxuICAgKi9cclxuICBDb2hvcnQ6IHtcclxuICAgIGRpc3BsYXk6IFwiQ29ob3J0XCIsXHJcbiAgICBjb2RlOiBcImNvaG9ydFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vbWVhc3VyZS1zY29yaW5nXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBjb250aW51b3VzLXZhcmlhYmxlOiBUaGUgc2NvcmUgaXMgZGVmaW5lZCBieSBhIGNhbGN1bGF0aW9uIG9mIHNvbWUgcXVhbnRpdHkuXHJcbiAgICovXHJcbiAgQ29udGludW91c1ZhcmlhYmxlOiB7XHJcbiAgICBkaXNwbGF5OiBcIkNvbnRpbnVvdXMgVmFyaWFibGVcIixcclxuICAgIGNvZGU6IFwiY29udGludW91cy12YXJpYWJsZVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vbWVhc3VyZS1zY29yaW5nXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBwcm9wb3J0aW9uOiBUaGUgbWVhc3VyZSBzY29yZSBpcyBkZWZpbmVkIHVzaW5nIGEgcHJvcG9ydGlvbi5cclxuICAgKi9cclxuICBQcm9wb3J0aW9uOiB7XHJcbiAgICBkaXNwbGF5OiBcIlByb3BvcnRpb25cIixcclxuICAgIGNvZGU6IFwicHJvcG9ydGlvblwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vbWVhc3VyZS1zY29yaW5nXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiByYXRpbzogVGhlIG1lYXN1cmUgc2NvcmUgaXMgZGVmaW5lZCB1c2luZyBhIHJhdGlvLlxyXG4gICAqL1xyXG4gIFJhdGlvOiB7XHJcbiAgICBkaXNwbGF5OiBcIlJhdGlvXCIsXHJcbiAgICBjb2RlOiBcInJhdGlvXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9tZWFzdXJlLXNjb3JpbmdcIixcclxuICB9LFxyXG59IGFzIGNvbnN0O1xyXG4iXX0=