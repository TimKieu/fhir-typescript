// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/communication-not-done-reason|4.0.1
/**
 * Codes for the reason why a communication did not happen.
 */
export const CommunicationNotDoneReasonCodings = {
    /**
     * family-objection: The communication was not done due to a family objection.
     */
    FamilyObjection: {
        display: "Family Objection",
        code: "family-objection",
        system: "http://terminology.hl7.org/CodeSystem/communication-not-done-reason",
    },
    /**
     * invalid-phone-number: The communication was not done due to an invalid phone number.
     */
    InvalidPhoneNumber: {
        display: "Invalid Phone Number",
        code: "invalid-phone-number",
        system: "http://terminology.hl7.org/CodeSystem/communication-not-done-reason",
    },
    /**
     * patient-objection: The communication was not done due to a patient objection.
     */
    PatientObjection: {
        display: "Patient Objection",
        code: "patient-objection",
        system: "http://terminology.hl7.org/CodeSystem/communication-not-done-reason",
    },
    /**
     * recipient-unavailable: The communication was not done due to the recipient being unavailable.
     */
    RecipientUnavailable: {
        display: "Recipient Unavailable",
        code: "recipient-unavailable",
        system: "http://terminology.hl7.org/CodeSystem/communication-not-done-reason",
    },
    /**
     * system-error: The communication was not done due to a system error.
     */
    SystemError: {
        display: "System Error",
        code: "system-error",
        system: "http://terminology.hl7.org/CodeSystem/communication-not-done-reason",
    },
    /**
     * unknown: The communication was not done due to an unknown reason.
     */
    Unknown: {
        display: "Unknown",
        code: "unknown",
        system: "http://terminology.hl7.org/CodeSystem/communication-not-done-reason",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29tbXVuaWNhdGlvbk5vdERvbmVSZWFzb25Db2RpbmdzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9Db21tdW5pY2F0aW9uTm90RG9uZVJlYXNvbkNvZGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLCtDQUErQztBQUMvQyxrQ0FBa0M7QUFDbEMsa0ZBQWtGO0FBa0NsRjs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLGlDQUFpQyxHQUF3QztJQUNwRjs7T0FFRztJQUNILGVBQWUsRUFBRTtRQUNmLE9BQU8sRUFBRSxrQkFBa0I7UUFDM0IsSUFBSSxFQUFFLGtCQUFrQjtRQUN4QixNQUFNLEVBQUUscUVBQXFFO0tBQzlFO0lBQ0Q7O09BRUc7SUFDSCxrQkFBa0IsRUFBRTtRQUNsQixPQUFPLEVBQUUsc0JBQXNCO1FBQy9CLElBQUksRUFBRSxzQkFBc0I7UUFDNUIsTUFBTSxFQUFFLHFFQUFxRTtLQUM5RTtJQUNEOztPQUVHO0lBQ0gsZ0JBQWdCLEVBQUU7UUFDaEIsT0FBTyxFQUFFLG1CQUFtQjtRQUM1QixJQUFJLEVBQUUsbUJBQW1CO1FBQ3pCLE1BQU0sRUFBRSxxRUFBcUU7S0FDOUU7SUFDRDs7T0FFRztJQUNILG9CQUFvQixFQUFFO1FBQ3BCLE9BQU8sRUFBRSx1QkFBdUI7UUFDaEMsSUFBSSxFQUFFLHVCQUF1QjtRQUM3QixNQUFNLEVBQUUscUVBQXFFO0tBQzlFO0lBQ0Q7O09BRUc7SUFDSCxXQUFXLEVBQUU7UUFDWCxPQUFPLEVBQUUsY0FBYztRQUN2QixJQUFJLEVBQUUsY0FBYztRQUNwQixNQUFNLEVBQUUscUVBQXFFO0tBQzlFO0lBQ0Q7O09BRUc7SUFDSCxPQUFPLEVBQUU7UUFDUCxPQUFPLEVBQUUsU0FBUztRQUNsQixJQUFJLEVBQUUsU0FBUztRQUNmLE1BQU0sRUFBRSxxRUFBcUU7S0FDOUU7Q0FDTyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0LmNvcmUgdmVyc2lvbjogNC4wLjFcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L2NvbW11bmljYXRpb24tbm90LWRvbmUtcmVhc29ufDQuMC4xXHJcblxyXG5pbXBvcnQgeyBDb2RpbmdBcmdzIH0gZnJvbSAnLi4vZmhpci9Db2RpbmcuanMnXHJcblxyXG4vKipcclxuICogQ29kZXMgZm9yIHRoZSByZWFzb24gd2h5IGEgY29tbXVuaWNhdGlvbiBkaWQgbm90IGhhcHBlbi5cclxuICovXHJcbmV4cG9ydCB0eXBlIENvbW11bmljYXRpb25Ob3REb25lUmVhc29uQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBmYW1pbHktb2JqZWN0aW9uOiBUaGUgY29tbXVuaWNhdGlvbiB3YXMgbm90IGRvbmUgZHVlIHRvIGEgZmFtaWx5IG9iamVjdGlvbi5cclxuICAgKi9cclxuICBGYW1pbHlPYmplY3Rpb246IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogaW52YWxpZC1waG9uZS1udW1iZXI6IFRoZSBjb21tdW5pY2F0aW9uIHdhcyBub3QgZG9uZSBkdWUgdG8gYW4gaW52YWxpZCBwaG9uZSBudW1iZXIuXHJcbiAgICovXHJcbiAgSW52YWxpZFBob25lTnVtYmVyOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIHBhdGllbnQtb2JqZWN0aW9uOiBUaGUgY29tbXVuaWNhdGlvbiB3YXMgbm90IGRvbmUgZHVlIHRvIGEgcGF0aWVudCBvYmplY3Rpb24uXHJcbiAgICovXHJcbiAgUGF0aWVudE9iamVjdGlvbjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiByZWNpcGllbnQtdW5hdmFpbGFibGU6IFRoZSBjb21tdW5pY2F0aW9uIHdhcyBub3QgZG9uZSBkdWUgdG8gdGhlIHJlY2lwaWVudCBiZWluZyB1bmF2YWlsYWJsZS5cclxuICAgKi9cclxuICBSZWNpcGllbnRVbmF2YWlsYWJsZTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBzeXN0ZW0tZXJyb3I6IFRoZSBjb21tdW5pY2F0aW9uIHdhcyBub3QgZG9uZSBkdWUgdG8gYSBzeXN0ZW0gZXJyb3IuXHJcbiAgICovXHJcbiAgU3lzdGVtRXJyb3I6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogdW5rbm93bjogVGhlIGNvbW11bmljYXRpb24gd2FzIG5vdCBkb25lIGR1ZSB0byBhbiB1bmtub3duIHJlYXNvbi5cclxuICAgKi9cclxuICBVbmtub3duOiBDb2RpbmdBcmdzO1xyXG59XHJcblxyXG4vKipcclxuICogQ29kZXMgZm9yIHRoZSByZWFzb24gd2h5IGEgY29tbXVuaWNhdGlvbiBkaWQgbm90IGhhcHBlbi5cclxuICovXHJcbmV4cG9ydCBjb25zdCBDb21tdW5pY2F0aW9uTm90RG9uZVJlYXNvbkNvZGluZ3M6Q29tbXVuaWNhdGlvbk5vdERvbmVSZWFzb25Db2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIGZhbWlseS1vYmplY3Rpb246IFRoZSBjb21tdW5pY2F0aW9uIHdhcyBub3QgZG9uZSBkdWUgdG8gYSBmYW1pbHkgb2JqZWN0aW9uLlxyXG4gICAqL1xyXG4gIEZhbWlseU9iamVjdGlvbjoge1xyXG4gICAgZGlzcGxheTogXCJGYW1pbHkgT2JqZWN0aW9uXCIsXHJcbiAgICBjb2RlOiBcImZhbWlseS1vYmplY3Rpb25cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2NvbW11bmljYXRpb24tbm90LWRvbmUtcmVhc29uXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBpbnZhbGlkLXBob25lLW51bWJlcjogVGhlIGNvbW11bmljYXRpb24gd2FzIG5vdCBkb25lIGR1ZSB0byBhbiBpbnZhbGlkIHBob25lIG51bWJlci5cclxuICAgKi9cclxuICBJbnZhbGlkUGhvbmVOdW1iZXI6IHtcclxuICAgIGRpc3BsYXk6IFwiSW52YWxpZCBQaG9uZSBOdW1iZXJcIixcclxuICAgIGNvZGU6IFwiaW52YWxpZC1waG9uZS1udW1iZXJcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2NvbW11bmljYXRpb24tbm90LWRvbmUtcmVhc29uXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBwYXRpZW50LW9iamVjdGlvbjogVGhlIGNvbW11bmljYXRpb24gd2FzIG5vdCBkb25lIGR1ZSB0byBhIHBhdGllbnQgb2JqZWN0aW9uLlxyXG4gICAqL1xyXG4gIFBhdGllbnRPYmplY3Rpb246IHtcclxuICAgIGRpc3BsYXk6IFwiUGF0aWVudCBPYmplY3Rpb25cIixcclxuICAgIGNvZGU6IFwicGF0aWVudC1vYmplY3Rpb25cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2NvbW11bmljYXRpb24tbm90LWRvbmUtcmVhc29uXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiByZWNpcGllbnQtdW5hdmFpbGFibGU6IFRoZSBjb21tdW5pY2F0aW9uIHdhcyBub3QgZG9uZSBkdWUgdG8gdGhlIHJlY2lwaWVudCBiZWluZyB1bmF2YWlsYWJsZS5cclxuICAgKi9cclxuICBSZWNpcGllbnRVbmF2YWlsYWJsZToge1xyXG4gICAgZGlzcGxheTogXCJSZWNpcGllbnQgVW5hdmFpbGFibGVcIixcclxuICAgIGNvZGU6IFwicmVjaXBpZW50LXVuYXZhaWxhYmxlXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9jb21tdW5pY2F0aW9uLW5vdC1kb25lLXJlYXNvblwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogc3lzdGVtLWVycm9yOiBUaGUgY29tbXVuaWNhdGlvbiB3YXMgbm90IGRvbmUgZHVlIHRvIGEgc3lzdGVtIGVycm9yLlxyXG4gICAqL1xyXG4gIFN5c3RlbUVycm9yOiB7XHJcbiAgICBkaXNwbGF5OiBcIlN5c3RlbSBFcnJvclwiLFxyXG4gICAgY29kZTogXCJzeXN0ZW0tZXJyb3JcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2NvbW11bmljYXRpb24tbm90LWRvbmUtcmVhc29uXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiB1bmtub3duOiBUaGUgY29tbXVuaWNhdGlvbiB3YXMgbm90IGRvbmUgZHVlIHRvIGFuIHVua25vd24gcmVhc29uLlxyXG4gICAqL1xyXG4gIFVua25vd246IHtcclxuICAgIGRpc3BsYXk6IFwiVW5rbm93blwiLFxyXG4gICAgY29kZTogXCJ1bmtub3duXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9jb21tdW5pY2F0aW9uLW5vdC1kb25lLXJlYXNvblwiLFxyXG4gIH0sXHJcbn0gYXMgY29uc3Q7XHJcbiJdfQ==