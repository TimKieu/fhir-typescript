{"version":3,"file":"ItemTypeCodings.js","sources":["../../src/fhirValueSets/ItemTypeCodings.ts"],"sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4.core version: 4.0.1\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR ValueSet: http://hl7.org/fhir/ValueSet/item-type|4.0.1\r\n\r\nimport { Coding } from '../fhir/Coding.js'\r\n\r\n/**\r\n * Distinguishes groups from questions and display text and indicates data type for questions.\r\n */\r\nexport const ItemTypeCodings = {\r\n  /**\r\n   * attachment: Question with binary content such as an image, PDF, etc. as an answer (valueAttachment).\r\n   */\r\n  Attachment: new Coding({\r\n    display: \"Attachment\",\r\n    code: \"attachment\",\r\n    system: \"http://hl7.org/fhir/item-type\",\r\n  }),\r\n  /**\r\n   * boolean: Question with a yes/no answer (valueBoolean).\r\n   */\r\n  Boolean: new Coding({\r\n    display: \"Boolean\",\r\n    code: \"boolean\",\r\n    system: \"http://hl7.org/fhir/item-type\",\r\n  }),\r\n  /**\r\n   * choice: Question with a Coding drawn from a list of possible answers (specified in either the answerOption property, or via the valueset referenced in the answerValueSet property) as an answer (valueCoding).\r\n   */\r\n  Choice: new Coding({\r\n    display: \"Choice\",\r\n    code: \"choice\",\r\n    system: \"http://hl7.org/fhir/item-type\",\r\n  }),\r\n  /**\r\n   * date: Question with a date answer (valueDate).\r\n   */\r\n  Date: new Coding({\r\n    display: \"Date\",\r\n    code: \"date\",\r\n    system: \"http://hl7.org/fhir/item-type\",\r\n  }),\r\n  /**\r\n   * dateTime: Question with a date and time answer (valueDateTime).\r\n   */\r\n  DateTime: new Coding({\r\n    display: \"Date Time\",\r\n    code: \"dateTime\",\r\n    system: \"http://hl7.org/fhir/item-type\",\r\n  }),\r\n  /**\r\n   * decimal: Question with is a real number answer (valueDecimal).\r\n   */\r\n  Decimal: new Coding({\r\n    display: \"Decimal\",\r\n    code: \"decimal\",\r\n    system: \"http://hl7.org/fhir/item-type\",\r\n  }),\r\n  /**\r\n   * display: Text for display that will not capture an answer or have child items.\r\n   */\r\n  Display: new Coding({\r\n    display: \"Display\",\r\n    code: \"display\",\r\n    system: \"http://hl7.org/fhir/item-type\",\r\n  }),\r\n  /**\r\n   * group: An item with no direct answer but should have at least one child item.\r\n   */\r\n  Group: new Coding({\r\n    display: \"Group\",\r\n    code: \"group\",\r\n    system: \"http://hl7.org/fhir/item-type\",\r\n  }),\r\n  /**\r\n   * integer: Question with an integer answer (valueInteger).\r\n   */\r\n  Integer: new Coding({\r\n    display: \"Integer\",\r\n    code: \"integer\",\r\n    system: \"http://hl7.org/fhir/item-type\",\r\n  }),\r\n  /**\r\n   * open-choice: Answer is a Coding drawn from a list of possible answers (as with the choice type) or a free-text entry in a string (valueCoding or valueString).\r\n   */\r\n  OpenChoice: new Coding({\r\n    display: \"Open Choice\",\r\n    code: \"open-choice\",\r\n    system: \"http://hl7.org/fhir/item-type\",\r\n  }),\r\n  /**\r\n   * quantity: Question with a combination of a numeric value and unit, potentially with a comparator (&lt;, &gt;, etc.) as an answer. (valueQuantity) There is an extension 'http://hl7.org/fhir/StructureDefinition/questionnaire-unit' that can be used to define what unit should be captured (or the unit that has a ucum conversion from the provided unit).\r\n   */\r\n  Quantity: new Coding({\r\n    display: \"Quantity\",\r\n    code: \"quantity\",\r\n    system: \"http://hl7.org/fhir/item-type\",\r\n  }),\r\n  /**\r\n   * question: An item that defines a specific answer to be captured, and which may have child items. (the answer provided in the QuestionnaireResponse should be of the defined datatype).\r\n   */\r\n  Question: new Coding({\r\n    display: \"Question\",\r\n    code: \"question\",\r\n    system: \"http://hl7.org/fhir/item-type\",\r\n  }),\r\n  /**\r\n   * reference: Question with a reference to another resource (practitioner, organization, etc.) as an answer (valueReference).\r\n   */\r\n  Reference: new Coding({\r\n    display: \"Reference\",\r\n    code: \"reference\",\r\n    system: \"http://hl7.org/fhir/item-type\",\r\n  }),\r\n  /**\r\n   * string: Question with a short (few words to short sentence) free-text entry answer (valueString).\r\n   */\r\n  String: new Coding({\r\n    display: \"String\",\r\n    code: \"string\",\r\n    system: \"http://hl7.org/fhir/item-type\",\r\n  }),\r\n  /**\r\n   * text: Question with a long (potentially multi-paragraph) free-text entry answer (valueString).\r\n   */\r\n  Text: new Coding({\r\n    display: \"Text\",\r\n    code: \"text\",\r\n    system: \"http://hl7.org/fhir/item-type\",\r\n  }),\r\n  /**\r\n   * time: Question with a time (hour:minute:second) answer independent of date. (valueTime).\r\n   */\r\n  Time: new Coding({\r\n    display: \"Time\",\r\n    code: \"time\",\r\n    system: \"http://hl7.org/fhir/item-type\",\r\n  }),\r\n  /**\r\n   * url: Question with a URL (website, FTP site, etc.) answer (valueUri).\r\n   */\r\n  Url: new Coding({\r\n    display: \"Url\",\r\n    code: \"url\",\r\n    system: \"http://hl7.org/fhir/item-type\",\r\n  }),\r\n} as const;\r\n\r\n/**\r\n * Distinguishes groups from questions and display text and indicates data type for questions.\r\n */\r\nexport type ItemTypeCodingType = typeof ItemTypeCodings;\r\n"],"names":[],"mappings":"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"}