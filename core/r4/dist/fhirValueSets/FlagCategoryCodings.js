// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/flag-category|4.0.1
/**
 * Example list of general categories for flagged issues. (Not complete or necessarily appropriate.)
 */
export const FlagCategoryCodings = {
    /**
     * admin: Flags related to administrative and financial processes.
     */
    Administrative: {
        display: "Administrative",
        code: "admin",
        system: "http://terminology.hl7.org/CodeSystem/flag-category",
    },
    /**
     * advance-directive: Flags related to subject's advance directives.
     */
    AdvanceDirective: {
        display: "Advance Directive",
        code: "advance-directive",
        system: "http://terminology.hl7.org/CodeSystem/flag-category",
    },
    /**
     * behavioral: Flags related to behavior.
     */
    Behavioral: {
        display: "Behavioral",
        code: "behavioral",
        system: "http://terminology.hl7.org/CodeSystem/flag-category",
    },
    /**
     * clinical: Flags related to the subject's clinical data.
     */
    Clinical: {
        display: "Clinical",
        code: "clinical",
        system: "http://terminology.hl7.org/CodeSystem/flag-category",
    },
    /**
     * contact: Flags related to coming into contact with the patient.
     */
    SubjectContact: {
        display: "Subject Contact",
        code: "contact",
        system: "http://terminology.hl7.org/CodeSystem/flag-category",
    },
    /**
     * diet: Flags related to the subject's dietary needs.
     */
    Diet: {
        display: "Diet",
        code: "diet",
        system: "http://terminology.hl7.org/CodeSystem/flag-category",
    },
    /**
     * drug: Flags related to the subject's medications.
     */
    Drug: {
        display: "Drug",
        code: "drug",
        system: "http://terminology.hl7.org/CodeSystem/flag-category",
    },
    /**
     * lab: Flags related to performing laboratory tests and related processes (e.g. phlebotomy).
     */
    Lab: {
        display: "Lab",
        code: "lab",
        system: "http://terminology.hl7.org/CodeSystem/flag-category",
    },
    /**
     * research: Flags related to research.
     */
    Research: {
        display: "Research",
        code: "research",
        system: "http://terminology.hl7.org/CodeSystem/flag-category",
    },
    /**
     * safety: Flags related to safety precautions.
     */
    Safety: {
        display: "Safety",
        code: "safety",
        system: "http://terminology.hl7.org/CodeSystem/flag-category",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRmxhZ0NhdGVnb3J5Q29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvRmxhZ0NhdGVnb3J5Q29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyxrRUFBa0U7QUFrRGxFOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sbUJBQW1CLEdBQTBCO0lBQ3hEOztPQUVHO0lBQ0gsY0FBYyxFQUFFO1FBQ2QsT0FBTyxFQUFFLGdCQUFnQjtRQUN6QixJQUFJLEVBQUUsT0FBTztRQUNiLE1BQU0sRUFBRSxxREFBcUQ7S0FDOUQ7SUFDRDs7T0FFRztJQUNILGdCQUFnQixFQUFFO1FBQ2hCLE9BQU8sRUFBRSxtQkFBbUI7UUFDNUIsSUFBSSxFQUFFLG1CQUFtQjtRQUN6QixNQUFNLEVBQUUscURBQXFEO0tBQzlEO0lBQ0Q7O09BRUc7SUFDSCxVQUFVLEVBQUU7UUFDVixPQUFPLEVBQUUsWUFBWTtRQUNyQixJQUFJLEVBQUUsWUFBWTtRQUNsQixNQUFNLEVBQUUscURBQXFEO0tBQzlEO0lBQ0Q7O09BRUc7SUFDSCxRQUFRLEVBQUU7UUFDUixPQUFPLEVBQUUsVUFBVTtRQUNuQixJQUFJLEVBQUUsVUFBVTtRQUNoQixNQUFNLEVBQUUscURBQXFEO0tBQzlEO0lBQ0Q7O09BRUc7SUFDSCxjQUFjLEVBQUU7UUFDZCxPQUFPLEVBQUUsaUJBQWlCO1FBQzFCLElBQUksRUFBRSxTQUFTO1FBQ2YsTUFBTSxFQUFFLHFEQUFxRDtLQUM5RDtJQUNEOztPQUVHO0lBQ0gsSUFBSSxFQUFFO1FBQ0osT0FBTyxFQUFFLE1BQU07UUFDZixJQUFJLEVBQUUsTUFBTTtRQUNaLE1BQU0sRUFBRSxxREFBcUQ7S0FDOUQ7SUFDRDs7T0FFRztJQUNILElBQUksRUFBRTtRQUNKLE9BQU8sRUFBRSxNQUFNO1FBQ2YsSUFBSSxFQUFFLE1BQU07UUFDWixNQUFNLEVBQUUscURBQXFEO0tBQzlEO0lBQ0Q7O09BRUc7SUFDSCxHQUFHLEVBQUU7UUFDSCxPQUFPLEVBQUUsS0FBSztRQUNkLElBQUksRUFBRSxLQUFLO1FBQ1gsTUFBTSxFQUFFLHFEQUFxRDtLQUM5RDtJQUNEOztPQUVHO0lBQ0gsUUFBUSxFQUFFO1FBQ1IsT0FBTyxFQUFFLFVBQVU7UUFDbkIsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLHFEQUFxRDtLQUM5RDtJQUNEOztPQUVHO0lBQ0gsTUFBTSxFQUFFO1FBQ04sT0FBTyxFQUFFLFFBQVE7UUFDakIsSUFBSSxFQUFFLFFBQVE7UUFDZCxNQUFNLEVBQUUscURBQXFEO0tBQzlEO0NBQ08sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNC5jb3JlIHZlcnNpb246IDQuMC4xXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9mbGFnLWNhdGVnb3J5fDQuMC4xXHJcblxyXG5pbXBvcnQgeyBDb2RpbmdBcmdzIH0gZnJvbSAnLi4vZmhpci9Db2RpbmcuanMnXHJcblxyXG4vKipcclxuICogRXhhbXBsZSBsaXN0IG9mIGdlbmVyYWwgY2F0ZWdvcmllcyBmb3IgZmxhZ2dlZCBpc3N1ZXMuIChOb3QgY29tcGxldGUgb3IgbmVjZXNzYXJpbHkgYXBwcm9wcmlhdGUuKVxyXG4gKi9cclxuZXhwb3J0IHR5cGUgRmxhZ0NhdGVnb3J5Q29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBhZG1pbjogRmxhZ3MgcmVsYXRlZCB0byBhZG1pbmlzdHJhdGl2ZSBhbmQgZmluYW5jaWFsIHByb2Nlc3Nlcy5cclxuICAgKi9cclxuICBBZG1pbmlzdHJhdGl2ZTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBhZHZhbmNlLWRpcmVjdGl2ZTogRmxhZ3MgcmVsYXRlZCB0byBzdWJqZWN0J3MgYWR2YW5jZSBkaXJlY3RpdmVzLlxyXG4gICAqL1xyXG4gIEFkdmFuY2VEaXJlY3RpdmU6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogYmVoYXZpb3JhbDogRmxhZ3MgcmVsYXRlZCB0byBiZWhhdmlvci5cclxuICAgKi9cclxuICBCZWhhdmlvcmFsOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIGNsaW5pY2FsOiBGbGFncyByZWxhdGVkIHRvIHRoZSBzdWJqZWN0J3MgY2xpbmljYWwgZGF0YS5cclxuICAgKi9cclxuICBDbGluaWNhbDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBjb250YWN0OiBGbGFncyByZWxhdGVkIHRvIGNvbWluZyBpbnRvIGNvbnRhY3Qgd2l0aCB0aGUgcGF0aWVudC5cclxuICAgKi9cclxuICBTdWJqZWN0Q29udGFjdDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBkaWV0OiBGbGFncyByZWxhdGVkIHRvIHRoZSBzdWJqZWN0J3MgZGlldGFyeSBuZWVkcy5cclxuICAgKi9cclxuICBEaWV0OiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIGRydWc6IEZsYWdzIHJlbGF0ZWQgdG8gdGhlIHN1YmplY3QncyBtZWRpY2F0aW9ucy5cclxuICAgKi9cclxuICBEcnVnOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIGxhYjogRmxhZ3MgcmVsYXRlZCB0byBwZXJmb3JtaW5nIGxhYm9yYXRvcnkgdGVzdHMgYW5kIHJlbGF0ZWQgcHJvY2Vzc2VzIChlLmcuIHBobGVib3RvbXkpLlxyXG4gICAqL1xyXG4gIExhYjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiByZXNlYXJjaDogRmxhZ3MgcmVsYXRlZCB0byByZXNlYXJjaC5cclxuICAgKi9cclxuICBSZXNlYXJjaDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBzYWZldHk6IEZsYWdzIHJlbGF0ZWQgdG8gc2FmZXR5IHByZWNhdXRpb25zLlxyXG4gICAqL1xyXG4gIFNhZmV0eTogQ29kaW5nQXJncztcclxufVxyXG5cclxuLyoqXHJcbiAqIEV4YW1wbGUgbGlzdCBvZiBnZW5lcmFsIGNhdGVnb3JpZXMgZm9yIGZsYWdnZWQgaXNzdWVzLiAoTm90IGNvbXBsZXRlIG9yIG5lY2Vzc2FyaWx5IGFwcHJvcHJpYXRlLilcclxuICovXHJcbmV4cG9ydCBjb25zdCBGbGFnQ2F0ZWdvcnlDb2RpbmdzOkZsYWdDYXRlZ29yeUNvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogYWRtaW46IEZsYWdzIHJlbGF0ZWQgdG8gYWRtaW5pc3RyYXRpdmUgYW5kIGZpbmFuY2lhbCBwcm9jZXNzZXMuXHJcbiAgICovXHJcbiAgQWRtaW5pc3RyYXRpdmU6IHtcclxuICAgIGRpc3BsYXk6IFwiQWRtaW5pc3RyYXRpdmVcIixcclxuICAgIGNvZGU6IFwiYWRtaW5cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2ZsYWctY2F0ZWdvcnlcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIGFkdmFuY2UtZGlyZWN0aXZlOiBGbGFncyByZWxhdGVkIHRvIHN1YmplY3QncyBhZHZhbmNlIGRpcmVjdGl2ZXMuXHJcbiAgICovXHJcbiAgQWR2YW5jZURpcmVjdGl2ZToge1xyXG4gICAgZGlzcGxheTogXCJBZHZhbmNlIERpcmVjdGl2ZVwiLFxyXG4gICAgY29kZTogXCJhZHZhbmNlLWRpcmVjdGl2ZVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vZmxhZy1jYXRlZ29yeVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogYmVoYXZpb3JhbDogRmxhZ3MgcmVsYXRlZCB0byBiZWhhdmlvci5cclxuICAgKi9cclxuICBCZWhhdmlvcmFsOiB7XHJcbiAgICBkaXNwbGF5OiBcIkJlaGF2aW9yYWxcIixcclxuICAgIGNvZGU6IFwiYmVoYXZpb3JhbFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vZmxhZy1jYXRlZ29yeVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogY2xpbmljYWw6IEZsYWdzIHJlbGF0ZWQgdG8gdGhlIHN1YmplY3QncyBjbGluaWNhbCBkYXRhLlxyXG4gICAqL1xyXG4gIENsaW5pY2FsOiB7XHJcbiAgICBkaXNwbGF5OiBcIkNsaW5pY2FsXCIsXHJcbiAgICBjb2RlOiBcImNsaW5pY2FsXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9mbGFnLWNhdGVnb3J5XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBjb250YWN0OiBGbGFncyByZWxhdGVkIHRvIGNvbWluZyBpbnRvIGNvbnRhY3Qgd2l0aCB0aGUgcGF0aWVudC5cclxuICAgKi9cclxuICBTdWJqZWN0Q29udGFjdDoge1xyXG4gICAgZGlzcGxheTogXCJTdWJqZWN0IENvbnRhY3RcIixcclxuICAgIGNvZGU6IFwiY29udGFjdFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vZmxhZy1jYXRlZ29yeVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogZGlldDogRmxhZ3MgcmVsYXRlZCB0byB0aGUgc3ViamVjdCdzIGRpZXRhcnkgbmVlZHMuXHJcbiAgICovXHJcbiAgRGlldDoge1xyXG4gICAgZGlzcGxheTogXCJEaWV0XCIsXHJcbiAgICBjb2RlOiBcImRpZXRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2ZsYWctY2F0ZWdvcnlcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIGRydWc6IEZsYWdzIHJlbGF0ZWQgdG8gdGhlIHN1YmplY3QncyBtZWRpY2F0aW9ucy5cclxuICAgKi9cclxuICBEcnVnOiB7XHJcbiAgICBkaXNwbGF5OiBcIkRydWdcIixcclxuICAgIGNvZGU6IFwiZHJ1Z1wiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vZmxhZy1jYXRlZ29yeVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogbGFiOiBGbGFncyByZWxhdGVkIHRvIHBlcmZvcm1pbmcgbGFib3JhdG9yeSB0ZXN0cyBhbmQgcmVsYXRlZCBwcm9jZXNzZXMgKGUuZy4gcGhsZWJvdG9teSkuXHJcbiAgICovXHJcbiAgTGFiOiB7XHJcbiAgICBkaXNwbGF5OiBcIkxhYlwiLFxyXG4gICAgY29kZTogXCJsYWJcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2ZsYWctY2F0ZWdvcnlcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIHJlc2VhcmNoOiBGbGFncyByZWxhdGVkIHRvIHJlc2VhcmNoLlxyXG4gICAqL1xyXG4gIFJlc2VhcmNoOiB7XHJcbiAgICBkaXNwbGF5OiBcIlJlc2VhcmNoXCIsXHJcbiAgICBjb2RlOiBcInJlc2VhcmNoXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9mbGFnLWNhdGVnb3J5XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBzYWZldHk6IEZsYWdzIHJlbGF0ZWQgdG8gc2FmZXR5IHByZWNhdXRpb25zLlxyXG4gICAqL1xyXG4gIFNhZmV0eToge1xyXG4gICAgZGlzcGxheTogXCJTYWZldHlcIixcclxuICAgIGNvZGU6IFwic2FmZXR5XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9mbGFnLWNhdGVnb3J5XCIsXHJcbiAgfSxcclxufSBhcyBjb25zdDtcclxuIl19