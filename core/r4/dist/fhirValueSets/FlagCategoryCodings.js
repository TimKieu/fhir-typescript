// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/flag-category|4.0.1
import { Coding } from '../fhir/Coding.js';
/**
 * Example list of general categories for flagged issues. (Not complete or necessarily appropriate.)
 */
export const FlagCategoryCodings = {
    /**
     * admin: Flags related to administrative and financial processes.
     */
    Administrative: new Coding({
        display: "Administrative",
        code: "admin",
        system: "http://terminology.hl7.org/CodeSystem/flag-category",
    }),
    /**
     * advance-directive: Flags related to subject's advance directives.
     */
    AdvanceDirective: new Coding({
        display: "Advance Directive",
        code: "advance-directive",
        system: "http://terminology.hl7.org/CodeSystem/flag-category",
    }),
    /**
     * behavioral: Flags related to behavior.
     */
    Behavioral: new Coding({
        display: "Behavioral",
        code: "behavioral",
        system: "http://terminology.hl7.org/CodeSystem/flag-category",
    }),
    /**
     * clinical: Flags related to the subject's clinical data.
     */
    Clinical: new Coding({
        display: "Clinical",
        code: "clinical",
        system: "http://terminology.hl7.org/CodeSystem/flag-category",
    }),
    /**
     * contact: Flags related to coming into contact with the patient.
     */
    SubjectContact: new Coding({
        display: "Subject Contact",
        code: "contact",
        system: "http://terminology.hl7.org/CodeSystem/flag-category",
    }),
    /**
     * diet: Flags related to the subject's dietary needs.
     */
    Diet: new Coding({
        display: "Diet",
        code: "diet",
        system: "http://terminology.hl7.org/CodeSystem/flag-category",
    }),
    /**
     * drug: Flags related to the subject's medications.
     */
    Drug: new Coding({
        display: "Drug",
        code: "drug",
        system: "http://terminology.hl7.org/CodeSystem/flag-category",
    }),
    /**
     * lab: Flags related to performing laboratory tests and related processes (e.g. phlebotomy).
     */
    Lab: new Coding({
        display: "Lab",
        code: "lab",
        system: "http://terminology.hl7.org/CodeSystem/flag-category",
    }),
    /**
     * research: Flags related to research.
     */
    Research: new Coding({
        display: "Research",
        code: "research",
        system: "http://terminology.hl7.org/CodeSystem/flag-category",
    }),
    /**
     * safety: Flags related to safety precautions.
     */
    Safety: new Coding({
        display: "Safety",
        code: "safety",
        system: "http://terminology.hl7.org/CodeSystem/flag-category",
    }),
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRmxhZ0NhdGVnb3J5Q29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvRmxhZ0NhdGVnb3J5Q29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyxrRUFBa0U7QUFFbEUsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLG1CQUFtQixDQUFBO0FBRTFDOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sbUJBQW1CLEdBQUc7SUFDakM7O09BRUc7SUFDSCxjQUFjLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDekIsT0FBTyxFQUFFLGdCQUFnQjtRQUN6QixJQUFJLEVBQUUsT0FBTztRQUNiLE1BQU0sRUFBRSxxREFBcUQ7S0FDOUQsQ0FBQztJQUNGOztPQUVHO0lBQ0gsZ0JBQWdCLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDM0IsT0FBTyxFQUFFLG1CQUFtQjtRQUM1QixJQUFJLEVBQUUsbUJBQW1CO1FBQ3pCLE1BQU0sRUFBRSxxREFBcUQ7S0FDOUQsQ0FBQztJQUNGOztPQUVHO0lBQ0gsVUFBVSxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ3JCLE9BQU8sRUFBRSxZQUFZO1FBQ3JCLElBQUksRUFBRSxZQUFZO1FBQ2xCLE1BQU0sRUFBRSxxREFBcUQ7S0FDOUQsQ0FBQztJQUNGOztPQUVHO0lBQ0gsUUFBUSxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ25CLE9BQU8sRUFBRSxVQUFVO1FBQ25CLElBQUksRUFBRSxVQUFVO1FBQ2hCLE1BQU0sRUFBRSxxREFBcUQ7S0FDOUQsQ0FBQztJQUNGOztPQUVHO0lBQ0gsY0FBYyxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ3pCLE9BQU8sRUFBRSxpQkFBaUI7UUFDMUIsSUFBSSxFQUFFLFNBQVM7UUFDZixNQUFNLEVBQUUscURBQXFEO0tBQzlELENBQUM7SUFDRjs7T0FFRztJQUNILElBQUksRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUNmLE9BQU8sRUFBRSxNQUFNO1FBQ2YsSUFBSSxFQUFFLE1BQU07UUFDWixNQUFNLEVBQUUscURBQXFEO0tBQzlELENBQUM7SUFDRjs7T0FFRztJQUNILElBQUksRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUNmLE9BQU8sRUFBRSxNQUFNO1FBQ2YsSUFBSSxFQUFFLE1BQU07UUFDWixNQUFNLEVBQUUscURBQXFEO0tBQzlELENBQUM7SUFDRjs7T0FFRztJQUNILEdBQUcsRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUNkLE9BQU8sRUFBRSxLQUFLO1FBQ2QsSUFBSSxFQUFFLEtBQUs7UUFDWCxNQUFNLEVBQUUscURBQXFEO0tBQzlELENBQUM7SUFDRjs7T0FFRztJQUNILFFBQVEsRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUNuQixPQUFPLEVBQUUsVUFBVTtRQUNuQixJQUFJLEVBQUUsVUFBVTtRQUNoQixNQUFNLEVBQUUscURBQXFEO0tBQzlELENBQUM7SUFDRjs7T0FFRztJQUNILE1BQU0sRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUNqQixPQUFPLEVBQUUsUUFBUTtRQUNqQixJQUFJLEVBQUUsUUFBUTtRQUNkLE1BQU0sRUFBRSxxREFBcUQ7S0FDOUQsQ0FBQztDQUNNLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjQuY29yZSB2ZXJzaW9uOiA0LjAuMVxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvZmxhZy1jYXRlZ29yeXw0LjAuMVxyXG5cclxuaW1wb3J0IHsgQ29kaW5nIH0gZnJvbSAnLi4vZmhpci9Db2RpbmcuanMnXHJcblxyXG4vKipcclxuICogRXhhbXBsZSBsaXN0IG9mIGdlbmVyYWwgY2F0ZWdvcmllcyBmb3IgZmxhZ2dlZCBpc3N1ZXMuIChOb3QgY29tcGxldGUgb3IgbmVjZXNzYXJpbHkgYXBwcm9wcmlhdGUuKVxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IEZsYWdDYXRlZ29yeUNvZGluZ3MgPSB7XHJcbiAgLyoqXHJcbiAgICogYWRtaW46IEZsYWdzIHJlbGF0ZWQgdG8gYWRtaW5pc3RyYXRpdmUgYW5kIGZpbmFuY2lhbCBwcm9jZXNzZXMuXHJcbiAgICovXHJcbiAgQWRtaW5pc3RyYXRpdmU6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJBZG1pbmlzdHJhdGl2ZVwiLFxyXG4gICAgY29kZTogXCJhZG1pblwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vZmxhZy1jYXRlZ29yeVwiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIGFkdmFuY2UtZGlyZWN0aXZlOiBGbGFncyByZWxhdGVkIHRvIHN1YmplY3QncyBhZHZhbmNlIGRpcmVjdGl2ZXMuXHJcbiAgICovXHJcbiAgQWR2YW5jZURpcmVjdGl2ZTogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIkFkdmFuY2UgRGlyZWN0aXZlXCIsXHJcbiAgICBjb2RlOiBcImFkdmFuY2UtZGlyZWN0aXZlXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9mbGFnLWNhdGVnb3J5XCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogYmVoYXZpb3JhbDogRmxhZ3MgcmVsYXRlZCB0byBiZWhhdmlvci5cclxuICAgKi9cclxuICBCZWhhdmlvcmFsOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiQmVoYXZpb3JhbFwiLFxyXG4gICAgY29kZTogXCJiZWhhdmlvcmFsXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9mbGFnLWNhdGVnb3J5XCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogY2xpbmljYWw6IEZsYWdzIHJlbGF0ZWQgdG8gdGhlIHN1YmplY3QncyBjbGluaWNhbCBkYXRhLlxyXG4gICAqL1xyXG4gIENsaW5pY2FsOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiQ2xpbmljYWxcIixcclxuICAgIGNvZGU6IFwiY2xpbmljYWxcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2ZsYWctY2F0ZWdvcnlcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBjb250YWN0OiBGbGFncyByZWxhdGVkIHRvIGNvbWluZyBpbnRvIGNvbnRhY3Qgd2l0aCB0aGUgcGF0aWVudC5cclxuICAgKi9cclxuICBTdWJqZWN0Q29udGFjdDogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIlN1YmplY3QgQ29udGFjdFwiLFxyXG4gICAgY29kZTogXCJjb250YWN0XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9mbGFnLWNhdGVnb3J5XCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogZGlldDogRmxhZ3MgcmVsYXRlZCB0byB0aGUgc3ViamVjdCdzIGRpZXRhcnkgbmVlZHMuXHJcbiAgICovXHJcbiAgRGlldDogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIkRpZXRcIixcclxuICAgIGNvZGU6IFwiZGlldFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vZmxhZy1jYXRlZ29yeVwiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIGRydWc6IEZsYWdzIHJlbGF0ZWQgdG8gdGhlIHN1YmplY3QncyBtZWRpY2F0aW9ucy5cclxuICAgKi9cclxuICBEcnVnOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiRHJ1Z1wiLFxyXG4gICAgY29kZTogXCJkcnVnXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9mbGFnLWNhdGVnb3J5XCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogbGFiOiBGbGFncyByZWxhdGVkIHRvIHBlcmZvcm1pbmcgbGFib3JhdG9yeSB0ZXN0cyBhbmQgcmVsYXRlZCBwcm9jZXNzZXMgKGUuZy4gcGhsZWJvdG9teSkuXHJcbiAgICovXHJcbiAgTGFiOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiTGFiXCIsXHJcbiAgICBjb2RlOiBcImxhYlwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vZmxhZy1jYXRlZ29yeVwiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIHJlc2VhcmNoOiBGbGFncyByZWxhdGVkIHRvIHJlc2VhcmNoLlxyXG4gICAqL1xyXG4gIFJlc2VhcmNoOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiUmVzZWFyY2hcIixcclxuICAgIGNvZGU6IFwicmVzZWFyY2hcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2ZsYWctY2F0ZWdvcnlcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBzYWZldHk6IEZsYWdzIHJlbGF0ZWQgdG8gc2FmZXR5IHByZWNhdXRpb25zLlxyXG4gICAqL1xyXG4gIFNhZmV0eTogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIlNhZmV0eVwiLFxyXG4gICAgY29kZTogXCJzYWZldHlcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2ZsYWctY2F0ZWdvcnlcIixcclxuICB9KSxcclxufSBhcyBjb25zdDtcclxuXHJcbi8qKlxyXG4gKiBFeGFtcGxlIGxpc3Qgb2YgZ2VuZXJhbCBjYXRlZ29yaWVzIGZvciBmbGFnZ2VkIGlzc3Vlcy4gKE5vdCBjb21wbGV0ZSBvciBuZWNlc3NhcmlseSBhcHByb3ByaWF0ZS4pXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBGbGFnQ2F0ZWdvcnlDb2RpbmdUeXBlID0gdHlwZW9mIEZsYWdDYXRlZ29yeUNvZGluZ3M7XHJcbiJdfQ==