// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/diagnostic-service-sections|4.0.1
import { Coding } from '../fhir/Coding.js';
/**
 * This value set includes all the codes in HL7 V2 table 0074.
 */
export const DiagnosticServiceSectionsCodings = {
    /**
     * Code: AU
     */
    Audiology: new Coding({
        display: "Audiology",
        code: "AU",
        system: "http://terminology.hl7.org/CodeSystem/v2-0074",
    }),
    /**
     * Code: BG
     */
    BloodGases: new Coding({
        display: "Blood Gases",
        code: "BG",
        system: "http://terminology.hl7.org/CodeSystem/v2-0074",
    }),
    /**
     * Code: BLB
     */
    BloodBank: new Coding({
        display: "Blood Bank",
        code: "BLB",
        system: "http://terminology.hl7.org/CodeSystem/v2-0074",
    }),
    /**
     * Code: CG
     */
    Cytogenetics: new Coding({
        display: "Cytogenetics",
        code: "CG",
        system: "http://terminology.hl7.org/CodeSystem/v2-0074",
    }),
    /**
     * Code: CH
     */
    Chemistry: new Coding({
        display: "Chemistry",
        code: "CH",
        system: "http://terminology.hl7.org/CodeSystem/v2-0074",
    }),
    /**
     * Code: CP
     */
    Cytopathology: new Coding({
        display: "Cytopathology",
        code: "CP",
        system: "http://terminology.hl7.org/CodeSystem/v2-0074",
    }),
    /**
     * Code: CT
     */
    CATScan: new Coding({
        display: "CAT Scan",
        code: "CT",
        system: "http://terminology.hl7.org/CodeSystem/v2-0074",
    }),
    /**
     * Code: CTH
     */
    CardiacCatheterization: new Coding({
        display: "Cardiac Catheterization",
        code: "CTH",
        system: "http://terminology.hl7.org/CodeSystem/v2-0074",
    }),
    /**
     * Code: CUS
     */
    CardiacUltrasound: new Coding({
        display: "Cardiac Ultrasound",
        code: "CUS",
        system: "http://terminology.hl7.org/CodeSystem/v2-0074",
    }),
    /**
     * Code: EC
     */
    ElectrocardiacEGEKGEECHolter: new Coding({
        display: "Electrocardiac (e.g., EKG,  EEC, Holter)",
        code: "EC",
        system: "http://terminology.hl7.org/CodeSystem/v2-0074",
    }),
    /**
     * Code: EN
     */
    ElectroneuroEEGEMGEPPSG: new Coding({
        display: "Electroneuro (EEG, EMG,EP,PSG)",
        code: "EN",
        system: "http://terminology.hl7.org/CodeSystem/v2-0074",
    }),
    /**
     * Code: GE
     */
    Genetics: new Coding({
        display: "Genetics",
        code: "GE",
        system: "http://terminology.hl7.org/CodeSystem/v2-0074",
    }),
    /**
     * Code: HM
     */
    Hematology: new Coding({
        display: "Hematology",
        code: "HM",
        system: "http://terminology.hl7.org/CodeSystem/v2-0074",
    }),
    /**
     * Code: ICU
     */
    BedsideICUMonitoring: new Coding({
        display: "Bedside ICU Monitoring",
        code: "ICU",
        system: "http://terminology.hl7.org/CodeSystem/v2-0074",
    }),
    /**
     * Code: IMM
     */
    Immunology: new Coding({
        display: "Immunology",
        code: "IMM",
        system: "http://terminology.hl7.org/CodeSystem/v2-0074",
    }),
    /**
     * Code: LAB
     */
    Laboratory: new Coding({
        display: "Laboratory",
        code: "LAB",
        system: "http://terminology.hl7.org/CodeSystem/v2-0074",
    }),
    /**
     * Code: MB
     */
    Microbiology: new Coding({
        display: "Microbiology",
        code: "MB",
        system: "http://terminology.hl7.org/CodeSystem/v2-0074",
    }),
    /**
     * Code: MCB
     */
    Mycobacteriology: new Coding({
        display: "Mycobacteriology",
        code: "MCB",
        system: "http://terminology.hl7.org/CodeSystem/v2-0074",
    }),
    /**
     * Code: MYC
     */
    Mycology: new Coding({
        display: "Mycology",
        code: "MYC",
        system: "http://terminology.hl7.org/CodeSystem/v2-0074",
    }),
    /**
     * Code: NMR
     */
    NuclearMagneticResonance: new Coding({
        display: "Nuclear Magnetic Resonance",
        code: "NMR",
        system: "http://terminology.hl7.org/CodeSystem/v2-0074",
    }),
    /**
     * Code: NMS
     */
    NuclearMedicineScan: new Coding({
        display: "Nuclear Medicine Scan",
        code: "NMS",
        system: "http://terminology.hl7.org/CodeSystem/v2-0074",
    }),
    /**
     * Code: NRS
     */
    NursingServiceMeasures: new Coding({
        display: "Nursing Service Measures",
        code: "NRS",
        system: "http://terminology.hl7.org/CodeSystem/v2-0074",
    }),
    /**
     * Code: OSL
     */
    OutsideLab: new Coding({
        display: "Outside Lab",
        code: "OSL",
        system: "http://terminology.hl7.org/CodeSystem/v2-0074",
    }),
    /**
     * Code: OT
     */
    OccupationalTherapy: new Coding({
        display: "Occupational Therapy",
        code: "OT",
        system: "http://terminology.hl7.org/CodeSystem/v2-0074",
    }),
    /**
     * Code: OTH
     */
    Other: new Coding({
        display: "Other",
        code: "OTH",
        system: "http://terminology.hl7.org/CodeSystem/v2-0074",
    }),
    /**
     * Code: OUS
     */
    OBUltrasound: new Coding({
        display: "OB Ultrasound",
        code: "OUS",
        system: "http://terminology.hl7.org/CodeSystem/v2-0074",
    }),
    /**
     * Code: PF
     */
    PulmonaryFunction: new Coding({
        display: "Pulmonary Function",
        code: "PF",
        system: "http://terminology.hl7.org/CodeSystem/v2-0074",
    }),
    /**
     * Code: PHR
     */
    Pharmacy: new Coding({
        display: "Pharmacy",
        code: "PHR",
        system: "http://terminology.hl7.org/CodeSystem/v2-0074",
    }),
    /**
     * Code: PHY
     */
    PhysicianHxDxAdmissionNoteEtc: new Coding({
        display: "Physician (Hx. Dx, admission note, etc.)",
        code: "PHY",
        system: "http://terminology.hl7.org/CodeSystem/v2-0074",
    }),
    /**
     * Code: PT
     */
    PhysicalTherapy: new Coding({
        display: "Physical Therapy",
        code: "PT",
        system: "http://terminology.hl7.org/CodeSystem/v2-0074",
    }),
    /**
     * Code: RAD
     */
    Radiology: new Coding({
        display: "Radiology",
        code: "RAD",
        system: "http://terminology.hl7.org/CodeSystem/v2-0074",
    }),
    /**
     * Code: RC
     */
    RespiratoryCareTherapy: new Coding({
        display: "Respiratory Care (therapy)",
        code: "RC",
        system: "http://terminology.hl7.org/CodeSystem/v2-0074",
    }),
    /**
     * Code: RT
     */
    RadiationTherapy: new Coding({
        display: "Radiation Therapy",
        code: "RT",
        system: "http://terminology.hl7.org/CodeSystem/v2-0074",
    }),
    /**
     * Code: RUS
     */
    RadiologyUltrasound: new Coding({
        display: "Radiology Ultrasound",
        code: "RUS",
        system: "http://terminology.hl7.org/CodeSystem/v2-0074",
    }),
    /**
     * Code: RX
     */
    Radiograph: new Coding({
        display: "Radiograph",
        code: "RX",
        system: "http://terminology.hl7.org/CodeSystem/v2-0074",
    }),
    /**
     * Code: SP
     */
    SurgicalPathology: new Coding({
        display: "Surgical Pathology",
        code: "SP",
        system: "http://terminology.hl7.org/CodeSystem/v2-0074",
    }),
    /**
     * Code: SR
     */
    Serology: new Coding({
        display: "Serology",
        code: "SR",
        system: "http://terminology.hl7.org/CodeSystem/v2-0074",
    }),
    /**
     * Code: TX
     */
    Toxicology: new Coding({
        display: "Toxicology",
        code: "TX",
        system: "http://terminology.hl7.org/CodeSystem/v2-0074",
    }),
    /**
     * Code: VR
     */
    Virology: new Coding({
        display: "Virology",
        code: "VR",
        system: "http://terminology.hl7.org/CodeSystem/v2-0074",
    }),
    /**
     * Code: VUS
     */
    VascularUltrasound: new Coding({
        display: "Vascular Ultrasound",
        code: "VUS",
        system: "http://terminology.hl7.org/CodeSystem/v2-0074",
    }),
    /**
     * Code: XRC
     */
    Cineradiograph: new Coding({
        display: "Cineradiograph",
        code: "XRC",
        system: "http://terminology.hl7.org/CodeSystem/v2-0074",
    }),
};
//# sourceMappingURL=data:application/json;base64,