// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/conditional-read-status|4.0.1
import { Coding } from '../fhir/Coding.js';
/**
 * A code that indicates how the server supports conditional read.
 */
export const ConditionalReadStatusCodings = {
    /**
     * full-support: Conditional reads are supported, with both If-Modified-Since and If-None-Match HTTP Headers.
     */
    FullSupport: new Coding({
        display: "Full Support",
        code: "full-support",
        system: "http://hl7.org/fhir/conditional-read-status",
    }),
    /**
     * modified-since: Conditional reads are supported, but only with the If-Modified-Since HTTP Header.
     */
    IfModifiedSince: new Coding({
        display: "If-Modified-Since",
        code: "modified-since",
        system: "http://hl7.org/fhir/conditional-read-status",
    }),
    /**
     * not-match: Conditional reads are supported, but only with the If-None-Match HTTP Header.
     */
    IfNoneMatch: new Coding({
        display: "If-None-Match",
        code: "not-match",
        system: "http://hl7.org/fhir/conditional-read-status",
    }),
    /**
     * not-supported: No support for conditional reads.
     */
    NotSupported: new Coding({
        display: "Not Supported",
        code: "not-supported",
        system: "http://hl7.org/fhir/conditional-read-status",
    }),
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29uZGl0aW9uYWxSZWFkU3RhdHVzQ29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvQ29uZGl0aW9uYWxSZWFkU3RhdHVzQ29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyw0RUFBNEU7QUFFNUUsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLG1CQUFtQixDQUFBO0FBRTFDOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sNEJBQTRCLEdBQUc7SUFDMUM7O09BRUc7SUFDSCxXQUFXLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDdEIsT0FBTyxFQUFFLGNBQWM7UUFDdkIsSUFBSSxFQUFFLGNBQWM7UUFDcEIsTUFBTSxFQUFFLDZDQUE2QztLQUN0RCxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxlQUFlLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDMUIsT0FBTyxFQUFFLG1CQUFtQjtRQUM1QixJQUFJLEVBQUUsZ0JBQWdCO1FBQ3RCLE1BQU0sRUFBRSw2Q0FBNkM7S0FDdEQsQ0FBQztJQUNGOztPQUVHO0lBQ0gsV0FBVyxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ3RCLE9BQU8sRUFBRSxlQUFlO1FBQ3hCLElBQUksRUFBRSxXQUFXO1FBQ2pCLE1BQU0sRUFBRSw2Q0FBNkM7S0FDdEQsQ0FBQztJQUNGOztPQUVHO0lBQ0gsWUFBWSxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ3ZCLE9BQU8sRUFBRSxlQUFlO1FBQ3hCLElBQUksRUFBRSxlQUFlO1FBQ3JCLE1BQU0sRUFBRSw2Q0FBNkM7S0FDdEQsQ0FBQztDQUNNLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjQuY29yZSB2ZXJzaW9uOiA0LjAuMVxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvY29uZGl0aW9uYWwtcmVhZC1zdGF0dXN8NC4wLjFcclxuXHJcbmltcG9ydCB7IENvZGluZyB9IGZyb20gJy4uL2ZoaXIvQ29kaW5nLmpzJ1xyXG5cclxuLyoqXHJcbiAqIEEgY29kZSB0aGF0IGluZGljYXRlcyBob3cgdGhlIHNlcnZlciBzdXBwb3J0cyBjb25kaXRpb25hbCByZWFkLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IENvbmRpdGlvbmFsUmVhZFN0YXR1c0NvZGluZ3MgPSB7XHJcbiAgLyoqXHJcbiAgICogZnVsbC1zdXBwb3J0OiBDb25kaXRpb25hbCByZWFkcyBhcmUgc3VwcG9ydGVkLCB3aXRoIGJvdGggSWYtTW9kaWZpZWQtU2luY2UgYW5kIElmLU5vbmUtTWF0Y2ggSFRUUCBIZWFkZXJzLlxyXG4gICAqL1xyXG4gIEZ1bGxTdXBwb3J0OiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiRnVsbCBTdXBwb3J0XCIsXHJcbiAgICBjb2RlOiBcImZ1bGwtc3VwcG9ydFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvY29uZGl0aW9uYWwtcmVhZC1zdGF0dXNcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBtb2RpZmllZC1zaW5jZTogQ29uZGl0aW9uYWwgcmVhZHMgYXJlIHN1cHBvcnRlZCwgYnV0IG9ubHkgd2l0aCB0aGUgSWYtTW9kaWZpZWQtU2luY2UgSFRUUCBIZWFkZXIuXHJcbiAgICovXHJcbiAgSWZNb2RpZmllZFNpbmNlOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiSWYtTW9kaWZpZWQtU2luY2VcIixcclxuICAgIGNvZGU6IFwibW9kaWZpZWQtc2luY2VcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2NvbmRpdGlvbmFsLXJlYWQtc3RhdHVzXCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogbm90LW1hdGNoOiBDb25kaXRpb25hbCByZWFkcyBhcmUgc3VwcG9ydGVkLCBidXQgb25seSB3aXRoIHRoZSBJZi1Ob25lLU1hdGNoIEhUVFAgSGVhZGVyLlxyXG4gICAqL1xyXG4gIElmTm9uZU1hdGNoOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiSWYtTm9uZS1NYXRjaFwiLFxyXG4gICAgY29kZTogXCJub3QtbWF0Y2hcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2NvbmRpdGlvbmFsLXJlYWQtc3RhdHVzXCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogbm90LXN1cHBvcnRlZDogTm8gc3VwcG9ydCBmb3IgY29uZGl0aW9uYWwgcmVhZHMuXHJcbiAgICovXHJcbiAgTm90U3VwcG9ydGVkOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiTm90IFN1cHBvcnRlZFwiLFxyXG4gICAgY29kZTogXCJub3Qtc3VwcG9ydGVkXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9jb25kaXRpb25hbC1yZWFkLXN0YXR1c1wiLFxyXG4gIH0pLFxyXG59IGFzIGNvbnN0O1xyXG5cclxuLyoqXHJcbiAqIEEgY29kZSB0aGF0IGluZGljYXRlcyBob3cgdGhlIHNlcnZlciBzdXBwb3J0cyBjb25kaXRpb25hbCByZWFkLlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgQ29uZGl0aW9uYWxSZWFkU3RhdHVzQ29kaW5nVHlwZSA9IHR5cGVvZiBDb25kaXRpb25hbFJlYWRTdGF0dXNDb2RpbmdzO1xyXG4iXX0=