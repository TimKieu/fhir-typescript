// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://terminology.hl7.org/ValueSet/v2-0487|2.9
import { Coding } from '../fhir/Coding.js';
/**
 * FHIR Value set/code system definition for HL7 v2 table 0487 ( Specimen Type)
 */
export const V20487Codings = {
    /**
     * Code: ABS
     */
    Abscess: new Coding({
        display: "Abscess",
        code: "ABS",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: ACNE
     */
    TissueAcne: new Coding({
        display: "Tissue, Acne",
        code: "ACNE",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: ACNFLD
     */
    FluidAcne: new Coding({
        display: "Fluid, Acne",
        code: "ACNFLD",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: AIRS
     */
    AirSample: new Coding({
        display: "Air Sample",
        code: "AIRS",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: ALL
     */
    Allograft: new Coding({
        display: "Allograft",
        code: "ALL",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: AMN
     */
    AmnioticFluid: new Coding({
        display: "Amniotic fluid",
        code: "AMN",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: AMP
     */
    Amputation: new Coding({
        display: "Amputation",
        code: "AMP",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: ANGI
     */
    CatheterTipAngio: new Coding({
        display: "Catheter Tip, Angio",
        code: "ANGI",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: ARTC
     */
    CatheterTipArterial: new Coding({
        display: "Catheter Tip, Arterial",
        code: "ARTC",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: ASERU
     */
    SerumAcute: new Coding({
        display: "Serum, Acute",
        code: "ASERU",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: ASP
     */
    Aspirate: new Coding({
        display: "Aspirate",
        code: "ASP",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: ATTE
     */
    EnvironmentAttest: new Coding({
        display: "Environment, Attest",
        code: "ATTE",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: AUTOA
     */
    EnvironmentalAutoclaveAmpule: new Coding({
        display: "Environmental, Autoclave Ampule",
        code: "AUTOA",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: AUTOC
     */
    EnvironmentalAutoclaveCapsule: new Coding({
        display: "Environmental, Autoclave Capsule",
        code: "AUTOC",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: AUTP
     */
    Autopsy: new Coding({
        display: "Autopsy",
        code: "AUTP",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: BBL
     */
    BloodBag: new Coding({
        display: "Blood bag",
        code: "BBL",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: BCYST
     */
    CystBakerQuoteS: new Coding({
        display: "Cyst, Baker's",
        code: "BCYST",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: BDY
     */
    WholeBody: new Coding({
        display: "Whole body",
        code: "BDY",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: BIFL
     */
    BileFluid: new Coding({
        display: "Bile Fluid",
        code: "BIFL",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: BITE
     */
    Bite: new Coding({
        display: "Bite",
        code: "BITE",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: BLD
     */
    WholeBlood: new Coding({
        display: "Whole blood",
        code: "BLD",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: BLDA
     */
    BloodArterial: new Coding({
        display: "Blood arterial",
        code: "BLDA",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: BLDCO
     */
    CordBlood: new Coding({
        display: "Cord blood",
        code: "BLDCO",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: BLDV
     */
    BloodVenous: new Coding({
        display: "Blood venous",
        code: "BLDV",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: BLEB
     */
    Bleb: new Coding({
        display: "Bleb",
        code: "BLEB",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: BLIST
     */
    Blister: new Coding({
        display: "Blister",
        code: "BLIST",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: BOIL
     */
    Boil: new Coding({
        display: "Boil",
        code: "BOIL",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: BON
     */
    Bone: new Coding({
        display: "Bone",
        code: "BON",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: BOWL
     */
    BowelContents: new Coding({
        display: "Bowel contents",
        code: "BOWL",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: BPH
     */
    Basophils: new Coding({
        display: "Basophils",
        code: "BPH",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: BPU
     */
    BloodProductUnit: new Coding({
        display: "Blood product unit",
        code: "BPU",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: BRN
     */
    Burn: new Coding({
        display: "Burn",
        code: "BRN",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: BRSH
     */
    Brush: new Coding({
        display: "Brush",
        code: "BRSH",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: BRTH
     */
    BreathUseEXHLD: new Coding({
        display: "Breath (use EXHLD)",
        code: "BRTH",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: BRUS
     */
    Brushing: new Coding({
        display: "Brushing",
        code: "BRUS",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: BUB
     */
    Bubo: new Coding({
        display: "Bubo",
        code: "BUB",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: BULLA
     */
    BullaBullae: new Coding({
        display: "Bulla/Bullae",
        code: "BULLA",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: BX
     */
    Biopsy: new Coding({
        display: "Biopsy",
        code: "BX",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: CALC
     */
    CalculusEqualsStone: new Coding({
        display: "Calculus (=Stone)",
        code: "CALC",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: CARBU
     */
    Carbuncle: new Coding({
        display: "Carbuncle",
        code: "CARBU",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: CAT
     */
    Catheter: new Coding({
        display: "Catheter",
        code: "CAT",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: CBITE
     */
    BiteCat: new Coding({
        display: "Bite, Cat",
        code: "CBITE",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: CDM
     */
    CardiacMuscle: new Coding({
        display: "Cardiac muscle",
        code: "CDM",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: CLIPP
     */
    Clippings: new Coding({
        display: "Clippings",
        code: "CLIPP",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: CNJT
     */
    Conjunctiva: new Coding({
        display: "Conjunctiva",
        code: "CNJT",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: CNL
     */
    Cannula: new Coding({
        display: "Cannula",
        code: "CNL",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: COL
     */
    Colostrum: new Coding({
        display: "Colostrum",
        code: "COL",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: CONE
     */
    BiospyCone: new Coding({
        display: "Biospy, Cone",
        code: "CONE",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: CSCR
     */
    ScratchCat: new Coding({
        display: "Scratch, Cat",
        code: "CSCR",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: CSERU
     */
    SerumConvalescent: new Coding({
        display: "Serum, Convalescent",
        code: "CSERU",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: CSF
     */
    CerebralSpinalFluid: new Coding({
        display: "Cerebral spinal fluid",
        code: "CSF",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: CSITE
     */
    CatheterInsertionSite: new Coding({
        display: "Catheter Insertion Site",
        code: "CSITE",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: CSMY
     */
    FluidCystostomyTube: new Coding({
        display: "Fluid,  Cystostomy Tube",
        code: "CSMY",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: CST
     */
    FluidCyst: new Coding({
        display: "Fluid, Cyst",
        code: "CST",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: CSVR
     */
    BloodCellSaver: new Coding({
        display: "Blood, Cell Saver",
        code: "CSVR",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: CTP
     */
    CatheterTip: new Coding({
        display: "Catheter tip",
        code: "CTP",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: CUR
     */
    Curretage: new Coding({
        display: "Curretage",
        code: "CUR",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: CVM
     */
    CervicalMucus: new Coding({
        display: "Cervical Mucus",
        code: "CVM",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: CVPS
     */
    SiteCVP: new Coding({
        display: "Site, CVP",
        code: "CVPS",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: CVPT
     */
    CatheterTipCVP: new Coding({
        display: "Catheter Tip, CVP",
        code: "CVPT",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: CYN
     */
    NoduleCystic: new Coding({
        display: "Nodule, Cystic",
        code: "CYN",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: CYST
     */
    Cyst: new Coding({
        display: "Cyst",
        code: "CYST",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: DBITE
     */
    BiteDog: new Coding({
        display: "Bite, Dog",
        code: "DBITE",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: DCS
     */
    SputumDeepCough: new Coding({
        display: "Sputum, Deep Cough",
        code: "DCS",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: DEC
     */
    UlcerDecubitus: new Coding({
        display: "Ulcer, Decubitus",
        code: "DEC",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: DEION
     */
    EnvironmentalWaterDeionized: new Coding({
        display: "Environmental, Water  (Deionized)",
        code: "DEION",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: DIA
     */
    Dialysate: new Coding({
        display: "Dialysate",
        code: "DIA",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: DIAF
     */
    DialysisFluid: new Coding({
        display: "Dialysis Fluid",
        code: "DIAF",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: DISCHG
     */
    Discharge: new Coding({
        display: "Discharge",
        code: "DISCHG",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: DIV
     */
    Diverticulum: new Coding({
        display: "Diverticulum",
        code: "DIV",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: DRN
     */
    Drain: new Coding({
        display: "Drain",
        code: "DRN",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: DRNG
     */
    DrainageTube: new Coding({
        display: "Drainage, Tube",
        code: "DRNG",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: DRNGP
     */
    DrainagePenrose: new Coding({
        display: "Drainage, Penrose",
        code: "DRNGP",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: DUFL
     */
    DuodenalFluid: new Coding({
        display: "Duodenal fluid",
        code: "DUFL",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: EARW
     */
    EarWaxCerumen: new Coding({
        display: "Ear wax (cerumen)",
        code: "EARW",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: EBRUSH
     */
    BrushEsophageal: new Coding({
        display: "Brush, Esophageal",
        code: "EBRUSH",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: EEYE
     */
    EnvironmentalEyeWash: new Coding({
        display: "Environmental, Eye Wash",
        code: "EEYE",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: EFF
     */
    EnvironmentalEffluent: new Coding({
        display: "Environmental, Effluent",
        code: "EFF",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: EFFUS
     */
    Effusion: new Coding({
        display: "Effusion",
        code: "EFFUS",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: EFOD
     */
    EnvironmentalFood: new Coding({
        display: "Environmental, Food",
        code: "EFOD",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: EISO
     */
    EnvironmentalIsolette: new Coding({
        display: "Environmental, Isolette",
        code: "EISO",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: ELT
     */
    Electrode: new Coding({
        display: "Electrode",
        code: "ELT",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: ENVIR
     */
    EnvironmentalUnidentifiedSubstance: new Coding({
        display: "Environmental, Unidentified Substance",
        code: "ENVIR",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: EOS
     */
    Eosinophils: new Coding({
        display: "Eosinophils",
        code: "EOS",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: EOTH
     */
    EnvironmentalOtherSubstance: new Coding({
        display: "Environmental, Other Substance",
        code: "EOTH",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: ESOI
     */
    EnvironmentalSoil: new Coding({
        display: "Environmental, Soil",
        code: "ESOI",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: ESOS
     */
    EnvironmentalSolutionSterile: new Coding({
        display: "Environmental, Solution (Sterile)",
        code: "ESOS",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: ETA
     */
    AspirateEndotrach: new Coding({
        display: "Aspirate,  Endotrach",
        code: "ETA",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: ETTP
     */
    CatheterTipEndotracheal: new Coding({
        display: "Catheter Tip, Endotracheal",
        code: "ETTP",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: ETTUB
     */
    TubeEndotracheal: new Coding({
        display: "Tube, Endotracheal",
        code: "ETTUB",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: EWHI
     */
    EnvironmentalWhirlpool: new Coding({
        display: "Environmental, Whirlpool",
        code: "EWHI",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: EXG
     */
    GasExhaledEqualsBreath: new Coding({
        display: "Gas, exhaled (=breath)",
        code: "EXG",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: EXS
     */
    ShuntExternal: new Coding({
        display: "Shunt, External",
        code: "EXS",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: EXUDTE
     */
    Exudate: new Coding({
        display: "Exudate",
        code: "EXUDTE",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: FAW
     */
    EnvironmentalWaterWell: new Coding({
        display: "Environmental, Water  (Well)",
        code: "FAW",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: FBLOOD
     */
    BloodFetal: new Coding({
        display: "Blood, Fetal",
        code: "FBLOOD",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: FGA
     */
    FluidAbdomen: new Coding({
        display: "Fluid,  Abdomen",
        code: "FGA",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: FIB
     */
    Fibroblasts: new Coding({
        display: "Fibroblasts",
        code: "FIB",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: FIST
     */
    Fistula: new Coding({
        display: "Fistula",
        code: "FIST",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: FLD
     */
    FluidOther: new Coding({
        display: "Fluid, Other",
        code: "FLD",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: FLT
     */
    Filter: new Coding({
        display: "Filter",
        code: "FLT",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: FLU
     */
    FluidBodyUnsp: new Coding({
        display: "Fluid, Body unsp",
        code: "FLU",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: FLUID
     */
    Fluid: new Coding({
        display: "Fluid",
        code: "FLUID",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: FOLEY
     */
    CatheterTipFoley: new Coding({
        display: "Catheter Tip, Foley",
        code: "FOLEY",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: FRS
     */
    FluidRespiratory: new Coding({
        display: "Fluid, Respiratory",
        code: "FRS",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: FSCLP
     */
    ScalpFetal: new Coding({
        display: "Scalp, Fetal",
        code: "FSCLP",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: FUR
     */
    Furuncle: new Coding({
        display: "Furuncle",
        code: "FUR",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: GAS
     */
    Gas: new Coding({
        display: "Gas",
        code: "GAS",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: GASA
     */
    AspirateGastric: new Coding({
        display: "Aspirate, Gastric",
        code: "GASA",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: GASAN
     */
    AntrumGastric: new Coding({
        display: "Antrum, Gastric",
        code: "GASAN",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: GASBR
     */
    BrushingGastric: new Coding({
        display: "Brushing, Gastric",
        code: "GASBR",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: GASD
     */
    DrainageGastric: new Coding({
        display: "Drainage, Gastric",
        code: "GASD",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: GAST
     */
    FluidContentsGastric: new Coding({
        display: "Fluid/contents, Gastric",
        code: "GAST",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: GENL
     */
    GenitalLochia: new Coding({
        display: "Genital lochia",
        code: "GENL",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: GENV
     */
    GenitalVaginal: new Coding({
        display: "Genital vaginal",
        code: "GENV",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: GRAFT
     */
    Graft: new Coding({
        display: "Graft",
        code: "GRAFT",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: GRAFTS
     */
    GraftSite: new Coding({
        display: "Graft Site",
        code: "GRAFTS",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: GRANU
     */
    Granuloma: new Coding({
        display: "Granuloma",
        code: "GRANU",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: GROSH
     */
    CatheterGroshong: new Coding({
        display: "Catheter, Groshong",
        code: "GROSH",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: GSOL
     */
    SolutionGastrostomy: new Coding({
        display: "Solution, Gastrostomy",
        code: "GSOL",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: GSPEC
     */
    BiopsyGastric: new Coding({
        display: "Biopsy, Gastric",
        code: "GSPEC",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: GT
     */
    TubeGastric: new Coding({
        display: "Tube, Gastric",
        code: "GT",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: GTUBE
     */
    DrainageTubeDrainageGastrostomy: new Coding({
        display: "Drainage Tube, Drainage (Gastrostomy)",
        code: "GTUBE",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: HAR
     */
    Hair: new Coding({
        display: "Hair",
        code: "HAR",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: HBITE
     */
    BiteHuman: new Coding({
        display: "Bite, Human",
        code: "HBITE",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: HBLUD
     */
    BloodAutopsy: new Coding({
        display: "Blood, Autopsy",
        code: "HBLUD",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: HEMAQ
     */
    CatheterTipHemaquit: new Coding({
        display: "Catheter Tip, Hemaquit",
        code: "HEMAQ",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: HEMO
     */
    CatheterTipHemovac: new Coding({
        display: "Catheter Tip, Hemovac",
        code: "HEMO",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: HERNI
     */
    TissueHerniated: new Coding({
        display: "Tissue, Herniated",
        code: "HERNI",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: HEV
     */
    DrainHemovac: new Coding({
        display: "Drain, Hemovac",
        code: "HEV",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: HIC
     */
    CatheterHickman: new Coding({
        display: "Catheter, Hickman",
        code: "HIC",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: HYDC
     */
    FluidHydrocele: new Coding({
        display: "Fluid, Hydrocele",
        code: "HYDC",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: IBITE
     */
    BiteInsect: new Coding({
        display: "Bite, Insect",
        code: "IBITE",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: ICYST
     */
    CystInclusion: new Coding({
        display: "Cyst, Inclusion",
        code: "ICYST",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: IDC
     */
    CatheterTipIndwelling: new Coding({
        display: "Catheter Tip, Indwelling",
        code: "IDC",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: IHG
     */
    GasInhaled: new Coding({
        display: "Gas, Inhaled",
        code: "IHG",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: ILEO
     */
    DrainageIleostomy: new Coding({
        display: "Drainage, Ileostomy",
        code: "ILEO",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: ILLEG
     */
    SourceOfSpecimenIsIllegible: new Coding({
        display: "Source of Specimen Is Illegible",
        code: "ILLEG",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: IMP
     */
    Implant: new Coding({
        display: "Implant",
        code: "IMP",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: INCI
     */
    SiteIncisionSurgical: new Coding({
        display: "Site, Incision/Surgical",
        code: "INCI",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: INFIL
     */
    Infiltrate: new Coding({
        display: "Infiltrate",
        code: "INFIL",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: INS
     */
    Insect: new Coding({
        display: "Insect",
        code: "INS",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: INTRD
     */
    CatheterTipIntroducer: new Coding({
        display: "Catheter Tip, Introducer",
        code: "INTRD",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: ISLT
     */
    Isolate: new Coding({
        display: "Isolate",
        code: "ISLT",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: IT
     */
    IntubationTube: new Coding({
        display: "Intubation tube",
        code: "IT",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: IUD
     */
    IntrauterineDevice: new Coding({
        display: "Intrauterine Device",
        code: "IUD",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: IVCAT
     */
    CatheterTipIV: new Coding({
        display: "Catheter Tip, IV",
        code: "IVCAT",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: IVFLD
     */
    FluidIV: new Coding({
        display: "Fluid, IV",
        code: "IVFLD",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: IVTIP
     */
    TubingTipIV: new Coding({
        display: "Tubing Tip, IV",
        code: "IVTIP",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: JEJU
     */
    DrainageJejunal: new Coding({
        display: "Drainage, Jejunal",
        code: "JEJU",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: JNTFLD
     */
    FluidJoint: new Coding({
        display: "Fluid, Joint",
        code: "JNTFLD",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: JP
     */
    DrainageJacksonPratt: new Coding({
        display: "Drainage, Jackson Pratt",
        code: "JP",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: KELOI
     */
    Lavage: new Coding({
        display: "Lavage",
        code: "KELOI",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: KIDFLD
     */
    FluidKidney: new Coding({
        display: "Fluid, Kidney",
        code: "KIDFLD",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: LAVG
     */
    LavageBronhial: new Coding({
        display: "Lavage, Bronhial",
        code: "LAVG",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: LAVGG
     */
    LavageGastric: new Coding({
        display: "Lavage, Gastric",
        code: "LAVGG",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: LAVGP
     */
    LavagePeritoneal: new Coding({
        display: "Lavage, Peritoneal",
        code: "LAVGP",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: LAVPG
     */
    LavagePreBronch: new Coding({
        display: "Lavage, Pre-Bronch",
        code: "LAVPG",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: LENS1
     */
    ContactLens: new Coding({
        display: "Contact Lens",
        code: "LENS1",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: LENS2
     */
    ContactLensCase: new Coding({
        display: "Contact Lens Case",
        code: "LENS2",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: LESN
     */
    Lesion: new Coding({
        display: "Lesion",
        code: "LESN",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: LIQ
     */
    LiquidUnspecified: new Coding({
        display: "Liquid, Unspecified",
        code: "LIQ",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: LIQO
     */
    LiquidOther: new Coding({
        display: "Liquid, Other",
        code: "LIQO",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: LNA
     */
    LineArterial: new Coding({
        display: "Line arterial",
        code: "LNA",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: LNV
     */
    LineVenous: new Coding({
        display: "Line venous",
        code: "LNV",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: LSAC
     */
    FluidLumbarSac: new Coding({
        display: "Fluid, Lumbar Sac",
        code: "LSAC",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: LYM
     */
    Lymphocytes: new Coding({
        display: "Lymphocytes",
        code: "LYM",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: MAC
     */
    Macrophages: new Coding({
        display: "Macrophages",
        code: "MAC",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: MAHUR
     */
    CatheterTipMakurkour: new Coding({
        display: "Catheter Tip, Makurkour",
        code: "MAHUR",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: MAR
     */
    Marrow: new Coding({
        display: "Marrow",
        code: "MAR",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: MASS
     */
    Mass: new Coding({
        display: "Mass",
        code: "MASS",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: MBLD
     */
    BloodMenstrual: new Coding({
        display: "Blood, Menstrual",
        code: "MBLD",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: MEC
     */
    Meconium: new Coding({
        display: "Meconium",
        code: "MEC",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: MILK
     */
    BreastMilk: new Coding({
        display: "Breast milk",
        code: "MILK",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: MLK
     */
    Milk: new Coding({
        display: "Milk",
        code: "MLK",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: MUCOS
     */
    Mucosa: new Coding({
        display: "Mucosa",
        code: "MUCOS",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: MUCUS
     */
    Mucus: new Coding({
        display: "Mucus",
        code: "MUCUS",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: NAIL
     */
    Nail: new Coding({
        display: "Nail",
        code: "NAIL",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: NASDR
     */
    DrainageNasal: new Coding({
        display: "Drainage, Nasal",
        code: "NASDR",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: NEDL
     */
    Needle: new Coding({
        display: "Needle",
        code: "NEDL",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: NEPH
     */
    SiteNephrostomy: new Coding({
        display: "Site, Nephrostomy",
        code: "NEPH",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: NGASP
     */
    AspirateNasogastric: new Coding({
        display: "Aspirate, Nasogastric",
        code: "NGASP",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: NGAST
     */
    DrainageNasogastric: new Coding({
        display: "Drainage, Nasogastric",
        code: "NGAST",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: NGS
     */
    SiteNasoGastric: new Coding({
        display: "Site, Naso/Gastric",
        code: "NGS",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: NODUL
     */
    NoduleS: new Coding({
        display: "Nodule(s)",
        code: "NODUL",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: NSECR
     */
    SecretionNasal: new Coding({
        display: "Secretion, Nasal",
        code: "NSECR",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: ORH
     */
    Other: new Coding({
        display: "Other",
        code: "ORH",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: ORL
     */
    LesionOral: new Coding({
        display: "Lesion, Oral",
        code: "ORL",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: OTH
     */
    SourceOther: new Coding({
        display: "Source, Other",
        code: "OTH",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: PACEM
     */
    Pacemaker: new Coding({
        display: "Pacemaker",
        code: "PACEM",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: PAFL
     */
    PancreaticFluid: new Coding({
        display: "Pancreatic fluid",
        code: "PAFL",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: PCFL
     */
    FluidPericardial: new Coding({
        display: "Fluid, Pericardial",
        code: "PCFL",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: PDSIT
     */
    SitePeritonealDialysis: new Coding({
        display: "Site, Peritoneal Dialysis",
        code: "PDSIT",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: PDTS
     */
    SitePeritonealDialysisTunnel: new Coding({
        display: "Site, Peritoneal Dialysis Tunnel",
        code: "PDTS",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: PELVA
     */
    AbscessPelvic: new Coding({
        display: "Abscess, Pelvic",
        code: "PELVA",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: PENIL
     */
    LesionPenile: new Coding({
        display: "Lesion, Penile",
        code: "PENIL",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: PERIA
     */
    AbscessPerianal: new Coding({
        display: "Abscess, Perianal",
        code: "PERIA",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: PILOC
     */
    CystPilonidal: new Coding({
        display: "Cyst, Pilonidal",
        code: "PILOC",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: PINS
     */
    SitePin: new Coding({
        display: "Site, Pin",
        code: "PINS",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: PIS
     */
    SitePacemakerInsetion: new Coding({
        display: "Site, Pacemaker Insetion",
        code: "PIS",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: PLAN
     */
    PlantMaterial: new Coding({
        display: "Plant Material",
        code: "PLAN",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: PLAS
     */
    Plasma: new Coding({
        display: "Plasma",
        code: "PLAS",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: PLB
     */
    PlasmaBag: new Coding({
        display: "Plasma bag",
        code: "PLB",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: PLC
     */
    Placenta: new Coding({
        display: "Placenta",
        code: "PLC",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: PLEVS
     */
    SerumPeakLevel: new Coding({
        display: "Serum, Peak Level",
        code: "PLEVS",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: PLR
     */
    PleuralFluidThoracentesisFluid: new Coding({
        display: "Pleural fluid (thoracentesis fluid)",
        code: "PLR",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: PMN
     */
    PolymorphonuclearNeutrophils: new Coding({
        display: "Polymorphonuclear neutrophils",
        code: "PMN",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: PND
     */
    DrainagePenile: new Coding({
        display: "Drainage, Penile",
        code: "PND",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: POL
     */
    Polyps: new Coding({
        display: "Polyps",
        code: "POL",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: POPGS
     */
    GraftSitePopliteal: new Coding({
        display: "Graft Site, Popliteal",
        code: "POPGS",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: POPLG
     */
    GraftPopliteal: new Coding({
        display: "Graft, Popliteal",
        code: "POPLG",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: POPLV
     */
    SitePoplitealVein: new Coding({
        display: "Site, Popliteal Vein",
        code: "POPLV",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: PORTA
     */
    CatheterPorta: new Coding({
        display: "Catheter, Porta",
        code: "PORTA",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: PPP
     */
    PlasmaPlateletPoor: new Coding({
        display: "Plasma, Platelet poor",
        code: "PPP",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: PROST
     */
    ProstheticDevice: new Coding({
        display: "Prosthetic Device",
        code: "PROST",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: PRP
     */
    PlasmaPlateletRich: new Coding({
        display: "Plasma, Platelet rich",
        code: "PRP",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: PSC
     */
    Pseudocyst: new Coding({
        display: "Pseudocyst",
        code: "PSC",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: PUNCT
     */
    WoundPuncture: new Coding({
        display: "Wound, Puncture",
        code: "PUNCT",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: PUS
     */
    Pus: new Coding({
        display: "Pus",
        code: "PUS",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: PUSFR
     */
    Pustule: new Coding({
        display: "Pustule",
        code: "PUSFR",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: PUST
     */
    PusPUST: new Coding({
        display: "Pus",
        code: "PUST",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: QC3
     */
    QualityControl: new Coding({
        display: "Quality Control",
        code: "QC3",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: RANDU
     */
    UrineRandom: new Coding({
        display: "Urine, Random",
        code: "RANDU",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: RBC
     */
    Erythrocytes: new Coding({
        display: "Erythrocytes",
        code: "RBC",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: RBITE
     */
    BiteReptile: new Coding({
        display: "Bite, Reptile",
        code: "RBITE",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: RECT
     */
    DrainageRectal: new Coding({
        display: "Drainage, Rectal",
        code: "RECT",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: RECTA
     */
    AbscessRectal: new Coding({
        display: "Abscess, Rectal",
        code: "RECTA",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: RENALC
     */
    CystRenal: new Coding({
        display: "Cyst, Renal",
        code: "RENALC",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: RENC
     */
    FluidRenalCyst: new Coding({
        display: "Fluid, Renal Cyst",
        code: "RENC",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: RES
     */
    Respiratory: new Coding({
        display: "Respiratory",
        code: "RES",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: SAL
     */
    Saliva: new Coding({
        display: "Saliva",
        code: "SAL",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: SCAR
     */
    TissueKeloidScar: new Coding({
        display: "Tissue, Keloid (Scar)",
        code: "SCAR",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: SCLV
     */
    CatheterTipSubclavian: new Coding({
        display: "Catheter Tip, Subclavian",
        code: "SCLV",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: SCROA
     */
    AbscessScrotal: new Coding({
        display: "Abscess, Scrotal",
        code: "SCROA",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: SECRE
     */
    SecretionS: new Coding({
        display: "Secretion(s)",
        code: "SECRE",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: SER
     */
    Serum: new Coding({
        display: "Serum",
        code: "SER",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: SHU
     */
    SiteShunt: new Coding({
        display: "Site, Shunt",
        code: "SHU",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: SHUNF
     */
    FluidShunt: new Coding({
        display: "Fluid, Shunt",
        code: "SHUNF",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: SHUNT
     */
    Shunt: new Coding({
        display: "Shunt",
        code: "SHUNT",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: SITE
     */
    Site: new Coding({
        display: "Site",
        code: "SITE",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: SKBP
     */
    BiopsySkin: new Coding({
        display: "Biopsy, Skin",
        code: "SKBP",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: SKN
     */
    Skin: new Coding({
        display: "Skin",
        code: "SKN",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: SMM
     */
    MassSubMandibular: new Coding({
        display: "Mass, Sub-Mandibular",
        code: "SMM",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: SMN
     */
    SeminalFluid: new Coding({
        display: "Seminal fluid",
        code: "SMN",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: SNV
     */
    FluidSynovialJointFluid: new Coding({
        display: "Fluid, synovial (Joint fluid)",
        code: "SNV",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: SPRM
     */
    Spermatozoa: new Coding({
        display: "Spermatozoa",
        code: "SPRM",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: SPRP
     */
    CatheterTipSuprapubic: new Coding({
        display: "Catheter Tip, Suprapubic",
        code: "SPRP",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: SPRPB
     */
    CathetherTipSuprapubic: new Coding({
        display: "Cathether Tip, Suprapubic",
        code: "SPRPB",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: SPS
     */
    EnvironmentalSporeStrip: new Coding({
        display: "Environmental, Spore Strip",
        code: "SPS",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: SPT
     */
    Sputum: new Coding({
        display: "Sputum",
        code: "SPT",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: SPTC
     */
    SputumCoughed: new Coding({
        display: "Sputum - coughed",
        code: "SPTC",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: SPTT
     */
    SputumTrachealAspirate: new Coding({
        display: "Sputum - tracheal aspirate",
        code: "SPTT",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: SPUT1
     */
    SputumSimulated: new Coding({
        display: "Sputum, Simulated",
        code: "SPUT1",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: SPUTIN
     */
    SputumInducted: new Coding({
        display: "Sputum, Inducted",
        code: "SPUTIN",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: SPUTSP
     */
    SputumSpontaneous: new Coding({
        display: "Sputum, Spontaneous",
        code: "SPUTSP",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: STER
     */
    EnvironmentalSterrad: new Coding({
        display: "Environmental, Sterrad",
        code: "STER",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: STL
     */
    StoolEqualsFecal: new Coding({
        display: "Stool = Fecal",
        code: "STL",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: STONE
     */
    StoneKidney: new Coding({
        display: "Stone, Kidney",
        code: "STONE",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: SUBMA
     */
    AbscessSubmandibular: new Coding({
        display: "Abscess, Submandibular",
        code: "SUBMA",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: SUBMX
     */
    AbscessSubmaxillary: new Coding({
        display: "Abscess, Submaxillary",
        code: "SUBMX",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: SUMP
     */
    DrainageSump: new Coding({
        display: "Drainage, Sump",
        code: "SUMP",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: SUP
     */
    SuprapubicTap: new Coding({
        display: "Suprapubic Tap",
        code: "SUP",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: SUTUR
     */
    Suture: new Coding({
        display: "Suture",
        code: "SUTUR",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: SWGZ
     */
    CatheterTipSwanGantz: new Coding({
        display: "Catheter Tip, Swan Gantz",
        code: "SWGZ",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: SWT
     */
    Sweat: new Coding({
        display: "Sweat",
        code: "SWT",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: TASP
     */
    AspirateTracheal: new Coding({
        display: "Aspirate, Tracheal",
        code: "TASP",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: TEAR
     */
    Tears: new Coding({
        display: "Tears",
        code: "TEAR",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: THRB
     */
    ThrombocytePlatelet: new Coding({
        display: "Thrombocyte (platelet)",
        code: "THRB",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: TISS
     */
    Tissue: new Coding({
        display: "Tissue",
        code: "TISS",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: TISU
     */
    TissueUlcer: new Coding({
        display: "Tissue ulcer",
        code: "TISU",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: TLC
     */
    CathetherTipTripleLumen: new Coding({
        display: "Cathether Tip, Triple Lumen",
        code: "TLC",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: TRAC
     */
    SiteTracheostomy: new Coding({
        display: "Site, Tracheostomy",
        code: "TRAC",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: TRANS
     */
    Transudate: new Coding({
        display: "Transudate",
        code: "TRANS",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: TSERU
     */
    SerumTrough: new Coding({
        display: "Serum, Trough",
        code: "TSERU",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: TSTES
     */
    AbscessTesticular: new Coding({
        display: "Abscess, Testicular",
        code: "TSTES",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: TTRA
     */
    AspirateTranstracheal: new Coding({
        display: "Aspirate, Transtracheal",
        code: "TTRA",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: TUBES
     */
    Tubes: new Coding({
        display: "Tubes",
        code: "TUBES",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: TUMOR
     */
    Tumor: new Coding({
        display: "Tumor",
        code: "TUMOR",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: TZANC
     */
    SmearTzanck: new Coding({
        display: "Smear, Tzanck",
        code: "TZANC",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: UDENT
     */
    SourceUnidentified: new Coding({
        display: "Source, Unidentified",
        code: "UDENT",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: UMED
     */
    UnknownMedicine: new Coding({
        display: "Unknown Medicine",
        code: "UMED",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: UR
     */
    Urine: new Coding({
        display: "Urine",
        code: "UR",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: URC
     */
    UrineCleanCatch: new Coding({
        display: "Urine clean catch",
        code: "URC",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: URINB
     */
    UrineBladderWashings: new Coding({
        display: "Urine, Bladder Washings",
        code: "URINB",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: URINC
     */
    UrineCatheterized: new Coding({
        display: "Urine, Catheterized",
        code: "URINC",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: URINM
     */
    UrineMidstream: new Coding({
        display: "Urine, Midstream",
        code: "URINM",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: URINN
     */
    UrineNephrostomy: new Coding({
        display: "Urine, Nephrostomy",
        code: "URINN",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: URINP
     */
    UrinePedibag: new Coding({
        display: "Urine, Pedibag",
        code: "URINP",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: URNS
     */
    UrineSediment: new Coding({
        display: "Urine sediment",
        code: "URNS",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: URT
     */
    UrineCatheter: new Coding({
        display: "Urine catheter",
        code: "URT",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: USCOP
     */
    UrineCystoscopy: new Coding({
        display: "Urine, Cystoscopy",
        code: "USCOP",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: USPEC
     */
    SourceUnspecified: new Coding({
        display: "Source, Unspecified",
        code: "USPEC",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: USUB
     */
    UnkownSubstance: new Coding({
        display: "Unkown substance",
        code: "USUB",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: VASTIP
     */
    CatheterTipVas: new Coding({
        display: "Catheter Tip, Vas",
        code: "VASTIP",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: VENT
     */
    CatheterTipVentricular: new Coding({
        display: "Catheter Tip, Ventricular",
        code: "VENT",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: VITF
     */
    VitreousFluid: new Coding({
        display: "Vitreous Fluid",
        code: "VITF",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: VOM
     */
    Vomitus: new Coding({
        display: "Vomitus",
        code: "VOM",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: WASH
     */
    Wash: new Coding({
        display: "Wash",
        code: "WASH",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: WASI
     */
    WashingEGBronchialWashing: new Coding({
        display: "Washing, e.g. bronchial washing",
        code: "WASI",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: WAT
     */
    Water: new Coding({
        display: "Water",
        code: "WAT",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: WB
     */
    BloodWhole: new Coding({
        display: "Blood, Whole",
        code: "WB",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: WBC
     */
    Leukocytes: new Coding({
        display: "Leukocytes",
        code: "WBC",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: WEN
     */
    Wen: new Coding({
        display: "Wen",
        code: "WEN",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: WICK
     */
    Wick: new Coding({
        display: "Wick",
        code: "WICK",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: WND
     */
    Wound: new Coding({
        display: "Wound",
        code: "WND",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: WNDA
     */
    WoundAbscess: new Coding({
        display: "Wound abscess",
        code: "WNDA",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: WNDD
     */
    WoundDrainage: new Coding({
        display: "Wound drainage",
        code: "WNDD",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: WNDE
     */
    WoundExudate: new Coding({
        display: "Wound exudate",
        code: "WNDE",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: WORM
     */
    Worm: new Coding({
        display: "Worm",
        code: "WORM",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: WRT
     */
    Wart: new Coding({
        display: "Wart",
        code: "WRT",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: WWA
     */
    EnvironmentalWater: new Coding({
        display: "Environmental, Water",
        code: "WWA",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: WWO
     */
    EnvironmentalWaterOcean: new Coding({
        display: "Environmental, Water (Ocean)",
        code: "WWO",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
    /**
     * Code: WWT
     */
    EnvironmentalWaterTap: new Coding({
        display: "Environmental, Water  (Tap)",
        code: "WWT",
        system: "http://terminology.hl7.org/CodeSystem/v2-0487",
    }),
};
//# sourceMappingURL=data:application/json;base64,