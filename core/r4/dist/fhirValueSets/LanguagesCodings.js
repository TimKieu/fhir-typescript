// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/languages|4.0.1
import { Coding } from '../fhir/Coding.js';
/**
 * This value set includes common codes from BCP-47 (http://tools.ietf.org/html/bcp47)
 */
export const LanguagesCodings = {
    /**
     * Code: ar
     */
    Arabic: new Coding({
        display: "Arabic",
        code: "ar",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: bn
     */
    Bengali: new Coding({
        display: "Bengali",
        code: "bn",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: cs
     */
    Czech: new Coding({
        display: "Czech",
        code: "cs",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: da
     */
    Danish: new Coding({
        display: "Danish",
        code: "da",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: de
     */
    German: new Coding({
        display: "German",
        code: "de",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: de-AT
     */
    GermanAustria: new Coding({
        display: "German (Austria)",
        code: "de-AT",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: de-CH
     */
    GermanSwitzerland: new Coding({
        display: "German (Switzerland)",
        code: "de-CH",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: de-DE
     */
    GermanGermany: new Coding({
        display: "German (Germany)",
        code: "de-DE",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: el
     */
    Greek: new Coding({
        display: "Greek",
        code: "el",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: en
     */
    English: new Coding({
        display: "English",
        code: "en",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: en-AU
     */
    EnglishAustralia: new Coding({
        display: "English (Australia)",
        code: "en-AU",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: en-CA
     */
    EnglishCanada: new Coding({
        display: "English (Canada)",
        code: "en-CA",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: en-GB
     */
    EnglishGreatBritain: new Coding({
        display: "English (Great Britain)",
        code: "en-GB",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: en-IN
     */
    EnglishIndia: new Coding({
        display: "English (India)",
        code: "en-IN",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: en-NZ
     */
    EnglishNewZeland: new Coding({
        display: "English (New Zeland)",
        code: "en-NZ",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: en-SG
     */
    EnglishSingapore: new Coding({
        display: "English (Singapore)",
        code: "en-SG",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: en-US
     */
    EnglishUnitedStates: new Coding({
        display: "English (United States)",
        code: "en-US",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: es
     */
    Spanish: new Coding({
        display: "Spanish",
        code: "es",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: es-AR
     */
    SpanishArgentina: new Coding({
        display: "Spanish (Argentina)",
        code: "es-AR",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: es-ES
     */
    SpanishSpain: new Coding({
        display: "Spanish (Spain)",
        code: "es-ES",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: es-UY
     */
    SpanishUruguay: new Coding({
        display: "Spanish (Uruguay)",
        code: "es-UY",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: fi
     */
    Finnish: new Coding({
        display: "Finnish",
        code: "fi",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: fr
     */
    French: new Coding({
        display: "French",
        code: "fr",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: fr-BE
     */
    FrenchBelgium: new Coding({
        display: "French (Belgium)",
        code: "fr-BE",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: fr-CH
     */
    FrenchSwitzerland: new Coding({
        display: "French (Switzerland)",
        code: "fr-CH",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: fr-FR
     */
    FrenchFrance: new Coding({
        display: "French (France)",
        code: "fr-FR",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: fy
     */
    Frysian: new Coding({
        display: "Frysian",
        code: "fy",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: fy-NL
     */
    FrysianNetherlands: new Coding({
        display: "Frysian (Netherlands)",
        code: "fy-NL",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: hi
     */
    Hindi: new Coding({
        display: "Hindi",
        code: "hi",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: hr
     */
    Croatian: new Coding({
        display: "Croatian",
        code: "hr",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: it
     */
    Italian: new Coding({
        display: "Italian",
        code: "it",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: it-CH
     */
    ItalianSwitzerland: new Coding({
        display: "Italian (Switzerland)",
        code: "it-CH",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: it-IT
     */
    ItalianItaly: new Coding({
        display: "Italian (Italy)",
        code: "it-IT",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: ja
     */
    Japanese: new Coding({
        display: "Japanese",
        code: "ja",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: ko
     */
    Korean: new Coding({
        display: "Korean",
        code: "ko",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: nl
     */
    Dutch: new Coding({
        display: "Dutch",
        code: "nl",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: nl-BE
     */
    DutchBelgium: new Coding({
        display: "Dutch (Belgium)",
        code: "nl-BE",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: nl-NL
     */
    DutchNetherlands: new Coding({
        display: "Dutch (Netherlands)",
        code: "nl-NL",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: no
     */
    Norwegian: new Coding({
        display: "Norwegian",
        code: "no",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: no-NO
     */
    NorwegianNorway: new Coding({
        display: "Norwegian (Norway)",
        code: "no-NO",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: pa
     */
    Punjabi: new Coding({
        display: "Punjabi",
        code: "pa",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: pl
     */
    Polish: new Coding({
        display: "Polish",
        code: "pl",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: pt
     */
    Portuguese: new Coding({
        display: "Portuguese",
        code: "pt",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: pt-BR
     */
    PortugueseBrazil: new Coding({
        display: "Portuguese (Brazil)",
        code: "pt-BR",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: ru
     */
    Russian: new Coding({
        display: "Russian",
        code: "ru",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: ru-RU
     */
    RussianRussia: new Coding({
        display: "Russian (Russia)",
        code: "ru-RU",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: sr
     */
    Serbian: new Coding({
        display: "Serbian",
        code: "sr",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: sr-RS
     */
    SerbianSerbia: new Coding({
        display: "Serbian (Serbia)",
        code: "sr-RS",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: sv
     */
    Swedish: new Coding({
        display: "Swedish",
        code: "sv",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: sv-SE
     */
    SwedishSweden: new Coding({
        display: "Swedish (Sweden)",
        code: "sv-SE",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: te
     */
    Telegu: new Coding({
        display: "Telegu",
        code: "te",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: zh
     */
    Chinese: new Coding({
        display: "Chinese",
        code: "zh",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: zh-CN
     */
    ChineseChina: new Coding({
        display: "Chinese (China)",
        code: "zh-CN",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: zh-HK
     */
    ChineseHongKong: new Coding({
        display: "Chinese (Hong Kong)",
        code: "zh-HK",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: zh-SG
     */
    ChineseSingapore: new Coding({
        display: "Chinese (Singapore)",
        code: "zh-SG",
        system: "urn:ietf:bcp:47",
    }),
    /**
     * Code: zh-TW
     */
    ChineseTaiwan: new Coding({
        display: "Chinese (Taiwan)",
        code: "zh-TW",
        system: "urn:ietf:bcp:47",
    }),
};
//# sourceMappingURL=data:application/json;base64,