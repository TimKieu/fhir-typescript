{"version":3,"file":"ConsentProvisionTypeCodings.js","sources":["../../src/fhirValueSets/ConsentProvisionTypeCodings.ts"],"sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4.core version: 4.0.1\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR ValueSet: http://hl7.org/fhir/ValueSet/consent-provision-type|4.0.1\r\n\r\nimport { Coding } from '../fhir/Coding.js'\r\n\r\n/**\r\n * How a rule statement is applied, such as adding additional consent or removing consent.\r\n */\r\nexport const ConsentProvisionTypeCodings = {\r\n  /**\r\n   * deny: Consent is denied for actions meeting these rules.\r\n   */\r\n  OptOut: new Coding({\r\n    display: \"Opt Out\",\r\n    code: \"deny\",\r\n    system: \"http://hl7.org/fhir/consent-provision-type\",\r\n  }),\r\n  /**\r\n   * permit: Consent is provided for actions meeting these rules.\r\n   */\r\n  OptIn: new Coding({\r\n    display: \"Opt In\",\r\n    code: \"permit\",\r\n    system: \"http://hl7.org/fhir/consent-provision-type\",\r\n  }),\r\n} as const;\r\n\r\n/**\r\n * How a rule statement is applied, such as adding additional consent or removing consent.\r\n */\r\nexport type ConsentProvisionTypeCodingType = typeof ConsentProvisionTypeCodings;\r\n"],"names":[],"mappings":";;;;AAAA;AAOA;;AAEG;AACU,IAAA,2BAA2B,GAAG;AACzC;;AAEG;IACH,MAAM,EAAE,IAAI,MAAM,CAAC;AACjB,QAAA,OAAO,EAAE,SAAS;AAClB,QAAA,IAAI,EAAE,MAAM;AACZ,QAAA,MAAM,EAAE,4CAA4C;KACrD,CAAC;AACF;;AAEG;IACH,KAAK,EAAE,IAAI,MAAM,CAAC;AAChB,QAAA,OAAO,EAAE,QAAQ;AACjB,QAAA,IAAI,EAAE,QAAQ;AACd,QAAA,MAAM,EAAE,4CAA4C;KACrD,CAAC;;;;;"}