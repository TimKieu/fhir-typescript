// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/audit-source-type|4.0.1
import { Coding } from '../fhir/Coding.js';
/**
 * The type of process where the audit event originated from.
 */
export const AuditSourceTypeCodings = {
    /**
     * 1: End-user display device, diagnostic device.
     */
    UserDevice: new Coding({
        display: "User Device",
        code: "1",
        system: "http://terminology.hl7.org/CodeSystem/security-source-type",
    }),
    /**
     * 2: Data acquisition device or instrument.
     */
    DataInterface: new Coding({
        display: "Data Interface",
        code: "2",
        system: "http://terminology.hl7.org/CodeSystem/security-source-type",
    }),
    /**
     * 3: Web Server process or thread.
     */
    WebServer: new Coding({
        display: "Web Server",
        code: "3",
        system: "http://terminology.hl7.org/CodeSystem/security-source-type",
    }),
    /**
     * 4: Application Server process or thread.
     */
    ApplicationServer: new Coding({
        display: "Application Server",
        code: "4",
        system: "http://terminology.hl7.org/CodeSystem/security-source-type",
    }),
    /**
     * 5: Database Server process or thread.
     */
    DatabaseServer: new Coding({
        display: "Database Server",
        code: "5",
        system: "http://terminology.hl7.org/CodeSystem/security-source-type",
    }),
    /**
     * 6: Security server, e.g. a domain controller.
     */
    SecurityServer: new Coding({
        display: "Security Server",
        code: "6",
        system: "http://terminology.hl7.org/CodeSystem/security-source-type",
    }),
    /**
     * 7: ISO level 1-3 network component.
     */
    NetworkDevice: new Coding({
        display: "Network Device",
        code: "7",
        system: "http://terminology.hl7.org/CodeSystem/security-source-type",
    }),
    /**
     * 8: ISO level 4-6 operating software.
     */
    NetworkRouter: new Coding({
        display: "Network Router",
        code: "8",
        system: "http://terminology.hl7.org/CodeSystem/security-source-type",
    }),
    /**
     * 9: Other kind of device (defined by DICOM, but some other code/system can be used).
     */
    Other: new Coding({
        display: "Other",
        code: "9",
        system: "http://terminology.hl7.org/CodeSystem/security-source-type",
    }),
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXVkaXRTb3VyY2VUeXBlQ29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvQXVkaXRTb3VyY2VUeXBlQ29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyxzRUFBc0U7QUFFdEUsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLG1CQUFtQixDQUFBO0FBRTFDOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sc0JBQXNCLEdBQUc7SUFDcEM7O09BRUc7SUFDSCxVQUFVLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDckIsT0FBTyxFQUFFLGFBQWE7UUFDdEIsSUFBSSxFQUFFLEdBQUc7UUFDVCxNQUFNLEVBQUUsNERBQTREO0tBQ3JFLENBQUM7SUFDRjs7T0FFRztJQUNILGFBQWEsRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUN4QixPQUFPLEVBQUUsZ0JBQWdCO1FBQ3pCLElBQUksRUFBRSxHQUFHO1FBQ1QsTUFBTSxFQUFFLDREQUE0RDtLQUNyRSxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxTQUFTLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDcEIsT0FBTyxFQUFFLFlBQVk7UUFDckIsSUFBSSxFQUFFLEdBQUc7UUFDVCxNQUFNLEVBQUUsNERBQTREO0tBQ3JFLENBQUM7SUFDRjs7T0FFRztJQUNILGlCQUFpQixFQUFFLElBQUksTUFBTSxDQUFDO1FBQzVCLE9BQU8sRUFBRSxvQkFBb0I7UUFDN0IsSUFBSSxFQUFFLEdBQUc7UUFDVCxNQUFNLEVBQUUsNERBQTREO0tBQ3JFLENBQUM7SUFDRjs7T0FFRztJQUNILGNBQWMsRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUN6QixPQUFPLEVBQUUsaUJBQWlCO1FBQzFCLElBQUksRUFBRSxHQUFHO1FBQ1QsTUFBTSxFQUFFLDREQUE0RDtLQUNyRSxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxjQUFjLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDekIsT0FBTyxFQUFFLGlCQUFpQjtRQUMxQixJQUFJLEVBQUUsR0FBRztRQUNULE1BQU0sRUFBRSw0REFBNEQ7S0FDckUsQ0FBQztJQUNGOztPQUVHO0lBQ0gsYUFBYSxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ3hCLE9BQU8sRUFBRSxnQkFBZ0I7UUFDekIsSUFBSSxFQUFFLEdBQUc7UUFDVCxNQUFNLEVBQUUsNERBQTREO0tBQ3JFLENBQUM7SUFDRjs7T0FFRztJQUNILGFBQWEsRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUN4QixPQUFPLEVBQUUsZ0JBQWdCO1FBQ3pCLElBQUksRUFBRSxHQUFHO1FBQ1QsTUFBTSxFQUFFLDREQUE0RDtLQUNyRSxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxLQUFLLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDaEIsT0FBTyxFQUFFLE9BQU87UUFDaEIsSUFBSSxFQUFFLEdBQUc7UUFDVCxNQUFNLEVBQUUsNERBQTREO0tBQ3JFLENBQUM7Q0FDTSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0LmNvcmUgdmVyc2lvbjogNC4wLjFcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L2F1ZGl0LXNvdXJjZS10eXBlfDQuMC4xXHJcblxyXG5pbXBvcnQgeyBDb2RpbmcgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiBUaGUgdHlwZSBvZiBwcm9jZXNzIHdoZXJlIHRoZSBhdWRpdCBldmVudCBvcmlnaW5hdGVkIGZyb20uXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgQXVkaXRTb3VyY2VUeXBlQ29kaW5ncyA9IHtcclxuICAvKipcclxuICAgKiAxOiBFbmQtdXNlciBkaXNwbGF5IGRldmljZSwgZGlhZ25vc3RpYyBkZXZpY2UuXHJcbiAgICovXHJcbiAgVXNlckRldmljZTogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIlVzZXIgRGV2aWNlXCIsXHJcbiAgICBjb2RlOiBcIjFcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL3NlY3VyaXR5LXNvdXJjZS10eXBlXCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogMjogRGF0YSBhY3F1aXNpdGlvbiBkZXZpY2Ugb3IgaW5zdHJ1bWVudC5cclxuICAgKi9cclxuICBEYXRhSW50ZXJmYWNlOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiRGF0YSBJbnRlcmZhY2VcIixcclxuICAgIGNvZGU6IFwiMlwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vc2VjdXJpdHktc291cmNlLXR5cGVcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiAzOiBXZWIgU2VydmVyIHByb2Nlc3Mgb3IgdGhyZWFkLlxyXG4gICAqL1xyXG4gIFdlYlNlcnZlcjogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIldlYiBTZXJ2ZXJcIixcclxuICAgIGNvZGU6IFwiM1wiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vc2VjdXJpdHktc291cmNlLXR5cGVcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiA0OiBBcHBsaWNhdGlvbiBTZXJ2ZXIgcHJvY2VzcyBvciB0aHJlYWQuXHJcbiAgICovXHJcbiAgQXBwbGljYXRpb25TZXJ2ZXI6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJBcHBsaWNhdGlvbiBTZXJ2ZXJcIixcclxuICAgIGNvZGU6IFwiNFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vc2VjdXJpdHktc291cmNlLXR5cGVcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiA1OiBEYXRhYmFzZSBTZXJ2ZXIgcHJvY2VzcyBvciB0aHJlYWQuXHJcbiAgICovXHJcbiAgRGF0YWJhc2VTZXJ2ZXI6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJEYXRhYmFzZSBTZXJ2ZXJcIixcclxuICAgIGNvZGU6IFwiNVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vc2VjdXJpdHktc291cmNlLXR5cGVcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiA2OiBTZWN1cml0eSBzZXJ2ZXIsIGUuZy4gYSBkb21haW4gY29udHJvbGxlci5cclxuICAgKi9cclxuICBTZWN1cml0eVNlcnZlcjogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIlNlY3VyaXR5IFNlcnZlclwiLFxyXG4gICAgY29kZTogXCI2XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9zZWN1cml0eS1zb3VyY2UtdHlwZVwiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIDc6IElTTyBsZXZlbCAxLTMgbmV0d29yayBjb21wb25lbnQuXHJcbiAgICovXHJcbiAgTmV0d29ya0RldmljZTogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIk5ldHdvcmsgRGV2aWNlXCIsXHJcbiAgICBjb2RlOiBcIjdcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL3NlY3VyaXR5LXNvdXJjZS10eXBlXCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogODogSVNPIGxldmVsIDQtNiBvcGVyYXRpbmcgc29mdHdhcmUuXHJcbiAgICovXHJcbiAgTmV0d29ya1JvdXRlcjogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIk5ldHdvcmsgUm91dGVyXCIsXHJcbiAgICBjb2RlOiBcIjhcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL3NlY3VyaXR5LXNvdXJjZS10eXBlXCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogOTogT3RoZXIga2luZCBvZiBkZXZpY2UgKGRlZmluZWQgYnkgRElDT00sIGJ1dCBzb21lIG90aGVyIGNvZGUvc3lzdGVtIGNhbiBiZSB1c2VkKS5cclxuICAgKi9cclxuICBPdGhlcjogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIk90aGVyXCIsXHJcbiAgICBjb2RlOiBcIjlcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL3NlY3VyaXR5LXNvdXJjZS10eXBlXCIsXHJcbiAgfSksXHJcbn0gYXMgY29uc3Q7XHJcblxyXG4vKipcclxuICogVGhlIHR5cGUgb2YgcHJvY2VzcyB3aGVyZSB0aGUgYXVkaXQgZXZlbnQgb3JpZ2luYXRlZCBmcm9tLlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgQXVkaXRTb3VyY2VUeXBlQ29kaW5nVHlwZSA9IHR5cGVvZiBBdWRpdFNvdXJjZVR5cGVDb2RpbmdzO1xyXG4iXX0=