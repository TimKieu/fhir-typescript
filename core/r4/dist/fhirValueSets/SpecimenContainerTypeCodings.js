// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/specimen-container-type|4.0.1
import { Coding } from '../fhir/Coding.js';
/**
 * Checks on the patient prior specimen collection. All SNOMED CT concepts descendants of 706041008 |Device for body fluid and tissue collection/transfer/processing (physical object)|
 */
export const SpecimenContainerTypeCodings = {
    /**
     * Code: 22566001
     */
    CytologyBrushDevice: new Coding({
        display: "Cytology brush, device",
        code: "22566001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 463568005
     */
    PleuralDrainageSystemFluidCollector: new Coding({
        display: "Pleural drainage system fluid collector",
        code: "463568005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 464527005
     */
    PaediatricBloodDonorSet: new Coding({
        display: "Paediatric blood donor set",
        code: "464527005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 464573007
     */
    AssistedReproductionNeedleReprocessed: new Coding({
        display: "Assisted reproduction needle, reprocessed",
        code: "464573007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 464784003
     */
    AssistedReproductionCatheter: new Coding({
        display: "Assisted reproduction catheter",
        code: "464784003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 464946000
     */
    AssistedReproductionNeedleSingleUse: new Coding({
        display: "Assisted reproduction needle, single-use",
        code: "464946000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 465046006
     */
    AssistedReproductionCryotube: new Coding({
        display: "Assisted reproduction cryotube",
        code: "465046006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 465091002
     */
    TissueExtractionBag: new Coding({
        display: "Tissue extraction bag",
        code: "465091002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 465141003
     */
    OtologicalBoneParticleCollector: new Coding({
        display: "Otological bone particle collector",
        code: "465141003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 465487000
     */
    RigidEndotherapyCytologyBrushReusable: new Coding({
        display: "Rigid endotherapy cytology brush, reusable",
        code: "465487000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 466164006
     */
    RigidEndotherapyCytologyBrushSingleUse: new Coding({
        display: "Rigid endotherapy cytology brush, single-use",
        code: "466164006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 466421006
     */
    Viscerotome: new Coding({
        display: "Viscerotome",
        code: "466421006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 466447002
     */
    BloodProcessingAutotransfusionSystemContainer: new Coding({
        display: "Blood-processing autotransfusion system container",
        code: "466447002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 466623002
     */
    BloodGasSyringeNeedleSodiumHeparin: new Coding({
        display: "Blood gas syringe/needle, sodium heparin",
        code: "466623002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 466637006
     */
    BloodDonorSetQuadPack: new Coding({
        display: "Blood donor set, quad-pack",
        code: "466637006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 466704003
     */
    BloodCollectionFatContentReductionDevice: new Coding({
        display: "Blood collection/fat content reduction device",
        code: "466704003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 466844004
     */
    BloodDonorSetDoublePack: new Coding({
        display: "Blood donor set, double-pack",
        code: "466844004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 466898000
     */
    BloodDonorSetQuinPack: new Coding({
        display: "Blood donor set, quin-pack",
        code: "466898000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 466930006
     */
    BloodDonorSetTriplePack: new Coding({
        display: "Blood donor set, triple-pack",
        code: "466930006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 467030004
     */
    BloodGasSyringeNeedleLithiumHeparin: new Coding({
        display: "Blood gas syringe/needle, lithium heparin",
        code: "467030004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 467131002
     */
    BloodAutotransfusionSystemTubing: new Coding({
        display: "Blood autotransfusion system tubing",
        code: "467131002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 467132009
     */
    BloodDonorSetSinglePack: new Coding({
        display: "Blood donor set, single-pack",
        code: "467132009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 467141004
     */
    BloodDonorSetManyPack: new Coding({
        display: "Blood donor set, many-pack",
        code: "467141004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 467182004
     */
    CervicalCytologyInflatableCollector: new Coding({
        display: "Cervical cytology inflatable collector",
        code: "467182004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 467330006
     */
    AdiposeTissueStemCellRecoveryUnit: new Coding({
        display: "Adipose tissue stem cell recovery unit",
        code: "467330006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 467431009
     */
    AbortionSuctionSystemCollectionBottle: new Coding({
        display: "Abortion suction system collection bottle",
        code: "467431009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 467499008
     */
    ChorionicVillusSamplingCatheter: new Coding({
        display: "Chorionic villus sampling catheter",
        code: "467499008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 467647004
     */
    CryostatMicrotome: new Coding({
        display: "Cryostat microtome",
        code: "467647004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 467697000
     */
    CytologyScraperSingleUse: new Coding({
        display: "Cytology scraper, single-use",
        code: "467697000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 467743009
     */
    BoneMarrowExplantNeedle: new Coding({
        display: "Bone marrow explant needle",
        code: "467743009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 467967005
     */
    CytologyScraperReusable: new Coding({
        display: "Cytology scraper, reusable",
        code: "467967005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 467989009
     */
    CapillaryBloodCollectionTubeNoAdditive: new Coding({
        display: "Capillary blood collection tube, no-additive",
        code: "467989009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 468076003
     */
    BoneMarrowCollectionTransfusionSet: new Coding({
        display: "Bone marrow collection/transfusion set",
        code: "468076003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 468131000
     */
    CervicalCytologyBrush: new Coding({
        display: "Cervical cytology brush",
        code: "468131000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 468200003
     */
    EpididymalFluidAspirationCatheter: new Coding({
        display: "Epididymal fluid aspiration catheter",
        code: "468200003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 468981005
     */
    DentalBoneParticleCollector: new Coding({
        display: "Dental bone particle collector",
        code: "468981005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 468999002
     */
    EndometrialCytologyBrush: new Coding({
        display: "Endometrial cytology brush",
        code: "468999002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 469287008
     */
    IntrauterineSecretionScoop: new Coding({
        display: "Intrauterine secretion scoop",
        code: "469287008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 469322002
     */
    IntravascularCatheterEndoluminalBrush: new Coding({
        display: "Intravascular catheter endoluminal brush",
        code: "469322002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 469454007
     */
    IntrauterineScoop: new Coding({
        display: "Intrauterine scoop",
        code: "469454007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 469822008
     */
    FlexibleEndotherapyCytologyBrushSingleUse: new Coding({
        display: "Flexible endotherapy cytology brush, single-use",
        code: "469822008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 470114007
     */
    FlexibleEndotherapyCytologyBrushReusable: new Coding({
        display: "Flexible endotherapy cytology brush, reusable",
        code: "470114007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 470547006
     */
    GeneralPurposeCytologyBrush: new Coding({
        display: "General-purpose cytology brush",
        code: "470547006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 470597005
     */
    GastroUrologicalScoop: new Coding({
        display: "Gastro-urological scoop",
        code: "470597005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 700855008
     */
    TissueFluidCollectionBagSterile: new Coding({
        display: "Tissue/fluid collection bag, sterile",
        code: "700855008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 700905004
     */
    SpecimenContainerMailerInsulated: new Coding({
        display: "Specimen container mailer, insulated",
        code: "700905004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 700906003
     */
    SpecimenContainerMailerNonInsulated: new Coding({
        display: "Specimen container mailer, non-insulated",
        code: "700906003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 700945008
     */
    BloodCellFreezeThawSystemSet: new Coding({
        display: "Blood cell freeze/thaw system set",
        code: "700945008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 700955007
     */
    BloodCollectionLuerSyringeAdaptor: new Coding({
        display: "Blood collection Luer-syringe adaptor",
        code: "700955007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 700956008
     */
    BloodCollectionNeedleBasic: new Coding({
        display: "Blood collection needle, basic",
        code: "700956008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 700957004
     */
    BloodTissueStorageCultureContainer: new Coding({
        display: "Blood/tissue storage/culture container",
        code: "700957004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 701394007
     */
    GeneralSpecimenReceptacleTransportContainer: new Coding({
        display: "General specimen receptacle transport container",
        code: "701394007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 701516009
     */
    EvacuatedBloodCollectionTubeTransportContainer: new Coding({
        display: "Evacuated blood collection tube transport container",
        code: "701516009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 701720006
     */
    TissueFluidCollectionBagNonSterile: new Coding({
        display: "Tissue/fluid collection bag, non-sterile",
        code: "701720006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 702120003
     */
    BloodCollectionLuerAdaptor: new Coding({
        display: "Blood collection Luer adaptor",
        code: "702120003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 702223006
     */
    SputumSpecimenContainer: new Coding({
        display: "Sputum specimen container",
        code: "702223006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 702224000
     */
    MidstreamUrineSpecimenContainer: new Coding({
        display: "Midstream urine specimen container",
        code: "702224000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 702232008
     */
    SweatSpecimenContainerIVD: new Coding({
        display: "Sweat specimen container IVD",
        code: "702232008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 702244006
     */
    SterileUrineSpecimenContainer: new Coding({
        display: "Sterile urine specimen container",
        code: "702244006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 702256007
     */
    NonEvacuatedBloodCollectionTubeNoAdditive: new Coding({
        display: "Non-evacuated blood collection tube, no additive",
        code: "702256007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 702264001
     */
    NonSterileUrineSpecimenContainerIVD: new Coding({
        display: "Non-sterile urine specimen container IVD",
        code: "702264001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 702268003
     */
    GeneralSpecimenContainerNoAdditiveNonSterile: new Coding({
        display: "General specimen container, no additive, non-sterile",
        code: "702268003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 702269006
     */
    GeneralSpecimenContainerNoAdditiveSterile: new Coding({
        display: "General specimen container, no additive, sterile",
        code: "702269006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 702275002
     */
    MicrocapillaryBloodCollectionTubeAmmoniumHeparin: new Coding({
        display: "Microcapillary blood collection tube, ammonium heparin",
        code: "702275002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 702276001
     */
    MicrocapillaryBloodCollectionTubeK2EDTA: new Coding({
        display: "Microcapillary blood collection tube, K2EDTA",
        code: "702276001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 702277005
     */
    MicrocapillaryBloodCollectionTubeNoAdditive: new Coding({
        display: "Microcapillary blood collection tube, no additive",
        code: "702277005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 702278000
     */
    EvacuatedBloodCollectionTubeNoAdditiveMetalFree: new Coding({
        display: "Evacuated blood collection tube, no additive/metal-free",
        code: "702278000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 702279008
     */
    EvacuatedBloodCollectionTubeGelSeparator: new Coding({
        display: "Evacuated blood collection tube, gel separator",
        code: "702279008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 702280006
     */
    EvacuatedBloodCollectionTubeRNAStabilizer: new Coding({
        display: "Evacuated blood collection tube, RNA stabilizer",
        code: "702280006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 702281005
     */
    EvacuatedBloodCollectionTubeThrombinClotActivatorGelSeparator: new Coding({
        display: "Evacuated blood collection tube, thrombin/clot activator/gel separator",
        code: "702281005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 702282003
     */
    NonEvacuatedBloodCollectionTubeEDTA: new Coding({
        display: "Non-evacuated blood collection tube, EDTA",
        code: "702282003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 702283008
     */
    NonEvacuatedBloodCollectionTubeGelSeparator: new Coding({
        display: "Non-evacuated blood collection tube, gel separator",
        code: "702283008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 702284002
     */
    NonEvacuatedBloodCollectionTubeLithiumHeparin: new Coding({
        display: "Non-evacuated blood collection tube, lithium heparin",
        code: "702284002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 702285001
     */
    NonEvacuatedBloodCollectionTubeLithiumHeparinGelSeparatorSterile: new Coding({
        display: "Non-evacuated blood collection tube, lithium heparin/gel separator, sterile",
        code: "702285001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 702286000
     */
    NonEvacuatedBloodCollectionTubeNaEDTASodiumFluoride: new Coding({
        display: "Non-evacuated blood collection tube, NaEDTA/sodium fluoride",
        code: "702286000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 702287009
     */
    NonEvacuatedBloodCollectionTubePotassiumOxalateSodiumFluoride: new Coding({
        display: "Non-evacuated blood collection tube, potassium oxalate/sodium fluoride",
        code: "702287009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 702288004
     */
    EvacuatedUrineSpecimenContainerBoricAcidH3BO3SodiumFormate: new Coding({
        display: "Evacuated urine specimen container, boric acid (H3BO3)/sodium formate",
        code: "702288004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 702289007
     */
    EvacuatedUrineSpecimenContainerEthylParabenSodiumPorpionateChlorhexidine: new Coding({
        display: "Evacuated urine specimen container, ethyl paraben/sodium porpionate/chlorhexidine",
        code: "702289007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 702290003
     */
    CervicalCytologyMicroscopySlide: new Coding({
        display: "Cervical cytology microscopy slide",
        code: "702290003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 702292006
     */
    EvacuatedBloodCollectionTubeK3EDTASodiumFluoride: new Coding({
        display: "Evacuated blood collection tube , K3EDTA/sodium fluoride",
        code: "702292006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 702293001
     */
    EvacuatedBloodCollectionTubeK2EDTAAprotinin: new Coding({
        display: "Evacuated blood collection tube, K2EDTA/aprotinin",
        code: "702293001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 702294007
     */
    SyringeBloodCollectionTubeTransfer: new Coding({
        display: "Syringe-blood collection tube transfer",
        code: "702294007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 702295008
     */
    NonEvacuatedBloodCollectionTubeClotActivatorGelSeparator: new Coding({
        display: "Non-evacuated blood collection tube, clot activator/gel separator",
        code: "702295008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 702296009
     */
    NonEvacuatedBloodCollectionTubeSodiumCitrate: new Coding({
        display: "Non-evacuated blood collection tube, sodium citrate",
        code: "702296009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 702297000
     */
    NonEvacuatedBloodCollectionTubeClotActivator: new Coding({
        display: "Non-evacuated blood collection tube, clot activator",
        code: "702297000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 702298005
     */
    NonEvacuatedBloodCollectionTubeK3EDTA: new Coding({
        display: "Non-evacuated blood collection tube, K3EDTA",
        code: "702298005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 702299002
     */
    NonEvacuatedBloodCollectionTubeK2EDTA: new Coding({
        display: "Non-evacuated blood collection tube, K2EDTA",
        code: "702299002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 702300005
     */
    NonEvacuatedBloodCollectionTubeLithiumHeparinGelSeparatorNonSterile: new Coding({
        display: "Non-evacuated blood collection tube, lithium heparin/gel separator, non-sterile",
        code: "702300005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 702301009
     */
    MicrocapillaryBloodCollectionFunnel: new Coding({
        display: "Microcapillary blood collection funnel",
        code: "702301009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 702302002
     */
    EvacuatedUrineSpecimenContainerBoricAcidH3BO3: new Coding({
        display: "Evacuated urine specimen container, boric acid (H3BO3)",
        code: "702302002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 702303007
     */
    EvacuatedUrineSpecimenContainerMultiplePreservative: new Coding({
        display: "Evacuated urine specimen container, multiple preservative",
        code: "702303007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 702304001
     */
    MicrocapillaryBloodTransferTubeClotActivator: new Coding({
        display: "Microcapillary blood transfer tube, clot activator",
        code: "702304001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 702305000
     */
    MicrocapillaryBloodTransferTubeSodiumFluoride: new Coding({
        display: "Microcapillary blood transfer tube, sodium fluoride",
        code: "702305000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 702306004
     */
    MicrocapillaryBloodTransferTubeEDTA: new Coding({
        display: "Microcapillary blood transfer tube, EDTA",
        code: "702306004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 702307008
     */
    MicrocapillaryBloodTransferTubeIVDHeparin: new Coding({
        display: "Microcapillary blood transfer tube IVD, heparin",
        code: "702307008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 702308003
     */
    EvacuatedUrineSpecimenContainerIVDNoAdditive: new Coding({
        display: "Evacuated urine specimen container IVD, no additive",
        code: "702308003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 702309006
     */
    SalivaSpecimenContainerIVDNoAdditive: new Coding({
        display: "Saliva specimen container IVD, no additive",
        code: "702309006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 702310001
     */
    EvacuatedSalivaSpecimenContainerIVDSodiumAzide: new Coding({
        display: "Evacuated saliva specimen container IVD, sodium azide",
        code: "702310001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 704866005
     */
    OrthopedicBoneParticleCollectorReusable: new Coding({
        display: "Orthopedic bone particle collector, reusable",
        code: "704866005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 704921002
     */
    HemoperfusionTubingSet: new Coding({
        display: "Hemoperfusion tubing set",
        code: "704921002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 706042001
     */
    ClinicalSamplingBrush: new Coding({
        display: "Clinical sampling brush",
        code: "706042001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 706044000
     */
    EndotherapyCytologyBrush: new Coding({
        display: "Endotherapy cytology brush",
        code: "706044000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 706045004
     */
    BoneParticleCollector: new Coding({
        display: "Bone particle collector",
        code: "706045004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 706046003
     */
    SpecimenReceptacle: new Coding({
        display: "Specimen receptacle",
        code: "706046003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 706047007
     */
    FecalSpecimenContainer: new Coding({
        display: "Fecal specimen container",
        code: "706047007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 706048002
     */
    BloodSpecimenReceptacle: new Coding({
        display: "Blood specimen receptacle",
        code: "706048002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 706049005
     */
    BloodTube: new Coding({
        display: "Blood tube",
        code: "706049005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 706050005
     */
    MicrocapillaryBloodCollectionTube: new Coding({
        display: "Microcapillary blood collection tube",
        code: "706050005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 706051009
     */
    NonEvacuatedBloodCollectionTube: new Coding({
        display: "Non-evacuated blood collection tube",
        code: "706051009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 706052002
     */
    EvacuatedBloodCollectionTube: new Coding({
        display: "Evacuated blood collection tube",
        code: "706052002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 706053007
     */
    GeneralSpecimenContainer: new Coding({
        display: "General specimen container",
        code: "706053007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 706054001
     */
    UrineSpecimenContainer: new Coding({
        display: "Urine specimen container",
        code: "706054001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 706055000
     */
    VAL24HourUrineSpecimenContainer: new Coding({
        display: "24-hour urine specimen container",
        code: "706055000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 706056004
     */
    EvacuatedUrineSpecimenContainer: new Coding({
        display: "Evacuated urine specimen container",
        code: "706056004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 706057008
     */
    CytologySpecimenContainer: new Coding({
        display: "Cytology specimen container",
        code: "706057008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 706058003
     */
    SecretorySpecimenContainer: new Coding({
        display: "Secretory specimen container",
        code: "706058003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 706067003
     */
    BloodCollectionTransferDevice: new Coding({
        display: "Blood collection/transfer device",
        code: "706067003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 706070004
     */
    BloodDonorSet: new Coding({
        display: "Blood donor set",
        code: "706070004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 706071000
     */
    SpecimenReceptacleTransportContainer: new Coding({
        display: "Specimen receptacle transport container",
        code: "706071000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 712485008
     */
    AutologousBloodCollectionTube: new Coding({
        display: "Autologous blood collection tube",
        code: "712485008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 713951005
     */
    AdiposeTissueStemCellRecoveryUnitUltrasonic: new Coding({
        display: "Adipose tissue stem cell recovery unit, ultrasonic",
        code: "713951005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 714731008
     */
    BloodComponentSeparator: new Coding({
        display: "Blood component separator",
        code: "714731008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 718301008
     */
    UrologicalFluidFunnelSterile: new Coding({
        display: "Urological fluid funnel, sterile",
        code: "718301008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 718302001
     */
    UrologicalFluidFunnelNonSterile: new Coding({
        display: "Urological fluid funnel, non-sterile",
        code: "718302001",
        system: "http://snomed.info/sct",
    }),
};
//# sourceMappingURL=data:application/json;base64,