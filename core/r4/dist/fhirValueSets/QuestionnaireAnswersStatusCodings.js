// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/questionnaire-answers-status|4.0.1
import { Coding } from '../fhir/Coding.js';
/**
 * Lifecycle status of the questionnaire response.
 */
export const QuestionnaireAnswersStatusCodings = {
    /**
     * amended: This QuestionnaireResponse has been filled out with answers, then marked as complete, yet changes or additions have been made to it afterwards.
     */
    Amended: new Coding({
        display: "Amended",
        code: "amended",
        system: "http://hl7.org/fhir/questionnaire-answers-status",
    }),
    /**
     * completed: This QuestionnaireResponse has been filled out with answers and the current content is regarded as definitive.
     */
    Completed: new Coding({
        display: "Completed",
        code: "completed",
        system: "http://hl7.org/fhir/questionnaire-answers-status",
    }),
    /**
     * entered-in-error: This QuestionnaireResponse was entered in error and voided.
     */
    EnteredInError: new Coding({
        display: "Entered in Error",
        code: "entered-in-error",
        system: "http://hl7.org/fhir/questionnaire-answers-status",
    }),
    /**
     * in-progress: This QuestionnaireResponse has been partially filled out with answers but changes or additions are still expected to be made to it.
     */
    InProgress: new Coding({
        display: "In Progress",
        code: "in-progress",
        system: "http://hl7.org/fhir/questionnaire-answers-status",
    }),
    /**
     * stopped: This QuestionnaireResponse has been partially filled out with answers but has been abandoned. It is unknown whether changes or additions are expected to be made to it.
     */
    Stopped: new Coding({
        display: "Stopped",
        code: "stopped",
        system: "http://hl7.org/fhir/questionnaire-answers-status",
    }),
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUXVlc3Rpb25uYWlyZUFuc3dlcnNTdGF0dXNDb2RpbmdzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9RdWVzdGlvbm5haXJlQW5zd2Vyc1N0YXR1c0NvZGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLCtDQUErQztBQUMvQyxrQ0FBa0M7QUFDbEMsaUZBQWlGO0FBRWpGLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQTtBQUUxQzs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLGlDQUFpQyxHQUFHO0lBQy9DOztPQUVHO0lBQ0gsT0FBTyxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ2xCLE9BQU8sRUFBRSxTQUFTO1FBQ2xCLElBQUksRUFBRSxTQUFTO1FBQ2YsTUFBTSxFQUFFLGtEQUFrRDtLQUMzRCxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxTQUFTLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDcEIsT0FBTyxFQUFFLFdBQVc7UUFDcEIsSUFBSSxFQUFFLFdBQVc7UUFDakIsTUFBTSxFQUFFLGtEQUFrRDtLQUMzRCxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxjQUFjLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDekIsT0FBTyxFQUFFLGtCQUFrQjtRQUMzQixJQUFJLEVBQUUsa0JBQWtCO1FBQ3hCLE1BQU0sRUFBRSxrREFBa0Q7S0FDM0QsQ0FBQztJQUNGOztPQUVHO0lBQ0gsVUFBVSxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ3JCLE9BQU8sRUFBRSxhQUFhO1FBQ3RCLElBQUksRUFBRSxhQUFhO1FBQ25CLE1BQU0sRUFBRSxrREFBa0Q7S0FDM0QsQ0FBQztJQUNGOztPQUVHO0lBQ0gsT0FBTyxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ2xCLE9BQU8sRUFBRSxTQUFTO1FBQ2xCLElBQUksRUFBRSxTQUFTO1FBQ2YsTUFBTSxFQUFFLGtEQUFrRDtLQUMzRCxDQUFDO0NBQ00sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNC5jb3JlIHZlcnNpb246IDQuMC4xXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9xdWVzdGlvbm5haXJlLWFuc3dlcnMtc3RhdHVzfDQuMC4xXHJcblxyXG5pbXBvcnQgeyBDb2RpbmcgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiBMaWZlY3ljbGUgc3RhdHVzIG9mIHRoZSBxdWVzdGlvbm5haXJlIHJlc3BvbnNlLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IFF1ZXN0aW9ubmFpcmVBbnN3ZXJzU3RhdHVzQ29kaW5ncyA9IHtcclxuICAvKipcclxuICAgKiBhbWVuZGVkOiBUaGlzIFF1ZXN0aW9ubmFpcmVSZXNwb25zZSBoYXMgYmVlbiBmaWxsZWQgb3V0IHdpdGggYW5zd2VycywgdGhlbiBtYXJrZWQgYXMgY29tcGxldGUsIHlldCBjaGFuZ2VzIG9yIGFkZGl0aW9ucyBoYXZlIGJlZW4gbWFkZSB0byBpdCBhZnRlcndhcmRzLlxyXG4gICAqL1xyXG4gIEFtZW5kZWQ6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJBbWVuZGVkXCIsXHJcbiAgICBjb2RlOiBcImFtZW5kZWRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3F1ZXN0aW9ubmFpcmUtYW5zd2Vycy1zdGF0dXNcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBjb21wbGV0ZWQ6IFRoaXMgUXVlc3Rpb25uYWlyZVJlc3BvbnNlIGhhcyBiZWVuIGZpbGxlZCBvdXQgd2l0aCBhbnN3ZXJzIGFuZCB0aGUgY3VycmVudCBjb250ZW50IGlzIHJlZ2FyZGVkIGFzIGRlZmluaXRpdmUuXHJcbiAgICovXHJcbiAgQ29tcGxldGVkOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiQ29tcGxldGVkXCIsXHJcbiAgICBjb2RlOiBcImNvbXBsZXRlZFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcXVlc3Rpb25uYWlyZS1hbnN3ZXJzLXN0YXR1c1wiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIGVudGVyZWQtaW4tZXJyb3I6IFRoaXMgUXVlc3Rpb25uYWlyZVJlc3BvbnNlIHdhcyBlbnRlcmVkIGluIGVycm9yIGFuZCB2b2lkZWQuXHJcbiAgICovXHJcbiAgRW50ZXJlZEluRXJyb3I6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJFbnRlcmVkIGluIEVycm9yXCIsXHJcbiAgICBjb2RlOiBcImVudGVyZWQtaW4tZXJyb3JcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3F1ZXN0aW9ubmFpcmUtYW5zd2Vycy1zdGF0dXNcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBpbi1wcm9ncmVzczogVGhpcyBRdWVzdGlvbm5haXJlUmVzcG9uc2UgaGFzIGJlZW4gcGFydGlhbGx5IGZpbGxlZCBvdXQgd2l0aCBhbnN3ZXJzIGJ1dCBjaGFuZ2VzIG9yIGFkZGl0aW9ucyBhcmUgc3RpbGwgZXhwZWN0ZWQgdG8gYmUgbWFkZSB0byBpdC5cclxuICAgKi9cclxuICBJblByb2dyZXNzOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiSW4gUHJvZ3Jlc3NcIixcclxuICAgIGNvZGU6IFwiaW4tcHJvZ3Jlc3NcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3F1ZXN0aW9ubmFpcmUtYW5zd2Vycy1zdGF0dXNcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBzdG9wcGVkOiBUaGlzIFF1ZXN0aW9ubmFpcmVSZXNwb25zZSBoYXMgYmVlbiBwYXJ0aWFsbHkgZmlsbGVkIG91dCB3aXRoIGFuc3dlcnMgYnV0IGhhcyBiZWVuIGFiYW5kb25lZC4gSXQgaXMgdW5rbm93biB3aGV0aGVyIGNoYW5nZXMgb3IgYWRkaXRpb25zIGFyZSBleHBlY3RlZCB0byBiZSBtYWRlIHRvIGl0LlxyXG4gICAqL1xyXG4gIFN0b3BwZWQ6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJTdG9wcGVkXCIsXHJcbiAgICBjb2RlOiBcInN0b3BwZWRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3F1ZXN0aW9ubmFpcmUtYW5zd2Vycy1zdGF0dXNcIixcclxuICB9KSxcclxufSBhcyBjb25zdDtcclxuXHJcbi8qKlxyXG4gKiBMaWZlY3ljbGUgc3RhdHVzIG9mIHRoZSBxdWVzdGlvbm5haXJlIHJlc3BvbnNlLlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgUXVlc3Rpb25uYWlyZUFuc3dlcnNTdGF0dXNDb2RpbmdUeXBlID0gdHlwZW9mIFF1ZXN0aW9ubmFpcmVBbnN3ZXJzU3RhdHVzQ29kaW5ncztcclxuIl19