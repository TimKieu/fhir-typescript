// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/codesystem-hierarchy-meaning|4.0.1
/**
 * The meaning of the hierarchy of concepts in a code system.
 */
export const CodesystemHierarchyMeaningCodes = {
    /**
     * classified-with: Child concepts in the hierarchy may have only one parent, and there is a presumption that the code system is a "closed world" meaning all things must be in the hierarchy. This results in concepts such as "not otherwise classified.".
     */
    ClassifiedWith: "classified-with",
    /**
     * grouped-by: No particular relationship between the concepts can be assumed, except what can be determined by inspection of the definitions of the elements (possible reasons to use this: importing from a source where this is not defined, or where various parts of the hierarchy have different meanings).
     */
    GroupedBy: "grouped-by",
    /**
     * is-a: A hierarchy where the child concepts have an IS-A relationship with the parents - that is, all the properties of the parent are also true for its child concepts. Not that is-a is a property of the concepts, so additional subsumption relationships may be defined using properties or the [subsumes](extension-codesystem-subsumes.html) extension.
     */
    IsA: "is-a",
    /**
     * part-of: Child elements list the individual parts of a composite whole (e.g. body site).
     */
    PartOf: "part-of",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29kZXN5c3RlbUhpZXJhcmNoeU1lYW5pbmdDb2Rlcy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvQ29kZXN5c3RlbUhpZXJhcmNoeU1lYW5pbmdDb2Rlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyxpRkFBaUY7QUFFakY7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSwrQkFBK0IsR0FBRztJQUM3Qzs7T0FFRztJQUNILGNBQWMsRUFBRSxpQkFBaUI7SUFDakM7O09BRUc7SUFDSCxTQUFTLEVBQUUsWUFBWTtJQUN2Qjs7T0FFRztJQUNILEdBQUcsRUFBRSxNQUFNO0lBQ1g7O09BRUc7SUFDSCxNQUFNLEVBQUUsU0FBUztDQUNULENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjQuY29yZSB2ZXJzaW9uOiA0LjAuMVxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvY29kZXN5c3RlbS1oaWVyYXJjaHktbWVhbmluZ3w0LjAuMVxyXG5cclxuLyoqXHJcbiAqIFRoZSBtZWFuaW5nIG9mIHRoZSBoaWVyYXJjaHkgb2YgY29uY2VwdHMgaW4gYSBjb2RlIHN5c3RlbS5cclxuICovXHJcbmV4cG9ydCBjb25zdCBDb2Rlc3lzdGVtSGllcmFyY2h5TWVhbmluZ0NvZGVzID0ge1xyXG4gIC8qKlxyXG4gICAqIGNsYXNzaWZpZWQtd2l0aDogQ2hpbGQgY29uY2VwdHMgaW4gdGhlIGhpZXJhcmNoeSBtYXkgaGF2ZSBvbmx5IG9uZSBwYXJlbnQsIGFuZCB0aGVyZSBpcyBhIHByZXN1bXB0aW9uIHRoYXQgdGhlIGNvZGUgc3lzdGVtIGlzIGEgXCJjbG9zZWQgd29ybGRcIiBtZWFuaW5nIGFsbCB0aGluZ3MgbXVzdCBiZSBpbiB0aGUgaGllcmFyY2h5LiBUaGlzIHJlc3VsdHMgaW4gY29uY2VwdHMgc3VjaCBhcyBcIm5vdCBvdGhlcndpc2UgY2xhc3NpZmllZC5cIi5cclxuICAgKi9cclxuICBDbGFzc2lmaWVkV2l0aDogXCJjbGFzc2lmaWVkLXdpdGhcIixcclxuICAvKipcclxuICAgKiBncm91cGVkLWJ5OiBObyBwYXJ0aWN1bGFyIHJlbGF0aW9uc2hpcCBiZXR3ZWVuIHRoZSBjb25jZXB0cyBjYW4gYmUgYXNzdW1lZCwgZXhjZXB0IHdoYXQgY2FuIGJlIGRldGVybWluZWQgYnkgaW5zcGVjdGlvbiBvZiB0aGUgZGVmaW5pdGlvbnMgb2YgdGhlIGVsZW1lbnRzIChwb3NzaWJsZSByZWFzb25zIHRvIHVzZSB0aGlzOiBpbXBvcnRpbmcgZnJvbSBhIHNvdXJjZSB3aGVyZSB0aGlzIGlzIG5vdCBkZWZpbmVkLCBvciB3aGVyZSB2YXJpb3VzIHBhcnRzIG9mIHRoZSBoaWVyYXJjaHkgaGF2ZSBkaWZmZXJlbnQgbWVhbmluZ3MpLlxyXG4gICAqL1xyXG4gIEdyb3VwZWRCeTogXCJncm91cGVkLWJ5XCIsXHJcbiAgLyoqXHJcbiAgICogaXMtYTogQSBoaWVyYXJjaHkgd2hlcmUgdGhlIGNoaWxkIGNvbmNlcHRzIGhhdmUgYW4gSVMtQSByZWxhdGlvbnNoaXAgd2l0aCB0aGUgcGFyZW50cyAtIHRoYXQgaXMsIGFsbCB0aGUgcHJvcGVydGllcyBvZiB0aGUgcGFyZW50IGFyZSBhbHNvIHRydWUgZm9yIGl0cyBjaGlsZCBjb25jZXB0cy4gTm90IHRoYXQgaXMtYSBpcyBhIHByb3BlcnR5IG9mIHRoZSBjb25jZXB0cywgc28gYWRkaXRpb25hbCBzdWJzdW1wdGlvbiByZWxhdGlvbnNoaXBzIG1heSBiZSBkZWZpbmVkIHVzaW5nIHByb3BlcnRpZXMgb3IgdGhlIFtzdWJzdW1lc10oZXh0ZW5zaW9uLWNvZGVzeXN0ZW0tc3Vic3VtZXMuaHRtbCkgZXh0ZW5zaW9uLlxyXG4gICAqL1xyXG4gIElzQTogXCJpcy1hXCIsXHJcbiAgLyoqXHJcbiAgICogcGFydC1vZjogQ2hpbGQgZWxlbWVudHMgbGlzdCB0aGUgaW5kaXZpZHVhbCBwYXJ0cyBvZiBhIGNvbXBvc2l0ZSB3aG9sZSAoZS5nLiBib2R5IHNpdGUpLlxyXG4gICAqL1xyXG4gIFBhcnRPZjogXCJwYXJ0LW9mXCIsXHJcbn0gYXMgY29uc3Q7XHJcblxyXG4vKipcclxuICogVGhlIG1lYW5pbmcgb2YgdGhlIGhpZXJhcmNoeSBvZiBjb25jZXB0cyBpbiBhIGNvZGUgc3lzdGVtLlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgQ29kZXN5c3RlbUhpZXJhcmNoeU1lYW5pbmdDb2RlVHlwZSA9IHR5cGVvZiBDb2Rlc3lzdGVtSGllcmFyY2h5TWVhbmluZ0NvZGVzW2tleW9mIHR5cGVvZiBDb2Rlc3lzdGVtSGllcmFyY2h5TWVhbmluZ0NvZGVzXTtcclxuIl19