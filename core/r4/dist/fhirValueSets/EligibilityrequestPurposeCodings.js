// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/eligibilityrequest-purpose|4.0.1
/**
 * A code specifying the types of information being requested.
 */
export const EligibilityrequestPurposeCodings = {
    /**
     * auth-requirements: The prior authorization requirements for the listed, or discovered if specified, converages for the categories of service and/or specifed biling codes are requested.
     */
    CoverageAuthRequirements: {
        display: "Coverage auth-requirements",
        code: "auth-requirements",
        system: "http://hl7.org/fhir/eligibilityrequest-purpose",
    },
    /**
     * benefits: The plan benefits and optionally benefits consumed  for the listed, or discovered if specified, converages are requested.
     */
    CoverageBenefits: {
        display: "Coverage benefits",
        code: "benefits",
        system: "http://hl7.org/fhir/eligibilityrequest-purpose",
    },
    /**
     * discovery: The insurer is requested to report on any coverages which they are aware of in addition to any specifed.
     */
    CoverageDiscovery: {
        display: "Coverage Discovery",
        code: "discovery",
        system: "http://hl7.org/fhir/eligibilityrequest-purpose",
    },
    /**
     * validation: A check that the specified coverages are in-force is requested.
     */
    CoverageValidation: {
        display: "Coverage Validation",
        code: "validation",
        system: "http://hl7.org/fhir/eligibilityrequest-purpose",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRWxpZ2liaWxpdHlyZXF1ZXN0UHVycG9zZUNvZGluZ3MuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL0VsaWdpYmlsaXR5cmVxdWVzdFB1cnBvc2VDb2RpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQiwrQ0FBK0M7QUFDL0Msa0NBQWtDO0FBQ2xDLCtFQUErRTtBQTBCL0U7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxnQ0FBZ0MsR0FBdUM7SUFDbEY7O09BRUc7SUFDSCx3QkFBd0IsRUFBRTtRQUN4QixPQUFPLEVBQUUsNEJBQTRCO1FBQ3JDLElBQUksRUFBRSxtQkFBbUI7UUFDekIsTUFBTSxFQUFFLGdEQUFnRDtLQUN6RDtJQUNEOztPQUVHO0lBQ0gsZ0JBQWdCLEVBQUU7UUFDaEIsT0FBTyxFQUFFLG1CQUFtQjtRQUM1QixJQUFJLEVBQUUsVUFBVTtRQUNoQixNQUFNLEVBQUUsZ0RBQWdEO0tBQ3pEO0lBQ0Q7O09BRUc7SUFDSCxpQkFBaUIsRUFBRTtRQUNqQixPQUFPLEVBQUUsb0JBQW9CO1FBQzdCLElBQUksRUFBRSxXQUFXO1FBQ2pCLE1BQU0sRUFBRSxnREFBZ0Q7S0FDekQ7SUFDRDs7T0FFRztJQUNILGtCQUFrQixFQUFFO1FBQ2xCLE9BQU8sRUFBRSxxQkFBcUI7UUFDOUIsSUFBSSxFQUFFLFlBQVk7UUFDbEIsTUFBTSxFQUFFLGdEQUFnRDtLQUN6RDtDQUNPLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjQuY29yZSB2ZXJzaW9uOiA0LjAuMVxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvZWxpZ2liaWxpdHlyZXF1ZXN0LXB1cnBvc2V8NC4wLjFcclxuXHJcbmltcG9ydCB7IENvZGluZ0FyZ3MgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiBBIGNvZGUgc3BlY2lmeWluZyB0aGUgdHlwZXMgb2YgaW5mb3JtYXRpb24gYmVpbmcgcmVxdWVzdGVkLlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgRWxpZ2liaWxpdHlyZXF1ZXN0UHVycG9zZUNvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogYXV0aC1yZXF1aXJlbWVudHM6IFRoZSBwcmlvciBhdXRob3JpemF0aW9uIHJlcXVpcmVtZW50cyBmb3IgdGhlIGxpc3RlZCwgb3IgZGlzY292ZXJlZCBpZiBzcGVjaWZpZWQsIGNvbnZlcmFnZXMgZm9yIHRoZSBjYXRlZ29yaWVzIG9mIHNlcnZpY2UgYW5kL29yIHNwZWNpZmVkIGJpbGluZyBjb2RlcyBhcmUgcmVxdWVzdGVkLlxyXG4gICAqL1xyXG4gIENvdmVyYWdlQXV0aFJlcXVpcmVtZW50czogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBiZW5lZml0czogVGhlIHBsYW4gYmVuZWZpdHMgYW5kIG9wdGlvbmFsbHkgYmVuZWZpdHMgY29uc3VtZWQgIGZvciB0aGUgbGlzdGVkLCBvciBkaXNjb3ZlcmVkIGlmIHNwZWNpZmllZCwgY29udmVyYWdlcyBhcmUgcmVxdWVzdGVkLlxyXG4gICAqL1xyXG4gIENvdmVyYWdlQmVuZWZpdHM6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogZGlzY292ZXJ5OiBUaGUgaW5zdXJlciBpcyByZXF1ZXN0ZWQgdG8gcmVwb3J0IG9uIGFueSBjb3ZlcmFnZXMgd2hpY2ggdGhleSBhcmUgYXdhcmUgb2YgaW4gYWRkaXRpb24gdG8gYW55IHNwZWNpZmVkLlxyXG4gICAqL1xyXG4gIENvdmVyYWdlRGlzY292ZXJ5OiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIHZhbGlkYXRpb246IEEgY2hlY2sgdGhhdCB0aGUgc3BlY2lmaWVkIGNvdmVyYWdlcyBhcmUgaW4tZm9yY2UgaXMgcmVxdWVzdGVkLlxyXG4gICAqL1xyXG4gIENvdmVyYWdlVmFsaWRhdGlvbjogQ29kaW5nQXJncztcclxufVxyXG5cclxuLyoqXHJcbiAqIEEgY29kZSBzcGVjaWZ5aW5nIHRoZSB0eXBlcyBvZiBpbmZvcm1hdGlvbiBiZWluZyByZXF1ZXN0ZWQuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgRWxpZ2liaWxpdHlyZXF1ZXN0UHVycG9zZUNvZGluZ3M6RWxpZ2liaWxpdHlyZXF1ZXN0UHVycG9zZUNvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogYXV0aC1yZXF1aXJlbWVudHM6IFRoZSBwcmlvciBhdXRob3JpemF0aW9uIHJlcXVpcmVtZW50cyBmb3IgdGhlIGxpc3RlZCwgb3IgZGlzY292ZXJlZCBpZiBzcGVjaWZpZWQsIGNvbnZlcmFnZXMgZm9yIHRoZSBjYXRlZ29yaWVzIG9mIHNlcnZpY2UgYW5kL29yIHNwZWNpZmVkIGJpbGluZyBjb2RlcyBhcmUgcmVxdWVzdGVkLlxyXG4gICAqL1xyXG4gIENvdmVyYWdlQXV0aFJlcXVpcmVtZW50czoge1xyXG4gICAgZGlzcGxheTogXCJDb3ZlcmFnZSBhdXRoLXJlcXVpcmVtZW50c1wiLFxyXG4gICAgY29kZTogXCJhdXRoLXJlcXVpcmVtZW50c1wiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvZWxpZ2liaWxpdHlyZXF1ZXN0LXB1cnBvc2VcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIGJlbmVmaXRzOiBUaGUgcGxhbiBiZW5lZml0cyBhbmQgb3B0aW9uYWxseSBiZW5lZml0cyBjb25zdW1lZCAgZm9yIHRoZSBsaXN0ZWQsIG9yIGRpc2NvdmVyZWQgaWYgc3BlY2lmaWVkLCBjb252ZXJhZ2VzIGFyZSByZXF1ZXN0ZWQuXHJcbiAgICovXHJcbiAgQ292ZXJhZ2VCZW5lZml0czoge1xyXG4gICAgZGlzcGxheTogXCJDb3ZlcmFnZSBiZW5lZml0c1wiLFxyXG4gICAgY29kZTogXCJiZW5lZml0c1wiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvZWxpZ2liaWxpdHlyZXF1ZXN0LXB1cnBvc2VcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIGRpc2NvdmVyeTogVGhlIGluc3VyZXIgaXMgcmVxdWVzdGVkIHRvIHJlcG9ydCBvbiBhbnkgY292ZXJhZ2VzIHdoaWNoIHRoZXkgYXJlIGF3YXJlIG9mIGluIGFkZGl0aW9uIHRvIGFueSBzcGVjaWZlZC5cclxuICAgKi9cclxuICBDb3ZlcmFnZURpc2NvdmVyeToge1xyXG4gICAgZGlzcGxheTogXCJDb3ZlcmFnZSBEaXNjb3ZlcnlcIixcclxuICAgIGNvZGU6IFwiZGlzY292ZXJ5XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9lbGlnaWJpbGl0eXJlcXVlc3QtcHVycG9zZVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogdmFsaWRhdGlvbjogQSBjaGVjayB0aGF0IHRoZSBzcGVjaWZpZWQgY292ZXJhZ2VzIGFyZSBpbi1mb3JjZSBpcyByZXF1ZXN0ZWQuXHJcbiAgICovXHJcbiAgQ292ZXJhZ2VWYWxpZGF0aW9uOiB7XHJcbiAgICBkaXNwbGF5OiBcIkNvdmVyYWdlIFZhbGlkYXRpb25cIixcclxuICAgIGNvZGU6IFwidmFsaWRhdGlvblwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvZWxpZ2liaWxpdHlyZXF1ZXN0LXB1cnBvc2VcIixcclxuICB9LFxyXG59IGFzIGNvbnN0O1xyXG4iXX0=