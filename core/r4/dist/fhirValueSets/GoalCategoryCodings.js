// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/goal-category|4.0.1
import { Coding } from '../fhir/Coding.js';
/**
 * Example codes for grouping goals to use for filtering or presentation.
 */
export const GoalCategoryCodings = {
    /**
     * behavioral: Goals related to the manner in which the subject acts.
     */
    Behavioral: new Coding({
        display: "Behavioral",
        code: "behavioral",
        system: "http://terminology.hl7.org/CodeSystem/goal-category",
    }),
    /**
     * dietary: Goals related to the consumption of food and/or beverages.
     */
    Dietary: new Coding({
        display: "Dietary",
        code: "dietary",
        system: "http://terminology.hl7.org/CodeSystem/goal-category",
    }),
    /**
     * nursing: Goals related to the practice of nursing or established by nurses.
     */
    Nursing: new Coding({
        display: "Nursing",
        code: "nursing",
        system: "http://terminology.hl7.org/CodeSystem/goal-category",
    }),
    /**
     * physiotherapy: Goals related to the mobility and/or motor capability of the subject.
     */
    Physiotherapy: new Coding({
        display: "Physiotherapy",
        code: "physiotherapy",
        system: "http://terminology.hl7.org/CodeSystem/goal-category",
    }),
    /**
     * safety: Goals related to the personal protection of the subject.
     */
    Safety: new Coding({
        display: "Safety",
        code: "safety",
        system: "http://terminology.hl7.org/CodeSystem/goal-category",
    }),
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR29hbENhdGVnb3J5Q29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvR29hbENhdGVnb3J5Q29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyxrRUFBa0U7QUFFbEUsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLG1CQUFtQixDQUFBO0FBRTFDOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sbUJBQW1CLEdBQUc7SUFDakM7O09BRUc7SUFDSCxVQUFVLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDckIsT0FBTyxFQUFFLFlBQVk7UUFDckIsSUFBSSxFQUFFLFlBQVk7UUFDbEIsTUFBTSxFQUFFLHFEQUFxRDtLQUM5RCxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxPQUFPLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDbEIsT0FBTyxFQUFFLFNBQVM7UUFDbEIsSUFBSSxFQUFFLFNBQVM7UUFDZixNQUFNLEVBQUUscURBQXFEO0tBQzlELENBQUM7SUFDRjs7T0FFRztJQUNILE9BQU8sRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUNsQixPQUFPLEVBQUUsU0FBUztRQUNsQixJQUFJLEVBQUUsU0FBUztRQUNmLE1BQU0sRUFBRSxxREFBcUQ7S0FDOUQsQ0FBQztJQUNGOztPQUVHO0lBQ0gsYUFBYSxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ3hCLE9BQU8sRUFBRSxlQUFlO1FBQ3hCLElBQUksRUFBRSxlQUFlO1FBQ3JCLE1BQU0sRUFBRSxxREFBcUQ7S0FDOUQsQ0FBQztJQUNGOztPQUVHO0lBQ0gsTUFBTSxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ2pCLE9BQU8sRUFBRSxRQUFRO1FBQ2pCLElBQUksRUFBRSxRQUFRO1FBQ2QsTUFBTSxFQUFFLHFEQUFxRDtLQUM5RCxDQUFDO0NBQ00sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNC5jb3JlIHZlcnNpb246IDQuMC4xXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9nb2FsLWNhdGVnb3J5fDQuMC4xXHJcblxyXG5pbXBvcnQgeyBDb2RpbmcgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiBFeGFtcGxlIGNvZGVzIGZvciBncm91cGluZyBnb2FscyB0byB1c2UgZm9yIGZpbHRlcmluZyBvciBwcmVzZW50YXRpb24uXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgR29hbENhdGVnb3J5Q29kaW5ncyA9IHtcclxuICAvKipcclxuICAgKiBiZWhhdmlvcmFsOiBHb2FscyByZWxhdGVkIHRvIHRoZSBtYW5uZXIgaW4gd2hpY2ggdGhlIHN1YmplY3QgYWN0cy5cclxuICAgKi9cclxuICBCZWhhdmlvcmFsOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiQmVoYXZpb3JhbFwiLFxyXG4gICAgY29kZTogXCJiZWhhdmlvcmFsXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9nb2FsLWNhdGVnb3J5XCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogZGlldGFyeTogR29hbHMgcmVsYXRlZCB0byB0aGUgY29uc3VtcHRpb24gb2YgZm9vZCBhbmQvb3IgYmV2ZXJhZ2VzLlxyXG4gICAqL1xyXG4gIERpZXRhcnk6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJEaWV0YXJ5XCIsXHJcbiAgICBjb2RlOiBcImRpZXRhcnlcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2dvYWwtY2F0ZWdvcnlcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBudXJzaW5nOiBHb2FscyByZWxhdGVkIHRvIHRoZSBwcmFjdGljZSBvZiBudXJzaW5nIG9yIGVzdGFibGlzaGVkIGJ5IG51cnNlcy5cclxuICAgKi9cclxuICBOdXJzaW5nOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiTnVyc2luZ1wiLFxyXG4gICAgY29kZTogXCJudXJzaW5nXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9nb2FsLWNhdGVnb3J5XCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogcGh5c2lvdGhlcmFweTogR29hbHMgcmVsYXRlZCB0byB0aGUgbW9iaWxpdHkgYW5kL29yIG1vdG9yIGNhcGFiaWxpdHkgb2YgdGhlIHN1YmplY3QuXHJcbiAgICovXHJcbiAgUGh5c2lvdGhlcmFweTogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIlBoeXNpb3RoZXJhcHlcIixcclxuICAgIGNvZGU6IFwicGh5c2lvdGhlcmFweVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vZ29hbC1jYXRlZ29yeVwiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIHNhZmV0eTogR29hbHMgcmVsYXRlZCB0byB0aGUgcGVyc29uYWwgcHJvdGVjdGlvbiBvZiB0aGUgc3ViamVjdC5cclxuICAgKi9cclxuICBTYWZldHk6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJTYWZldHlcIixcclxuICAgIGNvZGU6IFwic2FmZXR5XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9nb2FsLWNhdGVnb3J5XCIsXHJcbiAgfSksXHJcbn0gYXMgY29uc3Q7XHJcblxyXG4vKipcclxuICogRXhhbXBsZSBjb2RlcyBmb3IgZ3JvdXBpbmcgZ29hbHMgdG8gdXNlIGZvciBmaWx0ZXJpbmcgb3IgcHJlc2VudGF0aW9uLlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgR29hbENhdGVnb3J5Q29kaW5nVHlwZSA9IHR5cGVvZiBHb2FsQ2F0ZWdvcnlDb2RpbmdzO1xyXG4iXX0=