// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/endpoint-status|4.0.1
import { Coding } from '../fhir/Coding.js';
/**
 * The status of the endpoint.
 */
export const EndpointStatusCodings = {
    /**
     * active: This endpoint is expected to be active and can be used.
     */
    Active: new Coding({
        display: "Active",
        code: "active",
        system: "http://hl7.org/fhir/endpoint-status",
    }),
    /**
     * entered-in-error: This instance should not have been part of this patient's medical record.
     */
    EnteredInError: new Coding({
        display: "Entered in error",
        code: "entered-in-error",
        system: "http://hl7.org/fhir/endpoint-status",
    }),
    /**
     * error: This endpoint has exceeded connectivity thresholds and is considered in an error state and should no longer be attempted to connect to until corrective action is taken.
     */
    Error: new Coding({
        display: "Error",
        code: "error",
        system: "http://hl7.org/fhir/endpoint-status",
    }),
    /**
     * off: This endpoint is no longer to be used.
     */
    Off: new Coding({
        display: "Off",
        code: "off",
        system: "http://hl7.org/fhir/endpoint-status",
    }),
    /**
     * suspended: This endpoint is temporarily unavailable.
     */
    Suspended: new Coding({
        display: "Suspended",
        code: "suspended",
        system: "http://hl7.org/fhir/endpoint-status",
    }),
    /**
     * test: This endpoint is not intended for production usage.
     */
    Test: new Coding({
        display: "Test",
        code: "test",
        system: "http://hl7.org/fhir/endpoint-status",
    }),
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRW5kcG9pbnRTdGF0dXNDb2RpbmdzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9FbmRwb2ludFN0YXR1c0NvZGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLCtDQUErQztBQUMvQyxrQ0FBa0M7QUFDbEMsb0VBQW9FO0FBRXBFLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQTtBQUUxQzs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUFHO0lBQ25DOztPQUVHO0lBQ0gsTUFBTSxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ2pCLE9BQU8sRUFBRSxRQUFRO1FBQ2pCLElBQUksRUFBRSxRQUFRO1FBQ2QsTUFBTSxFQUFFLHFDQUFxQztLQUM5QyxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxjQUFjLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDekIsT0FBTyxFQUFFLGtCQUFrQjtRQUMzQixJQUFJLEVBQUUsa0JBQWtCO1FBQ3hCLE1BQU0sRUFBRSxxQ0FBcUM7S0FDOUMsQ0FBQztJQUNGOztPQUVHO0lBQ0gsS0FBSyxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ2hCLE9BQU8sRUFBRSxPQUFPO1FBQ2hCLElBQUksRUFBRSxPQUFPO1FBQ2IsTUFBTSxFQUFFLHFDQUFxQztLQUM5QyxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxHQUFHLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDZCxPQUFPLEVBQUUsS0FBSztRQUNkLElBQUksRUFBRSxLQUFLO1FBQ1gsTUFBTSxFQUFFLHFDQUFxQztLQUM5QyxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxTQUFTLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDcEIsT0FBTyxFQUFFLFdBQVc7UUFDcEIsSUFBSSxFQUFFLFdBQVc7UUFDakIsTUFBTSxFQUFFLHFDQUFxQztLQUM5QyxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxJQUFJLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDZixPQUFPLEVBQUUsTUFBTTtRQUNmLElBQUksRUFBRSxNQUFNO1FBQ1osTUFBTSxFQUFFLHFDQUFxQztLQUM5QyxDQUFDO0NBQ00sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNC5jb3JlIHZlcnNpb246IDQuMC4xXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9lbmRwb2ludC1zdGF0dXN8NC4wLjFcclxuXHJcbmltcG9ydCB7IENvZGluZyB9IGZyb20gJy4uL2ZoaXIvQ29kaW5nLmpzJ1xyXG5cclxuLyoqXHJcbiAqIFRoZSBzdGF0dXMgb2YgdGhlIGVuZHBvaW50LlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IEVuZHBvaW50U3RhdHVzQ29kaW5ncyA9IHtcclxuICAvKipcclxuICAgKiBhY3RpdmU6IFRoaXMgZW5kcG9pbnQgaXMgZXhwZWN0ZWQgdG8gYmUgYWN0aXZlIGFuZCBjYW4gYmUgdXNlZC5cclxuICAgKi9cclxuICBBY3RpdmU6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJBY3RpdmVcIixcclxuICAgIGNvZGU6IFwiYWN0aXZlXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9lbmRwb2ludC1zdGF0dXNcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBlbnRlcmVkLWluLWVycm9yOiBUaGlzIGluc3RhbmNlIHNob3VsZCBub3QgaGF2ZSBiZWVuIHBhcnQgb2YgdGhpcyBwYXRpZW50J3MgbWVkaWNhbCByZWNvcmQuXHJcbiAgICovXHJcbiAgRW50ZXJlZEluRXJyb3I6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJFbnRlcmVkIGluIGVycm9yXCIsXHJcbiAgICBjb2RlOiBcImVudGVyZWQtaW4tZXJyb3JcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2VuZHBvaW50LXN0YXR1c1wiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIGVycm9yOiBUaGlzIGVuZHBvaW50IGhhcyBleGNlZWRlZCBjb25uZWN0aXZpdHkgdGhyZXNob2xkcyBhbmQgaXMgY29uc2lkZXJlZCBpbiBhbiBlcnJvciBzdGF0ZSBhbmQgc2hvdWxkIG5vIGxvbmdlciBiZSBhdHRlbXB0ZWQgdG8gY29ubmVjdCB0byB1bnRpbCBjb3JyZWN0aXZlIGFjdGlvbiBpcyB0YWtlbi5cclxuICAgKi9cclxuICBFcnJvcjogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIkVycm9yXCIsXHJcbiAgICBjb2RlOiBcImVycm9yXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9lbmRwb2ludC1zdGF0dXNcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBvZmY6IFRoaXMgZW5kcG9pbnQgaXMgbm8gbG9uZ2VyIHRvIGJlIHVzZWQuXHJcbiAgICovXHJcbiAgT2ZmOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiT2ZmXCIsXHJcbiAgICBjb2RlOiBcIm9mZlwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvZW5kcG9pbnQtc3RhdHVzXCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogc3VzcGVuZGVkOiBUaGlzIGVuZHBvaW50IGlzIHRlbXBvcmFyaWx5IHVuYXZhaWxhYmxlLlxyXG4gICAqL1xyXG4gIFN1c3BlbmRlZDogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIlN1c3BlbmRlZFwiLFxyXG4gICAgY29kZTogXCJzdXNwZW5kZWRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2VuZHBvaW50LXN0YXR1c1wiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIHRlc3Q6IFRoaXMgZW5kcG9pbnQgaXMgbm90IGludGVuZGVkIGZvciBwcm9kdWN0aW9uIHVzYWdlLlxyXG4gICAqL1xyXG4gIFRlc3Q6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJUZXN0XCIsXHJcbiAgICBjb2RlOiBcInRlc3RcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2VuZHBvaW50LXN0YXR1c1wiLFxyXG4gIH0pLFxyXG59IGFzIGNvbnN0O1xyXG5cclxuLyoqXHJcbiAqIFRoZSBzdGF0dXMgb2YgdGhlIGVuZHBvaW50LlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgRW5kcG9pbnRTdGF0dXNDb2RpbmdUeXBlID0gdHlwZW9mIEVuZHBvaW50U3RhdHVzQ29kaW5ncztcclxuIl19