// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/event-resource-types|4.0.1
/**
 * A list of all the event resource types defined in this version of the FHIR specification.
 */
export const EventResourceTypesCodings = {
    /**
     * ChargeItem: Item containing charge code(s) associated with the provision of healthcare provider products.
     */
    ChargeItem: {
        display: "ChargeItem",
        code: "ChargeItem",
        system: "http://hl7.org/fhir/event-resource-types",
    },
    /**
     * ClaimResponse: Remittance resource.
     */
    ClaimResponse: {
        display: "ClaimResponse",
        code: "ClaimResponse",
        system: "http://hl7.org/fhir/event-resource-types",
    },
    /**
     * ClinicalImpression: A clinical assessment performed when planning treatments and management strategies for a patient.
     */
    ClinicalImpression: {
        display: "ClinicalImpression",
        code: "ClinicalImpression",
        system: "http://hl7.org/fhir/event-resource-types",
    },
    /**
     * Communication: A record of information transmitted from a sender to a receiver.
     */
    Communication: {
        display: "Communication",
        code: "Communication",
        system: "http://hl7.org/fhir/event-resource-types",
    },
    /**
     * Composition: A set of resources composed into a single coherent clinical statement with clinical attestation.
     */
    Composition: {
        display: "Composition",
        code: "Composition",
        system: "http://hl7.org/fhir/event-resource-types",
    },
    /**
     * Condition: Detailed information about conditions, problems or diagnoses.
     */
    Condition: {
        display: "Condition",
        code: "Condition",
        system: "http://hl7.org/fhir/event-resource-types",
    },
    /**
     * Consent: A healthcare consumer's policy choices to permits or denies recipients or roles to perform actions for specific purposes and periods of time.
     */
    Consent: {
        display: "Consent",
        code: "Consent",
        system: "http://hl7.org/fhir/event-resource-types",
    },
    /**
     * Coverage: Insurance or medical plan or a payment agreement.
     */
    Coverage: {
        display: "Coverage",
        code: "Coverage",
        system: "http://hl7.org/fhir/event-resource-types",
    },
    /**
     * DeviceUseStatement: Record of use of a device.
     */
    DeviceUseStatement: {
        display: "DeviceUseStatement",
        code: "DeviceUseStatement",
        system: "http://hl7.org/fhir/event-resource-types",
    },
    /**
     * DiagnosticReport: A Diagnostic report - a combination of request information, atomic results, images, interpretation, as well as formatted reports.
     */
    DiagnosticReport: {
        display: "DiagnosticReport",
        code: "DiagnosticReport",
        system: "http://hl7.org/fhir/event-resource-types",
    },
    /**
     * DocumentManifest: A list that defines a set of documents.
     */
    DocumentManifest: {
        display: "DocumentManifest",
        code: "DocumentManifest",
        system: "http://hl7.org/fhir/event-resource-types",
    },
    /**
     * DocumentReference: A reference to a document.
     */
    DocumentReference: {
        display: "DocumentReference",
        code: "DocumentReference",
        system: "http://hl7.org/fhir/event-resource-types",
    },
    /**
     * Encounter: An interaction during which services are provided to the patient.
     */
    Encounter: {
        display: "Encounter",
        code: "Encounter",
        system: "http://hl7.org/fhir/event-resource-types",
    },
    /**
     * EnrollmentResponse: EnrollmentResponse resource.
     */
    EnrollmentResponse: {
        display: "EnrollmentResponse",
        code: "EnrollmentResponse",
        system: "http://hl7.org/fhir/event-resource-types",
    },
    /**
     * EpisodeOfCare: An association of a Patient with an Organization and  Healthcare Provider(s) for a period of time that the Organization assumes some level of responsibility.
     */
    EpisodeOfCare: {
        display: "EpisodeOfCare",
        code: "EpisodeOfCare",
        system: "http://hl7.org/fhir/event-resource-types",
    },
    /**
     * ExplanationOfBenefit: Explanation of Benefit resource.
     */
    ExplanationOfBenefit: {
        display: "ExplanationOfBenefit",
        code: "ExplanationOfBenefit",
        system: "http://hl7.org/fhir/event-resource-types",
    },
    /**
     * FamilyMemberHistory: Information about patient's relatives, relevant for patient.
     */
    FamilyMemberHistory: {
        display: "FamilyMemberHistory",
        code: "FamilyMemberHistory",
        system: "http://hl7.org/fhir/event-resource-types",
    },
    /**
     * GuidanceResponse: The formal response to a guidance request.
     */
    GuidanceResponse: {
        display: "GuidanceResponse",
        code: "GuidanceResponse",
        system: "http://hl7.org/fhir/event-resource-types",
    },
    /**
     * ImagingStudy: A set of images produced in single study (one or more series of references images).
     */
    ImagingStudy: {
        display: "ImagingStudy",
        code: "ImagingStudy",
        system: "http://hl7.org/fhir/event-resource-types",
    },
    /**
     * Immunization: Immunization event information.
     */
    Immunization: {
        display: "Immunization",
        code: "Immunization",
        system: "http://hl7.org/fhir/event-resource-types",
    },
    /**
     * MeasureReport: Results of a measure evaluation.
     */
    MeasureReport: {
        display: "MeasureReport",
        code: "MeasureReport",
        system: "http://hl7.org/fhir/event-resource-types",
    },
    /**
     * Media: A photo, video, or audio recording acquired or used in healthcare. The actual content may be inline or provided by direct reference.
     */
    Media: {
        display: "Media",
        code: "Media",
        system: "http://hl7.org/fhir/event-resource-types",
    },
    /**
     * MedicationAdministration: Administration of medication to a patient.
     */
    MedicationAdministration: {
        display: "MedicationAdministration",
        code: "MedicationAdministration",
        system: "http://hl7.org/fhir/event-resource-types",
    },
    /**
     * MedicationDispense: Dispensing a medication to a named patient.
     */
    MedicationDispense: {
        display: "MedicationDispense",
        code: "MedicationDispense",
        system: "http://hl7.org/fhir/event-resource-types",
    },
    /**
     * MedicationStatement: Record of medication being taken by a patient.
     */
    MedicationStatement: {
        display: "MedicationStatement",
        code: "MedicationStatement",
        system: "http://hl7.org/fhir/event-resource-types",
    },
    /**
     * Observation: Measurements and simple assertions.
     */
    Observation: {
        display: "Observation",
        code: "Observation",
        system: "http://hl7.org/fhir/event-resource-types",
    },
    /**
     * PaymentNotice: PaymentNotice request.
     */
    PaymentNotice: {
        display: "PaymentNotice",
        code: "PaymentNotice",
        system: "http://hl7.org/fhir/event-resource-types",
    },
    /**
     * PaymentReconciliation: PaymentReconciliation resource.
     */
    PaymentReconciliation: {
        display: "PaymentReconciliation",
        code: "PaymentReconciliation",
        system: "http://hl7.org/fhir/event-resource-types",
    },
    /**
     * Procedure: An action that is being or was performed on a patient.
     */
    Procedure: {
        display: "Procedure",
        code: "Procedure",
        system: "http://hl7.org/fhir/event-resource-types",
    },
    /**
     * ProcessResponse: ProcessResponse resource.
     */
    ProcessResponse: {
        display: "ProcessResponse",
        code: "ProcessResponse",
        system: "http://hl7.org/fhir/event-resource-types",
    },
    /**
     * QuestionnaireResponse: A structured set of questions and their answers.
     */
    QuestionnaireResponse: {
        display: "QuestionnaireResponse",
        code: "QuestionnaireResponse",
        system: "http://hl7.org/fhir/event-resource-types",
    },
    /**
     * RiskAssessment: Potential outcomes for a subject with likelihood.
     */
    RiskAssessment: {
        display: "RiskAssessment",
        code: "RiskAssessment",
        system: "http://hl7.org/fhir/event-resource-types",
    },
    /**
     * SupplyDelivery: Delivery of bulk Supplies.
     */
    SupplyDelivery: {
        display: "SupplyDelivery",
        code: "SupplyDelivery",
        system: "http://hl7.org/fhir/event-resource-types",
    },
    /**
     * Task: A task to be performed.
     */
    Task: {
        display: "Task",
        code: "Task",
        system: "http://hl7.org/fhir/event-resource-types",
    },
};
//# sourceMappingURL=data:application/json;base64,