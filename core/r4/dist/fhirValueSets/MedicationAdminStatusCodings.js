// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/medication-admin-status|4.0.1
/**
 * MedicationAdministration Status Codes
 */
export const MedicationAdminStatusCodings = {
    /**
     * completed: All actions that are implied by the administration have occurred.
     */
    Completed: {
        display: "Completed",
        code: "completed",
        system: "http://terminology.hl7.org/CodeSystem/medication-admin-status",
    },
    /**
     * entered-in-error: The administration was entered in error and therefore nullified.
     */
    EnteredInError: {
        display: "Entered in Error",
        code: "entered-in-error",
        system: "http://terminology.hl7.org/CodeSystem/medication-admin-status",
    },
    /**
     * in-progress: The administration has started but has not yet completed.
     */
    InProgress: {
        display: "In Progress",
        code: "in-progress",
        system: "http://terminology.hl7.org/CodeSystem/medication-admin-status",
    },
    /**
     * not-done: The administration was terminated prior to any impact on the subject (though preparatory actions may have been taken)
     */
    NotDone: {
        display: "Not Done",
        code: "not-done",
        system: "http://terminology.hl7.org/CodeSystem/medication-admin-status",
    },
    /**
     * on-hold: Actions implied by the administration have been temporarily halted, but are expected to continue later. May also be called 'suspended'.
     */
    OnHold: {
        display: "On Hold",
        code: "on-hold",
        system: "http://terminology.hl7.org/CodeSystem/medication-admin-status",
    },
    /**
     * stopped: Actions implied by the administration have been permanently halted, before all of them occurred.
     */
    Stopped: {
        display: "Stopped",
        code: "stopped",
        system: "http://terminology.hl7.org/CodeSystem/medication-admin-status",
    },
    /**
     * unknown: The authoring system does not know which of the status values currently applies for this request. Note: This concept is not to be used for 'other' - one of the listed statuses is presumed to apply, it's just not known which one.
     */
    Unknown: {
        display: "Unknown",
        code: "unknown",
        system: "http://terminology.hl7.org/CodeSystem/medication-admin-status",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWVkaWNhdGlvbkFkbWluU3RhdHVzQ29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvTWVkaWNhdGlvbkFkbWluU3RhdHVzQ29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyw0RUFBNEU7QUFzQzVFOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sNEJBQTRCLEdBQW1DO0lBQzFFOztPQUVHO0lBQ0gsU0FBUyxFQUFFO1FBQ1QsT0FBTyxFQUFFLFdBQVc7UUFDcEIsSUFBSSxFQUFFLFdBQVc7UUFDakIsTUFBTSxFQUFFLCtEQUErRDtLQUN4RTtJQUNEOztPQUVHO0lBQ0gsY0FBYyxFQUFFO1FBQ2QsT0FBTyxFQUFFLGtCQUFrQjtRQUMzQixJQUFJLEVBQUUsa0JBQWtCO1FBQ3hCLE1BQU0sRUFBRSwrREFBK0Q7S0FDeEU7SUFDRDs7T0FFRztJQUNILFVBQVUsRUFBRTtRQUNWLE9BQU8sRUFBRSxhQUFhO1FBQ3RCLElBQUksRUFBRSxhQUFhO1FBQ25CLE1BQU0sRUFBRSwrREFBK0Q7S0FDeEU7SUFDRDs7T0FFRztJQUNILE9BQU8sRUFBRTtRQUNQLE9BQU8sRUFBRSxVQUFVO1FBQ25CLElBQUksRUFBRSxVQUFVO1FBQ2hCLE1BQU0sRUFBRSwrREFBK0Q7S0FDeEU7SUFDRDs7T0FFRztJQUNILE1BQU0sRUFBRTtRQUNOLE9BQU8sRUFBRSxTQUFTO1FBQ2xCLElBQUksRUFBRSxTQUFTO1FBQ2YsTUFBTSxFQUFFLCtEQUErRDtLQUN4RTtJQUNEOztPQUVHO0lBQ0gsT0FBTyxFQUFFO1FBQ1AsT0FBTyxFQUFFLFNBQVM7UUFDbEIsSUFBSSxFQUFFLFNBQVM7UUFDZixNQUFNLEVBQUUsK0RBQStEO0tBQ3hFO0lBQ0Q7O09BRUc7SUFDSCxPQUFPLEVBQUU7UUFDUCxPQUFPLEVBQUUsU0FBUztRQUNsQixJQUFJLEVBQUUsU0FBUztRQUNmLE1BQU0sRUFBRSwrREFBK0Q7S0FDeEU7Q0FDTyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0LmNvcmUgdmVyc2lvbjogNC4wLjFcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L21lZGljYXRpb24tYWRtaW4tc3RhdHVzfDQuMC4xXHJcblxyXG5pbXBvcnQgeyBDb2RpbmdBcmdzIH0gZnJvbSAnLi4vZmhpci9Db2RpbmcuanMnXHJcblxyXG4vKipcclxuICogTWVkaWNhdGlvbkFkbWluaXN0cmF0aW9uIFN0YXR1cyBDb2Rlc1xyXG4gKi9cclxuZXhwb3J0IHR5cGUgTWVkaWNhdGlvbkFkbWluU3RhdHVzQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBjb21wbGV0ZWQ6IEFsbCBhY3Rpb25zIHRoYXQgYXJlIGltcGxpZWQgYnkgdGhlIGFkbWluaXN0cmF0aW9uIGhhdmUgb2NjdXJyZWQuXHJcbiAgICovXHJcbiAgQ29tcGxldGVkOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIGVudGVyZWQtaW4tZXJyb3I6IFRoZSBhZG1pbmlzdHJhdGlvbiB3YXMgZW50ZXJlZCBpbiBlcnJvciBhbmQgdGhlcmVmb3JlIG51bGxpZmllZC5cclxuICAgKi9cclxuICBFbnRlcmVkSW5FcnJvcjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBpbi1wcm9ncmVzczogVGhlIGFkbWluaXN0cmF0aW9uIGhhcyBzdGFydGVkIGJ1dCBoYXMgbm90IHlldCBjb21wbGV0ZWQuXHJcbiAgICovXHJcbiAgSW5Qcm9ncmVzczogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBub3QtZG9uZTogVGhlIGFkbWluaXN0cmF0aW9uIHdhcyB0ZXJtaW5hdGVkIHByaW9yIHRvIGFueSBpbXBhY3Qgb24gdGhlIHN1YmplY3QgKHRob3VnaCBwcmVwYXJhdG9yeSBhY3Rpb25zIG1heSBoYXZlIGJlZW4gdGFrZW4pXHJcbiAgICovXHJcbiAgTm90RG9uZTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBvbi1ob2xkOiBBY3Rpb25zIGltcGxpZWQgYnkgdGhlIGFkbWluaXN0cmF0aW9uIGhhdmUgYmVlbiB0ZW1wb3JhcmlseSBoYWx0ZWQsIGJ1dCBhcmUgZXhwZWN0ZWQgdG8gY29udGludWUgbGF0ZXIuIE1heSBhbHNvIGJlIGNhbGxlZCAnc3VzcGVuZGVkJy5cclxuICAgKi9cclxuICBPbkhvbGQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogc3RvcHBlZDogQWN0aW9ucyBpbXBsaWVkIGJ5IHRoZSBhZG1pbmlzdHJhdGlvbiBoYXZlIGJlZW4gcGVybWFuZW50bHkgaGFsdGVkLCBiZWZvcmUgYWxsIG9mIHRoZW0gb2NjdXJyZWQuXHJcbiAgICovXHJcbiAgU3RvcHBlZDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiB1bmtub3duOiBUaGUgYXV0aG9yaW5nIHN5c3RlbSBkb2VzIG5vdCBrbm93IHdoaWNoIG9mIHRoZSBzdGF0dXMgdmFsdWVzIGN1cnJlbnRseSBhcHBsaWVzIGZvciB0aGlzIHJlcXVlc3QuIE5vdGU6IFRoaXMgY29uY2VwdCBpcyBub3QgdG8gYmUgdXNlZCBmb3IgJ290aGVyJyAtIG9uZSBvZiB0aGUgbGlzdGVkIHN0YXR1c2VzIGlzIHByZXN1bWVkIHRvIGFwcGx5LCBpdCdzIGp1c3Qgbm90IGtub3duIHdoaWNoIG9uZS5cclxuICAgKi9cclxuICBVbmtub3duOiBDb2RpbmdBcmdzO1xyXG59XHJcblxyXG4vKipcclxuICogTWVkaWNhdGlvbkFkbWluaXN0cmF0aW9uIFN0YXR1cyBDb2Rlc1xyXG4gKi9cclxuZXhwb3J0IGNvbnN0IE1lZGljYXRpb25BZG1pblN0YXR1c0NvZGluZ3M6TWVkaWNhdGlvbkFkbWluU3RhdHVzQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBjb21wbGV0ZWQ6IEFsbCBhY3Rpb25zIHRoYXQgYXJlIGltcGxpZWQgYnkgdGhlIGFkbWluaXN0cmF0aW9uIGhhdmUgb2NjdXJyZWQuXHJcbiAgICovXHJcbiAgQ29tcGxldGVkOiB7XHJcbiAgICBkaXNwbGF5OiBcIkNvbXBsZXRlZFwiLFxyXG4gICAgY29kZTogXCJjb21wbGV0ZWRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL21lZGljYXRpb24tYWRtaW4tc3RhdHVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBlbnRlcmVkLWluLWVycm9yOiBUaGUgYWRtaW5pc3RyYXRpb24gd2FzIGVudGVyZWQgaW4gZXJyb3IgYW5kIHRoZXJlZm9yZSBudWxsaWZpZWQuXHJcbiAgICovXHJcbiAgRW50ZXJlZEluRXJyb3I6IHtcclxuICAgIGRpc3BsYXk6IFwiRW50ZXJlZCBpbiBFcnJvclwiLFxyXG4gICAgY29kZTogXCJlbnRlcmVkLWluLWVycm9yXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9tZWRpY2F0aW9uLWFkbWluLXN0YXR1c1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogaW4tcHJvZ3Jlc3M6IFRoZSBhZG1pbmlzdHJhdGlvbiBoYXMgc3RhcnRlZCBidXQgaGFzIG5vdCB5ZXQgY29tcGxldGVkLlxyXG4gICAqL1xyXG4gIEluUHJvZ3Jlc3M6IHtcclxuICAgIGRpc3BsYXk6IFwiSW4gUHJvZ3Jlc3NcIixcclxuICAgIGNvZGU6IFwiaW4tcHJvZ3Jlc3NcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL21lZGljYXRpb24tYWRtaW4tc3RhdHVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBub3QtZG9uZTogVGhlIGFkbWluaXN0cmF0aW9uIHdhcyB0ZXJtaW5hdGVkIHByaW9yIHRvIGFueSBpbXBhY3Qgb24gdGhlIHN1YmplY3QgKHRob3VnaCBwcmVwYXJhdG9yeSBhY3Rpb25zIG1heSBoYXZlIGJlZW4gdGFrZW4pXHJcbiAgICovXHJcbiAgTm90RG9uZToge1xyXG4gICAgZGlzcGxheTogXCJOb3QgRG9uZVwiLFxyXG4gICAgY29kZTogXCJub3QtZG9uZVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vbWVkaWNhdGlvbi1hZG1pbi1zdGF0dXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIG9uLWhvbGQ6IEFjdGlvbnMgaW1wbGllZCBieSB0aGUgYWRtaW5pc3RyYXRpb24gaGF2ZSBiZWVuIHRlbXBvcmFyaWx5IGhhbHRlZCwgYnV0IGFyZSBleHBlY3RlZCB0byBjb250aW51ZSBsYXRlci4gTWF5IGFsc28gYmUgY2FsbGVkICdzdXNwZW5kZWQnLlxyXG4gICAqL1xyXG4gIE9uSG9sZDoge1xyXG4gICAgZGlzcGxheTogXCJPbiBIb2xkXCIsXHJcbiAgICBjb2RlOiBcIm9uLWhvbGRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL21lZGljYXRpb24tYWRtaW4tc3RhdHVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBzdG9wcGVkOiBBY3Rpb25zIGltcGxpZWQgYnkgdGhlIGFkbWluaXN0cmF0aW9uIGhhdmUgYmVlbiBwZXJtYW5lbnRseSBoYWx0ZWQsIGJlZm9yZSBhbGwgb2YgdGhlbSBvY2N1cnJlZC5cclxuICAgKi9cclxuICBTdG9wcGVkOiB7XHJcbiAgICBkaXNwbGF5OiBcIlN0b3BwZWRcIixcclxuICAgIGNvZGU6IFwic3RvcHBlZFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vbWVkaWNhdGlvbi1hZG1pbi1zdGF0dXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIHVua25vd246IFRoZSBhdXRob3Jpbmcgc3lzdGVtIGRvZXMgbm90IGtub3cgd2hpY2ggb2YgdGhlIHN0YXR1cyB2YWx1ZXMgY3VycmVudGx5IGFwcGxpZXMgZm9yIHRoaXMgcmVxdWVzdC4gTm90ZTogVGhpcyBjb25jZXB0IGlzIG5vdCB0byBiZSB1c2VkIGZvciAnb3RoZXInIC0gb25lIG9mIHRoZSBsaXN0ZWQgc3RhdHVzZXMgaXMgcHJlc3VtZWQgdG8gYXBwbHksIGl0J3MganVzdCBub3Qga25vd24gd2hpY2ggb25lLlxyXG4gICAqL1xyXG4gIFVua25vd246IHtcclxuICAgIGRpc3BsYXk6IFwiVW5rbm93blwiLFxyXG4gICAgY29kZTogXCJ1bmtub3duXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9tZWRpY2F0aW9uLWFkbWluLXN0YXR1c1wiLFxyXG4gIH0sXHJcbn0gYXMgY29uc3Q7XHJcbiJdfQ==