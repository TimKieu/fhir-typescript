// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/contactentity-type|4.0.1
import { Coding } from '../fhir/Coding.js';
/**
 * This example value set defines a set of codes that can be used to indicate the purpose for which you would contact a contact party.
 */
export const ContactentityTypeCodings = {
    /**
     * ADMIN: Contact details for administrative enquiries.
     */
    Administrative: new Coding({
        display: "Administrative",
        code: "ADMIN",
        system: "http://terminology.hl7.org/CodeSystem/contactentity-type",
    }),
    /**
     * BILL: Contact details for information regarding to billing/general finance enquiries.
     */
    Billing: new Coding({
        display: "Billing",
        code: "BILL",
        system: "http://terminology.hl7.org/CodeSystem/contactentity-type",
    }),
    /**
     * HR: Contact details for issues related to Human Resources, such as staff matters, OH&amp;S etc.
     */
    HumanResource: new Coding({
        display: "Human Resource",
        code: "HR",
        system: "http://terminology.hl7.org/CodeSystem/contactentity-type",
    }),
    /**
     * PATINF: Generic information contact for patients.
     */
    Patient: new Coding({
        display: "Patient",
        code: "PATINF",
        system: "http://terminology.hl7.org/CodeSystem/contactentity-type",
    }),
    /**
     * PAYOR: Contact details for dealing with issues related to insurance claims/adjudication/payment.
     */
    Payor: new Coding({
        display: "Payor",
        code: "PAYOR",
        system: "http://terminology.hl7.org/CodeSystem/contactentity-type",
    }),
    /**
     * PRESS: Dedicated contact point for matters relating to press enquiries.
     */
    Press: new Coding({
        display: "Press",
        code: "PRESS",
        system: "http://terminology.hl7.org/CodeSystem/contactentity-type",
    }),
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29udGFjdGVudGl0eVR5cGVDb2RpbmdzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9Db250YWN0ZW50aXR5VHlwZUNvZGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLCtDQUErQztBQUMvQyxrQ0FBa0M7QUFDbEMsdUVBQXVFO0FBRXZFLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQTtBQUUxQzs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLHdCQUF3QixHQUFHO0lBQ3RDOztPQUVHO0lBQ0gsY0FBYyxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ3pCLE9BQU8sRUFBRSxnQkFBZ0I7UUFDekIsSUFBSSxFQUFFLE9BQU87UUFDYixNQUFNLEVBQUUsMERBQTBEO0tBQ25FLENBQUM7SUFDRjs7T0FFRztJQUNILE9BQU8sRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUNsQixPQUFPLEVBQUUsU0FBUztRQUNsQixJQUFJLEVBQUUsTUFBTTtRQUNaLE1BQU0sRUFBRSwwREFBMEQ7S0FDbkUsQ0FBQztJQUNGOztPQUVHO0lBQ0gsYUFBYSxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ3hCLE9BQU8sRUFBRSxnQkFBZ0I7UUFDekIsSUFBSSxFQUFFLElBQUk7UUFDVixNQUFNLEVBQUUsMERBQTBEO0tBQ25FLENBQUM7SUFDRjs7T0FFRztJQUNILE9BQU8sRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUNsQixPQUFPLEVBQUUsU0FBUztRQUNsQixJQUFJLEVBQUUsUUFBUTtRQUNkLE1BQU0sRUFBRSwwREFBMEQ7S0FDbkUsQ0FBQztJQUNGOztPQUVHO0lBQ0gsS0FBSyxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ2hCLE9BQU8sRUFBRSxPQUFPO1FBQ2hCLElBQUksRUFBRSxPQUFPO1FBQ2IsTUFBTSxFQUFFLDBEQUEwRDtLQUNuRSxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxLQUFLLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDaEIsT0FBTyxFQUFFLE9BQU87UUFDaEIsSUFBSSxFQUFFLE9BQU87UUFDYixNQUFNLEVBQUUsMERBQTBEO0tBQ25FLENBQUM7Q0FDTSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0LmNvcmUgdmVyc2lvbjogNC4wLjFcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L2NvbnRhY3RlbnRpdHktdHlwZXw0LjAuMVxyXG5cclxuaW1wb3J0IHsgQ29kaW5nIH0gZnJvbSAnLi4vZmhpci9Db2RpbmcuanMnXHJcblxyXG4vKipcclxuICogVGhpcyBleGFtcGxlIHZhbHVlIHNldCBkZWZpbmVzIGEgc2V0IG9mIGNvZGVzIHRoYXQgY2FuIGJlIHVzZWQgdG8gaW5kaWNhdGUgdGhlIHB1cnBvc2UgZm9yIHdoaWNoIHlvdSB3b3VsZCBjb250YWN0IGEgY29udGFjdCBwYXJ0eS5cclxuICovXHJcbmV4cG9ydCBjb25zdCBDb250YWN0ZW50aXR5VHlwZUNvZGluZ3MgPSB7XHJcbiAgLyoqXHJcbiAgICogQURNSU46IENvbnRhY3QgZGV0YWlscyBmb3IgYWRtaW5pc3RyYXRpdmUgZW5xdWlyaWVzLlxyXG4gICAqL1xyXG4gIEFkbWluaXN0cmF0aXZlOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiQWRtaW5pc3RyYXRpdmVcIixcclxuICAgIGNvZGU6IFwiQURNSU5cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2NvbnRhY3RlbnRpdHktdHlwZVwiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIEJJTEw6IENvbnRhY3QgZGV0YWlscyBmb3IgaW5mb3JtYXRpb24gcmVnYXJkaW5nIHRvIGJpbGxpbmcvZ2VuZXJhbCBmaW5hbmNlIGVucXVpcmllcy5cclxuICAgKi9cclxuICBCaWxsaW5nOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiQmlsbGluZ1wiLFxyXG4gICAgY29kZTogXCJCSUxMXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9jb250YWN0ZW50aXR5LXR5cGVcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBIUjogQ29udGFjdCBkZXRhaWxzIGZvciBpc3N1ZXMgcmVsYXRlZCB0byBIdW1hbiBSZXNvdXJjZXMsIHN1Y2ggYXMgc3RhZmYgbWF0dGVycywgT0gmYW1wO1MgZXRjLlxyXG4gICAqL1xyXG4gIEh1bWFuUmVzb3VyY2U6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJIdW1hbiBSZXNvdXJjZVwiLFxyXG4gICAgY29kZTogXCJIUlwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vY29udGFjdGVudGl0eS10eXBlXCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogUEFUSU5GOiBHZW5lcmljIGluZm9ybWF0aW9uIGNvbnRhY3QgZm9yIHBhdGllbnRzLlxyXG4gICAqL1xyXG4gIFBhdGllbnQ6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJQYXRpZW50XCIsXHJcbiAgICBjb2RlOiBcIlBBVElORlwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vY29udGFjdGVudGl0eS10eXBlXCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogUEFZT1I6IENvbnRhY3QgZGV0YWlscyBmb3IgZGVhbGluZyB3aXRoIGlzc3VlcyByZWxhdGVkIHRvIGluc3VyYW5jZSBjbGFpbXMvYWRqdWRpY2F0aW9uL3BheW1lbnQuXHJcbiAgICovXHJcbiAgUGF5b3I6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJQYXlvclwiLFxyXG4gICAgY29kZTogXCJQQVlPUlwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vY29udGFjdGVudGl0eS10eXBlXCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogUFJFU1M6IERlZGljYXRlZCBjb250YWN0IHBvaW50IGZvciBtYXR0ZXJzIHJlbGF0aW5nIHRvIHByZXNzIGVucXVpcmllcy5cclxuICAgKi9cclxuICBQcmVzczogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIlByZXNzXCIsXHJcbiAgICBjb2RlOiBcIlBSRVNTXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9jb250YWN0ZW50aXR5LXR5cGVcIixcclxuICB9KSxcclxufSBhcyBjb25zdDtcclxuXHJcbi8qKlxyXG4gKiBUaGlzIGV4YW1wbGUgdmFsdWUgc2V0IGRlZmluZXMgYSBzZXQgb2YgY29kZXMgdGhhdCBjYW4gYmUgdXNlZCB0byBpbmRpY2F0ZSB0aGUgcHVycG9zZSBmb3Igd2hpY2ggeW91IHdvdWxkIGNvbnRhY3QgYSBjb250YWN0IHBhcnR5LlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgQ29udGFjdGVudGl0eVR5cGVDb2RpbmdUeXBlID0gdHlwZW9mIENvbnRhY3RlbnRpdHlUeXBlQ29kaW5ncztcclxuIl19