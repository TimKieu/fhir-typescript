// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/specimen-collection|4.0.1
import { Coding } from '../fhir/Coding.js';
/**
 * Actions that can be taken for the collection of specimen from a subject.
 */
export const SpecimenCollectionCodings = {
    /**
     * Code: 129300006
     */
    PunctureAction: new Coding({
        display: "Puncture - action",
        code: "129300006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 129304002
     */
    ExcisionAction: new Coding({
        display: "Excision - action",
        code: "129304002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 129314006
     */
    BiopsyAction: new Coding({
        display: "Biopsy - action",
        code: "129314006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 129316008
     */
    AspirationAction: new Coding({
        display: "Aspiration - action",
        code: "129316008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 129323009
     */
    ScrapingAction: new Coding({
        display: "Scraping - action",
        code: "129323009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 225113003
     */
    TimedUrineCollection: new Coding({
        display: "Timed urine collection",
        code: "225113003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 278450005
     */
    FingerPrickSampling: new Coding({
        display: "Finger-prick sampling",
        code: "278450005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 386089008
     */
    CollectionOfCoughedSputum: new Coding({
        display: "Collection of coughed sputum",
        code: "386089008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 70777001
     */
    UrineSpecimenCollectionCatheterized: new Coding({
        display: "Urine specimen collection, catheterized",
        code: "70777001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 73416001
     */
    UrineSpecimenCollectionCleanCatch: new Coding({
        display: "Urine specimen collection, clean catch",
        code: "73416001",
        system: "http://snomed.info/sct",
    }),
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3BlY2ltZW5Db2xsZWN0aW9uQ29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvU3BlY2ltZW5Db2xsZWN0aW9uQ29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyx3RUFBd0U7QUFFeEUsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLG1CQUFtQixDQUFBO0FBRTFDOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0seUJBQXlCLEdBQUc7SUFDdkM7O09BRUc7SUFDSCxjQUFjLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDekIsT0FBTyxFQUFFLG1CQUFtQjtRQUM1QixJQUFJLEVBQUUsV0FBVztRQUNqQixNQUFNLEVBQUUsd0JBQXdCO0tBQ2pDLENBQUM7SUFDRjs7T0FFRztJQUNILGNBQWMsRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUN6QixPQUFPLEVBQUUsbUJBQW1CO1FBQzVCLElBQUksRUFBRSxXQUFXO1FBQ2pCLE1BQU0sRUFBRSx3QkFBd0I7S0FDakMsQ0FBQztJQUNGOztPQUVHO0lBQ0gsWUFBWSxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ3ZCLE9BQU8sRUFBRSxpQkFBaUI7UUFDMUIsSUFBSSxFQUFFLFdBQVc7UUFDakIsTUFBTSxFQUFFLHdCQUF3QjtLQUNqQyxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxnQkFBZ0IsRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUMzQixPQUFPLEVBQUUscUJBQXFCO1FBQzlCLElBQUksRUFBRSxXQUFXO1FBQ2pCLE1BQU0sRUFBRSx3QkFBd0I7S0FDakMsQ0FBQztJQUNGOztPQUVHO0lBQ0gsY0FBYyxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ3pCLE9BQU8sRUFBRSxtQkFBbUI7UUFDNUIsSUFBSSxFQUFFLFdBQVc7UUFDakIsTUFBTSxFQUFFLHdCQUF3QjtLQUNqQyxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxvQkFBb0IsRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUMvQixPQUFPLEVBQUUsd0JBQXdCO1FBQ2pDLElBQUksRUFBRSxXQUFXO1FBQ2pCLE1BQU0sRUFBRSx3QkFBd0I7S0FDakMsQ0FBQztJQUNGOztPQUVHO0lBQ0gsbUJBQW1CLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDOUIsT0FBTyxFQUFFLHVCQUF1QjtRQUNoQyxJQUFJLEVBQUUsV0FBVztRQUNqQixNQUFNLEVBQUUsd0JBQXdCO0tBQ2pDLENBQUM7SUFDRjs7T0FFRztJQUNILHlCQUF5QixFQUFFLElBQUksTUFBTSxDQUFDO1FBQ3BDLE9BQU8sRUFBRSw4QkFBOEI7UUFDdkMsSUFBSSxFQUFFLFdBQVc7UUFDakIsTUFBTSxFQUFFLHdCQUF3QjtLQUNqQyxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxtQ0FBbUMsRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUM5QyxPQUFPLEVBQUUseUNBQXlDO1FBQ2xELElBQUksRUFBRSxVQUFVO1FBQ2hCLE1BQU0sRUFBRSx3QkFBd0I7S0FDakMsQ0FBQztJQUNGOztPQUVHO0lBQ0gsaUNBQWlDLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDNUMsT0FBTyxFQUFFLHdDQUF3QztRQUNqRCxJQUFJLEVBQUUsVUFBVTtRQUNoQixNQUFNLEVBQUUsd0JBQXdCO0tBQ2pDLENBQUM7Q0FDTSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0LmNvcmUgdmVyc2lvbjogNC4wLjFcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L3NwZWNpbWVuLWNvbGxlY3Rpb258NC4wLjFcclxuXHJcbmltcG9ydCB7IENvZGluZyB9IGZyb20gJy4uL2ZoaXIvQ29kaW5nLmpzJ1xyXG5cclxuLyoqXHJcbiAqIEFjdGlvbnMgdGhhdCBjYW4gYmUgdGFrZW4gZm9yIHRoZSBjb2xsZWN0aW9uIG9mIHNwZWNpbWVuIGZyb20gYSBzdWJqZWN0LlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IFNwZWNpbWVuQ29sbGVjdGlvbkNvZGluZ3MgPSB7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogMTI5MzAwMDA2XHJcbiAgICovXHJcbiAgUHVuY3R1cmVBY3Rpb246IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJQdW5jdHVyZSAtIGFjdGlvblwiLFxyXG4gICAgY29kZTogXCIxMjkzMDAwMDZcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vc25vbWVkLmluZm8vc2N0XCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogQ29kZTogMTI5MzA0MDAyXHJcbiAgICovXHJcbiAgRXhjaXNpb25BY3Rpb246IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJFeGNpc2lvbiAtIGFjdGlvblwiLFxyXG4gICAgY29kZTogXCIxMjkzMDQwMDJcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vc25vbWVkLmluZm8vc2N0XCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogQ29kZTogMTI5MzE0MDA2XHJcbiAgICovXHJcbiAgQmlvcHN5QWN0aW9uOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiQmlvcHN5IC0gYWN0aW9uXCIsXHJcbiAgICBjb2RlOiBcIjEyOTMxNDAwNlwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9zbm9tZWQuaW5mby9zY3RcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBDb2RlOiAxMjkzMTYwMDhcclxuICAgKi9cclxuICBBc3BpcmF0aW9uQWN0aW9uOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiQXNwaXJhdGlvbiAtIGFjdGlvblwiLFxyXG4gICAgY29kZTogXCIxMjkzMTYwMDhcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vc25vbWVkLmluZm8vc2N0XCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogQ29kZTogMTI5MzIzMDA5XHJcbiAgICovXHJcbiAgU2NyYXBpbmdBY3Rpb246IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJTY3JhcGluZyAtIGFjdGlvblwiLFxyXG4gICAgY29kZTogXCIxMjkzMjMwMDlcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vc25vbWVkLmluZm8vc2N0XCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogQ29kZTogMjI1MTEzMDAzXHJcbiAgICovXHJcbiAgVGltZWRVcmluZUNvbGxlY3Rpb246IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJUaW1lZCB1cmluZSBjb2xsZWN0aW9uXCIsXHJcbiAgICBjb2RlOiBcIjIyNTExMzAwM1wiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9zbm9tZWQuaW5mby9zY3RcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBDb2RlOiAyNzg0NTAwMDVcclxuICAgKi9cclxuICBGaW5nZXJQcmlja1NhbXBsaW5nOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiRmluZ2VyLXByaWNrIHNhbXBsaW5nXCIsXHJcbiAgICBjb2RlOiBcIjI3ODQ1MDAwNVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9zbm9tZWQuaW5mby9zY3RcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBDb2RlOiAzODYwODkwMDhcclxuICAgKi9cclxuICBDb2xsZWN0aW9uT2ZDb3VnaGVkU3B1dHVtOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiQ29sbGVjdGlvbiBvZiBjb3VnaGVkIHNwdXR1bVwiLFxyXG4gICAgY29kZTogXCIzODYwODkwMDhcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vc25vbWVkLmluZm8vc2N0XCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogQ29kZTogNzA3NzcwMDFcclxuICAgKi9cclxuICBVcmluZVNwZWNpbWVuQ29sbGVjdGlvbkNhdGhldGVyaXplZDogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIlVyaW5lIHNwZWNpbWVuIGNvbGxlY3Rpb24sIGNhdGhldGVyaXplZFwiLFxyXG4gICAgY29kZTogXCI3MDc3NzAwMVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9zbm9tZWQuaW5mby9zY3RcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBDb2RlOiA3MzQxNjAwMVxyXG4gICAqL1xyXG4gIFVyaW5lU3BlY2ltZW5Db2xsZWN0aW9uQ2xlYW5DYXRjaDogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIlVyaW5lIHNwZWNpbWVuIGNvbGxlY3Rpb24sIGNsZWFuIGNhdGNoXCIsXHJcbiAgICBjb2RlOiBcIjczNDE2MDAxXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Nub21lZC5pbmZvL3NjdFwiLFxyXG4gIH0pLFxyXG59IGFzIGNvbnN0O1xyXG5cclxuLyoqXHJcbiAqIEFjdGlvbnMgdGhhdCBjYW4gYmUgdGFrZW4gZm9yIHRoZSBjb2xsZWN0aW9uIG9mIHNwZWNpbWVuIGZyb20gYSBzdWJqZWN0LlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgU3BlY2ltZW5Db2xsZWN0aW9uQ29kaW5nVHlwZSA9IHR5cGVvZiBTcGVjaW1lbkNvbGxlY3Rpb25Db2RpbmdzO1xyXG4iXX0=