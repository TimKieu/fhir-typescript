// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/report-status-codes|4.0.1
/**
 * The current status of the test report.
 */
export const ReportStatusCodings = {
    /**
     * completed: All test operations have completed.
     */
    Completed: {
        display: "Completed",
        code: "completed",
        system: "http://hl7.org/fhir/report-status-codes",
    },
    /**
     * entered-in-error: This test report was entered or created in error.
     */
    EnteredInError: {
        display: "Entered In Error",
        code: "entered-in-error",
        system: "http://hl7.org/fhir/report-status-codes",
    },
    /**
     * in-progress: A test operations is currently executing.
     */
    InProgress: {
        display: "In Progress",
        code: "in-progress",
        system: "http://hl7.org/fhir/report-status-codes",
    },
    /**
     * stopped: The test script execution was manually stopped.
     */
    Stopped: {
        display: "Stopped",
        code: "stopped",
        system: "http://hl7.org/fhir/report-status-codes",
    },
    /**
     * waiting: A test operation is waiting for an external client request.
     */
    Waiting: {
        display: "Waiting",
        code: "waiting",
        system: "http://hl7.org/fhir/report-status-codes",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVwb3J0U3RhdHVzQ29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvUmVwb3J0U3RhdHVzQ29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyx3RUFBd0U7QUE4QnhFOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sbUJBQW1CLEdBQTBCO0lBQ3hEOztPQUVHO0lBQ0gsU0FBUyxFQUFFO1FBQ1QsT0FBTyxFQUFFLFdBQVc7UUFDcEIsSUFBSSxFQUFFLFdBQVc7UUFDakIsTUFBTSxFQUFFLHlDQUF5QztLQUNsRDtJQUNEOztPQUVHO0lBQ0gsY0FBYyxFQUFFO1FBQ2QsT0FBTyxFQUFFLGtCQUFrQjtRQUMzQixJQUFJLEVBQUUsa0JBQWtCO1FBQ3hCLE1BQU0sRUFBRSx5Q0FBeUM7S0FDbEQ7SUFDRDs7T0FFRztJQUNILFVBQVUsRUFBRTtRQUNWLE9BQU8sRUFBRSxhQUFhO1FBQ3RCLElBQUksRUFBRSxhQUFhO1FBQ25CLE1BQU0sRUFBRSx5Q0FBeUM7S0FDbEQ7SUFDRDs7T0FFRztJQUNILE9BQU8sRUFBRTtRQUNQLE9BQU8sRUFBRSxTQUFTO1FBQ2xCLElBQUksRUFBRSxTQUFTO1FBQ2YsTUFBTSxFQUFFLHlDQUF5QztLQUNsRDtJQUNEOztPQUVHO0lBQ0gsT0FBTyxFQUFFO1FBQ1AsT0FBTyxFQUFFLFNBQVM7UUFDbEIsSUFBSSxFQUFFLFNBQVM7UUFDZixNQUFNLEVBQUUseUNBQXlDO0tBQ2xEO0NBQ08sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNC5jb3JlIHZlcnNpb246IDQuMC4xXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9yZXBvcnQtc3RhdHVzLWNvZGVzfDQuMC4xXHJcblxyXG5pbXBvcnQgeyBDb2RpbmdBcmdzIH0gZnJvbSAnLi4vZmhpci9Db2RpbmcuanMnXHJcblxyXG4vKipcclxuICogVGhlIGN1cnJlbnQgc3RhdHVzIG9mIHRoZSB0ZXN0IHJlcG9ydC5cclxuICovXHJcbmV4cG9ydCB0eXBlIFJlcG9ydFN0YXR1c0NvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogY29tcGxldGVkOiBBbGwgdGVzdCBvcGVyYXRpb25zIGhhdmUgY29tcGxldGVkLlxyXG4gICAqL1xyXG4gIENvbXBsZXRlZDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBlbnRlcmVkLWluLWVycm9yOiBUaGlzIHRlc3QgcmVwb3J0IHdhcyBlbnRlcmVkIG9yIGNyZWF0ZWQgaW4gZXJyb3IuXHJcbiAgICovXHJcbiAgRW50ZXJlZEluRXJyb3I6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogaW4tcHJvZ3Jlc3M6IEEgdGVzdCBvcGVyYXRpb25zIGlzIGN1cnJlbnRseSBleGVjdXRpbmcuXHJcbiAgICovXHJcbiAgSW5Qcm9ncmVzczogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBzdG9wcGVkOiBUaGUgdGVzdCBzY3JpcHQgZXhlY3V0aW9uIHdhcyBtYW51YWxseSBzdG9wcGVkLlxyXG4gICAqL1xyXG4gIFN0b3BwZWQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogd2FpdGluZzogQSB0ZXN0IG9wZXJhdGlvbiBpcyB3YWl0aW5nIGZvciBhbiBleHRlcm5hbCBjbGllbnQgcmVxdWVzdC5cclxuICAgKi9cclxuICBXYWl0aW5nOiBDb2RpbmdBcmdzO1xyXG59XHJcblxyXG4vKipcclxuICogVGhlIGN1cnJlbnQgc3RhdHVzIG9mIHRoZSB0ZXN0IHJlcG9ydC5cclxuICovXHJcbmV4cG9ydCBjb25zdCBSZXBvcnRTdGF0dXNDb2RpbmdzOlJlcG9ydFN0YXR1c0NvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogY29tcGxldGVkOiBBbGwgdGVzdCBvcGVyYXRpb25zIGhhdmUgY29tcGxldGVkLlxyXG4gICAqL1xyXG4gIENvbXBsZXRlZDoge1xyXG4gICAgZGlzcGxheTogXCJDb21wbGV0ZWRcIixcclxuICAgIGNvZGU6IFwiY29tcGxldGVkXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXBvcnQtc3RhdHVzLWNvZGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBlbnRlcmVkLWluLWVycm9yOiBUaGlzIHRlc3QgcmVwb3J0IHdhcyBlbnRlcmVkIG9yIGNyZWF0ZWQgaW4gZXJyb3IuXHJcbiAgICovXHJcbiAgRW50ZXJlZEluRXJyb3I6IHtcclxuICAgIGRpc3BsYXk6IFwiRW50ZXJlZCBJbiBFcnJvclwiLFxyXG4gICAgY29kZTogXCJlbnRlcmVkLWluLWVycm9yXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXBvcnQtc3RhdHVzLWNvZGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBpbi1wcm9ncmVzczogQSB0ZXN0IG9wZXJhdGlvbnMgaXMgY3VycmVudGx5IGV4ZWN1dGluZy5cclxuICAgKi9cclxuICBJblByb2dyZXNzOiB7XHJcbiAgICBkaXNwbGF5OiBcIkluIFByb2dyZXNzXCIsXHJcbiAgICBjb2RlOiBcImluLXByb2dyZXNzXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXBvcnQtc3RhdHVzLWNvZGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBzdG9wcGVkOiBUaGUgdGVzdCBzY3JpcHQgZXhlY3V0aW9uIHdhcyBtYW51YWxseSBzdG9wcGVkLlxyXG4gICAqL1xyXG4gIFN0b3BwZWQ6IHtcclxuICAgIGRpc3BsYXk6IFwiU3RvcHBlZFwiLFxyXG4gICAgY29kZTogXCJzdG9wcGVkXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXBvcnQtc3RhdHVzLWNvZGVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiB3YWl0aW5nOiBBIHRlc3Qgb3BlcmF0aW9uIGlzIHdhaXRpbmcgZm9yIGFuIGV4dGVybmFsIGNsaWVudCByZXF1ZXN0LlxyXG4gICAqL1xyXG4gIFdhaXRpbmc6IHtcclxuICAgIGRpc3BsYXk6IFwiV2FpdGluZ1wiLFxyXG4gICAgY29kZTogXCJ3YWl0aW5nXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9yZXBvcnQtc3RhdHVzLWNvZGVzXCIsXHJcbiAgfSxcclxufSBhcyBjb25zdDtcclxuIl19