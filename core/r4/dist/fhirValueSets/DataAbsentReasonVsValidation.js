// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet Validation: http://hl7.org/fhir/ValueSet/data-absent-reason|4.0.1
/**
 * Used to specify why the normally expected content of the data element is missing.
 */
export const DataAbsentReasonVsValidation = [
    "as-text", "http://terminology.hl7.org/CodeSystem/data-absent-reason|as-text",
    "asked-declined", "http://terminology.hl7.org/CodeSystem/data-absent-reason|asked-declined",
    "asked-unknown", "http://terminology.hl7.org/CodeSystem/data-absent-reason|asked-unknown",
    "error", "http://terminology.hl7.org/CodeSystem/data-absent-reason|error",
    "masked", "http://terminology.hl7.org/CodeSystem/data-absent-reason|masked",
    "negative-infinity", "http://terminology.hl7.org/CodeSystem/data-absent-reason|negative-infinity",
    "not-a-number", "http://terminology.hl7.org/CodeSystem/data-absent-reason|not-a-number",
    "not-applicable", "http://terminology.hl7.org/CodeSystem/data-absent-reason|not-applicable",
    "not-asked", "http://terminology.hl7.org/CodeSystem/data-absent-reason|not-asked",
    "not-performed", "http://terminology.hl7.org/CodeSystem/data-absent-reason|not-performed",
    "not-permitted", "http://terminology.hl7.org/CodeSystem/data-absent-reason|not-permitted",
    "positive-infinity", "http://terminology.hl7.org/CodeSystem/data-absent-reason|positive-infinity",
    "temp-unknown", "http://terminology.hl7.org/CodeSystem/data-absent-reason|temp-unknown",
    "unknown", "http://terminology.hl7.org/CodeSystem/data-absent-reason|unknown",
    "unsupported", "http://terminology.hl7.org/CodeSystem/data-absent-reason|unsupported",
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGF0YUFic2VudFJlYXNvblZzVmFsaWRhdGlvbi5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvRGF0YUFic2VudFJlYXNvblZzVmFsaWRhdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyxrRkFBa0Y7QUFFbEY7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSw0QkFBNEIsR0FBc0I7SUFDN0QsU0FBUyxFQUFFLGtFQUFrRTtJQUM3RSxnQkFBZ0IsRUFBRSx5RUFBeUU7SUFDM0YsZUFBZSxFQUFFLHdFQUF3RTtJQUN6RixPQUFPLEVBQUUsZ0VBQWdFO0lBQ3pFLFFBQVEsRUFBRSxpRUFBaUU7SUFDM0UsbUJBQW1CLEVBQUUsNEVBQTRFO0lBQ2pHLGNBQWMsRUFBRSx1RUFBdUU7SUFDdkYsZ0JBQWdCLEVBQUUseUVBQXlFO0lBQzNGLFdBQVcsRUFBRSxvRUFBb0U7SUFDakYsZUFBZSxFQUFFLHdFQUF3RTtJQUN6RixlQUFlLEVBQUUsd0VBQXdFO0lBQ3pGLG1CQUFtQixFQUFFLDRFQUE0RTtJQUNqRyxjQUFjLEVBQUUsdUVBQXVFO0lBQ3ZGLFNBQVMsRUFBRSxrRUFBa0U7SUFDN0UsYUFBYSxFQUFFLHNFQUFzRTtDQUM3RSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0LmNvcmUgdmVyc2lvbjogNC4wLjFcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0IFZhbGlkYXRpb246IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvZGF0YS1hYnNlbnQtcmVhc29ufDQuMC4xXHJcblxyXG4vKipcclxuICogVXNlZCB0byBzcGVjaWZ5IHdoeSB0aGUgbm9ybWFsbHkgZXhwZWN0ZWQgY29udGVudCBvZiB0aGUgZGF0YSBlbGVtZW50IGlzIG1pc3NpbmcuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgRGF0YUFic2VudFJlYXNvblZzVmFsaWRhdGlvbjogcmVhZG9ubHkgc3RyaW5nW10gPSBbXHJcbiAgXCJhcy10ZXh0XCIsIFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9kYXRhLWFic2VudC1yZWFzb258YXMtdGV4dFwiLCBcclxuICBcImFza2VkLWRlY2xpbmVkXCIsIFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9kYXRhLWFic2VudC1yZWFzb258YXNrZWQtZGVjbGluZWRcIiwgXHJcbiAgXCJhc2tlZC11bmtub3duXCIsIFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9kYXRhLWFic2VudC1yZWFzb258YXNrZWQtdW5rbm93blwiLCBcclxuICBcImVycm9yXCIsIFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9kYXRhLWFic2VudC1yZWFzb258ZXJyb3JcIiwgXHJcbiAgXCJtYXNrZWRcIiwgXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2RhdGEtYWJzZW50LXJlYXNvbnxtYXNrZWRcIiwgXHJcbiAgXCJuZWdhdGl2ZS1pbmZpbml0eVwiLCBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vZGF0YS1hYnNlbnQtcmVhc29ufG5lZ2F0aXZlLWluZmluaXR5XCIsIFxyXG4gIFwibm90LWEtbnVtYmVyXCIsIFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9kYXRhLWFic2VudC1yZWFzb258bm90LWEtbnVtYmVyXCIsIFxyXG4gIFwibm90LWFwcGxpY2FibGVcIiwgXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2RhdGEtYWJzZW50LXJlYXNvbnxub3QtYXBwbGljYWJsZVwiLCBcclxuICBcIm5vdC1hc2tlZFwiLCBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vZGF0YS1hYnNlbnQtcmVhc29ufG5vdC1hc2tlZFwiLCBcclxuICBcIm5vdC1wZXJmb3JtZWRcIiwgXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2RhdGEtYWJzZW50LXJlYXNvbnxub3QtcGVyZm9ybWVkXCIsIFxyXG4gIFwibm90LXBlcm1pdHRlZFwiLCBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vZGF0YS1hYnNlbnQtcmVhc29ufG5vdC1wZXJtaXR0ZWRcIiwgXHJcbiAgXCJwb3NpdGl2ZS1pbmZpbml0eVwiLCBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vZGF0YS1hYnNlbnQtcmVhc29ufHBvc2l0aXZlLWluZmluaXR5XCIsIFxyXG4gIFwidGVtcC11bmtub3duXCIsIFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9kYXRhLWFic2VudC1yZWFzb258dGVtcC11bmtub3duXCIsIFxyXG4gIFwidW5rbm93blwiLCBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vZGF0YS1hYnNlbnQtcmVhc29ufHVua25vd25cIiwgXHJcbiAgXCJ1bnN1cHBvcnRlZFwiLCBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vZGF0YS1hYnNlbnQtcmVhc29ufHVuc3VwcG9ydGVkXCIsIFxyXG5dIGFzIGNvbnN0O1xyXG4iXX0=