// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/adjudication|4.0.1
/**
 * This value set includes a smattering of Adjudication Value codes which includes codes to indicate the amounts eligible under the plan, the amount of benefit, copays etc.
 */
export const AdjudicationCodings = {
    /**
     * benefit: Amount payable under the coverage
     */
    BenefitAmount: {
        display: "Benefit Amount",
        code: "benefit",
        system: "http://terminology.hl7.org/CodeSystem/adjudication",
    },
    /**
     * copay: Patient Co-Payment
     */
    CoPay: {
        display: "CoPay",
        code: "copay",
        system: "http://terminology.hl7.org/CodeSystem/adjudication",
    },
    /**
     * deductible: Amount deducted from the eligible amount prior to adjudication.
     */
    Deductible: {
        display: "Deductible",
        code: "deductible",
        system: "http://terminology.hl7.org/CodeSystem/adjudication",
    },
    /**
     * eligible: Amount of the change which is considered for adjudication.
     */
    EligibleAmount: {
        display: "Eligible Amount",
        code: "eligible",
        system: "http://terminology.hl7.org/CodeSystem/adjudication",
    },
    /**
     * eligpercent: Eligible Percentage.
     */
    EligiblePercent: {
        display: "Eligible %",
        code: "eligpercent",
        system: "http://terminology.hl7.org/CodeSystem/adjudication",
    },
    /**
     * submitted: The total submitted amount for the claim or group or line item.
     */
    SubmittedAmount: {
        display: "Submitted Amount",
        code: "submitted",
        system: "http://terminology.hl7.org/CodeSystem/adjudication",
    },
    /**
     * tax: The amount of tax.
     */
    Tax: {
        display: "Tax",
        code: "tax",
        system: "http://terminology.hl7.org/CodeSystem/adjudication",
    },
    /**
     * unallocdeduct: The amount of deductible which could not allocated to other line items.
     */
    UnallocatedDeductible: {
        display: "Unallocated Deductible",
        code: "unallocdeduct",
        system: "http://terminology.hl7.org/CodeSystem/adjudication",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQWRqdWRpY2F0aW9uQ29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvQWRqdWRpY2F0aW9uQ29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyxpRUFBaUU7QUEwQ2pFOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sbUJBQW1CLEdBQTBCO0lBQ3hEOztPQUVHO0lBQ0gsYUFBYSxFQUFFO1FBQ2IsT0FBTyxFQUFFLGdCQUFnQjtRQUN6QixJQUFJLEVBQUUsU0FBUztRQUNmLE1BQU0sRUFBRSxvREFBb0Q7S0FDN0Q7SUFDRDs7T0FFRztJQUNILEtBQUssRUFBRTtRQUNMLE9BQU8sRUFBRSxPQUFPO1FBQ2hCLElBQUksRUFBRSxPQUFPO1FBQ2IsTUFBTSxFQUFFLG9EQUFvRDtLQUM3RDtJQUNEOztPQUVHO0lBQ0gsVUFBVSxFQUFFO1FBQ1YsT0FBTyxFQUFFLFlBQVk7UUFDckIsSUFBSSxFQUFFLFlBQVk7UUFDbEIsTUFBTSxFQUFFLG9EQUFvRDtLQUM3RDtJQUNEOztPQUVHO0lBQ0gsY0FBYyxFQUFFO1FBQ2QsT0FBTyxFQUFFLGlCQUFpQjtRQUMxQixJQUFJLEVBQUUsVUFBVTtRQUNoQixNQUFNLEVBQUUsb0RBQW9EO0tBQzdEO0lBQ0Q7O09BRUc7SUFDSCxlQUFlLEVBQUU7UUFDZixPQUFPLEVBQUUsWUFBWTtRQUNyQixJQUFJLEVBQUUsYUFBYTtRQUNuQixNQUFNLEVBQUUsb0RBQW9EO0tBQzdEO0lBQ0Q7O09BRUc7SUFDSCxlQUFlLEVBQUU7UUFDZixPQUFPLEVBQUUsa0JBQWtCO1FBQzNCLElBQUksRUFBRSxXQUFXO1FBQ2pCLE1BQU0sRUFBRSxvREFBb0Q7S0FDN0Q7SUFDRDs7T0FFRztJQUNILEdBQUcsRUFBRTtRQUNILE9BQU8sRUFBRSxLQUFLO1FBQ2QsSUFBSSxFQUFFLEtBQUs7UUFDWCxNQUFNLEVBQUUsb0RBQW9EO0tBQzdEO0lBQ0Q7O09BRUc7SUFDSCxxQkFBcUIsRUFBRTtRQUNyQixPQUFPLEVBQUUsd0JBQXdCO1FBQ2pDLElBQUksRUFBRSxlQUFlO1FBQ3JCLE1BQU0sRUFBRSxvREFBb0Q7S0FDN0Q7Q0FDTyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0LmNvcmUgdmVyc2lvbjogNC4wLjFcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L2FkanVkaWNhdGlvbnw0LjAuMVxyXG5cclxuaW1wb3J0IHsgQ29kaW5nQXJncyB9IGZyb20gJy4uL2ZoaXIvQ29kaW5nLmpzJ1xyXG5cclxuLyoqXHJcbiAqIFRoaXMgdmFsdWUgc2V0IGluY2x1ZGVzIGEgc21hdHRlcmluZyBvZiBBZGp1ZGljYXRpb24gVmFsdWUgY29kZXMgd2hpY2ggaW5jbHVkZXMgY29kZXMgdG8gaW5kaWNhdGUgdGhlIGFtb3VudHMgZWxpZ2libGUgdW5kZXIgdGhlIHBsYW4sIHRoZSBhbW91bnQgb2YgYmVuZWZpdCwgY29wYXlzIGV0Yy5cclxuICovXHJcbmV4cG9ydCB0eXBlIEFkanVkaWNhdGlvbkNvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogYmVuZWZpdDogQW1vdW50IHBheWFibGUgdW5kZXIgdGhlIGNvdmVyYWdlXHJcbiAgICovXHJcbiAgQmVuZWZpdEFtb3VudDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBjb3BheTogUGF0aWVudCBDby1QYXltZW50XHJcbiAgICovXHJcbiAgQ29QYXk6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogZGVkdWN0aWJsZTogQW1vdW50IGRlZHVjdGVkIGZyb20gdGhlIGVsaWdpYmxlIGFtb3VudCBwcmlvciB0byBhZGp1ZGljYXRpb24uXHJcbiAgICovXHJcbiAgRGVkdWN0aWJsZTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBlbGlnaWJsZTogQW1vdW50IG9mIHRoZSBjaGFuZ2Ugd2hpY2ggaXMgY29uc2lkZXJlZCBmb3IgYWRqdWRpY2F0aW9uLlxyXG4gICAqL1xyXG4gIEVsaWdpYmxlQW1vdW50OiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIGVsaWdwZXJjZW50OiBFbGlnaWJsZSBQZXJjZW50YWdlLlxyXG4gICAqL1xyXG4gIEVsaWdpYmxlUGVyY2VudDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBzdWJtaXR0ZWQ6IFRoZSB0b3RhbCBzdWJtaXR0ZWQgYW1vdW50IGZvciB0aGUgY2xhaW0gb3IgZ3JvdXAgb3IgbGluZSBpdGVtLlxyXG4gICAqL1xyXG4gIFN1Ym1pdHRlZEFtb3VudDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiB0YXg6IFRoZSBhbW91bnQgb2YgdGF4LlxyXG4gICAqL1xyXG4gIFRheDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiB1bmFsbG9jZGVkdWN0OiBUaGUgYW1vdW50IG9mIGRlZHVjdGlibGUgd2hpY2ggY291bGQgbm90IGFsbG9jYXRlZCB0byBvdGhlciBsaW5lIGl0ZW1zLlxyXG4gICAqL1xyXG4gIFVuYWxsb2NhdGVkRGVkdWN0aWJsZTogQ29kaW5nQXJncztcclxufVxyXG5cclxuLyoqXHJcbiAqIFRoaXMgdmFsdWUgc2V0IGluY2x1ZGVzIGEgc21hdHRlcmluZyBvZiBBZGp1ZGljYXRpb24gVmFsdWUgY29kZXMgd2hpY2ggaW5jbHVkZXMgY29kZXMgdG8gaW5kaWNhdGUgdGhlIGFtb3VudHMgZWxpZ2libGUgdW5kZXIgdGhlIHBsYW4sIHRoZSBhbW91bnQgb2YgYmVuZWZpdCwgY29wYXlzIGV0Yy5cclxuICovXHJcbmV4cG9ydCBjb25zdCBBZGp1ZGljYXRpb25Db2RpbmdzOkFkanVkaWNhdGlvbkNvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogYmVuZWZpdDogQW1vdW50IHBheWFibGUgdW5kZXIgdGhlIGNvdmVyYWdlXHJcbiAgICovXHJcbiAgQmVuZWZpdEFtb3VudDoge1xyXG4gICAgZGlzcGxheTogXCJCZW5lZml0IEFtb3VudFwiLFxyXG4gICAgY29kZTogXCJiZW5lZml0XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9hZGp1ZGljYXRpb25cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIGNvcGF5OiBQYXRpZW50IENvLVBheW1lbnRcclxuICAgKi9cclxuICBDb1BheToge1xyXG4gICAgZGlzcGxheTogXCJDb1BheVwiLFxyXG4gICAgY29kZTogXCJjb3BheVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vYWRqdWRpY2F0aW9uXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBkZWR1Y3RpYmxlOiBBbW91bnQgZGVkdWN0ZWQgZnJvbSB0aGUgZWxpZ2libGUgYW1vdW50IHByaW9yIHRvIGFkanVkaWNhdGlvbi5cclxuICAgKi9cclxuICBEZWR1Y3RpYmxlOiB7XHJcbiAgICBkaXNwbGF5OiBcIkRlZHVjdGlibGVcIixcclxuICAgIGNvZGU6IFwiZGVkdWN0aWJsZVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vYWRqdWRpY2F0aW9uXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBlbGlnaWJsZTogQW1vdW50IG9mIHRoZSBjaGFuZ2Ugd2hpY2ggaXMgY29uc2lkZXJlZCBmb3IgYWRqdWRpY2F0aW9uLlxyXG4gICAqL1xyXG4gIEVsaWdpYmxlQW1vdW50OiB7XHJcbiAgICBkaXNwbGF5OiBcIkVsaWdpYmxlIEFtb3VudFwiLFxyXG4gICAgY29kZTogXCJlbGlnaWJsZVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vYWRqdWRpY2F0aW9uXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBlbGlncGVyY2VudDogRWxpZ2libGUgUGVyY2VudGFnZS5cclxuICAgKi9cclxuICBFbGlnaWJsZVBlcmNlbnQ6IHtcclxuICAgIGRpc3BsYXk6IFwiRWxpZ2libGUgJVwiLFxyXG4gICAgY29kZTogXCJlbGlncGVyY2VudFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vYWRqdWRpY2F0aW9uXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBzdWJtaXR0ZWQ6IFRoZSB0b3RhbCBzdWJtaXR0ZWQgYW1vdW50IGZvciB0aGUgY2xhaW0gb3IgZ3JvdXAgb3IgbGluZSBpdGVtLlxyXG4gICAqL1xyXG4gIFN1Ym1pdHRlZEFtb3VudDoge1xyXG4gICAgZGlzcGxheTogXCJTdWJtaXR0ZWQgQW1vdW50XCIsXHJcbiAgICBjb2RlOiBcInN1Ym1pdHRlZFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vYWRqdWRpY2F0aW9uXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiB0YXg6IFRoZSBhbW91bnQgb2YgdGF4LlxyXG4gICAqL1xyXG4gIFRheDoge1xyXG4gICAgZGlzcGxheTogXCJUYXhcIixcclxuICAgIGNvZGU6IFwidGF4XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9hZGp1ZGljYXRpb25cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIHVuYWxsb2NkZWR1Y3Q6IFRoZSBhbW91bnQgb2YgZGVkdWN0aWJsZSB3aGljaCBjb3VsZCBub3QgYWxsb2NhdGVkIHRvIG90aGVyIGxpbmUgaXRlbXMuXHJcbiAgICovXHJcbiAgVW5hbGxvY2F0ZWREZWR1Y3RpYmxlOiB7XHJcbiAgICBkaXNwbGF5OiBcIlVuYWxsb2NhdGVkIERlZHVjdGlibGVcIixcclxuICAgIGNvZGU6IFwidW5hbGxvY2RlZHVjdFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vYWRqdWRpY2F0aW9uXCIsXHJcbiAgfSxcclxufSBhcyBjb25zdDtcclxuIl19