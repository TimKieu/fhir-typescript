// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/specimen-status|4.0.1
import { Coding } from '../fhir/Coding.js';
/**
 * Codes providing the status/availability of a specimen.
 */
export const SpecimenStatusCodings = {
    /**
     * available: The physical specimen is present and in good condition.
     */
    Available: new Coding({
        display: "Available",
        code: "available",
        system: "http://hl7.org/fhir/specimen-status",
    }),
    /**
     * entered-in-error: The specimen was entered in error and therefore nullified.
     */
    EnteredInError: new Coding({
        display: "Entered in Error",
        code: "entered-in-error",
        system: "http://hl7.org/fhir/specimen-status",
    }),
    /**
     * unavailable: There is no physical specimen because it is either lost, destroyed or consumed.
     */
    Unavailable: new Coding({
        display: "Unavailable",
        code: "unavailable",
        system: "http://hl7.org/fhir/specimen-status",
    }),
    /**
     * unsatisfactory: The specimen cannot be used because of a quality issue such as a broken container, contamination, or too old.
     */
    Unsatisfactory: new Coding({
        display: "Unsatisfactory",
        code: "unsatisfactory",
        system: "http://hl7.org/fhir/specimen-status",
    }),
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3BlY2ltZW5TdGF0dXNDb2RpbmdzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9TcGVjaW1lblN0YXR1c0NvZGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLCtDQUErQztBQUMvQyxrQ0FBa0M7QUFDbEMsb0VBQW9FO0FBRXBFLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQTtBQUUxQzs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUFHO0lBQ25DOztPQUVHO0lBQ0gsU0FBUyxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ3BCLE9BQU8sRUFBRSxXQUFXO1FBQ3BCLElBQUksRUFBRSxXQUFXO1FBQ2pCLE1BQU0sRUFBRSxxQ0FBcUM7S0FDOUMsQ0FBQztJQUNGOztPQUVHO0lBQ0gsY0FBYyxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ3pCLE9BQU8sRUFBRSxrQkFBa0I7UUFDM0IsSUFBSSxFQUFFLGtCQUFrQjtRQUN4QixNQUFNLEVBQUUscUNBQXFDO0tBQzlDLENBQUM7SUFDRjs7T0FFRztJQUNILFdBQVcsRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUN0QixPQUFPLEVBQUUsYUFBYTtRQUN0QixJQUFJLEVBQUUsYUFBYTtRQUNuQixNQUFNLEVBQUUscUNBQXFDO0tBQzlDLENBQUM7SUFDRjs7T0FFRztJQUNILGNBQWMsRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUN6QixPQUFPLEVBQUUsZ0JBQWdCO1FBQ3pCLElBQUksRUFBRSxnQkFBZ0I7UUFDdEIsTUFBTSxFQUFFLHFDQUFxQztLQUM5QyxDQUFDO0NBQ00sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNC5jb3JlIHZlcnNpb246IDQuMC4xXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9zcGVjaW1lbi1zdGF0dXN8NC4wLjFcclxuXHJcbmltcG9ydCB7IENvZGluZyB9IGZyb20gJy4uL2ZoaXIvQ29kaW5nLmpzJ1xyXG5cclxuLyoqXHJcbiAqIENvZGVzIHByb3ZpZGluZyB0aGUgc3RhdHVzL2F2YWlsYWJpbGl0eSBvZiBhIHNwZWNpbWVuLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IFNwZWNpbWVuU3RhdHVzQ29kaW5ncyA9IHtcclxuICAvKipcclxuICAgKiBhdmFpbGFibGU6IFRoZSBwaHlzaWNhbCBzcGVjaW1lbiBpcyBwcmVzZW50IGFuZCBpbiBnb29kIGNvbmRpdGlvbi5cclxuICAgKi9cclxuICBBdmFpbGFibGU6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJBdmFpbGFibGVcIixcclxuICAgIGNvZGU6IFwiYXZhaWxhYmxlXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9zcGVjaW1lbi1zdGF0dXNcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBlbnRlcmVkLWluLWVycm9yOiBUaGUgc3BlY2ltZW4gd2FzIGVudGVyZWQgaW4gZXJyb3IgYW5kIHRoZXJlZm9yZSBudWxsaWZpZWQuXHJcbiAgICovXHJcbiAgRW50ZXJlZEluRXJyb3I6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJFbnRlcmVkIGluIEVycm9yXCIsXHJcbiAgICBjb2RlOiBcImVudGVyZWQtaW4tZXJyb3JcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3NwZWNpbWVuLXN0YXR1c1wiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIHVuYXZhaWxhYmxlOiBUaGVyZSBpcyBubyBwaHlzaWNhbCBzcGVjaW1lbiBiZWNhdXNlIGl0IGlzIGVpdGhlciBsb3N0LCBkZXN0cm95ZWQgb3IgY29uc3VtZWQuXHJcbiAgICovXHJcbiAgVW5hdmFpbGFibGU6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJVbmF2YWlsYWJsZVwiLFxyXG4gICAgY29kZTogXCJ1bmF2YWlsYWJsZVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvc3BlY2ltZW4tc3RhdHVzXCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogdW5zYXRpc2ZhY3Rvcnk6IFRoZSBzcGVjaW1lbiBjYW5ub3QgYmUgdXNlZCBiZWNhdXNlIG9mIGEgcXVhbGl0eSBpc3N1ZSBzdWNoIGFzIGEgYnJva2VuIGNvbnRhaW5lciwgY29udGFtaW5hdGlvbiwgb3IgdG9vIG9sZC5cclxuICAgKi9cclxuICBVbnNhdGlzZmFjdG9yeTogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIlVuc2F0aXNmYWN0b3J5XCIsXHJcbiAgICBjb2RlOiBcInVuc2F0aXNmYWN0b3J5XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9zcGVjaW1lbi1zdGF0dXNcIixcclxuICB9KSxcclxufSBhcyBjb25zdDtcclxuXHJcbi8qKlxyXG4gKiBDb2RlcyBwcm92aWRpbmcgdGhlIHN0YXR1cy9hdmFpbGFiaWxpdHkgb2YgYSBzcGVjaW1lbi5cclxuICovXHJcbmV4cG9ydCB0eXBlIFNwZWNpbWVuU3RhdHVzQ29kaW5nVHlwZSA9IHR5cGVvZiBTcGVjaW1lblN0YXR1c0NvZGluZ3M7XHJcbiJdfQ==