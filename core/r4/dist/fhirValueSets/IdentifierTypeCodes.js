// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/identifier-type|4.0.1
/**
 * A coded type for an identifier that can be used to determine which identifier to use for a specific purpose.
 */
export const IdentifierTypeCodes = {
    /**
     * Code: ACSN
     */
    AccessionID: "ACSN",
    /**
     * Code: BRN
     */
    BreedRegistryNumber: "BRN",
    /**
     * Code: DL
     */
    DriverQuoteSLicenseNumber: "DL",
    /**
     * Code: DR
     */
    DonorRegistrationNumber: "DR",
    /**
     * Code: EN
     */
    EmployerNumber: "EN",
    /**
     * Code: FILL
     */
    FillerIdentifier: "FILL",
    /**
     * Code: JHN
     */
    JurisdictionalHealthNumberCanada: "JHN",
    /**
     * Code: MCN
     */
    MicrochipNumber: "MCN",
    /**
     * Code: MD
     */
    MedicalLicenseNumber: "MD",
    /**
     * Code: MR
     */
    MedicalRecordNumber: "MR",
    /**
     * Code: NIIP
     */
    NationalInsurancePayorIdentifierPayor: "NIIP",
    /**
     * Code: PLAC
     */
    PlacerIdentifier: "PLAC",
    /**
     * Code: PPN
     */
    PassportNumber: "PPN",
    /**
     * Code: PRN
     */
    ProviderNumber: "PRN",
    /**
     * Code: SB
     */
    SocialBeneficiaryIdentifier: "SB",
    /**
     * Code: SNO
     */
    SerialNumber: "SNO",
    /**
     * Code: TAX
     */
    TaxIDNumber: "TAX",
    /**
     * Code: UDI
     */
    UniversalDeviceIdentifier: "UDI",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSWRlbnRpZmllclR5cGVDb2Rlcy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvSWRlbnRpZmllclR5cGVDb2Rlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyxvRUFBb0U7QUFFcEU7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxtQkFBbUIsR0FBRztJQUNqQzs7T0FFRztJQUNILFdBQVcsRUFBRSxNQUFNO0lBQ25COztPQUVHO0lBQ0gsbUJBQW1CLEVBQUUsS0FBSztJQUMxQjs7T0FFRztJQUNILHlCQUF5QixFQUFFLElBQUk7SUFDL0I7O09BRUc7SUFDSCx1QkFBdUIsRUFBRSxJQUFJO0lBQzdCOztPQUVHO0lBQ0gsY0FBYyxFQUFFLElBQUk7SUFDcEI7O09BRUc7SUFDSCxnQkFBZ0IsRUFBRSxNQUFNO0lBQ3hCOztPQUVHO0lBQ0gsZ0NBQWdDLEVBQUUsS0FBSztJQUN2Qzs7T0FFRztJQUNILGVBQWUsRUFBRSxLQUFLO0lBQ3RCOztPQUVHO0lBQ0gsb0JBQW9CLEVBQUUsSUFBSTtJQUMxQjs7T0FFRztJQUNILG1CQUFtQixFQUFFLElBQUk7SUFDekI7O09BRUc7SUFDSCxxQ0FBcUMsRUFBRSxNQUFNO0lBQzdDOztPQUVHO0lBQ0gsZ0JBQWdCLEVBQUUsTUFBTTtJQUN4Qjs7T0FFRztJQUNILGNBQWMsRUFBRSxLQUFLO0lBQ3JCOztPQUVHO0lBQ0gsY0FBYyxFQUFFLEtBQUs7SUFDckI7O09BRUc7SUFDSCwyQkFBMkIsRUFBRSxJQUFJO0lBQ2pDOztPQUVHO0lBQ0gsWUFBWSxFQUFFLEtBQUs7SUFDbkI7O09BRUc7SUFDSCxXQUFXLEVBQUUsS0FBSztJQUNsQjs7T0FFRztJQUNILHlCQUF5QixFQUFFLEtBQUs7Q0FDeEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNC5jb3JlIHZlcnNpb246IDQuMC4xXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9pZGVudGlmaWVyLXR5cGV8NC4wLjFcclxuXHJcbi8qKlxyXG4gKiBBIGNvZGVkIHR5cGUgZm9yIGFuIGlkZW50aWZpZXIgdGhhdCBjYW4gYmUgdXNlZCB0byBkZXRlcm1pbmUgd2hpY2ggaWRlbnRpZmllciB0byB1c2UgZm9yIGEgc3BlY2lmaWMgcHVycG9zZS5cclxuICovXHJcbmV4cG9ydCBjb25zdCBJZGVudGlmaWVyVHlwZUNvZGVzID0ge1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IEFDU05cclxuICAgKi9cclxuICBBY2Nlc3Npb25JRDogXCJBQ1NOXCIsXHJcbiAgLyoqXHJcbiAgICogQ29kZTogQlJOXHJcbiAgICovXHJcbiAgQnJlZWRSZWdpc3RyeU51bWJlcjogXCJCUk5cIixcclxuICAvKipcclxuICAgKiBDb2RlOiBETFxyXG4gICAqL1xyXG4gIERyaXZlclF1b3RlU0xpY2Vuc2VOdW1iZXI6IFwiRExcIixcclxuICAvKipcclxuICAgKiBDb2RlOiBEUlxyXG4gICAqL1xyXG4gIERvbm9yUmVnaXN0cmF0aW9uTnVtYmVyOiBcIkRSXCIsXHJcbiAgLyoqXHJcbiAgICogQ29kZTogRU5cclxuICAgKi9cclxuICBFbXBsb3llck51bWJlcjogXCJFTlwiLFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IEZJTExcclxuICAgKi9cclxuICBGaWxsZXJJZGVudGlmaWVyOiBcIkZJTExcIixcclxuICAvKipcclxuICAgKiBDb2RlOiBKSE5cclxuICAgKi9cclxuICBKdXJpc2RpY3Rpb25hbEhlYWx0aE51bWJlckNhbmFkYTogXCJKSE5cIixcclxuICAvKipcclxuICAgKiBDb2RlOiBNQ05cclxuICAgKi9cclxuICBNaWNyb2NoaXBOdW1iZXI6IFwiTUNOXCIsXHJcbiAgLyoqXHJcbiAgICogQ29kZTogTURcclxuICAgKi9cclxuICBNZWRpY2FsTGljZW5zZU51bWJlcjogXCJNRFwiLFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IE1SXHJcbiAgICovXHJcbiAgTWVkaWNhbFJlY29yZE51bWJlcjogXCJNUlwiLFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IE5JSVBcclxuICAgKi9cclxuICBOYXRpb25hbEluc3VyYW5jZVBheW9ySWRlbnRpZmllclBheW9yOiBcIk5JSVBcIixcclxuICAvKipcclxuICAgKiBDb2RlOiBQTEFDXHJcbiAgICovXHJcbiAgUGxhY2VySWRlbnRpZmllcjogXCJQTEFDXCIsXHJcbiAgLyoqXHJcbiAgICogQ29kZTogUFBOXHJcbiAgICovXHJcbiAgUGFzc3BvcnROdW1iZXI6IFwiUFBOXCIsXHJcbiAgLyoqXHJcbiAgICogQ29kZTogUFJOXHJcbiAgICovXHJcbiAgUHJvdmlkZXJOdW1iZXI6IFwiUFJOXCIsXHJcbiAgLyoqXHJcbiAgICogQ29kZTogU0JcclxuICAgKi9cclxuICBTb2NpYWxCZW5lZmljaWFyeUlkZW50aWZpZXI6IFwiU0JcIixcclxuICAvKipcclxuICAgKiBDb2RlOiBTTk9cclxuICAgKi9cclxuICBTZXJpYWxOdW1iZXI6IFwiU05PXCIsXHJcbiAgLyoqXHJcbiAgICogQ29kZTogVEFYXHJcbiAgICovXHJcbiAgVGF4SUROdW1iZXI6IFwiVEFYXCIsXHJcbiAgLyoqXHJcbiAgICogQ29kZTogVURJXHJcbiAgICovXHJcbiAgVW5pdmVyc2FsRGV2aWNlSWRlbnRpZmllcjogXCJVRElcIixcclxufSBhcyBjb25zdDtcclxuXHJcbi8qKlxyXG4gKiBBIGNvZGVkIHR5cGUgZm9yIGFuIGlkZW50aWZpZXIgdGhhdCBjYW4gYmUgdXNlZCB0byBkZXRlcm1pbmUgd2hpY2ggaWRlbnRpZmllciB0byB1c2UgZm9yIGEgc3BlY2lmaWMgcHVycG9zZS5cclxuICovXHJcbmV4cG9ydCB0eXBlIElkZW50aWZpZXJUeXBlQ29kZVR5cGUgPSB0eXBlb2YgSWRlbnRpZmllclR5cGVDb2Rlc1trZXlvZiB0eXBlb2YgSWRlbnRpZmllclR5cGVDb2Rlc107XHJcbiJdfQ==