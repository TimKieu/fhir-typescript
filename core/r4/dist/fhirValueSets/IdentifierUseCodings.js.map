{"version":3,"file":"IdentifierUseCodings.js","sources":["../../src/fhirValueSets/IdentifierUseCodings.ts"],"sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4.core version: 4.0.1\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR ValueSet: http://hl7.org/fhir/ValueSet/identifier-use|4.0.1\r\n\r\nimport { Coding } from '../fhir/Coding.js'\r\n\r\n/**\r\n * Identifies the purpose for this identifier, if known .\r\n */\r\nexport const IdentifierUseCodings = {\r\n  /**\r\n   * official: The identifier considered to be most trusted for the identification of this item. Sometimes also known as \"primary\" and \"main\". The determination of \"official\" is subjective and implementation guides often provide additional guidelines for use.\r\n   */\r\n  Official: new Coding({\r\n    display: \"Official\",\r\n    code: \"official\",\r\n    system: \"http://hl7.org/fhir/identifier-use\",\r\n  }),\r\n  /**\r\n   * old: The identifier id no longer considered valid, but may be relevant for search purposes.  E.g. Changes to identifier schemes, account merges, etc.\r\n   */\r\n  Old: new Coding({\r\n    display: \"Old\",\r\n    code: \"old\",\r\n    system: \"http://hl7.org/fhir/identifier-use\",\r\n  }),\r\n  /**\r\n   * secondary: An identifier that was assigned in secondary use - it serves to identify the object in a relative context, but cannot be consistently assigned to the same object again in a different context.\r\n   */\r\n  Secondary: new Coding({\r\n    display: \"Secondary\",\r\n    code: \"secondary\",\r\n    system: \"http://hl7.org/fhir/identifier-use\",\r\n  }),\r\n  /**\r\n   * temp: A temporary identifier.\r\n   */\r\n  Temp: new Coding({\r\n    display: \"Temp\",\r\n    code: \"temp\",\r\n    system: \"http://hl7.org/fhir/identifier-use\",\r\n  }),\r\n  /**\r\n   * usual: The identifier recommended for display and use in real-world interactions.\r\n   */\r\n  Usual: new Coding({\r\n    display: \"Usual\",\r\n    code: \"usual\",\r\n    system: \"http://hl7.org/fhir/identifier-use\",\r\n  }),\r\n} as const;\r\n\r\n/**\r\n * Identifies the purpose for this identifier, if known .\r\n */\r\nexport type IdentifierUseCodingType = typeof IdentifierUseCodings;\r\n"],"names":[],"mappings":";;;;AAAA;AAOA;;AAEG;AACU,IAAA,oBAAoB,GAAG;AAClC;;AAEG;IACH,QAAQ,EAAE,IAAI,MAAM,CAAC;AACnB,QAAA,OAAO,EAAE,UAAU;AACnB,QAAA,IAAI,EAAE,UAAU;AAChB,QAAA,MAAM,EAAE,oCAAoC;KAC7C,CAAC;AACF;;AAEG;IACH,GAAG,EAAE,IAAI,MAAM,CAAC;AACd,QAAA,OAAO,EAAE,KAAK;AACd,QAAA,IAAI,EAAE,KAAK;AACX,QAAA,MAAM,EAAE,oCAAoC;KAC7C,CAAC;AACF;;AAEG;IACH,SAAS,EAAE,IAAI,MAAM,CAAC;AACpB,QAAA,OAAO,EAAE,WAAW;AACpB,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,MAAM,EAAE,oCAAoC;KAC7C,CAAC;AACF;;AAEG;IACH,IAAI,EAAE,IAAI,MAAM,CAAC;AACf,QAAA,OAAO,EAAE,MAAM;AACf,QAAA,IAAI,EAAE,MAAM;AACZ,QAAA,MAAM,EAAE,oCAAoC;KAC7C,CAAC;AACF;;AAEG;IACH,KAAK,EAAE,IAAI,MAAM,CAAC;AAChB,QAAA,OAAO,EAAE,OAAO;AAChB,QAAA,IAAI,EAAE,OAAO;AACb,QAAA,MAAM,EAAE,oCAAoC;KAC7C,CAAC;;;;;"}