// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/immunization-recommendation-target-disease|4.0.1
/**
 * The value set to instantiate this attribute should be drawn from a terminologically robust code system that consists of or contains concepts to support describing the disease targeted by a vaccination recommendation. This value set is provided as a suggestive example and includes the SNOMED CT concepts from the 64572001 (Disease) hierarchy.
 */
export const ImmunizationRecommendationTargetDiseaseCodings = {
    /**
     * Code: 14189004
     */
    VAL14189004: {
        code: "14189004",
        system: "http://snomed.info/sct",
    },
    /**
     * Code: 1857005
     */
    VAL1857005: {
        code: "1857005",
        system: "http://snomed.info/sct",
    },
    /**
     * Code: 27836007
     */
    VAL27836007: {
        code: "27836007",
        system: "http://snomed.info/sct",
    },
    /**
     * Code: 36653000
     */
    VAL36653000: {
        code: "36653000",
        system: "http://snomed.info/sct",
    },
    /**
     * Code: 36989005
     */
    VAL36989005: {
        code: "36989005",
        system: "http://snomed.info/sct",
    },
    /**
     * Code: 397430003
     */
    VAL397430003: {
        code: "397430003",
        system: "http://snomed.info/sct",
    },
    /**
     * Code: 398102009
     */
    VAL398102009: {
        code: "398102009",
        system: "http://snomed.info/sct",
    },
    /**
     * Code: 709410003
     */
    VAL709410003: {
        code: "709410003",
        system: "http://snomed.info/sct",
    },
    /**
     * Code: 76902006
     */
    VAL76902006: {
        code: "76902006",
        system: "http://snomed.info/sct",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSW1tdW5pemF0aW9uUmVjb21tZW5kYXRpb25UYXJnZXREaXNlYXNlQ29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvSW1tdW5pemF0aW9uUmVjb21tZW5kYXRpb25UYXJnZXREaXNlYXNlQ29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQywrRkFBK0Y7QUE4Qy9GOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sOENBQThDLEdBQXFEO0lBQzlHOztPQUVHO0lBQ0gsV0FBVyxFQUFFO1FBQ1gsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLHdCQUF3QjtLQUNqQztJQUNEOztPQUVHO0lBQ0gsVUFBVSxFQUFFO1FBQ1YsSUFBSSxFQUFFLFNBQVM7UUFDZixNQUFNLEVBQUUsd0JBQXdCO0tBQ2pDO0lBQ0Q7O09BRUc7SUFDSCxXQUFXLEVBQUU7UUFDWCxJQUFJLEVBQUUsVUFBVTtRQUNoQixNQUFNLEVBQUUsd0JBQXdCO0tBQ2pDO0lBQ0Q7O09BRUc7SUFDSCxXQUFXLEVBQUU7UUFDWCxJQUFJLEVBQUUsVUFBVTtRQUNoQixNQUFNLEVBQUUsd0JBQXdCO0tBQ2pDO0lBQ0Q7O09BRUc7SUFDSCxXQUFXLEVBQUU7UUFDWCxJQUFJLEVBQUUsVUFBVTtRQUNoQixNQUFNLEVBQUUsd0JBQXdCO0tBQ2pDO0lBQ0Q7O09BRUc7SUFDSCxZQUFZLEVBQUU7UUFDWixJQUFJLEVBQUUsV0FBVztRQUNqQixNQUFNLEVBQUUsd0JBQXdCO0tBQ2pDO0lBQ0Q7O09BRUc7SUFDSCxZQUFZLEVBQUU7UUFDWixJQUFJLEVBQUUsV0FBVztRQUNqQixNQUFNLEVBQUUsd0JBQXdCO0tBQ2pDO0lBQ0Q7O09BRUc7SUFDSCxZQUFZLEVBQUU7UUFDWixJQUFJLEVBQUUsV0FBVztRQUNqQixNQUFNLEVBQUUsd0JBQXdCO0tBQ2pDO0lBQ0Q7O09BRUc7SUFDSCxXQUFXLEVBQUU7UUFDWCxJQUFJLEVBQUUsVUFBVTtRQUNoQixNQUFNLEVBQUUsd0JBQXdCO0tBQ2pDO0NBQ08sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNC5jb3JlIHZlcnNpb246IDQuMC4xXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9pbW11bml6YXRpb24tcmVjb21tZW5kYXRpb24tdGFyZ2V0LWRpc2Vhc2V8NC4wLjFcclxuXHJcbmltcG9ydCB7IENvZGluZ0FyZ3MgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiBUaGUgdmFsdWUgc2V0IHRvIGluc3RhbnRpYXRlIHRoaXMgYXR0cmlidXRlIHNob3VsZCBiZSBkcmF3biBmcm9tIGEgdGVybWlub2xvZ2ljYWxseSByb2J1c3QgY29kZSBzeXN0ZW0gdGhhdCBjb25zaXN0cyBvZiBvciBjb250YWlucyBjb25jZXB0cyB0byBzdXBwb3J0IGRlc2NyaWJpbmcgdGhlIGRpc2Vhc2UgdGFyZ2V0ZWQgYnkgYSB2YWNjaW5hdGlvbiByZWNvbW1lbmRhdGlvbi4gVGhpcyB2YWx1ZSBzZXQgaXMgcHJvdmlkZWQgYXMgYSBzdWdnZXN0aXZlIGV4YW1wbGUgYW5kIGluY2x1ZGVzIHRoZSBTTk9NRUQgQ1QgY29uY2VwdHMgZnJvbSB0aGUgNjQ1NzIwMDEgKERpc2Vhc2UpIGhpZXJhcmNoeS5cclxuICovXHJcbmV4cG9ydCB0eXBlIEltbXVuaXphdGlvblJlY29tbWVuZGF0aW9uVGFyZ2V0RGlzZWFzZUNvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogMTQxODkwMDRcclxuICAgKi9cclxuICBWQUwxNDE4OTAwNDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiAxODU3MDA1XHJcbiAgICovXHJcbiAgVkFMMTg1NzAwNTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiAyNzgzNjAwN1xyXG4gICAqL1xyXG4gIFZBTDI3ODM2MDA3OiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IDM2NjUzMDAwXHJcbiAgICovXHJcbiAgVkFMMzY2NTMwMDA6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogMzY5ODkwMDVcclxuICAgKi9cclxuICBWQUwzNjk4OTAwNTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiAzOTc0MzAwMDNcclxuICAgKi9cclxuICBWQUwzOTc0MzAwMDM6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogMzk4MTAyMDA5XHJcbiAgICovXHJcbiAgVkFMMzk4MTAyMDA5OiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IDcwOTQxMDAwM1xyXG4gICAqL1xyXG4gIFZBTDcwOTQxMDAwMzogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiA3NjkwMjAwNlxyXG4gICAqL1xyXG4gIFZBTDc2OTAyMDA2OiBDb2RpbmdBcmdzO1xyXG59XHJcblxyXG4vKipcclxuICogVGhlIHZhbHVlIHNldCB0byBpbnN0YW50aWF0ZSB0aGlzIGF0dHJpYnV0ZSBzaG91bGQgYmUgZHJhd24gZnJvbSBhIHRlcm1pbm9sb2dpY2FsbHkgcm9idXN0IGNvZGUgc3lzdGVtIHRoYXQgY29uc2lzdHMgb2Ygb3IgY29udGFpbnMgY29uY2VwdHMgdG8gc3VwcG9ydCBkZXNjcmliaW5nIHRoZSBkaXNlYXNlIHRhcmdldGVkIGJ5IGEgdmFjY2luYXRpb24gcmVjb21tZW5kYXRpb24uIFRoaXMgdmFsdWUgc2V0IGlzIHByb3ZpZGVkIGFzIGEgc3VnZ2VzdGl2ZSBleGFtcGxlIGFuZCBpbmNsdWRlcyB0aGUgU05PTUVEIENUIGNvbmNlcHRzIGZyb20gdGhlIDY0NTcyMDAxIChEaXNlYXNlKSBoaWVyYXJjaHkuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgSW1tdW5pemF0aW9uUmVjb21tZW5kYXRpb25UYXJnZXREaXNlYXNlQ29kaW5nczpJbW11bml6YXRpb25SZWNvbW1lbmRhdGlvblRhcmdldERpc2Vhc2VDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IDE0MTg5MDA0XHJcbiAgICovXHJcbiAgVkFMMTQxODkwMDQ6IHtcclxuICAgIGNvZGU6IFwiMTQxODkwMDRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vc25vbWVkLmluZm8vc2N0XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiAxODU3MDA1XHJcbiAgICovXHJcbiAgVkFMMTg1NzAwNToge1xyXG4gICAgY29kZTogXCIxODU3MDA1XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Nub21lZC5pbmZvL3NjdFwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogMjc4MzYwMDdcclxuICAgKi9cclxuICBWQUwyNzgzNjAwNzoge1xyXG4gICAgY29kZTogXCIyNzgzNjAwN1wiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9zbm9tZWQuaW5mby9zY3RcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IDM2NjUzMDAwXHJcbiAgICovXHJcbiAgVkFMMzY2NTMwMDA6IHtcclxuICAgIGNvZGU6IFwiMzY2NTMwMDBcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vc25vbWVkLmluZm8vc2N0XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiAzNjk4OTAwNVxyXG4gICAqL1xyXG4gIFZBTDM2OTg5MDA1OiB7XHJcbiAgICBjb2RlOiBcIjM2OTg5MDA1XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Nub21lZC5pbmZvL3NjdFwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogMzk3NDMwMDAzXHJcbiAgICovXHJcbiAgVkFMMzk3NDMwMDAzOiB7XHJcbiAgICBjb2RlOiBcIjM5NzQzMDAwM1wiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9zbm9tZWQuaW5mby9zY3RcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IDM5ODEwMjAwOVxyXG4gICAqL1xyXG4gIFZBTDM5ODEwMjAwOToge1xyXG4gICAgY29kZTogXCIzOTgxMDIwMDlcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vc25vbWVkLmluZm8vc2N0XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiA3MDk0MTAwMDNcclxuICAgKi9cclxuICBWQUw3MDk0MTAwMDM6IHtcclxuICAgIGNvZGU6IFwiNzA5NDEwMDAzXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Nub21lZC5pbmZvL3NjdFwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogNzY5MDIwMDZcclxuICAgKi9cclxuICBWQUw3NjkwMjAwNjoge1xyXG4gICAgY29kZTogXCI3NjkwMjAwNlwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9zbm9tZWQuaW5mby9zY3RcIixcclxuICB9LFxyXG59IGFzIGNvbnN0O1xyXG4iXX0=