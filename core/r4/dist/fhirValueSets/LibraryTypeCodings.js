// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/library-type|4.0.1
/**
 * The type of knowledge asset this library contains.
 */
export const LibraryTypeCodings = {
    /**
     * asset-collection: The resource is a collection of knowledge assets.
     */
    AssetCollection: {
        display: "Asset Collection",
        code: "asset-collection",
        system: "http://terminology.hl7.org/CodeSystem/library-type",
    },
    /**
     * logic-library: The resource is a shareable library of formalized knowledge.
     */
    LogicLibrary: {
        display: "Logic Library",
        code: "logic-library",
        system: "http://terminology.hl7.org/CodeSystem/library-type",
    },
    /**
     * model-definition: The resource is a definition of an information model.
     */
    ModelDefinition: {
        display: "Model Definition",
        code: "model-definition",
        system: "http://terminology.hl7.org/CodeSystem/library-type",
    },
    /**
     * module-definition: The resource defines the dependencies, parameters, and data requirements for a particular module or evaluation context.
     */
    ModuleDefinition: {
        display: "Module Definition",
        code: "module-definition",
        system: "http://terminology.hl7.org/CodeSystem/library-type",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTGlicmFyeVR5cGVDb2RpbmdzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9MaWJyYXJ5VHlwZUNvZGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLCtDQUErQztBQUMvQyxrQ0FBa0M7QUFDbEMsaUVBQWlFO0FBMEJqRTs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLGtCQUFrQixHQUF5QjtJQUN0RDs7T0FFRztJQUNILGVBQWUsRUFBRTtRQUNmLE9BQU8sRUFBRSxrQkFBa0I7UUFDM0IsSUFBSSxFQUFFLGtCQUFrQjtRQUN4QixNQUFNLEVBQUUsb0RBQW9EO0tBQzdEO0lBQ0Q7O09BRUc7SUFDSCxZQUFZLEVBQUU7UUFDWixPQUFPLEVBQUUsZUFBZTtRQUN4QixJQUFJLEVBQUUsZUFBZTtRQUNyQixNQUFNLEVBQUUsb0RBQW9EO0tBQzdEO0lBQ0Q7O09BRUc7SUFDSCxlQUFlLEVBQUU7UUFDZixPQUFPLEVBQUUsa0JBQWtCO1FBQzNCLElBQUksRUFBRSxrQkFBa0I7UUFDeEIsTUFBTSxFQUFFLG9EQUFvRDtLQUM3RDtJQUNEOztPQUVHO0lBQ0gsZ0JBQWdCLEVBQUU7UUFDaEIsT0FBTyxFQUFFLG1CQUFtQjtRQUM1QixJQUFJLEVBQUUsbUJBQW1CO1FBQ3pCLE1BQU0sRUFBRSxvREFBb0Q7S0FDN0Q7Q0FDTyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0LmNvcmUgdmVyc2lvbjogNC4wLjFcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L2xpYnJhcnktdHlwZXw0LjAuMVxyXG5cclxuaW1wb3J0IHsgQ29kaW5nQXJncyB9IGZyb20gJy4uL2ZoaXIvQ29kaW5nLmpzJ1xyXG5cclxuLyoqXHJcbiAqIFRoZSB0eXBlIG9mIGtub3dsZWRnZSBhc3NldCB0aGlzIGxpYnJhcnkgY29udGFpbnMuXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBMaWJyYXJ5VHlwZUNvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogYXNzZXQtY29sbGVjdGlvbjogVGhlIHJlc291cmNlIGlzIGEgY29sbGVjdGlvbiBvZiBrbm93bGVkZ2UgYXNzZXRzLlxyXG4gICAqL1xyXG4gIEFzc2V0Q29sbGVjdGlvbjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBsb2dpYy1saWJyYXJ5OiBUaGUgcmVzb3VyY2UgaXMgYSBzaGFyZWFibGUgbGlicmFyeSBvZiBmb3JtYWxpemVkIGtub3dsZWRnZS5cclxuICAgKi9cclxuICBMb2dpY0xpYnJhcnk6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogbW9kZWwtZGVmaW5pdGlvbjogVGhlIHJlc291cmNlIGlzIGEgZGVmaW5pdGlvbiBvZiBhbiBpbmZvcm1hdGlvbiBtb2RlbC5cclxuICAgKi9cclxuICBNb2RlbERlZmluaXRpb246IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogbW9kdWxlLWRlZmluaXRpb246IFRoZSByZXNvdXJjZSBkZWZpbmVzIHRoZSBkZXBlbmRlbmNpZXMsIHBhcmFtZXRlcnMsIGFuZCBkYXRhIHJlcXVpcmVtZW50cyBmb3IgYSBwYXJ0aWN1bGFyIG1vZHVsZSBvciBldmFsdWF0aW9uIGNvbnRleHQuXHJcbiAgICovXHJcbiAgTW9kdWxlRGVmaW5pdGlvbjogQ29kaW5nQXJncztcclxufVxyXG5cclxuLyoqXHJcbiAqIFRoZSB0eXBlIG9mIGtub3dsZWRnZSBhc3NldCB0aGlzIGxpYnJhcnkgY29udGFpbnMuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgTGlicmFyeVR5cGVDb2RpbmdzOkxpYnJhcnlUeXBlQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBhc3NldC1jb2xsZWN0aW9uOiBUaGUgcmVzb3VyY2UgaXMgYSBjb2xsZWN0aW9uIG9mIGtub3dsZWRnZSBhc3NldHMuXHJcbiAgICovXHJcbiAgQXNzZXRDb2xsZWN0aW9uOiB7XHJcbiAgICBkaXNwbGF5OiBcIkFzc2V0IENvbGxlY3Rpb25cIixcclxuICAgIGNvZGU6IFwiYXNzZXQtY29sbGVjdGlvblwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vbGlicmFyeS10eXBlXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBsb2dpYy1saWJyYXJ5OiBUaGUgcmVzb3VyY2UgaXMgYSBzaGFyZWFibGUgbGlicmFyeSBvZiBmb3JtYWxpemVkIGtub3dsZWRnZS5cclxuICAgKi9cclxuICBMb2dpY0xpYnJhcnk6IHtcclxuICAgIGRpc3BsYXk6IFwiTG9naWMgTGlicmFyeVwiLFxyXG4gICAgY29kZTogXCJsb2dpYy1saWJyYXJ5XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9saWJyYXJ5LXR5cGVcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIG1vZGVsLWRlZmluaXRpb246IFRoZSByZXNvdXJjZSBpcyBhIGRlZmluaXRpb24gb2YgYW4gaW5mb3JtYXRpb24gbW9kZWwuXHJcbiAgICovXHJcbiAgTW9kZWxEZWZpbml0aW9uOiB7XHJcbiAgICBkaXNwbGF5OiBcIk1vZGVsIERlZmluaXRpb25cIixcclxuICAgIGNvZGU6IFwibW9kZWwtZGVmaW5pdGlvblwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vbGlicmFyeS10eXBlXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBtb2R1bGUtZGVmaW5pdGlvbjogVGhlIHJlc291cmNlIGRlZmluZXMgdGhlIGRlcGVuZGVuY2llcywgcGFyYW1ldGVycywgYW5kIGRhdGEgcmVxdWlyZW1lbnRzIGZvciBhIHBhcnRpY3VsYXIgbW9kdWxlIG9yIGV2YWx1YXRpb24gY29udGV4dC5cclxuICAgKi9cclxuICBNb2R1bGVEZWZpbml0aW9uOiB7XHJcbiAgICBkaXNwbGF5OiBcIk1vZHVsZSBEZWZpbml0aW9uXCIsXHJcbiAgICBjb2RlOiBcIm1vZHVsZS1kZWZpbml0aW9uXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9saWJyYXJ5LXR5cGVcIixcclxuICB9LFxyXG59IGFzIGNvbnN0O1xyXG4iXX0=