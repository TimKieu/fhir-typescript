// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://terminology.hl7.org/ValueSet/v2-0276|2.9
/**
 * FHIR Value set/code system definition for HL7 v2 table 0276 ( Appointment Reason Codes)
 */
export const V20276Codings = {
    /**
     * Code: CHECKUP
     */
    ARoutineCheckUpSuchAsAnAnnualPhysical: {
        display: "A routine check-up, such as an annual physical",
        code: "CHECKUP",
        system: "http://terminology.hl7.org/CodeSystem/v2-0276",
    },
    /**
     * Code: EMERGENCY
     */
    EmergencyAppointment: {
        display: "Emergency appointment",
        code: "EMERGENCY",
        system: "http://terminology.hl7.org/CodeSystem/v2-0276",
    },
    /**
     * Code: FOLLOWUP
     */
    AFollowUpVisitFromAPreviousAppointment: {
        display: "A follow up visit from a previous appointment",
        code: "FOLLOWUP",
        system: "http://terminology.hl7.org/CodeSystem/v2-0276",
    },
    /**
     * Code: ROUTINE
     */
    RoutineAppointmentDefaultIfNotValued: {
        display: "Routine appointment - default if not valued",
        code: "ROUTINE",
        system: "http://terminology.hl7.org/CodeSystem/v2-0276",
    },
    /**
     * Code: WALKIN
     */
    APreviouslyUnscheduledWalkInVisit: {
        display: "A previously unscheduled walk-in visit",
        code: "WALKIN",
        system: "http://terminology.hl7.org/CodeSystem/v2-0276",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVjIwMjc2Q29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvVjIwMjc2Q29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyxpRUFBaUU7QUE4QmpFOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sYUFBYSxHQUFvQjtJQUM1Qzs7T0FFRztJQUNILHFDQUFxQyxFQUFFO1FBQ3JDLE9BQU8sRUFBRSxnREFBZ0Q7UUFDekQsSUFBSSxFQUFFLFNBQVM7UUFDZixNQUFNLEVBQUUsK0NBQStDO0tBQ3hEO0lBQ0Q7O09BRUc7SUFDSCxvQkFBb0IsRUFBRTtRQUNwQixPQUFPLEVBQUUsdUJBQXVCO1FBQ2hDLElBQUksRUFBRSxXQUFXO1FBQ2pCLE1BQU0sRUFBRSwrQ0FBK0M7S0FDeEQ7SUFDRDs7T0FFRztJQUNILHNDQUFzQyxFQUFFO1FBQ3RDLE9BQU8sRUFBRSwrQ0FBK0M7UUFDeEQsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLCtDQUErQztLQUN4RDtJQUNEOztPQUVHO0lBQ0gsb0NBQW9DLEVBQUU7UUFDcEMsT0FBTyxFQUFFLDZDQUE2QztRQUN0RCxJQUFJLEVBQUUsU0FBUztRQUNmLE1BQU0sRUFBRSwrQ0FBK0M7S0FDeEQ7SUFDRDs7T0FFRztJQUNILGlDQUFpQyxFQUFFO1FBQ2pDLE9BQU8sRUFBRSx3Q0FBd0M7UUFDakQsSUFBSSxFQUFFLFFBQVE7UUFDZCxNQUFNLEVBQUUsK0NBQStDO0tBQ3hEO0NBQ08sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNC5jb3JlIHZlcnNpb246IDQuMC4xXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvVmFsdWVTZXQvdjItMDI3NnwyLjlcclxuXHJcbmltcG9ydCB7IENvZGluZ0FyZ3MgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiBGSElSIFZhbHVlIHNldC9jb2RlIHN5c3RlbSBkZWZpbml0aW9uIGZvciBITDcgdjIgdGFibGUgMDI3NiAoIEFwcG9pbnRtZW50IFJlYXNvbiBDb2RlcylcclxuICovXHJcbmV4cG9ydCB0eXBlIFYyMDI3NkNvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogQ0hFQ0tVUFxyXG4gICAqL1xyXG4gIEFSb3V0aW5lQ2hlY2tVcFN1Y2hBc0FuQW5udWFsUGh5c2ljYWw6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogRU1FUkdFTkNZXHJcbiAgICovXHJcbiAgRW1lcmdlbmN5QXBwb2ludG1lbnQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogRk9MTE9XVVBcclxuICAgKi9cclxuICBBRm9sbG93VXBWaXNpdEZyb21BUHJldmlvdXNBcHBvaW50bWVudDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiBST1VUSU5FXHJcbiAgICovXHJcbiAgUm91dGluZUFwcG9pbnRtZW50RGVmYXVsdElmTm90VmFsdWVkOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IFdBTEtJTlxyXG4gICAqL1xyXG4gIEFQcmV2aW91c2x5VW5zY2hlZHVsZWRXYWxrSW5WaXNpdDogQ29kaW5nQXJncztcclxufVxyXG5cclxuLyoqXHJcbiAqIEZISVIgVmFsdWUgc2V0L2NvZGUgc3lzdGVtIGRlZmluaXRpb24gZm9yIEhMNyB2MiB0YWJsZSAwMjc2ICggQXBwb2ludG1lbnQgUmVhc29uIENvZGVzKVxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IFYyMDI3NkNvZGluZ3M6VjIwMjc2Q29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBDb2RlOiBDSEVDS1VQXHJcbiAgICovXHJcbiAgQVJvdXRpbmVDaGVja1VwU3VjaEFzQW5Bbm51YWxQaHlzaWNhbDoge1xyXG4gICAgZGlzcGxheTogXCJBIHJvdXRpbmUgY2hlY2stdXAsIHN1Y2ggYXMgYW4gYW5udWFsIHBoeXNpY2FsXCIsXHJcbiAgICBjb2RlOiBcIkNIRUNLVVBcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL3YyLTAyNzZcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IEVNRVJHRU5DWVxyXG4gICAqL1xyXG4gIEVtZXJnZW5jeUFwcG9pbnRtZW50OiB7XHJcbiAgICBkaXNwbGF5OiBcIkVtZXJnZW5jeSBhcHBvaW50bWVudFwiLFxyXG4gICAgY29kZTogXCJFTUVSR0VOQ1lcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL3YyLTAyNzZcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IEZPTExPV1VQXHJcbiAgICovXHJcbiAgQUZvbGxvd1VwVmlzaXRGcm9tQVByZXZpb3VzQXBwb2ludG1lbnQ6IHtcclxuICAgIGRpc3BsYXk6IFwiQSBmb2xsb3cgdXAgdmlzaXQgZnJvbSBhIHByZXZpb3VzIGFwcG9pbnRtZW50XCIsXHJcbiAgICBjb2RlOiBcIkZPTExPV1VQXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS92Mi0wMjc2XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiBST1VUSU5FXHJcbiAgICovXHJcbiAgUm91dGluZUFwcG9pbnRtZW50RGVmYXVsdElmTm90VmFsdWVkOiB7XHJcbiAgICBkaXNwbGF5OiBcIlJvdXRpbmUgYXBwb2ludG1lbnQgLSBkZWZhdWx0IGlmIG5vdCB2YWx1ZWRcIixcclxuICAgIGNvZGU6IFwiUk9VVElORVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vdjItMDI3NlwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogV0FMS0lOXHJcbiAgICovXHJcbiAgQVByZXZpb3VzbHlVbnNjaGVkdWxlZFdhbGtJblZpc2l0OiB7XHJcbiAgICBkaXNwbGF5OiBcIkEgcHJldmlvdXNseSB1bnNjaGVkdWxlZCB3YWxrLWluIHZpc2l0XCIsXHJcbiAgICBjb2RlOiBcIldBTEtJTlwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vdjItMDI3NlwiLFxyXG4gIH0sXHJcbn0gYXMgY29uc3Q7XHJcbiJdfQ==