// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/organization-role|4.0.1
/**
 * This example value set defines a set of codes that can be used to indicate the role of one Organization in relation to another.
 */
export const OrganizationRoleCodes = {
    /**
     * agency: An organization such as a public health agency, community/social services provider, etc.
     */
    Agency: "agency",
    /**
     * diagnostics: An organization providing diagnostic testing/laboratory services
     */
    Diagnostics: "diagnostics",
    /**
     * HIE/HIO: An organization that facilitates electronic clinical data exchange between entities
     */
    HIEHIO: "HIE/HIO",
    /**
     * member: A type of non-ownership relationship between entities (encompasses partnerships, collaboration, joint ventures, etc.)
     */
    Member: "member",
    /**
     * payer: An organization providing reimbursement, payment, or related services
     */
    Payer: "payer",
    /**
     * Code: provider
     */
    Provider: "provider",
    /**
     * research: An organization providing research-related services such as conducting research, recruiting research participants, analyzing data, etc.
     */
    Research: "research",
    /**
     * supplier: An organization that provides medical supplies (e.g. medical devices, equipment, pharmaceutical products, etc.)
     */
    Supplier: "supplier",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiT3JnYW5pemF0aW9uUm9sZUNvZGVzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9Pcmdhbml6YXRpb25Sb2xlQ29kZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLCtDQUErQztBQUMvQyxrQ0FBa0M7QUFDbEMsc0VBQXNFO0FBRXRFOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0scUJBQXFCLEdBQUc7SUFDbkM7O09BRUc7SUFDSCxNQUFNLEVBQUUsUUFBUTtJQUNoQjs7T0FFRztJQUNILFdBQVcsRUFBRSxhQUFhO0lBQzFCOztPQUVHO0lBQ0gsTUFBTSxFQUFFLFNBQVM7SUFDakI7O09BRUc7SUFDSCxNQUFNLEVBQUUsUUFBUTtJQUNoQjs7T0FFRztJQUNILEtBQUssRUFBRSxPQUFPO0lBQ2Q7O09BRUc7SUFDSCxRQUFRLEVBQUUsVUFBVTtJQUNwQjs7T0FFRztJQUNILFFBQVEsRUFBRSxVQUFVO0lBQ3BCOztPQUVHO0lBQ0gsUUFBUSxFQUFFLFVBQVU7Q0FDWixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0LmNvcmUgdmVyc2lvbjogNC4wLjFcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L29yZ2FuaXphdGlvbi1yb2xlfDQuMC4xXHJcblxyXG4vKipcclxuICogVGhpcyBleGFtcGxlIHZhbHVlIHNldCBkZWZpbmVzIGEgc2V0IG9mIGNvZGVzIHRoYXQgY2FuIGJlIHVzZWQgdG8gaW5kaWNhdGUgdGhlIHJvbGUgb2Ygb25lIE9yZ2FuaXphdGlvbiBpbiByZWxhdGlvbiB0byBhbm90aGVyLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IE9yZ2FuaXphdGlvblJvbGVDb2RlcyA9IHtcclxuICAvKipcclxuICAgKiBhZ2VuY3k6IEFuIG9yZ2FuaXphdGlvbiBzdWNoIGFzIGEgcHVibGljIGhlYWx0aCBhZ2VuY3ksIGNvbW11bml0eS9zb2NpYWwgc2VydmljZXMgcHJvdmlkZXIsIGV0Yy5cclxuICAgKi9cclxuICBBZ2VuY3k6IFwiYWdlbmN5XCIsXHJcbiAgLyoqXHJcbiAgICogZGlhZ25vc3RpY3M6IEFuIG9yZ2FuaXphdGlvbiBwcm92aWRpbmcgZGlhZ25vc3RpYyB0ZXN0aW5nL2xhYm9yYXRvcnkgc2VydmljZXNcclxuICAgKi9cclxuICBEaWFnbm9zdGljczogXCJkaWFnbm9zdGljc1wiLFxyXG4gIC8qKlxyXG4gICAqIEhJRS9ISU86IEFuIG9yZ2FuaXphdGlvbiB0aGF0IGZhY2lsaXRhdGVzIGVsZWN0cm9uaWMgY2xpbmljYWwgZGF0YSBleGNoYW5nZSBiZXR3ZWVuIGVudGl0aWVzXHJcbiAgICovXHJcbiAgSElFSElPOiBcIkhJRS9ISU9cIixcclxuICAvKipcclxuICAgKiBtZW1iZXI6IEEgdHlwZSBvZiBub24tb3duZXJzaGlwIHJlbGF0aW9uc2hpcCBiZXR3ZWVuIGVudGl0aWVzIChlbmNvbXBhc3NlcyBwYXJ0bmVyc2hpcHMsIGNvbGxhYm9yYXRpb24sIGpvaW50IHZlbnR1cmVzLCBldGMuKVxyXG4gICAqL1xyXG4gIE1lbWJlcjogXCJtZW1iZXJcIixcclxuICAvKipcclxuICAgKiBwYXllcjogQW4gb3JnYW5pemF0aW9uIHByb3ZpZGluZyByZWltYnVyc2VtZW50LCBwYXltZW50LCBvciByZWxhdGVkIHNlcnZpY2VzXHJcbiAgICovXHJcbiAgUGF5ZXI6IFwicGF5ZXJcIixcclxuICAvKipcclxuICAgKiBDb2RlOiBwcm92aWRlclxyXG4gICAqL1xyXG4gIFByb3ZpZGVyOiBcInByb3ZpZGVyXCIsXHJcbiAgLyoqXHJcbiAgICogcmVzZWFyY2g6IEFuIG9yZ2FuaXphdGlvbiBwcm92aWRpbmcgcmVzZWFyY2gtcmVsYXRlZCBzZXJ2aWNlcyBzdWNoIGFzIGNvbmR1Y3RpbmcgcmVzZWFyY2gsIHJlY3J1aXRpbmcgcmVzZWFyY2ggcGFydGljaXBhbnRzLCBhbmFseXppbmcgZGF0YSwgZXRjLlxyXG4gICAqL1xyXG4gIFJlc2VhcmNoOiBcInJlc2VhcmNoXCIsXHJcbiAgLyoqXHJcbiAgICogc3VwcGxpZXI6IEFuIG9yZ2FuaXphdGlvbiB0aGF0IHByb3ZpZGVzIG1lZGljYWwgc3VwcGxpZXMgKGUuZy4gbWVkaWNhbCBkZXZpY2VzLCBlcXVpcG1lbnQsIHBoYXJtYWNldXRpY2FsIHByb2R1Y3RzLCBldGMuKVxyXG4gICAqL1xyXG4gIFN1cHBsaWVyOiBcInN1cHBsaWVyXCIsXHJcbn0gYXMgY29uc3Q7XHJcblxyXG4vKipcclxuICogVGhpcyBleGFtcGxlIHZhbHVlIHNldCBkZWZpbmVzIGEgc2V0IG9mIGNvZGVzIHRoYXQgY2FuIGJlIHVzZWQgdG8gaW5kaWNhdGUgdGhlIHJvbGUgb2Ygb25lIE9yZ2FuaXphdGlvbiBpbiByZWxhdGlvbiB0byBhbm90aGVyLlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgT3JnYW5pemF0aW9uUm9sZUNvZGVUeXBlID0gdHlwZW9mIE9yZ2FuaXphdGlvblJvbGVDb2Rlc1trZXlvZiB0eXBlb2YgT3JnYW5pemF0aW9uUm9sZUNvZGVzXTtcclxuIl19