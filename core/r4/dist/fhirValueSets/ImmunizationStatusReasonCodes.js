// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/immunization-status-reason|4.0.1
/**
 * The value set to instantiate this attribute should be drawn from a terminologically robust code system that consists of or contains concepts to support describing the reason why a dose of vaccine was not administered. This value set is provided as a suggestive example.
 */
export const ImmunizationStatusReasonCodes = {
    /**
     * Code: 171257003
     */
    NoConsentTetanusLowDoseDiphtheriaVaccine: "171257003",
    /**
     * Code: 171265000
     */
    PertussisVaccineRefused: "171265000",
    /**
     * Code: 171266004
     */
    NoConsentDiphtheriaImmunization: "171266004",
    /**
     * Code: 171267008
     */
    NoConsentTetanusImmunization: "171267008",
    /**
     * Code: 171268003
     */
    PolioImmunizationRefused: "171268003",
    /**
     * Code: 171269006
     */
    NoConsentMeaslesImmunization: "171269006",
    /**
     * Code: 171270007
     */
    NoConsentRubellaImmunization: "171270007",
    /**
     * Code: 171271006
     */
    NoConsentBCG: "171271006",
    /**
     * Code: 171272004
     */
    NoConsentInfluenzaImmunization: "171272004",
    /**
     * Code: 171280006
     */
    NoConsentForMMR: "171280006",
    /**
     * Code: 171283008
     */
    NoConsentForAnyPrimaryImmunization: "171283008",
    /**
     * Code: 171285001
     */
    NoConsentPreSchoolVaccinations: "171285001",
    /**
     * Code: 171286000
     */
    NoConsentSchoolExitVaccinations: "171286000",
    /**
     * Code: 171291004
     */
    NoConsentHaemophilusInfluenzaeTypeBImmunization: "171291004",
    /**
     * Code: 171292006
     */
    NoConsentPneumococcalImmunization: "171292006",
    /**
     * Code: 171293001
     */
    NoConsentForMRMeaslesRubellaVaccine: "171293001",
    /**
     * Code: 268559007
     */
    NoConsentForAnyImmunization: "268559007",
    /**
     * Code: 310839003
     */
    NoConsentForMMR1: "310839003",
    /**
     * Code: 310840001
     */
    NoConsentForSecondMeaslesMumpsAndRubellaVaccine: "310840001",
    /**
     * Code: 314768003
     */
    NoConsentDiphtheriaTetanusPertussisImmunization: "314768003",
    /**
     * Code: 314769006
     */
    NoConsentTetanusPlusDiphtheriaImmunization: "314769006",
    /**
     * Code: 314936001
     */
    NoConsentForMeningitisCImmunization: "314936001",
    /**
     * Code: 407598009
     */
    NoConsentFor3rdHIBBooster: "407598009",
    /**
     * IMMUNE: Definition:Testing has shown that the patient already has immunity to the agent targeted by the immunization.
     */
    Immunity: "IMMUNE",
    /**
     * MEDPREC: Definition:The patient currently has a medical condition for which the vaccine is contraindicated or for which precaution is warranted.
     */
    MedicalPrecaution: "MEDPREC",
    /**
     * OSTOCK: Definition:There was no supply of the product on hand to perform the service.
     */
    ProductOutOfStock: "OSTOCK",
    /**
     * PATOBJ: Definition:The patient or their guardian objects to receiving the vaccine.
     */
    PatientObjection: "PATOBJ",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSW1tdW5pemF0aW9uU3RhdHVzUmVhc29uQ29kZXMuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL0ltbXVuaXphdGlvblN0YXR1c1JlYXNvbkNvZGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQiwrQ0FBK0M7QUFDL0Msa0NBQWtDO0FBQ2xDLCtFQUErRTtBQUUvRTs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLDZCQUE2QixHQUFHO0lBQzNDOztPQUVHO0lBQ0gsd0NBQXdDLEVBQUUsV0FBVztJQUNyRDs7T0FFRztJQUNILHVCQUF1QixFQUFFLFdBQVc7SUFDcEM7O09BRUc7SUFDSCwrQkFBK0IsRUFBRSxXQUFXO0lBQzVDOztPQUVHO0lBQ0gsNEJBQTRCLEVBQUUsV0FBVztJQUN6Qzs7T0FFRztJQUNILHdCQUF3QixFQUFFLFdBQVc7SUFDckM7O09BRUc7SUFDSCw0QkFBNEIsRUFBRSxXQUFXO0lBQ3pDOztPQUVHO0lBQ0gsNEJBQTRCLEVBQUUsV0FBVztJQUN6Qzs7T0FFRztJQUNILFlBQVksRUFBRSxXQUFXO0lBQ3pCOztPQUVHO0lBQ0gsOEJBQThCLEVBQUUsV0FBVztJQUMzQzs7T0FFRztJQUNILGVBQWUsRUFBRSxXQUFXO0lBQzVCOztPQUVHO0lBQ0gsa0NBQWtDLEVBQUUsV0FBVztJQUMvQzs7T0FFRztJQUNILDhCQUE4QixFQUFFLFdBQVc7SUFDM0M7O09BRUc7SUFDSCwrQkFBK0IsRUFBRSxXQUFXO0lBQzVDOztPQUVHO0lBQ0gsK0NBQStDLEVBQUUsV0FBVztJQUM1RDs7T0FFRztJQUNILGlDQUFpQyxFQUFFLFdBQVc7SUFDOUM7O09BRUc7SUFDSCxtQ0FBbUMsRUFBRSxXQUFXO0lBQ2hEOztPQUVHO0lBQ0gsMkJBQTJCLEVBQUUsV0FBVztJQUN4Qzs7T0FFRztJQUNILGdCQUFnQixFQUFFLFdBQVc7SUFDN0I7O09BRUc7SUFDSCwrQ0FBK0MsRUFBRSxXQUFXO0lBQzVEOztPQUVHO0lBQ0gsK0NBQStDLEVBQUUsV0FBVztJQUM1RDs7T0FFRztJQUNILDBDQUEwQyxFQUFFLFdBQVc7SUFDdkQ7O09BRUc7SUFDSCxtQ0FBbUMsRUFBRSxXQUFXO0lBQ2hEOztPQUVHO0lBQ0gseUJBQXlCLEVBQUUsV0FBVztJQUN0Qzs7T0FFRztJQUNILFFBQVEsRUFBRSxRQUFRO0lBQ2xCOztPQUVHO0lBQ0gsaUJBQWlCLEVBQUUsU0FBUztJQUM1Qjs7T0FFRztJQUNILGlCQUFpQixFQUFFLFFBQVE7SUFDM0I7O09BRUc7SUFDSCxnQkFBZ0IsRUFBRSxRQUFRO0NBQ2xCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjQuY29yZSB2ZXJzaW9uOiA0LjAuMVxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvaW1tdW5pemF0aW9uLXN0YXR1cy1yZWFzb258NC4wLjFcclxuXHJcbi8qKlxyXG4gKiBUaGUgdmFsdWUgc2V0IHRvIGluc3RhbnRpYXRlIHRoaXMgYXR0cmlidXRlIHNob3VsZCBiZSBkcmF3biBmcm9tIGEgdGVybWlub2xvZ2ljYWxseSByb2J1c3QgY29kZSBzeXN0ZW0gdGhhdCBjb25zaXN0cyBvZiBvciBjb250YWlucyBjb25jZXB0cyB0byBzdXBwb3J0IGRlc2NyaWJpbmcgdGhlIHJlYXNvbiB3aHkgYSBkb3NlIG9mIHZhY2NpbmUgd2FzIG5vdCBhZG1pbmlzdGVyZWQuIFRoaXMgdmFsdWUgc2V0IGlzIHByb3ZpZGVkIGFzIGEgc3VnZ2VzdGl2ZSBleGFtcGxlLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IEltbXVuaXphdGlvblN0YXR1c1JlYXNvbkNvZGVzID0ge1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IDE3MTI1NzAwM1xyXG4gICAqL1xyXG4gIE5vQ29uc2VudFRldGFudXNMb3dEb3NlRGlwaHRoZXJpYVZhY2NpbmU6IFwiMTcxMjU3MDAzXCIsXHJcbiAgLyoqXHJcbiAgICogQ29kZTogMTcxMjY1MDAwXHJcbiAgICovXHJcbiAgUGVydHVzc2lzVmFjY2luZVJlZnVzZWQ6IFwiMTcxMjY1MDAwXCIsXHJcbiAgLyoqXHJcbiAgICogQ29kZTogMTcxMjY2MDA0XHJcbiAgICovXHJcbiAgTm9Db25zZW50RGlwaHRoZXJpYUltbXVuaXphdGlvbjogXCIxNzEyNjYwMDRcIixcclxuICAvKipcclxuICAgKiBDb2RlOiAxNzEyNjcwMDhcclxuICAgKi9cclxuICBOb0NvbnNlbnRUZXRhbnVzSW1tdW5pemF0aW9uOiBcIjE3MTI2NzAwOFwiLFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IDE3MTI2ODAwM1xyXG4gICAqL1xyXG4gIFBvbGlvSW1tdW5pemF0aW9uUmVmdXNlZDogXCIxNzEyNjgwMDNcIixcclxuICAvKipcclxuICAgKiBDb2RlOiAxNzEyNjkwMDZcclxuICAgKi9cclxuICBOb0NvbnNlbnRNZWFzbGVzSW1tdW5pemF0aW9uOiBcIjE3MTI2OTAwNlwiLFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IDE3MTI3MDAwN1xyXG4gICAqL1xyXG4gIE5vQ29uc2VudFJ1YmVsbGFJbW11bml6YXRpb246IFwiMTcxMjcwMDA3XCIsXHJcbiAgLyoqXHJcbiAgICogQ29kZTogMTcxMjcxMDA2XHJcbiAgICovXHJcbiAgTm9Db25zZW50QkNHOiBcIjE3MTI3MTAwNlwiLFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IDE3MTI3MjAwNFxyXG4gICAqL1xyXG4gIE5vQ29uc2VudEluZmx1ZW56YUltbXVuaXphdGlvbjogXCIxNzEyNzIwMDRcIixcclxuICAvKipcclxuICAgKiBDb2RlOiAxNzEyODAwMDZcclxuICAgKi9cclxuICBOb0NvbnNlbnRGb3JNTVI6IFwiMTcxMjgwMDA2XCIsXHJcbiAgLyoqXHJcbiAgICogQ29kZTogMTcxMjgzMDA4XHJcbiAgICovXHJcbiAgTm9Db25zZW50Rm9yQW55UHJpbWFyeUltbXVuaXphdGlvbjogXCIxNzEyODMwMDhcIixcclxuICAvKipcclxuICAgKiBDb2RlOiAxNzEyODUwMDFcclxuICAgKi9cclxuICBOb0NvbnNlbnRQcmVTY2hvb2xWYWNjaW5hdGlvbnM6IFwiMTcxMjg1MDAxXCIsXHJcbiAgLyoqXHJcbiAgICogQ29kZTogMTcxMjg2MDAwXHJcbiAgICovXHJcbiAgTm9Db25zZW50U2Nob29sRXhpdFZhY2NpbmF0aW9uczogXCIxNzEyODYwMDBcIixcclxuICAvKipcclxuICAgKiBDb2RlOiAxNzEyOTEwMDRcclxuICAgKi9cclxuICBOb0NvbnNlbnRIYWVtb3BoaWx1c0luZmx1ZW56YWVUeXBlQkltbXVuaXphdGlvbjogXCIxNzEyOTEwMDRcIixcclxuICAvKipcclxuICAgKiBDb2RlOiAxNzEyOTIwMDZcclxuICAgKi9cclxuICBOb0NvbnNlbnRQbmV1bW9jb2NjYWxJbW11bml6YXRpb246IFwiMTcxMjkyMDA2XCIsXHJcbiAgLyoqXHJcbiAgICogQ29kZTogMTcxMjkzMDAxXHJcbiAgICovXHJcbiAgTm9Db25zZW50Rm9yTVJNZWFzbGVzUnViZWxsYVZhY2NpbmU6IFwiMTcxMjkzMDAxXCIsXHJcbiAgLyoqXHJcbiAgICogQ29kZTogMjY4NTU5MDA3XHJcbiAgICovXHJcbiAgTm9Db25zZW50Rm9yQW55SW1tdW5pemF0aW9uOiBcIjI2ODU1OTAwN1wiLFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IDMxMDgzOTAwM1xyXG4gICAqL1xyXG4gIE5vQ29uc2VudEZvck1NUjE6IFwiMzEwODM5MDAzXCIsXHJcbiAgLyoqXHJcbiAgICogQ29kZTogMzEwODQwMDAxXHJcbiAgICovXHJcbiAgTm9Db25zZW50Rm9yU2Vjb25kTWVhc2xlc011bXBzQW5kUnViZWxsYVZhY2NpbmU6IFwiMzEwODQwMDAxXCIsXHJcbiAgLyoqXHJcbiAgICogQ29kZTogMzE0NzY4MDAzXHJcbiAgICovXHJcbiAgTm9Db25zZW50RGlwaHRoZXJpYVRldGFudXNQZXJ0dXNzaXNJbW11bml6YXRpb246IFwiMzE0NzY4MDAzXCIsXHJcbiAgLyoqXHJcbiAgICogQ29kZTogMzE0NzY5MDA2XHJcbiAgICovXHJcbiAgTm9Db25zZW50VGV0YW51c1BsdXNEaXBodGhlcmlhSW1tdW5pemF0aW9uOiBcIjMxNDc2OTAwNlwiLFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IDMxNDkzNjAwMVxyXG4gICAqL1xyXG4gIE5vQ29uc2VudEZvck1lbmluZ2l0aXNDSW1tdW5pemF0aW9uOiBcIjMxNDkzNjAwMVwiLFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IDQwNzU5ODAwOVxyXG4gICAqL1xyXG4gIE5vQ29uc2VudEZvcjNyZEhJQkJvb3N0ZXI6IFwiNDA3NTk4MDA5XCIsXHJcbiAgLyoqXHJcbiAgICogSU1NVU5FOiBEZWZpbml0aW9uOlRlc3RpbmcgaGFzIHNob3duIHRoYXQgdGhlIHBhdGllbnQgYWxyZWFkeSBoYXMgaW1tdW5pdHkgdG8gdGhlIGFnZW50IHRhcmdldGVkIGJ5IHRoZSBpbW11bml6YXRpb24uXHJcbiAgICovXHJcbiAgSW1tdW5pdHk6IFwiSU1NVU5FXCIsXHJcbiAgLyoqXHJcbiAgICogTUVEUFJFQzogRGVmaW5pdGlvbjpUaGUgcGF0aWVudCBjdXJyZW50bHkgaGFzIGEgbWVkaWNhbCBjb25kaXRpb24gZm9yIHdoaWNoIHRoZSB2YWNjaW5lIGlzIGNvbnRyYWluZGljYXRlZCBvciBmb3Igd2hpY2ggcHJlY2F1dGlvbiBpcyB3YXJyYW50ZWQuXHJcbiAgICovXHJcbiAgTWVkaWNhbFByZWNhdXRpb246IFwiTUVEUFJFQ1wiLFxyXG4gIC8qKlxyXG4gICAqIE9TVE9DSzogRGVmaW5pdGlvbjpUaGVyZSB3YXMgbm8gc3VwcGx5IG9mIHRoZSBwcm9kdWN0IG9uIGhhbmQgdG8gcGVyZm9ybSB0aGUgc2VydmljZS5cclxuICAgKi9cclxuICBQcm9kdWN0T3V0T2ZTdG9jazogXCJPU1RPQ0tcIixcclxuICAvKipcclxuICAgKiBQQVRPQko6IERlZmluaXRpb246VGhlIHBhdGllbnQgb3IgdGhlaXIgZ3VhcmRpYW4gb2JqZWN0cyB0byByZWNlaXZpbmcgdGhlIHZhY2NpbmUuXHJcbiAgICovXHJcbiAgUGF0aWVudE9iamVjdGlvbjogXCJQQVRPQkpcIixcclxufSBhcyBjb25zdDtcclxuXHJcbi8qKlxyXG4gKiBUaGUgdmFsdWUgc2V0IHRvIGluc3RhbnRpYXRlIHRoaXMgYXR0cmlidXRlIHNob3VsZCBiZSBkcmF3biBmcm9tIGEgdGVybWlub2xvZ2ljYWxseSByb2J1c3QgY29kZSBzeXN0ZW0gdGhhdCBjb25zaXN0cyBvZiBvciBjb250YWlucyBjb25jZXB0cyB0byBzdXBwb3J0IGRlc2NyaWJpbmcgdGhlIHJlYXNvbiB3aHkgYSBkb3NlIG9mIHZhY2NpbmUgd2FzIG5vdCBhZG1pbmlzdGVyZWQuIFRoaXMgdmFsdWUgc2V0IGlzIHByb3ZpZGVkIGFzIGEgc3VnZ2VzdGl2ZSBleGFtcGxlLlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgSW1tdW5pemF0aW9uU3RhdHVzUmVhc29uQ29kZVR5cGUgPSB0eXBlb2YgSW1tdW5pemF0aW9uU3RhdHVzUmVhc29uQ29kZXNba2V5b2YgdHlwZW9mIEltbXVuaXphdGlvblN0YXR1c1JlYXNvbkNvZGVzXTtcclxuIl19