// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/device-status-reason|4.0.1
/**
 * The availability status reason of the device.
 */
export const DeviceStatusReasonCodings = {
    /**
     * hw-discon: The device hardware is disconnected.
     */
    HardwareDisconnected: {
        display: "Hardware Disconnected",
        code: "hw-discon",
        system: "http://terminology.hl7.org/CodeSystem/device-status-reason",
    },
    /**
     * not-ready: The device is not ready.
     */
    NotReady: {
        display: "Not Ready",
        code: "not-ready",
        system: "http://terminology.hl7.org/CodeSystem/device-status-reason",
    },
    /**
     * off: The device is off.
     */
    Off: {
        display: "Off",
        code: "off",
        system: "http://terminology.hl7.org/CodeSystem/device-status-reason",
    },
    /**
     * offline: The device is offline.
     */
    Offline: {
        display: "Offline",
        code: "offline",
        system: "http://terminology.hl7.org/CodeSystem/device-status-reason",
    },
    /**
     * online: The device is off.
     */
    Online: {
        display: "Online",
        code: "online",
        system: "http://terminology.hl7.org/CodeSystem/device-status-reason",
    },
    /**
     * paused: The device is paused.
     */
    Paused: {
        display: "Paused",
        code: "paused",
        system: "http://terminology.hl7.org/CodeSystem/device-status-reason",
    },
    /**
     * standby: The device is ready but not actively operating.
     */
    Standby: {
        display: "Standby",
        code: "standby",
        system: "http://terminology.hl7.org/CodeSystem/device-status-reason",
    },
    /**
     * transduc-discon: The device transducer is disconnected.
     */
    TransducerDisconnected: {
        display: "Transducer Disconnected",
        code: "transduc-discon",
        system: "http://terminology.hl7.org/CodeSystem/device-status-reason",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGV2aWNlU3RhdHVzUmVhc29uQ29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvRGV2aWNlU3RhdHVzUmVhc29uQ29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyx5RUFBeUU7QUEwQ3pFOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0seUJBQXlCLEdBQWdDO0lBQ3BFOztPQUVHO0lBQ0gsb0JBQW9CLEVBQUU7UUFDcEIsT0FBTyxFQUFFLHVCQUF1QjtRQUNoQyxJQUFJLEVBQUUsV0FBVztRQUNqQixNQUFNLEVBQUUsNERBQTREO0tBQ3JFO0lBQ0Q7O09BRUc7SUFDSCxRQUFRLEVBQUU7UUFDUixPQUFPLEVBQUUsV0FBVztRQUNwQixJQUFJLEVBQUUsV0FBVztRQUNqQixNQUFNLEVBQUUsNERBQTREO0tBQ3JFO0lBQ0Q7O09BRUc7SUFDSCxHQUFHLEVBQUU7UUFDSCxPQUFPLEVBQUUsS0FBSztRQUNkLElBQUksRUFBRSxLQUFLO1FBQ1gsTUFBTSxFQUFFLDREQUE0RDtLQUNyRTtJQUNEOztPQUVHO0lBQ0gsT0FBTyxFQUFFO1FBQ1AsT0FBTyxFQUFFLFNBQVM7UUFDbEIsSUFBSSxFQUFFLFNBQVM7UUFDZixNQUFNLEVBQUUsNERBQTREO0tBQ3JFO0lBQ0Q7O09BRUc7SUFDSCxNQUFNLEVBQUU7UUFDTixPQUFPLEVBQUUsUUFBUTtRQUNqQixJQUFJLEVBQUUsUUFBUTtRQUNkLE1BQU0sRUFBRSw0REFBNEQ7S0FDckU7SUFDRDs7T0FFRztJQUNILE1BQU0sRUFBRTtRQUNOLE9BQU8sRUFBRSxRQUFRO1FBQ2pCLElBQUksRUFBRSxRQUFRO1FBQ2QsTUFBTSxFQUFFLDREQUE0RDtLQUNyRTtJQUNEOztPQUVHO0lBQ0gsT0FBTyxFQUFFO1FBQ1AsT0FBTyxFQUFFLFNBQVM7UUFDbEIsSUFBSSxFQUFFLFNBQVM7UUFDZixNQUFNLEVBQUUsNERBQTREO0tBQ3JFO0lBQ0Q7O09BRUc7SUFDSCxzQkFBc0IsRUFBRTtRQUN0QixPQUFPLEVBQUUseUJBQXlCO1FBQ2xDLElBQUksRUFBRSxpQkFBaUI7UUFDdkIsTUFBTSxFQUFFLDREQUE0RDtLQUNyRTtDQUNPLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjQuY29yZSB2ZXJzaW9uOiA0LjAuMVxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvZGV2aWNlLXN0YXR1cy1yZWFzb258NC4wLjFcclxuXHJcbmltcG9ydCB7IENvZGluZ0FyZ3MgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiBUaGUgYXZhaWxhYmlsaXR5IHN0YXR1cyByZWFzb24gb2YgdGhlIGRldmljZS5cclxuICovXHJcbmV4cG9ydCB0eXBlIERldmljZVN0YXR1c1JlYXNvbkNvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogaHctZGlzY29uOiBUaGUgZGV2aWNlIGhhcmR3YXJlIGlzIGRpc2Nvbm5lY3RlZC5cclxuICAgKi9cclxuICBIYXJkd2FyZURpc2Nvbm5lY3RlZDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBub3QtcmVhZHk6IFRoZSBkZXZpY2UgaXMgbm90IHJlYWR5LlxyXG4gICAqL1xyXG4gIE5vdFJlYWR5OiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIG9mZjogVGhlIGRldmljZSBpcyBvZmYuXHJcbiAgICovXHJcbiAgT2ZmOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIG9mZmxpbmU6IFRoZSBkZXZpY2UgaXMgb2ZmbGluZS5cclxuICAgKi9cclxuICBPZmZsaW5lOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIG9ubGluZTogVGhlIGRldmljZSBpcyBvZmYuXHJcbiAgICovXHJcbiAgT25saW5lOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIHBhdXNlZDogVGhlIGRldmljZSBpcyBwYXVzZWQuXHJcbiAgICovXHJcbiAgUGF1c2VkOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIHN0YW5kYnk6IFRoZSBkZXZpY2UgaXMgcmVhZHkgYnV0IG5vdCBhY3RpdmVseSBvcGVyYXRpbmcuXHJcbiAgICovXHJcbiAgU3RhbmRieTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiB0cmFuc2R1Yy1kaXNjb246IFRoZSBkZXZpY2UgdHJhbnNkdWNlciBpcyBkaXNjb25uZWN0ZWQuXHJcbiAgICovXHJcbiAgVHJhbnNkdWNlckRpc2Nvbm5lY3RlZDogQ29kaW5nQXJncztcclxufVxyXG5cclxuLyoqXHJcbiAqIFRoZSBhdmFpbGFiaWxpdHkgc3RhdHVzIHJlYXNvbiBvZiB0aGUgZGV2aWNlLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IERldmljZVN0YXR1c1JlYXNvbkNvZGluZ3M6RGV2aWNlU3RhdHVzUmVhc29uQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBody1kaXNjb246IFRoZSBkZXZpY2UgaGFyZHdhcmUgaXMgZGlzY29ubmVjdGVkLlxyXG4gICAqL1xyXG4gIEhhcmR3YXJlRGlzY29ubmVjdGVkOiB7XHJcbiAgICBkaXNwbGF5OiBcIkhhcmR3YXJlIERpc2Nvbm5lY3RlZFwiLFxyXG4gICAgY29kZTogXCJody1kaXNjb25cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2RldmljZS1zdGF0dXMtcmVhc29uXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBub3QtcmVhZHk6IFRoZSBkZXZpY2UgaXMgbm90IHJlYWR5LlxyXG4gICAqL1xyXG4gIE5vdFJlYWR5OiB7XHJcbiAgICBkaXNwbGF5OiBcIk5vdCBSZWFkeVwiLFxyXG4gICAgY29kZTogXCJub3QtcmVhZHlcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2RldmljZS1zdGF0dXMtcmVhc29uXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBvZmY6IFRoZSBkZXZpY2UgaXMgb2ZmLlxyXG4gICAqL1xyXG4gIE9mZjoge1xyXG4gICAgZGlzcGxheTogXCJPZmZcIixcclxuICAgIGNvZGU6IFwib2ZmXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9kZXZpY2Utc3RhdHVzLXJlYXNvblwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogb2ZmbGluZTogVGhlIGRldmljZSBpcyBvZmZsaW5lLlxyXG4gICAqL1xyXG4gIE9mZmxpbmU6IHtcclxuICAgIGRpc3BsYXk6IFwiT2ZmbGluZVwiLFxyXG4gICAgY29kZTogXCJvZmZsaW5lXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9kZXZpY2Utc3RhdHVzLXJlYXNvblwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogb25saW5lOiBUaGUgZGV2aWNlIGlzIG9mZi5cclxuICAgKi9cclxuICBPbmxpbmU6IHtcclxuICAgIGRpc3BsYXk6IFwiT25saW5lXCIsXHJcbiAgICBjb2RlOiBcIm9ubGluZVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vZGV2aWNlLXN0YXR1cy1yZWFzb25cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIHBhdXNlZDogVGhlIGRldmljZSBpcyBwYXVzZWQuXHJcbiAgICovXHJcbiAgUGF1c2VkOiB7XHJcbiAgICBkaXNwbGF5OiBcIlBhdXNlZFwiLFxyXG4gICAgY29kZTogXCJwYXVzZWRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2RldmljZS1zdGF0dXMtcmVhc29uXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBzdGFuZGJ5OiBUaGUgZGV2aWNlIGlzIHJlYWR5IGJ1dCBub3QgYWN0aXZlbHkgb3BlcmF0aW5nLlxyXG4gICAqL1xyXG4gIFN0YW5kYnk6IHtcclxuICAgIGRpc3BsYXk6IFwiU3RhbmRieVwiLFxyXG4gICAgY29kZTogXCJzdGFuZGJ5XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9kZXZpY2Utc3RhdHVzLXJlYXNvblwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogdHJhbnNkdWMtZGlzY29uOiBUaGUgZGV2aWNlIHRyYW5zZHVjZXIgaXMgZGlzY29ubmVjdGVkLlxyXG4gICAqL1xyXG4gIFRyYW5zZHVjZXJEaXNjb25uZWN0ZWQ6IHtcclxuICAgIGRpc3BsYXk6IFwiVHJhbnNkdWNlciBEaXNjb25uZWN0ZWRcIixcclxuICAgIGNvZGU6IFwidHJhbnNkdWMtZGlzY29uXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9kZXZpY2Utc3RhdHVzLXJlYXNvblwiLFxyXG4gIH0sXHJcbn0gYXMgY29uc3Q7XHJcbiJdfQ==