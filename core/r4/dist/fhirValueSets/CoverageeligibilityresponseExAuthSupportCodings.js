// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/coverageeligibilityresponse-ex-auth-support|4.0.1
import { Coding } from '../fhir/Coding.js';
/**
 * This value set includes CoverageEligibilityResponse Auth Support codes.
 */
export const CoverageeligibilityresponseExAuthSupportCodings = {
    /**
     * accidentreport: A formal accident report as would be filed with police or a simlar official body.
     */
    AccidentReport: new Coding({
        display: "Accident Report",
        code: "accidentreport",
        system: "http://terminology.hl7.org/CodeSystem/coverageeligibilityresponse-ex-auth-support",
    }),
    /**
     * diagnosticimageorder: A request or authorization for diagnostic imaging.
     */
    DiagnosticImageOrder: new Coding({
        display: "Diagnostic Image Order",
        code: "diagnosticimageorder",
        system: "http://terminology.hl7.org/CodeSystem/coverageeligibilityresponse-ex-auth-support",
    }),
    /**
     * diagnosticimagereport: A report on diagnostic image(s).
     */
    DiagnosticImageReport: new Coding({
        display: "Diagnostic Image Report",
        code: "diagnosticimagereport",
        system: "http://terminology.hl7.org/CodeSystem/coverageeligibilityresponse-ex-auth-support",
    }),
    /**
     * laborder: A request or authorization for laboratory diagnostic tests.
     */
    LabOrder: new Coding({
        display: "Lab Order",
        code: "laborder",
        system: "http://terminology.hl7.org/CodeSystem/coverageeligibilityresponse-ex-auth-support",
    }),
    /**
     * labreport: A report on laboratory diagnostic test(s).
     */
    LabReport: new Coding({
        display: "Lab Report",
        code: "labreport",
        system: "http://terminology.hl7.org/CodeSystem/coverageeligibilityresponse-ex-auth-support",
    }),
    /**
     * model: A physical model of the affected area.
     */
    Model: new Coding({
        display: "Model",
        code: "model",
        system: "http://terminology.hl7.org/CodeSystem/coverageeligibilityresponse-ex-auth-support",
    }),
    /**
     * picture: A photograph of the affected area.
     */
    Picture: new Coding({
        display: "Picture",
        code: "picture",
        system: "http://terminology.hl7.org/CodeSystem/coverageeligibilityresponse-ex-auth-support",
    }),
    /**
     * professionalreport: A report from a licensed professional regarding the siutation, condition or proposed treatment.
     */
    ProfessionalReport: new Coding({
        display: "Professional Report",
        code: "professionalreport",
        system: "http://terminology.hl7.org/CodeSystem/coverageeligibilityresponse-ex-auth-support",
    }),
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ292ZXJhZ2VlbGlnaWJpbGl0eXJlc3BvbnNlRXhBdXRoU3VwcG9ydENvZGluZ3MuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL0NvdmVyYWdlZWxpZ2liaWxpdHlyZXNwb25zZUV4QXV0aFN1cHBvcnRDb2RpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQiwrQ0FBK0M7QUFDL0Msa0NBQWtDO0FBQ2xDLGdHQUFnRztBQUVoRyxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sbUJBQW1CLENBQUE7QUFFMUM7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSwrQ0FBK0MsR0FBRztJQUM3RDs7T0FFRztJQUNILGNBQWMsRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUN6QixPQUFPLEVBQUUsaUJBQWlCO1FBQzFCLElBQUksRUFBRSxnQkFBZ0I7UUFDdEIsTUFBTSxFQUFFLG1GQUFtRjtLQUM1RixDQUFDO0lBQ0Y7O09BRUc7SUFDSCxvQkFBb0IsRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUMvQixPQUFPLEVBQUUsd0JBQXdCO1FBQ2pDLElBQUksRUFBRSxzQkFBc0I7UUFDNUIsTUFBTSxFQUFFLG1GQUFtRjtLQUM1RixDQUFDO0lBQ0Y7O09BRUc7SUFDSCxxQkFBcUIsRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUNoQyxPQUFPLEVBQUUseUJBQXlCO1FBQ2xDLElBQUksRUFBRSx1QkFBdUI7UUFDN0IsTUFBTSxFQUFFLG1GQUFtRjtLQUM1RixDQUFDO0lBQ0Y7O09BRUc7SUFDSCxRQUFRLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDbkIsT0FBTyxFQUFFLFdBQVc7UUFDcEIsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLG1GQUFtRjtLQUM1RixDQUFDO0lBQ0Y7O09BRUc7SUFDSCxTQUFTLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDcEIsT0FBTyxFQUFFLFlBQVk7UUFDckIsSUFBSSxFQUFFLFdBQVc7UUFDakIsTUFBTSxFQUFFLG1GQUFtRjtLQUM1RixDQUFDO0lBQ0Y7O09BRUc7SUFDSCxLQUFLLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDaEIsT0FBTyxFQUFFLE9BQU87UUFDaEIsSUFBSSxFQUFFLE9BQU87UUFDYixNQUFNLEVBQUUsbUZBQW1GO0tBQzVGLENBQUM7SUFDRjs7T0FFRztJQUNILE9BQU8sRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUNsQixPQUFPLEVBQUUsU0FBUztRQUNsQixJQUFJLEVBQUUsU0FBUztRQUNmLE1BQU0sRUFBRSxtRkFBbUY7S0FDNUYsQ0FBQztJQUNGOztPQUVHO0lBQ0gsa0JBQWtCLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDN0IsT0FBTyxFQUFFLHFCQUFxQjtRQUM5QixJQUFJLEVBQUUsb0JBQW9CO1FBQzFCLE1BQU0sRUFBRSxtRkFBbUY7S0FDNUYsQ0FBQztDQUNNLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjQuY29yZSB2ZXJzaW9uOiA0LjAuMVxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvY292ZXJhZ2VlbGlnaWJpbGl0eXJlc3BvbnNlLWV4LWF1dGgtc3VwcG9ydHw0LjAuMVxyXG5cclxuaW1wb3J0IHsgQ29kaW5nIH0gZnJvbSAnLi4vZmhpci9Db2RpbmcuanMnXHJcblxyXG4vKipcclxuICogVGhpcyB2YWx1ZSBzZXQgaW5jbHVkZXMgQ292ZXJhZ2VFbGlnaWJpbGl0eVJlc3BvbnNlIEF1dGggU3VwcG9ydCBjb2Rlcy5cclxuICovXHJcbmV4cG9ydCBjb25zdCBDb3ZlcmFnZWVsaWdpYmlsaXR5cmVzcG9uc2VFeEF1dGhTdXBwb3J0Q29kaW5ncyA9IHtcclxuICAvKipcclxuICAgKiBhY2NpZGVudHJlcG9ydDogQSBmb3JtYWwgYWNjaWRlbnQgcmVwb3J0IGFzIHdvdWxkIGJlIGZpbGVkIHdpdGggcG9saWNlIG9yIGEgc2ltbGFyIG9mZmljaWFsIGJvZHkuXHJcbiAgICovXHJcbiAgQWNjaWRlbnRSZXBvcnQ6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJBY2NpZGVudCBSZXBvcnRcIixcclxuICAgIGNvZGU6IFwiYWNjaWRlbnRyZXBvcnRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2NvdmVyYWdlZWxpZ2liaWxpdHlyZXNwb25zZS1leC1hdXRoLXN1cHBvcnRcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBkaWFnbm9zdGljaW1hZ2VvcmRlcjogQSByZXF1ZXN0IG9yIGF1dGhvcml6YXRpb24gZm9yIGRpYWdub3N0aWMgaW1hZ2luZy5cclxuICAgKi9cclxuICBEaWFnbm9zdGljSW1hZ2VPcmRlcjogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIkRpYWdub3N0aWMgSW1hZ2UgT3JkZXJcIixcclxuICAgIGNvZGU6IFwiZGlhZ25vc3RpY2ltYWdlb3JkZXJcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2NvdmVyYWdlZWxpZ2liaWxpdHlyZXNwb25zZS1leC1hdXRoLXN1cHBvcnRcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBkaWFnbm9zdGljaW1hZ2VyZXBvcnQ6IEEgcmVwb3J0IG9uIGRpYWdub3N0aWMgaW1hZ2UocykuXHJcbiAgICovXHJcbiAgRGlhZ25vc3RpY0ltYWdlUmVwb3J0OiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiRGlhZ25vc3RpYyBJbWFnZSBSZXBvcnRcIixcclxuICAgIGNvZGU6IFwiZGlhZ25vc3RpY2ltYWdlcmVwb3J0XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9jb3ZlcmFnZWVsaWdpYmlsaXR5cmVzcG9uc2UtZXgtYXV0aC1zdXBwb3J0XCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogbGFib3JkZXI6IEEgcmVxdWVzdCBvciBhdXRob3JpemF0aW9uIGZvciBsYWJvcmF0b3J5IGRpYWdub3N0aWMgdGVzdHMuXHJcbiAgICovXHJcbiAgTGFiT3JkZXI6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJMYWIgT3JkZXJcIixcclxuICAgIGNvZGU6IFwibGFib3JkZXJcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2NvdmVyYWdlZWxpZ2liaWxpdHlyZXNwb25zZS1leC1hdXRoLXN1cHBvcnRcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBsYWJyZXBvcnQ6IEEgcmVwb3J0IG9uIGxhYm9yYXRvcnkgZGlhZ25vc3RpYyB0ZXN0KHMpLlxyXG4gICAqL1xyXG4gIExhYlJlcG9ydDogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIkxhYiBSZXBvcnRcIixcclxuICAgIGNvZGU6IFwibGFicmVwb3J0XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9jb3ZlcmFnZWVsaWdpYmlsaXR5cmVzcG9uc2UtZXgtYXV0aC1zdXBwb3J0XCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogbW9kZWw6IEEgcGh5c2ljYWwgbW9kZWwgb2YgdGhlIGFmZmVjdGVkIGFyZWEuXHJcbiAgICovXHJcbiAgTW9kZWw6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJNb2RlbFwiLFxyXG4gICAgY29kZTogXCJtb2RlbFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vY292ZXJhZ2VlbGlnaWJpbGl0eXJlc3BvbnNlLWV4LWF1dGgtc3VwcG9ydFwiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIHBpY3R1cmU6IEEgcGhvdG9ncmFwaCBvZiB0aGUgYWZmZWN0ZWQgYXJlYS5cclxuICAgKi9cclxuICBQaWN0dXJlOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiUGljdHVyZVwiLFxyXG4gICAgY29kZTogXCJwaWN0dXJlXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9jb3ZlcmFnZWVsaWdpYmlsaXR5cmVzcG9uc2UtZXgtYXV0aC1zdXBwb3J0XCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogcHJvZmVzc2lvbmFscmVwb3J0OiBBIHJlcG9ydCBmcm9tIGEgbGljZW5zZWQgcHJvZmVzc2lvbmFsIHJlZ2FyZGluZyB0aGUgc2l1dGF0aW9uLCBjb25kaXRpb24gb3IgcHJvcG9zZWQgdHJlYXRtZW50LlxyXG4gICAqL1xyXG4gIFByb2Zlc3Npb25hbFJlcG9ydDogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIlByb2Zlc3Npb25hbCBSZXBvcnRcIixcclxuICAgIGNvZGU6IFwicHJvZmVzc2lvbmFscmVwb3J0XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9jb3ZlcmFnZWVsaWdpYmlsaXR5cmVzcG9uc2UtZXgtYXV0aC1zdXBwb3J0XCIsXHJcbiAgfSksXHJcbn0gYXMgY29uc3Q7XHJcblxyXG4vKipcclxuICogVGhpcyB2YWx1ZSBzZXQgaW5jbHVkZXMgQ292ZXJhZ2VFbGlnaWJpbGl0eVJlc3BvbnNlIEF1dGggU3VwcG9ydCBjb2Rlcy5cclxuICovXHJcbmV4cG9ydCB0eXBlIENvdmVyYWdlZWxpZ2liaWxpdHlyZXNwb25zZUV4QXV0aFN1cHBvcnRDb2RpbmdUeXBlID0gdHlwZW9mIENvdmVyYWdlZWxpZ2liaWxpdHlyZXNwb25zZUV4QXV0aFN1cHBvcnRDb2RpbmdzO1xyXG4iXX0=