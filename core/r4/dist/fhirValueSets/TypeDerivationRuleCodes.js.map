{"version":3,"file":"TypeDerivationRuleCodes.js","sources":["../../src/fhirValueSets/TypeDerivationRuleCodes.ts"],"sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4.core version: 4.0.1\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR ValueSet: http://hl7.org/fhir/ValueSet/type-derivation-rule|4.0.1\r\n\r\n/**\r\n * How a type relates to its baseDefinition.\r\n */\r\nexport const TypeDerivationRuleCodes = {\r\n  /**\r\n   * constraint: This definition adds additional rules to an existing concrete type.\r\n   */\r\n  Constraint: \"constraint\",\r\n  /**\r\n   * specialization: This definition defines a new type that adds additional elements to the base type.\r\n   */\r\n  Specialization: \"specialization\",\r\n} as const;\r\n\r\n/**\r\n * How a type relates to its baseDefinition.\r\n */\r\nexport type TypeDerivationRuleCodeType = typeof TypeDerivationRuleCodes[keyof typeof TypeDerivationRuleCodes];\r\n"],"names":[],"mappings":";;AAAA;AACA;AACA;AACA;AAEA;;AAEG;AACU,IAAA,uBAAuB,GAAG;AACrC;;AAEG;AACH,IAAA,UAAU,EAAE,YAAY;AACxB;;AAEG;AACH,IAAA,cAAc,EAAE,gBAAgB;;;;;"}