// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/research-study-reason-stopped|4.0.1
import { Coding } from '../fhir/Coding.js';
/**
 * Codes for why the study ended prematurely.
 */
export const ResearchStudyReasonStoppedCodings = {
    /**
     * accrual-goal-met: The study prematurely ended because the accrual goal was met.
     */
    AccrualGoalMet: new Coding({
        display: "Accrual Goal Met",
        code: "accrual-goal-met",
        system: "http://terminology.hl7.org/CodeSystem/research-study-reason-stopped",
    }),
    /**
     * closed-due-to-lack-of-study-progress: The study prematurely ended due to lack of study progress.
     */
    ClosedDueToLackOfStudyProgress: new Coding({
        display: "Closed due to lack of study progress",
        code: "closed-due-to-lack-of-study-progress",
        system: "http://terminology.hl7.org/CodeSystem/research-study-reason-stopped",
    }),
    /**
     * closed-due-to-toxicity: The study prematurely ended due to toxicity.
     */
    ClosedDueToToxicity: new Coding({
        display: "Closed due to toxicity",
        code: "closed-due-to-toxicity",
        system: "http://terminology.hl7.org/CodeSystem/research-study-reason-stopped",
    }),
    /**
     * temporarily-closed-per-study-design: The study prematurely ended temporarily per study design.
     */
    TemporarilyClosedPerStudyDesign: new Coding({
        display: "Temporarily closed per study design",
        code: "temporarily-closed-per-study-design",
        system: "http://terminology.hl7.org/CodeSystem/research-study-reason-stopped",
    }),
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVzZWFyY2hTdHVkeVJlYXNvblN0b3BwZWRDb2RpbmdzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9SZXNlYXJjaFN0dWR5UmVhc29uU3RvcHBlZENvZGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLCtDQUErQztBQUMvQyxrQ0FBa0M7QUFDbEMsa0ZBQWtGO0FBRWxGLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQTtBQUUxQzs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLGlDQUFpQyxHQUFHO0lBQy9DOztPQUVHO0lBQ0gsY0FBYyxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ3pCLE9BQU8sRUFBRSxrQkFBa0I7UUFDM0IsSUFBSSxFQUFFLGtCQUFrQjtRQUN4QixNQUFNLEVBQUUscUVBQXFFO0tBQzlFLENBQUM7SUFDRjs7T0FFRztJQUNILDhCQUE4QixFQUFFLElBQUksTUFBTSxDQUFDO1FBQ3pDLE9BQU8sRUFBRSxzQ0FBc0M7UUFDL0MsSUFBSSxFQUFFLHNDQUFzQztRQUM1QyxNQUFNLEVBQUUscUVBQXFFO0tBQzlFLENBQUM7SUFDRjs7T0FFRztJQUNILG1CQUFtQixFQUFFLElBQUksTUFBTSxDQUFDO1FBQzlCLE9BQU8sRUFBRSx3QkFBd0I7UUFDakMsSUFBSSxFQUFFLHdCQUF3QjtRQUM5QixNQUFNLEVBQUUscUVBQXFFO0tBQzlFLENBQUM7SUFDRjs7T0FFRztJQUNILCtCQUErQixFQUFFLElBQUksTUFBTSxDQUFDO1FBQzFDLE9BQU8sRUFBRSxxQ0FBcUM7UUFDOUMsSUFBSSxFQUFFLHFDQUFxQztRQUMzQyxNQUFNLEVBQUUscUVBQXFFO0tBQzlFLENBQUM7Q0FDTSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0LmNvcmUgdmVyc2lvbjogNC4wLjFcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L3Jlc2VhcmNoLXN0dWR5LXJlYXNvbi1zdG9wcGVkfDQuMC4xXHJcblxyXG5pbXBvcnQgeyBDb2RpbmcgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiBDb2RlcyBmb3Igd2h5IHRoZSBzdHVkeSBlbmRlZCBwcmVtYXR1cmVseS5cclxuICovXHJcbmV4cG9ydCBjb25zdCBSZXNlYXJjaFN0dWR5UmVhc29uU3RvcHBlZENvZGluZ3MgPSB7XHJcbiAgLyoqXHJcbiAgICogYWNjcnVhbC1nb2FsLW1ldDogVGhlIHN0dWR5IHByZW1hdHVyZWx5IGVuZGVkIGJlY2F1c2UgdGhlIGFjY3J1YWwgZ29hbCB3YXMgbWV0LlxyXG4gICAqL1xyXG4gIEFjY3J1YWxHb2FsTWV0OiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiQWNjcnVhbCBHb2FsIE1ldFwiLFxyXG4gICAgY29kZTogXCJhY2NydWFsLWdvYWwtbWV0XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9yZXNlYXJjaC1zdHVkeS1yZWFzb24tc3RvcHBlZFwiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIGNsb3NlZC1kdWUtdG8tbGFjay1vZi1zdHVkeS1wcm9ncmVzczogVGhlIHN0dWR5IHByZW1hdHVyZWx5IGVuZGVkIGR1ZSB0byBsYWNrIG9mIHN0dWR5IHByb2dyZXNzLlxyXG4gICAqL1xyXG4gIENsb3NlZER1ZVRvTGFja09mU3R1ZHlQcm9ncmVzczogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIkNsb3NlZCBkdWUgdG8gbGFjayBvZiBzdHVkeSBwcm9ncmVzc1wiLFxyXG4gICAgY29kZTogXCJjbG9zZWQtZHVlLXRvLWxhY2stb2Ytc3R1ZHktcHJvZ3Jlc3NcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL3Jlc2VhcmNoLXN0dWR5LXJlYXNvbi1zdG9wcGVkXCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogY2xvc2VkLWR1ZS10by10b3hpY2l0eTogVGhlIHN0dWR5IHByZW1hdHVyZWx5IGVuZGVkIGR1ZSB0byB0b3hpY2l0eS5cclxuICAgKi9cclxuICBDbG9zZWREdWVUb1RveGljaXR5OiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiQ2xvc2VkIGR1ZSB0byB0b3hpY2l0eVwiLFxyXG4gICAgY29kZTogXCJjbG9zZWQtZHVlLXRvLXRveGljaXR5XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9yZXNlYXJjaC1zdHVkeS1yZWFzb24tc3RvcHBlZFwiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIHRlbXBvcmFyaWx5LWNsb3NlZC1wZXItc3R1ZHktZGVzaWduOiBUaGUgc3R1ZHkgcHJlbWF0dXJlbHkgZW5kZWQgdGVtcG9yYXJpbHkgcGVyIHN0dWR5IGRlc2lnbi5cclxuICAgKi9cclxuICBUZW1wb3JhcmlseUNsb3NlZFBlclN0dWR5RGVzaWduOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiVGVtcG9yYXJpbHkgY2xvc2VkIHBlciBzdHVkeSBkZXNpZ25cIixcclxuICAgIGNvZGU6IFwidGVtcG9yYXJpbHktY2xvc2VkLXBlci1zdHVkeS1kZXNpZ25cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL3Jlc2VhcmNoLXN0dWR5LXJlYXNvbi1zdG9wcGVkXCIsXHJcbiAgfSksXHJcbn0gYXMgY29uc3Q7XHJcblxyXG4vKipcclxuICogQ29kZXMgZm9yIHdoeSB0aGUgc3R1ZHkgZW5kZWQgcHJlbWF0dXJlbHkuXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBSZXNlYXJjaFN0dWR5UmVhc29uU3RvcHBlZENvZGluZ1R5cGUgPSB0eXBlb2YgUmVzZWFyY2hTdHVkeVJlYXNvblN0b3BwZWRDb2RpbmdzO1xyXG4iXX0=