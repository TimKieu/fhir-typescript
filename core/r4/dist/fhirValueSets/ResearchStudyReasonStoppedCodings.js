// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/research-study-reason-stopped|4.0.1
/**
 * Codes for why the study ended prematurely.
 */
export const ResearchStudyReasonStoppedCodings = {
    /**
     * accrual-goal-met: The study prematurely ended because the accrual goal was met.
     */
    AccrualGoalMet: {
        display: "Accrual Goal Met",
        code: "accrual-goal-met",
        system: "http://terminology.hl7.org/CodeSystem/research-study-reason-stopped",
    },
    /**
     * closed-due-to-lack-of-study-progress: The study prematurely ended due to lack of study progress.
     */
    ClosedDueToLackOfStudyProgress: {
        display: "Closed due to lack of study progress",
        code: "closed-due-to-lack-of-study-progress",
        system: "http://terminology.hl7.org/CodeSystem/research-study-reason-stopped",
    },
    /**
     * closed-due-to-toxicity: The study prematurely ended due to toxicity.
     */
    ClosedDueToToxicity: {
        display: "Closed due to toxicity",
        code: "closed-due-to-toxicity",
        system: "http://terminology.hl7.org/CodeSystem/research-study-reason-stopped",
    },
    /**
     * temporarily-closed-per-study-design: The study prematurely ended temporarily per study design.
     */
    TemporarilyClosedPerStudyDesign: {
        display: "Temporarily closed per study design",
        code: "temporarily-closed-per-study-design",
        system: "http://terminology.hl7.org/CodeSystem/research-study-reason-stopped",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVzZWFyY2hTdHVkeVJlYXNvblN0b3BwZWRDb2RpbmdzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9SZXNlYXJjaFN0dWR5UmVhc29uU3RvcHBlZENvZGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLCtDQUErQztBQUMvQyxrQ0FBa0M7QUFDbEMsa0ZBQWtGO0FBMEJsRjs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLGlDQUFpQyxHQUF3QztJQUNwRjs7T0FFRztJQUNILGNBQWMsRUFBRTtRQUNkLE9BQU8sRUFBRSxrQkFBa0I7UUFDM0IsSUFBSSxFQUFFLGtCQUFrQjtRQUN4QixNQUFNLEVBQUUscUVBQXFFO0tBQzlFO0lBQ0Q7O09BRUc7SUFDSCw4QkFBOEIsRUFBRTtRQUM5QixPQUFPLEVBQUUsc0NBQXNDO1FBQy9DLElBQUksRUFBRSxzQ0FBc0M7UUFDNUMsTUFBTSxFQUFFLHFFQUFxRTtLQUM5RTtJQUNEOztPQUVHO0lBQ0gsbUJBQW1CLEVBQUU7UUFDbkIsT0FBTyxFQUFFLHdCQUF3QjtRQUNqQyxJQUFJLEVBQUUsd0JBQXdCO1FBQzlCLE1BQU0sRUFBRSxxRUFBcUU7S0FDOUU7SUFDRDs7T0FFRztJQUNILCtCQUErQixFQUFFO1FBQy9CLE9BQU8sRUFBRSxxQ0FBcUM7UUFDOUMsSUFBSSxFQUFFLHFDQUFxQztRQUMzQyxNQUFNLEVBQUUscUVBQXFFO0tBQzlFO0NBQ08sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNC5jb3JlIHZlcnNpb246IDQuMC4xXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9yZXNlYXJjaC1zdHVkeS1yZWFzb24tc3RvcHBlZHw0LjAuMVxyXG5cclxuaW1wb3J0IHsgQ29kaW5nQXJncyB9IGZyb20gJy4uL2ZoaXIvQ29kaW5nLmpzJ1xyXG5cclxuLyoqXHJcbiAqIENvZGVzIGZvciB3aHkgdGhlIHN0dWR5IGVuZGVkIHByZW1hdHVyZWx5LlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgUmVzZWFyY2hTdHVkeVJlYXNvblN0b3BwZWRDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIGFjY3J1YWwtZ29hbC1tZXQ6IFRoZSBzdHVkeSBwcmVtYXR1cmVseSBlbmRlZCBiZWNhdXNlIHRoZSBhY2NydWFsIGdvYWwgd2FzIG1ldC5cclxuICAgKi9cclxuICBBY2NydWFsR29hbE1ldDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBjbG9zZWQtZHVlLXRvLWxhY2stb2Ytc3R1ZHktcHJvZ3Jlc3M6IFRoZSBzdHVkeSBwcmVtYXR1cmVseSBlbmRlZCBkdWUgdG8gbGFjayBvZiBzdHVkeSBwcm9ncmVzcy5cclxuICAgKi9cclxuICBDbG9zZWREdWVUb0xhY2tPZlN0dWR5UHJvZ3Jlc3M6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogY2xvc2VkLWR1ZS10by10b3hpY2l0eTogVGhlIHN0dWR5IHByZW1hdHVyZWx5IGVuZGVkIGR1ZSB0byB0b3hpY2l0eS5cclxuICAgKi9cclxuICBDbG9zZWREdWVUb1RveGljaXR5OiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIHRlbXBvcmFyaWx5LWNsb3NlZC1wZXItc3R1ZHktZGVzaWduOiBUaGUgc3R1ZHkgcHJlbWF0dXJlbHkgZW5kZWQgdGVtcG9yYXJpbHkgcGVyIHN0dWR5IGRlc2lnbi5cclxuICAgKi9cclxuICBUZW1wb3JhcmlseUNsb3NlZFBlclN0dWR5RGVzaWduOiBDb2RpbmdBcmdzO1xyXG59XHJcblxyXG4vKipcclxuICogQ29kZXMgZm9yIHdoeSB0aGUgc3R1ZHkgZW5kZWQgcHJlbWF0dXJlbHkuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgUmVzZWFyY2hTdHVkeVJlYXNvblN0b3BwZWRDb2RpbmdzOlJlc2VhcmNoU3R1ZHlSZWFzb25TdG9wcGVkQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBhY2NydWFsLWdvYWwtbWV0OiBUaGUgc3R1ZHkgcHJlbWF0dXJlbHkgZW5kZWQgYmVjYXVzZSB0aGUgYWNjcnVhbCBnb2FsIHdhcyBtZXQuXHJcbiAgICovXHJcbiAgQWNjcnVhbEdvYWxNZXQ6IHtcclxuICAgIGRpc3BsYXk6IFwiQWNjcnVhbCBHb2FsIE1ldFwiLFxyXG4gICAgY29kZTogXCJhY2NydWFsLWdvYWwtbWV0XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9yZXNlYXJjaC1zdHVkeS1yZWFzb24tc3RvcHBlZFwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogY2xvc2VkLWR1ZS10by1sYWNrLW9mLXN0dWR5LXByb2dyZXNzOiBUaGUgc3R1ZHkgcHJlbWF0dXJlbHkgZW5kZWQgZHVlIHRvIGxhY2sgb2Ygc3R1ZHkgcHJvZ3Jlc3MuXHJcbiAgICovXHJcbiAgQ2xvc2VkRHVlVG9MYWNrT2ZTdHVkeVByb2dyZXNzOiB7XHJcbiAgICBkaXNwbGF5OiBcIkNsb3NlZCBkdWUgdG8gbGFjayBvZiBzdHVkeSBwcm9ncmVzc1wiLFxyXG4gICAgY29kZTogXCJjbG9zZWQtZHVlLXRvLWxhY2stb2Ytc3R1ZHktcHJvZ3Jlc3NcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL3Jlc2VhcmNoLXN0dWR5LXJlYXNvbi1zdG9wcGVkXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBjbG9zZWQtZHVlLXRvLXRveGljaXR5OiBUaGUgc3R1ZHkgcHJlbWF0dXJlbHkgZW5kZWQgZHVlIHRvIHRveGljaXR5LlxyXG4gICAqL1xyXG4gIENsb3NlZER1ZVRvVG94aWNpdHk6IHtcclxuICAgIGRpc3BsYXk6IFwiQ2xvc2VkIGR1ZSB0byB0b3hpY2l0eVwiLFxyXG4gICAgY29kZTogXCJjbG9zZWQtZHVlLXRvLXRveGljaXR5XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9yZXNlYXJjaC1zdHVkeS1yZWFzb24tc3RvcHBlZFwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogdGVtcG9yYXJpbHktY2xvc2VkLXBlci1zdHVkeS1kZXNpZ246IFRoZSBzdHVkeSBwcmVtYXR1cmVseSBlbmRlZCB0ZW1wb3JhcmlseSBwZXIgc3R1ZHkgZGVzaWduLlxyXG4gICAqL1xyXG4gIFRlbXBvcmFyaWx5Q2xvc2VkUGVyU3R1ZHlEZXNpZ246IHtcclxuICAgIGRpc3BsYXk6IFwiVGVtcG9yYXJpbHkgY2xvc2VkIHBlciBzdHVkeSBkZXNpZ25cIixcclxuICAgIGNvZGU6IFwidGVtcG9yYXJpbHktY2xvc2VkLXBlci1zdHVkeS1kZXNpZ25cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL3Jlc2VhcmNoLXN0dWR5LXJlYXNvbi1zdG9wcGVkXCIsXHJcbiAgfSxcclxufSBhcyBjb25zdDtcclxuIl19