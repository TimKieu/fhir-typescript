// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/condition-stage-type|4.0.1
import { Coding } from '../fhir/Coding.js';
/**
 * Example value set for the type of stages of cancer and other conditions
 */
export const ConditionStageTypeCodings = {
    /**
     * Code: 106241006
     */
    GleasonQuoteSMicroscopicProstaticCarcinomaGradingSystem: new Coding({
        display: "Gleason's microscopic prostatic carcinoma grading system",
        code: "106241006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 106242004
     */
    WalterReedStagingOfProstaticCancer: new Coding({
        display: "Walter Reed staging of prostatic cancer",
        code: "106242004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 106244003
     */
    FIGOStagingSystemForEndometrialCarcinoma: new Coding({
        display: "FIGO staging system for endometrial carcinoma",
        code: "106244003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 106245002
     */
    FIGOVulvaTumorStaging: new Coding({
        display: "FIGO Vulva tumor staging",
        code: "106245002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 106246001
     */
    FIGOStagingSystemForVulvarMelanoma: new Coding({
        display: "FIGO staging system for vulvar melanoma",
        code: "106246001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 106247005
     */
    FIGOStagingSystemForEpithelialTumorOfOvary: new Coding({
        display: "FIGO staging system for epithelial tumor of ovary",
        code: "106247005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 106250008
     */
    FIGOCervicalTumorStaging: new Coding({
        display: "FIGO Cervical tumor staging",
        code: "106250008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 106252000
     */
    LymphomaStagingDescriptors: new Coding({
        display: "Lymphoma staging descriptors",
        code: "106252000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 110375007
     */
    OverlappingTumor: new Coding({
        display: "Overlapping tumor",
        code: "110375007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 134438001
     */
    CanadianCardiovascularSocietyClassificationOfAngina: new Coding({
        display: "Canadian Cardiovascular Society classification of angina",
        code: "134438001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 135831005
     */
    CardiovascularLimitationsAndSymptomsProfileAnginaScore: new Coding({
        display: "Cardiovascular Limitations and Symptoms Profile angina score",
        code: "135831005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 135832003
     */
    CardiovascularLimitationsAndSymptomsProfileAnkleSwellingScore: new Coding({
        display: "Cardiovascular Limitations and Symptoms Profile ankle swelling score",
        code: "135832003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 135833008
     */
    CardiovascularLimitationsAndSymptomsProfileShortnessOfBreathScore: new Coding({
        display: "Cardiovascular limitations and symptoms profile shortness of breath score",
        code: "135833008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 135877001
     */
    StrokeRisk: new Coding({
        display: "Stroke risk",
        code: "135877001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 13808002
     */
    WRStage3: new Coding({
        display: "WR stage 3",
        code: "13808002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 15972002
     */
    WalterReedWRStage2: new Coding({
        display: "Walter Reed (WR) stage 2",
        code: "15972002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 160723003
     */
    HousingDependencyScale: new Coding({
        display: "Housing dependency scale",
        code: "160723003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 165270003
     */
    PhysicalDisabilityAssessmentScore: new Coding({
        display: "Physical disability assessment score",
        code: "165270003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 165271004
     */
    PhysicalDisabilityAdmissionScore: new Coding({
        display: "Physical disability admission score",
        code: "165271004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 165272006
     */
    PhysicalDisabilityInpatientScore: new Coding({
        display: "Physical disability inpatient score",
        code: "165272006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 165273001
     */
    PhysicalDisabilityDischargeScore: new Coding({
        display: "Physical disability discharge score",
        code: "165273001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 165274007
     */
    PhysicalDisabilityOutpatientScore: new Coding({
        display: "Physical disability outpatient score",
        code: "165274007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 165275008
     */
    PhysicalDisabilityDVScore: new Coding({
        display: "Physical disability DV score",
        code: "165275008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 251893009
     */
    SymptomRatings: new Coding({
        display: "Symptom ratings",
        code: "251893009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 251894003
     */
    ExertionRating: new Coding({
        display: "Exertion rating",
        code: "251894003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 251895002
     */
    LegFatigueRating: new Coding({
        display: "Leg fatigue rating",
        code: "251895002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 251896001
     */
    BreathlessnessRating: new Coding({
        display: "Breathlessness rating",
        code: "251896001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 251897005
     */
    ChestPainRating: new Coding({
        display: "Chest pain rating",
        code: "251897005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254292007
     */
    TumorStaging: new Coding({
        display: "Tumor staging",
        code: "254292007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254293002
     */
    TNMTumorStagingSystem: new Coding({
        display: "TNM tumor staging system",
        code: "254293002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254294008
     */
    TumorNodeMetastasisTNMHeadAndNeckTumorStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) head and neck tumor staging",
        code: "254294008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254295009
     */
    TumorNodeMetastasisTNMLipAndOralCavityTumorStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) lip and oral cavity tumor staging",
        code: "254295009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254296005
     */
    TumorNodeMetastasisTNMOropharynxTumorStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) oropharynx tumor staging",
        code: "254296005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254297001
     */
    TumorNodeMetastasisTNMNasopharynxTumorStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) nasopharynx tumor staging",
        code: "254297001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254298006
     */
    TumorNodeMetastasisTNMHypopharynxTumorStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) hypopharynx tumor staging",
        code: "254298006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254299003
     */
    TumorNodeMetastasisTNMSupraglotticLarynxTumorStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) supraglottic larynx tumor staging",
        code: "254299003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254300006
     */
    TumorNodeMetastasisTNMGlotticLarynxTumorStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) glottic larynx tumor staging",
        code: "254300006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254301005
     */
    TumorNodeMetastasisTNMSubglotticLarynxTumorStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) subglottic larynx tumor staging",
        code: "254301005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254302003
     */
    TumorNodeMetastasisTNMMaxillarySinusTumorStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) maxillary sinus tumor staging",
        code: "254302003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254303008
     */
    TumorNodeMetastasisTNMSalivaryGlandsTumorStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) salivary glands tumor staging",
        code: "254303008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254304002
     */
    TumorNodeMetastasisTNMThyroidGlandTumorStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) thyroid gland tumor staging",
        code: "254304002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254305001
     */
    TumorNodeMetastasisTNMDigestiveSystemTumorStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) digestive system tumor staging",
        code: "254305001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254306000
     */
    TumorNodeMetastasisTNMEsophagusTumorStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) esophagus tumor staging",
        code: "254306000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254307009
     */
    TumorNodeMetastasisTNMStomachTumorStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) stomach tumor staging",
        code: "254307009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254309007
     */
    TumorNodeMetastasisTNMSmallIntestineTumorStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) Small intestine tumor staging",
        code: "254309007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254310002
     */
    TumorNodeMetastasisTNMColonAndRectumTumorStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) Colon and rectum tumor staging",
        code: "254310002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254311003
     */
    TumorNodeMetastasisTNMAnalCanalTumorStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) anal canal tumor staging",
        code: "254311003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254312005
     */
    TumorNodeMetastasisTNMLiverTumorStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) liver tumor staging",
        code: "254312005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254313000
     */
    TumorNodeMetastasisTNMGallbladderTumorStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) gallbladder tumor staging",
        code: "254313000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254314006
     */
    TumorNodeMetastasisTNMExtrahepaticBileDuctsTumorStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) extrahepatic bile ducts tumor staging",
        code: "254314006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254315007
     */
    TumorNodeMetastasisTNMAmpullaOfVaterTumorStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) ampulla of vater tumor staging",
        code: "254315007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254316008
     */
    TumorNodeMetastasisTNMPancreasTumorStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) pancreas tumor staging",
        code: "254316008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254317004
     */
    TumorNodeMetastasisTNMLungAndPleuralTumorStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) lung and pleural tumor staging",
        code: "254317004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254318009
     */
    TumorNodeMetastasisTNMLungTumorStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) lung tumor staging",
        code: "254318009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254319001
     */
    TumorNodeMetastasisTNMPleuralMesotheliomaTumorStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) pleural mesothelioma tumor staging",
        code: "254319001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254320007
     */
    TumorNodeMetastasisTNMBoneAndSoftTissueTumorStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) bone and soft tissue tumor staging",
        code: "254320007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254321006
     */
    TumorNodeMetastasisTNMBoneTumorStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) bone tumor staging",
        code: "254321006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254322004
     */
    TumorNodeMetastasisTNMSoftTissuesTumorStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) soft tissues tumor staging",
        code: "254322004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254323009
     */
    TumorNodeMetastasisTNMSkinTumorStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) skin tumor staging",
        code: "254323009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254324003
     */
    TumorNodeMetastasisTNMCarcinomaOfSkinTumorStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) carcinoma of skin tumor staging",
        code: "254324003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254325002
     */
    TumorNodeMetastasisTNMMalignantMelanomaOfSkinStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) malignant melanoma of skin staging",
        code: "254325002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254326001
     */
    TumorNodeMetastasisTNMBreastTumorStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) breast tumor staging",
        code: "254326001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254327005
     */
    TumorNodeMetastasisTNMGynecologicalTumorStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) gynecological tumor staging",
        code: "254327005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254328000
     */
    TumorNodeMetastasisTNMVulvaTumorStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) vulva tumor staging",
        code: "254328000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254329008
     */
    TumorNodeMetastasisTNMVaginalTumorStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) vaginal tumor staging",
        code: "254329008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254330003
     */
    TumorNodeMetastasisTNMCervixUteriTumorStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) cervix uteri tumor staging",
        code: "254330003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254331004
     */
    TumorNodeMetastasisTNMCorpusUteriTumorStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) corpus uteri tumor staging",
        code: "254331004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254332006
     */
    TumorNodeMetastasisTNMOvaryTumorStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) ovary tumor staging",
        code: "254332006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254333001
     */
    TumorNodeMetastasisTNMUrologicalTumorStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) urological tumor staging",
        code: "254333001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254334007
     */
    TumorNodeMetastasisTNMPenisTumorStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) penis tumor staging",
        code: "254334007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254335008
     */
    TumorNodeMetastasisTNMProstateTumorStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) Prostate tumor staging",
        code: "254335008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254336009
     */
    TumorNodeMetastasisTNMTestisTumorStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) testis tumor staging",
        code: "254336009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254337000
     */
    TumorNodeMetastasisTNMKidneyTumorStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) kidney tumor staging",
        code: "254337000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254338005
     */
    TumorNodeMetastasisTNMRenalPelvisAndUreterTumorStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) renal pelvis and ureter tumor staging",
        code: "254338005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254339002
     */
    TumorNodeMetastasisTNMUrinaryBladderTumorStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) urinary bladder tumor staging",
        code: "254339002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254340000
     */
    TumorNodeMetastasisTNMUrethraTumorStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) urethra tumor staging",
        code: "254340000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254341001
     */
    TumorNodeMetastasisTNMOphthalmicTumorStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) ophthalmic tumor staging",
        code: "254341001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254342008
     */
    TumorNodeMetastasisTNMCarcinomaOfEyelidStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) carcinoma of eyelid staging",
        code: "254342008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254343003
     */
    TumorNodeMetastasisTNMMalignantMelanomaOfEyelidStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) malignant melanoma of eyelid staging",
        code: "254343003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254344009
     */
    TumorNodeMetastasisTNMCarcinomaOfConjunctivaStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) carcinoma of conjunctiva staging",
        code: "254344009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254345005
     */
    TumorNodeMetastasisTNMMalignantMelanomaOfConjunctivaStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) malignant melanoma of conjunctiva staging",
        code: "254345005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254346006
     */
    TumorNodeMetastasisTNMMalignantMelanomaOfUveaStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) malignant melanoma of uvea staging",
        code: "254346006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254347002
     */
    TumorNodeMetastasisTNMMalignantMelanomaOfIrisStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) malignant melanoma of iris staging",
        code: "254347002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254348007
     */
    TumorNodeMetastasisTNMMalignantMelanomaOfCiliaryBodyStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) malignant melanoma of ciliary body staging",
        code: "254348007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254349004
     */
    TumorNodeMetastasisTNMMalignantMelanomaOfChoroidStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) malignant melanoma of choroid staging",
        code: "254349004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254350004
     */
    TumorNodeMetastasisTNMRetinoblastomaStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) retinoblastoma staging",
        code: "254350004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254351000
     */
    TumorNodeMetastasisTNMSarcomaOfOrbitStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) sarcoma of orbit staging",
        code: "254351000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254352007
     */
    TumorNodeMetastasisTNMLacrimalGlandCarcinomaStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) lacrimal gland carcinoma staging",
        code: "254352007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254353002
     */
    TumorNodeMetastasisTNMBrainTumorStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) brain tumor staging",
        code: "254353002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254354008
     */
    TumorNodeMetastasisTNMHodgkinQuoteSDiseaseStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) Hodgkin's disease staging",
        code: "254354008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254355009
     */
    TumorNodeMetastasisTNMNonHodgkinQuoteSLymphomaStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) non-Hodgkin's lymphoma staging",
        code: "254355009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254356005
     */
    TumorNodeMetastasisTNMPediatricTumorStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) pediatric tumor staging",
        code: "254356005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254357001
     */
    TumorNodeMetastasisTNMWilmsQuoteTumorStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) Wilms' tumor staging",
        code: "254357001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254358006
     */
    TumorNodeMetastasisTNMNeuroblastomaStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) neuroblastoma staging",
        code: "254358006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254359003
     */
    TumorNodeMetastasisTNMSoftTissueSarcomaStaging: new Coding({
        display: "Tumor-node-metastasis (TNM) soft tissue sarcoma staging",
        code: "254359003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254360008
     */
    DukesStagingSystem: new Coding({
        display: "Dukes staging system",
        code: "254360008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254361007
     */
    AstlerCollerStagingSystem: new Coding({
        display: "Astler-Coller staging system",
        code: "254361007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254362000
     */
    ModifiedAstlerCollerStagingSystem: new Coding({
        display: "Modified Astler-Coller staging system",
        code: "254362000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254363005
     */
    InternationalNeuroblastomaStagingSystem: new Coding({
        display: "International neuroblastoma staging system",
        code: "254363005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254364004
     */
    NWTSNationalWilmsQuoteTumorStudyStagingSystem: new Coding({
        display: "NWTS - National Wilms' tumor study staging system",
        code: "254364004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254365003
     */
    SiopelLiverStagingSystem: new Coding({
        display: "Siopel liver staging system",
        code: "254365003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254366002
     */
    StannardStagingSystemForRetinoblastoma: new Coding({
        display: "Stannard staging system for retinoblastoma",
        code: "254366002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254368001
     */
    UnitedKingdomChildrenQuoteSCancerStudyGroupCentralNervousSystemTumorStagingSystem: new Coding({
        display: "United Kingdom children's cancer study group central nervous system tumor staging system",
        code: "254368001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254370005
     */
    StJudeMalignantHistiocytosisTumorStagingSystem: new Coding({
        display: "St Jude malignant histiocytosis tumor staging system",
        code: "254370005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254371009
     */
    StJudeNonHodgkinLymphomaStagingSystem: new Coding({
        display: "St Jude non-Hodgkin lymphoma staging system",
        code: "254371009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254372002
     */
    AnnArborLymphomaStagingSystem: new Coding({
        display: "Ann Arbor lymphoma staging system",
        code: "254372002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254373007
     */
    AnnArborHodgkinDiseaseTumorStagingSystem: new Coding({
        display: "Ann Arbor Hodgkin disease tumor staging system",
        code: "254373007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254374001
     */
    AnnArborNonHodgkinLymphomaTumorStagingSystem: new Coding({
        display: "Ann Arbor non-Hodgkin lymphoma tumor staging system",
        code: "254374001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254375000
     */
    CotswoldsHodgkinDiseaseTumorStagingSystem: new Coding({
        display: "Cotswolds Hodgkin disease tumor staging system",
        code: "254375000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254376004
     */
    TesticularTumorStagingSystems: new Coding({
        display: "Testicular tumor staging systems",
        code: "254376004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254378003
     */
    WalterReedTesticularTumorStagingSystem: new Coding({
        display: "Walter Reed testicular tumor staging system",
        code: "254378003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254379006
     */
    IndianaUniversityTesticularTumorStagingSystem: new Coding({
        display: "Indiana University testicular tumor staging system",
        code: "254379006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254380009
     */
    MarshallModificationOfJewettStrongStagingSystemForUrinaryBladderTumor: new Coding({
        display: "Marshall Modification of Jewett-Strong staging system for urinary bladder tumor",
        code: "254380009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254381008
     */
    AmericanUrologicalAssociationStagingSystemForProstateCancer: new Coding({
        display: "American Urological Association staging system for prostate cancer",
        code: "254381008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254382001
     */
    TrophoblasticMalignancyStagingSystem: new Coding({
        display: "Trophoblastic malignancy staging system",
        code: "254382001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254383006
     */
    FIGOStagingSystemOfGynecologicalMalignancy: new Coding({
        display: "FIGO staging system of gynecological malignancy",
        code: "254383006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254384000
     */
    FIGOVaginalTumorStagingSystem: new Coding({
        display: "FIGO Vaginal tumor staging system",
        code: "254384000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254385004
     */
    FIGOUterineTumorStagingSystem: new Coding({
        display: "FIGO uterine tumor staging system",
        code: "254385004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254386003
     */
    FIGOOvarianTumorStagingSystem: new Coding({
        display: "FIGO ovarian tumor staging system",
        code: "254386003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 254387007
     */
    HIVHumanImmunodeficiencyVirusInfectionClassificationSystems: new Coding({
        display: "HIV - Human immunodeficiency virus infection classification systems",
        code: "254387007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258232002
     */
    CancerStaging: new Coding({
        display: "Cancer staging",
        code: "258232002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258233007
     */
    GenericTumorStagingDescriptor: new Coding({
        display: "Generic tumor staging descriptor",
        code: "258233007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258234001
     */
    TumorNodeMetastasisTNMTumorStagingClassifications: new Coding({
        display: "Tumor-node-metastasis (TNM) tumor staging classifications",
        code: "258234001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258235000
     */
    InternationalUnionAgainstCancerUICC: new Coding({
        display: "International Union Against Cancer (UICC)",
        code: "258235000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258236004
     */
    AmericanJointCommitteeOnCancerAJCC: new Coding({
        display: "American Joint Committee on Cancer (AJCC)",
        code: "258236004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258244004
     */
    GStatus: new Coding({
        display: "G status",
        code: "258244004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258246002
     */
    LStatus: new Coding({
        display: "L status",
        code: "258246002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258247006
     */
    VStatus: new Coding({
        display: "V status",
        code: "258247006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258257007
     */
    AdditionalTumorStagingDescriptor: new Coding({
        display: "Additional tumor staging descriptor",
        code: "258257007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258258002
     */
    F: new Coding({
        display: "(f)",
        code: "258258002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258259005
     */
    Is: new Coding({
        display: "is",
        code: "258259005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258260000
     */
    D: new Coding({
        display: "(d)",
        code: "258260000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258267002
     */
    GenericTumorRiskStatusStages: new Coding({
        display: "Generic tumor risk status stages",
        code: "258267002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258268007
     */
    LowRiskTumor: new Coding({
        display: "Low risk tumor",
        code: "258268007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258269004
     */
    MediumRiskTumor: new Coding({
        display: "Medium risk tumor",
        code: "258269004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258270003
     */
    HighRiskTumor: new Coding({
        display: "High risk tumor",
        code: "258270003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258271004
     */
    SpecificTumorStagingDescriptor: new Coding({
        display: "Specific tumor staging descriptor",
        code: "258271004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258272006
     */
    LiverTumorStagingDescriptor: new Coding({
        display: "Liver tumor staging descriptor",
        code: "258272006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258273001
     */
    LiverTumorSizeIndex: new Coding({
        display: "Liver tumor size index",
        code: "258273001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258276009
     */
    TimingOfLiverTumorStaging: new Coding({
        display: "Timing of liver tumor staging",
        code: "258276009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258279002
     */
    LymphomaStagingSymptomStatusValues: new Coding({
        display: "Lymphoma staging symptom status values",
        code: "258279002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258280004
     */
    LymphomatousExtranodalInvolvementStatusValues: new Coding({
        display: "Lymphomatous extranodal involvement status values",
        code: "258280004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258281000
     */
    SpleenPositiveMinimalLymphomatousExtranodalInvolvement: new Coding({
        display: "Spleen-positive minimal lymphomatous extranodal involvement",
        code: "258281000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258282007
     */
    SpleenPositiveExtensiveLymphomatousExtranodalInvolvement: new Coding({
        display: "Spleen-positive extensive lymphomatous extranodal involvement",
        code: "258282007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258283002
     */
    LymphomatousNodalInvolvement: new Coding({
        display: "Lymphomatous nodal involvement",
        code: "258283002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258284008
     */
    StannardsRetinoblastomaStages: new Coding({
        display: "Stannards retinoblastoma stages",
        code: "258284008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258285009
     */
    OpticNerveTumorInvasionStatusInRetinoblastomaStaging: new Coding({
        display: "Optic nerve tumor invasion status in retinoblastoma staging",
        code: "258285009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258286005
     */
    ChoroidalTumorInvasionStatusInRetinoblastomaStaging: new Coding({
        display: "Choroidal tumor invasion status in retinoblastoma staging",
        code: "258286005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258292004
     */
    LymphNodalTumorInvasionStatusInRetinoblastomaStaging: new Coding({
        display: "Lymph nodal tumor invasion status in retinoblastoma staging",
        code: "258292004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258293009
     */
    BrainTumorInvasionStatusInRetinoblastomaStaging: new Coding({
        display: "Brain tumor invasion status in retinoblastoma staging",
        code: "258293009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258301001
     */
    LangerhansCellHistiocytosisStage: new Coding({
        display: "Langerhans cell histiocytosis stage",
        code: "258301001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258302008
     */
    NumberOfOrganSystemsInvolvedWithLangerhansCellHistiocytosis: new Coding({
        display: "Number of organ systems involved with Langerhans cell histiocytosis",
        code: "258302008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258303003
     */
    SingleSystemInvolvement: new Coding({
        display: "Single system involvement",
        code: "258303003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258304009
     */
    MultisystemInvolvement: new Coding({
        display: "Multisystem involvement",
        code: "258304009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258305005
     */
    OrganFailureDueToLangerhansCellHistiocytosis: new Coding({
        display: "Organ failure due to Langerhans cell histiocytosis",
        code: "258305005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258306006
     */
    VitalOrganFailure: new Coding({
        display: "Vital organ failure",
        code: "258306006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258307002
     */
    NonVitalOrganFailure: new Coding({
        display: "Non-vital organ failure",
        code: "258307002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258309004
     */
    GenericLymphNodeTumorInvasionStatusStage: new Coding({
        display: "Generic lymph node tumor invasion status stage",
        code: "258309004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258310009
     */
    NeckNodeTumorInvolvement: new Coding({
        display: "Neck node tumor involvement",
        code: "258310009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258311008
     */
    MPlus: new Coding({
        display: "M+",
        code: "258311008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258312001
     */
    AxillaryLymphNodeLevel: new Coding({
        display: "Axillary lymph node level",
        code: "258312001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258313006
     */
    LevelI: new Coding({
        display: "Level I",
        code: "258313006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258314000
     */
    Midaxilla: new Coding({
        display: "Midaxilla",
        code: "258314000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258315004
     */
    LevelIII: new Coding({
        display: "Level III",
        code: "258315004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258316003
     */
    RetroperitonealLymphNodeTumorInvasionStatus: new Coding({
        display: "Retroperitoneal lymph node tumor invasion status",
        code: "258316003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258318002
     */
    GenericAnatomicalSiteTumorInvasionStatus: new Coding({
        display: "Generic anatomical site tumor invasion status",
        code: "258318002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258319005
     */
    LungInvolvementStages: new Coding({
        display: "Lung involvement stages",
        code: "258319005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258320004
     */
    LungStageL2: new Coding({
        display: "Lung stage L2",
        code: "258320004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258321000
     */
    LungStageL3: new Coding({
        display: "Lung stage L3",
        code: "258321000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258322007
     */
    HPlus: new Coding({
        display: "H+",
        code: "258322007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258323002
     */
    LiverSectors: new Coding({
        display: "Liver sectors",
        code: "258323002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258324008
     */
    LiverSector1: new Coding({
        display: "Liver sector 1",
        code: "258324008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258325009
     */
    LiverSector2: new Coding({
        display: "Liver sector 2",
        code: "258325009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258326005
     */
    LiverSector3: new Coding({
        display: "Liver sector 3",
        code: "258326005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258327001
     */
    LiverSector4: new Coding({
        display: "Liver sector 4",
        code: "258327001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 258328006
     */
    MarkersForLiverTumorStaging: new Coding({
        display: "Markers for liver tumor staging",
        code: "258328006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 260998006
     */
    ClinicalStagingQualifierValue: new Coding({
        display: "Clinical staging (qualifier value)",
        code: "260998006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 261023001
     */
    PathologicalStagingQualifierValue: new Coding({
        display: "Pathological staging (qualifier value)",
        code: "261023001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 261663004
     */
    TumorStageTa: new Coding({
        display: "Tumor stage Ta",
        code: "261663004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 261731003
     */
    CentralNervousSystemCNSMetastases: new Coding({
        display: "Central nervous system (CNS) metastases",
        code: "261731003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 261789009
     */
    ExtraCentralNervousSystemMetastases: new Coding({
        display: "Extra central nervous system metastases",
        code: "261789009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 261985008
     */
    NoMetastases: new Coding({
        display: "No metastases",
        code: "261985008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 263487004
     */
    BorgScale: new Coding({
        display: "Borg scale",
        code: "263487004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 263638005
     */
    EndometriosisClassificationOfAmericanFertilitySociety: new Coding({
        display: "Endometriosis classification of American Fertility Society",
        code: "263638005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273249006
     */
    AssessmentScales: new Coding({
        display: "Assessment scales",
        code: "273249006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273251005
     */
    AachenAphasiaTest: new Coding({
        display: "Aachen aphasia test",
        code: "273251005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273252003
     */
    ABCChart: new Coding({
        display: "ABC chart",
        code: "273252003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273253008
     */
    ABCTestForMovement: new Coding({
        display: "ABC test for movement",
        code: "273253008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273254002
     */
    AISAbbreviatedInjuryScale: new Coding({
        display: "AIS - Abbreviated injury scale",
        code: "273254002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273255001
     */
    AbbreviatedMentalTest: new Coding({
        display: "Abbreviated mental test",
        code: "273255001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273256000
     */
    AIMSAbnormalInvoluntaryMovementScale: new Coding({
        display: "AIMS - Abnormal involuntary movement scale",
        code: "273256000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273257009
     */
    AcutePhysiologyAndChronicHealthEvaluation: new Coding({
        display: "Acute physiology and chronic health evaluation",
        code: "273257009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273258004
     */
    APACHEIIAcutePhysiologyAndChronicHealthEvaluationII: new Coding({
        display: "APACHE II - Acute physiology and chronic health evaluation II",
        code: "273258004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273259007
     */
    AcutePhysiologyAndChronicHealthEvaluationIII: new Coding({
        display: "Acute physiology and chronic health evaluation III",
        code: "273259007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273260002
     */
    AddictionSeverityIndex: new Coding({
        display: "Addiction severity index",
        code: "273260002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273261003
     */
    AdultPersonalityRatingSchedule: new Coding({
        display: "Adult personality rating schedule",
        code: "273261003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273262005
     */
    ABSAffectBalanceScale: new Coding({
        display: "ABS - Affect balance scale",
        code: "273262005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273263000
     */
    AcquiredImmunodeficiencySyndromeAIDSRiskBehaviorKnowledgeTest: new Coding({
        display: "Acquired immunodeficiency syndrome (AIDS) risk behavior knowledge test",
        code: "273263000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273264006
     */
    ADSAlcoholDependenceScale: new Coding({
        display: "ADS - Alcohol dependence scale",
        code: "273264006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273265007
     */
    AlcoholUseDisordersIdentificationTest: new Coding({
        display: "Alcohol use disorders identification test",
        code: "273265007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273266008
     */
    AlcoholUseInventory: new Coding({
        display: "Alcohol use inventory",
        code: "273266008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273267004
     */
    AllenCognitiveLevelScreeningTool: new Coding({
        display: "Allen cognitive level screening tool",
        code: "273267004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273268009
     */
    AllenCognitivePerformanceTest: new Coding({
        display: "Allen cognitive performance test",
        code: "273268009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273269001
     */
    AlzheimerDiseaseAssessmentScale: new Coding({
        display: "Alzheimer disease assessment scale",
        code: "273269001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273270000
     */
    AmericanSocietyOfAnesthesiologistsPhysicalStatusClassification: new Coding({
        display: "American Society of Anesthesiologists physical status classification",
        code: "273270000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273271001
     */
    AmsterdamNijmegenEverydayLanguageTest: new Coding({
        display: "Amsterdam-Nijmegen Everyday Language Test",
        code: "273271001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273272008
     */
    AnomalousSentenceRepetitionTestWeeks: new Coding({
        display: "Anomalous sentence repetition test - Weeks",
        code: "273272008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273273003
     */
    AnomalousSentenceTestKopelman: new Coding({
        display: "Anomalous sentence test - Kopelman",
        code: "273273003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273274009
     */
    AnorexicAttitudesQuestionnaire: new Coding({
        display: "Anorexic attitudes questionnaire",
        code: "273274009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273275005
     */
    ABSAnorexicBehaviorScales: new Coding({
        display: "ABS - Anorexic behavior scales",
        code: "273275005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273276006
     */
    AphasiaLanguagePerformanceScales: new Coding({
        display: "Aphasia language performance scales",
        code: "273276006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273277002
     */
    WhurrAphasiaScreeningTest: new Coding({
        display: "Whurr - Aphasia screening test",
        code: "273277002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273279004
     */
    ApraxiaBatteryForAdults: new Coding({
        display: "Apraxia battery for adults",
        code: "273279004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273280001
     */
    ArizonaBatteryForCommunicationDisordersOfDementia: new Coding({
        display: "Arizona battery for communication disorders of dementia",
        code: "273280001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273281002
     */
    AIMSIArthritisImpactMeasurementScaleI: new Coding({
        display: "AIMS I - Arthritis impact measurement scale I",
        code: "273281002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273282009
     */
    ArthritisImpactMeasurementScaleII: new Coding({
        display: "Arthritis impact measurement scale II",
        code: "273282009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273283004
     */
    ASEPSISScoreForWoundInfection: new Coding({
        display: "ASEPSIS score for wound infection",
        code: "273283004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273284005
     */
    AshworthAssessmentScale: new Coding({
        display: "Ashworth assessment scale",
        code: "273284005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273285006
     */
    AssessingReadingDifficulties: new Coding({
        display: "Assessing reading difficulties",
        code: "273285006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273286007
     */
    AssessmentAndTherapyProgramForDysfluentChildren: new Coding({
        display: "Assessment and therapy program for dysfluent children",
        code: "273286007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273287003
     */
    AssessmentOfIntelligibility: new Coding({
        display: "Assessment of intelligibility",
        code: "273287003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273288008
     */
    AssessmentOfMotorAndProcessSkills: new Coding({
        display: "Assessment of motor and process skills",
        code: "273288008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273289000
     */
    AOFAssessmentOfOccupationalFunction: new Coding({
        display: "AOF - Assessment of occupational function",
        code: "273289000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273290009
     */
    AssessmentProtocolOfPragmaticLinguisticSkills: new Coding({
        display: "Assessment protocol of pragmatic linguistic skills",
        code: "273290009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273291008
     */
    AstonIndex: new Coding({
        display: "Aston index",
        code: "273291008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273292001
     */
    AttributionalStyleQuestionnaire: new Coding({
        display: "Attributional style questionnaire",
        code: "273292001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273293006
     */
    AuditoryComprehensionTestForSentences: new Coding({
        display: "Auditory comprehension test for sentences",
        code: "273293006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273294000
     */
    AugmentativeCommunicationProfile: new Coding({
        display: "Augmentative communication profile",
        code: "273294000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273295004
     */
    AutisticFeaturesChecklist: new Coding({
        display: "Autistic features checklist",
        code: "273295004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273296003
     */
    AutobiographicalMemoryInterview: new Coding({
        display: "Autobiographical memory interview",
        code: "273296003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273298002
     */
    BamfordKowalAndBenchNonPictureRelated: new Coding({
        display: "Bamford Kowal and Bench non-picture related",
        code: "273298002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273299005
     */
    BKBPRBamfordKowalAndBenchPictureRelated: new Coding({
        display: "BKBPR - Bamford Kowal and Bench picture related",
        code: "273299005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273300002
     */
    BangorDyslexiaTest: new Coding({
        display: "Bangor dyslexia test",
        code: "273300002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273301003
     */
    BanksonLanguageTest: new Coding({
        display: "Bankson language test",
        code: "273301003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273302005
     */
    BarthelIndex: new Coding({
        display: "Barthel index",
        code: "273302005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273305007
     */
    BayleyScaleOfInfantDevelopment: new Coding({
        display: "Bayley scale of infant development",
        code: "273305007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273306008
     */
    BeckDepressionInventory: new Coding({
        display: "Beck depression inventory",
        code: "273306008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273307004
     */
    BeckAnxietyStandardizedRatingScale: new Coding({
        display: "Beck anxiety standardized rating scale",
        code: "273307004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273308009
     */
    BESTBedsideEvaluationAndScreeningTestOfAphasia: new Coding({
        display: "BEST - Bedside evaluation and screening test of aphasia",
        code: "273308009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273309001
     */
    BeeryBuktenicaTestOfVisualMotorIntegration: new Coding({
        display: "Beery-Buktenica test of visual motor integration",
        code: "273309001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273310006
     */
    BehaviorAndMoodDisturbanceScale: new Coding({
        display: "Behavior and mood disturbance scale",
        code: "273310006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273311005
     */
    BehaviorAssessmentBattery: new Coding({
        display: "Behavior assessment battery",
        code: "273311005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273312003
     */
    BehaviorProblemChecklist: new Coding({
        display: "Behavior problem checklist",
        code: "273312003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273313008
     */
    BehaviorRatingScale: new Coding({
        display: "Behavior rating scale",
        code: "273313008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273314002
     */
    BehavioralInattentionTest: new Coding({
        display: "Behavioral inattention test",
        code: "273314002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273315001
     */
    BOSBehavioralObservationSchedule: new Coding({
        display: "BOS - Behavioral observation schedule",
        code: "273315001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273316000
     */
    BehavioralScreeningQuestionnaire: new Coding({
        display: "Behavioral screening questionnaire",
        code: "273316000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273317009
     */
    BennettTestOfManualDexterity: new Coding({
        display: "Bennett test of manual dexterity",
        code: "273317009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273319007
     */
    BexleyMaudsleyAutomatedPsychologicalScreening: new Coding({
        display: "Bexley-Maudsley automated psychological screening",
        code: "273319007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273320001
     */
    BingeEatingScale: new Coding({
        display: "Binge eating scale",
        code: "273320001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273321002
     */
    BORBBirminghamObjectRecognitionBattery: new Coding({
        display: "BORB - Birmingham object recognition battery",
        code: "273321002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273322009
     */
    BlakelyDyspraxiaAssessment: new Coding({
        display: "Blakely dyspraxia assessment",
        code: "273322009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273323004
     */
    BlessedDementiaRatingScale: new Coding({
        display: "Blessed dementia rating scale",
        code: "273323004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273324005
     */
    BlissymbolsTest: new Coding({
        display: "Blissymbols test",
        code: "273324005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273325006
     */
    BodyShapeQuestionnaire: new Coding({
        display: "Body shape questionnaire",
        code: "273325006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273326007
     */
    BoehmTestOfBasicConcepts: new Coding({
        display: "Boehm test of basic concepts",
        code: "273326007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273327003
     */
    BookerHeterotopicOssificationScore: new Coding({
        display: "Booker heterotopic ossification score",
        code: "273327003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273328008
     */
    BostonAphasiaScale: new Coding({
        display: "Boston aphasia scale",
        code: "273328008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273329000
     */
    BostonDiagnosticAphasiaExamination: new Coding({
        display: "Boston diagnostic aphasia examination",
        code: "273329000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273330005
     */
    BostonNamingTest: new Coding({
        display: "Boston naming test",
        code: "273330005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273331009
     */
    BrackenTestOfBasicConceptScale: new Coding({
        display: "Bracken test of basic concept scale",
        code: "273331009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273332002
     */
    BriefActivitiesOfDailyLiving: new Coding({
        display: "Brief activities of daily living",
        code: "273332002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273333007
     */
    BDRSBriefDepressionRatingScale: new Coding({
        display: "BDRS - Brief depression rating scale",
        code: "273333007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273334001
     */
    BristolLanguageAssessmentScale: new Coding({
        display: "Bristol language assessment scale",
        code: "273334001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273335000
     */
    BritishAbilityScales: new Coding({
        display: "British ability scales",
        code: "273335000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273336004
     */
    BASRBritishAbilityScalesRevised: new Coding({
        display: "BASR - British ability scales - revised",
        code: "273336004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273337008
     */
    BritishAbilityScalesReadingTest: new Coding({
        display: "British ability scales reading test",
        code: "273337008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273338003
     */
    BASBritishAbilityScalesSpellingTest: new Coding({
        display: "BAS - British ability scales spelling test",
        code: "273338003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273339006
     */
    BritishIslesLupusAssessmentGroupScore: new Coding({
        display: "British isles lupus assessment group score",
        code: "273339006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273341007
     */
    BryantAndBradleyRhymingTask: new Coding({
        display: "Bryant and Bradley rhyming task",
        code: "273341007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273342000
     */
    BuffaloAssessmentProfileWilson: new Coding({
        display: "Buffalo assessment profile - Wilson",
        code: "273342000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273343005
     */
    BulimiaTest: new Coding({
        display: "Bulimia test",
        code: "273343005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273344004
     */
    BulimicInvestigationTestEdinburgh: new Coding({
        display: "Bulimic investigation test - Edinburgh",
        code: "273344004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273345003
     */
    BusStory: new Coding({
        display: "Bus story",
        code: "273345003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273347006
     */
    CageQuestionnaire: new Coding({
        display: "Cage questionnaire",
        code: "273347006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273348001
     */
    CaliforniaPersonalityInventory: new Coding({
        display: "California personality inventory",
        code: "273348001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273349009
     */
    CallierAzusaScale: new Coding({
        display: "Callier-Azusa scale",
        code: "273349009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273350009
     */
    CamberwellAssessmentForTheNeedsOfTheElderly: new Coding({
        display: "Camberwell assessment for the needs of the elderly",
        code: "273350009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273351008
     */
    CABCambridgeApraxiaBattery: new Coding({
        display: "CAB - Cambridge apraxia battery",
        code: "273351008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273352001
     */
    CantrilLadderAssessment: new Coding({
        display: "Cantril ladder assessment",
        code: "273352001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273353006
     */
    CELICarrowElicitedLanguageInventory: new Coding({
        display: "CELI - Carrow elicited language inventory",
        code: "273353006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273354000
     */
    CarrowScreeningTestOfAuditoryComprehension: new Coding({
        display: "Carrow screening test of auditory comprehension",
        code: "273354000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273355004
     */
    ChaileyHeritageLyingAssessment: new Coding({
        display: "Chailey Heritage lying assessment",
        code: "273355004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273356003
     */
    ChaileyHeritageSeatingAssessment: new Coding({
        display: "Chailey Heritage seating assessment",
        code: "273356003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273357007
     */
    ChecklistOfCommunicativeCompetence: new Coding({
        display: "Checklist of communicative competence",
        code: "273357007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273358002
     */
    ChecklistOfConversationalAbilities: new Coding({
        display: "Checklist of conversational abilities",
        code: "273358002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273359005
     */
    ChecklistOfListeningBehaviors: new Coding({
        display: "Checklist of listening behaviors",
        code: "273359005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273360000
     */
    OTChessingtonOccupationalTherapyNeurologicalAssessmentBattery: new Coding({
        display: "OT - Chessington occupational therapy neurological assessment battery",
        code: "273360000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273361001
     */
    ChildAssessmentSchedule: new Coding({
        display: "Child assessment schedule",
        code: "273361001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273362008
     */
    CDSChildDepressionScale: new Coding({
        display: "CDS - Child depression scale",
        code: "273362008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273363003
     */
    ChildrenQuoteSComaScale: new Coding({
        display: "Children's coma scale",
        code: "273363003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273364009
     */
    CrohnDiseaseActivityIndex: new Coding({
        display: "Crohn disease activity index",
        code: "273364009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273365005
     */
    CAPECliftonAssessmentProceduresForTheElderly: new Coding({
        display: "CAPE - Clifton assessment procedures for the elderly",
        code: "273365005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273366006
     */
    ClinicalAnxietyScale: new Coding({
        display: "Clinical anxiety scale",
        code: "273366006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273367002
     */
    ClinicalDementiaRatingScale: new Coding({
        display: "Clinical dementia rating scale",
        code: "273367002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273368007
     */
    CEDRIClinicalEatingDisorderRatingInstrument: new Coding({
        display: "CEDRI - Clinical eating disorder rating instrument",
        code: "273368007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273369004
     */
    ClinicalEvaluationOfLanguageFunctionRevised: new Coding({
        display: "Clinical evaluation of language function revised",
        code: "273369004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273370003
     */
    ClinicalEvaluationOfLanguageFunctionRevisedScreeningTest: new Coding({
        display: "Clinical evaluation of language function revised - screening test",
        code: "273370003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273371004
     */
    ClinicalEvaluationOfLanguageFunctionRevisedPreschoolTest: new Coding({
        display: "Clinical evaluation of language function revised - preschool test",
        code: "273371004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273372006
     */
    ClinicalObservationOfMotorAndPosturalSkills: new Coding({
        display: "Clinical observation of motor and postural skills",
        code: "273372006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273373001
     */
    CAAPCocaineAbuseAssessmentProfile: new Coding({
        display: "CAAP - Cocaine abuse assessment profile",
        code: "273373001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273374007
     */
    CognitionsQuestionnaire: new Coding({
        display: "Cognitions questionnaire",
        code: "273374007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273375008
     */
    CognitiveFailuresQuestionnaire: new Coding({
        display: "Cognitive failures questionnaire",
        code: "273375008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273376009
     */
    CASPCommunicationAssessmentProfileForAdultsWithAMentalHandicap: new Coding({
        display: "CASP - Communication assessment profile for adults with a mental handicap",
        code: "273376009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273377000
     */
    CommunicativeAbilitiesInDailyLiving: new Coding({
        display: "Communicative abilities in daily living",
        code: "273377000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273378005
     */
    CIDICompositeInternationalDiagnosticInterview: new Coding({
        display: "CIDI - Composite international diagnostic interview",
        code: "273378005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273379002
     */
    ComprehensiveDrinkerProfile: new Coding({
        display: "Comprehensive drinker profile",
        code: "273379002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273380004
     */
    CRISComprehensiveInjuryScale: new Coding({
        display: "CRIS - Comprehensive injury scale",
        code: "273380004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273381000
     */
    ComprehensiveOccupationalTherapyEvaluationScale: new Coding({
        display: "Comprehensive occupational therapy evaluation scale",
        code: "273381000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273382007
     */
    CESCompulsiveEatingScale: new Coding({
        display: "CES - Compulsive eating scale",
        code: "273382007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273383002
     */
    ConstantAndMurleyShoulderAssessmentScore: new Coding({
        display: "Constant and Murley shoulder assessment score",
        code: "273383002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273384008
     */
    ConsumerSatisfactionQuestionnaire: new Coding({
        display: "Consumer satisfaction questionnaire",
        code: "273384008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273385009
     */
    CoOpFunctionCharts: new Coding({
        display: "Co-op function charts",
        code: "273385009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273386005
     */
    PFCTCooperPersonalizedFluencyControlTherapy: new Coding({
        display: "PFCT - Cooper personalized fluency control therapy",
        code: "273386005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273387001
     */
    CopingResponsesInventory: new Coding({
        display: "Coping responses inventory",
        code: "273387001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273388006
     */
    CrichtonVocabularyScale: new Coding({
        display: "Crichton vocabulary scale",
        code: "273388006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273389003
     */
    DailyActivitiesQuestionnaire: new Coding({
        display: "Daily activities questionnaire",
        code: "273389003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273390007
     */
    DallasPainQuestionnaire: new Coding({
        display: "Dallas pain questionnaire",
        code: "273390007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273391006
     */
    DanielsAndDiackReadingTests: new Coding({
        display: "Daniels and Diack reading tests",
        code: "273391006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273392004
     */
    DanielsAndDiackGradedWordSpellingTest: new Coding({
        display: "Daniels and Diack graded word spelling test",
        code: "273392004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273393009
     */
    DeGangiBerkSensoryFunctioningInInfants: new Coding({
        display: "De Gangi-Berk sensory functioning in infants",
        code: "273393009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273394003
     */
    DelightedTerribleFacesScale: new Coding({
        display: "Delighted-terrible faces scale",
        code: "273394003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273395002
     */
    DenverDevelopmentScale: new Coding({
        display: "Denver development scale",
        code: "273395002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273396001
     */
    DenverDevelopmentalSubscaleGrossMotor: new Coding({
        display: "Denver developmental subscale - gross motor",
        code: "273396001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273397005
     */
    DenverDevelopmentalSubscaleLanguage: new Coding({
        display: "Denver developmental subscale - language",
        code: "273397005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273398000
     */
    DenverDevelopmentalSubscalePersonalSocial: new Coding({
        display: "Denver developmental subscale - personal/social",
        code: "273398000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273399008
     */
    DenverDevelopmentalSubscaleFineMotorAdaptive: new Coding({
        display: "Denver developmental subscale - fine motor/adaptive",
        code: "273399008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273400001
     */
    DenverDevelopmentScaleScreeningTest: new Coding({
        display: "Denver development scale screening test",
        code: "273400001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273401002
     */
    DenverDevelopmentScaleScreeningTestScheduleForGrowingSkills: new Coding({
        display: "Denver development scale screening test - schedule for growing skills",
        code: "273401002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273402009
     */
    DepressionAnxietyScale: new Coding({
        display: "Depression anxiety scale",
        code: "273402009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273403004
     */
    DepressionSelfRatingScale: new Coding({
        display: "Depression self rating scale",
        code: "273403004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273408008
     */
    DermatologyLifeQualityIndex: new Coding({
        display: "Dermatology life quality index",
        code: "273408008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273409000
     */
    DSFIDerogatisSexualFunctioningInventory: new Coding({
        display: "DSFI - Derogatis sexual functioning inventory",
        code: "273409000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273411009
     */
    DiabetesClinicSatisfactionQuestionnaire: new Coding({
        display: "Diabetes clinic satisfaction questionnaire",
        code: "273411009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273412002
     */
    DTSQDiabetesTreatmentSatisfactionQuestionnaire: new Coding({
        display: "DTSQ - Diabetes treatment satisfaction questionnaire",
        code: "273412002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273413007
     */
    DiabetesWellbeingQuestionnaire: new Coding({
        display: "Diabetes wellbeing questionnaire",
        code: "273413007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273414001
     */
    DICADiagnosticInterviewForChildrenAndAdolescents: new Coding({
        display: "DICA - Diagnostic interview for children and adolescents",
        code: "273414001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273415000
     */
    DiagnosticInterviewSchedule: new Coding({
        display: "Diagnostic interview schedule",
        code: "273415000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273416004
     */
    DSDTDiagnosticSpeechDiscriminationTest: new Coding({
        display: "DSDT - Diagnostic speech discrimination test",
        code: "273416004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273417008
     */
    DiagnosticSurveyForEatingDisorders: new Coding({
        display: "Diagnostic survey for eating disorders",
        code: "273417008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273418003
     */
    DINEDietaryInstrumentForNutritionEducationQuestionnaire: new Coding({
        display: "DINE - Dietary instrument for nutrition education questionnaire",
        code: "273418003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273419006
     */
    DigitSequenceLearning: new Coding({
        display: "Digit sequence learning",
        code: "273419006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273420000
     */
    DisabilityAssessmentSchedule: new Coding({
        display: "Disability assessment schedule",
        code: "273420000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273421001
     */
    DisabilityRatingScale: new Coding({
        display: "Disability rating scale",
        code: "273421001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273422008
     */
    DiscourseAbilitiesProfile: new Coding({
        display: "Discourse abilities profile",
        code: "273422008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273423003
     */
    DolScale: new Coding({
        display: "Dol scale",
        code: "273423003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273424009
     */
    DoyleArticularIndex: new Coding({
        display: "Doyle articular index",
        code: "273424009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273425005
     */
    DrinkingProblemScale: new Coding({
        display: "Drinking problem scale",
        code: "273425005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273426006
     */
    DASTDrugAbuseScreeningTest: new Coding({
        display: "DAST - Drug abuse screening test",
        code: "273426006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273427002
     */
    DubowitzScore: new Coding({
        display: "Dubowitz score",
        code: "273427002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273428007
     */
    DukeUNCHealthProfile: new Coding({
        display: "Duke UNC health profile",
        code: "273428007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273429004
     */
    DundeeCardiovascularRiskScore: new Coding({
        display: "Dundee cardiovascular risk score",
        code: "273429004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273430009
     */
    DurrellTestOfListeningComprehension: new Coding({
        display: "Durrell test of listening comprehension",
        code: "273430009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273431008
     */
    EakinIndex: new Coding({
        display: "Eakin index",
        code: "273431008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273432001
     */
    EatingAttitudesTest: new Coding({
        display: "Eating attitudes test",
        code: "273432001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273433006
     */
    EAT26AbbreviatedEatingAttitudesTest: new Coding({
        display: "EAT 26 - Abbreviated eating attitudes test",
        code: "273433006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273434000
     */
    EBRSEatingBehaviorRatingScale: new Coding({
        display: "EBRS - Eating behavior rating scale",
        code: "273434000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273435004
     */
    EatingDisordersInventory: new Coding({
        display: "Eating disorders inventory",
        code: "273435004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273436003
     */
    EatingInventory: new Coding({
        display: "Eating inventory",
        code: "273436003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273437007
     */
    EasternCooperativeOncologyGroupECOGScaleForPhysicalAssessment: new Coding({
        display: "Eastern Cooperative Oncology Group (ECOG) scale for physical assessment",
        code: "273437007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273438002
     */
    EdinburghArticulationTest: new Coding({
        display: "Edinburgh articulation test",
        code: "273438002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273439005
     */
    EFCPEdinburghFunctionalCommunicationProfile: new Coding({
        display: "EFCP - Edinburgh functional communication profile",
        code: "273439005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273440007
     */
    RevisedEdinburghFunctionalCommunicationProfile: new Coding({
        display: "Revised Edinburgh functional communication profile",
        code: "273440007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273441006
     */
    EdinburghPostnatalDepressionScale: new Coding({
        display: "Edinburgh postnatal depression scale",
        code: "273441006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273442004
     */
    EdmansADLIndexEdmansActivitiesOfDailyLivingIndex: new Coding({
        display: "Edmans ADL index - Edmans activities of daily living index",
        code: "273442004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273443009
     */
    EliaNormogram: new Coding({
        display: "Elia normogram",
        code: "273443009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273444003
     */
    BritishPictureVocabularyScale: new Coding({
        display: "British picture vocabulary scale",
        code: "273444003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273445002
     */
    EnthesitisIndex: new Coding({
        display: "Enthesitis index",
        code: "273445002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273446001
     */
    EuropeanOrganizationForResearchAndTreatmentOfCancerEORTCQualityOfLifeQuestionnaire: new Coding({
        display: "European Organization for Research and Treatment of Cancer (EORTC) - Quality of life questionnaire",
        code: "273446001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273447005
     */
    EuroQOL: new Coding({
        display: "EuroQOL",
        code: "273447005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273448000
     */
    ExtendedActivitiesOfDailyLivingScale: new Coding({
        display: "Extended activities of daily living scale",
        code: "273448000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273449008
     */
    EPIEysenckPersonalityInventory: new Coding({
        display: "EPI - Eysenck personality inventory",
        code: "273449008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273450008
     */
    FacialRecognitionTest: new Coding({
        display: "Facial recognition test",
        code: "273450008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273451007
     */
    FagerstromToleranceQuestionnaire: new Coding({
        display: "Fagerstrom tolerance questionnaire",
        code: "273451007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273452000
     */
    RTQRevisedToleranceQuestionnaire: new Coding({
        display: "RTQ - Revised tolerance questionnaire",
        code: "273452000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273453005
     */
    FagerstromTestForNicotineDependence: new Coding({
        display: "Fagerstrom test for nicotine dependence",
        code: "273453005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273454004
     */
    FearOfAcquiredImmunodeficiencySyndromeScale: new Coding({
        display: "Fear of acquired immunodeficiency syndrome scale",
        code: "273454004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273455003
     */
    FearSurveySchedule: new Coding({
        display: "Fear survey schedule",
        code: "273455003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273456002
     */
    FeedingAssessmentSchedule: new Coding({
        display: "Feeding assessment schedule",
        code: "273456002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273457006
     */
    FeelingsOfFatnessQuestionnaire: new Coding({
        display: "Feelings of fatness questionnaire",
        code: "273457006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273458001
     */
    FTTFingerTappingTest: new Coding({
        display: "FTT - Finger tapping test",
        code: "273458001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273459009
     */
    FIRSTScreeningTest: new Coding({
        display: "FIRST screening test",
        code: "273459009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273460004
     */
    FrankelGradingSystemForSpinalCordInjury: new Coding({
        display: "Frankel grading system for spinal cord injury",
        code: "273460004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273461000
     */
    FAIFrenchayActivitiesIndex: new Coding({
        display: "FAI - Frenchay activities index",
        code: "273461000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273462007
     */
    FrenchayAphasiaScreeningTest: new Coding({
        display: "Frenchay aphasia screening test",
        code: "273462007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273463002
     */
    FDAFrenchayDysarthriaAssessment: new Coding({
        display: "FDA - Frenchay dysarthria assessment",
        code: "273463002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273465009
     */
    FullertonLanguageTestForAdolescents: new Coding({
        display: "Fullerton language test for adolescents",
        code: "273465009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273466005
     */
    FunctionalAssessmentMeasure: new Coding({
        display: "Functional assessment measure",
        code: "273466005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273467001
     */
    FunctionalCommunicationAssessmentForPhysicallyHandicappedChildren: new Coding({
        display: "Functional communication assessment for physically handicapped children",
        code: "273467001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273468006
     */
    FunctionalCommunicationProfile: new Coding({
        display: "Functional communication profile",
        code: "273468006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273469003
     */
    FIMFunctionalIndependenceMeasure: new Coding({
        display: "FIM - Functional independence measure",
        code: "273469003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273470002
     */
    FunctionalLimitationProfile: new Coding({
        display: "Functional limitation profile",
        code: "273470002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273471003
     */
    FMPSFunctionalMealPreparationScale: new Coding({
        display: "FMPS - Functional meal preparation scale",
        code: "273471003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273472005
     */
    FunctionalStatusIndex: new Coding({
        display: "Functional status index",
        code: "273472005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273473000
     */
    FSSTFundamentalSpeechSkillsTest: new Coding({
        display: "FSST - Fundamental speech skills test",
        code: "273473000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273474006
     */
    GalvestonOrientationAndAmnesiaTest: new Coding({
        display: "Galveston orientation and amnesia test",
        code: "273474006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273475007
     */
    GathercoleNonWordRepetitionTask: new Coding({
        display: "Gathercole - non-word repetition task",
        code: "273475007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273477004
     */
    GeneralAssessmentOfNeurologicalImpairment: new Coding({
        display: "General assessment of neurological impairment",
        code: "273477004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273478009
     */
    GeneralClericalTest: new Coding({
        display: "General clerical test",
        code: "273478009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273479001
     */
    GeneralHealthQuestionnaire: new Coding({
        display: "General health questionnaire",
        code: "273479001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273480003
     */
    GWBSGeneralWellbeingSchedule: new Coding({
        display: "GWBS - General wellbeing schedule",
        code: "273480003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273481004
     */
    GeriatricDepressionScale: new Coding({
        display: "Geriatric depression scale",
        code: "273481004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273482006
     */
    GermanTestOfWordfinding: new Coding({
        display: "German test of wordfinding",
        code: "273482006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273483001
     */
    GlasgowAbbreviatedMentalTestScore: new Coding({
        display: "Glasgow abbreviated mental test score",
        code: "273483001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273484007
     */
    GlasgowOutcomeScale: new Coding({
        display: "Glasgow outcome scale",
        code: "273484007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273485008
     */
    GoldmanCardiacRiskIndex: new Coding({
        display: "Goldman cardiac risk index",
        code: "273485008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273486009
     */
    GoldmanFristoeTest: new Coding({
        display: "Goldman Fristoe test",
        code: "273486009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273487000
     */
    GolombrokRustInventoryOfSexualSatisfaction: new Coding({
        display: "Golombrok-Rust inventory of sexual satisfaction",
        code: "273487000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273488005
     */
    GoodenoughDrawAManTest: new Coding({
        display: "Goodenough draw-a-man test",
        code: "273488005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273489002
     */
    GoodenoughNorms: new Coding({
        display: "Goodenough norms",
        code: "273489002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273490006
     */
    GradeRoughBreathyAsthenicStrainGRBASScale: new Coding({
        display: "Grade-Rough-Breathy-Asthenic-Strain (GRBAS) scale",
        code: "273490006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273492003
     */
    GradedNamingTest: new Coding({
        display: "Graded naming test",
        code: "273492003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273493008
     */
    GrahamKendallMemoryForDesignsTest: new Coding({
        display: "Graham-Kendall memory for designs test",
        code: "273493008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273494002
     */
    GrammaticalAnalysisOfElicitedLanguage: new Coding({
        display: "Grammatical analysis of elicited language",
        code: "273494002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273495001
     */
    GrammaticalContrastsTest: new Coding({
        display: "Grammatical contrasts test",
        code: "273495001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273496000
     */
    GunzbergPrimaryProgressAssessmentChartOfSocialDevelopment: new Coding({
        display: "Gunzberg primary progress assessment chart of social development",
        code: "273496000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273497009
     */
    GunzbergProgressAssessmentChartOfSocialDevelopmentNumber1: new Coding({
        display: "Gunzberg progress assessment chart of social development number 1",
        code: "273497009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273498004
     */
    GunzbergProgressAssessmentChartOfSocialDevelopmentNumber2: new Coding({
        display: "Gunzberg progress assessment chart of social development number 2",
        code: "273498004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273499007
     */
    HachinskiIschemiaScore: new Coding({
        display: "Hachinski ischemia score",
        code: "273499007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273500003
     */
    HallAndBakerRehabilitationEvaluation: new Coding({
        display: "Hall and Baker rehabilitation evaluation",
        code: "273500003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273501004
     */
    HalsteadReitanBattery: new Coding({
        display: "Halstead-Reitan battery",
        code: "273501004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273502006
     */
    HambHipScore: new Coding({
        display: "Hamb hip score",
        code: "273502006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273503001
     */
    HamiltonRatingScaleForDepression: new Coding({
        display: "Hamilton rating scale for depression",
        code: "273503001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273504007
     */
    LorrQuoteSModifiedMultidimensionalScaleForRatingPsychiatricPatients: new Coding({
        display: "Lorr's modified multidimensional scale for rating psychiatric patients",
        code: "273504007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273505008
     */
    HampshireAssessmentForLivingWithOthers: new Coding({
        display: "Hampshire assessment for living with others",
        code: "273505008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273507000
     */
    HanenEarlyLanguageProgram: new Coding({
        display: "Hanen early language program",
        code: "273507000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273508005
     */
    HarveyAndBradshawIndex: new Coding({
        display: "Harvey and Bradshaw index",
        code: "273508005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273509002
     */
    HauserAmbulatoryCategories: new Coding({
        display: "Hauser ambulatory categories",
        code: "273509002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273510007
     */
    HealthAssessmentQuestionnaire: new Coding({
        display: "Health assessment questionnaire",
        code: "273510007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273511006
     */
    MHAQModifiedHealthAssessmentQuestionnaire: new Coding({
        display: "MHAQ - Modified health assessment questionnaire",
        code: "273511006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273512004
     */
    HealthcareAssessmentQuestionnaireSidneyBenjamin: new Coding({
        display: "Healthcare assessment questionnaire - Sidney Benjamin",
        code: "273512004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273513009
     */
    HealthOfTheNationOutcomeScaleGenericVersion: new Coding({
        display: "Health of the Nation Outcome Scale (generic version)",
        code: "273513009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273514003
     */
    HealthStatusIndex: new Coding({
        display: "Health status index",
        code: "273514003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273515002
     */
    HearingHandicapInventoryForTheElderly: new Coding({
        display: "Hearing handicap inventory for the elderly",
        code: "273515002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273516001
     */
    HHSHearingHandicapScale: new Coding({
        display: "HHS - Hearing handicap scale",
        code: "273516001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273517005
     */
    HiddenFiguresTest: new Coding({
        display: "Hidden figures test",
        code: "273517005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273520002
     */
    HopelessnessScale: new Coding({
        display: "Hopelessness scale",
        code: "273520002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273521003
     */
    HopkinsSymptomChecklist: new Coding({
        display: "Hopkins symptom checklist",
        code: "273521003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273522005
     */
    HornsbyArticulationTest: new Coding({
        display: "Hornsby articulation test",
        code: "273522005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273523000
     */
    HornsbyTestOfLanguageDevelopment: new Coding({
        display: "Hornsby test of language development",
        code: "273523000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273524006
     */
    HospitalAnxietyAndDepressionScale: new Coding({
        display: "Hospital anxiety and depression scale",
        code: "273524006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273525007
     */
    HospitalTraumaIndex: new Coding({
        display: "Hospital trauma index",
        code: "273525007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273526008
     */
    HumanInteractionAssessment: new Coding({
        display: "Human interaction assessment",
        code: "273526008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273527004
     */
    IllinoisTestOfPsycholinguisticAbilities: new Coding({
        display: "Illinois test of psycholinguistic abilities",
        code: "273527004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273528009
     */
    IISIIllnessInjurySeverityIndex: new Coding({
        display: "IISI - Illness-injury severity index",
        code: "273528009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273529001
     */
    IllnessBehaviorQuestionnaire: new Coding({
        display: "Illness behavior questionnaire",
        code: "273529001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273530006
     */
    ImpactOfEventScale: new Coding({
        display: "Impact of event scale",
        code: "273530006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273531005
     */
    IndexOfIndependenceInActivitiesOfDailyLiving: new Coding({
        display: "Index of independence in activities of daily living",
        code: "273531005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273533008
     */
    ISSInjurySeverityScore: new Coding({
        display: "ISS - Injury severity score",
        code: "273533008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273534002
     */
    InstrumentalADL: new Coding({
        display: "Instrumental ADL",
        code: "273534002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273535001
     */
    INREALInterReactiveLanguageAnalysis: new Coding({
        display: "INREAL - Inter-reactive language analysis",
        code: "273535001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273536000
     */
    InteractionChecklistForAugmentativeCommunication: new Coding({
        display: "Interaction checklist for augmentative communication",
        code: "273536000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273537009
     */
    InterestChecklist: new Coding({
        display: "Interest checklist",
        code: "273537009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273538004
     */
    IOWALowBackRatingScale: new Coding({
        display: "IOWA low back rating scale",
        code: "273538004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273539007
     */
    IOWAStructuredPsychiatricInterview: new Coding({
        display: "IOWA structured psychiatric interview",
        code: "273539007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273540009
     */
    IschemiaScore: new Coding({
        display: "Ischemia score",
        code: "273540009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273542001
     */
    JarmanIndex: new Coding({
        display: "Jarman index",
        code: "273542001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273543006
     */
    JebsenHandFunctionTest: new Coding({
        display: "Jebsen hand function test",
        code: "273543006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273544000
     */
    JonesWordOrderTest: new Coding({
        display: "Jones word order test",
        code: "273544000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273546003
     */
    KarnofskyIndex: new Coding({
        display: "Karnofsky index",
        code: "273546003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273547007
     */
    KatzActivitiesOfDailyLiving: new Coding({
        display: "Katz activities of daily living",
        code: "273547007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273548002
     */
    KASRKatzAdjustmentScaleRelativesForm: new Coding({
        display: "KASR - Katz adjustment scale - relatives form",
        code: "273548002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273549005
     */
    KendrickBatteryForDetectionOfDementiaInTheElderly: new Coding({
        display: "Kendrick battery for detection of dementia in the elderly",
        code: "273549005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273550005
     */
    KennyIndexOfADL: new Coding({
        display: "Kenny index of ADL",
        code: "273550005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273551009
     */
    KielhofnerRoleChecklist: new Coding({
        display: "Kielhofner role checklist",
        code: "273551009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273552002
     */
    KirwanThompsonArticularIndex: new Coding({
        display: "Kirwan Thompson articular index",
        code: "273552002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273553007
     */
    KleinBellActivitiesOfDailyLivingScale: new Coding({
        display: "Klein-Bell Activities of Daily Living scale",
        code: "273553007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273554001
     */
    KurtzkeMultipleSclerosisRatingScale: new Coding({
        display: "Kurtzke multiple sclerosis rating scale",
        code: "273554001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273555000
     */
    LCSLambethCommunicationScale: new Coding({
        display: "LCS - Lambeth communication scale",
        code: "273555000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273556004
     */
    LambethDisabilityScreeningQuestionnaire: new Coding({
        display: "Lambeth disability screening questionnaire",
        code: "273556004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273557008
     */
    LamhAssessmentChecklist: new Coding({
        display: "Lamh assessment checklist",
        code: "273557008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273558003
     */
    LanguageAssessmentRemediationAndScreeningProcedure: new Coding({
        display: "Language assessment remediation and screening procedure",
        code: "273558003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273559006
     */
    LansburyArticularIndex: new Coding({
        display: "Lansbury articular index",
        code: "273559006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273560001
     */
    LastSixMonthsOfDrinkingQuestionnaire: new Coding({
        display: "Last six months of drinking questionnaire",
        code: "273560001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273561002
     */
    LearningDevelopmentAidsHandwritingAssessment: new Coding({
        display: "Learning development aids - handwriting assessment",
        code: "273561002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273562009
     */
    LeedsScalesForTheSelfAssessmentOfAnxietyAndDepression: new Coding({
        display: "Leeds scales for the self-assessment of anxiety and depression",
        code: "273562009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273564005
     */
    LeiterInternationalPerformanceScale: new Coding({
        display: "Leiter international performance scale",
        code: "273564005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273565006
     */
    LequesneIndex: new Coding({
        display: "Lequesne index",
        code: "273565006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273566007
     */
    LequesneIndexHip: new Coding({
        display: "Lequesne index - hip",
        code: "273566007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273567003
     */
    LequesneIndexKnee: new Coding({
        display: "Lequesne index - knee",
        code: "273567003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273568008
     */
    LetterCancelationTest: new Coding({
        display: "Letter cancelation test",
        code: "273568008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273569000
     */
    LifeEventsAndDifficultiesScale: new Coding({
        display: "Life events and difficulties scale",
        code: "273569000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273570004
     */
    LifeEventsInventory: new Coding({
        display: "Life events inventory",
        code: "273570004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273571000
     */
    LifeSatisfactionIndex: new Coding({
        display: "Life satisfaction index",
        code: "273571000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273572007
     */
    LSIALifeSatisfactionIndexA: new Coding({
        display: "LSIA - Life satisfaction index A",
        code: "273572007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273573002
     */
    LifeSatisfactionIndexB: new Coding({
        display: "Life satisfaction index B",
        code: "273573002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273574008
     */
    LSIZLifeSatisfactionIndexZ: new Coding({
        display: "LSIZ - Life satisfaction index Z",
        code: "273574008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273575009
     */
    LikertScale: new Coding({
        display: "Likert scale",
        code: "273575009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273576005
     */
    LincolnRehabilitationAssessment: new Coding({
        display: "Lincoln rehabilitation assessment",
        code: "273576005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273577001
     */
    LindamoodAuditoryConceptualizationTest: new Coding({
        display: "Lindamood auditory conceptualization test",
        code: "273577001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273578006
     */
    LowensteinOccupationalTherapyCognitiveAssessment: new Coding({
        display: "Lowenstein occupational therapy cognitive assessment",
        code: "273578006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273580000
     */
    LondonHospitalPainChartAssessment: new Coding({
        display: "London hospital pain chart assessment",
        code: "273580000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273581001
     */
    LuriaNeuropsychologicalBattery: new Coding({
        display: "Luria neuropsychological battery",
        code: "273581001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273582008
     */
    MacAndrewScale: new Coding({
        display: "MacAndrew scale",
        code: "273582008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273583003
     */
    MacMillanReadingTest: new Coding({
        display: "MacMillan reading test",
        code: "273583003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273584009
     */
    MakeAPictureStoryTest: new Coding({
        display: "Make-a-picture story test",
        code: "273584009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273585005
     */
    MallampatiScale: new Coding({
        display: "Mallampati scale",
        code: "273585005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273586006
     */
    MasterQuestionnaire: new Coding({
        display: "Master questionnaire",
        code: "273586006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273587002
     */
    RevisedMasterQuestionnaire: new Coding({
        display: "Revised Master questionnaire",
        code: "273587002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273588007
     */
    MatsonAssessment: new Coding({
        display: "Matson assessment",
        code: "273588007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273589004
     */
    McConkeyScore: new Coding({
        display: "McConkey score",
        code: "273589004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273590008
     */
    McCormickMiniatureToyDiscriminationTest: new Coding({
        display: "McCormick miniature toy discrimination test",
        code: "273590008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273591007
     */
    McCormickMiniatureToyDiscriminationTestAutomated: new Coding({
        display: "McCormick miniature toy discrimination test - automated",
        code: "273591007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273592000
     */
    McCormickMiniatureToyDiscriminationTestManual: new Coding({
        display: "McCormick miniature toy discrimination test - manual",
        code: "273592000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273593005
     */
    McGillPainChartQuestionnaire: new Coding({
        display: "McGill pain chart questionnaire",
        code: "273593005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273594004
     */
    MHIQMcMasterHealthIndexQuestionnaire: new Coding({
        display: "MHIQ - McMaster health index questionnaire",
        code: "273594004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273595003
     */
    McTearsAssessmentOfConversation: new Coding({
        display: "McTears assessment of conversation",
        code: "273595003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273596002
     */
    MedicalOutcomesStudyShortFormGeneralHealthSurvey: new Coding({
        display: "Medical outcomes study short form general health survey",
        code: "273596002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273597006
     */
    MedicalOutcomesStudyShortFormGeneralHealthSurvey36: new Coding({
        display: "Medical outcomes study short form general health survey - 36",
        code: "273597006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273598001
     */
    MOSSF20MedicalOutcomesStudyShortFormGeneralHealthSurvey20: new Coding({
        display: "MOS SF - 20 - Medical outcomes study short form general health survey - 20",
        code: "273598001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273599009
     */
    MedicalResearchCouncilMotorPowerScale: new Coding({
        display: "Medical Research Council motor power scale",
        code: "273599009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273600007
     */
    MedicalResearchCouncilQuestionnaire: new Coding({
        display: "Medical Research Council questionnaire",
        code: "273600007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273601006
     */
    MentalStatusQuestionnaire: new Coding({
        display: "Mental status questionnaire",
        code: "273601006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273602004
     */
    MentalTestQuotient: new Coding({
        display: "Mental test quotient",
        code: "273602004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273603009
     */
    MentalTestScoreLongVersion: new Coding({
        display: "Mental test score - long version",
        code: "273603009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273604003
     */
    MerleDQuoteAubigneCharnleyHipScore: new Coding({
        display: "Merle d'Aubigne - Charnley hip score",
        code: "273604003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273608000
     */
    MichiganAlcoholismScreeningTest: new Coding({
        display: "Michigan alcoholism screening test",
        code: "273608000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273609008
     */
    BMASTBriefMichiganAlcoholismScreeningTest: new Coding({
        display: "BMAST - Brief Michigan alcoholism screening test",
        code: "273609008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273610003
     */
    ShortMichiganAlcoholismScreeningTest: new Coding({
        display: "Short Michigan alcoholism screening test",
        code: "273610003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273611004
     */
    MEAMSMiddlesexElderlyAssessmentOfMentalState: new Coding({
        display: "MEAMS - Middlesex elderly assessment of mental state",
        code: "273611004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273613001
     */
    MidlandsSpellingTest: new Coding({
        display: "Midlands spelling test",
        code: "273613001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273614007
     */
    MillHillVocabularyScale: new Coding({
        display: "Mill Hill vocabulary scale",
        code: "273614007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273615008
     */
    MillerAssessmentForPreschoolers: new Coding({
        display: "Miller assessment for preschoolers",
        code: "273615008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273616009
     */
    MilwaukeeEvaluationOfDailyLivingSkills: new Coding({
        display: "Milwaukee evaluation of daily living skills",
        code: "273616009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273617000
     */
    MiniMentalStateExamination: new Coding({
        display: "Mini-mental state examination",
        code: "273617000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273619002
     */
    ModifiedMiniMentalState3MSExamination: new Coding({
        display: "Modified mini-mental state 3MS examination",
        code: "273619002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273621007
     */
    MinnesotaTestForDifferentialDiagnosisOfAphasia: new Coding({
        display: "Minnesota test for differential diagnosis of aphasia",
        code: "273621007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273622000
     */
    ShortenedSchuellShortenedMinnesotaTestForDifferentialDiagnosisOfAphasia: new Coding({
        display: "Shortened Schuell - Shortened Minnesota test for differential diagnosis of aphasia",
        code: "273622000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273623005
     */
    ModifiedCardSortingTest: new Coding({
        display: "Modified card sorting test",
        code: "273623005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273624004
     */
    MISSModifiedInjurySeverityScale: new Coding({
        display: "MISS - Modified injury severity scale",
        code: "273624004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273625003
     */
    ModifiedWordLearningTest: new Coding({
        display: "Modified word learning test",
        code: "273625003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273626002
     */
    MontereyFluencyProgram: new Coding({
        display: "Monterey fluency program",
        code: "273626002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273627006
     */
    MoodAdjectiveChecklist: new Coding({
        display: "Mood adjective checklist",
        code: "273627006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273628001
     */
    MorganBarryAuditoryDiscriminationAndAttentionTest: new Coding({
        display: "Morgan-Barry auditory discrimination and attention test",
        code: "273628001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273629009
     */
    MorningsideRehabilitationStatusScale: new Coding({
        display: "Morningside rehabilitation status scale",
        code: "273629009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273630004
     */
    MortalityProbabilityModel: new Coding({
        display: "Mortality probability model",
        code: "273630004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273631000
     */
    MortalityPredictionModelII: new Coding({
        display: "Mortality prediction model II",
        code: "273631000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273632007
     */
    MFSMotivesForSmokingScale: new Coding({
        display: "MFS - Motives for smoking scale",
        code: "273632007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273633002
     */
    MotorAssessmentScale: new Coding({
        display: "Motor assessment scale",
        code: "273633002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273634008
     */
    MotricityIndex: new Coding({
        display: "Motricity index",
        code: "273634008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273635009
     */
    MountWilgaHighLevelLanguageScreeningAssessment: new Coding({
        display: "Mount Wilga high level language screening assessment",
        code: "273635009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273636005
     */
    MovementOfUpperLimbEvaluation: new Coding({
        display: "Movement of upper limb evaluation",
        code: "273636005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273637001
     */
    MultilevelInformalLanguageInventory: new Coding({
        display: "Multilevel informal language inventory",
        code: "273637001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273638006
     */
    MultilingualAphasiaExamination: new Coding({
        display: "Multilingual aphasia examination",
        code: "273638006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273639003
     */
    MunichAlcoholismTest: new Coding({
        display: "Munich alcoholism test",
        code: "273639003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273640001
     */
    NARTNationalAdultReadingTest: new Coding({
        display: "NART - National adult reading test",
        code: "273640001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273641002
     */
    NealeAnalysisOfReadingAbility: new Coding({
        display: "Neale analysis of reading ability",
        code: "273641002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273642009
     */
    NelsonScheduleOfGrowingSkills: new Coding({
        display: "Nelson schedule of growing skills",
        code: "273642009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273643004
     */
    NeurobehavioralCognitiveStatusExamination: new Coding({
        display: "Neurobehavioral cognitive status examination",
        code: "273643004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273644005
     */
    NeuropsychologicalBattery: new Coding({
        display: "Neuropsychological battery",
        code: "273644005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273645006
     */
    NewcastleArticulationTest: new Coding({
        display: "Newcastle articulation test",
        code: "273645006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273646007
     */
    NewcastleDyspraxiaAssessment: new Coding({
        display: "Newcastle dyspraxia assessment",
        code: "273646007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273647003
     */
    NewcastlePhonologyAssessment: new Coding({
        display: "Newcastle phonology assessment",
        code: "273647003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273648008
     */
    NineHolePegTest: new Coding({
        display: "Nine hole peg test",
        code: "273648008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273649000
     */
    NorrisFunctionalScale: new Coding({
        display: "Norris functional scale",
        code: "273649000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273650000
     */
    NorthwestSyntaxScreeningTest: new Coding({
        display: "Northwest syntax screening test",
        code: "273650000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273651001
     */
    NorthwickParkIndexOfIndependenceInActivitiesOfDailyLiving: new Coding({
        display: "Northwick Park index of independence in activities of daily living",
        code: "273651001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273652008
     */
    NHPNottinghamHealthProfile: new Coding({
        display: "NHP - Nottingham health profile",
        code: "273652008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273654009
     */
    NuffieldDyspraxiaAssessment: new Coding({
        display: "Nuffield dyspraxia assessment",
        code: "273654009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273656006
     */
    ObjectNamingTest: new Coding({
        display: "Object naming test",
        code: "273656006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273657002
     */
    OccasionsForSmokingScale: new Coding({
        display: "Occasions for smoking scale",
        code: "273657002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273658007
     */
    OccupationalCaseAnalysisInterviewAndRatingScale: new Coding({
        display: "Occupational case analysis interview and rating scale",
        code: "273658007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273659004
     */
    OccupationalPerformanceHistoryInterview: new Coding({
        display: "Occupational performance history interview",
        code: "273659004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273660009
     */
    OdstockHandAssessment: new Coding({
        display: "Odstock hand assessment",
        code: "273660009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273661008
     */
    OfficeOfPopulationCensusAndSurveysOPCSDisabilityScales: new Coding({
        display: "Office of Population Census and Surveys (OPCS) disability scales",
        code: "273661008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273662001
     */
    OfficeOfPopulationCensusAndSurveysOPCSBehaviorDisabilityScale: new Coding({
        display: "Office of Population Census and Surveys (OPCS) behavior disability scale",
        code: "273662001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273663006
     */
    OfficeOfPopulationCensusAndSurveysOPCSCommunicationDisabilityScale: new Coding({
        display: "Office of Population Census and Surveys (OPCS) communication disability scale",
        code: "273663006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273664000
     */
    OfficeOfPopulationCensusAndSurveysOPCSConsciousnessDisabilityScale: new Coding({
        display: "Office of Population Census and Surveys (OPCS) consciousness disability scale",
        code: "273664000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273665004
     */
    OfficeOfPopulationCensusAndSurveysOPCSContinenceDisabilityScale: new Coding({
        display: "Office of Population Census and Surveys (OPCS) continence disability scale",
        code: "273665004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273666003
     */
    OfficeOfPopulationCensusAndSurveysOPCSDexterityDisabilityScale: new Coding({
        display: "Office of Population Census and Surveys (OPCS) dexterity disability scale",
        code: "273666003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273667007
     */
    OfficeOfPopulationCensusAndSurveysOPCSDisfigurementDisabilityScale: new Coding({
        display: "Office of Population Census and Surveys (OPCS) disfigurement disability scale",
        code: "273667007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273668002
     */
    OfficeOfPopulationCensusAndSurveysOPCSEatingDrinkingAndDigestionDisabilityScale: new Coding({
        display: "Office of Population Census and Surveys (OPCS) eating, drinking and digestion disability scale",
        code: "273668002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273669005
     */
    OfficeOfPopulationCensusAndSurveysOPCSHearingDisabilityScale: new Coding({
        display: "Office of Population Census and Surveys (OPCS) hearing disability scale",
        code: "273669005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273670006
     */
    OfficeOfPopulationCensusAndSurveysOPCSIntellectualFunctioningDisabilityScale: new Coding({
        display: "Office of Population Census and Surveys (OPCS) intellectual functioning disability scale",
        code: "273670006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273671005
     */
    OfficeOfPopulationCensusAndSurveysOPCSLocomotionDisabilityScale: new Coding({
        display: "Office of Population Census and Surveys (OPCS) locomotion disability scale",
        code: "273671005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273672003
     */
    OfficeOfPopulationCensusAndSurveysOPCSPersonalCareDisabilityScale: new Coding({
        display: "Office of Population Census and Surveys (OPCS) personal care disability scale",
        code: "273672003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273673008
     */
    OfficeOfPopulationCensusAndSurveysOPCSReachingAndStretchingDisabilityScale: new Coding({
        display: "Office of Population Census and Surveys (OPCS) reaching and stretching disability scale",
        code: "273673008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273674002
     */
    OfficeOfPopulationCensusAndSurveysOPCSSeeingDisabilityScale: new Coding({
        display: "Office of Population Census and Surveys (OPCS) seeing disability scale",
        code: "273674002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273675001
     */
    OswestryDisabilityIndex: new Coding({
        display: "Oswestry disability index",
        code: "273675001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273676000
     */
    OswestryPainQuestionnaire: new Coding({
        display: "Oswestry pain questionnaire",
        code: "273676000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273677009
     */
    OxfordGradingScaleForMuscleStrength: new Coding({
        display: "Oxford grading scale for muscle strength",
        code: "273677009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273680005
     */
    PaduaInventory: new Coding({
        display: "Padua inventory",
        code: "273680005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273681009
     */
    PediatricClinicalTestOfSensoryIntegrationAndBalance: new Coding({
        display: "Pediatric clinical test of sensory integration and balance",
        code: "273681009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273682002
     */
    PediatricOralSkillsProfile: new Coding({
        display: "Pediatric oral skills profile",
        code: "273682002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273683007
     */
    PRISMPediatricRiskOfMortality: new Coding({
        display: "PRISM - Pediatric risk of mortality",
        code: "273683007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273684001
     */
    PediatricTraumaScore: new Coding({
        display: "Pediatric trauma score",
        code: "273684001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273685000
     */
    PainDiary: new Coding({
        display: "Pain diary",
        code: "273685000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273686004
     */
    PantomimeTest: new Coding({
        display: "Pantomime test",
        code: "273686004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273687008
     */
    PartnersInAugmentativeCommunicationTraining: new Coding({
        display: "Partners in augmentative communication training",
        code: "273687008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273688003
     */
    PatientActivityChecklist: new Coding({
        display: "Patient activity checklist",
        code: "273688003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273689006
     */
    PatientSatisfactionScore: new Coding({
        display: "Patient satisfaction score",
        code: "273689006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273690002
     */
    VAL16PFPersonalityFactorQuestionnaire: new Coding({
        display: "16PF - Personality factor questionnaire",
        code: "273690002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273691003
     */
    PhonologicalEvaluationAndTranscriptionOfAudioVisualLanguagePETALSpeechAssessmentProcedure: new Coding({
        display: "Phonological Evaluation and Transcription of Audio-Visual Language (PETAL) speech assessment procedure",
        code: "273691003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273692005
     */
    PeabodyPictureVocabularyTest: new Coding({
        display: "Peabody picture vocabulary test",
        code: "273692005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273693000
     */
    PSIPerceptionsOfStutteringInventory: new Coding({
        display: "PSI - Perceptions of stuttering inventory",
        code: "273693000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273694006
     */
    PerformanceTestOfActivitiesOfDailyLiving: new Coding({
        display: "Performance test of activities of daily living",
        code: "273694006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273695007
     */
    PersonalityAssessmentSchedule: new Coding({
        display: "Personality assessment schedule",
        code: "273695007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273696008
     */
    PhiladelphiaGeriatricCenterMoraleScale: new Coding({
        display: "Philadelphia geriatric center morale scale",
        code: "273696008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273697004
     */
    PhonologicalAssessmentOfChildSpeech: new Coding({
        display: "Phonological assessment of child speech",
        code: "273697004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273699001
     */
    PIPDevelopmentalCharts: new Coding({
        display: "PIP developmental charts",
        code: "273699001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273701001
     */
    PicturePointingTest: new Coding({
        display: "Picture pointing test",
        code: "273701001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273702008
     */
    PorchIndexOfCommunicativeAbility: new Coding({
        display: "Porch index of communicative ability",
        code: "273702008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273703003
     */
    PANSSPositiveAndNegativeSyndromeScale: new Coding({
        display: "PANSS - Positive and negative syndrome scale",
        code: "273703003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273704009
     */
    PragmaticsProfile: new Coding({
        display: "Pragmatics profile",
        code: "273704009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273705005
     */
    PragmaticsProfileOfEarlyCommunicationSkills: new Coding({
        display: "Pragmatics profile of early communication skills",
        code: "273705005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273706006
     */
    PreschoolBehaviorCheckList: new Coding({
        display: "Preschool behavior check list",
        code: "273706006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273707002
     */
    PreSchoolBoehm: new Coding({
        display: "Pre-school Boehm",
        code: "273707002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273709004
     */
    PreSpeechAssessmentScale: new Coding({
        display: "Pre-speech assessment scale",
        code: "273709004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273711008
     */
    PreschoolLanguageScale: new Coding({
        display: "Preschool language scale",
        code: "273711008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273712001
     */
    PreviousIntelligenceQuotientAssessmentByPronunciation: new Coding({
        display: "Previous intelligence quotient assessment by pronunciation",
        code: "273712001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273713006
     */
    ProbabilityOfDeathScore: new Coding({
        display: "Probability of death score",
        code: "273713006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273714000
     */
    ProblemOrientedMedicalRecord: new Coding({
        display: "Problem oriented medical record",
        code: "273714000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273715004
     */
    PRISMProfileInSemantics: new Coding({
        display: "PRISM - Profile in semantics",
        code: "273715004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273716003
     */
    ProfileOfCommunicativeAppropriateness: new Coding({
        display: "Profile of communicative appropriateness",
        code: "273716003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273717007
     */
    ProfileOfMoodStates: new Coding({
        display: "Profile of mood states",
        code: "273717007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273718002
     */
    PALPAPsycholinguisticAssessmentsOfLanguageProcessingInAphasia: new Coding({
        display: "PALPA - Psycholinguistic assessments of language processing in aphasia",
        code: "273718002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273719005
     */
    PsychologicalAdjustmentToIllnessScale: new Coding({
        display: "Psychological adjustment to illness scale",
        code: "273719005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273720004
     */
    PULSESProfile: new Coding({
        display: "PULSES profile",
        code: "273720004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273721000
     */
    PurduePegboardScale: new Coding({
        display: "Purdue pegboard scale",
        code: "273721000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273722007
     */
    PyramidsAndPalmTreesTest: new Coding({
        display: "Pyramids and palm trees test",
        code: "273722007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273723002
     */
    TetraplegiaIndexOfFunction: new Coding({
        display: "Tetraplegia index of function",
        code: "273723002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273724008
     */
    QALYsQualityAdjustedLifeYears: new Coding({
        display: "QALYs - Quality adjusted life years",
        code: "273724008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273725009
     */
    QualityOfLifeScale: new Coding({
        display: "Quality of life scale",
        code: "273725009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273726005
     */
    QualityOfWellbeingScale: new Coding({
        display: "Quality of wellbeing scale",
        code: "273726005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273727001
     */
    RanchoScaleLevelsOfCognitiveFunctioning: new Coding({
        display: "Rancho scale - levels of cognitive functioning",
        code: "273727001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273728006
     */
    RandFunctionalLimitationsBattery: new Coding({
        display: "Rand functional limitations battery",
        code: "273728006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273729003
     */
    RankinScale: new Coding({
        display: "Rankin scale",
        code: "273729003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273730008
     */
    RappaportDisabilityRatingScale: new Coding({
        display: "Rappaport disability rating scale",
        code: "273730008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273731007
     */
    RatingCommunicativeBehaviorInHeadInjuredAdults: new Coding({
        display: "Rating communicative behavior in head injured adults",
        code: "273731007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273732000
     */
    RavensColoredProgressiveMatrices: new Coding({
        display: "Ravens colored progressive matrices",
        code: "273732000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273733005
     */
    RavensStandardProgressiveMatrices: new Coding({
        display: "Ravens standard progressive matrices",
        code: "273733005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273735003
     */
    ReadWordDiscriminationTest: new Coding({
        display: "Read word discrimination test",
        code: "273735003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273736002
     */
    ReadingComprehensionBatteryForAphasia: new Coding({
        display: "Reading comprehension battery for aphasia",
        code: "273736002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273737006
     */
    RFESReasonsForEatingScale: new Coding({
        display: "RFES - Reasons for eating scale",
        code: "273737006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273738001
     */
    ReasonsForSmokingScale: new Coding({
        display: "Reasons for smoking scale",
        code: "273738001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273739009
     */
    BzochAndLeagueTest: new Coding({
        display: "Bzoch and League test",
        code: "273739009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273740006
     */
    RMTRecognitionMemoryTest: new Coding({
        display: "RMT - Recognition memory test",
        code: "273740006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273741005
     */
    RelativesQuoteStressScale: new Coding({
        display: "Relatives' stress scale",
        code: "273741005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273742003
     */
    RIRenalIndex: new Coding({
        display: "RI - Renal index",
        code: "273742003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273743008
     */
    RAPTRenfrewActionPictureTest: new Coding({
        display: "RAPT - Renfrew action picture test",
        code: "273743008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273744002
     */
    RenfrewArticulationTest: new Coding({
        display: "Renfrew articulation test",
        code: "273744002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273745001
     */
    RenfrewWordfinding: new Coding({
        display: "Renfrew wordfinding",
        code: "273745001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273746000
     */
    RepertoryGrid: new Coding({
        display: "Repertory grid",
        code: "273746000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273747009
     */
    ReportersTests: new Coding({
        display: "Reporters tests",
        code: "273747009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273748004
     */
    ResistanceToChangeGrid: new Coding({
        display: "Resistance to change grid",
        code: "273748004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273749007
     */
    RespiratoryIndex: new Coding({
        display: "Respiratory index",
        code: "273749007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273750007
     */
    RestrainedEatingInventory: new Coding({
        display: "Restrained eating inventory",
        code: "273750007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273751006
     */
    RevisedIowaScaleForRatingSeverity: new Coding({
        display: "Revised Iowa scale for rating severity",
        code: "273751006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273752004
     */
    ReynellDevelopmentalLanguageScales: new Coding({
        display: "Reynell developmental language scales",
        code: "273752004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273753009
     */
    ReynellReceptiveLanguageAssessment: new Coding({
        display: "Reynell receptive language assessment",
        code: "273753009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273754003
     */
    ReynellExpressiveLanguageAssessment: new Coding({
        display: "Reynell expressive language assessment",
        code: "273754003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273756001
     */
    ReynellZinkinLanguageScaleForTheVisuallyImpaired: new Coding({
        display: "Reynell Zinkin language scale for the visually impaired",
        code: "273756001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273757005
     */
    RightHemisphereBattery: new Coding({
        display: "Right hemisphere battery",
        code: "273757005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273758000
     */
    RitchieArticularIndex: new Coding({
        display: "Ritchie articular index",
        code: "273758000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273759008
     */
    RivermeadActivitiesOfDailyLivingIndex: new Coding({
        display: "Rivermead activities of daily living index",
        code: "273759008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273761004
     */
    RBMTRivermeadBehavioralMemoryTest: new Coding({
        display: "RBMT - Rivermead behavioral memory test",
        code: "273761004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273762006
     */
    RMARivermeadMotorAssessment: new Coding({
        display: "RMA - Rivermead motor assessment",
        code: "273762006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273763001
     */
    RivermeadPerceptualAssessmentBattery: new Coding({
        display: "Rivermead perceptual assessment battery",
        code: "273763001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273764007
     */
    RobertsonDysarthriaAssessment: new Coding({
        display: "Robertson dysarthria assessment",
        code: "273764007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273765008
     */
    RobertsonDysarthriaProfile: new Coding({
        display: "Robertson dysarthria profile",
        code: "273765008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273766009
     */
    RoehamptonActivitiesOfDailyLivingForAmputees: new Coding({
        display: "Roehampton activities of daily living for amputees",
        code: "273766009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273767000
     */
    RoseSummersPragmaticProfile: new Coding({
        display: "Rose Summers pragmatic profile",
        code: "273767000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273768005
     */
    RossInformationProcessingAssessment: new Coding({
        display: "Ross information processing assessment",
        code: "273768005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273769002
     */
    RosserClassificationOfIllnessStates: new Coding({
        display: "Rosser classification of illness states",
        code: "273769002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273770001
     */
    RothAndSpekmanListOfCommunicativeIntentions: new Coding({
        display: "Roth and Spekman list of communicative intentions",
        code: "273770001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273771002
     */
    RotterdamSymptomCheckList: new Coding({
        display: "Rotterdam symptom check list",
        code: "273771002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273772009
     */
    RoutineTaskInventory: new Coding({
        display: "Routine task inventory",
        code: "273772009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273774005
     */
    RutterBehaviorQuestionnaire: new Coding({
        display: "Rutter behavior questionnaire",
        code: "273774005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273775006
     */
    RutterAScale: new Coding({
        display: "Rutter A scale",
        code: "273775006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273776007
     */
    RutterBScale: new Coding({
        display: "Rutter B scale",
        code: "273776007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273777003
     */
    RutterB2Scale: new Coding({
        display: "Rutter B2 scale",
        code: "273777003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273778008
     */
    SScaleAndrewsAndCutler: new Coding({
        display: "S scale Andrews and Cutler",
        code: "273778008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273779000
     */
    SalfordReadingTest: new Coding({
        display: "Salford reading test",
        code: "273779000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273780002
     */
    SamaritanOrientationTest: new Coding({
        display: "Samaritan orientation test",
        code: "273780002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273781003
     */
    SandwellBilingualComprehensionTest: new Coding({
        display: "Sandwell bilingual comprehension test",
        code: "273781003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273782005
     */
    SantaClaraValleyMedicalCenterFunctionalAssessmentMeasure: new Coding({
        display: "Santa Clara valley medical center functional assessment measure",
        code: "273782005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273783000
     */
    SavaryMillerScale: new Coding({
        display: "Savary Miller scale",
        code: "273783000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273784006
     */
    ScaleOfEarlyCommunicationSkillsForHearingImpairedChildren: new Coding({
        display: "Scale of early communication skills for hearing impaired children",
        code: "273784006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273785007
     */
    SchwachmannScore: new Coding({
        display: "Schwachmann score",
        code: "273785007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273786008
     */
    SchedulesForClinicalAssessmentInNeuropsychiatry: new Coding({
        display: "Schedules for clinical assessment in neuropsychiatry",
        code: "273786008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273787004
     */
    SchnijdersOomanTestForDeafChildren: new Coding({
        display: "Schnijders Ooman test for deaf children",
        code: "273787004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273788009
     */
    SchofieldEquation: new Coding({
        display: "Schofield equation",
        code: "273788009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273789001
     */
    SchonellGradedWordReadingTest: new Coding({
        display: "Schonell graded word reading test",
        code: "273789001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273790005
     */
    SchonellGradedWordSpellingTest: new Coding({
        display: "Schonell graded word spelling test",
        code: "273790005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273791009
     */
    ScissorSkillsChecklist: new Coding({
        display: "Scissor skills checklist",
        code: "273791009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273792002
     */
    ScreeningForDevelopmentalApraxiaOfSpeech: new Coding({
        display: "Screening for developmental apraxia of speech",
        code: "273792002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273793007
     */
    ScreeningTestForAuditoryProcessingDisorders: new Coding({
        display: "Screening test for auditory processing disorders",
        code: "273793007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273795000
     */
    SIPT: new Coding({
        display: "SIPT",
        code: "273795000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273797008
     */
    SCTSentenceComprehensionTest: new Coding({
        display: "SCT - Sentence comprehension test",
        code: "273797008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273798003
     */
    SerialSevensTest: new Coding({
        display: "Serial sevens test",
        code: "273798003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273799006
     */
    SeverityOfAlcoholDependenceQuestionnaire: new Coding({
        display: "Severity of alcohol dependence questionnaire",
        code: "273799006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273800005
     */
    SODQSeverityOfOpiateDependenceQuestionnaire: new Coding({
        display: "SODQ - Severity of opiate dependence questionnaire",
        code: "273800005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273801009
     */
    ShaperIndex: new Coding({
        display: "Shaper index",
        code: "273801009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273802002
     */
    ShortAlcoholDependenceData: new Coding({
        display: "Short alcohol dependence data",
        code: "273802002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273803007
     */
    ShortOrientationMemoryConcentrationTest: new Coding({
        display: "Short orientation - memory - concentration test",
        code: "273803007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273804001
     */
    ShortOrientationMemoryConcentrationTestAlternativeVersion: new Coding({
        display: "Short orientation-memory-concentration test - alternative version",
        code: "273804001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273805000
     */
    ShortTermMemoryTest: new Coding({
        display: "Short-term memory test",
        code: "273805000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273806004
     */
    ShulmanTestOfPragmaticSkills: new Coding({
        display: "Shulman test of pragmatic skills",
        code: "273806004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273807008
     */
    SicknessImpactProfile: new Coding({
        display: "Sickness impact profile",
        code: "273807008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273809006
     */
    SilversCerebralFunctionTest: new Coding({
        display: "Silvers cerebral function test",
        code: "273809006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273811002
     */
    SimplifiedAcutePhysiologyScore: new Coding({
        display: "Simplified acute physiology score",
        code: "273811002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273812009
     */
    SimplifiedAcutePhysiologyScaleII: new Coding({
        display: "Simplified acute physiology scale II",
        code: "273812009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273813004
     */
    SCQSituationalConfidenceQuestionnaire: new Coding({
        display: "SCQ - Situational confidence questionnaire",
        code: "273813004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273814005
     */
    SituationsForEatingScale: new Coding({
        display: "Situations for eating scale",
        code: "273814005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273815006
     */
    SmithCognitiveQuestionnaire: new Coding({
        display: "Smith cognitive questionnaire",
        code: "273815006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273816007
     */
    SocialAdjustmentScale: new Coding({
        display: "Social adjustment scale",
        code: "273816007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273817003
     */
    SASIISocialAdjustmentScaleII: new Coding({
        display: "SAS II - Social adjustment scale II",
        code: "273817003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273818008
     */
    SocialAdjustmentScaleSelfReport: new Coding({
        display: "Social adjustment scale self - report",
        code: "273818008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273819000
     */
    SocialBehaviorAssessmentScale: new Coding({
        display: "Social behavior assessment scale",
        code: "273819000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273820006
     */
    SocialSupportQuestionnaire: new Coding({
        display: "Social support questionnaire",
        code: "273820006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273821005
     */
    SocialUseOfLanguageProgram: new Coding({
        display: "Social use of language program",
        code: "273821005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273822003
     */
    STAPSouthTynesideAssessmentOfPhonology: new Coding({
        display: "STAP - South Tyneside assessment of phonology",
        code: "273822003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273823008
     */
    SouthTynesideAssessmentOfSyntacticStructures: new Coding({
        display: "South Tyneside assessment of syntactic structures",
        code: "273823008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273824002
     */
    FGPSouthernCaliforniaFigureGroundVisualPerceptionTest: new Coding({
        display: "FGP - Southern California figure ground visual perception test",
        code: "273824002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273825001
     */
    SouthernCaliforniaPostrotaryNystagmusTest: new Coding({
        display: "Southern California postrotary nystagmus test",
        code: "273825001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273826000
     */
    SouthernCaliforniaSensoryIntegrationTest: new Coding({
        display: "Southern California sensory integration test",
        code: "273826000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273827009
     */
    SpareTimeActivitiesQuestionnaire: new Coding({
        display: "Spare time activities questionnaire",
        code: "273827009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273828004
     */
    SpecialHospitalsAssessmentOfPersonality: new Coding({
        display: "Special hospitals assessment of personality",
        code: "273828004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273829007
     */
    SpeechIntelligibilityAssessmentProcedure: new Coding({
        display: "Speech intelligibility assessment procedure",
        code: "273829007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273830002
     */
    SpielbergerStateTraitAnxietyInventory: new Coding({
        display: "Spielberger state-trait anxiety inventory",
        code: "273830002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273831003
     */
    QualityOfLifeIndex: new Coding({
        display: "Quality of life index",
        code: "273831003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273833000
     */
    StGeorgeHospitalRespiratoryQuestionnaire: new Coding({
        display: "St George hospital respiratory questionnaire",
        code: "273833000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273834006
     */
    StThomasDisabilityQuestionnaire: new Coding({
        display: "St Thomas disability questionnaire",
        code: "273834006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273835007
     */
    SAPStandardizedAssessmentOfPersonality: new Coding({
        display: "SAP - Standardized assessment of personality",
        code: "273835007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273836008
     */
    TermanMerrillScale: new Coding({
        display: "Terman Merrill scale",
        code: "273836008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273837004
     */
    SteinbrockerFunctionalClassification: new Coding({
        display: "Steinbrocker functional classification",
        code: "273837004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273838009
     */
    StimulusResponseInventory: new Coding({
        display: "Stimulus response inventory",
        code: "273838009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273839001
     */
    StockerProbeTechniqueForDiagnosisAndTreatmentOfStutteringInYoungChildren: new Coding({
        display: "Stocker probe technique for diagnosis and treatment of stuttering in young children",
        code: "273839001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273840004
     */
    StocktonGeriatricRatingScale: new Coding({
        display: "Stockton geriatric rating scale",
        code: "273840004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273841000
     */
    StoryCompletionTest: new Coding({
        display: "Story completion test",
        code: "273841000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273842007
     */
    StructuredObservationTestOfFunction: new Coding({
        display: "Structured observation test of function",
        code: "273842007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273843002
     */
    StructuredClinicalInterviewForDiagnosticAndStatisticalManualOfMentalDisordersThirdEditionRevised: new Coding({
        display: "Structured clinical interview for Diagnostic and Statistical Manual of Mental Disorders-Third Edition Revised",
        code: "273843002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273844008
     */
    StructuredInterviewForDiagnosticAndStatisticalManualOfMentalDisordersThirdEditionPersonalityDisorders: new Coding({
        display: "Structured interview for Diagnostic and Statistical Manual of Mental Disorders, Third Edition, personality disorders",
        code: "273844008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273845009
     */
    StutteringInterventionProgram: new Coding({
        display: "Stuttering intervention program",
        code: "273845009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273846005
     */
    StutteringPredictionInstrument: new Coding({
        display: "Stuttering prediction instrument",
        code: "273846005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273847001
     */
    StutteringSeverityInstrument: new Coding({
        display: "Stuttering severity instrument",
        code: "273847001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273848006
     */
    StycarHearingTest: new Coding({
        display: "Stycar hearing test",
        code: "273848006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273849003
     */
    SubjectiveGlobalAssessment: new Coding({
        display: "Subjective global assessment",
        code: "273849003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273850003
     */
    SubstanceUseDisorderDiagnosticSchedule: new Coding({
        display: "Substance use disorder diagnostic schedule",
        code: "273850003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273851004
     */
    SueSpenceAssessment: new Coding({
        display: "Sue Spence assessment",
        code: "273851004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273852006
     */
    SuicideRiskScale: new Coding({
        display: "Suicide risk scale",
        code: "273852006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273853001
     */
    SunnybrookCordInjuryScale: new Coding({
        display: "Sunnybrook cord injury scale",
        code: "273853001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273854007
     */
    SupplementaryLanguageTest: new Coding({
        display: "Supplementary language test",
        code: "273854007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273856009
     */
    SwollenJointCount: new Coding({
        display: "Swollen joint count",
        code: "273856009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273857000
     */
    SymbolDigitModalitiesTest: new Coding({
        display: "Symbol digit modalities test",
        code: "273857000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273858005
     */
    SymbolicPlayTest: new Coding({
        display: "Symbolic play test",
        code: "273858005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273859002
     */
    SymptomChecklist: new Coding({
        display: "Symptom checklist",
        code: "273859002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273860007
     */
    SLTSynonymLearningTest: new Coding({
        display: "SLT - Synonym learning test",
        code: "273860007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273861006
     */
    SystematicFluencyTrainingForYoungChildren: new Coding({
        display: "Systematic fluency training for young children",
        code: "273861006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273862004
     */
    SystemicLupusActivityMeasure: new Coding({
        display: "Systemic lupus activity measure",
        code: "273862004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273863009
     */
    SLEDAISystemicLupusErythematosusDiseaseActivityIndex: new Coding({
        display: "SLEDAI - Systemic lupus erythematosus disease activity index",
        code: "273863009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273864003
     */
    TambTest: new Coding({
        display: "Tamb test",
        code: "273864003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273865002
     */
    TenderJointCount: new Coding({
        display: "Tender joint count",
        code: "273865002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273867005
     */
    TestForAuditoryPerceptionOfSpeech: new Coding({
        display: "Test for auditory perception of speech",
        code: "273867005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273868000
     */
    TACLTestOfAuditoryComprehensionOfLanguage: new Coding({
        display: "TACL - Test of auditory comprehension of language",
        code: "273868000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273869008
     */
    TestOfAuditoryDiscrimination: new Coding({
        display: "Test of auditory discrimination",
        code: "273869008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273870009
     */
    TestOfLanguageCompetence: new Coding({
        display: "Test of language competence",
        code: "273870009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273871008
     */
    TestOfLanguageDevelopment2: new Coding({
        display: "Test of language development 2",
        code: "273871008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273872001
     */
    TestOfMotorImpairmentStottMoyesHenderson: new Coding({
        display: "Test of motor impairment - Stott-Moyes-Henderson",
        code: "273872001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273873006
     */
    TestOfPragmaticSkills: new Coding({
        display: "Test of pragmatic skills",
        code: "273873006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273874000
     */
    TestOfReceptionOfGrammar: new Coding({
        display: "Test of reception of grammar",
        code: "273874000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273875004
     */
    TSATestOfSyntacticAbilities: new Coding({
        display: "TSA - Test of syntactic abilities",
        code: "273875004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273876003
     */
    TestOfWordFindingInDiscourse: new Coding({
        display: "Test of word finding in discourse",
        code: "273876003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273877007
     */
    TestOfWordKnowledge: new Coding({
        display: "Test of word knowledge",
        code: "273877007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273878002
     */
    TherapeuticInterventionScoringSystem: new Coding({
        display: "Therapeutic intervention scoring system",
        code: "273878002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273879005
     */
    TLFBTimeLineFollowBack: new Coding({
        display: "TLFB - Time line follow back",
        code: "273879005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273880008
     */
    TimeTradeOffAnalysis: new Coding({
        display: "Time trade off analysis",
        code: "273880008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273881007
     */
    TokenTest: new Coding({
        display: "Token test",
        code: "273881007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273882000
     */
    TrailMakingTest: new Coding({
        display: "Trail making test",
        code: "273882000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273883005
     */
    TraumaIndex: new Coding({
        display: "Trauma index",
        code: "273883005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273884004
     */
    TraumaScore: new Coding({
        display: "Trauma score",
        code: "273884004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273885003
     */
    RTSRevisedTraumaScore: new Coding({
        display: "RTS - Revised trauma score",
        code: "273885003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273886002
     */
    TraumaAndInjurySeverityScore: new Coding({
        display: "Trauma and injury severity score",
        code: "273886002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273887006
     */
    TriageIndex: new Coding({
        display: "Triage index",
        code: "273887006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273888001
     */
    ValentineAuditoryMemoryTest: new Coding({
        display: "Valentine auditory memory test",
        code: "273888001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273889009
     */
    Valpar17PreVocationalReadinessBattery: new Coding({
        display: "Valpar 17 pre-vocational readiness battery",
        code: "273889009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273891001
     */
    VernonClozeProcedureReadingTest: new Coding({
        display: "Vernon Cloze procedure reading test",
        code: "273891001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273892008
     */
    VernonGradedWordReadingTest: new Coding({
        display: "Vernon graded word reading test",
        code: "273892008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273893003
     */
    VinelandMaturityScalesAdaptedForTheBlind: new Coding({
        display: "Vineland maturity scales adapted for the blind",
        code: "273893003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273894009
     */
    VinelandSocialMaturityScale: new Coding({
        display: "Vineland social maturity scale",
        code: "273894009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273895005
     */
    VinelandSubquotientGeneralSelfHelp: new Coding({
        display: "Vineland subquotient - general self-help",
        code: "273895005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273896006
     */
    VinelandSubquotientCommunication: new Coding({
        display: "Vineland subquotient - communication",
        code: "273896006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273897002
     */
    VinelandSubquotientLocomotion: new Coding({
        display: "Vineland subquotient - locomotion",
        code: "273897002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273898007
     */
    VinelandSubquotientOccupation: new Coding({
        display: "Vineland subquotient - occupation",
        code: "273898007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273899004
     */
    VinelandSubquotientSelfHelpInEating: new Coding({
        display: "Vineland subquotient - self-help in eating",
        code: "273899004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273900009
     */
    VinelandSubquotientSocialization: new Coding({
        display: "Vineland subquotient - socialization",
        code: "273900009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273901008
     */
    VinelandBehavioralAssessment: new Coding({
        display: "Vineland behavioral assessment",
        code: "273901008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273902001
     */
    VisickSymptomGrade: new Coding({
        display: "Visick symptom grade",
        code: "273902001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273903006
     */
    VASVisualAnalogScale: new Coding({
        display: "VAS - Visual analog scale",
        code: "273903006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273904000
     */
    VisualAnalogPainScale: new Coding({
        display: "Visual analog pain scale",
        code: "273904000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273905004
     */
    VisualAndPerceptualAssessmentProgram: new Coding({
        display: "Visual and perceptual assessment program",
        code: "273905004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273906003
     */
    VisualObjectAndSpatialPerceptionTest: new Coding({
        display: "Visual object and spatial perception test",
        code: "273906003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273908002
     */
    VoiceAssessmentSheetMartin: new Coding({
        display: "Voice assessment sheet - Martin",
        code: "273908002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273909005
     */
    VoiceEvaluationForm: new Coding({
        display: "Voice evaluation form",
        code: "273909005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273910000
     */
    VoiceSkillsAssessment: new Coding({
        display: "Voice skills assessment",
        code: "273910000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273912008
     */
    WaddellDisabilityIndex: new Coding({
        display: "Waddell disability index",
        code: "273912008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273913003
     */
    WakefieldSelfAssessmentDepressionInventory: new Coding({
        display: "Wakefield self-assessment depression inventory",
        code: "273913003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273914009
     */
    WardBehaviorRatingScale: new Coding({
        display: "Ward behavior rating scale",
        code: "273914009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273915005
     */
    WarnerDysphagiaAssessment: new Coding({
        display: "Warner dysphagia assessment",
        code: "273915005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273916006
     */
    WechslerAdultIntelligenceScale: new Coding({
        display: "Wechsler adult intelligence scale",
        code: "273916006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273917002
     */
    WechslerAdultIntelligenceTestRevised: new Coding({
        display: "Wechsler adult intelligence test - revised",
        code: "273917002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273918007
     */
    WechslerIntelligenceScaleForChildren: new Coding({
        display: "Wechsler intelligence scale for children",
        code: "273918007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273919004
     */
    WechslerIntelligenceNonVerbalPerformanceAssessment: new Coding({
        display: "Wechsler intelligence non-verbal performance assessment",
        code: "273919004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273920005
     */
    WechslerIntelligenceVerbalAssessment: new Coding({
        display: "Wechsler intelligence verbal assessment",
        code: "273920005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273921009
     */
    LogicalMemoryParagraphRecall: new Coding({
        display: "Logical memory paragraph recall",
        code: "273921009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273922002
     */
    WechslerPreSchoolAndPrimaryScaleOfIntelligence: new Coding({
        display: "Wechsler pre-school and primary scale of intelligence",
        code: "273922002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273923007
     */
    WeiglGoldsteinScheererColorFormSortingTest: new Coding({
        display: "Weigl - Goldstein - Scheerer color form sorting test",
        code: "273923007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273924001
     */
    WepmanAuditorySequentialMemoryTest: new Coding({
        display: "Wepman Auditory Sequential Memory Test",
        code: "273924001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273925000
     */
    WepmanAuditoryDiscriminationTest: new Coding({
        display: "Wepman Auditory Discrimination Test",
        code: "273925000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273926004
     */
    WessexRevisedPortageLanguageChecklist: new Coding({
        display: "Wessex revised portage language checklist",
        code: "273926004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273927008
     */
    WesternAphasiaBattery: new Coding({
        display: "Western aphasia battery",
        code: "273927008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273928003
     */
    WPTASWestmeadPostTraumaticAmnesiaScale: new Coding({
        display: "WPTAS - Westmead Post-Traumatic Amnesia Scale",
        code: "273928003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273929006
     */
    WorldHealthOrganizationWHODepressionScale: new Coding({
        display: "World Health Organization (WHO) depression scale",
        code: "273929006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273930001
     */
    WorldHealthOrganizationWHOHandicapScale: new Coding({
        display: "World Health Organization (WHO) handicap scale",
        code: "273930001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273931002
     */
    WorldHealthOrganizationWHOClassificationOfImpairmentsDisabilitiesAndHandicapScale: new Coding({
        display: "World Health Organization (WHO) classification of impairments, disabilities and handicap scale",
        code: "273931002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273932009
     */
    WorldHealthOrganizationWHOEconomicSelfSufficiencyHandicapScale: new Coding({
        display: "World Health Organization (WHO) economic self-sufficiency handicap scale",
        code: "273932009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273933004
     */
    WorldHealthOrganizationWHOMobilityHandicapScale: new Coding({
        display: "World Health Organization (WHO) mobility handicap scale",
        code: "273933004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273934005
     */
    WorldHealthOrganizationWHOOccupationHandicapScale: new Coding({
        display: "World Health Organization (WHO) occupation handicap scale",
        code: "273934005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273935006
     */
    WorldHealthOrganizationWHOOrientationHandicapScale: new Coding({
        display: "World Health Organization (WHO) orientation handicap scale",
        code: "273935006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273936007
     */
    WorldHealthOrganizationWHOPhysicalIndependenceHandicapScale: new Coding({
        display: "World Health Organization (WHO) physical independence handicap scale",
        code: "273936007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273937003
     */
    WorldHealthOrganizationWHOSocialIntegrationHandicapScale: new Coding({
        display: "World Health Organization (WHO) social integration handicap scale",
        code: "273937003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273938008
     */
    WinslowFeedingChecklist: new Coding({
        display: "Winslow feeding checklist",
        code: "273938008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273939000
     */
    WisconsinCardSortingTest: new Coding({
        display: "Wisconsin card sorting test",
        code: "273939000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273940003
     */
    SDSZungSelfRatingDepressionScale: new Coding({
        display: "SDS - Zung self-rating depression scale",
        code: "273940003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273941004
     */
    ZungAnxietyStatusInventory: new Coding({
        display: "Zung anxiety status inventory",
        code: "273941004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 273942006
     */
    ZungSelfRatingAnxietyScale: new Coding({
        display: "Zung self-rating anxiety scale",
        code: "273942006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 277318003
     */
    M: new Coding({
        display: "(m)",
        code: "277318003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 277457005
     */
    HistologicalGradingSystems: new Coding({
        display: "Histological grading systems",
        code: "277457005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 277459008
     */
    DaumasDuportGradingSystem: new Coding({
        display: "Daumas-Duport grading system",
        code: "277459008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 277460003
     */
    WorldHealthOrganizationWHOCentralNervousSystemCNSTumorGradingSystem: new Coding({
        display: "World Health Organization (WHO) central nervous system (CNS) tumor grading system",
        code: "277460003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 277645005
     */
    AdditionalTNMDescriptors: new Coding({
        display: "Additional TNM descriptors",
        code: "277645005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 277646006
     */
    AAtAutopsy: new Coding({
        display: "a - At autopsy",
        code: "277646006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 277647002
     */
    RTumorRecurrence: new Coding({
        display: "r - Tumor recurrence",
        code: "277647002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 277649004
     */
    YDuringTherapyFollowingTreatment: new Coding({
        display: "y - During therapy/following treatment",
        code: "277649004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 277650004
     */
    MMultipleTumors: new Coding({
        display: "m - Multiple tumors",
        code: "277650004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 277652007
     */
    FFamilyHistory: new Coding({
        display: "f - Family history",
        code: "277652007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 277676004
     */
    DRetinalInvolvement: new Coding({
        display: "d - Retinal involvement",
        code: "277676004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 278241006
     */
    NodeStageG1InRetinoblastoma: new Coding({
        display: "Node stage G1 in retinoblastoma",
        code: "278241006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 278242004
     */
    NodeStageG2InRetinoblastoma: new Coding({
        display: "Node stage G2 in retinoblastoma",
        code: "278242004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 278247005
     */
    LungStageL1: new Coding({
        display: "Lung stage L1",
        code: "278247005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 278699003
     */
    ParsonnetScore: new Coding({
        display: "Parsonnet score",
        code: "278699003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 278896008
     */
    ShortFormMcGillPainQuestionnaire: new Coding({
        display: "Short form McGill pain questionnaire",
        code: "278896008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 278897004
     */
    WaterlowPressureSoreRiskScore: new Coding({
        display: "Waterlow pressure sore risk score",
        code: "278897004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 278898009
     */
    NortonScore: new Coding({
        display: "Norton score",
        code: "278898009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 279101002
     */
    VerbalRatingScale: new Coding({
        display: "Verbal rating scale",
        code: "279101002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 281113000
     */
    HealthOfTheNationOutcomeScaleSummatedGenericVersion: new Coding({
        display: "Health of the Nation Outcome Scale - summated (generic version)",
        code: "281113000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 281114006
     */
    HealthOfTheNationOutcomeScaleSubscaleGenericVersion: new Coding({
        display: "Health of the Nation Outcome Scale subscale (generic version)",
        code: "281114006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 281115007
     */
    HealthOfTheNationOutcomeScaleItem1AggressiveDisruptiveBehavior: new Coding({
        display: "Health of the Nation Outcome Scale item 1 - aggressive/disruptive behavior",
        code: "281115007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 281116008
     */
    HealthOfTheNationOutcomeScaleItem2NonAccidentalSelfInjury: new Coding({
        display: "Health of the Nation Outcome Scale item 2 - non-accidental self injury",
        code: "281116008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 281117004
     */
    HoNOSItem3AlcoholDrugProblem: new Coding({
        display: "HoNOS item 3 - alcohol/drug problem",
        code: "281117004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 281118009
     */
    HealthOfTheNationOutcomeScaleItem4CognitiveProblems: new Coding({
        display: "Health of the Nation Outcome Scale item 4 - cognitive problems",
        code: "281118009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 281119001
     */
    HoNOSItem5: new Coding({
        display: "HoNOS item 5",
        code: "281119001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 281120007
     */
    HealthOfTheNationOutcomeScaleItem6HallucinationsDelusions: new Coding({
        display: "Health of the Nation Outcome Scale item 6 - hallucinations/delusions",
        code: "281120007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 281121006
     */
    HoNOSItem7: new Coding({
        display: "HoNOS item 7",
        code: "281121006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 281122004
     */
    HealthOfTheNationOutcomeScaleItem8OtherMentalBehavioralProblems: new Coding({
        display: "Health of the Nation Outcome Scale item 8 - other mental/behavioral problems",
        code: "281122004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 281123009
     */
    HoNOSItem9: new Coding({
        display: "HoNOS item 9",
        code: "281123009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 281124003
     */
    HoNOSItem10: new Coding({
        display: "HoNOS item 10",
        code: "281124003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 281125002
     */
    HealthOfTheNationOutcomeScaleItem11LivingConditions: new Coding({
        display: "Health of the Nation Outcome scale item 11 - living conditions",
        code: "281125002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 281126001
     */
    HoNOSItem12: new Coding({
        display: "HoNOS item 12",
        code: "281126001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 281400004
     */
    RamsaySedationScale: new Coding({
        display: "Ramsay sedation scale",
        code: "281400004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 281692008
     */
    GriffithsMentalDevelopmentalScale: new Coding({
        display: "Griffiths mental developmental scale",
        code: "281692008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 281693003
     */
    GessellDevelopmentalScale: new Coding({
        display: "Gessell developmental scale",
        code: "281693003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 281844006
     */
    HealthOfTheNationOutcomeSubscaleA: new Coding({
        display: "Health of the Nation Outcome subscale A",
        code: "281844006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 281845007
     */
    HoNOSSubscaleB: new Coding({
        display: "HoNOS subscale B",
        code: "281845007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 281846008
     */
    HealthOfTheNationOutcomeSubscaleC: new Coding({
        display: "Health of the Nation Outcome subscale C",
        code: "281846008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 281848009
     */
    HoNOSSubscaleD: new Coding({
        display: "HoNOS subscale D",
        code: "281848009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 281849001
     */
    HealthOfTheNationOutcomeScaleItemGenericVersion: new Coding({
        display: "Health of the Nation Outcome Scale item (generic version)",
        code: "281849001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 282402005
     */
    VHepaticVeinMarker: new Coding({
        display: "V - Hepatic vein marker",
        code: "282402005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 282403000
     */
    PPortalVeinMarker: new Coding({
        display: "P - Portal vein marker",
        code: "282403000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 282404006
     */
    EExtrahepaticMarker: new Coding({
        display: "E - Extrahepatic marker",
        code: "282404006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 282405007
     */
    MMetastaticMarker: new Coding({
        display: "M - Metastatic marker",
        code: "282405007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 282436004
     */
    EExtralymphaticOrganInvolvementMarker: new Coding({
        display: "E - Extralymphatic organ involvement marker",
        code: "282436004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 282437008
     */
    SSplenicInvolvementMarker: new Coding({
        display: "S - Splenic involvement marker",
        code: "282437008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 282466006
     */
    SuicideIntentScoreScale: new Coding({
        display: "Suicide intent score scale",
        code: "282466006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 282467002
     */
    SuicideIntentScoreScaleSummated: new Coding({
        display: "Suicide intent score scale - summated",
        code: "282467002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 282468007
     */
    SuicideIntentScoreSubscale: new Coding({
        display: "Suicide intent score subscale",
        code: "282468007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 282469004
     */
    SuicideIntentScoreSubscaleAttemptCircumstances: new Coding({
        display: "Suicide intent score subscale - attempt circumstances",
        code: "282469004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 282470003
     */
    SuicideIntentScoreSubscaleSelfReport: new Coding({
        display: "Suicide intent score subscale - self report",
        code: "282470003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 282471004
     */
    SuicideIntentScoreSubscaleRisk: new Coding({
        display: "Suicide intent score subscale - risk",
        code: "282471004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 284061009
     */
    GlobalAssessmentOfFunctioning1993DiagnosticAndStatisticalManualOfMentalDisordersFourthEditionAdaptation: new Coding({
        display: "Global assessment of functioning - 1993 Diagnostic and Statistical Manual of Mental Disorders, Fourth Edition adaptation",
        code: "284061009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 284064001
     */
    BPRSBriefPsychiatricRatingScale1962: new Coding({
        display: "BPRS - Brief psychiatric rating scale - 1962",
        code: "284064001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 284464005
     */
    HealthOfTheNationOutcomeScales: new Coding({
        display: "Health of the Nation Outcome Scales",
        code: "284464005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 285713000
     */
    GEMSGuideToEarlyMovementSkillsChecklist: new Coding({
        display: "GEMS - Guide to early movement skills checklist",
        code: "285713000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 285714006
     */
    BSTSBereweekeSkillTeachingSystemChecklist: new Coding({
        display: "BSTS - Bereweeke skill teaching system checklist",
        code: "285714006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 300991009
     */
    WebsterScore: new Coding({
        display: "Webster score",
        code: "300991009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 302029005
     */
    FerrimanAndGalwayScore: new Coding({
        display: "Ferriman and Galway score",
        code: "302029005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 303807002
     */
    RuleOfNines: new Coding({
        display: "Rule of nines",
        code: "303807002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304705008
     */
    AmericanAssociationOnMentalRetardationAAMRAdaptiveBehaviorScale: new Coding({
        display: "American Association on Mental Retardation (AAMR) adaptive behavior scale",
        code: "304705008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304706009
     */
    AcceptanceOfIllnessScale: new Coding({
        display: "Acceptance of illness scale",
        code: "304706009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304707000
     */
    AnomalousSentencesRepetitionTest: new Coding({
        display: "Anomalous sentences repetition test",
        code: "304707000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304708005
     */
    ArthritisImpactMeasurementScale: new Coding({
        display: "Arthritis impact measurement scale",
        code: "304708005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304709002
     */
    AttitudesTowardsDoctorsAndMedicineScale: new Coding({
        display: "Attitudes towards doctors and medicine scale",
        code: "304709002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304710007
     */
    BeckHopelessnessScale: new Coding({
        display: "Beck hopelessness scale",
        code: "304710007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304711006
     */
    BeckAnxietyInventory: new Coding({
        display: "Beck anxiety inventory",
        code: "304711006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304712004
     */
    BeckScaleForSuicideIdeation: new Coding({
        display: "Beck scale for suicide ideation",
        code: "304712004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304713009
     */
    BPCQBeliefsAboutPainControlQuestionnaire: new Coding({
        display: "BPCQ - Beliefs about pain control questionnaire",
        code: "304713009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304714003
     */
    BellakChildrenQuoteSApperceptionTest: new Coding({
        display: "Bellak children's apperception test",
        code: "304714003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304715002
     */
    BenderVisualMotorGestaltTest: new Coding({
        display: "Bender visual motor gestalt test",
        code: "304715002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304716001
     */
    BruininksOseretskyTestOfMotorProficiency: new Coding({
        display: "Bruininks-Oseretsky test of motor proficiency",
        code: "304716001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304717005
     */
    CancerAttitudeInventory: new Coding({
        display: "Cancer attitude inventory",
        code: "304717005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304718000
     */
    ChildDepressionScaleSecondResearchEdition: new Coding({
        display: "Child depression scale, second research edition",
        code: "304718000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304719008
     */
    ChildrenQuoteSHealthLocusOfControlScale: new Coding({
        display: "Children's health locus of control scale",
        code: "304719008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304720002
     */
    CECSCourtauldEmotionalControlScale: new Coding({
        display: "CECS - Courtauld emotional control scale",
        code: "304720002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304721003
     */
    MiddlesexHospitalQuestionnaire: new Coding({
        display: "Middlesex hospital questionnaire",
        code: "304721003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304722005
     */
    CultureFreeSelfEsteemInventory: new Coding({
        display: "Culture-free self-esteem inventory",
        code: "304722005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304723000
     */
    DelusionsSymptomsStatesInventory: new Coding({
        display: "Delusions-symptoms-states inventory",
        code: "304723000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304724006
     */
    EysenckPersonalityQuestionnaire: new Coding({
        display: "Eysenck personality questionnaire",
        code: "304724006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304725007
     */
    FamilyRelationsTest: new Coding({
        display: "Family relations test",
        code: "304725007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304726008
     */
    ForcedChoiceRatingsOfHealthRelatedAttributes: new Coding({
        display: "Forced choice ratings of health-related attributes",
        code: "304726008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304727004
     */
    FraminghamAngerMeasure: new Coding({
        display: "Framingham anger measure",
        code: "304727004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304728009
     */
    FraminghamTypeABehaviorPatternMeasure: new Coding({
        display: "Framingham type A behavior pattern measure",
        code: "304728009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304729001
     */
    FuldObjectMemoryEvaluation: new Coding({
        display: "Fuld object memory evaluation",
        code: "304729001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304730006
     */
    FunctionalPerformanceRecord: new Coding({
        display: "Functional performance record",
        code: "304730006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304731005
     */
    GeneralPreventativeHealthBehaviorsChecklist: new Coding({
        display: "General preventative health behaviors checklist",
        code: "304731005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304732003
     */
    HasslesScale: new Coding({
        display: "Hassles scale",
        code: "304732003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304733008
     */
    HealthKnowledgeMeasurement: new Coding({
        display: "Health knowledge measurement",
        code: "304733008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304734002
     */
    HealthValueScale: new Coding({
        display: "Health value scale",
        code: "304734002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304735001
     */
    IllinoisTestOfPsycholinguisticAbilitiesRevisedEdition: new Coding({
        display: "Illinois test of psycholinguistic abilities, revised edition",
        code: "304735001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304736000
     */
    InventoryOfDrinkingSituations: new Coding({
        display: "Inventory of drinking situations",
        code: "304736000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304738004
     */
    KaufmanAssessmentBatteryForChildren: new Coding({
        display: "Kaufman assessment battery for children",
        code: "304738004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304739007
     */
    LifeExperiencesChecklist: new Coding({
        display: "Life experiences checklist",
        code: "304739007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304740009
     */
    LOTLifeOrientationTest: new Coding({
        display: "LOT - Life orientation test",
        code: "304740009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304741008
     */
    LuriaNebraskaNeuropsychologicalBatteryChildrenQuoteSRevision: new Coding({
        display: "Luria-Nebraska neuropsychological battery, children's revision",
        code: "304741008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304742001
     */
    LuriaNebraskaNeuropsychologicalBatteryForm1: new Coding({
        display: "Luria-Nebraska neuropsychological battery, form 1",
        code: "304742001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304743006
     */
    MarlowCrowneScale: new Coding({
        display: "Marlow-Crowne scale",
        code: "304743006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304744000
     */
    MISSMedicalInterviewSatisfactionScale: new Coding({
        display: "MISS - Medical interview satisfaction scale",
        code: "304744000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304745004
     */
    MentalAdjustmentToCancerScale: new Coding({
        display: "Mental adjustment to cancer scale",
        code: "304745004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304746003
     */
    MerrilPalmerPreschoolPerformanceScale: new Coding({
        display: "Merril-Palmer preschool performance scale",
        code: "304746003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304747007
     */
    MotivationAnalysisTest: new Coding({
        display: "Motivation analysis test",
        code: "304747007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304748002
     */
    MultidimensionalHealthLocusOfControlScale: new Coding({
        display: "Multidimensional health locus of control scale",
        code: "304748002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304749005
     */
    ObjectRelationsTechnique: new Coding({
        display: "Object relations technique",
        code: "304749005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304750005
     */
    PainCopingStrategiesQuestionnaire: new Coding({
        display: "Pain coping strategies questionnaire",
        code: "304750005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304751009
     */
    PILLPennebakerInventoryOfLinguidLanguidness: new Coding({
        display: "PILL - Pennebaker inventory of linguid languidness",
        code: "304751009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304752002
     */
    PerceivedControlOfInsulinDependentDiabetes: new Coding({
        display: "Perceived control of insulin-dependent diabetes",
        code: "304752002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304753007
     */
    PSSPerceivedStressScale: new Coding({
        display: "PSS - Perceived stress scale",
        code: "304753007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304754001
     */
    PersonalityDevianceScale: new Coding({
        display: "Personality deviance scale",
        code: "304754001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304755000
     */
    PANASPositiveAndNegativeAffectSchedule: new Coding({
        display: "PANAS - Positive and negative affect schedule",
        code: "304755000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304756004
     */
    PrejudicialEvaluationAndSocialInteractionScale: new Coding({
        display: "Prejudicial evaluation and social interaction scale",
        code: "304756004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304757008
     */
    ProfileOfMoodStatesBipolar: new Coding({
        display: "Profile of mood states, bipolar",
        code: "304757008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304758003
     */
    QuickNeurologicalScreeningTest: new Coding({
        display: "Quick neurological screening test",
        code: "304758003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304759006
     */
    RavenProgressiveMatricesAndVocabularyScales: new Coding({
        display: "Raven progressive matrices and vocabulary scales",
        code: "304759006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304760001
     */
    RLOCRecoveryLocusOfControlScale: new Coding({
        display: "RLOC - Recovery locus of control scale",
        code: "304760001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304761002
     */
    ReportedHealthBehaviorsChecklist: new Coding({
        display: "Reported health behaviors checklist",
        code: "304761002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304762009
     */
    RevisedTokenTest: new Coding({
        display: "Revised token test",
        code: "304762009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304763004
     */
    ReynellDevelopmentalLanguageScalesSecondRevision: new Coding({
        display: "Reynell developmental language scales, second revision",
        code: "304763004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304764005
     */
    ReynellZinkinScaleForYoungVisuallyHandicappedChildren: new Coding({
        display: "Reynell Zinkin scale for young visually handicapped children",
        code: "304764005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304765006
     */
    RogersPersonalAdjustmentInventoryRevised: new Coding({
        display: "Rogers personal adjustment inventory, revised",
        code: "304765006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304766007
     */
    RSESRosenbergSelfEsteemScale: new Coding({
        display: "RSES - Rosenberg self-esteem scale",
        code: "304766007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304767003
     */
    RustInventoryOfSchizotypalCognitions: new Coding({
        display: "Rust inventory of schizotypal cognitions",
        code: "304767003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304768008
     */
    SatisfactionWithLifeScale: new Coding({
        display: "Satisfaction with life scale",
        code: "304768008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304769000
     */
    ScreeningTestForTheLuriaNebraskaNeuropsychologicalBattery: new Coding({
        display: "Screening test for the Luria-Nebraska neuropsychological battery",
        code: "304769000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304770004
     */
    ShortFormSocialSupportQuestionnaire: new Coding({
        display: "Short form social support questionnaire",
        code: "304770004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304771000
     */
    SOSSignificantOthersScale: new Coding({
        display: "SOS - Significant others scale",
        code: "304771000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304772007
     */
    SnijdersOomenNonVerbalIntelligenceScaleRevised: new Coding({
        display: "Snijders-Oomen non-verbal intelligence scale, revised",
        code: "304772007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304773002
     */
    StanfordBinetIntelligenceScaleFourthEdition: new Coding({
        display: "Stanford Binet intelligence scale, fourth edition",
        code: "304773002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304774008
     */
    StanfordBinetFormLM: new Coding({
        display: "Stanford Binet form L/M",
        code: "304774008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304775009
     */
    StateTraitAngerExpressionInventory: new Coding({
        display: "State-trait anger expression inventory",
        code: "304775009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304776005
     */
    StroopNeuropsychologicalScreeningTest: new Coding({
        display: "Stroop neuropsychological screening test",
        code: "304776005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304777001
     */
    SymbolicPlayTestSecondEdition: new Coding({
        display: "Symbolic play test, second edition",
        code: "304777001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304778006
     */
    TokenTestForChildren: new Coding({
        display: "Token test for children",
        code: "304778006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304779003
     */
    UpliftsScale: new Coding({
        display: "Uplifts scale",
        code: "304779003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304780000
     */
    VarniThompsonPediatricPainQuestionnaire: new Coding({
        display: "Varni-Thompson pediatric pain questionnaire",
        code: "304780000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304781001
     */
    VinelandAdaptiveBehaviorScales: new Coding({
        display: "Vineland adaptive behavior scales",
        code: "304781001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 304915008
     */
    DukeTreadmillScore: new Coding({
        display: "Duke treadmill score",
        code: "304915008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 307791002
     */
    StrangeSituationTest: new Coding({
        display: "Strange situation test",
        code: "307791002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 307792009
     */
    ReyFigureTest: new Coding({
        display: "Rey figure test",
        code: "307792009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 307793004
     */
    TestOfEverydayAttention: new Coding({
        display: "Test of everyday attention",
        code: "307793004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 307794005
     */
    TestOfEverydayAttentionAdult: new Coding({
        display: "Test of everyday attention - adult",
        code: "307794005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 307795006
     */
    TestOfEverydayAttentionChild: new Coding({
        display: "Test of everyday attention - child",
        code: "307795006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 307801002
     */
    RivermeadBehavioralMemoryTestAdultVersion: new Coding({
        display: "Rivermead behavioral memory test - adult version",
        code: "307801002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 307802009
     */
    RivermeadBehavioralMemoryTestChildVersion: new Coding({
        display: "Rivermead behavioral memory test - child version",
        code: "307802009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 307803004
     */
    WechslerObjectiveNumericalDimensionsTest: new Coding({
        display: "Wechsler objective numerical dimensions test",
        code: "307803004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 307804005
     */
    WOLDWechslerObjectiveLanguageDimensionsTest: new Coding({
        display: "WOLD - Wechsler objective language dimensions test",
        code: "307804005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 307805006
     */
    HealthOfTheNationOutcomeScaleForChildren: new Coding({
        display: "Health of the Nation Outcome Scale for children",
        code: "307805006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 307806007
     */
    HealthOfTheNationOutcomeScaleForAdolescents: new Coding({
        display: "Health of the Nation Outcome Scale for adolescents",
        code: "307806007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 307807003
     */
    MaudsleyAddictionProfile: new Coding({
        display: "Maudsley addiction profile",
        code: "307807003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 309593006
     */
    EducationScoreDiabetes: new Coding({
        display: "Education score - diabetes",
        code: "309593006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 311404002
     */
    AttentionProcessTrainingQuestionnaire: new Coding({
        display: "Attention process training questionnaire",
        code: "311404002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 311405001
     */
    RatingScaleOfAttentionalBehavior: new Coding({
        display: "Rating scale of attentional behavior",
        code: "311405001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 311406000
     */
    EverydayMemoryQuestionnaire: new Coding({
        display: "Everyday memory questionnaire",
        code: "311406000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 311457001
     */
    BehaviorAssessmentOfTheDysexecutiveSyndrome: new Coding({
        display: "Behavior assessment of the dysexecutive syndrome",
        code: "311457001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 311458006
     */
    DoorsAndPeopleAssessment: new Coding({
        display: "Doors and people assessment",
        code: "311458006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 311471009
     */
    Extended2And7Test: new Coding({
        display: "Extended 2 & 7 test",
        code: "311471009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 311472002
     */
    AlphabetNumberAlterationTest: new Coding({
        display: "Alphabet number alteration test",
        code: "311472002",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 311473007
     */
    VigilWTest: new Coding({
        display: "Vigil/W test",
        code: "311473007",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 311474001
     */
    AttentionalCapacityTest: new Coding({
        display: "Attentional capacity test",
        code: "311474001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 311475000
     */
    ConsonantTrigramsTest: new Coding({
        display: "Consonant trigrams test",
        code: "311475000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 311477008
     */
    BuschkeSelectiveRemindingTest: new Coding({
        display: "Buschke selective reminding test",
        code: "311477008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 311478003
     */
    CaliforniaVerbalLearningTest: new Coding({
        display: "California verbal learning test",
        code: "311478003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 311480009
     */
    WilliamsMemoryAssessmentScales: new Coding({
        display: "Williams memory assessment scales",
        code: "311480009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 311481008
     */
    WechslerMemoryScaleRevised: new Coding({
        display: "Wechsler memory scale revised",
        code: "311481008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 311483006
     */
    AssociationForNeuropsychologicalResearchAndDevelopmentProspectiveMemoryTest: new Coding({
        display: "Association for neuropsychological research and development prospective memory test",
        code: "311483006",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 311484000
     */
    PASATPacedAuditoryStimulationTest: new Coding({
        display: "PASAT - Paced auditory stimulation test",
        code: "311484000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 311485004
     */
    CategoryTest: new Coding({
        display: "Category test",
        code: "311485004",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 311486003
     */
    ProfileOfExecutiveControlSystem: new Coding({
        display: "Profile of executive control system",
        code: "311486003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 311512008
     */
    BrixtonTest: new Coding({
        display: "Brixton test",
        code: "311512008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 311513003
     */
    HaylingTest: new Coding({
        display: "Hayling test",
        code: "311513003",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 311514009
     */
    MicrocogAssessmentOfCognitiveFunction: new Coding({
        display: "Microcog - assessment of cognitive function",
        code: "311514009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 42114005
     */
    WalterReedWRStage1: new Coding({
        display: "Walter Reed (WR) stage 1",
        code: "42114005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 66470009
     */
    WRStage5: new Coding({
        display: "WR stage 5",
        code: "66470009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 74542008
     */
    WRStage4: new Coding({
        display: "WR stage 4",
        code: "74542008",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 83200007
     */
    WRStage6: new Coding({
        display: "WR stage 6",
        code: "83200007",
        system: "http://snomed.info/sct",
    }),
};
//# sourceMappingURL=data:application/json;base64,