{"version":3,"file":"FilterOperatorCodes.js","sources":["../../src/fhirValueSets/FilterOperatorCodes.ts"],"sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4.core version: 4.0.1\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR ValueSet: http://hl7.org/fhir/ValueSet/filter-operator|4.0.1\r\n\r\n/**\r\n * The kind of operation to perform as a part of a property based filter.\r\n */\r\nexport const FilterOperatorCodes = {\r\n  /**\r\n   * =: The specified property of the code equals the provided value.\r\n   */\r\n  Equals: \"=\",\r\n  /**\r\n   * descendent-of: Includes all concept ids that have a transitive is-a relationship with the concept Id provided as the value, excluding the provided concept itself i.e. include descendant codes only).\r\n   */\r\n  DescendentOfBySubsumption: \"descendent-of\",\r\n  /**\r\n   * exists: The specified property of the code has at least one value (if the specified value is true; if the specified value is false, then matches when the specified property of the code has no values).\r\n   */\r\n  Exists: \"exists\",\r\n  /**\r\n   * generalizes: Includes all concept ids that have a transitive is-a relationship from the concept Id provided as the value, including the provided concept itself (i.e. include ancestor codes and self).\r\n   */\r\n  GeneralizesBySubsumption: \"generalizes\",\r\n  /**\r\n   * in: The specified property of the code is in the set of codes or concepts specified in the provided value (comma separated list).\r\n   */\r\n  InSet: \"in\",\r\n  /**\r\n   * is-a: Includes all concept ids that have a transitive is-a relationship with the concept Id provided as the value, including the provided concept itself (include descendant codes and self).\r\n   */\r\n  IsABySubsumption: \"is-a\",\r\n  /**\r\n   * is-not-a: The specified property of the code does not have an is-a relationship with the provided value.\r\n   */\r\n  NotIsABySubsumption: \"is-not-a\",\r\n  /**\r\n   * not-in: The specified property of the code is not in the set of codes or concepts specified in the provided value (comma separated list).\r\n   */\r\n  NotInSet: \"not-in\",\r\n  /**\r\n   * regex: The specified property of the code  matches the regex specified in the provided value.\r\n   */\r\n  RegularExpression: \"regex\",\r\n} as const;\r\n\r\n/**\r\n * The kind of operation to perform as a part of a property based filter.\r\n */\r\nexport type FilterOperatorCodeType = typeof FilterOperatorCodes[keyof typeof FilterOperatorCodes];\r\n"],"names":[],"mappings":";;AAAA;AACA;AACA;AACA;AAEA;;AAEG;AACU,IAAA,mBAAmB,GAAG;AACjC;;AAEG;AACH,IAAA,MAAM,EAAE,GAAG;AACX;;AAEG;AACH,IAAA,yBAAyB,EAAE,eAAe;AAC1C;;AAEG;AACH,IAAA,MAAM,EAAE,QAAQ;AAChB;;AAEG;AACH,IAAA,wBAAwB,EAAE,aAAa;AACvC;;AAEG;AACH,IAAA,KAAK,EAAE,IAAI;AACX;;AAEG;AACH,IAAA,gBAAgB,EAAE,MAAM;AACxB;;AAEG;AACH,IAAA,mBAAmB,EAAE,UAAU;AAC/B;;AAEG;AACH,IAAA,QAAQ,EAAE,QAAQ;AAClB;;AAEG;AACH,IAAA,iBAAiB,EAAE,OAAO;;;;;"}