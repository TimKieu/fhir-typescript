{"version":3,"file":"QuestionnaireEnableBehaviorCodings.js","sources":["../../src/fhirValueSets/QuestionnaireEnableBehaviorCodings.ts"],"sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4.core version: 4.0.1\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR ValueSet: http://hl7.org/fhir/ValueSet/questionnaire-enable-behavior|4.0.1\r\n\r\nimport { Coding } from '../fhir/Coding.js'\r\n\r\n/**\r\n * Controls how multiple enableWhen values are interpreted -  whether all or any must be true.\r\n */\r\nexport const QuestionnaireEnableBehaviorCodings = {\r\n  /**\r\n   * all: Enable the question when all the enableWhen criteria are satisfied.\r\n   */\r\n  All: new Coding({\r\n    display: \"All\",\r\n    code: \"all\",\r\n    system: \"http://hl7.org/fhir/questionnaire-enable-behavior\",\r\n  }),\r\n  /**\r\n   * any: Enable the question when any of the enableWhen criteria are satisfied.\r\n   */\r\n  Any: new Coding({\r\n    display: \"Any\",\r\n    code: \"any\",\r\n    system: \"http://hl7.org/fhir/questionnaire-enable-behavior\",\r\n  }),\r\n} as const;\r\n\r\n/**\r\n * Controls how multiple enableWhen values are interpreted -  whether all or any must be true.\r\n */\r\nexport type QuestionnaireEnableBehaviorCodingType = typeof QuestionnaireEnableBehaviorCodings;\r\n"],"names":[],"mappings":";;;;AAAA;AAOA;;AAEG;AACU,IAAA,kCAAkC,GAAG;AAChD;;AAEG;IACH,GAAG,EAAE,IAAI,MAAM,CAAC;AACd,QAAA,OAAO,EAAE,KAAK;AACd,QAAA,IAAI,EAAE,KAAK;AACX,QAAA,MAAM,EAAE,mDAAmD;KAC5D,CAAC;AACF;;AAEG;IACH,GAAG,EAAE,IAAI,MAAM,CAAC;AACd,QAAA,OAAO,EAAE,KAAK;AACd,QAAA,IAAI,EAAE,KAAK;AACX,QAAA,MAAM,EAAE,mDAAmD;KAC5D,CAAC;;;;;"}