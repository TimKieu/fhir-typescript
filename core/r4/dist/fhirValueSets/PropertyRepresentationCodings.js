// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/property-representation|4.0.1
/**
 * How a property is represented when serialized.
 */
export const PropertyRepresentationCodings = {
    /**
     * cdaText: Use CDA narrative instead of XHTML.
     */
    CDATextFormat: {
        display: "CDA Text Format",
        code: "cdaText",
        system: "http://hl7.org/fhir/property-representation",
    },
    /**
     * typeAttr: The type of this element is indicated using xsi:type.
     */
    TypeAttribute: {
        display: "Type Attribute",
        code: "typeAttr",
        system: "http://hl7.org/fhir/property-representation",
    },
    /**
     * xhtml: The property is represented using XHTML.
     */
    XHTML: {
        display: "XHTML",
        code: "xhtml",
        system: "http://hl7.org/fhir/property-representation",
    },
    /**
     * xmlAttr: In XML, this property is represented as an attribute not an element.
     */
    XMLAttribute: {
        display: "XML Attribute",
        code: "xmlAttr",
        system: "http://hl7.org/fhir/property-representation",
    },
    /**
     * xmlText: This element is represented using the XML text attribute (primitives only).
     */
    XMLText: {
        display: "XML Text",
        code: "xmlText",
        system: "http://hl7.org/fhir/property-representation",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUHJvcGVydHlSZXByZXNlbnRhdGlvbkNvZGluZ3MuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL1Byb3BlcnR5UmVwcmVzZW50YXRpb25Db2RpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQiwrQ0FBK0M7QUFDL0Msa0NBQWtDO0FBQ2xDLDRFQUE0RTtBQThCNUU7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSw2QkFBNkIsR0FBb0M7SUFDNUU7O09BRUc7SUFDSCxhQUFhLEVBQUU7UUFDYixPQUFPLEVBQUUsaUJBQWlCO1FBQzFCLElBQUksRUFBRSxTQUFTO1FBQ2YsTUFBTSxFQUFFLDZDQUE2QztLQUN0RDtJQUNEOztPQUVHO0lBQ0gsYUFBYSxFQUFFO1FBQ2IsT0FBTyxFQUFFLGdCQUFnQjtRQUN6QixJQUFJLEVBQUUsVUFBVTtRQUNoQixNQUFNLEVBQUUsNkNBQTZDO0tBQ3REO0lBQ0Q7O09BRUc7SUFDSCxLQUFLLEVBQUU7UUFDTCxPQUFPLEVBQUUsT0FBTztRQUNoQixJQUFJLEVBQUUsT0FBTztRQUNiLE1BQU0sRUFBRSw2Q0FBNkM7S0FDdEQ7SUFDRDs7T0FFRztJQUNILFlBQVksRUFBRTtRQUNaLE9BQU8sRUFBRSxlQUFlO1FBQ3hCLElBQUksRUFBRSxTQUFTO1FBQ2YsTUFBTSxFQUFFLDZDQUE2QztLQUN0RDtJQUNEOztPQUVHO0lBQ0gsT0FBTyxFQUFFO1FBQ1AsT0FBTyxFQUFFLFVBQVU7UUFDbkIsSUFBSSxFQUFFLFNBQVM7UUFDZixNQUFNLEVBQUUsNkNBQTZDO0tBQ3REO0NBQ08sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNC5jb3JlIHZlcnNpb246IDQuMC4xXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9wcm9wZXJ0eS1yZXByZXNlbnRhdGlvbnw0LjAuMVxyXG5cclxuaW1wb3J0IHsgQ29kaW5nQXJncyB9IGZyb20gJy4uL2ZoaXIvQ29kaW5nLmpzJ1xyXG5cclxuLyoqXHJcbiAqIEhvdyBhIHByb3BlcnR5IGlzIHJlcHJlc2VudGVkIHdoZW4gc2VyaWFsaXplZC5cclxuICovXHJcbmV4cG9ydCB0eXBlIFByb3BlcnR5UmVwcmVzZW50YXRpb25Db2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIGNkYVRleHQ6IFVzZSBDREEgbmFycmF0aXZlIGluc3RlYWQgb2YgWEhUTUwuXHJcbiAgICovXHJcbiAgQ0RBVGV4dEZvcm1hdDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiB0eXBlQXR0cjogVGhlIHR5cGUgb2YgdGhpcyBlbGVtZW50IGlzIGluZGljYXRlZCB1c2luZyB4c2k6dHlwZS5cclxuICAgKi9cclxuICBUeXBlQXR0cmlidXRlOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIHhodG1sOiBUaGUgcHJvcGVydHkgaXMgcmVwcmVzZW50ZWQgdXNpbmcgWEhUTUwuXHJcbiAgICovXHJcbiAgWEhUTUw6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogeG1sQXR0cjogSW4gWE1MLCB0aGlzIHByb3BlcnR5IGlzIHJlcHJlc2VudGVkIGFzIGFuIGF0dHJpYnV0ZSBub3QgYW4gZWxlbWVudC5cclxuICAgKi9cclxuICBYTUxBdHRyaWJ1dGU6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogeG1sVGV4dDogVGhpcyBlbGVtZW50IGlzIHJlcHJlc2VudGVkIHVzaW5nIHRoZSBYTUwgdGV4dCBhdHRyaWJ1dGUgKHByaW1pdGl2ZXMgb25seSkuXHJcbiAgICovXHJcbiAgWE1MVGV4dDogQ29kaW5nQXJncztcclxufVxyXG5cclxuLyoqXHJcbiAqIEhvdyBhIHByb3BlcnR5IGlzIHJlcHJlc2VudGVkIHdoZW4gc2VyaWFsaXplZC5cclxuICovXHJcbmV4cG9ydCBjb25zdCBQcm9wZXJ0eVJlcHJlc2VudGF0aW9uQ29kaW5nczpQcm9wZXJ0eVJlcHJlc2VudGF0aW9uQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBjZGFUZXh0OiBVc2UgQ0RBIG5hcnJhdGl2ZSBpbnN0ZWFkIG9mIFhIVE1MLlxyXG4gICAqL1xyXG4gIENEQVRleHRGb3JtYXQ6IHtcclxuICAgIGRpc3BsYXk6IFwiQ0RBIFRleHQgRm9ybWF0XCIsXHJcbiAgICBjb2RlOiBcImNkYVRleHRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3Byb3BlcnR5LXJlcHJlc2VudGF0aW9uXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiB0eXBlQXR0cjogVGhlIHR5cGUgb2YgdGhpcyBlbGVtZW50IGlzIGluZGljYXRlZCB1c2luZyB4c2k6dHlwZS5cclxuICAgKi9cclxuICBUeXBlQXR0cmlidXRlOiB7XHJcbiAgICBkaXNwbGF5OiBcIlR5cGUgQXR0cmlidXRlXCIsXHJcbiAgICBjb2RlOiBcInR5cGVBdHRyXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9wcm9wZXJ0eS1yZXByZXNlbnRhdGlvblwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogeGh0bWw6IFRoZSBwcm9wZXJ0eSBpcyByZXByZXNlbnRlZCB1c2luZyBYSFRNTC5cclxuICAgKi9cclxuICBYSFRNTDoge1xyXG4gICAgZGlzcGxheTogXCJYSFRNTFwiLFxyXG4gICAgY29kZTogXCJ4aHRtbFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcHJvcGVydHktcmVwcmVzZW50YXRpb25cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIHhtbEF0dHI6IEluIFhNTCwgdGhpcyBwcm9wZXJ0eSBpcyByZXByZXNlbnRlZCBhcyBhbiBhdHRyaWJ1dGUgbm90IGFuIGVsZW1lbnQuXHJcbiAgICovXHJcbiAgWE1MQXR0cmlidXRlOiB7XHJcbiAgICBkaXNwbGF5OiBcIlhNTCBBdHRyaWJ1dGVcIixcclxuICAgIGNvZGU6IFwieG1sQXR0clwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcHJvcGVydHktcmVwcmVzZW50YXRpb25cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIHhtbFRleHQ6IFRoaXMgZWxlbWVudCBpcyByZXByZXNlbnRlZCB1c2luZyB0aGUgWE1MIHRleHQgYXR0cmlidXRlIChwcmltaXRpdmVzIG9ubHkpLlxyXG4gICAqL1xyXG4gIFhNTFRleHQ6IHtcclxuICAgIGRpc3BsYXk6IFwiWE1MIFRleHRcIixcclxuICAgIGNvZGU6IFwieG1sVGV4dFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcHJvcGVydHktcmVwcmVzZW50YXRpb25cIixcclxuICB9LFxyXG59IGFzIGNvbnN0O1xyXG4iXX0=