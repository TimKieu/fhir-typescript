// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/verificationresult-status|4.0.1
import { Coding } from '../fhir/Coding.js';
/**
 * The validation status of the target
 */
export const VerificationresultStatusCodings = {
    /**
     * attested: ***TODO***
     */
    Attested: new Coding({
        display: "Attested",
        code: "attested",
        system: "http://hl7.org/fhir/CodeSystem/status",
    }),
    /**
     * in-process: ***TODO***
     */
    InProcess: new Coding({
        display: "In process",
        code: "in-process",
        system: "http://hl7.org/fhir/CodeSystem/status",
    }),
    /**
     * req-revalid: ***TODO***
     */
    RequiresRevalidation: new Coding({
        display: "Requires revalidation",
        code: "req-revalid",
        system: "http://hl7.org/fhir/CodeSystem/status",
    }),
    /**
     * reval-fail: ***TODO***
     */
    ReValidationFailed: new Coding({
        display: "Re-Validation failed",
        code: "reval-fail",
        system: "http://hl7.org/fhir/CodeSystem/status",
    }),
    /**
     * val-fail: ***TODO***
     */
    ValidationFailed: new Coding({
        display: "Validation failed",
        code: "val-fail",
        system: "http://hl7.org/fhir/CodeSystem/status",
    }),
    /**
     * validated: ***TODO***
     */
    Validated: new Coding({
        display: "Validated",
        code: "validated",
        system: "http://hl7.org/fhir/CodeSystem/status",
    }),
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVmVyaWZpY2F0aW9ucmVzdWx0U3RhdHVzQ29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvVmVyaWZpY2F0aW9ucmVzdWx0U3RhdHVzQ29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyw4RUFBOEU7QUFFOUUsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLG1CQUFtQixDQUFBO0FBRTFDOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sK0JBQStCLEdBQUc7SUFDN0M7O09BRUc7SUFDSCxRQUFRLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDbkIsT0FBTyxFQUFFLFVBQVU7UUFDbkIsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLHVDQUF1QztLQUNoRCxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxTQUFTLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDcEIsT0FBTyxFQUFFLFlBQVk7UUFDckIsSUFBSSxFQUFFLFlBQVk7UUFDbEIsTUFBTSxFQUFFLHVDQUF1QztLQUNoRCxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxvQkFBb0IsRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUMvQixPQUFPLEVBQUUsdUJBQXVCO1FBQ2hDLElBQUksRUFBRSxhQUFhO1FBQ25CLE1BQU0sRUFBRSx1Q0FBdUM7S0FDaEQsQ0FBQztJQUNGOztPQUVHO0lBQ0gsa0JBQWtCLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDN0IsT0FBTyxFQUFFLHNCQUFzQjtRQUMvQixJQUFJLEVBQUUsWUFBWTtRQUNsQixNQUFNLEVBQUUsdUNBQXVDO0tBQ2hELENBQUM7SUFDRjs7T0FFRztJQUNILGdCQUFnQixFQUFFLElBQUksTUFBTSxDQUFDO1FBQzNCLE9BQU8sRUFBRSxtQkFBbUI7UUFDNUIsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLHVDQUF1QztLQUNoRCxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxTQUFTLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDcEIsT0FBTyxFQUFFLFdBQVc7UUFDcEIsSUFBSSxFQUFFLFdBQVc7UUFDakIsTUFBTSxFQUFFLHVDQUF1QztLQUNoRCxDQUFDO0NBQ00sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNC5jb3JlIHZlcnNpb246IDQuMC4xXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC92ZXJpZmljYXRpb25yZXN1bHQtc3RhdHVzfDQuMC4xXHJcblxyXG5pbXBvcnQgeyBDb2RpbmcgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiBUaGUgdmFsaWRhdGlvbiBzdGF0dXMgb2YgdGhlIHRhcmdldFxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IFZlcmlmaWNhdGlvbnJlc3VsdFN0YXR1c0NvZGluZ3MgPSB7XHJcbiAgLyoqXHJcbiAgICogYXR0ZXN0ZWQ6ICoqKlRPRE8qKipcclxuICAgKi9cclxuICBBdHRlc3RlZDogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIkF0dGVzdGVkXCIsXHJcbiAgICBjb2RlOiBcImF0dGVzdGVkXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9Db2RlU3lzdGVtL3N0YXR1c1wiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIGluLXByb2Nlc3M6ICoqKlRPRE8qKipcclxuICAgKi9cclxuICBJblByb2Nlc3M6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJJbiBwcm9jZXNzXCIsXHJcbiAgICBjb2RlOiBcImluLXByb2Nlc3NcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL0NvZGVTeXN0ZW0vc3RhdHVzXCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogcmVxLXJldmFsaWQ6ICoqKlRPRE8qKipcclxuICAgKi9cclxuICBSZXF1aXJlc1JldmFsaWRhdGlvbjogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIlJlcXVpcmVzIHJldmFsaWRhdGlvblwiLFxyXG4gICAgY29kZTogXCJyZXEtcmV2YWxpZFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvQ29kZVN5c3RlbS9zdGF0dXNcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiByZXZhbC1mYWlsOiAqKipUT0RPKioqXHJcbiAgICovXHJcbiAgUmVWYWxpZGF0aW9uRmFpbGVkOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiUmUtVmFsaWRhdGlvbiBmYWlsZWRcIixcclxuICAgIGNvZGU6IFwicmV2YWwtZmFpbFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvQ29kZVN5c3RlbS9zdGF0dXNcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiB2YWwtZmFpbDogKioqVE9ETyoqKlxyXG4gICAqL1xyXG4gIFZhbGlkYXRpb25GYWlsZWQ6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJWYWxpZGF0aW9uIGZhaWxlZFwiLFxyXG4gICAgY29kZTogXCJ2YWwtZmFpbFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvQ29kZVN5c3RlbS9zdGF0dXNcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiB2YWxpZGF0ZWQ6ICoqKlRPRE8qKipcclxuICAgKi9cclxuICBWYWxpZGF0ZWQ6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJWYWxpZGF0ZWRcIixcclxuICAgIGNvZGU6IFwidmFsaWRhdGVkXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9Db2RlU3lzdGVtL3N0YXR1c1wiLFxyXG4gIH0pLFxyXG59IGFzIGNvbnN0O1xyXG5cclxuLyoqXHJcbiAqIFRoZSB2YWxpZGF0aW9uIHN0YXR1cyBvZiB0aGUgdGFyZ2V0XHJcbiAqL1xyXG5leHBvcnQgdHlwZSBWZXJpZmljYXRpb25yZXN1bHRTdGF0dXNDb2RpbmdUeXBlID0gdHlwZW9mIFZlcmlmaWNhdGlvbnJlc3VsdFN0YXR1c0NvZGluZ3M7XHJcbiJdfQ==