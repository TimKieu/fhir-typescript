// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/concept-property-type|4.0.1
import { Coding } from '../fhir/Coding.js';
/**
 * The type of a property value.
 */
export const ConceptPropertyTypeCodings = {
    /**
     * boolean: The property value is a boolean true | false.
     */
    VALBoolean: new Coding({
        display: "boolean",
        code: "boolean",
        system: "http://hl7.org/fhir/concept-property-type",
    }),
    /**
     * code: The property value is a code that identifies a concept defined in the code system.
     */
    CodeInternalReference: new Coding({
        display: "code (internal reference)",
        code: "code",
        system: "http://hl7.org/fhir/concept-property-type",
    }),
    /**
     * Coding: The property  value is a code defined in an external code system. This may be used for translations, but is not the intent.
     */
    CodingExternalReference: new Coding({
        display: "Coding (external reference)",
        code: "Coding",
        system: "http://hl7.org/fhir/concept-property-type",
    }),
    /**
     * dateTime: The property is a date or a date + time.
     */
    DateTime: new Coding({
        display: "dateTime",
        code: "dateTime",
        system: "http://hl7.org/fhir/concept-property-type",
    }),
    /**
     * decimal: The property value is a decimal number.
     */
    Decimal: new Coding({
        display: "decimal",
        code: "decimal",
        system: "http://hl7.org/fhir/concept-property-type",
    }),
    /**
     * integer: The property value is a string (often used to assign ranking values to concepts for supporting score assessments).
     */
    Integer: new Coding({
        display: "integer",
        code: "integer",
        system: "http://hl7.org/fhir/concept-property-type",
    }),
    /**
     * string: The property value is a string.
     */
    VALString: new Coding({
        display: "string",
        code: "string",
        system: "http://hl7.org/fhir/concept-property-type",
    }),
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29uY2VwdFByb3BlcnR5VHlwZUNvZGluZ3MuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL0NvbmNlcHRQcm9wZXJ0eVR5cGVDb2RpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQiwrQ0FBK0M7QUFDL0Msa0NBQWtDO0FBQ2xDLDBFQUEwRTtBQUUxRSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sbUJBQW1CLENBQUE7QUFFMUM7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSwwQkFBMEIsR0FBRztJQUN4Qzs7T0FFRztJQUNILFVBQVUsRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUNyQixPQUFPLEVBQUUsU0FBUztRQUNsQixJQUFJLEVBQUUsU0FBUztRQUNmLE1BQU0sRUFBRSwyQ0FBMkM7S0FDcEQsQ0FBQztJQUNGOztPQUVHO0lBQ0gscUJBQXFCLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDaEMsT0FBTyxFQUFFLDJCQUEyQjtRQUNwQyxJQUFJLEVBQUUsTUFBTTtRQUNaLE1BQU0sRUFBRSwyQ0FBMkM7S0FDcEQsQ0FBQztJQUNGOztPQUVHO0lBQ0gsdUJBQXVCLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDbEMsT0FBTyxFQUFFLDZCQUE2QjtRQUN0QyxJQUFJLEVBQUUsUUFBUTtRQUNkLE1BQU0sRUFBRSwyQ0FBMkM7S0FDcEQsQ0FBQztJQUNGOztPQUVHO0lBQ0gsUUFBUSxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ25CLE9BQU8sRUFBRSxVQUFVO1FBQ25CLElBQUksRUFBRSxVQUFVO1FBQ2hCLE1BQU0sRUFBRSwyQ0FBMkM7S0FDcEQsQ0FBQztJQUNGOztPQUVHO0lBQ0gsT0FBTyxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ2xCLE9BQU8sRUFBRSxTQUFTO1FBQ2xCLElBQUksRUFBRSxTQUFTO1FBQ2YsTUFBTSxFQUFFLDJDQUEyQztLQUNwRCxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxPQUFPLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDbEIsT0FBTyxFQUFFLFNBQVM7UUFDbEIsSUFBSSxFQUFFLFNBQVM7UUFDZixNQUFNLEVBQUUsMkNBQTJDO0tBQ3BELENBQUM7SUFDRjs7T0FFRztJQUNILFNBQVMsRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUNwQixPQUFPLEVBQUUsUUFBUTtRQUNqQixJQUFJLEVBQUUsUUFBUTtRQUNkLE1BQU0sRUFBRSwyQ0FBMkM7S0FDcEQsQ0FBQztDQUNNLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjQuY29yZSB2ZXJzaW9uOiA0LjAuMVxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvY29uY2VwdC1wcm9wZXJ0eS10eXBlfDQuMC4xXHJcblxyXG5pbXBvcnQgeyBDb2RpbmcgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiBUaGUgdHlwZSBvZiBhIHByb3BlcnR5IHZhbHVlLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IENvbmNlcHRQcm9wZXJ0eVR5cGVDb2RpbmdzID0ge1xyXG4gIC8qKlxyXG4gICAqIGJvb2xlYW46IFRoZSBwcm9wZXJ0eSB2YWx1ZSBpcyBhIGJvb2xlYW4gdHJ1ZSB8IGZhbHNlLlxyXG4gICAqL1xyXG4gIFZBTEJvb2xlYW46IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJib29sZWFuXCIsXHJcbiAgICBjb2RlOiBcImJvb2xlYW5cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2NvbmNlcHQtcHJvcGVydHktdHlwZVwiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIGNvZGU6IFRoZSBwcm9wZXJ0eSB2YWx1ZSBpcyBhIGNvZGUgdGhhdCBpZGVudGlmaWVzIGEgY29uY2VwdCBkZWZpbmVkIGluIHRoZSBjb2RlIHN5c3RlbS5cclxuICAgKi9cclxuICBDb2RlSW50ZXJuYWxSZWZlcmVuY2U6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJjb2RlIChpbnRlcm5hbCByZWZlcmVuY2UpXCIsXHJcbiAgICBjb2RlOiBcImNvZGVcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2NvbmNlcHQtcHJvcGVydHktdHlwZVwiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIENvZGluZzogVGhlIHByb3BlcnR5ICB2YWx1ZSBpcyBhIGNvZGUgZGVmaW5lZCBpbiBhbiBleHRlcm5hbCBjb2RlIHN5c3RlbS4gVGhpcyBtYXkgYmUgdXNlZCBmb3IgdHJhbnNsYXRpb25zLCBidXQgaXMgbm90IHRoZSBpbnRlbnQuXHJcbiAgICovXHJcbiAgQ29kaW5nRXh0ZXJuYWxSZWZlcmVuY2U6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJDb2RpbmcgKGV4dGVybmFsIHJlZmVyZW5jZSlcIixcclxuICAgIGNvZGU6IFwiQ29kaW5nXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9jb25jZXB0LXByb3BlcnR5LXR5cGVcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBkYXRlVGltZTogVGhlIHByb3BlcnR5IGlzIGEgZGF0ZSBvciBhIGRhdGUgKyB0aW1lLlxyXG4gICAqL1xyXG4gIERhdGVUaW1lOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiZGF0ZVRpbWVcIixcclxuICAgIGNvZGU6IFwiZGF0ZVRpbWVcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2NvbmNlcHQtcHJvcGVydHktdHlwZVwiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIGRlY2ltYWw6IFRoZSBwcm9wZXJ0eSB2YWx1ZSBpcyBhIGRlY2ltYWwgbnVtYmVyLlxyXG4gICAqL1xyXG4gIERlY2ltYWw6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJkZWNpbWFsXCIsXHJcbiAgICBjb2RlOiBcImRlY2ltYWxcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2NvbmNlcHQtcHJvcGVydHktdHlwZVwiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIGludGVnZXI6IFRoZSBwcm9wZXJ0eSB2YWx1ZSBpcyBhIHN0cmluZyAob2Z0ZW4gdXNlZCB0byBhc3NpZ24gcmFua2luZyB2YWx1ZXMgdG8gY29uY2VwdHMgZm9yIHN1cHBvcnRpbmcgc2NvcmUgYXNzZXNzbWVudHMpLlxyXG4gICAqL1xyXG4gIEludGVnZXI6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJpbnRlZ2VyXCIsXHJcbiAgICBjb2RlOiBcImludGVnZXJcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2NvbmNlcHQtcHJvcGVydHktdHlwZVwiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIHN0cmluZzogVGhlIHByb3BlcnR5IHZhbHVlIGlzIGEgc3RyaW5nLlxyXG4gICAqL1xyXG4gIFZBTFN0cmluZzogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcInN0cmluZ1wiLFxyXG4gICAgY29kZTogXCJzdHJpbmdcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2NvbmNlcHQtcHJvcGVydHktdHlwZVwiLFxyXG4gIH0pLFxyXG59IGFzIGNvbnN0O1xyXG5cclxuLyoqXHJcbiAqIFRoZSB0eXBlIG9mIGEgcHJvcGVydHkgdmFsdWUuXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBDb25jZXB0UHJvcGVydHlUeXBlQ29kaW5nVHlwZSA9IHR5cGVvZiBDb25jZXB0UHJvcGVydHlUeXBlQ29kaW5ncztcclxuIl19