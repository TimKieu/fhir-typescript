// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/reference-handling-policy|4.0.1
/**
 * A set of flags that defines how references are supported.
 */
export const ReferenceHandlingPolicyCodes = {
    /**
     * enforced: The server enforces that references have integrity - e.g. it ensures that references can always be resolved. This is typically the case for clinical record systems, but often not the case for middleware/proxy systems.
     */
    ReferenceIntegrityEnforced: "enforced",
    /**
     * literal: The server supports and populates Literal references (i.e. using Reference.reference) where they are known (this code does not guarantee that all references are literal; see 'enforced').
     */
    LiteralReferences: "literal",
    /**
     * local: The server does not support references that point to other servers.
     */
    LocalReferencesOnly: "local",
    /**
     * logical: The server allows logical references (i.e. using Reference.identifier).
     */
    LogicalReferences: "logical",
    /**
     * resolves: The server will attempt to resolve logical references to literal references - i.e. converting Reference.identifier to Reference.reference (if resolution fails, the server may still accept resources; see logical).
     */
    ResolvesReferences: "resolves",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVmZXJlbmNlSGFuZGxpbmdQb2xpY3lDb2Rlcy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvUmVmZXJlbmNlSGFuZGxpbmdQb2xpY3lDb2Rlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyw4RUFBOEU7QUFFOUU7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSw0QkFBNEIsR0FBRztJQUMxQzs7T0FFRztJQUNILDBCQUEwQixFQUFFLFVBQVU7SUFDdEM7O09BRUc7SUFDSCxpQkFBaUIsRUFBRSxTQUFTO0lBQzVCOztPQUVHO0lBQ0gsbUJBQW1CLEVBQUUsT0FBTztJQUM1Qjs7T0FFRztJQUNILGlCQUFpQixFQUFFLFNBQVM7SUFDNUI7O09BRUc7SUFDSCxrQkFBa0IsRUFBRSxVQUFVO0NBQ3RCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjQuY29yZSB2ZXJzaW9uOiA0LjAuMVxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvcmVmZXJlbmNlLWhhbmRsaW5nLXBvbGljeXw0LjAuMVxyXG5cclxuLyoqXHJcbiAqIEEgc2V0IG9mIGZsYWdzIHRoYXQgZGVmaW5lcyBob3cgcmVmZXJlbmNlcyBhcmUgc3VwcG9ydGVkLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IFJlZmVyZW5jZUhhbmRsaW5nUG9saWN5Q29kZXMgPSB7XHJcbiAgLyoqXHJcbiAgICogZW5mb3JjZWQ6IFRoZSBzZXJ2ZXIgZW5mb3JjZXMgdGhhdCByZWZlcmVuY2VzIGhhdmUgaW50ZWdyaXR5IC0gZS5nLiBpdCBlbnN1cmVzIHRoYXQgcmVmZXJlbmNlcyBjYW4gYWx3YXlzIGJlIHJlc29sdmVkLiBUaGlzIGlzIHR5cGljYWxseSB0aGUgY2FzZSBmb3IgY2xpbmljYWwgcmVjb3JkIHN5c3RlbXMsIGJ1dCBvZnRlbiBub3QgdGhlIGNhc2UgZm9yIG1pZGRsZXdhcmUvcHJveHkgc3lzdGVtcy5cclxuICAgKi9cclxuICBSZWZlcmVuY2VJbnRlZ3JpdHlFbmZvcmNlZDogXCJlbmZvcmNlZFwiLFxyXG4gIC8qKlxyXG4gICAqIGxpdGVyYWw6IFRoZSBzZXJ2ZXIgc3VwcG9ydHMgYW5kIHBvcHVsYXRlcyBMaXRlcmFsIHJlZmVyZW5jZXMgKGkuZS4gdXNpbmcgUmVmZXJlbmNlLnJlZmVyZW5jZSkgd2hlcmUgdGhleSBhcmUga25vd24gKHRoaXMgY29kZSBkb2VzIG5vdCBndWFyYW50ZWUgdGhhdCBhbGwgcmVmZXJlbmNlcyBhcmUgbGl0ZXJhbDsgc2VlICdlbmZvcmNlZCcpLlxyXG4gICAqL1xyXG4gIExpdGVyYWxSZWZlcmVuY2VzOiBcImxpdGVyYWxcIixcclxuICAvKipcclxuICAgKiBsb2NhbDogVGhlIHNlcnZlciBkb2VzIG5vdCBzdXBwb3J0IHJlZmVyZW5jZXMgdGhhdCBwb2ludCB0byBvdGhlciBzZXJ2ZXJzLlxyXG4gICAqL1xyXG4gIExvY2FsUmVmZXJlbmNlc09ubHk6IFwibG9jYWxcIixcclxuICAvKipcclxuICAgKiBsb2dpY2FsOiBUaGUgc2VydmVyIGFsbG93cyBsb2dpY2FsIHJlZmVyZW5jZXMgKGkuZS4gdXNpbmcgUmVmZXJlbmNlLmlkZW50aWZpZXIpLlxyXG4gICAqL1xyXG4gIExvZ2ljYWxSZWZlcmVuY2VzOiBcImxvZ2ljYWxcIixcclxuICAvKipcclxuICAgKiByZXNvbHZlczogVGhlIHNlcnZlciB3aWxsIGF0dGVtcHQgdG8gcmVzb2x2ZSBsb2dpY2FsIHJlZmVyZW5jZXMgdG8gbGl0ZXJhbCByZWZlcmVuY2VzIC0gaS5lLiBjb252ZXJ0aW5nIFJlZmVyZW5jZS5pZGVudGlmaWVyIHRvIFJlZmVyZW5jZS5yZWZlcmVuY2UgKGlmIHJlc29sdXRpb24gZmFpbHMsIHRoZSBzZXJ2ZXIgbWF5IHN0aWxsIGFjY2VwdCByZXNvdXJjZXM7IHNlZSBsb2dpY2FsKS5cclxuICAgKi9cclxuICBSZXNvbHZlc1JlZmVyZW5jZXM6IFwicmVzb2x2ZXNcIixcclxufSBhcyBjb25zdDtcclxuXHJcbi8qKlxyXG4gKiBBIHNldCBvZiBmbGFncyB0aGF0IGRlZmluZXMgaG93IHJlZmVyZW5jZXMgYXJlIHN1cHBvcnRlZC5cclxuICovXHJcbmV4cG9ydCB0eXBlIFJlZmVyZW5jZUhhbmRsaW5nUG9saWN5Q29kZVR5cGUgPSB0eXBlb2YgUmVmZXJlbmNlSGFuZGxpbmdQb2xpY3lDb2Rlc1trZXlvZiB0eXBlb2YgUmVmZXJlbmNlSGFuZGxpbmdQb2xpY3lDb2Rlc107XHJcbiJdfQ==