// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/substance-category|4.0.1
import { Coding } from '../fhir/Coding.js';
/**
 * Substance category codes
 */
export const SubstanceCategoryCodings = {
    /**
     * allergen: A substance that causes an allergic reaction.
     */
    Allergen: new Coding({
        display: "Allergen",
        code: "allergen",
        system: "http://terminology.hl7.org/CodeSystem/substance-category",
    }),
    /**
     * biological: A substance that is produced by or extracted from a biological source.
     */
    BiologicalSubstance: new Coding({
        display: "Biological Substance",
        code: "biological",
        system: "http://terminology.hl7.org/CodeSystem/substance-category",
    }),
    /**
     * body: A substance that comes directly from a human or an animal (e.g. blood, urine, feces, tears, etc.).
     */
    BodySubstance: new Coding({
        display: "Body Substance",
        code: "body",
        system: "http://terminology.hl7.org/CodeSystem/substance-category",
    }),
    /**
     * chemical: Any organic or inorganic substance of a particular molecular identity, including -- (i) any combination of such substances occurring in whole or in part as a result of a chemical reaction or occurring in nature and (ii) any element or uncombined radical (http://www.epa.gov/opptintr/import-export/pubs/importguide.pdf).
     */
    Chemical: new Coding({
        display: "Chemical",
        code: "chemical",
        system: "http://terminology.hl7.org/CodeSystem/substance-category",
    }),
    /**
     * drug: A substance intended for use in the diagnosis, cure, mitigation, treatment, or prevention of disease in man or other animals (Federal Food Drug and Cosmetic Act).
     */
    DrugOrMedicament: new Coding({
        display: "Drug or Medicament",
        code: "drug",
        system: "http://terminology.hl7.org/CodeSystem/substance-category",
    }),
    /**
     * food: A food, dietary ingredient, or dietary supplement for human or animal.
     */
    DietarySubstance: new Coding({
        display: "Dietary Substance",
        code: "food",
        system: "http://terminology.hl7.org/CodeSystem/substance-category",
    }),
    /**
     * material: A finished product which is not normally ingested, absorbed or injected (e.g. steel, iron, wood, plastic and paper).
     */
    Material: new Coding({
        display: "Material",
        code: "material",
        system: "http://terminology.hl7.org/CodeSystem/substance-category",
    }),
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3Vic3RhbmNlQ2F0ZWdvcnlDb2RpbmdzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9TdWJzdGFuY2VDYXRlZ29yeUNvZGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLCtDQUErQztBQUMvQyxrQ0FBa0M7QUFDbEMsdUVBQXVFO0FBRXZFLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQTtBQUUxQzs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLHdCQUF3QixHQUFHO0lBQ3RDOztPQUVHO0lBQ0gsUUFBUSxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ25CLE9BQU8sRUFBRSxVQUFVO1FBQ25CLElBQUksRUFBRSxVQUFVO1FBQ2hCLE1BQU0sRUFBRSwwREFBMEQ7S0FDbkUsQ0FBQztJQUNGOztPQUVHO0lBQ0gsbUJBQW1CLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDOUIsT0FBTyxFQUFFLHNCQUFzQjtRQUMvQixJQUFJLEVBQUUsWUFBWTtRQUNsQixNQUFNLEVBQUUsMERBQTBEO0tBQ25FLENBQUM7SUFDRjs7T0FFRztJQUNILGFBQWEsRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUN4QixPQUFPLEVBQUUsZ0JBQWdCO1FBQ3pCLElBQUksRUFBRSxNQUFNO1FBQ1osTUFBTSxFQUFFLDBEQUEwRDtLQUNuRSxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxRQUFRLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDbkIsT0FBTyxFQUFFLFVBQVU7UUFDbkIsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLDBEQUEwRDtLQUNuRSxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxnQkFBZ0IsRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUMzQixPQUFPLEVBQUUsb0JBQW9CO1FBQzdCLElBQUksRUFBRSxNQUFNO1FBQ1osTUFBTSxFQUFFLDBEQUEwRDtLQUNuRSxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxnQkFBZ0IsRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUMzQixPQUFPLEVBQUUsbUJBQW1CO1FBQzVCLElBQUksRUFBRSxNQUFNO1FBQ1osTUFBTSxFQUFFLDBEQUEwRDtLQUNuRSxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxRQUFRLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDbkIsT0FBTyxFQUFFLFVBQVU7UUFDbkIsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLDBEQUEwRDtLQUNuRSxDQUFDO0NBQ00sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNC5jb3JlIHZlcnNpb246IDQuMC4xXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9zdWJzdGFuY2UtY2F0ZWdvcnl8NC4wLjFcclxuXHJcbmltcG9ydCB7IENvZGluZyB9IGZyb20gJy4uL2ZoaXIvQ29kaW5nLmpzJ1xyXG5cclxuLyoqXHJcbiAqIFN1YnN0YW5jZSBjYXRlZ29yeSBjb2Rlc1xyXG4gKi9cclxuZXhwb3J0IGNvbnN0IFN1YnN0YW5jZUNhdGVnb3J5Q29kaW5ncyA9IHtcclxuICAvKipcclxuICAgKiBhbGxlcmdlbjogQSBzdWJzdGFuY2UgdGhhdCBjYXVzZXMgYW4gYWxsZXJnaWMgcmVhY3Rpb24uXHJcbiAgICovXHJcbiAgQWxsZXJnZW46IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJBbGxlcmdlblwiLFxyXG4gICAgY29kZTogXCJhbGxlcmdlblwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vc3Vic3RhbmNlLWNhdGVnb3J5XCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogYmlvbG9naWNhbDogQSBzdWJzdGFuY2UgdGhhdCBpcyBwcm9kdWNlZCBieSBvciBleHRyYWN0ZWQgZnJvbSBhIGJpb2xvZ2ljYWwgc291cmNlLlxyXG4gICAqL1xyXG4gIEJpb2xvZ2ljYWxTdWJzdGFuY2U6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJCaW9sb2dpY2FsIFN1YnN0YW5jZVwiLFxyXG4gICAgY29kZTogXCJiaW9sb2dpY2FsXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9zdWJzdGFuY2UtY2F0ZWdvcnlcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBib2R5OiBBIHN1YnN0YW5jZSB0aGF0IGNvbWVzIGRpcmVjdGx5IGZyb20gYSBodW1hbiBvciBhbiBhbmltYWwgKGUuZy4gYmxvb2QsIHVyaW5lLCBmZWNlcywgdGVhcnMsIGV0Yy4pLlxyXG4gICAqL1xyXG4gIEJvZHlTdWJzdGFuY2U6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJCb2R5IFN1YnN0YW5jZVwiLFxyXG4gICAgY29kZTogXCJib2R5XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9zdWJzdGFuY2UtY2F0ZWdvcnlcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBjaGVtaWNhbDogQW55IG9yZ2FuaWMgb3IgaW5vcmdhbmljIHN1YnN0YW5jZSBvZiBhIHBhcnRpY3VsYXIgbW9sZWN1bGFyIGlkZW50aXR5LCBpbmNsdWRpbmcgLS0gKGkpIGFueSBjb21iaW5hdGlvbiBvZiBzdWNoIHN1YnN0YW5jZXMgb2NjdXJyaW5nIGluIHdob2xlIG9yIGluIHBhcnQgYXMgYSByZXN1bHQgb2YgYSBjaGVtaWNhbCByZWFjdGlvbiBvciBvY2N1cnJpbmcgaW4gbmF0dXJlIGFuZCAoaWkpIGFueSBlbGVtZW50IG9yIHVuY29tYmluZWQgcmFkaWNhbCAoaHR0cDovL3d3dy5lcGEuZ292L29wcHRpbnRyL2ltcG9ydC1leHBvcnQvcHVicy9pbXBvcnRndWlkZS5wZGYpLlxyXG4gICAqL1xyXG4gIENoZW1pY2FsOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiQ2hlbWljYWxcIixcclxuICAgIGNvZGU6IFwiY2hlbWljYWxcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL3N1YnN0YW5jZS1jYXRlZ29yeVwiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIGRydWc6IEEgc3Vic3RhbmNlIGludGVuZGVkIGZvciB1c2UgaW4gdGhlIGRpYWdub3NpcywgY3VyZSwgbWl0aWdhdGlvbiwgdHJlYXRtZW50LCBvciBwcmV2ZW50aW9uIG9mIGRpc2Vhc2UgaW4gbWFuIG9yIG90aGVyIGFuaW1hbHMgKEZlZGVyYWwgRm9vZCBEcnVnIGFuZCBDb3NtZXRpYyBBY3QpLlxyXG4gICAqL1xyXG4gIERydWdPck1lZGljYW1lbnQ6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJEcnVnIG9yIE1lZGljYW1lbnRcIixcclxuICAgIGNvZGU6IFwiZHJ1Z1wiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vc3Vic3RhbmNlLWNhdGVnb3J5XCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogZm9vZDogQSBmb29kLCBkaWV0YXJ5IGluZ3JlZGllbnQsIG9yIGRpZXRhcnkgc3VwcGxlbWVudCBmb3IgaHVtYW4gb3IgYW5pbWFsLlxyXG4gICAqL1xyXG4gIERpZXRhcnlTdWJzdGFuY2U6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJEaWV0YXJ5IFN1YnN0YW5jZVwiLFxyXG4gICAgY29kZTogXCJmb29kXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9zdWJzdGFuY2UtY2F0ZWdvcnlcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBtYXRlcmlhbDogQSBmaW5pc2hlZCBwcm9kdWN0IHdoaWNoIGlzIG5vdCBub3JtYWxseSBpbmdlc3RlZCwgYWJzb3JiZWQgb3IgaW5qZWN0ZWQgKGUuZy4gc3RlZWwsIGlyb24sIHdvb2QsIHBsYXN0aWMgYW5kIHBhcGVyKS5cclxuICAgKi9cclxuICBNYXRlcmlhbDogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIk1hdGVyaWFsXCIsXHJcbiAgICBjb2RlOiBcIm1hdGVyaWFsXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9zdWJzdGFuY2UtY2F0ZWdvcnlcIixcclxuICB9KSxcclxufSBhcyBjb25zdDtcclxuXHJcbi8qKlxyXG4gKiBTdWJzdGFuY2UgY2F0ZWdvcnkgY29kZXNcclxuICovXHJcbmV4cG9ydCB0eXBlIFN1YnN0YW5jZUNhdGVnb3J5Q29kaW5nVHlwZSA9IHR5cGVvZiBTdWJzdGFuY2VDYXRlZ29yeUNvZGluZ3M7XHJcbiJdfQ==