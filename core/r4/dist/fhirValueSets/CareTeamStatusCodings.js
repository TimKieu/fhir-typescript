// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/care-team-status|4.0.1
import { Coding } from '../fhir/Coding.js';
/**
 * Indicates the status of the care team.
 */
export const CareTeamStatusCodings = {
    /**
     * active: The care team is currently participating in the coordination and delivery of care.
     */
    Active: new Coding({
        display: "Active",
        code: "active",
        system: "http://hl7.org/fhir/care-team-status",
    }),
    /**
     * entered-in-error: The care team should have never existed.
     */
    EnteredInError: new Coding({
        display: "Entered in Error",
        code: "entered-in-error",
        system: "http://hl7.org/fhir/care-team-status",
    }),
    /**
     * inactive: The care team was, but is no longer, participating in the coordination and delivery of care.
     */
    Inactive: new Coding({
        display: "Inactive",
        code: "inactive",
        system: "http://hl7.org/fhir/care-team-status",
    }),
    /**
     * proposed: The care team has been drafted and proposed, but not yet participating in the coordination and delivery of patient care.
     */
    Proposed: new Coding({
        display: "Proposed",
        code: "proposed",
        system: "http://hl7.org/fhir/care-team-status",
    }),
    /**
     * suspended: The care team is temporarily on hold or suspended and not participating in the coordination and delivery of care.
     */
    Suspended: new Coding({
        display: "Suspended",
        code: "suspended",
        system: "http://hl7.org/fhir/care-team-status",
    }),
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2FyZVRlYW1TdGF0dXNDb2RpbmdzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9DYXJlVGVhbVN0YXR1c0NvZGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLCtDQUErQztBQUMvQyxrQ0FBa0M7QUFDbEMscUVBQXFFO0FBRXJFLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQTtBQUUxQzs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUFHO0lBQ25DOztPQUVHO0lBQ0gsTUFBTSxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ2pCLE9BQU8sRUFBRSxRQUFRO1FBQ2pCLElBQUksRUFBRSxRQUFRO1FBQ2QsTUFBTSxFQUFFLHNDQUFzQztLQUMvQyxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxjQUFjLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDekIsT0FBTyxFQUFFLGtCQUFrQjtRQUMzQixJQUFJLEVBQUUsa0JBQWtCO1FBQ3hCLE1BQU0sRUFBRSxzQ0FBc0M7S0FDL0MsQ0FBQztJQUNGOztPQUVHO0lBQ0gsUUFBUSxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ25CLE9BQU8sRUFBRSxVQUFVO1FBQ25CLElBQUksRUFBRSxVQUFVO1FBQ2hCLE1BQU0sRUFBRSxzQ0FBc0M7S0FDL0MsQ0FBQztJQUNGOztPQUVHO0lBQ0gsUUFBUSxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ25CLE9BQU8sRUFBRSxVQUFVO1FBQ25CLElBQUksRUFBRSxVQUFVO1FBQ2hCLE1BQU0sRUFBRSxzQ0FBc0M7S0FDL0MsQ0FBQztJQUNGOztPQUVHO0lBQ0gsU0FBUyxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ3BCLE9BQU8sRUFBRSxXQUFXO1FBQ3BCLElBQUksRUFBRSxXQUFXO1FBQ2pCLE1BQU0sRUFBRSxzQ0FBc0M7S0FDL0MsQ0FBQztDQUNNLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjQuY29yZSB2ZXJzaW9uOiA0LjAuMVxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvY2FyZS10ZWFtLXN0YXR1c3w0LjAuMVxyXG5cclxuaW1wb3J0IHsgQ29kaW5nIH0gZnJvbSAnLi4vZmhpci9Db2RpbmcuanMnXHJcblxyXG4vKipcclxuICogSW5kaWNhdGVzIHRoZSBzdGF0dXMgb2YgdGhlIGNhcmUgdGVhbS5cclxuICovXHJcbmV4cG9ydCBjb25zdCBDYXJlVGVhbVN0YXR1c0NvZGluZ3MgPSB7XHJcbiAgLyoqXHJcbiAgICogYWN0aXZlOiBUaGUgY2FyZSB0ZWFtIGlzIGN1cnJlbnRseSBwYXJ0aWNpcGF0aW5nIGluIHRoZSBjb29yZGluYXRpb24gYW5kIGRlbGl2ZXJ5IG9mIGNhcmUuXHJcbiAgICovXHJcbiAgQWN0aXZlOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiQWN0aXZlXCIsXHJcbiAgICBjb2RlOiBcImFjdGl2ZVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvY2FyZS10ZWFtLXN0YXR1c1wiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIGVudGVyZWQtaW4tZXJyb3I6IFRoZSBjYXJlIHRlYW0gc2hvdWxkIGhhdmUgbmV2ZXIgZXhpc3RlZC5cclxuICAgKi9cclxuICBFbnRlcmVkSW5FcnJvcjogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIkVudGVyZWQgaW4gRXJyb3JcIixcclxuICAgIGNvZGU6IFwiZW50ZXJlZC1pbi1lcnJvclwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvY2FyZS10ZWFtLXN0YXR1c1wiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIGluYWN0aXZlOiBUaGUgY2FyZSB0ZWFtIHdhcywgYnV0IGlzIG5vIGxvbmdlciwgcGFydGljaXBhdGluZyBpbiB0aGUgY29vcmRpbmF0aW9uIGFuZCBkZWxpdmVyeSBvZiBjYXJlLlxyXG4gICAqL1xyXG4gIEluYWN0aXZlOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiSW5hY3RpdmVcIixcclxuICAgIGNvZGU6IFwiaW5hY3RpdmVcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2NhcmUtdGVhbS1zdGF0dXNcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBwcm9wb3NlZDogVGhlIGNhcmUgdGVhbSBoYXMgYmVlbiBkcmFmdGVkIGFuZCBwcm9wb3NlZCwgYnV0IG5vdCB5ZXQgcGFydGljaXBhdGluZyBpbiB0aGUgY29vcmRpbmF0aW9uIGFuZCBkZWxpdmVyeSBvZiBwYXRpZW50IGNhcmUuXHJcbiAgICovXHJcbiAgUHJvcG9zZWQ6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJQcm9wb3NlZFwiLFxyXG4gICAgY29kZTogXCJwcm9wb3NlZFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvY2FyZS10ZWFtLXN0YXR1c1wiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIHN1c3BlbmRlZDogVGhlIGNhcmUgdGVhbSBpcyB0ZW1wb3JhcmlseSBvbiBob2xkIG9yIHN1c3BlbmRlZCBhbmQgbm90IHBhcnRpY2lwYXRpbmcgaW4gdGhlIGNvb3JkaW5hdGlvbiBhbmQgZGVsaXZlcnkgb2YgY2FyZS5cclxuICAgKi9cclxuICBTdXNwZW5kZWQ6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJTdXNwZW5kZWRcIixcclxuICAgIGNvZGU6IFwic3VzcGVuZGVkXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9jYXJlLXRlYW0tc3RhdHVzXCIsXHJcbiAgfSksXHJcbn0gYXMgY29uc3Q7XHJcblxyXG4vKipcclxuICogSW5kaWNhdGVzIHRoZSBzdGF0dXMgb2YgdGhlIGNhcmUgdGVhbS5cclxuICovXHJcbmV4cG9ydCB0eXBlIENhcmVUZWFtU3RhdHVzQ29kaW5nVHlwZSA9IHR5cGVvZiBDYXJlVGVhbVN0YXR1c0NvZGluZ3M7XHJcbiJdfQ==