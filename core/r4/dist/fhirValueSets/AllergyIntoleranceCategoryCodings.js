// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/allergy-intolerance-category|4.0.1
/**
 * Category of an identified substance associated with allergies or intolerances.
 */
export const AllergyIntoleranceCategoryCodings = {
    /**
     * biologic: A preparation that is synthesized from living organisms or their products, especially a human or animal protein, such as a hormone or antitoxin, that is used as a diagnostic, preventive, or therapeutic agent. Examples of biologic medications include: vaccines; allergenic extracts, which are used for both diagnosis and treatment (for example, allergy shots); gene therapies; cellular therapies.  There are other biologic products, such as tissues, which are not typically associated with allergies.
     */
    Biologic: {
        display: "Biologic",
        code: "biologic",
        system: "http://hl7.org/fhir/allergy-intolerance-category",
    },
    /**
     * environment: Any substances that are encountered in the environment, including any substance not already classified as food, medication, or biologic.
     */
    Environment: {
        display: "Environment",
        code: "environment",
        system: "http://hl7.org/fhir/allergy-intolerance-category",
    },
    /**
     * food: Any substance consumed to provide nutritional support for the body.
     */
    Food: {
        display: "Food",
        code: "food",
        system: "http://hl7.org/fhir/allergy-intolerance-category",
    },
    /**
     * medication: Substances administered to achieve a physiological effect.
     */
    Medication: {
        display: "Medication",
        code: "medication",
        system: "http://hl7.org/fhir/allergy-intolerance-category",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQWxsZXJneUludG9sZXJhbmNlQ2F0ZWdvcnlDb2RpbmdzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9BbGxlcmd5SW50b2xlcmFuY2VDYXRlZ29yeUNvZGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLCtDQUErQztBQUMvQyxrQ0FBa0M7QUFDbEMsaUZBQWlGO0FBMEJqRjs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLGlDQUFpQyxHQUF3QztJQUNwRjs7T0FFRztJQUNILFFBQVEsRUFBRTtRQUNSLE9BQU8sRUFBRSxVQUFVO1FBQ25CLElBQUksRUFBRSxVQUFVO1FBQ2hCLE1BQU0sRUFBRSxrREFBa0Q7S0FDM0Q7SUFDRDs7T0FFRztJQUNILFdBQVcsRUFBRTtRQUNYLE9BQU8sRUFBRSxhQUFhO1FBQ3RCLElBQUksRUFBRSxhQUFhO1FBQ25CLE1BQU0sRUFBRSxrREFBa0Q7S0FDM0Q7SUFDRDs7T0FFRztJQUNILElBQUksRUFBRTtRQUNKLE9BQU8sRUFBRSxNQUFNO1FBQ2YsSUFBSSxFQUFFLE1BQU07UUFDWixNQUFNLEVBQUUsa0RBQWtEO0tBQzNEO0lBQ0Q7O09BRUc7SUFDSCxVQUFVLEVBQUU7UUFDVixPQUFPLEVBQUUsWUFBWTtRQUNyQixJQUFJLEVBQUUsWUFBWTtRQUNsQixNQUFNLEVBQUUsa0RBQWtEO0tBQzNEO0NBQ08sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNC5jb3JlIHZlcnNpb246IDQuMC4xXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9hbGxlcmd5LWludG9sZXJhbmNlLWNhdGVnb3J5fDQuMC4xXHJcblxyXG5pbXBvcnQgeyBDb2RpbmdBcmdzIH0gZnJvbSAnLi4vZmhpci9Db2RpbmcuanMnXHJcblxyXG4vKipcclxuICogQ2F0ZWdvcnkgb2YgYW4gaWRlbnRpZmllZCBzdWJzdGFuY2UgYXNzb2NpYXRlZCB3aXRoIGFsbGVyZ2llcyBvciBpbnRvbGVyYW5jZXMuXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBBbGxlcmd5SW50b2xlcmFuY2VDYXRlZ29yeUNvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogYmlvbG9naWM6IEEgcHJlcGFyYXRpb24gdGhhdCBpcyBzeW50aGVzaXplZCBmcm9tIGxpdmluZyBvcmdhbmlzbXMgb3IgdGhlaXIgcHJvZHVjdHMsIGVzcGVjaWFsbHkgYSBodW1hbiBvciBhbmltYWwgcHJvdGVpbiwgc3VjaCBhcyBhIGhvcm1vbmUgb3IgYW50aXRveGluLCB0aGF0IGlzIHVzZWQgYXMgYSBkaWFnbm9zdGljLCBwcmV2ZW50aXZlLCBvciB0aGVyYXBldXRpYyBhZ2VudC4gRXhhbXBsZXMgb2YgYmlvbG9naWMgbWVkaWNhdGlvbnMgaW5jbHVkZTogdmFjY2luZXM7IGFsbGVyZ2VuaWMgZXh0cmFjdHMsIHdoaWNoIGFyZSB1c2VkIGZvciBib3RoIGRpYWdub3NpcyBhbmQgdHJlYXRtZW50IChmb3IgZXhhbXBsZSwgYWxsZXJneSBzaG90cyk7IGdlbmUgdGhlcmFwaWVzOyBjZWxsdWxhciB0aGVyYXBpZXMuICBUaGVyZSBhcmUgb3RoZXIgYmlvbG9naWMgcHJvZHVjdHMsIHN1Y2ggYXMgdGlzc3Vlcywgd2hpY2ggYXJlIG5vdCB0eXBpY2FsbHkgYXNzb2NpYXRlZCB3aXRoIGFsbGVyZ2llcy5cclxuICAgKi9cclxuICBCaW9sb2dpYzogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBlbnZpcm9ubWVudDogQW55IHN1YnN0YW5jZXMgdGhhdCBhcmUgZW5jb3VudGVyZWQgaW4gdGhlIGVudmlyb25tZW50LCBpbmNsdWRpbmcgYW55IHN1YnN0YW5jZSBub3QgYWxyZWFkeSBjbGFzc2lmaWVkIGFzIGZvb2QsIG1lZGljYXRpb24sIG9yIGJpb2xvZ2ljLlxyXG4gICAqL1xyXG4gIEVudmlyb25tZW50OiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIGZvb2Q6IEFueSBzdWJzdGFuY2UgY29uc3VtZWQgdG8gcHJvdmlkZSBudXRyaXRpb25hbCBzdXBwb3J0IGZvciB0aGUgYm9keS5cclxuICAgKi9cclxuICBGb29kOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIG1lZGljYXRpb246IFN1YnN0YW5jZXMgYWRtaW5pc3RlcmVkIHRvIGFjaGlldmUgYSBwaHlzaW9sb2dpY2FsIGVmZmVjdC5cclxuICAgKi9cclxuICBNZWRpY2F0aW9uOiBDb2RpbmdBcmdzO1xyXG59XHJcblxyXG4vKipcclxuICogQ2F0ZWdvcnkgb2YgYW4gaWRlbnRpZmllZCBzdWJzdGFuY2UgYXNzb2NpYXRlZCB3aXRoIGFsbGVyZ2llcyBvciBpbnRvbGVyYW5jZXMuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgQWxsZXJneUludG9sZXJhbmNlQ2F0ZWdvcnlDb2RpbmdzOkFsbGVyZ3lJbnRvbGVyYW5jZUNhdGVnb3J5Q29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBiaW9sb2dpYzogQSBwcmVwYXJhdGlvbiB0aGF0IGlzIHN5bnRoZXNpemVkIGZyb20gbGl2aW5nIG9yZ2FuaXNtcyBvciB0aGVpciBwcm9kdWN0cywgZXNwZWNpYWxseSBhIGh1bWFuIG9yIGFuaW1hbCBwcm90ZWluLCBzdWNoIGFzIGEgaG9ybW9uZSBvciBhbnRpdG94aW4sIHRoYXQgaXMgdXNlZCBhcyBhIGRpYWdub3N0aWMsIHByZXZlbnRpdmUsIG9yIHRoZXJhcGV1dGljIGFnZW50LiBFeGFtcGxlcyBvZiBiaW9sb2dpYyBtZWRpY2F0aW9ucyBpbmNsdWRlOiB2YWNjaW5lczsgYWxsZXJnZW5pYyBleHRyYWN0cywgd2hpY2ggYXJlIHVzZWQgZm9yIGJvdGggZGlhZ25vc2lzIGFuZCB0cmVhdG1lbnQgKGZvciBleGFtcGxlLCBhbGxlcmd5IHNob3RzKTsgZ2VuZSB0aGVyYXBpZXM7IGNlbGx1bGFyIHRoZXJhcGllcy4gIFRoZXJlIGFyZSBvdGhlciBiaW9sb2dpYyBwcm9kdWN0cywgc3VjaCBhcyB0aXNzdWVzLCB3aGljaCBhcmUgbm90IHR5cGljYWxseSBhc3NvY2lhdGVkIHdpdGggYWxsZXJnaWVzLlxyXG4gICAqL1xyXG4gIEJpb2xvZ2ljOiB7XHJcbiAgICBkaXNwbGF5OiBcIkJpb2xvZ2ljXCIsXHJcbiAgICBjb2RlOiBcImJpb2xvZ2ljXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9hbGxlcmd5LWludG9sZXJhbmNlLWNhdGVnb3J5XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBlbnZpcm9ubWVudDogQW55IHN1YnN0YW5jZXMgdGhhdCBhcmUgZW5jb3VudGVyZWQgaW4gdGhlIGVudmlyb25tZW50LCBpbmNsdWRpbmcgYW55IHN1YnN0YW5jZSBub3QgYWxyZWFkeSBjbGFzc2lmaWVkIGFzIGZvb2QsIG1lZGljYXRpb24sIG9yIGJpb2xvZ2ljLlxyXG4gICAqL1xyXG4gIEVudmlyb25tZW50OiB7XHJcbiAgICBkaXNwbGF5OiBcIkVudmlyb25tZW50XCIsXHJcbiAgICBjb2RlOiBcImVudmlyb25tZW50XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9hbGxlcmd5LWludG9sZXJhbmNlLWNhdGVnb3J5XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBmb29kOiBBbnkgc3Vic3RhbmNlIGNvbnN1bWVkIHRvIHByb3ZpZGUgbnV0cml0aW9uYWwgc3VwcG9ydCBmb3IgdGhlIGJvZHkuXHJcbiAgICovXHJcbiAgRm9vZDoge1xyXG4gICAgZGlzcGxheTogXCJGb29kXCIsXHJcbiAgICBjb2RlOiBcImZvb2RcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2FsbGVyZ3ktaW50b2xlcmFuY2UtY2F0ZWdvcnlcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIG1lZGljYXRpb246IFN1YnN0YW5jZXMgYWRtaW5pc3RlcmVkIHRvIGFjaGlldmUgYSBwaHlzaW9sb2dpY2FsIGVmZmVjdC5cclxuICAgKi9cclxuICBNZWRpY2F0aW9uOiB7XHJcbiAgICBkaXNwbGF5OiBcIk1lZGljYXRpb25cIixcclxuICAgIGNvZGU6IFwibWVkaWNhdGlvblwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvYWxsZXJneS1pbnRvbGVyYW5jZS1jYXRlZ29yeVwiLFxyXG4gIH0sXHJcbn0gYXMgY29uc3Q7XHJcbiJdfQ==