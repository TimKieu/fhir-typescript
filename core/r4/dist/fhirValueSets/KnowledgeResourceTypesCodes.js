// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/knowledge-resource-types|4.0.1
/**
 * A list of all the knowledge resource types defined in this version of the FHIR specification.
 */
export const KnowledgeResourceTypesCodes = {
    /**
     * ActivityDefinition: The definition of a specific activity to be taken, independent of any particular patient or context.
     */
    ActivityDefinition: "ActivityDefinition",
    /**
     * CodeSystem: A set of codes drawn from one or more code systems.
     */
    CodeSystem: "CodeSystem",
    /**
     * ConceptMap: A map from one set of concepts to one or more other concepts.
     */
    ConceptMap: "ConceptMap",
    /**
     * Library: Represents a library of quality improvement components.
     */
    Library: "Library",
    /**
     * Measure: A quality measure definition.
     */
    Measure: "Measure",
    /**
     * PlanDefinition: The definition of a plan for a series of actions, independent of any specific patient or context.
     */
    PlanDefinition: "PlanDefinition",
    /**
     * StructureDefinition: Structural Definition.
     */
    StructureDefinition: "StructureDefinition",
    /**
     * StructureMap: A Map of relationships between 2 structures that can be used to transform data.
     */
    StructureMap: "StructureMap",
    /**
     * ValueSet: A set of codes drawn from one or more code systems.
     */
    ValueSet: "ValueSet",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiS25vd2xlZGdlUmVzb3VyY2VUeXBlc0NvZGVzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9Lbm93bGVkZ2VSZXNvdXJjZVR5cGVzQ29kZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLCtDQUErQztBQUMvQyxrQ0FBa0M7QUFDbEMsNkVBQTZFO0FBRTdFOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sMkJBQTJCLEdBQUc7SUFDekM7O09BRUc7SUFDSCxrQkFBa0IsRUFBRSxvQkFBb0I7SUFDeEM7O09BRUc7SUFDSCxVQUFVLEVBQUUsWUFBWTtJQUN4Qjs7T0FFRztJQUNILFVBQVUsRUFBRSxZQUFZO0lBQ3hCOztPQUVHO0lBQ0gsT0FBTyxFQUFFLFNBQVM7SUFDbEI7O09BRUc7SUFDSCxPQUFPLEVBQUUsU0FBUztJQUNsQjs7T0FFRztJQUNILGNBQWMsRUFBRSxnQkFBZ0I7SUFDaEM7O09BRUc7SUFDSCxtQkFBbUIsRUFBRSxxQkFBcUI7SUFDMUM7O09BRUc7SUFDSCxZQUFZLEVBQUUsY0FBYztJQUM1Qjs7T0FFRztJQUNILFFBQVEsRUFBRSxVQUFVO0NBQ1osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNC5jb3JlIHZlcnNpb246IDQuMC4xXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9rbm93bGVkZ2UtcmVzb3VyY2UtdHlwZXN8NC4wLjFcclxuXHJcbi8qKlxyXG4gKiBBIGxpc3Qgb2YgYWxsIHRoZSBrbm93bGVkZ2UgcmVzb3VyY2UgdHlwZXMgZGVmaW5lZCBpbiB0aGlzIHZlcnNpb24gb2YgdGhlIEZISVIgc3BlY2lmaWNhdGlvbi5cclxuICovXHJcbmV4cG9ydCBjb25zdCBLbm93bGVkZ2VSZXNvdXJjZVR5cGVzQ29kZXMgPSB7XHJcbiAgLyoqXHJcbiAgICogQWN0aXZpdHlEZWZpbml0aW9uOiBUaGUgZGVmaW5pdGlvbiBvZiBhIHNwZWNpZmljIGFjdGl2aXR5IHRvIGJlIHRha2VuLCBpbmRlcGVuZGVudCBvZiBhbnkgcGFydGljdWxhciBwYXRpZW50IG9yIGNvbnRleHQuXHJcbiAgICovXHJcbiAgQWN0aXZpdHlEZWZpbml0aW9uOiBcIkFjdGl2aXR5RGVmaW5pdGlvblwiLFxyXG4gIC8qKlxyXG4gICAqIENvZGVTeXN0ZW06IEEgc2V0IG9mIGNvZGVzIGRyYXduIGZyb20gb25lIG9yIG1vcmUgY29kZSBzeXN0ZW1zLlxyXG4gICAqL1xyXG4gIENvZGVTeXN0ZW06IFwiQ29kZVN5c3RlbVwiLFxyXG4gIC8qKlxyXG4gICAqIENvbmNlcHRNYXA6IEEgbWFwIGZyb20gb25lIHNldCBvZiBjb25jZXB0cyB0byBvbmUgb3IgbW9yZSBvdGhlciBjb25jZXB0cy5cclxuICAgKi9cclxuICBDb25jZXB0TWFwOiBcIkNvbmNlcHRNYXBcIixcclxuICAvKipcclxuICAgKiBMaWJyYXJ5OiBSZXByZXNlbnRzIGEgbGlicmFyeSBvZiBxdWFsaXR5IGltcHJvdmVtZW50IGNvbXBvbmVudHMuXHJcbiAgICovXHJcbiAgTGlicmFyeTogXCJMaWJyYXJ5XCIsXHJcbiAgLyoqXHJcbiAgICogTWVhc3VyZTogQSBxdWFsaXR5IG1lYXN1cmUgZGVmaW5pdGlvbi5cclxuICAgKi9cclxuICBNZWFzdXJlOiBcIk1lYXN1cmVcIixcclxuICAvKipcclxuICAgKiBQbGFuRGVmaW5pdGlvbjogVGhlIGRlZmluaXRpb24gb2YgYSBwbGFuIGZvciBhIHNlcmllcyBvZiBhY3Rpb25zLCBpbmRlcGVuZGVudCBvZiBhbnkgc3BlY2lmaWMgcGF0aWVudCBvciBjb250ZXh0LlxyXG4gICAqL1xyXG4gIFBsYW5EZWZpbml0aW9uOiBcIlBsYW5EZWZpbml0aW9uXCIsXHJcbiAgLyoqXHJcbiAgICogU3RydWN0dXJlRGVmaW5pdGlvbjogU3RydWN0dXJhbCBEZWZpbml0aW9uLlxyXG4gICAqL1xyXG4gIFN0cnVjdHVyZURlZmluaXRpb246IFwiU3RydWN0dXJlRGVmaW5pdGlvblwiLFxyXG4gIC8qKlxyXG4gICAqIFN0cnVjdHVyZU1hcDogQSBNYXAgb2YgcmVsYXRpb25zaGlwcyBiZXR3ZWVuIDIgc3RydWN0dXJlcyB0aGF0IGNhbiBiZSB1c2VkIHRvIHRyYW5zZm9ybSBkYXRhLlxyXG4gICAqL1xyXG4gIFN0cnVjdHVyZU1hcDogXCJTdHJ1Y3R1cmVNYXBcIixcclxuICAvKipcclxuICAgKiBWYWx1ZVNldDogQSBzZXQgb2YgY29kZXMgZHJhd24gZnJvbSBvbmUgb3IgbW9yZSBjb2RlIHN5c3RlbXMuXHJcbiAgICovXHJcbiAgVmFsdWVTZXQ6IFwiVmFsdWVTZXRcIixcclxufSBhcyBjb25zdDtcclxuXHJcbi8qKlxyXG4gKiBBIGxpc3Qgb2YgYWxsIHRoZSBrbm93bGVkZ2UgcmVzb3VyY2UgdHlwZXMgZGVmaW5lZCBpbiB0aGlzIHZlcnNpb24gb2YgdGhlIEZISVIgc3BlY2lmaWNhdGlvbi5cclxuICovXHJcbmV4cG9ydCB0eXBlIEtub3dsZWRnZVJlc291cmNlVHlwZXNDb2RlVHlwZSA9IHR5cGVvZiBLbm93bGVkZ2VSZXNvdXJjZVR5cGVzQ29kZXNba2V5b2YgdHlwZW9mIEtub3dsZWRnZVJlc291cmNlVHlwZXNDb2Rlc107XHJcbiJdfQ==