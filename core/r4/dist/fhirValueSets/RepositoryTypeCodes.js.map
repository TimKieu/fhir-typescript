{"version":3,"file":"RepositoryTypeCodes.js","sources":["../../src/fhirValueSets/RepositoryTypeCodes.ts"],"sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4.core version: 4.0.1\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR ValueSet: http://hl7.org/fhir/ValueSet/repository-type|4.0.1\r\n\r\n/**\r\n * Type for access of external URI.\r\n */\r\nexport const RepositoryTypeCodes = {\r\n  /**\r\n   * directlink: When URL is clicked, the resource can be seen directly (by webpage or by download link format).\r\n   */\r\n  ClickAndSee: \"directlink\",\r\n  /**\r\n   * login: When logged into the website, the resource can be seen.\r\n   */\r\n  ResultCannotBeAccessUnlessAnAccountIsLoggedIn: \"login\",\r\n  /**\r\n   * oauth: When logged in and  follow the API in the website related with URL, the resource can be seen.\r\n   */\r\n  ResultNeedToBeFetchedWithAPIAndNeedLOGINOrCookiesAreRequiredWhenVisitingTheLinkOfResource: \"oauth\",\r\n  /**\r\n   * openapi: When the API method (e.g. [base_url]/[parameter]) related with the URL of the website is executed, the resource can be seen directly (usually in JSON or XML format).\r\n   */\r\n  TheURLIsTheRESTfulOrOtherKindOfAPIThatCanAccessToTheResult: \"openapi\",\r\n  /**\r\n   * other: Some other complicated or particular way to get resource from URL.\r\n   */\r\n  SomeOtherComplicatedOrParticularWayToGetResourceFromURL: \"other\",\r\n} as const;\r\n\r\n/**\r\n * Type for access of external URI.\r\n */\r\nexport type RepositoryTypeCodeType = typeof RepositoryTypeCodes[keyof typeof RepositoryTypeCodes];\r\n"],"names":[],"mappings":";;AAAA;AACA;AACA;AACA;AAEA;;AAEG;AACU,IAAA,mBAAmB,GAAG;AACjC;;AAEG;AACH,IAAA,WAAW,EAAE,YAAY;AACzB;;AAEG;AACH,IAAA,6CAA6C,EAAE,OAAO;AACtD;;AAEG;AACH,IAAA,yFAAyF,EAAE,OAAO;AAClG;;AAEG;AACH,IAAA,0DAA0D,EAAE,SAAS;AACrE;;AAEG;AACH,IAAA,uDAAuD,EAAE,OAAO;;;;;"}