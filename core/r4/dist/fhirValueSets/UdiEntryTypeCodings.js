// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/udi-entry-type|4.0.1
/**
 * Codes to identify how UDI data was entered.
 */
export const UdiEntryTypeCodings = {
    /**
     * barcode: a barcodescanner captured the data from the device label.
     */
    Barcode: {
        display: "Barcode",
        code: "barcode",
        system: "http://hl7.org/fhir/udi-entry-type",
    },
    /**
     * card: The data originated from a patient's implant card and was read by an operator.
     */
    Card: {
        display: "Card",
        code: "card",
        system: "http://hl7.org/fhir/udi-entry-type",
    },
    /**
     * manual: The data was read from the label by a person and manually entered. (e.g.  via a keyboard).
     */
    Manual: {
        display: "Manual",
        code: "manual",
        system: "http://hl7.org/fhir/udi-entry-type",
    },
    /**
     * rfid: An RFID chip reader captured the data from the device label.
     */
    RFID: {
        display: "RFID",
        code: "rfid",
        system: "http://hl7.org/fhir/udi-entry-type",
    },
    /**
     * self-reported: The data originated from a patient source and was not directly scanned or read from a label or card.
     */
    SelfReported: {
        display: "Self Reported",
        code: "self-reported",
        system: "http://hl7.org/fhir/udi-entry-type",
    },
    /**
     * unknown: The method of data capture has not been determined.
     */
    Unknown: {
        display: "Unknown",
        code: "unknown",
        system: "http://hl7.org/fhir/udi-entry-type",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVWRpRW50cnlUeXBlQ29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvVWRpRW50cnlUeXBlQ29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyxtRUFBbUU7QUFrQ25FOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sbUJBQW1CLEdBQTBCO0lBQ3hEOztPQUVHO0lBQ0gsT0FBTyxFQUFFO1FBQ1AsT0FBTyxFQUFFLFNBQVM7UUFDbEIsSUFBSSxFQUFFLFNBQVM7UUFDZixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxJQUFJLEVBQUU7UUFDSixPQUFPLEVBQUUsTUFBTTtRQUNmLElBQUksRUFBRSxNQUFNO1FBQ1osTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gsTUFBTSxFQUFFO1FBQ04sT0FBTyxFQUFFLFFBQVE7UUFDakIsSUFBSSxFQUFFLFFBQVE7UUFDZCxNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0lBQ0Q7O09BRUc7SUFDSCxJQUFJLEVBQUU7UUFDSixPQUFPLEVBQUUsTUFBTTtRQUNmLElBQUksRUFBRSxNQUFNO1FBQ1osTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gsWUFBWSxFQUFFO1FBQ1osT0FBTyxFQUFFLGVBQWU7UUFDeEIsSUFBSSxFQUFFLGVBQWU7UUFDckIsTUFBTSxFQUFFLG9DQUFvQztLQUM3QztJQUNEOztPQUVHO0lBQ0gsT0FBTyxFQUFFO1FBQ1AsT0FBTyxFQUFFLFNBQVM7UUFDbEIsSUFBSSxFQUFFLFNBQVM7UUFDZixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDO0NBQ08sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNC5jb3JlIHZlcnNpb246IDQuMC4xXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC91ZGktZW50cnktdHlwZXw0LjAuMVxyXG5cclxuaW1wb3J0IHsgQ29kaW5nQXJncyB9IGZyb20gJy4uL2ZoaXIvQ29kaW5nLmpzJ1xyXG5cclxuLyoqXHJcbiAqIENvZGVzIHRvIGlkZW50aWZ5IGhvdyBVREkgZGF0YSB3YXMgZW50ZXJlZC5cclxuICovXHJcbmV4cG9ydCB0eXBlIFVkaUVudHJ5VHlwZUNvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogYmFyY29kZTogYSBiYXJjb2Rlc2Nhbm5lciBjYXB0dXJlZCB0aGUgZGF0YSBmcm9tIHRoZSBkZXZpY2UgbGFiZWwuXHJcbiAgICovXHJcbiAgQmFyY29kZTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBjYXJkOiBUaGUgZGF0YSBvcmlnaW5hdGVkIGZyb20gYSBwYXRpZW50J3MgaW1wbGFudCBjYXJkIGFuZCB3YXMgcmVhZCBieSBhbiBvcGVyYXRvci5cclxuICAgKi9cclxuICBDYXJkOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIG1hbnVhbDogVGhlIGRhdGEgd2FzIHJlYWQgZnJvbSB0aGUgbGFiZWwgYnkgYSBwZXJzb24gYW5kIG1hbnVhbGx5IGVudGVyZWQuIChlLmcuICB2aWEgYSBrZXlib2FyZCkuXHJcbiAgICovXHJcbiAgTWFudWFsOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIHJmaWQ6IEFuIFJGSUQgY2hpcCByZWFkZXIgY2FwdHVyZWQgdGhlIGRhdGEgZnJvbSB0aGUgZGV2aWNlIGxhYmVsLlxyXG4gICAqL1xyXG4gIFJGSUQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogc2VsZi1yZXBvcnRlZDogVGhlIGRhdGEgb3JpZ2luYXRlZCBmcm9tIGEgcGF0aWVudCBzb3VyY2UgYW5kIHdhcyBub3QgZGlyZWN0bHkgc2Nhbm5lZCBvciByZWFkIGZyb20gYSBsYWJlbCBvciBjYXJkLlxyXG4gICAqL1xyXG4gIFNlbGZSZXBvcnRlZDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiB1bmtub3duOiBUaGUgbWV0aG9kIG9mIGRhdGEgY2FwdHVyZSBoYXMgbm90IGJlZW4gZGV0ZXJtaW5lZC5cclxuICAgKi9cclxuICBVbmtub3duOiBDb2RpbmdBcmdzO1xyXG59XHJcblxyXG4vKipcclxuICogQ29kZXMgdG8gaWRlbnRpZnkgaG93IFVESSBkYXRhIHdhcyBlbnRlcmVkLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IFVkaUVudHJ5VHlwZUNvZGluZ3M6VWRpRW50cnlUeXBlQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBiYXJjb2RlOiBhIGJhcmNvZGVzY2FubmVyIGNhcHR1cmVkIHRoZSBkYXRhIGZyb20gdGhlIGRldmljZSBsYWJlbC5cclxuICAgKi9cclxuICBCYXJjb2RlOiB7XHJcbiAgICBkaXNwbGF5OiBcIkJhcmNvZGVcIixcclxuICAgIGNvZGU6IFwiYmFyY29kZVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvdWRpLWVudHJ5LXR5cGVcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIGNhcmQ6IFRoZSBkYXRhIG9yaWdpbmF0ZWQgZnJvbSBhIHBhdGllbnQncyBpbXBsYW50IGNhcmQgYW5kIHdhcyByZWFkIGJ5IGFuIG9wZXJhdG9yLlxyXG4gICAqL1xyXG4gIENhcmQ6IHtcclxuICAgIGRpc3BsYXk6IFwiQ2FyZFwiLFxyXG4gICAgY29kZTogXCJjYXJkXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci91ZGktZW50cnktdHlwZVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogbWFudWFsOiBUaGUgZGF0YSB3YXMgcmVhZCBmcm9tIHRoZSBsYWJlbCBieSBhIHBlcnNvbiBhbmQgbWFudWFsbHkgZW50ZXJlZC4gKGUuZy4gIHZpYSBhIGtleWJvYXJkKS5cclxuICAgKi9cclxuICBNYW51YWw6IHtcclxuICAgIGRpc3BsYXk6IFwiTWFudWFsXCIsXHJcbiAgICBjb2RlOiBcIm1hbnVhbFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvdWRpLWVudHJ5LXR5cGVcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIHJmaWQ6IEFuIFJGSUQgY2hpcCByZWFkZXIgY2FwdHVyZWQgdGhlIGRhdGEgZnJvbSB0aGUgZGV2aWNlIGxhYmVsLlxyXG4gICAqL1xyXG4gIFJGSUQ6IHtcclxuICAgIGRpc3BsYXk6IFwiUkZJRFwiLFxyXG4gICAgY29kZTogXCJyZmlkXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci91ZGktZW50cnktdHlwZVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogc2VsZi1yZXBvcnRlZDogVGhlIGRhdGEgb3JpZ2luYXRlZCBmcm9tIGEgcGF0aWVudCBzb3VyY2UgYW5kIHdhcyBub3QgZGlyZWN0bHkgc2Nhbm5lZCBvciByZWFkIGZyb20gYSBsYWJlbCBvciBjYXJkLlxyXG4gICAqL1xyXG4gIFNlbGZSZXBvcnRlZDoge1xyXG4gICAgZGlzcGxheTogXCJTZWxmIFJlcG9ydGVkXCIsXHJcbiAgICBjb2RlOiBcInNlbGYtcmVwb3J0ZWRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3VkaS1lbnRyeS10eXBlXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiB1bmtub3duOiBUaGUgbWV0aG9kIG9mIGRhdGEgY2FwdHVyZSBoYXMgbm90IGJlZW4gZGV0ZXJtaW5lZC5cclxuICAgKi9cclxuICBVbmtub3duOiB7XHJcbiAgICBkaXNwbGF5OiBcIlVua25vd25cIixcclxuICAgIGNvZGU6IFwidW5rbm93blwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvdWRpLWVudHJ5LXR5cGVcIixcclxuICB9LFxyXG59IGFzIGNvbnN0O1xyXG4iXX0=