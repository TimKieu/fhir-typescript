{"version":3,"file":"ContractTermSubtypeCodings.js","sources":["../../src/fhirValueSets/ContractTermSubtypeCodings.ts"],"sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4.core version: 4.0.1\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR ValueSet: http://hl7.org/fhir/ValueSet/contract-term-subtype|4.0.1\r\n\r\nimport { Coding } from '../fhir/Coding.js'\r\n\r\n/**\r\n * This value set includes sample Contract Term SubType codes.\r\n */\r\nexport const ContractTermSubtypeCodings = {\r\n  /**\r\n   * condition: Terms that go to the very root of a contract.\r\n   */\r\n  Condition: new Coding({\r\n    display: \"Condition\",\r\n    code: \"condition\",\r\n    system: \"http://terminology.hl7.org/CodeSystem/contracttermsubtypecodes\",\r\n  }),\r\n  /**\r\n   * innominate: Breach of which might or might not go to the root of the contract depending upon the nature of the breach\r\n   */\r\n  Innominate: new Coding({\r\n    display: \"Innominate\",\r\n    code: \"innominate\",\r\n    system: \"http://terminology.hl7.org/CodeSystem/contracttermsubtypecodes\",\r\n  }),\r\n  /**\r\n   * warranty: Less imperative than a condition, so the contract will survive a breach\r\n   */\r\n  Warranty: new Coding({\r\n    display: \"Warranty\",\r\n    code: \"warranty\",\r\n    system: \"http://terminology.hl7.org/CodeSystem/contracttermsubtypecodes\",\r\n  }),\r\n} as const;\r\n\r\n/**\r\n * This value set includes sample Contract Term SubType codes.\r\n */\r\nexport type ContractTermSubtypeCodingType = typeof ContractTermSubtypeCodings;\r\n"],"names":[],"mappings":";;;;AAAA;AAOA;;AAEG;AACU,IAAA,0BAA0B,GAAG;AACxC;;AAEG;IACH,SAAS,EAAE,IAAI,MAAM,CAAC;AACpB,QAAA,OAAO,EAAE,WAAW;AACpB,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,MAAM,EAAE,gEAAgE;KACzE,CAAC;AACF;;AAEG;IACH,UAAU,EAAE,IAAI,MAAM,CAAC;AACrB,QAAA,OAAO,EAAE,YAAY;AACrB,QAAA,IAAI,EAAE,YAAY;AAClB,QAAA,MAAM,EAAE,gEAAgE;KACzE,CAAC;AACF;;AAEG;IACH,QAAQ,EAAE,IAAI,MAAM,CAAC;AACnB,QAAA,OAAO,EAAE,UAAU;AACnB,QAAA,IAAI,EAAE,UAAU;AAChB,QAAA,MAAM,EAAE,gEAAgE;KACzE,CAAC;;;;;"}