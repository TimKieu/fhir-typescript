// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/claim-modifiers|4.0.1
/**
 * This value set includes sample Modifier type codes.
 */
export const ClaimModifiersCodings = {
    /**
     * a: Repair of prior service or installation.
     */
    RepairOfPriorServiceOrInstallation: {
        display: "Repair of prior service or installation",
        code: "a",
        system: "http://terminology.hl7.org/CodeSystem/modifiers",
    },
    /**
     * b: Temporary service or installation.
     */
    TemporaryServiceOrInstallation: {
        display: "Temporary service or installation",
        code: "b",
        system: "http://terminology.hl7.org/CodeSystem/modifiers",
    },
    /**
     * c: Treatment associated with TMJ.
     */
    TMJTreatment: {
        display: "TMJ treatment",
        code: "c",
        system: "http://terminology.hl7.org/CodeSystem/modifiers",
    },
    /**
     * e: Implant or associated with an implant.
     */
    ImplantOrAssociatedWithAnImplant: {
        display: "Implant or associated with an implant",
        code: "e",
        system: "http://terminology.hl7.org/CodeSystem/modifiers",
    },
    /**
     * rooh: A Rush service or service performed outside of normal office hours.
     */
    RushOrOutsideOfOfficeHours: {
        display: "Rush or Outside of office hours",
        code: "rooh",
        system: "http://terminology.hl7.org/CodeSystem/modifiers",
    },
    /**
     * x: None.
     */
    None: {
        display: "None",
        code: "x",
        system: "http://terminology.hl7.org/CodeSystem/modifiers",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2xhaW1Nb2RpZmllcnNDb2RpbmdzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9DbGFpbU1vZGlmaWVyc0NvZGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLCtDQUErQztBQUMvQyxrQ0FBa0M7QUFDbEMsb0VBQW9FO0FBa0NwRTs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUE0QjtJQUM1RDs7T0FFRztJQUNILGtDQUFrQyxFQUFFO1FBQ2xDLE9BQU8sRUFBRSx5Q0FBeUM7UUFDbEQsSUFBSSxFQUFFLEdBQUc7UUFDVCxNQUFNLEVBQUUsaURBQWlEO0tBQzFEO0lBQ0Q7O09BRUc7SUFDSCw4QkFBOEIsRUFBRTtRQUM5QixPQUFPLEVBQUUsbUNBQW1DO1FBQzVDLElBQUksRUFBRSxHQUFHO1FBQ1QsTUFBTSxFQUFFLGlEQUFpRDtLQUMxRDtJQUNEOztPQUVHO0lBQ0gsWUFBWSxFQUFFO1FBQ1osT0FBTyxFQUFFLGVBQWU7UUFDeEIsSUFBSSxFQUFFLEdBQUc7UUFDVCxNQUFNLEVBQUUsaURBQWlEO0tBQzFEO0lBQ0Q7O09BRUc7SUFDSCxnQ0FBZ0MsRUFBRTtRQUNoQyxPQUFPLEVBQUUsdUNBQXVDO1FBQ2hELElBQUksRUFBRSxHQUFHO1FBQ1QsTUFBTSxFQUFFLGlEQUFpRDtLQUMxRDtJQUNEOztPQUVHO0lBQ0gsMEJBQTBCLEVBQUU7UUFDMUIsT0FBTyxFQUFFLGlDQUFpQztRQUMxQyxJQUFJLEVBQUUsTUFBTTtRQUNaLE1BQU0sRUFBRSxpREFBaUQ7S0FDMUQ7SUFDRDs7T0FFRztJQUNILElBQUksRUFBRTtRQUNKLE9BQU8sRUFBRSxNQUFNO1FBQ2YsSUFBSSxFQUFFLEdBQUc7UUFDVCxNQUFNLEVBQUUsaURBQWlEO0tBQzFEO0NBQ08sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNC5jb3JlIHZlcnNpb246IDQuMC4xXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9jbGFpbS1tb2RpZmllcnN8NC4wLjFcclxuXHJcbmltcG9ydCB7IENvZGluZ0FyZ3MgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiBUaGlzIHZhbHVlIHNldCBpbmNsdWRlcyBzYW1wbGUgTW9kaWZpZXIgdHlwZSBjb2Rlcy5cclxuICovXHJcbmV4cG9ydCB0eXBlIENsYWltTW9kaWZpZXJzQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBhOiBSZXBhaXIgb2YgcHJpb3Igc2VydmljZSBvciBpbnN0YWxsYXRpb24uXHJcbiAgICovXHJcbiAgUmVwYWlyT2ZQcmlvclNlcnZpY2VPckluc3RhbGxhdGlvbjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBiOiBUZW1wb3Jhcnkgc2VydmljZSBvciBpbnN0YWxsYXRpb24uXHJcbiAgICovXHJcbiAgVGVtcG9yYXJ5U2VydmljZU9ySW5zdGFsbGF0aW9uOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIGM6IFRyZWF0bWVudCBhc3NvY2lhdGVkIHdpdGggVE1KLlxyXG4gICAqL1xyXG4gIFRNSlRyZWF0bWVudDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBlOiBJbXBsYW50IG9yIGFzc29jaWF0ZWQgd2l0aCBhbiBpbXBsYW50LlxyXG4gICAqL1xyXG4gIEltcGxhbnRPckFzc29jaWF0ZWRXaXRoQW5JbXBsYW50OiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIHJvb2g6IEEgUnVzaCBzZXJ2aWNlIG9yIHNlcnZpY2UgcGVyZm9ybWVkIG91dHNpZGUgb2Ygbm9ybWFsIG9mZmljZSBob3Vycy5cclxuICAgKi9cclxuICBSdXNoT3JPdXRzaWRlT2ZPZmZpY2VIb3VyczogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiB4OiBOb25lLlxyXG4gICAqL1xyXG4gIE5vbmU6IENvZGluZ0FyZ3M7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBUaGlzIHZhbHVlIHNldCBpbmNsdWRlcyBzYW1wbGUgTW9kaWZpZXIgdHlwZSBjb2Rlcy5cclxuICovXHJcbmV4cG9ydCBjb25zdCBDbGFpbU1vZGlmaWVyc0NvZGluZ3M6Q2xhaW1Nb2RpZmllcnNDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIGE6IFJlcGFpciBvZiBwcmlvciBzZXJ2aWNlIG9yIGluc3RhbGxhdGlvbi5cclxuICAgKi9cclxuICBSZXBhaXJPZlByaW9yU2VydmljZU9ySW5zdGFsbGF0aW9uOiB7XHJcbiAgICBkaXNwbGF5OiBcIlJlcGFpciBvZiBwcmlvciBzZXJ2aWNlIG9yIGluc3RhbGxhdGlvblwiLFxyXG4gICAgY29kZTogXCJhXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9tb2RpZmllcnNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIGI6IFRlbXBvcmFyeSBzZXJ2aWNlIG9yIGluc3RhbGxhdGlvbi5cclxuICAgKi9cclxuICBUZW1wb3JhcnlTZXJ2aWNlT3JJbnN0YWxsYXRpb246IHtcclxuICAgIGRpc3BsYXk6IFwiVGVtcG9yYXJ5IHNlcnZpY2Ugb3IgaW5zdGFsbGF0aW9uXCIsXHJcbiAgICBjb2RlOiBcImJcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL21vZGlmaWVyc1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogYzogVHJlYXRtZW50IGFzc29jaWF0ZWQgd2l0aCBUTUouXHJcbiAgICovXHJcbiAgVE1KVHJlYXRtZW50OiB7XHJcbiAgICBkaXNwbGF5OiBcIlRNSiB0cmVhdG1lbnRcIixcclxuICAgIGNvZGU6IFwiY1wiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vbW9kaWZpZXJzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBlOiBJbXBsYW50IG9yIGFzc29jaWF0ZWQgd2l0aCBhbiBpbXBsYW50LlxyXG4gICAqL1xyXG4gIEltcGxhbnRPckFzc29jaWF0ZWRXaXRoQW5JbXBsYW50OiB7XHJcbiAgICBkaXNwbGF5OiBcIkltcGxhbnQgb3IgYXNzb2NpYXRlZCB3aXRoIGFuIGltcGxhbnRcIixcclxuICAgIGNvZGU6IFwiZVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vbW9kaWZpZXJzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiByb29oOiBBIFJ1c2ggc2VydmljZSBvciBzZXJ2aWNlIHBlcmZvcm1lZCBvdXRzaWRlIG9mIG5vcm1hbCBvZmZpY2UgaG91cnMuXHJcbiAgICovXHJcbiAgUnVzaE9yT3V0c2lkZU9mT2ZmaWNlSG91cnM6IHtcclxuICAgIGRpc3BsYXk6IFwiUnVzaCBvciBPdXRzaWRlIG9mIG9mZmljZSBob3Vyc1wiLFxyXG4gICAgY29kZTogXCJyb29oXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9tb2RpZmllcnNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIHg6IE5vbmUuXHJcbiAgICovXHJcbiAgTm9uZToge1xyXG4gICAgZGlzcGxheTogXCJOb25lXCIsXHJcbiAgICBjb2RlOiBcInhcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL21vZGlmaWVyc1wiLFxyXG4gIH0sXHJcbn0gYXMgY29uc3Q7XHJcbiJdfQ==