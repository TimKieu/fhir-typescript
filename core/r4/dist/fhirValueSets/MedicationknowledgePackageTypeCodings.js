// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/medicationknowledge-package-type|4.0.1
/**
 * MedicationKnowledge Package Type Codes
 */
export const MedicationknowledgePackageTypeCodings = {
    /**
     * Code: amp
     */
    Ampule: {
        display: "Ampule",
        code: "amp",
        system: "http://terminology.hl7.org/CodeSystem/medicationknowledge-package-type",
    },
    /**
     * Code: bag
     */
    Bag: {
        display: "Bag",
        code: "bag",
        system: "http://terminology.hl7.org/CodeSystem/medicationknowledge-package-type",
    },
    /**
     * Code: blstrpk
     */
    BlisterPack: {
        display: "Blister Pack",
        code: "blstrpk",
        system: "http://terminology.hl7.org/CodeSystem/medicationknowledge-package-type",
    },
    /**
     * Code: bot
     */
    Bottle: {
        display: "Bottle",
        code: "bot",
        system: "http://terminology.hl7.org/CodeSystem/medicationknowledge-package-type",
    },
    /**
     * Code: box
     */
    Box: {
        display: "Box",
        code: "box",
        system: "http://terminology.hl7.org/CodeSystem/medicationknowledge-package-type",
    },
    /**
     * Code: can
     */
    Can: {
        display: "Can",
        code: "can",
        system: "http://terminology.hl7.org/CodeSystem/medicationknowledge-package-type",
    },
    /**
     * Code: cart
     */
    Cartridge: {
        display: "Cartridge",
        code: "cart",
        system: "http://terminology.hl7.org/CodeSystem/medicationknowledge-package-type",
    },
    /**
     * Code: disk
     */
    Disk: {
        display: "Disk",
        code: "disk",
        system: "http://terminology.hl7.org/CodeSystem/medicationknowledge-package-type",
    },
    /**
     * Code: doset
     */
    Dosette: {
        display: "Dosette",
        code: "doset",
        system: "http://terminology.hl7.org/CodeSystem/medicationknowledge-package-type",
    },
    /**
     * Code: jar
     */
    Jar: {
        display: "Jar",
        code: "jar",
        system: "http://terminology.hl7.org/CodeSystem/medicationknowledge-package-type",
    },
    /**
     * Code: jug
     */
    Jug: {
        display: "Jug",
        code: "jug",
        system: "http://terminology.hl7.org/CodeSystem/medicationknowledge-package-type",
    },
    /**
     * Code: minim
     */
    Minim: {
        display: "Minim",
        code: "minim",
        system: "http://terminology.hl7.org/CodeSystem/medicationknowledge-package-type",
    },
    /**
     * Code: nebamp
     */
    NebuleAmp: {
        display: "Nebule Amp",
        code: "nebamp",
        system: "http://terminology.hl7.org/CodeSystem/medicationknowledge-package-type",
    },
    /**
     * Code: ovul
     */
    Ovule: {
        display: "Ovule",
        code: "ovul",
        system: "http://terminology.hl7.org/CodeSystem/medicationknowledge-package-type",
    },
    /**
     * Code: pch
     */
    Pouch: {
        display: "Pouch",
        code: "pch",
        system: "http://terminology.hl7.org/CodeSystem/medicationknowledge-package-type",
    },
    /**
     * Code: pkt
     */
    Packet: {
        display: "Packet",
        code: "pkt",
        system: "http://terminology.hl7.org/CodeSystem/medicationknowledge-package-type",
    },
    /**
     * Code: sash
     */
    Sashet: {
        display: "Sashet",
        code: "sash",
        system: "http://terminology.hl7.org/CodeSystem/medicationknowledge-package-type",
    },
    /**
     * Code: strip
     */
    Strip: {
        display: "Strip",
        code: "strip",
        system: "http://terminology.hl7.org/CodeSystem/medicationknowledge-package-type",
    },
    /**
     * Code: tin
     */
    Tin: {
        display: "Tin",
        code: "tin",
        system: "http://terminology.hl7.org/CodeSystem/medicationknowledge-package-type",
    },
    /**
     * Code: tub
     */
    Tub: {
        display: "Tub",
        code: "tub",
        system: "http://terminology.hl7.org/CodeSystem/medicationknowledge-package-type",
    },
    /**
     * Code: tube
     */
    Tube: {
        display: "Tube",
        code: "tube",
        system: "http://terminology.hl7.org/CodeSystem/medicationknowledge-package-type",
    },
    /**
     * Code: vial
     */
    Vial: {
        display: "Vial",
        code: "vial",
        system: "http://terminology.hl7.org/CodeSystem/medicationknowledge-package-type",
    },
};
//# sourceMappingURL=data:application/json;base64,