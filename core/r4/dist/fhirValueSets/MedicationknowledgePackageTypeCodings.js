// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/medicationknowledge-package-type|4.0.1
import { Coding } from '../fhir/Coding.js';
/**
 * MedicationKnowledge Package Type Codes
 */
export const MedicationknowledgePackageTypeCodings = {
    /**
     * Code: amp
     */
    Ampule: new Coding({
        display: "Ampule",
        code: "amp",
        system: "http://terminology.hl7.org/CodeSystem/medicationknowledge-package-type",
    }),
    /**
     * Code: bag
     */
    Bag: new Coding({
        display: "Bag",
        code: "bag",
        system: "http://terminology.hl7.org/CodeSystem/medicationknowledge-package-type",
    }),
    /**
     * Code: blstrpk
     */
    BlisterPack: new Coding({
        display: "Blister Pack",
        code: "blstrpk",
        system: "http://terminology.hl7.org/CodeSystem/medicationknowledge-package-type",
    }),
    /**
     * Code: bot
     */
    Bottle: new Coding({
        display: "Bottle",
        code: "bot",
        system: "http://terminology.hl7.org/CodeSystem/medicationknowledge-package-type",
    }),
    /**
     * Code: box
     */
    Box: new Coding({
        display: "Box",
        code: "box",
        system: "http://terminology.hl7.org/CodeSystem/medicationknowledge-package-type",
    }),
    /**
     * Code: can
     */
    Can: new Coding({
        display: "Can",
        code: "can",
        system: "http://terminology.hl7.org/CodeSystem/medicationknowledge-package-type",
    }),
    /**
     * Code: cart
     */
    Cartridge: new Coding({
        display: "Cartridge",
        code: "cart",
        system: "http://terminology.hl7.org/CodeSystem/medicationknowledge-package-type",
    }),
    /**
     * Code: disk
     */
    Disk: new Coding({
        display: "Disk",
        code: "disk",
        system: "http://terminology.hl7.org/CodeSystem/medicationknowledge-package-type",
    }),
    /**
     * Code: doset
     */
    Dosette: new Coding({
        display: "Dosette",
        code: "doset",
        system: "http://terminology.hl7.org/CodeSystem/medicationknowledge-package-type",
    }),
    /**
     * Code: jar
     */
    Jar: new Coding({
        display: "Jar",
        code: "jar",
        system: "http://terminology.hl7.org/CodeSystem/medicationknowledge-package-type",
    }),
    /**
     * Code: jug
     */
    Jug: new Coding({
        display: "Jug",
        code: "jug",
        system: "http://terminology.hl7.org/CodeSystem/medicationknowledge-package-type",
    }),
    /**
     * Code: minim
     */
    Minim: new Coding({
        display: "Minim",
        code: "minim",
        system: "http://terminology.hl7.org/CodeSystem/medicationknowledge-package-type",
    }),
    /**
     * Code: nebamp
     */
    NebuleAmp: new Coding({
        display: "Nebule Amp",
        code: "nebamp",
        system: "http://terminology.hl7.org/CodeSystem/medicationknowledge-package-type",
    }),
    /**
     * Code: ovul
     */
    Ovule: new Coding({
        display: "Ovule",
        code: "ovul",
        system: "http://terminology.hl7.org/CodeSystem/medicationknowledge-package-type",
    }),
    /**
     * Code: pch
     */
    Pouch: new Coding({
        display: "Pouch",
        code: "pch",
        system: "http://terminology.hl7.org/CodeSystem/medicationknowledge-package-type",
    }),
    /**
     * Code: pkt
     */
    Packet: new Coding({
        display: "Packet",
        code: "pkt",
        system: "http://terminology.hl7.org/CodeSystem/medicationknowledge-package-type",
    }),
    /**
     * Code: sash
     */
    Sashet: new Coding({
        display: "Sashet",
        code: "sash",
        system: "http://terminology.hl7.org/CodeSystem/medicationknowledge-package-type",
    }),
    /**
     * Code: strip
     */
    Strip: new Coding({
        display: "Strip",
        code: "strip",
        system: "http://terminology.hl7.org/CodeSystem/medicationknowledge-package-type",
    }),
    /**
     * Code: tin
     */
    Tin: new Coding({
        display: "Tin",
        code: "tin",
        system: "http://terminology.hl7.org/CodeSystem/medicationknowledge-package-type",
    }),
    /**
     * Code: tub
     */
    Tub: new Coding({
        display: "Tub",
        code: "tub",
        system: "http://terminology.hl7.org/CodeSystem/medicationknowledge-package-type",
    }),
    /**
     * Code: tube
     */
    Tube: new Coding({
        display: "Tube",
        code: "tube",
        system: "http://terminology.hl7.org/CodeSystem/medicationknowledge-package-type",
    }),
    /**
     * Code: vial
     */
    Vial: new Coding({
        display: "Vial",
        code: "vial",
        system: "http://terminology.hl7.org/CodeSystem/medicationknowledge-package-type",
    }),
};
//# sourceMappingURL=data:application/json;base64,