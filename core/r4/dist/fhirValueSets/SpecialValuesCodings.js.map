{"version":3,"file":"SpecialValuesCodings.js","sources":["../../src/fhirValueSets/SpecialValuesCodings.ts"],"sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4.core version: 4.0.1\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR ValueSet: http://hl7.org/fhir/ValueSet/special-values|4.0.1\r\n\r\nimport { Coding } from '../fhir/Coding.js'\r\n\r\n/**\r\n * A set of generally useful codes defined so they can be included in value sets.\r\n */\r\nexport const SpecialValuesCodings = {\r\n  /**\r\n   * false: Boolean false.\r\n   */\r\n  False: new Coding({\r\n    display: \"false\",\r\n    code: \"false\",\r\n    system: \"http://terminology.hl7.org/CodeSystem/special-values\",\r\n  }),\r\n  /**\r\n   * nil-known: The are no known applicable values in this context.\r\n   */\r\n  NilKnown: new Coding({\r\n    display: \"Nil Known\",\r\n    code: \"nil-known\",\r\n    system: \"http://terminology.hl7.org/CodeSystem/special-values\",\r\n  }),\r\n  /**\r\n   * sufficient: The specific quantity is not known, but is known to be non-zero and is not specified because it makes up the bulk of the material.\r\n   */\r\n  SufficientQuantity: new Coding({\r\n    display: \"Sufficient Quantity\",\r\n    code: \"sufficient\",\r\n    system: \"http://terminology.hl7.org/CodeSystem/special-values\",\r\n  }),\r\n  /**\r\n   * trace: The content is greater than zero, but too small to be quantified.\r\n   */\r\n  TraceAmountDetected: new Coding({\r\n    display: \"Trace Amount Detected\",\r\n    code: \"trace\",\r\n    system: \"http://terminology.hl7.org/CodeSystem/special-values\",\r\n  }),\r\n  /**\r\n   * true: Boolean true.\r\n   */\r\n  True: new Coding({\r\n    display: \"true\",\r\n    code: \"true\",\r\n    system: \"http://terminology.hl7.org/CodeSystem/special-values\",\r\n  }),\r\n  /**\r\n   * withdrawn: The value is no longer available.\r\n   */\r\n  ValueWithdrawn: new Coding({\r\n    display: \"Value Withdrawn\",\r\n    code: \"withdrawn\",\r\n    system: \"http://terminology.hl7.org/CodeSystem/special-values\",\r\n  }),\r\n} as const;\r\n\r\n/**\r\n * A set of generally useful codes defined so they can be included in value sets.\r\n */\r\nexport type SpecialValuesCodingType = typeof SpecialValuesCodings;\r\n"],"names":[],"mappings":";;;;AAAA;AAOA;;AAEG;AACU,IAAA,oBAAoB,GAAG;AAClC;;AAEG;IACH,KAAK,EAAE,IAAI,MAAM,CAAC;AAChB,QAAA,OAAO,EAAE,OAAO;AAChB,QAAA,IAAI,EAAE,OAAO;AACb,QAAA,MAAM,EAAE,sDAAsD;KAC/D,CAAC;AACF;;AAEG;IACH,QAAQ,EAAE,IAAI,MAAM,CAAC;AACnB,QAAA,OAAO,EAAE,WAAW;AACpB,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,MAAM,EAAE,sDAAsD;KAC/D,CAAC;AACF;;AAEG;IACH,kBAAkB,EAAE,IAAI,MAAM,CAAC;AAC7B,QAAA,OAAO,EAAE,qBAAqB;AAC9B,QAAA,IAAI,EAAE,YAAY;AAClB,QAAA,MAAM,EAAE,sDAAsD;KAC/D,CAAC;AACF;;AAEG;IACH,mBAAmB,EAAE,IAAI,MAAM,CAAC;AAC9B,QAAA,OAAO,EAAE,uBAAuB;AAChC,QAAA,IAAI,EAAE,OAAO;AACb,QAAA,MAAM,EAAE,sDAAsD;KAC/D,CAAC;AACF;;AAEG;IACH,IAAI,EAAE,IAAI,MAAM,CAAC;AACf,QAAA,OAAO,EAAE,MAAM;AACf,QAAA,IAAI,EAAE,MAAM;AACZ,QAAA,MAAM,EAAE,sDAAsD;KAC/D,CAAC;AACF;;AAEG;IACH,cAAc,EAAE,IAAI,MAAM,CAAC;AACzB,QAAA,OAAO,EAAE,iBAAiB;AAC1B,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,MAAM,EAAE,sDAAsD;KAC/D,CAAC;;;;;"}