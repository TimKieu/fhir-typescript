// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/data-absent-reason|4.0.1
/**
 * Used to specify why the normally expected content of the data element is missing.
 */
export const DataAbsentReasonCodes = {
    /**
     * as-text: The content of the data is represented in the resource narrative.
     */
    AsText: "as-text",
    /**
     * asked-declined: The source was asked but declined to answer.
     */
    AskedButDeclined: "asked-declined",
    /**
     * asked-unknown: The source was asked but does not know the value.
     */
    AskedButUnknown: "asked-unknown",
    /**
     * error: Some system or workflow process error means that the information is not available.
     */
    Error: "error",
    /**
     * masked: The information is not available due to security, privacy or related reasons.
     */
    Masked: "masked",
    /**
     * negative-infinity: The numeric value is excessively low and unrepresentable due to a floating point processing error.
     */
    NegativeInfinityNINF: "negative-infinity",
    /**
     * not-a-number: The numeric value is undefined or unrepresentable due to a floating point processing error.
     */
    NotANumberNaN: "not-a-number",
    /**
     * not-applicable: There is no proper value for this element (e.g. last menstrual period for a male).
     */
    NotApplicable: "not-applicable",
    /**
     * not-asked: The workflow didn't lead to this value being known.
     */
    NotAsked: "not-asked",
    /**
     * not-performed: The value is not available because the observation procedure (test, etc.) was not performed.
     */
    NotPerformed: "not-performed",
    /**
     * not-permitted: The value is not permitted in this context (e.g. due to profiles, or the base data types).
     */
    NotPermitted: "not-permitted",
    /**
     * positive-infinity: The numeric value is excessively high and unrepresentable due to a floating point processing error.
     */
    PositiveInfinityPINF: "positive-infinity",
    /**
     * temp-unknown: There is reason to expect (from the workflow) that the value may become known.
     */
    TemporarilyUnknown: "temp-unknown",
    /**
     * unknown: The value is expected to exist but is not known.
     */
    Unknown: "unknown",
    /**
     * unsupported: The source system wasn't capable of supporting this element.
     */
    Unsupported: "unsupported",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGF0YUFic2VudFJlYXNvbkNvZGVzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9EYXRhQWJzZW50UmVhc29uQ29kZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLCtDQUErQztBQUMvQyxrQ0FBa0M7QUFDbEMsdUVBQXVFO0FBRXZFOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0scUJBQXFCLEdBQUc7SUFDbkM7O09BRUc7SUFDSCxNQUFNLEVBQUUsU0FBUztJQUNqQjs7T0FFRztJQUNILGdCQUFnQixFQUFFLGdCQUFnQjtJQUNsQzs7T0FFRztJQUNILGVBQWUsRUFBRSxlQUFlO0lBQ2hDOztPQUVHO0lBQ0gsS0FBSyxFQUFFLE9BQU87SUFDZDs7T0FFRztJQUNILE1BQU0sRUFBRSxRQUFRO0lBQ2hCOztPQUVHO0lBQ0gsb0JBQW9CLEVBQUUsbUJBQW1CO0lBQ3pDOztPQUVHO0lBQ0gsYUFBYSxFQUFFLGNBQWM7SUFDN0I7O09BRUc7SUFDSCxhQUFhLEVBQUUsZ0JBQWdCO0lBQy9COztPQUVHO0lBQ0gsUUFBUSxFQUFFLFdBQVc7SUFDckI7O09BRUc7SUFDSCxZQUFZLEVBQUUsZUFBZTtJQUM3Qjs7T0FFRztJQUNILFlBQVksRUFBRSxlQUFlO0lBQzdCOztPQUVHO0lBQ0gsb0JBQW9CLEVBQUUsbUJBQW1CO0lBQ3pDOztPQUVHO0lBQ0gsa0JBQWtCLEVBQUUsY0FBYztJQUNsQzs7T0FFRztJQUNILE9BQU8sRUFBRSxTQUFTO0lBQ2xCOztPQUVHO0lBQ0gsV0FBVyxFQUFFLGFBQWE7Q0FDbEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNC5jb3JlIHZlcnNpb246IDQuMC4xXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9kYXRhLWFic2VudC1yZWFzb258NC4wLjFcclxuXHJcbi8qKlxyXG4gKiBVc2VkIHRvIHNwZWNpZnkgd2h5IHRoZSBub3JtYWxseSBleHBlY3RlZCBjb250ZW50IG9mIHRoZSBkYXRhIGVsZW1lbnQgaXMgbWlzc2luZy5cclxuICovXHJcbmV4cG9ydCBjb25zdCBEYXRhQWJzZW50UmVhc29uQ29kZXMgPSB7XHJcbiAgLyoqXHJcbiAgICogYXMtdGV4dDogVGhlIGNvbnRlbnQgb2YgdGhlIGRhdGEgaXMgcmVwcmVzZW50ZWQgaW4gdGhlIHJlc291cmNlIG5hcnJhdGl2ZS5cclxuICAgKi9cclxuICBBc1RleHQ6IFwiYXMtdGV4dFwiLFxyXG4gIC8qKlxyXG4gICAqIGFza2VkLWRlY2xpbmVkOiBUaGUgc291cmNlIHdhcyBhc2tlZCBidXQgZGVjbGluZWQgdG8gYW5zd2VyLlxyXG4gICAqL1xyXG4gIEFza2VkQnV0RGVjbGluZWQ6IFwiYXNrZWQtZGVjbGluZWRcIixcclxuICAvKipcclxuICAgKiBhc2tlZC11bmtub3duOiBUaGUgc291cmNlIHdhcyBhc2tlZCBidXQgZG9lcyBub3Qga25vdyB0aGUgdmFsdWUuXHJcbiAgICovXHJcbiAgQXNrZWRCdXRVbmtub3duOiBcImFza2VkLXVua25vd25cIixcclxuICAvKipcclxuICAgKiBlcnJvcjogU29tZSBzeXN0ZW0gb3Igd29ya2Zsb3cgcHJvY2VzcyBlcnJvciBtZWFucyB0aGF0IHRoZSBpbmZvcm1hdGlvbiBpcyBub3QgYXZhaWxhYmxlLlxyXG4gICAqL1xyXG4gIEVycm9yOiBcImVycm9yXCIsXHJcbiAgLyoqXHJcbiAgICogbWFza2VkOiBUaGUgaW5mb3JtYXRpb24gaXMgbm90IGF2YWlsYWJsZSBkdWUgdG8gc2VjdXJpdHksIHByaXZhY3kgb3IgcmVsYXRlZCByZWFzb25zLlxyXG4gICAqL1xyXG4gIE1hc2tlZDogXCJtYXNrZWRcIixcclxuICAvKipcclxuICAgKiBuZWdhdGl2ZS1pbmZpbml0eTogVGhlIG51bWVyaWMgdmFsdWUgaXMgZXhjZXNzaXZlbHkgbG93IGFuZCB1bnJlcHJlc2VudGFibGUgZHVlIHRvIGEgZmxvYXRpbmcgcG9pbnQgcHJvY2Vzc2luZyBlcnJvci5cclxuICAgKi9cclxuICBOZWdhdGl2ZUluZmluaXR5TklORjogXCJuZWdhdGl2ZS1pbmZpbml0eVwiLFxyXG4gIC8qKlxyXG4gICAqIG5vdC1hLW51bWJlcjogVGhlIG51bWVyaWMgdmFsdWUgaXMgdW5kZWZpbmVkIG9yIHVucmVwcmVzZW50YWJsZSBkdWUgdG8gYSBmbG9hdGluZyBwb2ludCBwcm9jZXNzaW5nIGVycm9yLlxyXG4gICAqL1xyXG4gIE5vdEFOdW1iZXJOYU46IFwibm90LWEtbnVtYmVyXCIsXHJcbiAgLyoqXHJcbiAgICogbm90LWFwcGxpY2FibGU6IFRoZXJlIGlzIG5vIHByb3BlciB2YWx1ZSBmb3IgdGhpcyBlbGVtZW50IChlLmcuIGxhc3QgbWVuc3RydWFsIHBlcmlvZCBmb3IgYSBtYWxlKS5cclxuICAgKi9cclxuICBOb3RBcHBsaWNhYmxlOiBcIm5vdC1hcHBsaWNhYmxlXCIsXHJcbiAgLyoqXHJcbiAgICogbm90LWFza2VkOiBUaGUgd29ya2Zsb3cgZGlkbid0IGxlYWQgdG8gdGhpcyB2YWx1ZSBiZWluZyBrbm93bi5cclxuICAgKi9cclxuICBOb3RBc2tlZDogXCJub3QtYXNrZWRcIixcclxuICAvKipcclxuICAgKiBub3QtcGVyZm9ybWVkOiBUaGUgdmFsdWUgaXMgbm90IGF2YWlsYWJsZSBiZWNhdXNlIHRoZSBvYnNlcnZhdGlvbiBwcm9jZWR1cmUgKHRlc3QsIGV0Yy4pIHdhcyBub3QgcGVyZm9ybWVkLlxyXG4gICAqL1xyXG4gIE5vdFBlcmZvcm1lZDogXCJub3QtcGVyZm9ybWVkXCIsXHJcbiAgLyoqXHJcbiAgICogbm90LXBlcm1pdHRlZDogVGhlIHZhbHVlIGlzIG5vdCBwZXJtaXR0ZWQgaW4gdGhpcyBjb250ZXh0IChlLmcuIGR1ZSB0byBwcm9maWxlcywgb3IgdGhlIGJhc2UgZGF0YSB0eXBlcykuXHJcbiAgICovXHJcbiAgTm90UGVybWl0dGVkOiBcIm5vdC1wZXJtaXR0ZWRcIixcclxuICAvKipcclxuICAgKiBwb3NpdGl2ZS1pbmZpbml0eTogVGhlIG51bWVyaWMgdmFsdWUgaXMgZXhjZXNzaXZlbHkgaGlnaCBhbmQgdW5yZXByZXNlbnRhYmxlIGR1ZSB0byBhIGZsb2F0aW5nIHBvaW50IHByb2Nlc3NpbmcgZXJyb3IuXHJcbiAgICovXHJcbiAgUG9zaXRpdmVJbmZpbml0eVBJTkY6IFwicG9zaXRpdmUtaW5maW5pdHlcIixcclxuICAvKipcclxuICAgKiB0ZW1wLXVua25vd246IFRoZXJlIGlzIHJlYXNvbiB0byBleHBlY3QgKGZyb20gdGhlIHdvcmtmbG93KSB0aGF0IHRoZSB2YWx1ZSBtYXkgYmVjb21lIGtub3duLlxyXG4gICAqL1xyXG4gIFRlbXBvcmFyaWx5VW5rbm93bjogXCJ0ZW1wLXVua25vd25cIixcclxuICAvKipcclxuICAgKiB1bmtub3duOiBUaGUgdmFsdWUgaXMgZXhwZWN0ZWQgdG8gZXhpc3QgYnV0IGlzIG5vdCBrbm93bi5cclxuICAgKi9cclxuICBVbmtub3duOiBcInVua25vd25cIixcclxuICAvKipcclxuICAgKiB1bnN1cHBvcnRlZDogVGhlIHNvdXJjZSBzeXN0ZW0gd2Fzbid0IGNhcGFibGUgb2Ygc3VwcG9ydGluZyB0aGlzIGVsZW1lbnQuXHJcbiAgICovXHJcbiAgVW5zdXBwb3J0ZWQ6IFwidW5zdXBwb3J0ZWRcIixcclxufSBhcyBjb25zdDtcclxuXHJcbi8qKlxyXG4gKiBVc2VkIHRvIHNwZWNpZnkgd2h5IHRoZSBub3JtYWxseSBleHBlY3RlZCBjb250ZW50IG9mIHRoZSBkYXRhIGVsZW1lbnQgaXMgbWlzc2luZy5cclxuICovXHJcbmV4cG9ydCB0eXBlIERhdGFBYnNlbnRSZWFzb25Db2RlVHlwZSA9IHR5cGVvZiBEYXRhQWJzZW50UmVhc29uQ29kZXNba2V5b2YgdHlwZW9mIERhdGFBYnNlbnRSZWFzb25Db2Rlc107XHJcbiJdfQ==