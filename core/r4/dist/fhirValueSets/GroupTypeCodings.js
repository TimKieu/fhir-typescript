// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/group-type|4.0.1
import { Coding } from '../fhir/Coding.js';
/**
 * Types of resources that are part of group.
 */
export const GroupTypeCodings = {
    /**
     * animal: Group contains "animal" Patient resources.
     */
    Animal: new Coding({
        display: "Animal",
        code: "animal",
        system: "http://hl7.org/fhir/group-type",
    }),
    /**
     * device: Group contains Device resources.
     */
    Device: new Coding({
        display: "Device",
        code: "device",
        system: "http://hl7.org/fhir/group-type",
    }),
    /**
     * medication: Group contains Medication resources.
     */
    Medication: new Coding({
        display: "Medication",
        code: "medication",
        system: "http://hl7.org/fhir/group-type",
    }),
    /**
     * person: Group contains "person" Patient resources.
     */
    Person: new Coding({
        display: "Person",
        code: "person",
        system: "http://hl7.org/fhir/group-type",
    }),
    /**
     * practitioner: Group contains healthcare practitioner resources (Practitioner or PractitionerRole).
     */
    Practitioner: new Coding({
        display: "Practitioner",
        code: "practitioner",
        system: "http://hl7.org/fhir/group-type",
    }),
    /**
     * substance: Group contains Substance resources.
     */
    Substance: new Coding({
        display: "Substance",
        code: "substance",
        system: "http://hl7.org/fhir/group-type",
    }),
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR3JvdXBUeXBlQ29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvR3JvdXBUeXBlQ29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQywrREFBK0Q7QUFFL0QsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLG1CQUFtQixDQUFBO0FBRTFDOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sZ0JBQWdCLEdBQUc7SUFDOUI7O09BRUc7SUFDSCxNQUFNLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDakIsT0FBTyxFQUFFLFFBQVE7UUFDakIsSUFBSSxFQUFFLFFBQVE7UUFDZCxNQUFNLEVBQUUsZ0NBQWdDO0tBQ3pDLENBQUM7SUFDRjs7T0FFRztJQUNILE1BQU0sRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUNqQixPQUFPLEVBQUUsUUFBUTtRQUNqQixJQUFJLEVBQUUsUUFBUTtRQUNkLE1BQU0sRUFBRSxnQ0FBZ0M7S0FDekMsQ0FBQztJQUNGOztPQUVHO0lBQ0gsVUFBVSxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ3JCLE9BQU8sRUFBRSxZQUFZO1FBQ3JCLElBQUksRUFBRSxZQUFZO1FBQ2xCLE1BQU0sRUFBRSxnQ0FBZ0M7S0FDekMsQ0FBQztJQUNGOztPQUVHO0lBQ0gsTUFBTSxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ2pCLE9BQU8sRUFBRSxRQUFRO1FBQ2pCLElBQUksRUFBRSxRQUFRO1FBQ2QsTUFBTSxFQUFFLGdDQUFnQztLQUN6QyxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxZQUFZLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDdkIsT0FBTyxFQUFFLGNBQWM7UUFDdkIsSUFBSSxFQUFFLGNBQWM7UUFDcEIsTUFBTSxFQUFFLGdDQUFnQztLQUN6QyxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxTQUFTLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDcEIsT0FBTyxFQUFFLFdBQVc7UUFDcEIsSUFBSSxFQUFFLFdBQVc7UUFDakIsTUFBTSxFQUFFLGdDQUFnQztLQUN6QyxDQUFDO0NBQ00sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNC5jb3JlIHZlcnNpb246IDQuMC4xXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9ncm91cC10eXBlfDQuMC4xXHJcblxyXG5pbXBvcnQgeyBDb2RpbmcgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiBUeXBlcyBvZiByZXNvdXJjZXMgdGhhdCBhcmUgcGFydCBvZiBncm91cC5cclxuICovXHJcbmV4cG9ydCBjb25zdCBHcm91cFR5cGVDb2RpbmdzID0ge1xyXG4gIC8qKlxyXG4gICAqIGFuaW1hbDogR3JvdXAgY29udGFpbnMgXCJhbmltYWxcIiBQYXRpZW50IHJlc291cmNlcy5cclxuICAgKi9cclxuICBBbmltYWw6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJBbmltYWxcIixcclxuICAgIGNvZGU6IFwiYW5pbWFsXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9ncm91cC10eXBlXCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogZGV2aWNlOiBHcm91cCBjb250YWlucyBEZXZpY2UgcmVzb3VyY2VzLlxyXG4gICAqL1xyXG4gIERldmljZTogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIkRldmljZVwiLFxyXG4gICAgY29kZTogXCJkZXZpY2VcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2dyb3VwLXR5cGVcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBtZWRpY2F0aW9uOiBHcm91cCBjb250YWlucyBNZWRpY2F0aW9uIHJlc291cmNlcy5cclxuICAgKi9cclxuICBNZWRpY2F0aW9uOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiTWVkaWNhdGlvblwiLFxyXG4gICAgY29kZTogXCJtZWRpY2F0aW9uXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9ncm91cC10eXBlXCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogcGVyc29uOiBHcm91cCBjb250YWlucyBcInBlcnNvblwiIFBhdGllbnQgcmVzb3VyY2VzLlxyXG4gICAqL1xyXG4gIFBlcnNvbjogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIlBlcnNvblwiLFxyXG4gICAgY29kZTogXCJwZXJzb25cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2dyb3VwLXR5cGVcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBwcmFjdGl0aW9uZXI6IEdyb3VwIGNvbnRhaW5zIGhlYWx0aGNhcmUgcHJhY3RpdGlvbmVyIHJlc291cmNlcyAoUHJhY3RpdGlvbmVyIG9yIFByYWN0aXRpb25lclJvbGUpLlxyXG4gICAqL1xyXG4gIFByYWN0aXRpb25lcjogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIlByYWN0aXRpb25lclwiLFxyXG4gICAgY29kZTogXCJwcmFjdGl0aW9uZXJcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2dyb3VwLXR5cGVcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBzdWJzdGFuY2U6IEdyb3VwIGNvbnRhaW5zIFN1YnN0YW5jZSByZXNvdXJjZXMuXHJcbiAgICovXHJcbiAgU3Vic3RhbmNlOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiU3Vic3RhbmNlXCIsXHJcbiAgICBjb2RlOiBcInN1YnN0YW5jZVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvZ3JvdXAtdHlwZVwiLFxyXG4gIH0pLFxyXG59IGFzIGNvbnN0O1xyXG5cclxuLyoqXHJcbiAqIFR5cGVzIG9mIHJlc291cmNlcyB0aGF0IGFyZSBwYXJ0IG9mIGdyb3VwLlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgR3JvdXBUeXBlQ29kaW5nVHlwZSA9IHR5cGVvZiBHcm91cFR5cGVDb2RpbmdzO1xyXG4iXX0=