// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet Validation: http://hl7.org/fhir/ValueSet/security-role-type|4.0.1
/**
 * This example FHIR value set is comprised of example Actor Type codes, which can be used to value FHIR agents, actors, and other role         elements such as those specified in financial transactions. The FHIR Actor value set is based on    DICOM Audit Message, C402;   ASTM Standard, E1762-95 [2013]; selected codes and          derived actor roles from HL7 RoleClass OID 2.16.840.1.113883.5.110;    HL7 Role Code 2.16.840.1.113883.5.111, including AgentRoleType;          HL7 ParticipationType OID: 2.16.840.1.113883.5.90; and    HL7 ParticipationFunction codes OID: 2.16.840.1.113883.5.88.           This value set includes, by reference, role codes from external code systems: NUCC Health Care Provider Taxonomy OID: 2.16.840.1.113883.6.101;          North American Industry Classification System [NAICS]OID: 2.16.840.1.113883.6.85; IndustryClassificationSystem 2.16.840.1.113883.1.11.16039;          and US Census Occupation Code OID: 2.16.840.1.113883.6.243 for relevant recipient or custodian codes not included in this value set.            If no source is indicated in the definition comments, then these are example FHIR codes.          It can be extended with appropriate roles described by SNOMED as well as those described in the HL7 Role Based Access Control Catalog and the          HL7 Healthcare (Security and Privacy) Access Control Catalog.            In Role-Based Access Control (RBAC), permissions are operations on an object that a user wishes to access. Permissions are grouped into roles.          A role characterizes the functions a user is allowed to perform. Roles are assigned to users. If the user's role has the appropriate permissions          to access an object, then that user is granted access to the object. FHIR readily enables RBAC, as FHIR Resources are object types and the CRUDE          events (the FHIR equivalent to permissions in the RBAC scheme) are operations on those objects.          In Attribute-Based Access Control (ABAC), a user requests to perform operations on objects. That user's access request is granted or denied          based on a set of access control policies that are specified in terms of attributes and conditions. FHIR readily enables ABAC, as instances of          a Resource in FHIR (again, Resources are object types) can have attributes associated with them. These attributes include security tags,          environment conditions, and a host of user and object characteristics, which are the same attributes as those used in ABAC. Attributes help          define the access control policies that determine the operations a user may perform on a Resource (in FHIR) or object (in ABAC). For example,          a tag (or attribute) may specify that the identified Resource (object) is not to be further disclosed without explicit consent from the patient.
 */
export const SecurityRoleTypeVsValidation = [
    "http://terminology.hl7.org/CodeSystem/v3-RoleCode|_CitizenRoleType", "_CitizenRoleType",
    "http://dicom.nema.org/resources/ontology/DCM|110150", "110150",
    "http://dicom.nema.org/resources/ontology/DCM|110151", "110151",
    "http://dicom.nema.org/resources/ontology/DCM|110152", "110152",
    "http://dicom.nema.org/resources/ontology/DCM|110153", "110153",
    "http://dicom.nema.org/resources/ontology/DCM|110154", "110154",
    "http://dicom.nema.org/resources/ontology/DCM|110155", "110155",
    "http://terminology.hl7.org/CodeSystem/v3-RoleClass|AFFL", "AFFL",
    "http://terminology.hl7.org/CodeSystem/v3-RoleClass|AGNT", "AGNT",
    "http://terminology.hl7.org/CodeSystem/contractsignertypecodes|AMENDER", "AMENDER",
    "http://terminology.hl7.org/CodeSystem/v3-RoleClass|ASSIGNED", "ASSIGNED",
    "http://terminology.hl7.org/CodeSystem/v3-ParticipationFunction|AUCG", "AUCG",
    "http://terminology.hl7.org/CodeSystem/v3-ParticipationFunction|AULR", "AULR",
    "http://terminology.hl7.org/CodeSystem/v3-ParticipationType|AUT", "AUT",
    "http://terminology.hl7.org/CodeSystem/extra-security-role-type|authserver", "authserver",
    "http://terminology.hl7.org/CodeSystem/v3-ParticipationFunction|AUTM", "AUTM",
    "http://terminology.hl7.org/CodeSystem/v3-ParticipationFunction|AUWA", "AUWA",
    "http://terminology.hl7.org/CodeSystem/v3-RoleCode|CAS", "CAS",
    "http://terminology.hl7.org/CodeSystem/v3-RoleCode|CASM", "CASM",
    "http://terminology.hl7.org/CodeSystem/v3-RoleClass|CLAIM", "CLAIM",
    "http://terminology.hl7.org/CodeSystem/v3-RoleCode|CLASSIFIER", "CLASSIFIER",
    "http://terminology.hl7.org/CodeSystem/v3-RoleCode|CN", "CN",
    "http://terminology.hl7.org/CodeSystem/v3-RoleCode|CNRP", "CNRP",
    "http://terminology.hl7.org/CodeSystem/v3-RoleCode|CNRPM", "CNRPM",
    "http://terminology.hl7.org/CodeSystem/contractsignertypecodes|COAUTH", "COAUTH",
    "http://terminology.hl7.org/CodeSystem/v3-RoleCode|CONSENTER", "CONSENTER",
    "http://terminology.hl7.org/CodeSystem/v3-RoleCode|CONSWIT", "CONSWIT",
    "http://terminology.hl7.org/CodeSystem/contractsignertypecodes|CONT", "CONT",
    "http://terminology.hl7.org/CodeSystem/v3-RoleCode|COPART", "COPART",
    "http://terminology.hl7.org/CodeSystem/v3-RoleClass|COVPTY", "COVPTY",
    "http://terminology.hl7.org/CodeSystem/v3-RoleCode|CPCA", "CPCA",
    "http://terminology.hl7.org/CodeSystem/v3-RoleCode|CRP", "CRP",
    "http://terminology.hl7.org/CodeSystem/v3-RoleCode|CRPM", "CRPM",
    "http://terminology.hl7.org/CodeSystem/v3-ParticipationType|CST", "CST",
    "http://terminology.hl7.org/CodeSystem/extra-security-role-type|datacollector", "datacollector",
    "http://terminology.hl7.org/CodeSystem/extra-security-role-type|dataprocessor", "dataprocessor",
    "http://terminology.hl7.org/CodeSystem/extra-security-role-type|datasubject", "datasubject",
    "http://terminology.hl7.org/CodeSystem/v3-RoleCode|DECLASSIFIER", "DECLASSIFIER",
    "http://terminology.hl7.org/CodeSystem/v3-RoleCode|DELEGATEE", "DELEGATEE",
    "http://terminology.hl7.org/CodeSystem/v3-RoleCode|DELEGATOR", "DELEGATOR",
    "http://terminology.hl7.org/CodeSystem/v3-RoleClass|DEPEN", "DEPEN",
    "http://terminology.hl7.org/CodeSystem/v3-RoleCode|DOWNGRDER", "DOWNGRDER",
    "http://terminology.hl7.org/CodeSystem/v3-RoleCode|DPOWATT", "DPOWATT",
    "http://terminology.hl7.org/CodeSystem/v3-RoleClass|ECON", "ECON",
    "http://terminology.hl7.org/CodeSystem/v3-RoleClass|EMP", "EMP",
    "http://terminology.hl7.org/CodeSystem/contractsignertypecodes|EVTWIT", "EVTWIT",
    "http://terminology.hl7.org/CodeSystem/v3-RoleCode|EXCEST", "EXCEST",
    "http://terminology.hl7.org/CodeSystem/v3-RoleCode|GRANTEE", "GRANTEE",
    "http://terminology.hl7.org/CodeSystem/v3-RoleCode|GRANTOR", "GRANTOR",
    "http://terminology.hl7.org/CodeSystem/v3-RoleCode|GT", "GT",
    "http://terminology.hl7.org/CodeSystem/v3-RoleCode|GUADLTM", "GUADLTM",
    "http://terminology.hl7.org/CodeSystem/v3-RoleClass|GUARD", "GUARD",
    "http://terminology.hl7.org/CodeSystem/v3-RoleCode|HPOWATT", "HPOWATT",
    "http://terminology.hl7.org/CodeSystem/extra-security-role-type|humanuser", "humanuser",
    "http://terminology.hl7.org/CodeSystem/v3-ParticipationType|INF", "INF",
    "http://terminology.hl7.org/CodeSystem/v3-RoleCode|INTPRTER", "INTPRTER",
    "http://terminology.hl7.org/CodeSystem/v3-RoleClass|INVSBJ", "INVSBJ",
    "http://terminology.hl7.org/CodeSystem/v3-ParticipationType|IRCP", "IRCP",
    "http://terminology.hl7.org/CodeSystem/v3-ParticipationType|LA", "LA",
    "http://terminology.hl7.org/CodeSystem/v3-RoleClass|NAMED", "NAMED",
    "http://terminology.hl7.org/CodeSystem/v3-RoleClass|NOK", "NOK",
    "http://terminology.hl7.org/CodeSystem/v3-RoleClass|NOT", "NOT",
    "http://terminology.hl7.org/CodeSystem/v3-RoleClass|PAT", "PAT",
    "http://terminology.hl7.org/CodeSystem/v3-RoleCode|POWATT", "POWATT",
    "http://terminology.hl7.org/CodeSystem/contractsignertypecodes|PRIMAUTH", "PRIMAUTH",
    "http://terminology.hl7.org/CodeSystem/v3-ParticipationFunction|PROMSK", "PROMSK",
    "http://terminology.hl7.org/CodeSystem/v3-RoleClass|PROV", "PROV",
    "http://terminology.hl7.org/CodeSystem/v3-RoleCode|RESPRSN", "RESPRSN",
    "http://terminology.hl7.org/CodeSystem/contractsignertypecodes|REVIEWER", "REVIEWER",
    "http://terminology.hl7.org/CodeSystem/contractsignertypecodes|SOURCE", "SOURCE",
    "http://terminology.hl7.org/CodeSystem/v3-RoleCode|SPOWATT", "SPOWATT",
    "http://terminology.hl7.org/CodeSystem/contractsignertypecodes|TRANS", "TRANS",
    "http://terminology.hl7.org/CodeSystem/v3-ParticipationType|TRC", "TRC",
    "http://terminology.hl7.org/CodeSystem/contractsignertypecodes|VALID", "VALID",
    "http://terminology.hl7.org/CodeSystem/contractsignertypecodes|VERF", "VERF",
    "http://terminology.hl7.org/CodeSystem/v3-ParticipationType|WIT", "WIT",
];
//# sourceMappingURL=data:application/json;base64,