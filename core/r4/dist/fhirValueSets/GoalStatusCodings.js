// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/goal-status|4.0.1
/**
 * Codes that reflect the current state of a goal and whether the goal is still being targeted.
 */
export const GoalStatusCodings = {
    /**
     * accepted: A proposed goal was accepted or acknowledged.
     */
    Accepted: {
        display: "Accepted",
        code: "accepted",
        system: "http://hl7.org/fhir/goal-status",
    },
    /**
     * active: The goal is being sought actively.
     */
    Active: {
        display: "Active",
        code: "active",
        system: "http://hl7.org/fhir/goal-status",
    },
    /**
     * cancelled: The goal has been abandoned.
     */
    Cancelled: {
        display: "Cancelled",
        code: "cancelled",
        system: "http://hl7.org/fhir/goal-status",
    },
    /**
     * completed: The goal is no longer being sought.
     */
    Completed: {
        display: "Completed",
        code: "completed",
        system: "http://hl7.org/fhir/goal-status",
    },
    /**
     * entered-in-error: The goal was entered in error and voided.
     */
    EnteredInError: {
        display: "Entered in Error",
        code: "entered-in-error",
        system: "http://hl7.org/fhir/goal-status",
    },
    /**
     * on-hold: The goal remains a long term objective but is no longer being actively pursued for a temporary period of time.
     */
    OnHold: {
        display: "On Hold",
        code: "on-hold",
        system: "http://hl7.org/fhir/goal-status",
    },
    /**
     * planned: A goal is planned for this patient.
     */
    Planned: {
        display: "Planned",
        code: "planned",
        system: "http://hl7.org/fhir/goal-status",
    },
    /**
     * proposed: A goal is proposed for this patient.
     */
    Proposed: {
        display: "Proposed",
        code: "proposed",
        system: "http://hl7.org/fhir/goal-status",
    },
    /**
     * rejected: A proposed goal was rejected.
     */
    Rejected: {
        display: "Rejected",
        code: "rejected",
        system: "http://hl7.org/fhir/goal-status",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR29hbFN0YXR1c0NvZGluZ3MuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL0dvYWxTdGF0dXNDb2RpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQiwrQ0FBK0M7QUFDL0Msa0NBQWtDO0FBQ2xDLGdFQUFnRTtBQThDaEU7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FBd0I7SUFDcEQ7O09BRUc7SUFDSCxRQUFRLEVBQUU7UUFDUixPQUFPLEVBQUUsVUFBVTtRQUNuQixJQUFJLEVBQUUsVUFBVTtRQUNoQixNQUFNLEVBQUUsaUNBQWlDO0tBQzFDO0lBQ0Q7O09BRUc7SUFDSCxNQUFNLEVBQUU7UUFDTixPQUFPLEVBQUUsUUFBUTtRQUNqQixJQUFJLEVBQUUsUUFBUTtRQUNkLE1BQU0sRUFBRSxpQ0FBaUM7S0FDMUM7SUFDRDs7T0FFRztJQUNILFNBQVMsRUFBRTtRQUNULE9BQU8sRUFBRSxXQUFXO1FBQ3BCLElBQUksRUFBRSxXQUFXO1FBQ2pCLE1BQU0sRUFBRSxpQ0FBaUM7S0FDMUM7SUFDRDs7T0FFRztJQUNILFNBQVMsRUFBRTtRQUNULE9BQU8sRUFBRSxXQUFXO1FBQ3BCLElBQUksRUFBRSxXQUFXO1FBQ2pCLE1BQU0sRUFBRSxpQ0FBaUM7S0FDMUM7SUFDRDs7T0FFRztJQUNILGNBQWMsRUFBRTtRQUNkLE9BQU8sRUFBRSxrQkFBa0I7UUFDM0IsSUFBSSxFQUFFLGtCQUFrQjtRQUN4QixNQUFNLEVBQUUsaUNBQWlDO0tBQzFDO0lBQ0Q7O09BRUc7SUFDSCxNQUFNLEVBQUU7UUFDTixPQUFPLEVBQUUsU0FBUztRQUNsQixJQUFJLEVBQUUsU0FBUztRQUNmLE1BQU0sRUFBRSxpQ0FBaUM7S0FDMUM7SUFDRDs7T0FFRztJQUNILE9BQU8sRUFBRTtRQUNQLE9BQU8sRUFBRSxTQUFTO1FBQ2xCLElBQUksRUFBRSxTQUFTO1FBQ2YsTUFBTSxFQUFFLGlDQUFpQztLQUMxQztJQUNEOztPQUVHO0lBQ0gsUUFBUSxFQUFFO1FBQ1IsT0FBTyxFQUFFLFVBQVU7UUFDbkIsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLGlDQUFpQztLQUMxQztJQUNEOztPQUVHO0lBQ0gsUUFBUSxFQUFFO1FBQ1IsT0FBTyxFQUFFLFVBQVU7UUFDbkIsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLGlDQUFpQztLQUMxQztDQUNPLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjQuY29yZSB2ZXJzaW9uOiA0LjAuMVxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvZ29hbC1zdGF0dXN8NC4wLjFcclxuXHJcbmltcG9ydCB7IENvZGluZ0FyZ3MgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiBDb2RlcyB0aGF0IHJlZmxlY3QgdGhlIGN1cnJlbnQgc3RhdGUgb2YgYSBnb2FsIGFuZCB3aGV0aGVyIHRoZSBnb2FsIGlzIHN0aWxsIGJlaW5nIHRhcmdldGVkLlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgR29hbFN0YXR1c0NvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogYWNjZXB0ZWQ6IEEgcHJvcG9zZWQgZ29hbCB3YXMgYWNjZXB0ZWQgb3IgYWNrbm93bGVkZ2VkLlxyXG4gICAqL1xyXG4gIEFjY2VwdGVkOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIGFjdGl2ZTogVGhlIGdvYWwgaXMgYmVpbmcgc291Z2h0IGFjdGl2ZWx5LlxyXG4gICAqL1xyXG4gIEFjdGl2ZTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBjYW5jZWxsZWQ6IFRoZSBnb2FsIGhhcyBiZWVuIGFiYW5kb25lZC5cclxuICAgKi9cclxuICBDYW5jZWxsZWQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogY29tcGxldGVkOiBUaGUgZ29hbCBpcyBubyBsb25nZXIgYmVpbmcgc291Z2h0LlxyXG4gICAqL1xyXG4gIENvbXBsZXRlZDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBlbnRlcmVkLWluLWVycm9yOiBUaGUgZ29hbCB3YXMgZW50ZXJlZCBpbiBlcnJvciBhbmQgdm9pZGVkLlxyXG4gICAqL1xyXG4gIEVudGVyZWRJbkVycm9yOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIG9uLWhvbGQ6IFRoZSBnb2FsIHJlbWFpbnMgYSBsb25nIHRlcm0gb2JqZWN0aXZlIGJ1dCBpcyBubyBsb25nZXIgYmVpbmcgYWN0aXZlbHkgcHVyc3VlZCBmb3IgYSB0ZW1wb3JhcnkgcGVyaW9kIG9mIHRpbWUuXHJcbiAgICovXHJcbiAgT25Ib2xkOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIHBsYW5uZWQ6IEEgZ29hbCBpcyBwbGFubmVkIGZvciB0aGlzIHBhdGllbnQuXHJcbiAgICovXHJcbiAgUGxhbm5lZDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBwcm9wb3NlZDogQSBnb2FsIGlzIHByb3Bvc2VkIGZvciB0aGlzIHBhdGllbnQuXHJcbiAgICovXHJcbiAgUHJvcG9zZWQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogcmVqZWN0ZWQ6IEEgcHJvcG9zZWQgZ29hbCB3YXMgcmVqZWN0ZWQuXHJcbiAgICovXHJcbiAgUmVqZWN0ZWQ6IENvZGluZ0FyZ3M7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDb2RlcyB0aGF0IHJlZmxlY3QgdGhlIGN1cnJlbnQgc3RhdGUgb2YgYSBnb2FsIGFuZCB3aGV0aGVyIHRoZSBnb2FsIGlzIHN0aWxsIGJlaW5nIHRhcmdldGVkLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IEdvYWxTdGF0dXNDb2RpbmdzOkdvYWxTdGF0dXNDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIGFjY2VwdGVkOiBBIHByb3Bvc2VkIGdvYWwgd2FzIGFjY2VwdGVkIG9yIGFja25vd2xlZGdlZC5cclxuICAgKi9cclxuICBBY2NlcHRlZDoge1xyXG4gICAgZGlzcGxheTogXCJBY2NlcHRlZFwiLFxyXG4gICAgY29kZTogXCJhY2NlcHRlZFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvZ29hbC1zdGF0dXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIGFjdGl2ZTogVGhlIGdvYWwgaXMgYmVpbmcgc291Z2h0IGFjdGl2ZWx5LlxyXG4gICAqL1xyXG4gIEFjdGl2ZToge1xyXG4gICAgZGlzcGxheTogXCJBY3RpdmVcIixcclxuICAgIGNvZGU6IFwiYWN0aXZlXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9nb2FsLXN0YXR1c1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogY2FuY2VsbGVkOiBUaGUgZ29hbCBoYXMgYmVlbiBhYmFuZG9uZWQuXHJcbiAgICovXHJcbiAgQ2FuY2VsbGVkOiB7XHJcbiAgICBkaXNwbGF5OiBcIkNhbmNlbGxlZFwiLFxyXG4gICAgY29kZTogXCJjYW5jZWxsZWRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2dvYWwtc3RhdHVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBjb21wbGV0ZWQ6IFRoZSBnb2FsIGlzIG5vIGxvbmdlciBiZWluZyBzb3VnaHQuXHJcbiAgICovXHJcbiAgQ29tcGxldGVkOiB7XHJcbiAgICBkaXNwbGF5OiBcIkNvbXBsZXRlZFwiLFxyXG4gICAgY29kZTogXCJjb21wbGV0ZWRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2dvYWwtc3RhdHVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBlbnRlcmVkLWluLWVycm9yOiBUaGUgZ29hbCB3YXMgZW50ZXJlZCBpbiBlcnJvciBhbmQgdm9pZGVkLlxyXG4gICAqL1xyXG4gIEVudGVyZWRJbkVycm9yOiB7XHJcbiAgICBkaXNwbGF5OiBcIkVudGVyZWQgaW4gRXJyb3JcIixcclxuICAgIGNvZGU6IFwiZW50ZXJlZC1pbi1lcnJvclwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvZ29hbC1zdGF0dXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIG9uLWhvbGQ6IFRoZSBnb2FsIHJlbWFpbnMgYSBsb25nIHRlcm0gb2JqZWN0aXZlIGJ1dCBpcyBubyBsb25nZXIgYmVpbmcgYWN0aXZlbHkgcHVyc3VlZCBmb3IgYSB0ZW1wb3JhcnkgcGVyaW9kIG9mIHRpbWUuXHJcbiAgICovXHJcbiAgT25Ib2xkOiB7XHJcbiAgICBkaXNwbGF5OiBcIk9uIEhvbGRcIixcclxuICAgIGNvZGU6IFwib24taG9sZFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvZ29hbC1zdGF0dXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIHBsYW5uZWQ6IEEgZ29hbCBpcyBwbGFubmVkIGZvciB0aGlzIHBhdGllbnQuXHJcbiAgICovXHJcbiAgUGxhbm5lZDoge1xyXG4gICAgZGlzcGxheTogXCJQbGFubmVkXCIsXHJcbiAgICBjb2RlOiBcInBsYW5uZWRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2dvYWwtc3RhdHVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBwcm9wb3NlZDogQSBnb2FsIGlzIHByb3Bvc2VkIGZvciB0aGlzIHBhdGllbnQuXHJcbiAgICovXHJcbiAgUHJvcG9zZWQ6IHtcclxuICAgIGRpc3BsYXk6IFwiUHJvcG9zZWRcIixcclxuICAgIGNvZGU6IFwicHJvcG9zZWRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2dvYWwtc3RhdHVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiByZWplY3RlZDogQSBwcm9wb3NlZCBnb2FsIHdhcyByZWplY3RlZC5cclxuICAgKi9cclxuICBSZWplY3RlZDoge1xyXG4gICAgZGlzcGxheTogXCJSZWplY3RlZFwiLFxyXG4gICAgY29kZTogXCJyZWplY3RlZFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvZ29hbC1zdGF0dXNcIixcclxuICB9LFxyXG59IGFzIGNvbnN0O1xyXG4iXX0=