// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/goal-status|4.0.1
import { Coding } from '../fhir/Coding.js';
/**
 * Codes that reflect the current state of a goal and whether the goal is still being targeted.
 */
export const GoalStatusCodings = {
    /**
     * accepted: A proposed goal was accepted or acknowledged.
     */
    Accepted: new Coding({
        display: "Accepted",
        code: "accepted",
        system: "http://hl7.org/fhir/goal-status",
    }),
    /**
     * active: The goal is being sought actively.
     */
    Active: new Coding({
        display: "Active",
        code: "active",
        system: "http://hl7.org/fhir/goal-status",
    }),
    /**
     * cancelled: The goal has been abandoned.
     */
    Cancelled: new Coding({
        display: "Cancelled",
        code: "cancelled",
        system: "http://hl7.org/fhir/goal-status",
    }),
    /**
     * completed: The goal is no longer being sought.
     */
    Completed: new Coding({
        display: "Completed",
        code: "completed",
        system: "http://hl7.org/fhir/goal-status",
    }),
    /**
     * entered-in-error: The goal was entered in error and voided.
     */
    EnteredInError: new Coding({
        display: "Entered in Error",
        code: "entered-in-error",
        system: "http://hl7.org/fhir/goal-status",
    }),
    /**
     * on-hold: The goal remains a long term objective but is no longer being actively pursued for a temporary period of time.
     */
    OnHold: new Coding({
        display: "On Hold",
        code: "on-hold",
        system: "http://hl7.org/fhir/goal-status",
    }),
    /**
     * planned: A goal is planned for this patient.
     */
    Planned: new Coding({
        display: "Planned",
        code: "planned",
        system: "http://hl7.org/fhir/goal-status",
    }),
    /**
     * proposed: A goal is proposed for this patient.
     */
    Proposed: new Coding({
        display: "Proposed",
        code: "proposed",
        system: "http://hl7.org/fhir/goal-status",
    }),
    /**
     * rejected: A proposed goal was rejected.
     */
    Rejected: new Coding({
        display: "Rejected",
        code: "rejected",
        system: "http://hl7.org/fhir/goal-status",
    }),
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR29hbFN0YXR1c0NvZGluZ3MuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL0dvYWxTdGF0dXNDb2RpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQiwrQ0FBK0M7QUFDL0Msa0NBQWtDO0FBQ2xDLGdFQUFnRTtBQUVoRSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sbUJBQW1CLENBQUE7QUFFMUM7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FBRztJQUMvQjs7T0FFRztJQUNILFFBQVEsRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUNuQixPQUFPLEVBQUUsVUFBVTtRQUNuQixJQUFJLEVBQUUsVUFBVTtRQUNoQixNQUFNLEVBQUUsaUNBQWlDO0tBQzFDLENBQUM7SUFDRjs7T0FFRztJQUNILE1BQU0sRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUNqQixPQUFPLEVBQUUsUUFBUTtRQUNqQixJQUFJLEVBQUUsUUFBUTtRQUNkLE1BQU0sRUFBRSxpQ0FBaUM7S0FDMUMsQ0FBQztJQUNGOztPQUVHO0lBQ0gsU0FBUyxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ3BCLE9BQU8sRUFBRSxXQUFXO1FBQ3BCLElBQUksRUFBRSxXQUFXO1FBQ2pCLE1BQU0sRUFBRSxpQ0FBaUM7S0FDMUMsQ0FBQztJQUNGOztPQUVHO0lBQ0gsU0FBUyxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ3BCLE9BQU8sRUFBRSxXQUFXO1FBQ3BCLElBQUksRUFBRSxXQUFXO1FBQ2pCLE1BQU0sRUFBRSxpQ0FBaUM7S0FDMUMsQ0FBQztJQUNGOztPQUVHO0lBQ0gsY0FBYyxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ3pCLE9BQU8sRUFBRSxrQkFBa0I7UUFDM0IsSUFBSSxFQUFFLGtCQUFrQjtRQUN4QixNQUFNLEVBQUUsaUNBQWlDO0tBQzFDLENBQUM7SUFDRjs7T0FFRztJQUNILE1BQU0sRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUNqQixPQUFPLEVBQUUsU0FBUztRQUNsQixJQUFJLEVBQUUsU0FBUztRQUNmLE1BQU0sRUFBRSxpQ0FBaUM7S0FDMUMsQ0FBQztJQUNGOztPQUVHO0lBQ0gsT0FBTyxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ2xCLE9BQU8sRUFBRSxTQUFTO1FBQ2xCLElBQUksRUFBRSxTQUFTO1FBQ2YsTUFBTSxFQUFFLGlDQUFpQztLQUMxQyxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxRQUFRLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDbkIsT0FBTyxFQUFFLFVBQVU7UUFDbkIsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLGlDQUFpQztLQUMxQyxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxRQUFRLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDbkIsT0FBTyxFQUFFLFVBQVU7UUFDbkIsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLGlDQUFpQztLQUMxQyxDQUFDO0NBQ00sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNC5jb3JlIHZlcnNpb246IDQuMC4xXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9nb2FsLXN0YXR1c3w0LjAuMVxyXG5cclxuaW1wb3J0IHsgQ29kaW5nIH0gZnJvbSAnLi4vZmhpci9Db2RpbmcuanMnXHJcblxyXG4vKipcclxuICogQ29kZXMgdGhhdCByZWZsZWN0IHRoZSBjdXJyZW50IHN0YXRlIG9mIGEgZ29hbCBhbmQgd2hldGhlciB0aGUgZ29hbCBpcyBzdGlsbCBiZWluZyB0YXJnZXRlZC5cclxuICovXHJcbmV4cG9ydCBjb25zdCBHb2FsU3RhdHVzQ29kaW5ncyA9IHtcclxuICAvKipcclxuICAgKiBhY2NlcHRlZDogQSBwcm9wb3NlZCBnb2FsIHdhcyBhY2NlcHRlZCBvciBhY2tub3dsZWRnZWQuXHJcbiAgICovXHJcbiAgQWNjZXB0ZWQ6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJBY2NlcHRlZFwiLFxyXG4gICAgY29kZTogXCJhY2NlcHRlZFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvZ29hbC1zdGF0dXNcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBhY3RpdmU6IFRoZSBnb2FsIGlzIGJlaW5nIHNvdWdodCBhY3RpdmVseS5cclxuICAgKi9cclxuICBBY3RpdmU6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJBY3RpdmVcIixcclxuICAgIGNvZGU6IFwiYWN0aXZlXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9nb2FsLXN0YXR1c1wiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIGNhbmNlbGxlZDogVGhlIGdvYWwgaGFzIGJlZW4gYWJhbmRvbmVkLlxyXG4gICAqL1xyXG4gIENhbmNlbGxlZDogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIkNhbmNlbGxlZFwiLFxyXG4gICAgY29kZTogXCJjYW5jZWxsZWRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2dvYWwtc3RhdHVzXCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogY29tcGxldGVkOiBUaGUgZ29hbCBpcyBubyBsb25nZXIgYmVpbmcgc291Z2h0LlxyXG4gICAqL1xyXG4gIENvbXBsZXRlZDogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIkNvbXBsZXRlZFwiLFxyXG4gICAgY29kZTogXCJjb21wbGV0ZWRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2dvYWwtc3RhdHVzXCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogZW50ZXJlZC1pbi1lcnJvcjogVGhlIGdvYWwgd2FzIGVudGVyZWQgaW4gZXJyb3IgYW5kIHZvaWRlZC5cclxuICAgKi9cclxuICBFbnRlcmVkSW5FcnJvcjogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIkVudGVyZWQgaW4gRXJyb3JcIixcclxuICAgIGNvZGU6IFwiZW50ZXJlZC1pbi1lcnJvclwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvZ29hbC1zdGF0dXNcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBvbi1ob2xkOiBUaGUgZ29hbCByZW1haW5zIGEgbG9uZyB0ZXJtIG9iamVjdGl2ZSBidXQgaXMgbm8gbG9uZ2VyIGJlaW5nIGFjdGl2ZWx5IHB1cnN1ZWQgZm9yIGEgdGVtcG9yYXJ5IHBlcmlvZCBvZiB0aW1lLlxyXG4gICAqL1xyXG4gIE9uSG9sZDogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIk9uIEhvbGRcIixcclxuICAgIGNvZGU6IFwib24taG9sZFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvZ29hbC1zdGF0dXNcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBwbGFubmVkOiBBIGdvYWwgaXMgcGxhbm5lZCBmb3IgdGhpcyBwYXRpZW50LlxyXG4gICAqL1xyXG4gIFBsYW5uZWQ6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJQbGFubmVkXCIsXHJcbiAgICBjb2RlOiBcInBsYW5uZWRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2dvYWwtc3RhdHVzXCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogcHJvcG9zZWQ6IEEgZ29hbCBpcyBwcm9wb3NlZCBmb3IgdGhpcyBwYXRpZW50LlxyXG4gICAqL1xyXG4gIFByb3Bvc2VkOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiUHJvcG9zZWRcIixcclxuICAgIGNvZGU6IFwicHJvcG9zZWRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2dvYWwtc3RhdHVzXCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogcmVqZWN0ZWQ6IEEgcHJvcG9zZWQgZ29hbCB3YXMgcmVqZWN0ZWQuXHJcbiAgICovXHJcbiAgUmVqZWN0ZWQ6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJSZWplY3RlZFwiLFxyXG4gICAgY29kZTogXCJyZWplY3RlZFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvZ29hbC1zdGF0dXNcIixcclxuICB9KSxcclxufSBhcyBjb25zdDtcclxuXHJcbi8qKlxyXG4gKiBDb2RlcyB0aGF0IHJlZmxlY3QgdGhlIGN1cnJlbnQgc3RhdGUgb2YgYSBnb2FsIGFuZCB3aGV0aGVyIHRoZSBnb2FsIGlzIHN0aWxsIGJlaW5nIHRhcmdldGVkLlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgR29hbFN0YXR1c0NvZGluZ1R5cGUgPSB0eXBlb2YgR29hbFN0YXR1c0NvZGluZ3M7XHJcbiJdfQ==