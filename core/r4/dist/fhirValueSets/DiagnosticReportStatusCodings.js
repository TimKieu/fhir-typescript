// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/diagnostic-report-status|4.0.1
import { Coding } from '../fhir/Coding.js';
/**
 * The status of the diagnostic report.
 */
export const DiagnosticReportStatusCodings = {
    /**
     * amended: Subsequent to being final, the report has been modified.  This includes any change in the results, diagnosis, narrative text, or other content of a report that has been issued.
     */
    Amended: new Coding({
        display: "Amended",
        code: "amended",
        system: "http://hl7.org/fhir/diagnostic-report-status",
    }),
    /**
     * appended: Subsequent to being final, the report has been modified by adding new content. The existing content is unchanged.
     */
    Appended: new Coding({
        display: "Appended",
        code: "appended",
        system: "http://hl7.org/fhir/diagnostic-report-status",
    }),
    /**
     * cancelled: The report is unavailable because the measurement was not started or not completed (also sometimes called "aborted").
     */
    Cancelled: new Coding({
        display: "Cancelled",
        code: "cancelled",
        system: "http://hl7.org/fhir/diagnostic-report-status",
    }),
    /**
     * corrected: Subsequent to being final, the report has been modified  to correct an error in the report or referenced results.
     */
    Corrected: new Coding({
        display: "Corrected",
        code: "corrected",
        system: "http://hl7.org/fhir/diagnostic-report-status",
    }),
    /**
     * entered-in-error: The report has been withdrawn following a previous final release.  This electronic record should never have existed, though it is possible that real-world decisions were based on it. (If real-world activity has occurred, the status should be "cancelled" rather than "entered-in-error".).
     */
    EnteredInError: new Coding({
        display: "Entered in Error",
        code: "entered-in-error",
        system: "http://hl7.org/fhir/diagnostic-report-status",
    }),
    /**
     * final: The report is complete and verified by an authorized person.
     */
    Final: new Coding({
        display: "Final",
        code: "final",
        system: "http://hl7.org/fhir/diagnostic-report-status",
    }),
    /**
     * partial: This is a partial (e.g. initial, interim or preliminary) report: data in the report may be incomplete or unverified.
     */
    Partial: new Coding({
        display: "Partial",
        code: "partial",
        system: "http://hl7.org/fhir/diagnostic-report-status",
    }),
    /**
     * preliminary: Verified early results are available, but not all  results are final.
     */
    Preliminary: new Coding({
        display: "Preliminary",
        code: "preliminary",
        system: "http://hl7.org/fhir/diagnostic-report-status",
    }),
    /**
     * registered: The existence of the report is registered, but there is nothing yet available.
     */
    Registered: new Coding({
        display: "Registered",
        code: "registered",
        system: "http://hl7.org/fhir/diagnostic-report-status",
    }),
    /**
     * unknown: The authoring/source system does not know which of the status values currently applies for this observation. Note: This concept is not to be used for "other" - one of the listed statuses is presumed to apply, but the authoring/source system does not know which.
     */
    Unknown: new Coding({
        display: "Unknown",
        code: "unknown",
        system: "http://hl7.org/fhir/diagnostic-report-status",
    }),
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGlhZ25vc3RpY1JlcG9ydFN0YXR1c0NvZGluZ3MuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL0RpYWdub3N0aWNSZXBvcnRTdGF0dXNDb2RpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQiwrQ0FBK0M7QUFDL0Msa0NBQWtDO0FBQ2xDLDZFQUE2RTtBQUU3RSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sbUJBQW1CLENBQUE7QUFFMUM7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSw2QkFBNkIsR0FBRztJQUMzQzs7T0FFRztJQUNILE9BQU8sRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUNsQixPQUFPLEVBQUUsU0FBUztRQUNsQixJQUFJLEVBQUUsU0FBUztRQUNmLE1BQU0sRUFBRSw4Q0FBOEM7S0FDdkQsQ0FBQztJQUNGOztPQUVHO0lBQ0gsUUFBUSxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ25CLE9BQU8sRUFBRSxVQUFVO1FBQ25CLElBQUksRUFBRSxVQUFVO1FBQ2hCLE1BQU0sRUFBRSw4Q0FBOEM7S0FDdkQsQ0FBQztJQUNGOztPQUVHO0lBQ0gsU0FBUyxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ3BCLE9BQU8sRUFBRSxXQUFXO1FBQ3BCLElBQUksRUFBRSxXQUFXO1FBQ2pCLE1BQU0sRUFBRSw4Q0FBOEM7S0FDdkQsQ0FBQztJQUNGOztPQUVHO0lBQ0gsU0FBUyxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ3BCLE9BQU8sRUFBRSxXQUFXO1FBQ3BCLElBQUksRUFBRSxXQUFXO1FBQ2pCLE1BQU0sRUFBRSw4Q0FBOEM7S0FDdkQsQ0FBQztJQUNGOztPQUVHO0lBQ0gsY0FBYyxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ3pCLE9BQU8sRUFBRSxrQkFBa0I7UUFDM0IsSUFBSSxFQUFFLGtCQUFrQjtRQUN4QixNQUFNLEVBQUUsOENBQThDO0tBQ3ZELENBQUM7SUFDRjs7T0FFRztJQUNILEtBQUssRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUNoQixPQUFPLEVBQUUsT0FBTztRQUNoQixJQUFJLEVBQUUsT0FBTztRQUNiLE1BQU0sRUFBRSw4Q0FBOEM7S0FDdkQsQ0FBQztJQUNGOztPQUVHO0lBQ0gsT0FBTyxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ2xCLE9BQU8sRUFBRSxTQUFTO1FBQ2xCLElBQUksRUFBRSxTQUFTO1FBQ2YsTUFBTSxFQUFFLDhDQUE4QztLQUN2RCxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxXQUFXLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDdEIsT0FBTyxFQUFFLGFBQWE7UUFDdEIsSUFBSSxFQUFFLGFBQWE7UUFDbkIsTUFBTSxFQUFFLDhDQUE4QztLQUN2RCxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxVQUFVLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDckIsT0FBTyxFQUFFLFlBQVk7UUFDckIsSUFBSSxFQUFFLFlBQVk7UUFDbEIsTUFBTSxFQUFFLDhDQUE4QztLQUN2RCxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxPQUFPLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDbEIsT0FBTyxFQUFFLFNBQVM7UUFDbEIsSUFBSSxFQUFFLFNBQVM7UUFDZixNQUFNLEVBQUUsOENBQThDO0tBQ3ZELENBQUM7Q0FDTSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0LmNvcmUgdmVyc2lvbjogNC4wLjFcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L2RpYWdub3N0aWMtcmVwb3J0LXN0YXR1c3w0LjAuMVxyXG5cclxuaW1wb3J0IHsgQ29kaW5nIH0gZnJvbSAnLi4vZmhpci9Db2RpbmcuanMnXHJcblxyXG4vKipcclxuICogVGhlIHN0YXR1cyBvZiB0aGUgZGlhZ25vc3RpYyByZXBvcnQuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgRGlhZ25vc3RpY1JlcG9ydFN0YXR1c0NvZGluZ3MgPSB7XHJcbiAgLyoqXHJcbiAgICogYW1lbmRlZDogU3Vic2VxdWVudCB0byBiZWluZyBmaW5hbCwgdGhlIHJlcG9ydCBoYXMgYmVlbiBtb2RpZmllZC4gIFRoaXMgaW5jbHVkZXMgYW55IGNoYW5nZSBpbiB0aGUgcmVzdWx0cywgZGlhZ25vc2lzLCBuYXJyYXRpdmUgdGV4dCwgb3Igb3RoZXIgY29udGVudCBvZiBhIHJlcG9ydCB0aGF0IGhhcyBiZWVuIGlzc3VlZC5cclxuICAgKi9cclxuICBBbWVuZGVkOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiQW1lbmRlZFwiLFxyXG4gICAgY29kZTogXCJhbWVuZGVkXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9kaWFnbm9zdGljLXJlcG9ydC1zdGF0dXNcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBhcHBlbmRlZDogU3Vic2VxdWVudCB0byBiZWluZyBmaW5hbCwgdGhlIHJlcG9ydCBoYXMgYmVlbiBtb2RpZmllZCBieSBhZGRpbmcgbmV3IGNvbnRlbnQuIFRoZSBleGlzdGluZyBjb250ZW50IGlzIHVuY2hhbmdlZC5cclxuICAgKi9cclxuICBBcHBlbmRlZDogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIkFwcGVuZGVkXCIsXHJcbiAgICBjb2RlOiBcImFwcGVuZGVkXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9kaWFnbm9zdGljLXJlcG9ydC1zdGF0dXNcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBjYW5jZWxsZWQ6IFRoZSByZXBvcnQgaXMgdW5hdmFpbGFibGUgYmVjYXVzZSB0aGUgbWVhc3VyZW1lbnQgd2FzIG5vdCBzdGFydGVkIG9yIG5vdCBjb21wbGV0ZWQgKGFsc28gc29tZXRpbWVzIGNhbGxlZCBcImFib3J0ZWRcIikuXHJcbiAgICovXHJcbiAgQ2FuY2VsbGVkOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiQ2FuY2VsbGVkXCIsXHJcbiAgICBjb2RlOiBcImNhbmNlbGxlZFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvZGlhZ25vc3RpYy1yZXBvcnQtc3RhdHVzXCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogY29ycmVjdGVkOiBTdWJzZXF1ZW50IHRvIGJlaW5nIGZpbmFsLCB0aGUgcmVwb3J0IGhhcyBiZWVuIG1vZGlmaWVkICB0byBjb3JyZWN0IGFuIGVycm9yIGluIHRoZSByZXBvcnQgb3IgcmVmZXJlbmNlZCByZXN1bHRzLlxyXG4gICAqL1xyXG4gIENvcnJlY3RlZDogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIkNvcnJlY3RlZFwiLFxyXG4gICAgY29kZTogXCJjb3JyZWN0ZWRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2RpYWdub3N0aWMtcmVwb3J0LXN0YXR1c1wiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIGVudGVyZWQtaW4tZXJyb3I6IFRoZSByZXBvcnQgaGFzIGJlZW4gd2l0aGRyYXduIGZvbGxvd2luZyBhIHByZXZpb3VzIGZpbmFsIHJlbGVhc2UuICBUaGlzIGVsZWN0cm9uaWMgcmVjb3JkIHNob3VsZCBuZXZlciBoYXZlIGV4aXN0ZWQsIHRob3VnaCBpdCBpcyBwb3NzaWJsZSB0aGF0IHJlYWwtd29ybGQgZGVjaXNpb25zIHdlcmUgYmFzZWQgb24gaXQuIChJZiByZWFsLXdvcmxkIGFjdGl2aXR5IGhhcyBvY2N1cnJlZCwgdGhlIHN0YXR1cyBzaG91bGQgYmUgXCJjYW5jZWxsZWRcIiByYXRoZXIgdGhhbiBcImVudGVyZWQtaW4tZXJyb3JcIi4pLlxyXG4gICAqL1xyXG4gIEVudGVyZWRJbkVycm9yOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiRW50ZXJlZCBpbiBFcnJvclwiLFxyXG4gICAgY29kZTogXCJlbnRlcmVkLWluLWVycm9yXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9kaWFnbm9zdGljLXJlcG9ydC1zdGF0dXNcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBmaW5hbDogVGhlIHJlcG9ydCBpcyBjb21wbGV0ZSBhbmQgdmVyaWZpZWQgYnkgYW4gYXV0aG9yaXplZCBwZXJzb24uXHJcbiAgICovXHJcbiAgRmluYWw6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJGaW5hbFwiLFxyXG4gICAgY29kZTogXCJmaW5hbFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvZGlhZ25vc3RpYy1yZXBvcnQtc3RhdHVzXCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogcGFydGlhbDogVGhpcyBpcyBhIHBhcnRpYWwgKGUuZy4gaW5pdGlhbCwgaW50ZXJpbSBvciBwcmVsaW1pbmFyeSkgcmVwb3J0OiBkYXRhIGluIHRoZSByZXBvcnQgbWF5IGJlIGluY29tcGxldGUgb3IgdW52ZXJpZmllZC5cclxuICAgKi9cclxuICBQYXJ0aWFsOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiUGFydGlhbFwiLFxyXG4gICAgY29kZTogXCJwYXJ0aWFsXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9kaWFnbm9zdGljLXJlcG9ydC1zdGF0dXNcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBwcmVsaW1pbmFyeTogVmVyaWZpZWQgZWFybHkgcmVzdWx0cyBhcmUgYXZhaWxhYmxlLCBidXQgbm90IGFsbCAgcmVzdWx0cyBhcmUgZmluYWwuXHJcbiAgICovXHJcbiAgUHJlbGltaW5hcnk6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJQcmVsaW1pbmFyeVwiLFxyXG4gICAgY29kZTogXCJwcmVsaW1pbmFyeVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvZGlhZ25vc3RpYy1yZXBvcnQtc3RhdHVzXCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogcmVnaXN0ZXJlZDogVGhlIGV4aXN0ZW5jZSBvZiB0aGUgcmVwb3J0IGlzIHJlZ2lzdGVyZWQsIGJ1dCB0aGVyZSBpcyBub3RoaW5nIHlldCBhdmFpbGFibGUuXHJcbiAgICovXHJcbiAgUmVnaXN0ZXJlZDogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIlJlZ2lzdGVyZWRcIixcclxuICAgIGNvZGU6IFwicmVnaXN0ZXJlZFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvZGlhZ25vc3RpYy1yZXBvcnQtc3RhdHVzXCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogdW5rbm93bjogVGhlIGF1dGhvcmluZy9zb3VyY2Ugc3lzdGVtIGRvZXMgbm90IGtub3cgd2hpY2ggb2YgdGhlIHN0YXR1cyB2YWx1ZXMgY3VycmVudGx5IGFwcGxpZXMgZm9yIHRoaXMgb2JzZXJ2YXRpb24uIE5vdGU6IFRoaXMgY29uY2VwdCBpcyBub3QgdG8gYmUgdXNlZCBmb3IgXCJvdGhlclwiIC0gb25lIG9mIHRoZSBsaXN0ZWQgc3RhdHVzZXMgaXMgcHJlc3VtZWQgdG8gYXBwbHksIGJ1dCB0aGUgYXV0aG9yaW5nL3NvdXJjZSBzeXN0ZW0gZG9lcyBub3Qga25vdyB3aGljaC5cclxuICAgKi9cclxuICBVbmtub3duOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiVW5rbm93blwiLFxyXG4gICAgY29kZTogXCJ1bmtub3duXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9kaWFnbm9zdGljLXJlcG9ydC1zdGF0dXNcIixcclxuICB9KSxcclxufSBhcyBjb25zdDtcclxuXHJcbi8qKlxyXG4gKiBUaGUgc3RhdHVzIG9mIHRoZSBkaWFnbm9zdGljIHJlcG9ydC5cclxuICovXHJcbmV4cG9ydCB0eXBlIERpYWdub3N0aWNSZXBvcnRTdGF0dXNDb2RpbmdUeXBlID0gdHlwZW9mIERpYWdub3N0aWNSZXBvcnRTdGF0dXNDb2RpbmdzO1xyXG4iXX0=