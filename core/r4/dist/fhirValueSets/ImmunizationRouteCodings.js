// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/immunization-route|4.0.1
/**
 * The value set to instantiate this attribute should be drawn from a terminologically robust code system that consists of or contains concepts to support describing the administrative routes used during vaccination. This value set is provided as a suggestive example.
 */
export const ImmunizationRouteCodings = {
    /**
     * IDINJ: Injection, intradermal
     */
    InjectionIntradermal: {
        display: "Injection, intradermal",
        code: "IDINJ",
        system: "http://terminology.hl7.org/CodeSystem/v3-RouteOfAdministration",
    },
    /**
     * IM: Injection, intramuscular
     */
    InjectionIntramuscular: {
        display: "Injection, intramuscular",
        code: "IM",
        system: "http://terminology.hl7.org/CodeSystem/v3-RouteOfAdministration",
    },
    /**
     * IVINJ: Injection, intravenous
     */
    InjectionIntravenous: {
        display: "Injection, intravenous",
        code: "IVINJ",
        system: "http://terminology.hl7.org/CodeSystem/v3-RouteOfAdministration",
    },
    /**
     * NASINHLC: Inhalation, nasal, prongs
     */
    InhalationNasalCannula: {
        display: "Inhalation, nasal cannula",
        code: "NASINHLC",
        system: "http://terminology.hl7.org/CodeSystem/v3-RouteOfAdministration",
    },
    /**
     * PO: Swallow, oral
     */
    SwallowOral: {
        display: "Swallow, oral",
        code: "PO",
        system: "http://terminology.hl7.org/CodeSystem/v3-RouteOfAdministration",
    },
    /**
     * SQ: Injection, subcutaneous
     */
    InjectionSubcutaneous: {
        display: "Injection, subcutaneous",
        code: "SQ",
        system: "http://terminology.hl7.org/CodeSystem/v3-RouteOfAdministration",
    },
    /**
     * TRNSDERM: Transdermal
     */
    Transdermal: {
        display: "Transdermal",
        code: "TRNSDERM",
        system: "http://terminology.hl7.org/CodeSystem/v3-RouteOfAdministration",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSW1tdW5pemF0aW9uUm91dGVDb2RpbmdzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9JbW11bml6YXRpb25Sb3V0ZUNvZGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLCtDQUErQztBQUMvQyxrQ0FBa0M7QUFDbEMsdUVBQXVFO0FBc0N2RTs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLHdCQUF3QixHQUErQjtJQUNsRTs7T0FFRztJQUNILG9CQUFvQixFQUFFO1FBQ3BCLE9BQU8sRUFBRSx3QkFBd0I7UUFDakMsSUFBSSxFQUFFLE9BQU87UUFDYixNQUFNLEVBQUUsZ0VBQWdFO0tBQ3pFO0lBQ0Q7O09BRUc7SUFDSCxzQkFBc0IsRUFBRTtRQUN0QixPQUFPLEVBQUUsMEJBQTBCO1FBQ25DLElBQUksRUFBRSxJQUFJO1FBQ1YsTUFBTSxFQUFFLGdFQUFnRTtLQUN6RTtJQUNEOztPQUVHO0lBQ0gsb0JBQW9CLEVBQUU7UUFDcEIsT0FBTyxFQUFFLHdCQUF3QjtRQUNqQyxJQUFJLEVBQUUsT0FBTztRQUNiLE1BQU0sRUFBRSxnRUFBZ0U7S0FDekU7SUFDRDs7T0FFRztJQUNILHNCQUFzQixFQUFFO1FBQ3RCLE9BQU8sRUFBRSwyQkFBMkI7UUFDcEMsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLGdFQUFnRTtLQUN6RTtJQUNEOztPQUVHO0lBQ0gsV0FBVyxFQUFFO1FBQ1gsT0FBTyxFQUFFLGVBQWU7UUFDeEIsSUFBSSxFQUFFLElBQUk7UUFDVixNQUFNLEVBQUUsZ0VBQWdFO0tBQ3pFO0lBQ0Q7O09BRUc7SUFDSCxxQkFBcUIsRUFBRTtRQUNyQixPQUFPLEVBQUUseUJBQXlCO1FBQ2xDLElBQUksRUFBRSxJQUFJO1FBQ1YsTUFBTSxFQUFFLGdFQUFnRTtLQUN6RTtJQUNEOztPQUVHO0lBQ0gsV0FBVyxFQUFFO1FBQ1gsT0FBTyxFQUFFLGFBQWE7UUFDdEIsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLGdFQUFnRTtLQUN6RTtDQUNPLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjQuY29yZSB2ZXJzaW9uOiA0LjAuMVxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvaW1tdW5pemF0aW9uLXJvdXRlfDQuMC4xXHJcblxyXG5pbXBvcnQgeyBDb2RpbmdBcmdzIH0gZnJvbSAnLi4vZmhpci9Db2RpbmcuanMnXHJcblxyXG4vKipcclxuICogVGhlIHZhbHVlIHNldCB0byBpbnN0YW50aWF0ZSB0aGlzIGF0dHJpYnV0ZSBzaG91bGQgYmUgZHJhd24gZnJvbSBhIHRlcm1pbm9sb2dpY2FsbHkgcm9idXN0IGNvZGUgc3lzdGVtIHRoYXQgY29uc2lzdHMgb2Ygb3IgY29udGFpbnMgY29uY2VwdHMgdG8gc3VwcG9ydCBkZXNjcmliaW5nIHRoZSBhZG1pbmlzdHJhdGl2ZSByb3V0ZXMgdXNlZCBkdXJpbmcgdmFjY2luYXRpb24uIFRoaXMgdmFsdWUgc2V0IGlzIHByb3ZpZGVkIGFzIGEgc3VnZ2VzdGl2ZSBleGFtcGxlLlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgSW1tdW5pemF0aW9uUm91dGVDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIElESU5KOiBJbmplY3Rpb24sIGludHJhZGVybWFsXHJcbiAgICovXHJcbiAgSW5qZWN0aW9uSW50cmFkZXJtYWw6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogSU06IEluamVjdGlvbiwgaW50cmFtdXNjdWxhclxyXG4gICAqL1xyXG4gIEluamVjdGlvbkludHJhbXVzY3VsYXI6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogSVZJTko6IEluamVjdGlvbiwgaW50cmF2ZW5vdXNcclxuICAgKi9cclxuICBJbmplY3Rpb25JbnRyYXZlbm91czogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBOQVNJTkhMQzogSW5oYWxhdGlvbiwgbmFzYWwsIHByb25nc1xyXG4gICAqL1xyXG4gIEluaGFsYXRpb25OYXNhbENhbm51bGE6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogUE86IFN3YWxsb3csIG9yYWxcclxuICAgKi9cclxuICBTd2FsbG93T3JhbDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBTUTogSW5qZWN0aW9uLCBzdWJjdXRhbmVvdXNcclxuICAgKi9cclxuICBJbmplY3Rpb25TdWJjdXRhbmVvdXM6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogVFJOU0RFUk06IFRyYW5zZGVybWFsXHJcbiAgICovXHJcbiAgVHJhbnNkZXJtYWw6IENvZGluZ0FyZ3M7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBUaGUgdmFsdWUgc2V0IHRvIGluc3RhbnRpYXRlIHRoaXMgYXR0cmlidXRlIHNob3VsZCBiZSBkcmF3biBmcm9tIGEgdGVybWlub2xvZ2ljYWxseSByb2J1c3QgY29kZSBzeXN0ZW0gdGhhdCBjb25zaXN0cyBvZiBvciBjb250YWlucyBjb25jZXB0cyB0byBzdXBwb3J0IGRlc2NyaWJpbmcgdGhlIGFkbWluaXN0cmF0aXZlIHJvdXRlcyB1c2VkIGR1cmluZyB2YWNjaW5hdGlvbi4gVGhpcyB2YWx1ZSBzZXQgaXMgcHJvdmlkZWQgYXMgYSBzdWdnZXN0aXZlIGV4YW1wbGUuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgSW1tdW5pemF0aW9uUm91dGVDb2RpbmdzOkltbXVuaXphdGlvblJvdXRlQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBJRElOSjogSW5qZWN0aW9uLCBpbnRyYWRlcm1hbFxyXG4gICAqL1xyXG4gIEluamVjdGlvbkludHJhZGVybWFsOiB7XHJcbiAgICBkaXNwbGF5OiBcIkluamVjdGlvbiwgaW50cmFkZXJtYWxcIixcclxuICAgIGNvZGU6IFwiSURJTkpcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL3YzLVJvdXRlT2ZBZG1pbmlzdHJhdGlvblwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogSU06IEluamVjdGlvbiwgaW50cmFtdXNjdWxhclxyXG4gICAqL1xyXG4gIEluamVjdGlvbkludHJhbXVzY3VsYXI6IHtcclxuICAgIGRpc3BsYXk6IFwiSW5qZWN0aW9uLCBpbnRyYW11c2N1bGFyXCIsXHJcbiAgICBjb2RlOiBcIklNXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS92My1Sb3V0ZU9mQWRtaW5pc3RyYXRpb25cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIElWSU5KOiBJbmplY3Rpb24sIGludHJhdmVub3VzXHJcbiAgICovXHJcbiAgSW5qZWN0aW9uSW50cmF2ZW5vdXM6IHtcclxuICAgIGRpc3BsYXk6IFwiSW5qZWN0aW9uLCBpbnRyYXZlbm91c1wiLFxyXG4gICAgY29kZTogXCJJVklOSlwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vdjMtUm91dGVPZkFkbWluaXN0cmF0aW9uXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBOQVNJTkhMQzogSW5oYWxhdGlvbiwgbmFzYWwsIHByb25nc1xyXG4gICAqL1xyXG4gIEluaGFsYXRpb25OYXNhbENhbm51bGE6IHtcclxuICAgIGRpc3BsYXk6IFwiSW5oYWxhdGlvbiwgbmFzYWwgY2FubnVsYVwiLFxyXG4gICAgY29kZTogXCJOQVNJTkhMQ1wiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vdjMtUm91dGVPZkFkbWluaXN0cmF0aW9uXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBQTzogU3dhbGxvdywgb3JhbFxyXG4gICAqL1xyXG4gIFN3YWxsb3dPcmFsOiB7XHJcbiAgICBkaXNwbGF5OiBcIlN3YWxsb3csIG9yYWxcIixcclxuICAgIGNvZGU6IFwiUE9cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL3YzLVJvdXRlT2ZBZG1pbmlzdHJhdGlvblwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogU1E6IEluamVjdGlvbiwgc3ViY3V0YW5lb3VzXHJcbiAgICovXHJcbiAgSW5qZWN0aW9uU3ViY3V0YW5lb3VzOiB7XHJcbiAgICBkaXNwbGF5OiBcIkluamVjdGlvbiwgc3ViY3V0YW5lb3VzXCIsXHJcbiAgICBjb2RlOiBcIlNRXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS92My1Sb3V0ZU9mQWRtaW5pc3RyYXRpb25cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIFRSTlNERVJNOiBUcmFuc2Rlcm1hbFxyXG4gICAqL1xyXG4gIFRyYW5zZGVybWFsOiB7XHJcbiAgICBkaXNwbGF5OiBcIlRyYW5zZGVybWFsXCIsXHJcbiAgICBjb2RlOiBcIlRSTlNERVJNXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS92My1Sb3V0ZU9mQWRtaW5pc3RyYXRpb25cIixcclxuICB9LFxyXG59IGFzIGNvbnN0O1xyXG4iXX0=