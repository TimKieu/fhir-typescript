// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/timing-abbreviation|4.0.1
/**
 * Code for a known / defined timing pattern.
 */
export const TimingAbbreviationCodes = {
    /**
     * AM: Every morning at institution specified times.
     */
    AM: "AM",
    /**
     * BED: At bedtime (institution specified time).
     */
    AtBedtime: "BED",
    /**
     * BID: Two times a day at institution specified time
     */
    BID: "BID",
    /**
     * MO: Monthly at institution specified time.
     */
    Monthly: "MO",
    /**
     * PM: Every afternoon at institution specified times.
     */
    PM: "PM",
    /**
     * Q1H: Every hour at institution specified times.
     */
    EveryHour: "Q1H",
    /**
     * Q2H: Every 2 hours at institution specified times.
     */
    Every2Hours: "Q2H",
    /**
     * Q3H: Every 3 hours at institution specified times.
     */
    Every3Hours: "Q3H",
    /**
     * Q4H: Every 4 hours at institution specified time
     */
    Q4H: "Q4H",
    /**
     * Q6H: Every 6 hours at institution specified time
     */
    Q6H: "Q6H",
    /**
     * Q8H: Every 8 hours at institution specified times.
     */
    Every8Hours: "Q8H",
    /**
     * QD: Every day at institution specified times.
     */
    QD: "QD",
    /**
     * QID: Four times a day at institution specified time
     */
    QID: "QID",
    /**
     * QOD: Every other day at institution specified times.
     */
    QOD: "QOD",
    /**
     * TID: Three times a day at institution specified time
     */
    TID: "TID",
    /**
     * WK: Weekly at institution specified time.
     */
    Weekly: "WK",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGltaW5nQWJicmV2aWF0aW9uQ29kZXMuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL1RpbWluZ0FiYnJldmlhdGlvbkNvZGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQiwrQ0FBK0M7QUFDL0Msa0NBQWtDO0FBQ2xDLHdFQUF3RTtBQUV4RTs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLHVCQUF1QixHQUFHO0lBQ3JDOztPQUVHO0lBQ0gsRUFBRSxFQUFFLElBQUk7SUFDUjs7T0FFRztJQUNILFNBQVMsRUFBRSxLQUFLO0lBQ2hCOztPQUVHO0lBQ0gsR0FBRyxFQUFFLEtBQUs7SUFDVjs7T0FFRztJQUNILE9BQU8sRUFBRSxJQUFJO0lBQ2I7O09BRUc7SUFDSCxFQUFFLEVBQUUsSUFBSTtJQUNSOztPQUVHO0lBQ0gsU0FBUyxFQUFFLEtBQUs7SUFDaEI7O09BRUc7SUFDSCxXQUFXLEVBQUUsS0FBSztJQUNsQjs7T0FFRztJQUNILFdBQVcsRUFBRSxLQUFLO0lBQ2xCOztPQUVHO0lBQ0gsR0FBRyxFQUFFLEtBQUs7SUFDVjs7T0FFRztJQUNILEdBQUcsRUFBRSxLQUFLO0lBQ1Y7O09BRUc7SUFDSCxXQUFXLEVBQUUsS0FBSztJQUNsQjs7T0FFRztJQUNILEVBQUUsRUFBRSxJQUFJO0lBQ1I7O09BRUc7SUFDSCxHQUFHLEVBQUUsS0FBSztJQUNWOztPQUVHO0lBQ0gsR0FBRyxFQUFFLEtBQUs7SUFDVjs7T0FFRztJQUNILEdBQUcsRUFBRSxLQUFLO0lBQ1Y7O09BRUc7SUFDSCxNQUFNLEVBQUUsSUFBSTtDQUNKLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjQuY29yZSB2ZXJzaW9uOiA0LjAuMVxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvdGltaW5nLWFiYnJldmlhdGlvbnw0LjAuMVxyXG5cclxuLyoqXHJcbiAqIENvZGUgZm9yIGEga25vd24gLyBkZWZpbmVkIHRpbWluZyBwYXR0ZXJuLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IFRpbWluZ0FiYnJldmlhdGlvbkNvZGVzID0ge1xyXG4gIC8qKlxyXG4gICAqIEFNOiBFdmVyeSBtb3JuaW5nIGF0IGluc3RpdHV0aW9uIHNwZWNpZmllZCB0aW1lcy5cclxuICAgKi9cclxuICBBTTogXCJBTVwiLFxyXG4gIC8qKlxyXG4gICAqIEJFRDogQXQgYmVkdGltZSAoaW5zdGl0dXRpb24gc3BlY2lmaWVkIHRpbWUpLlxyXG4gICAqL1xyXG4gIEF0QmVkdGltZTogXCJCRURcIixcclxuICAvKipcclxuICAgKiBCSUQ6IFR3byB0aW1lcyBhIGRheSBhdCBpbnN0aXR1dGlvbiBzcGVjaWZpZWQgdGltZVxyXG4gICAqL1xyXG4gIEJJRDogXCJCSURcIixcclxuICAvKipcclxuICAgKiBNTzogTW9udGhseSBhdCBpbnN0aXR1dGlvbiBzcGVjaWZpZWQgdGltZS5cclxuICAgKi9cclxuICBNb250aGx5OiBcIk1PXCIsXHJcbiAgLyoqXHJcbiAgICogUE06IEV2ZXJ5IGFmdGVybm9vbiBhdCBpbnN0aXR1dGlvbiBzcGVjaWZpZWQgdGltZXMuXHJcbiAgICovXHJcbiAgUE06IFwiUE1cIixcclxuICAvKipcclxuICAgKiBRMUg6IEV2ZXJ5IGhvdXIgYXQgaW5zdGl0dXRpb24gc3BlY2lmaWVkIHRpbWVzLlxyXG4gICAqL1xyXG4gIEV2ZXJ5SG91cjogXCJRMUhcIixcclxuICAvKipcclxuICAgKiBRMkg6IEV2ZXJ5IDIgaG91cnMgYXQgaW5zdGl0dXRpb24gc3BlY2lmaWVkIHRpbWVzLlxyXG4gICAqL1xyXG4gIEV2ZXJ5MkhvdXJzOiBcIlEySFwiLFxyXG4gIC8qKlxyXG4gICAqIFEzSDogRXZlcnkgMyBob3VycyBhdCBpbnN0aXR1dGlvbiBzcGVjaWZpZWQgdGltZXMuXHJcbiAgICovXHJcbiAgRXZlcnkzSG91cnM6IFwiUTNIXCIsXHJcbiAgLyoqXHJcbiAgICogUTRIOiBFdmVyeSA0IGhvdXJzIGF0IGluc3RpdHV0aW9uIHNwZWNpZmllZCB0aW1lXHJcbiAgICovXHJcbiAgUTRIOiBcIlE0SFwiLFxyXG4gIC8qKlxyXG4gICAqIFE2SDogRXZlcnkgNiBob3VycyBhdCBpbnN0aXR1dGlvbiBzcGVjaWZpZWQgdGltZVxyXG4gICAqL1xyXG4gIFE2SDogXCJRNkhcIixcclxuICAvKipcclxuICAgKiBROEg6IEV2ZXJ5IDggaG91cnMgYXQgaW5zdGl0dXRpb24gc3BlY2lmaWVkIHRpbWVzLlxyXG4gICAqL1xyXG4gIEV2ZXJ5OEhvdXJzOiBcIlE4SFwiLFxyXG4gIC8qKlxyXG4gICAqIFFEOiBFdmVyeSBkYXkgYXQgaW5zdGl0dXRpb24gc3BlY2lmaWVkIHRpbWVzLlxyXG4gICAqL1xyXG4gIFFEOiBcIlFEXCIsXHJcbiAgLyoqXHJcbiAgICogUUlEOiBGb3VyIHRpbWVzIGEgZGF5IGF0IGluc3RpdHV0aW9uIHNwZWNpZmllZCB0aW1lXHJcbiAgICovXHJcbiAgUUlEOiBcIlFJRFwiLFxyXG4gIC8qKlxyXG4gICAqIFFPRDogRXZlcnkgb3RoZXIgZGF5IGF0IGluc3RpdHV0aW9uIHNwZWNpZmllZCB0aW1lcy5cclxuICAgKi9cclxuICBRT0Q6IFwiUU9EXCIsXHJcbiAgLyoqXHJcbiAgICogVElEOiBUaHJlZSB0aW1lcyBhIGRheSBhdCBpbnN0aXR1dGlvbiBzcGVjaWZpZWQgdGltZVxyXG4gICAqL1xyXG4gIFRJRDogXCJUSURcIixcclxuICAvKipcclxuICAgKiBXSzogV2Vla2x5IGF0IGluc3RpdHV0aW9uIHNwZWNpZmllZCB0aW1lLlxyXG4gICAqL1xyXG4gIFdlZWtseTogXCJXS1wiLFxyXG59IGFzIGNvbnN0O1xyXG5cclxuLyoqXHJcbiAqIENvZGUgZm9yIGEga25vd24gLyBkZWZpbmVkIHRpbWluZyBwYXR0ZXJuLlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgVGltaW5nQWJicmV2aWF0aW9uQ29kZVR5cGUgPSB0eXBlb2YgVGltaW5nQWJicmV2aWF0aW9uQ29kZXNba2V5b2YgdHlwZW9mIFRpbWluZ0FiYnJldmlhdGlvbkNvZGVzXTtcclxuIl19