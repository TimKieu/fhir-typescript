{"version":3,"file":"ReferenceHandlingPolicyCodings.js","sources":["../../src/fhirValueSets/ReferenceHandlingPolicyCodings.ts"],"sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4.core version: 4.0.1\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR ValueSet: http://hl7.org/fhir/ValueSet/reference-handling-policy|4.0.1\r\n\r\nimport { Coding } from '../fhir/Coding.js'\r\n\r\n/**\r\n * A set of flags that defines how references are supported.\r\n */\r\nexport const ReferenceHandlingPolicyCodings = {\r\n  /**\r\n   * enforced: The server enforces that references have integrity - e.g. it ensures that references can always be resolved. This is typically the case for clinical record systems, but often not the case for middleware/proxy systems.\r\n   */\r\n  ReferenceIntegrityEnforced: new Coding({\r\n    display: \"Reference Integrity Enforced\",\r\n    code: \"enforced\",\r\n    system: \"http://hl7.org/fhir/reference-handling-policy\",\r\n  }),\r\n  /**\r\n   * literal: The server supports and populates Literal references (i.e. using Reference.reference) where they are known (this code does not guarantee that all references are literal; see 'enforced').\r\n   */\r\n  LiteralReferences: new Coding({\r\n    display: \"Literal References\",\r\n    code: \"literal\",\r\n    system: \"http://hl7.org/fhir/reference-handling-policy\",\r\n  }),\r\n  /**\r\n   * local: The server does not support references that point to other servers.\r\n   */\r\n  LocalReferencesOnly: new Coding({\r\n    display: \"Local References Only\",\r\n    code: \"local\",\r\n    system: \"http://hl7.org/fhir/reference-handling-policy\",\r\n  }),\r\n  /**\r\n   * logical: The server allows logical references (i.e. using Reference.identifier).\r\n   */\r\n  LogicalReferences: new Coding({\r\n    display: \"Logical References\",\r\n    code: \"logical\",\r\n    system: \"http://hl7.org/fhir/reference-handling-policy\",\r\n  }),\r\n  /**\r\n   * resolves: The server will attempt to resolve logical references to literal references - i.e. converting Reference.identifier to Reference.reference (if resolution fails, the server may still accept resources; see logical).\r\n   */\r\n  ResolvesReferences: new Coding({\r\n    display: \"Resolves References\",\r\n    code: \"resolves\",\r\n    system: \"http://hl7.org/fhir/reference-handling-policy\",\r\n  }),\r\n} as const;\r\n\r\n/**\r\n * A set of flags that defines how references are supported.\r\n */\r\nexport type ReferenceHandlingPolicyCodingType = typeof ReferenceHandlingPolicyCodings;\r\n"],"names":[],"mappings":";;;;AAAA;AAOA;;AAEG;AACU,IAAA,8BAA8B,GAAG;AAC5C;;AAEG;IACH,0BAA0B,EAAE,IAAI,MAAM,CAAC;AACrC,QAAA,OAAO,EAAE,8BAA8B;AACvC,QAAA,IAAI,EAAE,UAAU;AAChB,QAAA,MAAM,EAAE,+CAA+C;KACxD,CAAC;AACF;;AAEG;IACH,iBAAiB,EAAE,IAAI,MAAM,CAAC;AAC5B,QAAA,OAAO,EAAE,oBAAoB;AAC7B,QAAA,IAAI,EAAE,SAAS;AACf,QAAA,MAAM,EAAE,+CAA+C;KACxD,CAAC;AACF;;AAEG;IACH,mBAAmB,EAAE,IAAI,MAAM,CAAC;AAC9B,QAAA,OAAO,EAAE,uBAAuB;AAChC,QAAA,IAAI,EAAE,OAAO;AACb,QAAA,MAAM,EAAE,+CAA+C;KACxD,CAAC;AACF;;AAEG;IACH,iBAAiB,EAAE,IAAI,MAAM,CAAC;AAC5B,QAAA,OAAO,EAAE,oBAAoB;AAC7B,QAAA,IAAI,EAAE,SAAS;AACf,QAAA,MAAM,EAAE,+CAA+C;KACxD,CAAC;AACF;;AAEG;IACH,kBAAkB,EAAE,IAAI,MAAM,CAAC;AAC7B,QAAA,OAAO,EAAE,qBAAqB;AAC9B,QAAA,IAAI,EAAE,UAAU;AAChB,QAAA,MAAM,EAAE,+CAA+C;KACxD,CAAC;;;;;"}