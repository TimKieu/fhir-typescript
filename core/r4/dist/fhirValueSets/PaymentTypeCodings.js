// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/payment-type|4.0.1
import { Coding } from '../fhir/Coding.js';
/**
 * This value set includes sample Payment Type codes.
 */
export const PaymentTypeCodings = {
    /**
     * adjustment: The amount is an adjustment regarding claims already paid.
     */
    Adjustment: new Coding({
        display: "Adjustment",
        code: "adjustment",
        system: "http://terminology.hl7.org/CodeSystem/payment-type",
    }),
    /**
     * advance: The amount is an advance against future claims.
     */
    Advance: new Coding({
        display: "Advance",
        code: "advance",
        system: "http://terminology.hl7.org/CodeSystem/payment-type",
    }),
    /**
     * payment: The amount is partial or complete settlement of the amounts due.
     */
    Payment: new Coding({
        display: "Payment",
        code: "payment",
        system: "http://terminology.hl7.org/CodeSystem/payment-type",
    }),
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUGF5bWVudFR5cGVDb2RpbmdzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9QYXltZW50VHlwZUNvZGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLCtDQUErQztBQUMvQyxrQ0FBa0M7QUFDbEMsaUVBQWlFO0FBRWpFLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQTtBQUUxQzs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLGtCQUFrQixHQUFHO0lBQ2hDOztPQUVHO0lBQ0gsVUFBVSxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ3JCLE9BQU8sRUFBRSxZQUFZO1FBQ3JCLElBQUksRUFBRSxZQUFZO1FBQ2xCLE1BQU0sRUFBRSxvREFBb0Q7S0FDN0QsQ0FBQztJQUNGOztPQUVHO0lBQ0gsT0FBTyxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ2xCLE9BQU8sRUFBRSxTQUFTO1FBQ2xCLElBQUksRUFBRSxTQUFTO1FBQ2YsTUFBTSxFQUFFLG9EQUFvRDtLQUM3RCxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxPQUFPLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDbEIsT0FBTyxFQUFFLFNBQVM7UUFDbEIsSUFBSSxFQUFFLFNBQVM7UUFDZixNQUFNLEVBQUUsb0RBQW9EO0tBQzdELENBQUM7Q0FDTSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0LmNvcmUgdmVyc2lvbjogNC4wLjFcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L3BheW1lbnQtdHlwZXw0LjAuMVxyXG5cclxuaW1wb3J0IHsgQ29kaW5nIH0gZnJvbSAnLi4vZmhpci9Db2RpbmcuanMnXHJcblxyXG4vKipcclxuICogVGhpcyB2YWx1ZSBzZXQgaW5jbHVkZXMgc2FtcGxlIFBheW1lbnQgVHlwZSBjb2Rlcy5cclxuICovXHJcbmV4cG9ydCBjb25zdCBQYXltZW50VHlwZUNvZGluZ3MgPSB7XHJcbiAgLyoqXHJcbiAgICogYWRqdXN0bWVudDogVGhlIGFtb3VudCBpcyBhbiBhZGp1c3RtZW50IHJlZ2FyZGluZyBjbGFpbXMgYWxyZWFkeSBwYWlkLlxyXG4gICAqL1xyXG4gIEFkanVzdG1lbnQ6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJBZGp1c3RtZW50XCIsXHJcbiAgICBjb2RlOiBcImFkanVzdG1lbnRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL3BheW1lbnQtdHlwZVwiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIGFkdmFuY2U6IFRoZSBhbW91bnQgaXMgYW4gYWR2YW5jZSBhZ2FpbnN0IGZ1dHVyZSBjbGFpbXMuXHJcbiAgICovXHJcbiAgQWR2YW5jZTogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIkFkdmFuY2VcIixcclxuICAgIGNvZGU6IFwiYWR2YW5jZVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vcGF5bWVudC10eXBlXCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogcGF5bWVudDogVGhlIGFtb3VudCBpcyBwYXJ0aWFsIG9yIGNvbXBsZXRlIHNldHRsZW1lbnQgb2YgdGhlIGFtb3VudHMgZHVlLlxyXG4gICAqL1xyXG4gIFBheW1lbnQ6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJQYXltZW50XCIsXHJcbiAgICBjb2RlOiBcInBheW1lbnRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL3BheW1lbnQtdHlwZVwiLFxyXG4gIH0pLFxyXG59IGFzIGNvbnN0O1xyXG5cclxuLyoqXHJcbiAqIFRoaXMgdmFsdWUgc2V0IGluY2x1ZGVzIHNhbXBsZSBQYXltZW50IFR5cGUgY29kZXMuXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBQYXltZW50VHlwZUNvZGluZ1R5cGUgPSB0eXBlb2YgUGF5bWVudFR5cGVDb2RpbmdzO1xyXG4iXX0=