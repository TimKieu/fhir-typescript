// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/clinicalimpression-prognosis|4.0.1
import { Coding } from '../fhir/Coding.js';
/**
 * Example value set for clinical impression prognosis.
 */
export const ClinicalimpressionPrognosisCodings = {
    /**
     * Code: 170968001
     */
    GoodPrognosis: new Coding({
        display: "Good prognosis",
        code: "170968001",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 170969009
     */
    PoorPrognosis: new Coding({
        display: "Poor prognosis",
        code: "170969009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 170970005
     */
    PrognosisUncertain: new Coding({
        display: "Prognosis uncertain",
        code: "170970005",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 60484009
     */
    ConditionalPrognosis: new Coding({
        display: "Conditional prognosis",
        code: "60484009",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 65872000
     */
    FairPrognosis: new Coding({
        display: "Fair prognosis",
        code: "65872000",
        system: "http://snomed.info/sct",
    }),
    /**
     * Code: 67334001
     */
    GuardedPrognosis: new Coding({
        display: "Guarded prognosis",
        code: "67334001",
        system: "http://snomed.info/sct",
    }),
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2xpbmljYWxpbXByZXNzaW9uUHJvZ25vc2lzQ29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvQ2xpbmljYWxpbXByZXNzaW9uUHJvZ25vc2lzQ29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyxpRkFBaUY7QUFFakYsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLG1CQUFtQixDQUFBO0FBRTFDOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sa0NBQWtDLEdBQUc7SUFDaEQ7O09BRUc7SUFDSCxhQUFhLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDeEIsT0FBTyxFQUFFLGdCQUFnQjtRQUN6QixJQUFJLEVBQUUsV0FBVztRQUNqQixNQUFNLEVBQUUsd0JBQXdCO0tBQ2pDLENBQUM7SUFDRjs7T0FFRztJQUNILGFBQWEsRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUN4QixPQUFPLEVBQUUsZ0JBQWdCO1FBQ3pCLElBQUksRUFBRSxXQUFXO1FBQ2pCLE1BQU0sRUFBRSx3QkFBd0I7S0FDakMsQ0FBQztJQUNGOztPQUVHO0lBQ0gsa0JBQWtCLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDN0IsT0FBTyxFQUFFLHFCQUFxQjtRQUM5QixJQUFJLEVBQUUsV0FBVztRQUNqQixNQUFNLEVBQUUsd0JBQXdCO0tBQ2pDLENBQUM7SUFDRjs7T0FFRztJQUNILG9CQUFvQixFQUFFLElBQUksTUFBTSxDQUFDO1FBQy9CLE9BQU8sRUFBRSx1QkFBdUI7UUFDaEMsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLHdCQUF3QjtLQUNqQyxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxhQUFhLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDeEIsT0FBTyxFQUFFLGdCQUFnQjtRQUN6QixJQUFJLEVBQUUsVUFBVTtRQUNoQixNQUFNLEVBQUUsd0JBQXdCO0tBQ2pDLENBQUM7SUFDRjs7T0FFRztJQUNILGdCQUFnQixFQUFFLElBQUksTUFBTSxDQUFDO1FBQzNCLE9BQU8sRUFBRSxtQkFBbUI7UUFDNUIsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLHdCQUF3QjtLQUNqQyxDQUFDO0NBQ00sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNC5jb3JlIHZlcnNpb246IDQuMC4xXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9jbGluaWNhbGltcHJlc3Npb24tcHJvZ25vc2lzfDQuMC4xXHJcblxyXG5pbXBvcnQgeyBDb2RpbmcgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiBFeGFtcGxlIHZhbHVlIHNldCBmb3IgY2xpbmljYWwgaW1wcmVzc2lvbiBwcm9nbm9zaXMuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgQ2xpbmljYWxpbXByZXNzaW9uUHJvZ25vc2lzQ29kaW5ncyA9IHtcclxuICAvKipcclxuICAgKiBDb2RlOiAxNzA5NjgwMDFcclxuICAgKi9cclxuICBHb29kUHJvZ25vc2lzOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiR29vZCBwcm9nbm9zaXNcIixcclxuICAgIGNvZGU6IFwiMTcwOTY4MDAxXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Nub21lZC5pbmZvL3NjdFwiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IDE3MDk2OTAwOVxyXG4gICAqL1xyXG4gIFBvb3JQcm9nbm9zaXM6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJQb29yIHByb2dub3Npc1wiLFxyXG4gICAgY29kZTogXCIxNzA5NjkwMDlcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vc25vbWVkLmluZm8vc2N0XCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogQ29kZTogMTcwOTcwMDA1XHJcbiAgICovXHJcbiAgUHJvZ25vc2lzVW5jZXJ0YWluOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiUHJvZ25vc2lzIHVuY2VydGFpblwiLFxyXG4gICAgY29kZTogXCIxNzA5NzAwMDVcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vc25vbWVkLmluZm8vc2N0XCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogQ29kZTogNjA0ODQwMDlcclxuICAgKi9cclxuICBDb25kaXRpb25hbFByb2dub3NpczogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIkNvbmRpdGlvbmFsIHByb2dub3Npc1wiLFxyXG4gICAgY29kZTogXCI2MDQ4NDAwOVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9zbm9tZWQuaW5mby9zY3RcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBDb2RlOiA2NTg3MjAwMFxyXG4gICAqL1xyXG4gIEZhaXJQcm9nbm9zaXM6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJGYWlyIHByb2dub3Npc1wiLFxyXG4gICAgY29kZTogXCI2NTg3MjAwMFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9zbm9tZWQuaW5mby9zY3RcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBDb2RlOiA2NzMzNDAwMVxyXG4gICAqL1xyXG4gIEd1YXJkZWRQcm9nbm9zaXM6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJHdWFyZGVkIHByb2dub3Npc1wiLFxyXG4gICAgY29kZTogXCI2NzMzNDAwMVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9zbm9tZWQuaW5mby9zY3RcIixcclxuICB9KSxcclxufSBhcyBjb25zdDtcclxuXHJcbi8qKlxyXG4gKiBFeGFtcGxlIHZhbHVlIHNldCBmb3IgY2xpbmljYWwgaW1wcmVzc2lvbiBwcm9nbm9zaXMuXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBDbGluaWNhbGltcHJlc3Npb25Qcm9nbm9zaXNDb2RpbmdUeXBlID0gdHlwZW9mIENsaW5pY2FsaW1wcmVzc2lvblByb2dub3Npc0NvZGluZ3M7XHJcbiJdfQ==