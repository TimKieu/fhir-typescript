// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/supplydelivery-status|4.0.1
/**
 * Status of the supply delivery.
 */
export const SupplydeliveryStatusCodings = {
    /**
     * abandoned: Delivery was not completed.
     */
    Abandoned: {
        display: "Abandoned",
        code: "abandoned",
        system: "http://hl7.org/fhir/supplydelivery-status",
    },
    /**
     * completed: Supply has been delivered ("completed").
     */
    Delivered: {
        display: "Delivered",
        code: "completed",
        system: "http://hl7.org/fhir/supplydelivery-status",
    },
    /**
     * entered-in-error: This electronic record should never have existed, though it is possible that real-world decisions were based on it. (If real-world activity has occurred, the status should be "abandoned" rather than "entered-in-error".).
     */
    EnteredInError: {
        display: "Entered In Error",
        code: "entered-in-error",
        system: "http://hl7.org/fhir/supplydelivery-status",
    },
    /**
     * in-progress: Supply has been requested, but not delivered.
     */
    InProgress: {
        display: "In Progress",
        code: "in-progress",
        system: "http://hl7.org/fhir/supplydelivery-status",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3VwcGx5ZGVsaXZlcnlTdGF0dXNDb2RpbmdzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9TdXBwbHlkZWxpdmVyeVN0YXR1c0NvZGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLCtDQUErQztBQUMvQyxrQ0FBa0M7QUFDbEMsMEVBQTBFO0FBMEIxRTs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLDJCQUEyQixHQUFrQztJQUN4RTs7T0FFRztJQUNILFNBQVMsRUFBRTtRQUNULE9BQU8sRUFBRSxXQUFXO1FBQ3BCLElBQUksRUFBRSxXQUFXO1FBQ2pCLE1BQU0sRUFBRSwyQ0FBMkM7S0FDcEQ7SUFDRDs7T0FFRztJQUNILFNBQVMsRUFBRTtRQUNULE9BQU8sRUFBRSxXQUFXO1FBQ3BCLElBQUksRUFBRSxXQUFXO1FBQ2pCLE1BQU0sRUFBRSwyQ0FBMkM7S0FDcEQ7SUFDRDs7T0FFRztJQUNILGNBQWMsRUFBRTtRQUNkLE9BQU8sRUFBRSxrQkFBa0I7UUFDM0IsSUFBSSxFQUFFLGtCQUFrQjtRQUN4QixNQUFNLEVBQUUsMkNBQTJDO0tBQ3BEO0lBQ0Q7O09BRUc7SUFDSCxVQUFVLEVBQUU7UUFDVixPQUFPLEVBQUUsYUFBYTtRQUN0QixJQUFJLEVBQUUsYUFBYTtRQUNuQixNQUFNLEVBQUUsMkNBQTJDO0tBQ3BEO0NBQ08sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNC5jb3JlIHZlcnNpb246IDQuMC4xXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9zdXBwbHlkZWxpdmVyeS1zdGF0dXN8NC4wLjFcclxuXHJcbmltcG9ydCB7IENvZGluZ0FyZ3MgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiBTdGF0dXMgb2YgdGhlIHN1cHBseSBkZWxpdmVyeS5cclxuICovXHJcbmV4cG9ydCB0eXBlIFN1cHBseWRlbGl2ZXJ5U3RhdHVzQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBhYmFuZG9uZWQ6IERlbGl2ZXJ5IHdhcyBub3QgY29tcGxldGVkLlxyXG4gICAqL1xyXG4gIEFiYW5kb25lZDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBjb21wbGV0ZWQ6IFN1cHBseSBoYXMgYmVlbiBkZWxpdmVyZWQgKFwiY29tcGxldGVkXCIpLlxyXG4gICAqL1xyXG4gIERlbGl2ZXJlZDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBlbnRlcmVkLWluLWVycm9yOiBUaGlzIGVsZWN0cm9uaWMgcmVjb3JkIHNob3VsZCBuZXZlciBoYXZlIGV4aXN0ZWQsIHRob3VnaCBpdCBpcyBwb3NzaWJsZSB0aGF0IHJlYWwtd29ybGQgZGVjaXNpb25zIHdlcmUgYmFzZWQgb24gaXQuIChJZiByZWFsLXdvcmxkIGFjdGl2aXR5IGhhcyBvY2N1cnJlZCwgdGhlIHN0YXR1cyBzaG91bGQgYmUgXCJhYmFuZG9uZWRcIiByYXRoZXIgdGhhbiBcImVudGVyZWQtaW4tZXJyb3JcIi4pLlxyXG4gICAqL1xyXG4gIEVudGVyZWRJbkVycm9yOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIGluLXByb2dyZXNzOiBTdXBwbHkgaGFzIGJlZW4gcmVxdWVzdGVkLCBidXQgbm90IGRlbGl2ZXJlZC5cclxuICAgKi9cclxuICBJblByb2dyZXNzOiBDb2RpbmdBcmdzO1xyXG59XHJcblxyXG4vKipcclxuICogU3RhdHVzIG9mIHRoZSBzdXBwbHkgZGVsaXZlcnkuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgU3VwcGx5ZGVsaXZlcnlTdGF0dXNDb2RpbmdzOlN1cHBseWRlbGl2ZXJ5U3RhdHVzQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBhYmFuZG9uZWQ6IERlbGl2ZXJ5IHdhcyBub3QgY29tcGxldGVkLlxyXG4gICAqL1xyXG4gIEFiYW5kb25lZDoge1xyXG4gICAgZGlzcGxheTogXCJBYmFuZG9uZWRcIixcclxuICAgIGNvZGU6IFwiYWJhbmRvbmVkXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9zdXBwbHlkZWxpdmVyeS1zdGF0dXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIGNvbXBsZXRlZDogU3VwcGx5IGhhcyBiZWVuIGRlbGl2ZXJlZCAoXCJjb21wbGV0ZWRcIikuXHJcbiAgICovXHJcbiAgRGVsaXZlcmVkOiB7XHJcbiAgICBkaXNwbGF5OiBcIkRlbGl2ZXJlZFwiLFxyXG4gICAgY29kZTogXCJjb21wbGV0ZWRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3N1cHBseWRlbGl2ZXJ5LXN0YXR1c1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogZW50ZXJlZC1pbi1lcnJvcjogVGhpcyBlbGVjdHJvbmljIHJlY29yZCBzaG91bGQgbmV2ZXIgaGF2ZSBleGlzdGVkLCB0aG91Z2ggaXQgaXMgcG9zc2libGUgdGhhdCByZWFsLXdvcmxkIGRlY2lzaW9ucyB3ZXJlIGJhc2VkIG9uIGl0LiAoSWYgcmVhbC13b3JsZCBhY3Rpdml0eSBoYXMgb2NjdXJyZWQsIHRoZSBzdGF0dXMgc2hvdWxkIGJlIFwiYWJhbmRvbmVkXCIgcmF0aGVyIHRoYW4gXCJlbnRlcmVkLWluLWVycm9yXCIuKS5cclxuICAgKi9cclxuICBFbnRlcmVkSW5FcnJvcjoge1xyXG4gICAgZGlzcGxheTogXCJFbnRlcmVkIEluIEVycm9yXCIsXHJcbiAgICBjb2RlOiBcImVudGVyZWQtaW4tZXJyb3JcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3N1cHBseWRlbGl2ZXJ5LXN0YXR1c1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogaW4tcHJvZ3Jlc3M6IFN1cHBseSBoYXMgYmVlbiByZXF1ZXN0ZWQsIGJ1dCBub3QgZGVsaXZlcmVkLlxyXG4gICAqL1xyXG4gIEluUHJvZ3Jlc3M6IHtcclxuICAgIGRpc3BsYXk6IFwiSW4gUHJvZ3Jlc3NcIixcclxuICAgIGNvZGU6IFwiaW4tcHJvZ3Jlc3NcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3N1cHBseWRlbGl2ZXJ5LXN0YXR1c1wiLFxyXG4gIH0sXHJcbn0gYXMgY29uc3Q7XHJcbiJdfQ==