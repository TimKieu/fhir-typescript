// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/immunization-evaluation-target-disease|4.0.1
/**
 * The value set to instantiate this attribute should be drawn from a terminologically robust code system that consists of or contains concepts to support describing the disease that the evaluation is against. This value set is provided as a suggestive example and includes the SNOMED CT concepts from the 64572001 (Disease) hierarchy.
 */
export const ImmunizationEvaluationTargetDiseaseCodings = {
    /**
     * Code: 14189004
     */
    VAL14189004: {
        code: "14189004",
        system: "http://snomed.info/sct",
    },
    /**
     * Code: 1857005
     */
    VAL1857005: {
        code: "1857005",
        system: "http://snomed.info/sct",
    },
    /**
     * Code: 27836007
     */
    VAL27836007: {
        code: "27836007",
        system: "http://snomed.info/sct",
    },
    /**
     * Code: 36653000
     */
    VAL36653000: {
        code: "36653000",
        system: "http://snomed.info/sct",
    },
    /**
     * Code: 36989005
     */
    VAL36989005: {
        code: "36989005",
        system: "http://snomed.info/sct",
    },
    /**
     * Code: 397430003
     */
    VAL397430003: {
        code: "397430003",
        system: "http://snomed.info/sct",
    },
    /**
     * Code: 398102009
     */
    VAL398102009: {
        code: "398102009",
        system: "http://snomed.info/sct",
    },
    /**
     * Code: 709410003
     */
    VAL709410003: {
        code: "709410003",
        system: "http://snomed.info/sct",
    },
    /**
     * Code: 76902006
     */
    VAL76902006: {
        code: "76902006",
        system: "http://snomed.info/sct",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSW1tdW5pemF0aW9uRXZhbHVhdGlvblRhcmdldERpc2Vhc2VDb2RpbmdzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9JbW11bml6YXRpb25FdmFsdWF0aW9uVGFyZ2V0RGlzZWFzZUNvZGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLCtDQUErQztBQUMvQyxrQ0FBa0M7QUFDbEMsMkZBQTJGO0FBOEMzRjs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLDBDQUEwQyxHQUFpRDtJQUN0Rzs7T0FFRztJQUNILFdBQVcsRUFBRTtRQUNYLElBQUksRUFBRSxVQUFVO1FBQ2hCLE1BQU0sRUFBRSx3QkFBd0I7S0FDakM7SUFDRDs7T0FFRztJQUNILFVBQVUsRUFBRTtRQUNWLElBQUksRUFBRSxTQUFTO1FBQ2YsTUFBTSxFQUFFLHdCQUF3QjtLQUNqQztJQUNEOztPQUVHO0lBQ0gsV0FBVyxFQUFFO1FBQ1gsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLHdCQUF3QjtLQUNqQztJQUNEOztPQUVHO0lBQ0gsV0FBVyxFQUFFO1FBQ1gsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLHdCQUF3QjtLQUNqQztJQUNEOztPQUVHO0lBQ0gsV0FBVyxFQUFFO1FBQ1gsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLHdCQUF3QjtLQUNqQztJQUNEOztPQUVHO0lBQ0gsWUFBWSxFQUFFO1FBQ1osSUFBSSxFQUFFLFdBQVc7UUFDakIsTUFBTSxFQUFFLHdCQUF3QjtLQUNqQztJQUNEOztPQUVHO0lBQ0gsWUFBWSxFQUFFO1FBQ1osSUFBSSxFQUFFLFdBQVc7UUFDakIsTUFBTSxFQUFFLHdCQUF3QjtLQUNqQztJQUNEOztPQUVHO0lBQ0gsWUFBWSxFQUFFO1FBQ1osSUFBSSxFQUFFLFdBQVc7UUFDakIsTUFBTSxFQUFFLHdCQUF3QjtLQUNqQztJQUNEOztPQUVHO0lBQ0gsV0FBVyxFQUFFO1FBQ1gsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLHdCQUF3QjtLQUNqQztDQUNPLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjQuY29yZSB2ZXJzaW9uOiA0LjAuMVxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvaW1tdW5pemF0aW9uLWV2YWx1YXRpb24tdGFyZ2V0LWRpc2Vhc2V8NC4wLjFcclxuXHJcbmltcG9ydCB7IENvZGluZ0FyZ3MgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiBUaGUgdmFsdWUgc2V0IHRvIGluc3RhbnRpYXRlIHRoaXMgYXR0cmlidXRlIHNob3VsZCBiZSBkcmF3biBmcm9tIGEgdGVybWlub2xvZ2ljYWxseSByb2J1c3QgY29kZSBzeXN0ZW0gdGhhdCBjb25zaXN0cyBvZiBvciBjb250YWlucyBjb25jZXB0cyB0byBzdXBwb3J0IGRlc2NyaWJpbmcgdGhlIGRpc2Vhc2UgdGhhdCB0aGUgZXZhbHVhdGlvbiBpcyBhZ2FpbnN0LiBUaGlzIHZhbHVlIHNldCBpcyBwcm92aWRlZCBhcyBhIHN1Z2dlc3RpdmUgZXhhbXBsZSBhbmQgaW5jbHVkZXMgdGhlIFNOT01FRCBDVCBjb25jZXB0cyBmcm9tIHRoZSA2NDU3MjAwMSAoRGlzZWFzZSkgaGllcmFyY2h5LlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgSW1tdW5pemF0aW9uRXZhbHVhdGlvblRhcmdldERpc2Vhc2VDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IDE0MTg5MDA0XHJcbiAgICovXHJcbiAgVkFMMTQxODkwMDQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogMTg1NzAwNVxyXG4gICAqL1xyXG4gIFZBTDE4NTcwMDU6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogMjc4MzYwMDdcclxuICAgKi9cclxuICBWQUwyNzgzNjAwNzogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiAzNjY1MzAwMFxyXG4gICAqL1xyXG4gIFZBTDM2NjUzMDAwOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IDM2OTg5MDA1XHJcbiAgICovXHJcbiAgVkFMMzY5ODkwMDU6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogMzk3NDMwMDAzXHJcbiAgICovXHJcbiAgVkFMMzk3NDMwMDAzOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IDM5ODEwMjAwOVxyXG4gICAqL1xyXG4gIFZBTDM5ODEwMjAwOTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiA3MDk0MTAwMDNcclxuICAgKi9cclxuICBWQUw3MDk0MTAwMDM6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogNzY5MDIwMDZcclxuICAgKi9cclxuICBWQUw3NjkwMjAwNjogQ29kaW5nQXJncztcclxufVxyXG5cclxuLyoqXHJcbiAqIFRoZSB2YWx1ZSBzZXQgdG8gaW5zdGFudGlhdGUgdGhpcyBhdHRyaWJ1dGUgc2hvdWxkIGJlIGRyYXduIGZyb20gYSB0ZXJtaW5vbG9naWNhbGx5IHJvYnVzdCBjb2RlIHN5c3RlbSB0aGF0IGNvbnNpc3RzIG9mIG9yIGNvbnRhaW5zIGNvbmNlcHRzIHRvIHN1cHBvcnQgZGVzY3JpYmluZyB0aGUgZGlzZWFzZSB0aGF0IHRoZSBldmFsdWF0aW9uIGlzIGFnYWluc3QuIFRoaXMgdmFsdWUgc2V0IGlzIHByb3ZpZGVkIGFzIGEgc3VnZ2VzdGl2ZSBleGFtcGxlIGFuZCBpbmNsdWRlcyB0aGUgU05PTUVEIENUIGNvbmNlcHRzIGZyb20gdGhlIDY0NTcyMDAxIChEaXNlYXNlKSBoaWVyYXJjaHkuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgSW1tdW5pemF0aW9uRXZhbHVhdGlvblRhcmdldERpc2Vhc2VDb2RpbmdzOkltbXVuaXphdGlvbkV2YWx1YXRpb25UYXJnZXREaXNlYXNlQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBDb2RlOiAxNDE4OTAwNFxyXG4gICAqL1xyXG4gIFZBTDE0MTg5MDA0OiB7XHJcbiAgICBjb2RlOiBcIjE0MTg5MDA0XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Nub21lZC5pbmZvL3NjdFwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogMTg1NzAwNVxyXG4gICAqL1xyXG4gIFZBTDE4NTcwMDU6IHtcclxuICAgIGNvZGU6IFwiMTg1NzAwNVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9zbm9tZWQuaW5mby9zY3RcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IDI3ODM2MDA3XHJcbiAgICovXHJcbiAgVkFMMjc4MzYwMDc6IHtcclxuICAgIGNvZGU6IFwiMjc4MzYwMDdcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vc25vbWVkLmluZm8vc2N0XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiAzNjY1MzAwMFxyXG4gICAqL1xyXG4gIFZBTDM2NjUzMDAwOiB7XHJcbiAgICBjb2RlOiBcIjM2NjUzMDAwXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Nub21lZC5pbmZvL3NjdFwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogMzY5ODkwMDVcclxuICAgKi9cclxuICBWQUwzNjk4OTAwNToge1xyXG4gICAgY29kZTogXCIzNjk4OTAwNVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9zbm9tZWQuaW5mby9zY3RcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IDM5NzQzMDAwM1xyXG4gICAqL1xyXG4gIFZBTDM5NzQzMDAwMzoge1xyXG4gICAgY29kZTogXCIzOTc0MzAwMDNcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vc25vbWVkLmluZm8vc2N0XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiAzOTgxMDIwMDlcclxuICAgKi9cclxuICBWQUwzOTgxMDIwMDk6IHtcclxuICAgIGNvZGU6IFwiMzk4MTAyMDA5XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Nub21lZC5pbmZvL3NjdFwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogNzA5NDEwMDAzXHJcbiAgICovXHJcbiAgVkFMNzA5NDEwMDAzOiB7XHJcbiAgICBjb2RlOiBcIjcwOTQxMDAwM1wiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9zbm9tZWQuaW5mby9zY3RcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IDc2OTAyMDA2XHJcbiAgICovXHJcbiAgVkFMNzY5MDIwMDY6IHtcclxuICAgIGNvZGU6IFwiNzY5MDIwMDZcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vc25vbWVkLmluZm8vc2N0XCIsXHJcbiAgfSxcclxufSBhcyBjb25zdDtcclxuIl19