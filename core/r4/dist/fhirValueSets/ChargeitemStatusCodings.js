// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/chargeitem-status|4.0.1
/**
 * Codes identifying the lifecycle stage of a ChargeItem.
 */
export const ChargeitemStatusCodings = {
    /**
     * aborted: The processing of the charge was aborted.
     */
    Aborted: {
        display: "Aborted",
        code: "aborted",
        system: "http://hl7.org/fhir/chargeitem-status",
    },
    /**
     * billable: The charge item is ready for billing.
     */
    Billable: {
        display: "Billable",
        code: "billable",
        system: "http://hl7.org/fhir/chargeitem-status",
    },
    /**
     * billed: The charge item has been billed (e.g. a billing engine has generated financial transactions by applying the associated ruled for the charge item to the context of the Encounter, and placed them into Claims/Invoices.
     */
    Billed: {
        display: "Billed",
        code: "billed",
        system: "http://hl7.org/fhir/chargeitem-status",
    },
    /**
     * entered-in-error: The charge item has been entered in error and should not be processed for billing.
     */
    EnteredInError: {
        display: "Entered in Error",
        code: "entered-in-error",
        system: "http://hl7.org/fhir/chargeitem-status",
    },
    /**
     * not-billable: The charge item has been determined to be not billable (e.g. due to rules associated with the billing code).
     */
    NotBillable: {
        display: "Not billable",
        code: "not-billable",
        system: "http://hl7.org/fhir/chargeitem-status",
    },
    /**
     * planned: The charge item has been entered, but the charged service is not  yet complete, so it shall not be billed yet but might be used in the context of pre-authorization.
     */
    Planned: {
        display: "Planned",
        code: "planned",
        system: "http://hl7.org/fhir/chargeitem-status",
    },
    /**
     * unknown: The authoring system does not know which of the status values currently applies for this charge item  Note: This concept is not to be used for "other" - one of the listed statuses is presumed to apply, it's just not known which one.
     */
    Unknown: {
        display: "Unknown",
        code: "unknown",
        system: "http://hl7.org/fhir/chargeitem-status",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2hhcmdlaXRlbVN0YXR1c0NvZGluZ3MuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL0NoYXJnZWl0ZW1TdGF0dXNDb2RpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQiwrQ0FBK0M7QUFDL0Msa0NBQWtDO0FBQ2xDLHNFQUFzRTtBQXNDdEU7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSx1QkFBdUIsR0FBOEI7SUFDaEU7O09BRUc7SUFDSCxPQUFPLEVBQUU7UUFDUCxPQUFPLEVBQUUsU0FBUztRQUNsQixJQUFJLEVBQUUsU0FBUztRQUNmLE1BQU0sRUFBRSx1Q0FBdUM7S0FDaEQ7SUFDRDs7T0FFRztJQUNILFFBQVEsRUFBRTtRQUNSLE9BQU8sRUFBRSxVQUFVO1FBQ25CLElBQUksRUFBRSxVQUFVO1FBQ2hCLE1BQU0sRUFBRSx1Q0FBdUM7S0FDaEQ7SUFDRDs7T0FFRztJQUNILE1BQU0sRUFBRTtRQUNOLE9BQU8sRUFBRSxRQUFRO1FBQ2pCLElBQUksRUFBRSxRQUFRO1FBQ2QsTUFBTSxFQUFFLHVDQUF1QztLQUNoRDtJQUNEOztPQUVHO0lBQ0gsY0FBYyxFQUFFO1FBQ2QsT0FBTyxFQUFFLGtCQUFrQjtRQUMzQixJQUFJLEVBQUUsa0JBQWtCO1FBQ3hCLE1BQU0sRUFBRSx1Q0FBdUM7S0FDaEQ7SUFDRDs7T0FFRztJQUNILFdBQVcsRUFBRTtRQUNYLE9BQU8sRUFBRSxjQUFjO1FBQ3ZCLElBQUksRUFBRSxjQUFjO1FBQ3BCLE1BQU0sRUFBRSx1Q0FBdUM7S0FDaEQ7SUFDRDs7T0FFRztJQUNILE9BQU8sRUFBRTtRQUNQLE9BQU8sRUFBRSxTQUFTO1FBQ2xCLElBQUksRUFBRSxTQUFTO1FBQ2YsTUFBTSxFQUFFLHVDQUF1QztLQUNoRDtJQUNEOztPQUVHO0lBQ0gsT0FBTyxFQUFFO1FBQ1AsT0FBTyxFQUFFLFNBQVM7UUFDbEIsSUFBSSxFQUFFLFNBQVM7UUFDZixNQUFNLEVBQUUsdUNBQXVDO0tBQ2hEO0NBQ08sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNC5jb3JlIHZlcnNpb246IDQuMC4xXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9jaGFyZ2VpdGVtLXN0YXR1c3w0LjAuMVxyXG5cclxuaW1wb3J0IHsgQ29kaW5nQXJncyB9IGZyb20gJy4uL2ZoaXIvQ29kaW5nLmpzJ1xyXG5cclxuLyoqXHJcbiAqIENvZGVzIGlkZW50aWZ5aW5nIHRoZSBsaWZlY3ljbGUgc3RhZ2Ugb2YgYSBDaGFyZ2VJdGVtLlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgQ2hhcmdlaXRlbVN0YXR1c0NvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogYWJvcnRlZDogVGhlIHByb2Nlc3Npbmcgb2YgdGhlIGNoYXJnZSB3YXMgYWJvcnRlZC5cclxuICAgKi9cclxuICBBYm9ydGVkOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIGJpbGxhYmxlOiBUaGUgY2hhcmdlIGl0ZW0gaXMgcmVhZHkgZm9yIGJpbGxpbmcuXHJcbiAgICovXHJcbiAgQmlsbGFibGU6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogYmlsbGVkOiBUaGUgY2hhcmdlIGl0ZW0gaGFzIGJlZW4gYmlsbGVkIChlLmcuIGEgYmlsbGluZyBlbmdpbmUgaGFzIGdlbmVyYXRlZCBmaW5hbmNpYWwgdHJhbnNhY3Rpb25zIGJ5IGFwcGx5aW5nIHRoZSBhc3NvY2lhdGVkIHJ1bGVkIGZvciB0aGUgY2hhcmdlIGl0ZW0gdG8gdGhlIGNvbnRleHQgb2YgdGhlIEVuY291bnRlciwgYW5kIHBsYWNlZCB0aGVtIGludG8gQ2xhaW1zL0ludm9pY2VzLlxyXG4gICAqL1xyXG4gIEJpbGxlZDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBlbnRlcmVkLWluLWVycm9yOiBUaGUgY2hhcmdlIGl0ZW0gaGFzIGJlZW4gZW50ZXJlZCBpbiBlcnJvciBhbmQgc2hvdWxkIG5vdCBiZSBwcm9jZXNzZWQgZm9yIGJpbGxpbmcuXHJcbiAgICovXHJcbiAgRW50ZXJlZEluRXJyb3I6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogbm90LWJpbGxhYmxlOiBUaGUgY2hhcmdlIGl0ZW0gaGFzIGJlZW4gZGV0ZXJtaW5lZCB0byBiZSBub3QgYmlsbGFibGUgKGUuZy4gZHVlIHRvIHJ1bGVzIGFzc29jaWF0ZWQgd2l0aCB0aGUgYmlsbGluZyBjb2RlKS5cclxuICAgKi9cclxuICBOb3RCaWxsYWJsZTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBwbGFubmVkOiBUaGUgY2hhcmdlIGl0ZW0gaGFzIGJlZW4gZW50ZXJlZCwgYnV0IHRoZSBjaGFyZ2VkIHNlcnZpY2UgaXMgbm90ICB5ZXQgY29tcGxldGUsIHNvIGl0IHNoYWxsIG5vdCBiZSBiaWxsZWQgeWV0IGJ1dCBtaWdodCBiZSB1c2VkIGluIHRoZSBjb250ZXh0IG9mIHByZS1hdXRob3JpemF0aW9uLlxyXG4gICAqL1xyXG4gIFBsYW5uZWQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogdW5rbm93bjogVGhlIGF1dGhvcmluZyBzeXN0ZW0gZG9lcyBub3Qga25vdyB3aGljaCBvZiB0aGUgc3RhdHVzIHZhbHVlcyBjdXJyZW50bHkgYXBwbGllcyBmb3IgdGhpcyBjaGFyZ2UgaXRlbSAgTm90ZTogVGhpcyBjb25jZXB0IGlzIG5vdCB0byBiZSB1c2VkIGZvciBcIm90aGVyXCIgLSBvbmUgb2YgdGhlIGxpc3RlZCBzdGF0dXNlcyBpcyBwcmVzdW1lZCB0byBhcHBseSwgaXQncyBqdXN0IG5vdCBrbm93biB3aGljaCBvbmUuXHJcbiAgICovXHJcbiAgVW5rbm93bjogQ29kaW5nQXJncztcclxufVxyXG5cclxuLyoqXHJcbiAqIENvZGVzIGlkZW50aWZ5aW5nIHRoZSBsaWZlY3ljbGUgc3RhZ2Ugb2YgYSBDaGFyZ2VJdGVtLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IENoYXJnZWl0ZW1TdGF0dXNDb2RpbmdzOkNoYXJnZWl0ZW1TdGF0dXNDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIGFib3J0ZWQ6IFRoZSBwcm9jZXNzaW5nIG9mIHRoZSBjaGFyZ2Ugd2FzIGFib3J0ZWQuXHJcbiAgICovXHJcbiAgQWJvcnRlZDoge1xyXG4gICAgZGlzcGxheTogXCJBYm9ydGVkXCIsXHJcbiAgICBjb2RlOiBcImFib3J0ZWRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2NoYXJnZWl0ZW0tc3RhdHVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBiaWxsYWJsZTogVGhlIGNoYXJnZSBpdGVtIGlzIHJlYWR5IGZvciBiaWxsaW5nLlxyXG4gICAqL1xyXG4gIEJpbGxhYmxlOiB7XHJcbiAgICBkaXNwbGF5OiBcIkJpbGxhYmxlXCIsXHJcbiAgICBjb2RlOiBcImJpbGxhYmxlXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9jaGFyZ2VpdGVtLXN0YXR1c1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogYmlsbGVkOiBUaGUgY2hhcmdlIGl0ZW0gaGFzIGJlZW4gYmlsbGVkIChlLmcuIGEgYmlsbGluZyBlbmdpbmUgaGFzIGdlbmVyYXRlZCBmaW5hbmNpYWwgdHJhbnNhY3Rpb25zIGJ5IGFwcGx5aW5nIHRoZSBhc3NvY2lhdGVkIHJ1bGVkIGZvciB0aGUgY2hhcmdlIGl0ZW0gdG8gdGhlIGNvbnRleHQgb2YgdGhlIEVuY291bnRlciwgYW5kIHBsYWNlZCB0aGVtIGludG8gQ2xhaW1zL0ludm9pY2VzLlxyXG4gICAqL1xyXG4gIEJpbGxlZDoge1xyXG4gICAgZGlzcGxheTogXCJCaWxsZWRcIixcclxuICAgIGNvZGU6IFwiYmlsbGVkXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9jaGFyZ2VpdGVtLXN0YXR1c1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogZW50ZXJlZC1pbi1lcnJvcjogVGhlIGNoYXJnZSBpdGVtIGhhcyBiZWVuIGVudGVyZWQgaW4gZXJyb3IgYW5kIHNob3VsZCBub3QgYmUgcHJvY2Vzc2VkIGZvciBiaWxsaW5nLlxyXG4gICAqL1xyXG4gIEVudGVyZWRJbkVycm9yOiB7XHJcbiAgICBkaXNwbGF5OiBcIkVudGVyZWQgaW4gRXJyb3JcIixcclxuICAgIGNvZGU6IFwiZW50ZXJlZC1pbi1lcnJvclwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvY2hhcmdlaXRlbS1zdGF0dXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIG5vdC1iaWxsYWJsZTogVGhlIGNoYXJnZSBpdGVtIGhhcyBiZWVuIGRldGVybWluZWQgdG8gYmUgbm90IGJpbGxhYmxlIChlLmcuIGR1ZSB0byBydWxlcyBhc3NvY2lhdGVkIHdpdGggdGhlIGJpbGxpbmcgY29kZSkuXHJcbiAgICovXHJcbiAgTm90QmlsbGFibGU6IHtcclxuICAgIGRpc3BsYXk6IFwiTm90IGJpbGxhYmxlXCIsXHJcbiAgICBjb2RlOiBcIm5vdC1iaWxsYWJsZVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvY2hhcmdlaXRlbS1zdGF0dXNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIHBsYW5uZWQ6IFRoZSBjaGFyZ2UgaXRlbSBoYXMgYmVlbiBlbnRlcmVkLCBidXQgdGhlIGNoYXJnZWQgc2VydmljZSBpcyBub3QgIHlldCBjb21wbGV0ZSwgc28gaXQgc2hhbGwgbm90IGJlIGJpbGxlZCB5ZXQgYnV0IG1pZ2h0IGJlIHVzZWQgaW4gdGhlIGNvbnRleHQgb2YgcHJlLWF1dGhvcml6YXRpb24uXHJcbiAgICovXHJcbiAgUGxhbm5lZDoge1xyXG4gICAgZGlzcGxheTogXCJQbGFubmVkXCIsXHJcbiAgICBjb2RlOiBcInBsYW5uZWRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2NoYXJnZWl0ZW0tc3RhdHVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiB1bmtub3duOiBUaGUgYXV0aG9yaW5nIHN5c3RlbSBkb2VzIG5vdCBrbm93IHdoaWNoIG9mIHRoZSBzdGF0dXMgdmFsdWVzIGN1cnJlbnRseSBhcHBsaWVzIGZvciB0aGlzIGNoYXJnZSBpdGVtICBOb3RlOiBUaGlzIGNvbmNlcHQgaXMgbm90IHRvIGJlIHVzZWQgZm9yIFwib3RoZXJcIiAtIG9uZSBvZiB0aGUgbGlzdGVkIHN0YXR1c2VzIGlzIHByZXN1bWVkIHRvIGFwcGx5LCBpdCdzIGp1c3Qgbm90IGtub3duIHdoaWNoIG9uZS5cclxuICAgKi9cclxuICBVbmtub3duOiB7XHJcbiAgICBkaXNwbGF5OiBcIlVua25vd25cIixcclxuICAgIGNvZGU6IFwidW5rbm93blwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvY2hhcmdlaXRlbS1zdGF0dXNcIixcclxuICB9LFxyXG59IGFzIGNvbnN0O1xyXG4iXX0=