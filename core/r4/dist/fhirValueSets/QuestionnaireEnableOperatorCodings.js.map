{"version":3,"file":"QuestionnaireEnableOperatorCodings.js","sources":["../../src/fhirValueSets/QuestionnaireEnableOperatorCodings.ts"],"sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4.core version: 4.0.1\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR ValueSet: http://hl7.org/fhir/ValueSet/questionnaire-enable-operator|4.0.1\r\n\r\nimport { Coding } from '../fhir/Coding.js'\r\n\r\n/**\r\n * The criteria by which a question is enabled.\r\n */\r\nexport const QuestionnaireEnableOperatorCodings = {\r\n  /**\r\n   * !=: True if whether at least no answer has a value that is equal to the enableWhen answer.\r\n   */\r\n  NotEquals: new Coding({\r\n    display: \"Not Equals\",\r\n    code: \"!=\",\r\n    system: \"http://hl7.org/fhir/questionnaire-enable-operator\",\r\n  }),\r\n  /**\r\n   * &lt;: True if whether at least no answer has a value that is less than the enableWhen answer.\r\n   */\r\n  LessThan: new Coding({\r\n    display: \"Less Than\",\r\n    code: \"<\",\r\n    system: \"http://hl7.org/fhir/questionnaire-enable-operator\",\r\n  }),\r\n  /**\r\n   * &lt;=: True if whether at least no answer has a value that is less or equal to the enableWhen answer.\r\n   */\r\n  LessOrEquals: new Coding({\r\n    display: \"Less or Equals\",\r\n    code: \"<=\",\r\n    system: \"http://hl7.org/fhir/questionnaire-enable-operator\",\r\n  }),\r\n  /**\r\n   * =: True if whether at least one answer has a value that is equal to the enableWhen answer.\r\n   */\r\n  Equals: new Coding({\r\n    display: \"Equals\",\r\n    code: \"=\",\r\n    system: \"http://hl7.org/fhir/questionnaire-enable-operator\",\r\n  }),\r\n  /**\r\n   * &gt;: True if whether at least no answer has a value that is greater than the enableWhen answer.\r\n   */\r\n  GreaterThan: new Coding({\r\n    display: \"Greater Than\",\r\n    code: \">\",\r\n    system: \"http://hl7.org/fhir/questionnaire-enable-operator\",\r\n  }),\r\n  /**\r\n   * &gt;=: True if whether at least no answer has a value that is greater or equal to the enableWhen answer.\r\n   */\r\n  GreaterOrEquals: new Coding({\r\n    display: \"Greater or Equals\",\r\n    code: \">=\",\r\n    system: \"http://hl7.org/fhir/questionnaire-enable-operator\",\r\n  }),\r\n  /**\r\n   * exists: True if whether an answer exists is equal to the enableWhen answer (which must be a boolean).\r\n   */\r\n  Exists: new Coding({\r\n    display: \"Exists\",\r\n    code: \"exists\",\r\n    system: \"http://hl7.org/fhir/questionnaire-enable-operator\",\r\n  }),\r\n} as const;\r\n\r\n/**\r\n * The criteria by which a question is enabled.\r\n */\r\nexport type QuestionnaireEnableOperatorCodingType = typeof QuestionnaireEnableOperatorCodings;\r\n"],"names":[],"mappings":";;;;AAAA;AAOA;;AAEG;AACU,IAAA,kCAAkC,GAAG;AAChD;;AAEG;IACH,SAAS,EAAE,IAAI,MAAM,CAAC;AACpB,QAAA,OAAO,EAAE,YAAY;AACrB,QAAA,IAAI,EAAE,IAAI;AACV,QAAA,MAAM,EAAE,mDAAmD;KAC5D,CAAC;AACF;;AAEG;IACH,QAAQ,EAAE,IAAI,MAAM,CAAC;AACnB,QAAA,OAAO,EAAE,WAAW;AACpB,QAAA,IAAI,EAAE,GAAG;AACT,QAAA,MAAM,EAAE,mDAAmD;KAC5D,CAAC;AACF;;AAEG;IACH,YAAY,EAAE,IAAI,MAAM,CAAC;AACvB,QAAA,OAAO,EAAE,gBAAgB;AACzB,QAAA,IAAI,EAAE,IAAI;AACV,QAAA,MAAM,EAAE,mDAAmD;KAC5D,CAAC;AACF;;AAEG;IACH,MAAM,EAAE,IAAI,MAAM,CAAC;AACjB,QAAA,OAAO,EAAE,QAAQ;AACjB,QAAA,IAAI,EAAE,GAAG;AACT,QAAA,MAAM,EAAE,mDAAmD;KAC5D,CAAC;AACF;;AAEG;IACH,WAAW,EAAE,IAAI,MAAM,CAAC;AACtB,QAAA,OAAO,EAAE,cAAc;AACvB,QAAA,IAAI,EAAE,GAAG;AACT,QAAA,MAAM,EAAE,mDAAmD;KAC5D,CAAC;AACF;;AAEG;IACH,eAAe,EAAE,IAAI,MAAM,CAAC;AAC1B,QAAA,OAAO,EAAE,mBAAmB;AAC5B,QAAA,IAAI,EAAE,IAAI;AACV,QAAA,MAAM,EAAE,mDAAmD;KAC5D,CAAC;AACF;;AAEG;IACH,MAAM,EAAE,IAAI,MAAM,CAAC;AACjB,QAAA,OAAO,EAAE,QAAQ;AACjB,QAAA,IAAI,EAAE,QAAQ;AACd,QAAA,MAAM,EAAE,mDAAmD;KAC5D,CAAC;;;;;"}