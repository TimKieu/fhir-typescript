// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/encounter-status|4.0.1
import { Coding } from '../fhir/Coding.js';
/**
 * Current state of the encounter.
 */
export const EncounterStatusCodings = {
    /**
     * arrived: The Patient is present for the encounter, however is not currently meeting with a practitioner.
     */
    Arrived: new Coding({
        display: "Arrived",
        code: "arrived",
        system: "http://hl7.org/fhir/encounter-status",
    }),
    /**
     * cancelled: The Encounter has ended before it has begun.
     */
    Cancelled: new Coding({
        display: "Cancelled",
        code: "cancelled",
        system: "http://hl7.org/fhir/encounter-status",
    }),
    /**
     * entered-in-error: This instance should not have been part of this patient's medical record.
     */
    EnteredInError: new Coding({
        display: "Entered in Error",
        code: "entered-in-error",
        system: "http://hl7.org/fhir/encounter-status",
    }),
    /**
     * finished: The Encounter has ended.
     */
    Finished: new Coding({
        display: "Finished",
        code: "finished",
        system: "http://hl7.org/fhir/encounter-status",
    }),
    /**
     * in-progress: The Encounter has begun and the patient is present / the practitioner and the patient are meeting.
     */
    InProgress: new Coding({
        display: "In Progress",
        code: "in-progress",
        system: "http://hl7.org/fhir/encounter-status",
    }),
    /**
     * onleave: The Encounter has begun, but the patient is temporarily on leave.
     */
    OnLeave: new Coding({
        display: "On Leave",
        code: "onleave",
        system: "http://hl7.org/fhir/encounter-status",
    }),
    /**
     * planned: The Encounter has not yet started.
     */
    Planned: new Coding({
        display: "Planned",
        code: "planned",
        system: "http://hl7.org/fhir/encounter-status",
    }),
    /**
     * triaged: The patient has been assessed for the priority of their treatment based on the severity of their condition.
     */
    Triaged: new Coding({
        display: "Triaged",
        code: "triaged",
        system: "http://hl7.org/fhir/encounter-status",
    }),
    /**
     * unknown: The encounter status is unknown. Note that "unknown" is a value of last resort and every attempt should be made to provide a meaningful value other than "unknown".
     */
    Unknown: new Coding({
        display: "Unknown",
        code: "unknown",
        system: "http://hl7.org/fhir/encounter-status",
    }),
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRW5jb3VudGVyU3RhdHVzQ29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvRW5jb3VudGVyU3RhdHVzQ29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyxxRUFBcUU7QUFFckUsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLG1CQUFtQixDQUFBO0FBRTFDOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sc0JBQXNCLEdBQUc7SUFDcEM7O09BRUc7SUFDSCxPQUFPLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDbEIsT0FBTyxFQUFFLFNBQVM7UUFDbEIsSUFBSSxFQUFFLFNBQVM7UUFDZixNQUFNLEVBQUUsc0NBQXNDO0tBQy9DLENBQUM7SUFDRjs7T0FFRztJQUNILFNBQVMsRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUNwQixPQUFPLEVBQUUsV0FBVztRQUNwQixJQUFJLEVBQUUsV0FBVztRQUNqQixNQUFNLEVBQUUsc0NBQXNDO0tBQy9DLENBQUM7SUFDRjs7T0FFRztJQUNILGNBQWMsRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUN6QixPQUFPLEVBQUUsa0JBQWtCO1FBQzNCLElBQUksRUFBRSxrQkFBa0I7UUFDeEIsTUFBTSxFQUFFLHNDQUFzQztLQUMvQyxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxRQUFRLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDbkIsT0FBTyxFQUFFLFVBQVU7UUFDbkIsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLHNDQUFzQztLQUMvQyxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxVQUFVLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDckIsT0FBTyxFQUFFLGFBQWE7UUFDdEIsSUFBSSxFQUFFLGFBQWE7UUFDbkIsTUFBTSxFQUFFLHNDQUFzQztLQUMvQyxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxPQUFPLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDbEIsT0FBTyxFQUFFLFVBQVU7UUFDbkIsSUFBSSxFQUFFLFNBQVM7UUFDZixNQUFNLEVBQUUsc0NBQXNDO0tBQy9DLENBQUM7SUFDRjs7T0FFRztJQUNILE9BQU8sRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUNsQixPQUFPLEVBQUUsU0FBUztRQUNsQixJQUFJLEVBQUUsU0FBUztRQUNmLE1BQU0sRUFBRSxzQ0FBc0M7S0FDL0MsQ0FBQztJQUNGOztPQUVHO0lBQ0gsT0FBTyxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ2xCLE9BQU8sRUFBRSxTQUFTO1FBQ2xCLElBQUksRUFBRSxTQUFTO1FBQ2YsTUFBTSxFQUFFLHNDQUFzQztLQUMvQyxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxPQUFPLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDbEIsT0FBTyxFQUFFLFNBQVM7UUFDbEIsSUFBSSxFQUFFLFNBQVM7UUFDZixNQUFNLEVBQUUsc0NBQXNDO0tBQy9DLENBQUM7Q0FDTSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0LmNvcmUgdmVyc2lvbjogNC4wLjFcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L2VuY291bnRlci1zdGF0dXN8NC4wLjFcclxuXHJcbmltcG9ydCB7IENvZGluZyB9IGZyb20gJy4uL2ZoaXIvQ29kaW5nLmpzJ1xyXG5cclxuLyoqXHJcbiAqIEN1cnJlbnQgc3RhdGUgb2YgdGhlIGVuY291bnRlci5cclxuICovXHJcbmV4cG9ydCBjb25zdCBFbmNvdW50ZXJTdGF0dXNDb2RpbmdzID0ge1xyXG4gIC8qKlxyXG4gICAqIGFycml2ZWQ6IFRoZSBQYXRpZW50IGlzIHByZXNlbnQgZm9yIHRoZSBlbmNvdW50ZXIsIGhvd2V2ZXIgaXMgbm90IGN1cnJlbnRseSBtZWV0aW5nIHdpdGggYSBwcmFjdGl0aW9uZXIuXHJcbiAgICovXHJcbiAgQXJyaXZlZDogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIkFycml2ZWRcIixcclxuICAgIGNvZGU6IFwiYXJyaXZlZFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvZW5jb3VudGVyLXN0YXR1c1wiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIGNhbmNlbGxlZDogVGhlIEVuY291bnRlciBoYXMgZW5kZWQgYmVmb3JlIGl0IGhhcyBiZWd1bi5cclxuICAgKi9cclxuICBDYW5jZWxsZWQ6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJDYW5jZWxsZWRcIixcclxuICAgIGNvZGU6IFwiY2FuY2VsbGVkXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9lbmNvdW50ZXItc3RhdHVzXCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogZW50ZXJlZC1pbi1lcnJvcjogVGhpcyBpbnN0YW5jZSBzaG91bGQgbm90IGhhdmUgYmVlbiBwYXJ0IG9mIHRoaXMgcGF0aWVudCdzIG1lZGljYWwgcmVjb3JkLlxyXG4gICAqL1xyXG4gIEVudGVyZWRJbkVycm9yOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiRW50ZXJlZCBpbiBFcnJvclwiLFxyXG4gICAgY29kZTogXCJlbnRlcmVkLWluLWVycm9yXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9lbmNvdW50ZXItc3RhdHVzXCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogZmluaXNoZWQ6IFRoZSBFbmNvdW50ZXIgaGFzIGVuZGVkLlxyXG4gICAqL1xyXG4gIEZpbmlzaGVkOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiRmluaXNoZWRcIixcclxuICAgIGNvZGU6IFwiZmluaXNoZWRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2VuY291bnRlci1zdGF0dXNcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBpbi1wcm9ncmVzczogVGhlIEVuY291bnRlciBoYXMgYmVndW4gYW5kIHRoZSBwYXRpZW50IGlzIHByZXNlbnQgLyB0aGUgcHJhY3RpdGlvbmVyIGFuZCB0aGUgcGF0aWVudCBhcmUgbWVldGluZy5cclxuICAgKi9cclxuICBJblByb2dyZXNzOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiSW4gUHJvZ3Jlc3NcIixcclxuICAgIGNvZGU6IFwiaW4tcHJvZ3Jlc3NcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2VuY291bnRlci1zdGF0dXNcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBvbmxlYXZlOiBUaGUgRW5jb3VudGVyIGhhcyBiZWd1biwgYnV0IHRoZSBwYXRpZW50IGlzIHRlbXBvcmFyaWx5IG9uIGxlYXZlLlxyXG4gICAqL1xyXG4gIE9uTGVhdmU6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJPbiBMZWF2ZVwiLFxyXG4gICAgY29kZTogXCJvbmxlYXZlXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9lbmNvdW50ZXItc3RhdHVzXCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogcGxhbm5lZDogVGhlIEVuY291bnRlciBoYXMgbm90IHlldCBzdGFydGVkLlxyXG4gICAqL1xyXG4gIFBsYW5uZWQ6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJQbGFubmVkXCIsXHJcbiAgICBjb2RlOiBcInBsYW5uZWRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2VuY291bnRlci1zdGF0dXNcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiB0cmlhZ2VkOiBUaGUgcGF0aWVudCBoYXMgYmVlbiBhc3Nlc3NlZCBmb3IgdGhlIHByaW9yaXR5IG9mIHRoZWlyIHRyZWF0bWVudCBiYXNlZCBvbiB0aGUgc2V2ZXJpdHkgb2YgdGhlaXIgY29uZGl0aW9uLlxyXG4gICAqL1xyXG4gIFRyaWFnZWQ6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJUcmlhZ2VkXCIsXHJcbiAgICBjb2RlOiBcInRyaWFnZWRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2VuY291bnRlci1zdGF0dXNcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiB1bmtub3duOiBUaGUgZW5jb3VudGVyIHN0YXR1cyBpcyB1bmtub3duLiBOb3RlIHRoYXQgXCJ1bmtub3duXCIgaXMgYSB2YWx1ZSBvZiBsYXN0IHJlc29ydCBhbmQgZXZlcnkgYXR0ZW1wdCBzaG91bGQgYmUgbWFkZSB0byBwcm92aWRlIGEgbWVhbmluZ2Z1bCB2YWx1ZSBvdGhlciB0aGFuIFwidW5rbm93blwiLlxyXG4gICAqL1xyXG4gIFVua25vd246IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJVbmtub3duXCIsXHJcbiAgICBjb2RlOiBcInVua25vd25cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2VuY291bnRlci1zdGF0dXNcIixcclxuICB9KSxcclxufSBhcyBjb25zdDtcclxuXHJcbi8qKlxyXG4gKiBDdXJyZW50IHN0YXRlIG9mIHRoZSBlbmNvdW50ZXIuXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBFbmNvdW50ZXJTdGF0dXNDb2RpbmdUeXBlID0gdHlwZW9mIEVuY291bnRlclN0YXR1c0NvZGluZ3M7XHJcbiJdfQ==