// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/event-resource-types|4.0.1
/**
 * A list of all the event resource types defined in this version of the FHIR specification.
 */
export const EventResourceTypesCodes = {
    /**
     * ChargeItem: Item containing charge code(s) associated with the provision of healthcare provider products.
     */
    ChargeItem: "ChargeItem",
    /**
     * ClaimResponse: Remittance resource.
     */
    ClaimResponse: "ClaimResponse",
    /**
     * ClinicalImpression: A clinical assessment performed when planning treatments and management strategies for a patient.
     */
    ClinicalImpression: "ClinicalImpression",
    /**
     * Communication: A record of information transmitted from a sender to a receiver.
     */
    Communication: "Communication",
    /**
     * Composition: A set of resources composed into a single coherent clinical statement with clinical attestation.
     */
    Composition: "Composition",
    /**
     * Condition: Detailed information about conditions, problems or diagnoses.
     */
    Condition: "Condition",
    /**
     * Consent: A healthcare consumer's policy choices to permits or denies recipients or roles to perform actions for specific purposes and periods of time.
     */
    Consent: "Consent",
    /**
     * Coverage: Insurance or medical plan or a payment agreement.
     */
    Coverage: "Coverage",
    /**
     * DeviceUseStatement: Record of use of a device.
     */
    DeviceUseStatement: "DeviceUseStatement",
    /**
     * DiagnosticReport: A Diagnostic report - a combination of request information, atomic results, images, interpretation, as well as formatted reports.
     */
    DiagnosticReport: "DiagnosticReport",
    /**
     * DocumentManifest: A list that defines a set of documents.
     */
    DocumentManifest: "DocumentManifest",
    /**
     * DocumentReference: A reference to a document.
     */
    DocumentReference: "DocumentReference",
    /**
     * Encounter: An interaction during which services are provided to the patient.
     */
    Encounter: "Encounter",
    /**
     * EnrollmentResponse: EnrollmentResponse resource.
     */
    EnrollmentResponse: "EnrollmentResponse",
    /**
     * EpisodeOfCare: An association of a Patient with an Organization and  Healthcare Provider(s) for a period of time that the Organization assumes some level of responsibility.
     */
    EpisodeOfCare: "EpisodeOfCare",
    /**
     * ExplanationOfBenefit: Explanation of Benefit resource.
     */
    ExplanationOfBenefit: "ExplanationOfBenefit",
    /**
     * FamilyMemberHistory: Information about patient's relatives, relevant for patient.
     */
    FamilyMemberHistory: "FamilyMemberHistory",
    /**
     * GuidanceResponse: The formal response to a guidance request.
     */
    GuidanceResponse: "GuidanceResponse",
    /**
     * ImagingStudy: A set of images produced in single study (one or more series of references images).
     */
    ImagingStudy: "ImagingStudy",
    /**
     * Immunization: Immunization event information.
     */
    Immunization: "Immunization",
    /**
     * MeasureReport: Results of a measure evaluation.
     */
    MeasureReport: "MeasureReport",
    /**
     * Media: A photo, video, or audio recording acquired or used in healthcare. The actual content may be inline or provided by direct reference.
     */
    Media: "Media",
    /**
     * MedicationAdministration: Administration of medication to a patient.
     */
    MedicationAdministration: "MedicationAdministration",
    /**
     * MedicationDispense: Dispensing a medication to a named patient.
     */
    MedicationDispense: "MedicationDispense",
    /**
     * MedicationStatement: Record of medication being taken by a patient.
     */
    MedicationStatement: "MedicationStatement",
    /**
     * Observation: Measurements and simple assertions.
     */
    Observation: "Observation",
    /**
     * PaymentNotice: PaymentNotice request.
     */
    PaymentNotice: "PaymentNotice",
    /**
     * PaymentReconciliation: PaymentReconciliation resource.
     */
    PaymentReconciliation: "PaymentReconciliation",
    /**
     * Procedure: An action that is being or was performed on a patient.
     */
    Procedure: "Procedure",
    /**
     * ProcessResponse: ProcessResponse resource.
     */
    ProcessResponse: "ProcessResponse",
    /**
     * QuestionnaireResponse: A structured set of questions and their answers.
     */
    QuestionnaireResponse: "QuestionnaireResponse",
    /**
     * RiskAssessment: Potential outcomes for a subject with likelihood.
     */
    RiskAssessment: "RiskAssessment",
    /**
     * SupplyDelivery: Delivery of bulk Supplies.
     */
    SupplyDelivery: "SupplyDelivery",
    /**
     * Task: A task to be performed.
     */
    Task: "Task",
};
//# sourceMappingURL=data:application/json;base64,