// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/effect-estimate-type|4.0.1
/**
 * Whether the effect estimate is an absolute effect estimate (absolute difference) or a relative effect estimate (relative difference), and the specific type of effect estimate (eg relative risk or median difference).
 */
export const EffectEstimateTypeCodes = {
    /**
     * absolute-ARD: absolute risk difference (a type of absolute effect estimate).
     */
    AbsoluteRiskDifference: "absolute-ARD",
    /**
     * absolute-MeanDiff: mean difference (a type of absolute effect estimate).
     */
    MeanDifference: "absolute-MeanDiff",
    /**
     * absolute-MedianDiff: median difference (a type of absolute effect estimate).
     */
    MedianDifference: "absolute-MedianDiff",
    /**
     * absolute-SMD: standardized mean difference (a type of absolute effect estimate).
     */
    StandardizedMeanDifference: "absolute-SMD",
    /**
     * relative-HR: hazard ratio (a type of relative effect estimate).
     */
    HazardRatio: "relative-HR",
    /**
     * relative-OR: odds ratio (a type of relative effect estimate).
     */
    OddsRatio: "relative-OR",
    /**
     * relative-RR: relative risk (a type of relative effect estimate).
     */
    RelativeRisk: "relative-RR",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRWZmZWN0RXN0aW1hdGVUeXBlQ29kZXMuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL0VmZmVjdEVzdGltYXRlVHlwZUNvZGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQiwrQ0FBK0M7QUFDL0Msa0NBQWtDO0FBQ2xDLHlFQUF5RTtBQUV6RTs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLHVCQUF1QixHQUFHO0lBQ3JDOztPQUVHO0lBQ0gsc0JBQXNCLEVBQUUsY0FBYztJQUN0Qzs7T0FFRztJQUNILGNBQWMsRUFBRSxtQkFBbUI7SUFDbkM7O09BRUc7SUFDSCxnQkFBZ0IsRUFBRSxxQkFBcUI7SUFDdkM7O09BRUc7SUFDSCwwQkFBMEIsRUFBRSxjQUFjO0lBQzFDOztPQUVHO0lBQ0gsV0FBVyxFQUFFLGFBQWE7SUFDMUI7O09BRUc7SUFDSCxTQUFTLEVBQUUsYUFBYTtJQUN4Qjs7T0FFRztJQUNILFlBQVksRUFBRSxhQUFhO0NBQ25CLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjQuY29yZSB2ZXJzaW9uOiA0LjAuMVxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvZWZmZWN0LWVzdGltYXRlLXR5cGV8NC4wLjFcclxuXHJcbi8qKlxyXG4gKiBXaGV0aGVyIHRoZSBlZmZlY3QgZXN0aW1hdGUgaXMgYW4gYWJzb2x1dGUgZWZmZWN0IGVzdGltYXRlIChhYnNvbHV0ZSBkaWZmZXJlbmNlKSBvciBhIHJlbGF0aXZlIGVmZmVjdCBlc3RpbWF0ZSAocmVsYXRpdmUgZGlmZmVyZW5jZSksIGFuZCB0aGUgc3BlY2lmaWMgdHlwZSBvZiBlZmZlY3QgZXN0aW1hdGUgKGVnIHJlbGF0aXZlIHJpc2sgb3IgbWVkaWFuIGRpZmZlcmVuY2UpLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IEVmZmVjdEVzdGltYXRlVHlwZUNvZGVzID0ge1xyXG4gIC8qKlxyXG4gICAqIGFic29sdXRlLUFSRDogYWJzb2x1dGUgcmlzayBkaWZmZXJlbmNlIChhIHR5cGUgb2YgYWJzb2x1dGUgZWZmZWN0IGVzdGltYXRlKS5cclxuICAgKi9cclxuICBBYnNvbHV0ZVJpc2tEaWZmZXJlbmNlOiBcImFic29sdXRlLUFSRFwiLFxyXG4gIC8qKlxyXG4gICAqIGFic29sdXRlLU1lYW5EaWZmOiBtZWFuIGRpZmZlcmVuY2UgKGEgdHlwZSBvZiBhYnNvbHV0ZSBlZmZlY3QgZXN0aW1hdGUpLlxyXG4gICAqL1xyXG4gIE1lYW5EaWZmZXJlbmNlOiBcImFic29sdXRlLU1lYW5EaWZmXCIsXHJcbiAgLyoqXHJcbiAgICogYWJzb2x1dGUtTWVkaWFuRGlmZjogbWVkaWFuIGRpZmZlcmVuY2UgKGEgdHlwZSBvZiBhYnNvbHV0ZSBlZmZlY3QgZXN0aW1hdGUpLlxyXG4gICAqL1xyXG4gIE1lZGlhbkRpZmZlcmVuY2U6IFwiYWJzb2x1dGUtTWVkaWFuRGlmZlwiLFxyXG4gIC8qKlxyXG4gICAqIGFic29sdXRlLVNNRDogc3RhbmRhcmRpemVkIG1lYW4gZGlmZmVyZW5jZSAoYSB0eXBlIG9mIGFic29sdXRlIGVmZmVjdCBlc3RpbWF0ZSkuXHJcbiAgICovXHJcbiAgU3RhbmRhcmRpemVkTWVhbkRpZmZlcmVuY2U6IFwiYWJzb2x1dGUtU01EXCIsXHJcbiAgLyoqXHJcbiAgICogcmVsYXRpdmUtSFI6IGhhemFyZCByYXRpbyAoYSB0eXBlIG9mIHJlbGF0aXZlIGVmZmVjdCBlc3RpbWF0ZSkuXHJcbiAgICovXHJcbiAgSGF6YXJkUmF0aW86IFwicmVsYXRpdmUtSFJcIixcclxuICAvKipcclxuICAgKiByZWxhdGl2ZS1PUjogb2RkcyByYXRpbyAoYSB0eXBlIG9mIHJlbGF0aXZlIGVmZmVjdCBlc3RpbWF0ZSkuXHJcbiAgICovXHJcbiAgT2Rkc1JhdGlvOiBcInJlbGF0aXZlLU9SXCIsXHJcbiAgLyoqXHJcbiAgICogcmVsYXRpdmUtUlI6IHJlbGF0aXZlIHJpc2sgKGEgdHlwZSBvZiByZWxhdGl2ZSBlZmZlY3QgZXN0aW1hdGUpLlxyXG4gICAqL1xyXG4gIFJlbGF0aXZlUmlzazogXCJyZWxhdGl2ZS1SUlwiLFxyXG59IGFzIGNvbnN0O1xyXG5cclxuLyoqXHJcbiAqIFdoZXRoZXIgdGhlIGVmZmVjdCBlc3RpbWF0ZSBpcyBhbiBhYnNvbHV0ZSBlZmZlY3QgZXN0aW1hdGUgKGFic29sdXRlIGRpZmZlcmVuY2UpIG9yIGEgcmVsYXRpdmUgZWZmZWN0IGVzdGltYXRlIChyZWxhdGl2ZSBkaWZmZXJlbmNlKSwgYW5kIHRoZSBzcGVjaWZpYyB0eXBlIG9mIGVmZmVjdCBlc3RpbWF0ZSAoZWcgcmVsYXRpdmUgcmlzayBvciBtZWRpYW4gZGlmZmVyZW5jZSkuXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBFZmZlY3RFc3RpbWF0ZVR5cGVDb2RlVHlwZSA9IHR5cGVvZiBFZmZlY3RFc3RpbWF0ZVR5cGVDb2Rlc1trZXlvZiB0eXBlb2YgRWZmZWN0RXN0aW1hdGVUeXBlQ29kZXNdO1xyXG4iXX0=