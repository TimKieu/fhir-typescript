// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/history-absent-reason|4.0.1
/**
 * Codes describing the reason why a family member's history is not available.
 */
export const HistoryAbsentReasonCodings = {
    /**
     * deferred: Patient does not have the information now, but can provide the information at a later date.
     */
    Deferred: {
        display: "Deferred",
        code: "deferred",
        system: "http://terminology.hl7.org/CodeSystem/history-absent-reason",
    },
    /**
     * subject-unknown: Patient does not know the subject, e.g. the biological parent of an adopted patient.
     */
    SubjectUnknown: {
        display: "Subject Unknown",
        code: "subject-unknown",
        system: "http://terminology.hl7.org/CodeSystem/history-absent-reason",
    },
    /**
     * unable-to-obtain: Information cannot be obtained; e.g. unconscious patient.
     */
    UnableToObtain: {
        display: "Unable To Obtain",
        code: "unable-to-obtain",
        system: "http://terminology.hl7.org/CodeSystem/history-absent-reason",
    },
    /**
     * withheld: The patient withheld or refused to share the information.
     */
    InformationWithheld: {
        display: "Information Withheld",
        code: "withheld",
        system: "http://terminology.hl7.org/CodeSystem/history-absent-reason",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSGlzdG9yeUFic2VudFJlYXNvbkNvZGluZ3MuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL0hpc3RvcnlBYnNlbnRSZWFzb25Db2RpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQiwrQ0FBK0M7QUFDL0Msa0NBQWtDO0FBQ2xDLDBFQUEwRTtBQTBCMUU7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSwwQkFBMEIsR0FBaUM7SUFDdEU7O09BRUc7SUFDSCxRQUFRLEVBQUU7UUFDUixPQUFPLEVBQUUsVUFBVTtRQUNuQixJQUFJLEVBQUUsVUFBVTtRQUNoQixNQUFNLEVBQUUsNkRBQTZEO0tBQ3RFO0lBQ0Q7O09BRUc7SUFDSCxjQUFjLEVBQUU7UUFDZCxPQUFPLEVBQUUsaUJBQWlCO1FBQzFCLElBQUksRUFBRSxpQkFBaUI7UUFDdkIsTUFBTSxFQUFFLDZEQUE2RDtLQUN0RTtJQUNEOztPQUVHO0lBQ0gsY0FBYyxFQUFFO1FBQ2QsT0FBTyxFQUFFLGtCQUFrQjtRQUMzQixJQUFJLEVBQUUsa0JBQWtCO1FBQ3hCLE1BQU0sRUFBRSw2REFBNkQ7S0FDdEU7SUFDRDs7T0FFRztJQUNILG1CQUFtQixFQUFFO1FBQ25CLE9BQU8sRUFBRSxzQkFBc0I7UUFDL0IsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLDZEQUE2RDtLQUN0RTtDQUNPLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjQuY29yZSB2ZXJzaW9uOiA0LjAuMVxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvaGlzdG9yeS1hYnNlbnQtcmVhc29ufDQuMC4xXHJcblxyXG5pbXBvcnQgeyBDb2RpbmdBcmdzIH0gZnJvbSAnLi4vZmhpci9Db2RpbmcuanMnXHJcblxyXG4vKipcclxuICogQ29kZXMgZGVzY3JpYmluZyB0aGUgcmVhc29uIHdoeSBhIGZhbWlseSBtZW1iZXIncyBoaXN0b3J5IGlzIG5vdCBhdmFpbGFibGUuXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBIaXN0b3J5QWJzZW50UmVhc29uQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBkZWZlcnJlZDogUGF0aWVudCBkb2VzIG5vdCBoYXZlIHRoZSBpbmZvcm1hdGlvbiBub3csIGJ1dCBjYW4gcHJvdmlkZSB0aGUgaW5mb3JtYXRpb24gYXQgYSBsYXRlciBkYXRlLlxyXG4gICAqL1xyXG4gIERlZmVycmVkOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIHN1YmplY3QtdW5rbm93bjogUGF0aWVudCBkb2VzIG5vdCBrbm93IHRoZSBzdWJqZWN0LCBlLmcuIHRoZSBiaW9sb2dpY2FsIHBhcmVudCBvZiBhbiBhZG9wdGVkIHBhdGllbnQuXHJcbiAgICovXHJcbiAgU3ViamVjdFVua25vd246IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogdW5hYmxlLXRvLW9idGFpbjogSW5mb3JtYXRpb24gY2Fubm90IGJlIG9idGFpbmVkOyBlLmcuIHVuY29uc2Npb3VzIHBhdGllbnQuXHJcbiAgICovXHJcbiAgVW5hYmxlVG9PYnRhaW46IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogd2l0aGhlbGQ6IFRoZSBwYXRpZW50IHdpdGhoZWxkIG9yIHJlZnVzZWQgdG8gc2hhcmUgdGhlIGluZm9ybWF0aW9uLlxyXG4gICAqL1xyXG4gIEluZm9ybWF0aW9uV2l0aGhlbGQ6IENvZGluZ0FyZ3M7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDb2RlcyBkZXNjcmliaW5nIHRoZSByZWFzb24gd2h5IGEgZmFtaWx5IG1lbWJlcidzIGhpc3RvcnkgaXMgbm90IGF2YWlsYWJsZS5cclxuICovXHJcbmV4cG9ydCBjb25zdCBIaXN0b3J5QWJzZW50UmVhc29uQ29kaW5nczpIaXN0b3J5QWJzZW50UmVhc29uQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBkZWZlcnJlZDogUGF0aWVudCBkb2VzIG5vdCBoYXZlIHRoZSBpbmZvcm1hdGlvbiBub3csIGJ1dCBjYW4gcHJvdmlkZSB0aGUgaW5mb3JtYXRpb24gYXQgYSBsYXRlciBkYXRlLlxyXG4gICAqL1xyXG4gIERlZmVycmVkOiB7XHJcbiAgICBkaXNwbGF5OiBcIkRlZmVycmVkXCIsXHJcbiAgICBjb2RlOiBcImRlZmVycmVkXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9oaXN0b3J5LWFic2VudC1yZWFzb25cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIHN1YmplY3QtdW5rbm93bjogUGF0aWVudCBkb2VzIG5vdCBrbm93IHRoZSBzdWJqZWN0LCBlLmcuIHRoZSBiaW9sb2dpY2FsIHBhcmVudCBvZiBhbiBhZG9wdGVkIHBhdGllbnQuXHJcbiAgICovXHJcbiAgU3ViamVjdFVua25vd246IHtcclxuICAgIGRpc3BsYXk6IFwiU3ViamVjdCBVbmtub3duXCIsXHJcbiAgICBjb2RlOiBcInN1YmplY3QtdW5rbm93blwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vaGlzdG9yeS1hYnNlbnQtcmVhc29uXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiB1bmFibGUtdG8tb2J0YWluOiBJbmZvcm1hdGlvbiBjYW5ub3QgYmUgb2J0YWluZWQ7IGUuZy4gdW5jb25zY2lvdXMgcGF0aWVudC5cclxuICAgKi9cclxuICBVbmFibGVUb09idGFpbjoge1xyXG4gICAgZGlzcGxheTogXCJVbmFibGUgVG8gT2J0YWluXCIsXHJcbiAgICBjb2RlOiBcInVuYWJsZS10by1vYnRhaW5cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2hpc3RvcnktYWJzZW50LXJlYXNvblwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogd2l0aGhlbGQ6IFRoZSBwYXRpZW50IHdpdGhoZWxkIG9yIHJlZnVzZWQgdG8gc2hhcmUgdGhlIGluZm9ybWF0aW9uLlxyXG4gICAqL1xyXG4gIEluZm9ybWF0aW9uV2l0aGhlbGQ6IHtcclxuICAgIGRpc3BsYXk6IFwiSW5mb3JtYXRpb24gV2l0aGhlbGRcIixcclxuICAgIGNvZGU6IFwid2l0aGhlbGRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2hpc3RvcnktYWJzZW50LXJlYXNvblwiLFxyXG4gIH0sXHJcbn0gYXMgY29uc3Q7XHJcbiJdfQ==