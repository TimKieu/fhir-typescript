// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/history-absent-reason|4.0.1
import { Coding } from '../fhir/Coding.js';
/**
 * Codes describing the reason why a family member's history is not available.
 */
export const HistoryAbsentReasonCodings = {
    /**
     * deferred: Patient does not have the information now, but can provide the information at a later date.
     */
    Deferred: new Coding({
        display: "Deferred",
        code: "deferred",
        system: "http://terminology.hl7.org/CodeSystem/history-absent-reason",
    }),
    /**
     * subject-unknown: Patient does not know the subject, e.g. the biological parent of an adopted patient.
     */
    SubjectUnknown: new Coding({
        display: "Subject Unknown",
        code: "subject-unknown",
        system: "http://terminology.hl7.org/CodeSystem/history-absent-reason",
    }),
    /**
     * unable-to-obtain: Information cannot be obtained; e.g. unconscious patient.
     */
    UnableToObtain: new Coding({
        display: "Unable To Obtain",
        code: "unable-to-obtain",
        system: "http://terminology.hl7.org/CodeSystem/history-absent-reason",
    }),
    /**
     * withheld: The patient withheld or refused to share the information.
     */
    InformationWithheld: new Coding({
        display: "Information Withheld",
        code: "withheld",
        system: "http://terminology.hl7.org/CodeSystem/history-absent-reason",
    }),
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSGlzdG9yeUFic2VudFJlYXNvbkNvZGluZ3MuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL0hpc3RvcnlBYnNlbnRSZWFzb25Db2RpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQiwrQ0FBK0M7QUFDL0Msa0NBQWtDO0FBQ2xDLDBFQUEwRTtBQUUxRSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sbUJBQW1CLENBQUE7QUFFMUM7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSwwQkFBMEIsR0FBRztJQUN4Qzs7T0FFRztJQUNILFFBQVEsRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUNuQixPQUFPLEVBQUUsVUFBVTtRQUNuQixJQUFJLEVBQUUsVUFBVTtRQUNoQixNQUFNLEVBQUUsNkRBQTZEO0tBQ3RFLENBQUM7SUFDRjs7T0FFRztJQUNILGNBQWMsRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUN6QixPQUFPLEVBQUUsaUJBQWlCO1FBQzFCLElBQUksRUFBRSxpQkFBaUI7UUFDdkIsTUFBTSxFQUFFLDZEQUE2RDtLQUN0RSxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxjQUFjLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDekIsT0FBTyxFQUFFLGtCQUFrQjtRQUMzQixJQUFJLEVBQUUsa0JBQWtCO1FBQ3hCLE1BQU0sRUFBRSw2REFBNkQ7S0FDdEUsQ0FBQztJQUNGOztPQUVHO0lBQ0gsbUJBQW1CLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDOUIsT0FBTyxFQUFFLHNCQUFzQjtRQUMvQixJQUFJLEVBQUUsVUFBVTtRQUNoQixNQUFNLEVBQUUsNkRBQTZEO0tBQ3RFLENBQUM7Q0FDTSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0LmNvcmUgdmVyc2lvbjogNC4wLjFcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L2hpc3RvcnktYWJzZW50LXJlYXNvbnw0LjAuMVxyXG5cclxuaW1wb3J0IHsgQ29kaW5nIH0gZnJvbSAnLi4vZmhpci9Db2RpbmcuanMnXHJcblxyXG4vKipcclxuICogQ29kZXMgZGVzY3JpYmluZyB0aGUgcmVhc29uIHdoeSBhIGZhbWlseSBtZW1iZXIncyBoaXN0b3J5IGlzIG5vdCBhdmFpbGFibGUuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgSGlzdG9yeUFic2VudFJlYXNvbkNvZGluZ3MgPSB7XHJcbiAgLyoqXHJcbiAgICogZGVmZXJyZWQ6IFBhdGllbnQgZG9lcyBub3QgaGF2ZSB0aGUgaW5mb3JtYXRpb24gbm93LCBidXQgY2FuIHByb3ZpZGUgdGhlIGluZm9ybWF0aW9uIGF0IGEgbGF0ZXIgZGF0ZS5cclxuICAgKi9cclxuICBEZWZlcnJlZDogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIkRlZmVycmVkXCIsXHJcbiAgICBjb2RlOiBcImRlZmVycmVkXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9oaXN0b3J5LWFic2VudC1yZWFzb25cIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBzdWJqZWN0LXVua25vd246IFBhdGllbnQgZG9lcyBub3Qga25vdyB0aGUgc3ViamVjdCwgZS5nLiB0aGUgYmlvbG9naWNhbCBwYXJlbnQgb2YgYW4gYWRvcHRlZCBwYXRpZW50LlxyXG4gICAqL1xyXG4gIFN1YmplY3RVbmtub3duOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiU3ViamVjdCBVbmtub3duXCIsXHJcbiAgICBjb2RlOiBcInN1YmplY3QtdW5rbm93blwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vaGlzdG9yeS1hYnNlbnQtcmVhc29uXCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogdW5hYmxlLXRvLW9idGFpbjogSW5mb3JtYXRpb24gY2Fubm90IGJlIG9idGFpbmVkOyBlLmcuIHVuY29uc2Npb3VzIHBhdGllbnQuXHJcbiAgICovXHJcbiAgVW5hYmxlVG9PYnRhaW46IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJVbmFibGUgVG8gT2J0YWluXCIsXHJcbiAgICBjb2RlOiBcInVuYWJsZS10by1vYnRhaW5cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2hpc3RvcnktYWJzZW50LXJlYXNvblwiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIHdpdGhoZWxkOiBUaGUgcGF0aWVudCB3aXRoaGVsZCBvciByZWZ1c2VkIHRvIHNoYXJlIHRoZSBpbmZvcm1hdGlvbi5cclxuICAgKi9cclxuICBJbmZvcm1hdGlvbldpdGhoZWxkOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiSW5mb3JtYXRpb24gV2l0aGhlbGRcIixcclxuICAgIGNvZGU6IFwid2l0aGhlbGRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2hpc3RvcnktYWJzZW50LXJlYXNvblwiLFxyXG4gIH0pLFxyXG59IGFzIGNvbnN0O1xyXG5cclxuLyoqXHJcbiAqIENvZGVzIGRlc2NyaWJpbmcgdGhlIHJlYXNvbiB3aHkgYSBmYW1pbHkgbWVtYmVyJ3MgaGlzdG9yeSBpcyBub3QgYXZhaWxhYmxlLlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgSGlzdG9yeUFic2VudFJlYXNvbkNvZGluZ1R5cGUgPSB0eXBlb2YgSGlzdG9yeUFic2VudFJlYXNvbkNvZGluZ3M7XHJcbiJdfQ==