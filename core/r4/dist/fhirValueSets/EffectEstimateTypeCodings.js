// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/effect-estimate-type|4.0.1
/**
 * Whether the effect estimate is an absolute effect estimate (absolute difference) or a relative effect estimate (relative difference), and the specific type of effect estimate (eg relative risk or median difference).
 */
export const EffectEstimateTypeCodings = {
    /**
     * absolute-ARD: absolute risk difference (a type of absolute effect estimate).
     */
    AbsoluteRiskDifference: {
        display: "absolute risk difference",
        code: "absolute-ARD",
        system: "http://terminology.hl7.org/CodeSystem/effect-estimate-type",
    },
    /**
     * absolute-MeanDiff: mean difference (a type of absolute effect estimate).
     */
    MeanDifference: {
        display: "mean difference",
        code: "absolute-MeanDiff",
        system: "http://terminology.hl7.org/CodeSystem/effect-estimate-type",
    },
    /**
     * absolute-MedianDiff: median difference (a type of absolute effect estimate).
     */
    MedianDifference: {
        display: "median difference",
        code: "absolute-MedianDiff",
        system: "http://terminology.hl7.org/CodeSystem/effect-estimate-type",
    },
    /**
     * absolute-SMD: standardized mean difference (a type of absolute effect estimate).
     */
    StandardizedMeanDifference: {
        display: "standardized mean difference",
        code: "absolute-SMD",
        system: "http://terminology.hl7.org/CodeSystem/effect-estimate-type",
    },
    /**
     * relative-HR: hazard ratio (a type of relative effect estimate).
     */
    HazardRatio: {
        display: "hazard ratio",
        code: "relative-HR",
        system: "http://terminology.hl7.org/CodeSystem/effect-estimate-type",
    },
    /**
     * relative-OR: odds ratio (a type of relative effect estimate).
     */
    OddsRatio: {
        display: "odds ratio",
        code: "relative-OR",
        system: "http://terminology.hl7.org/CodeSystem/effect-estimate-type",
    },
    /**
     * relative-RR: relative risk (a type of relative effect estimate).
     */
    RelativeRisk: {
        display: "relative risk",
        code: "relative-RR",
        system: "http://terminology.hl7.org/CodeSystem/effect-estimate-type",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRWZmZWN0RXN0aW1hdGVUeXBlQ29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvRWZmZWN0RXN0aW1hdGVUeXBlQ29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyx5RUFBeUU7QUFzQ3pFOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0seUJBQXlCLEdBQWdDO0lBQ3BFOztPQUVHO0lBQ0gsc0JBQXNCLEVBQUU7UUFDdEIsT0FBTyxFQUFFLDBCQUEwQjtRQUNuQyxJQUFJLEVBQUUsY0FBYztRQUNwQixNQUFNLEVBQUUsNERBQTREO0tBQ3JFO0lBQ0Q7O09BRUc7SUFDSCxjQUFjLEVBQUU7UUFDZCxPQUFPLEVBQUUsaUJBQWlCO1FBQzFCLElBQUksRUFBRSxtQkFBbUI7UUFDekIsTUFBTSxFQUFFLDREQUE0RDtLQUNyRTtJQUNEOztPQUVHO0lBQ0gsZ0JBQWdCLEVBQUU7UUFDaEIsT0FBTyxFQUFFLG1CQUFtQjtRQUM1QixJQUFJLEVBQUUscUJBQXFCO1FBQzNCLE1BQU0sRUFBRSw0REFBNEQ7S0FDckU7SUFDRDs7T0FFRztJQUNILDBCQUEwQixFQUFFO1FBQzFCLE9BQU8sRUFBRSw4QkFBOEI7UUFDdkMsSUFBSSxFQUFFLGNBQWM7UUFDcEIsTUFBTSxFQUFFLDREQUE0RDtLQUNyRTtJQUNEOztPQUVHO0lBQ0gsV0FBVyxFQUFFO1FBQ1gsT0FBTyxFQUFFLGNBQWM7UUFDdkIsSUFBSSxFQUFFLGFBQWE7UUFDbkIsTUFBTSxFQUFFLDREQUE0RDtLQUNyRTtJQUNEOztPQUVHO0lBQ0gsU0FBUyxFQUFFO1FBQ1QsT0FBTyxFQUFFLFlBQVk7UUFDckIsSUFBSSxFQUFFLGFBQWE7UUFDbkIsTUFBTSxFQUFFLDREQUE0RDtLQUNyRTtJQUNEOztPQUVHO0lBQ0gsWUFBWSxFQUFFO1FBQ1osT0FBTyxFQUFFLGVBQWU7UUFDeEIsSUFBSSxFQUFFLGFBQWE7UUFDbkIsTUFBTSxFQUFFLDREQUE0RDtLQUNyRTtDQUNPLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjQuY29yZSB2ZXJzaW9uOiA0LjAuMVxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvZWZmZWN0LWVzdGltYXRlLXR5cGV8NC4wLjFcclxuXHJcbmltcG9ydCB7IENvZGluZ0FyZ3MgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiBXaGV0aGVyIHRoZSBlZmZlY3QgZXN0aW1hdGUgaXMgYW4gYWJzb2x1dGUgZWZmZWN0IGVzdGltYXRlIChhYnNvbHV0ZSBkaWZmZXJlbmNlKSBvciBhIHJlbGF0aXZlIGVmZmVjdCBlc3RpbWF0ZSAocmVsYXRpdmUgZGlmZmVyZW5jZSksIGFuZCB0aGUgc3BlY2lmaWMgdHlwZSBvZiBlZmZlY3QgZXN0aW1hdGUgKGVnIHJlbGF0aXZlIHJpc2sgb3IgbWVkaWFuIGRpZmZlcmVuY2UpLlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgRWZmZWN0RXN0aW1hdGVUeXBlQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBhYnNvbHV0ZS1BUkQ6IGFic29sdXRlIHJpc2sgZGlmZmVyZW5jZSAoYSB0eXBlIG9mIGFic29sdXRlIGVmZmVjdCBlc3RpbWF0ZSkuXHJcbiAgICovXHJcbiAgQWJzb2x1dGVSaXNrRGlmZmVyZW5jZTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBhYnNvbHV0ZS1NZWFuRGlmZjogbWVhbiBkaWZmZXJlbmNlIChhIHR5cGUgb2YgYWJzb2x1dGUgZWZmZWN0IGVzdGltYXRlKS5cclxuICAgKi9cclxuICBNZWFuRGlmZmVyZW5jZTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBhYnNvbHV0ZS1NZWRpYW5EaWZmOiBtZWRpYW4gZGlmZmVyZW5jZSAoYSB0eXBlIG9mIGFic29sdXRlIGVmZmVjdCBlc3RpbWF0ZSkuXHJcbiAgICovXHJcbiAgTWVkaWFuRGlmZmVyZW5jZTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBhYnNvbHV0ZS1TTUQ6IHN0YW5kYXJkaXplZCBtZWFuIGRpZmZlcmVuY2UgKGEgdHlwZSBvZiBhYnNvbHV0ZSBlZmZlY3QgZXN0aW1hdGUpLlxyXG4gICAqL1xyXG4gIFN0YW5kYXJkaXplZE1lYW5EaWZmZXJlbmNlOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIHJlbGF0aXZlLUhSOiBoYXphcmQgcmF0aW8gKGEgdHlwZSBvZiByZWxhdGl2ZSBlZmZlY3QgZXN0aW1hdGUpLlxyXG4gICAqL1xyXG4gIEhhemFyZFJhdGlvOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIHJlbGF0aXZlLU9SOiBvZGRzIHJhdGlvIChhIHR5cGUgb2YgcmVsYXRpdmUgZWZmZWN0IGVzdGltYXRlKS5cclxuICAgKi9cclxuICBPZGRzUmF0aW86IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogcmVsYXRpdmUtUlI6IHJlbGF0aXZlIHJpc2sgKGEgdHlwZSBvZiByZWxhdGl2ZSBlZmZlY3QgZXN0aW1hdGUpLlxyXG4gICAqL1xyXG4gIFJlbGF0aXZlUmlzazogQ29kaW5nQXJncztcclxufVxyXG5cclxuLyoqXHJcbiAqIFdoZXRoZXIgdGhlIGVmZmVjdCBlc3RpbWF0ZSBpcyBhbiBhYnNvbHV0ZSBlZmZlY3QgZXN0aW1hdGUgKGFic29sdXRlIGRpZmZlcmVuY2UpIG9yIGEgcmVsYXRpdmUgZWZmZWN0IGVzdGltYXRlIChyZWxhdGl2ZSBkaWZmZXJlbmNlKSwgYW5kIHRoZSBzcGVjaWZpYyB0eXBlIG9mIGVmZmVjdCBlc3RpbWF0ZSAoZWcgcmVsYXRpdmUgcmlzayBvciBtZWRpYW4gZGlmZmVyZW5jZSkuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgRWZmZWN0RXN0aW1hdGVUeXBlQ29kaW5nczpFZmZlY3RFc3RpbWF0ZVR5cGVDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIGFic29sdXRlLUFSRDogYWJzb2x1dGUgcmlzayBkaWZmZXJlbmNlIChhIHR5cGUgb2YgYWJzb2x1dGUgZWZmZWN0IGVzdGltYXRlKS5cclxuICAgKi9cclxuICBBYnNvbHV0ZVJpc2tEaWZmZXJlbmNlOiB7XHJcbiAgICBkaXNwbGF5OiBcImFic29sdXRlIHJpc2sgZGlmZmVyZW5jZVwiLFxyXG4gICAgY29kZTogXCJhYnNvbHV0ZS1BUkRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2VmZmVjdC1lc3RpbWF0ZS10eXBlXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBhYnNvbHV0ZS1NZWFuRGlmZjogbWVhbiBkaWZmZXJlbmNlIChhIHR5cGUgb2YgYWJzb2x1dGUgZWZmZWN0IGVzdGltYXRlKS5cclxuICAgKi9cclxuICBNZWFuRGlmZmVyZW5jZToge1xyXG4gICAgZGlzcGxheTogXCJtZWFuIGRpZmZlcmVuY2VcIixcclxuICAgIGNvZGU6IFwiYWJzb2x1dGUtTWVhbkRpZmZcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2VmZmVjdC1lc3RpbWF0ZS10eXBlXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBhYnNvbHV0ZS1NZWRpYW5EaWZmOiBtZWRpYW4gZGlmZmVyZW5jZSAoYSB0eXBlIG9mIGFic29sdXRlIGVmZmVjdCBlc3RpbWF0ZSkuXHJcbiAgICovXHJcbiAgTWVkaWFuRGlmZmVyZW5jZToge1xyXG4gICAgZGlzcGxheTogXCJtZWRpYW4gZGlmZmVyZW5jZVwiLFxyXG4gICAgY29kZTogXCJhYnNvbHV0ZS1NZWRpYW5EaWZmXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9lZmZlY3QtZXN0aW1hdGUtdHlwZVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogYWJzb2x1dGUtU01EOiBzdGFuZGFyZGl6ZWQgbWVhbiBkaWZmZXJlbmNlIChhIHR5cGUgb2YgYWJzb2x1dGUgZWZmZWN0IGVzdGltYXRlKS5cclxuICAgKi9cclxuICBTdGFuZGFyZGl6ZWRNZWFuRGlmZmVyZW5jZToge1xyXG4gICAgZGlzcGxheTogXCJzdGFuZGFyZGl6ZWQgbWVhbiBkaWZmZXJlbmNlXCIsXHJcbiAgICBjb2RlOiBcImFic29sdXRlLVNNRFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vZWZmZWN0LWVzdGltYXRlLXR5cGVcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIHJlbGF0aXZlLUhSOiBoYXphcmQgcmF0aW8gKGEgdHlwZSBvZiByZWxhdGl2ZSBlZmZlY3QgZXN0aW1hdGUpLlxyXG4gICAqL1xyXG4gIEhhemFyZFJhdGlvOiB7XHJcbiAgICBkaXNwbGF5OiBcImhhemFyZCByYXRpb1wiLFxyXG4gICAgY29kZTogXCJyZWxhdGl2ZS1IUlwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vZWZmZWN0LWVzdGltYXRlLXR5cGVcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIHJlbGF0aXZlLU9SOiBvZGRzIHJhdGlvIChhIHR5cGUgb2YgcmVsYXRpdmUgZWZmZWN0IGVzdGltYXRlKS5cclxuICAgKi9cclxuICBPZGRzUmF0aW86IHtcclxuICAgIGRpc3BsYXk6IFwib2RkcyByYXRpb1wiLFxyXG4gICAgY29kZTogXCJyZWxhdGl2ZS1PUlwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vZWZmZWN0LWVzdGltYXRlLXR5cGVcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIHJlbGF0aXZlLVJSOiByZWxhdGl2ZSByaXNrIChhIHR5cGUgb2YgcmVsYXRpdmUgZWZmZWN0IGVzdGltYXRlKS5cclxuICAgKi9cclxuICBSZWxhdGl2ZVJpc2s6IHtcclxuICAgIGRpc3BsYXk6IFwicmVsYXRpdmUgcmlza1wiLFxyXG4gICAgY29kZTogXCJyZWxhdGl2ZS1SUlwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vZWZmZWN0LWVzdGltYXRlLXR5cGVcIixcclxuICB9LFxyXG59IGFzIGNvbnN0O1xyXG4iXX0=