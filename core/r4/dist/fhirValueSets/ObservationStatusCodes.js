// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/observation-status|4.0.1
/**
 * Codes providing the status of an observation.
 */
export const ObservationStatusCodes = {
    /**
     * amended: Subsequent to being Final, the observation has been modified subsequent.  This includes updates/new information and corrections.
     */
    Amended: "amended",
    /**
     * cancelled: The observation is unavailable because the measurement was not started or not completed (also sometimes called "aborted").
     */
    Cancelled: "cancelled",
    /**
     * corrected: Subsequent to being Final, the observation has been modified to correct an error in the test result.
     */
    Corrected: "corrected",
    /**
     * entered-in-error: The observation has been withdrawn following previous final release.  This electronic record should never have existed, though it is possible that real-world decisions were based on it. (If real-world activity has occurred, the status should be "cancelled" rather than "entered-in-error".).
     */
    EnteredInError: "entered-in-error",
    /**
     * final: The observation is complete and there are no further actions needed. Additional information such "released", "signed", etc would be represented using [Provenance](provenance.html) which provides not only the act but also the actors and dates and other related data. These act states would be associated with an observation status of `preliminary` until they are all completed and then a status of `final` would be applied.
     */
    Final: "final",
    /**
     * preliminary: This is an initial or interim observation: data may be incomplete or unverified.
     */
    Preliminary: "preliminary",
    /**
     * registered: The existence of the observation is registered, but there is no result yet available.
     */
    Registered: "registered",
    /**
     * unknown: The authoring/source system does not know which of the status values currently applies for this observation. Note: This concept is not to be used for "other" - one of the listed statuses is presumed to apply, but the authoring/source system does not know which.
     */
    Unknown: "unknown",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiT2JzZXJ2YXRpb25TdGF0dXNDb2Rlcy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvT2JzZXJ2YXRpb25TdGF0dXNDb2Rlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyx1RUFBdUU7QUFFdkU7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxzQkFBc0IsR0FBRztJQUNwQzs7T0FFRztJQUNILE9BQU8sRUFBRSxTQUFTO0lBQ2xCOztPQUVHO0lBQ0gsU0FBUyxFQUFFLFdBQVc7SUFDdEI7O09BRUc7SUFDSCxTQUFTLEVBQUUsV0FBVztJQUN0Qjs7T0FFRztJQUNILGNBQWMsRUFBRSxrQkFBa0I7SUFDbEM7O09BRUc7SUFDSCxLQUFLLEVBQUUsT0FBTztJQUNkOztPQUVHO0lBQ0gsV0FBVyxFQUFFLGFBQWE7SUFDMUI7O09BRUc7SUFDSCxVQUFVLEVBQUUsWUFBWTtJQUN4Qjs7T0FFRztJQUNILE9BQU8sRUFBRSxTQUFTO0NBQ1YsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNC5jb3JlIHZlcnNpb246IDQuMC4xXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9vYnNlcnZhdGlvbi1zdGF0dXN8NC4wLjFcclxuXHJcbi8qKlxyXG4gKiBDb2RlcyBwcm92aWRpbmcgdGhlIHN0YXR1cyBvZiBhbiBvYnNlcnZhdGlvbi5cclxuICovXHJcbmV4cG9ydCBjb25zdCBPYnNlcnZhdGlvblN0YXR1c0NvZGVzID0ge1xyXG4gIC8qKlxyXG4gICAqIGFtZW5kZWQ6IFN1YnNlcXVlbnQgdG8gYmVpbmcgRmluYWwsIHRoZSBvYnNlcnZhdGlvbiBoYXMgYmVlbiBtb2RpZmllZCBzdWJzZXF1ZW50LiAgVGhpcyBpbmNsdWRlcyB1cGRhdGVzL25ldyBpbmZvcm1hdGlvbiBhbmQgY29ycmVjdGlvbnMuXHJcbiAgICovXHJcbiAgQW1lbmRlZDogXCJhbWVuZGVkXCIsXHJcbiAgLyoqXHJcbiAgICogY2FuY2VsbGVkOiBUaGUgb2JzZXJ2YXRpb24gaXMgdW5hdmFpbGFibGUgYmVjYXVzZSB0aGUgbWVhc3VyZW1lbnQgd2FzIG5vdCBzdGFydGVkIG9yIG5vdCBjb21wbGV0ZWQgKGFsc28gc29tZXRpbWVzIGNhbGxlZCBcImFib3J0ZWRcIikuXHJcbiAgICovXHJcbiAgQ2FuY2VsbGVkOiBcImNhbmNlbGxlZFwiLFxyXG4gIC8qKlxyXG4gICAqIGNvcnJlY3RlZDogU3Vic2VxdWVudCB0byBiZWluZyBGaW5hbCwgdGhlIG9ic2VydmF0aW9uIGhhcyBiZWVuIG1vZGlmaWVkIHRvIGNvcnJlY3QgYW4gZXJyb3IgaW4gdGhlIHRlc3QgcmVzdWx0LlxyXG4gICAqL1xyXG4gIENvcnJlY3RlZDogXCJjb3JyZWN0ZWRcIixcclxuICAvKipcclxuICAgKiBlbnRlcmVkLWluLWVycm9yOiBUaGUgb2JzZXJ2YXRpb24gaGFzIGJlZW4gd2l0aGRyYXduIGZvbGxvd2luZyBwcmV2aW91cyBmaW5hbCByZWxlYXNlLiAgVGhpcyBlbGVjdHJvbmljIHJlY29yZCBzaG91bGQgbmV2ZXIgaGF2ZSBleGlzdGVkLCB0aG91Z2ggaXQgaXMgcG9zc2libGUgdGhhdCByZWFsLXdvcmxkIGRlY2lzaW9ucyB3ZXJlIGJhc2VkIG9uIGl0LiAoSWYgcmVhbC13b3JsZCBhY3Rpdml0eSBoYXMgb2NjdXJyZWQsIHRoZSBzdGF0dXMgc2hvdWxkIGJlIFwiY2FuY2VsbGVkXCIgcmF0aGVyIHRoYW4gXCJlbnRlcmVkLWluLWVycm9yXCIuKS5cclxuICAgKi9cclxuICBFbnRlcmVkSW5FcnJvcjogXCJlbnRlcmVkLWluLWVycm9yXCIsXHJcbiAgLyoqXHJcbiAgICogZmluYWw6IFRoZSBvYnNlcnZhdGlvbiBpcyBjb21wbGV0ZSBhbmQgdGhlcmUgYXJlIG5vIGZ1cnRoZXIgYWN0aW9ucyBuZWVkZWQuIEFkZGl0aW9uYWwgaW5mb3JtYXRpb24gc3VjaCBcInJlbGVhc2VkXCIsIFwic2lnbmVkXCIsIGV0YyB3b3VsZCBiZSByZXByZXNlbnRlZCB1c2luZyBbUHJvdmVuYW5jZV0ocHJvdmVuYW5jZS5odG1sKSB3aGljaCBwcm92aWRlcyBub3Qgb25seSB0aGUgYWN0IGJ1dCBhbHNvIHRoZSBhY3RvcnMgYW5kIGRhdGVzIGFuZCBvdGhlciByZWxhdGVkIGRhdGEuIFRoZXNlIGFjdCBzdGF0ZXMgd291bGQgYmUgYXNzb2NpYXRlZCB3aXRoIGFuIG9ic2VydmF0aW9uIHN0YXR1cyBvZiBgcHJlbGltaW5hcnlgIHVudGlsIHRoZXkgYXJlIGFsbCBjb21wbGV0ZWQgYW5kIHRoZW4gYSBzdGF0dXMgb2YgYGZpbmFsYCB3b3VsZCBiZSBhcHBsaWVkLlxyXG4gICAqL1xyXG4gIEZpbmFsOiBcImZpbmFsXCIsXHJcbiAgLyoqXHJcbiAgICogcHJlbGltaW5hcnk6IFRoaXMgaXMgYW4gaW5pdGlhbCBvciBpbnRlcmltIG9ic2VydmF0aW9uOiBkYXRhIG1heSBiZSBpbmNvbXBsZXRlIG9yIHVudmVyaWZpZWQuXHJcbiAgICovXHJcbiAgUHJlbGltaW5hcnk6IFwicHJlbGltaW5hcnlcIixcclxuICAvKipcclxuICAgKiByZWdpc3RlcmVkOiBUaGUgZXhpc3RlbmNlIG9mIHRoZSBvYnNlcnZhdGlvbiBpcyByZWdpc3RlcmVkLCBidXQgdGhlcmUgaXMgbm8gcmVzdWx0IHlldCBhdmFpbGFibGUuXHJcbiAgICovXHJcbiAgUmVnaXN0ZXJlZDogXCJyZWdpc3RlcmVkXCIsXHJcbiAgLyoqXHJcbiAgICogdW5rbm93bjogVGhlIGF1dGhvcmluZy9zb3VyY2Ugc3lzdGVtIGRvZXMgbm90IGtub3cgd2hpY2ggb2YgdGhlIHN0YXR1cyB2YWx1ZXMgY3VycmVudGx5IGFwcGxpZXMgZm9yIHRoaXMgb2JzZXJ2YXRpb24uIE5vdGU6IFRoaXMgY29uY2VwdCBpcyBub3QgdG8gYmUgdXNlZCBmb3IgXCJvdGhlclwiIC0gb25lIG9mIHRoZSBsaXN0ZWQgc3RhdHVzZXMgaXMgcHJlc3VtZWQgdG8gYXBwbHksIGJ1dCB0aGUgYXV0aG9yaW5nL3NvdXJjZSBzeXN0ZW0gZG9lcyBub3Qga25vdyB3aGljaC5cclxuICAgKi9cclxuICBVbmtub3duOiBcInVua25vd25cIixcclxufSBhcyBjb25zdDtcclxuXHJcbi8qKlxyXG4gKiBDb2RlcyBwcm92aWRpbmcgdGhlIHN0YXR1cyBvZiBhbiBvYnNlcnZhdGlvbi5cclxuICovXHJcbmV4cG9ydCB0eXBlIE9ic2VydmF0aW9uU3RhdHVzQ29kZVR5cGUgPSB0eXBlb2YgT2JzZXJ2YXRpb25TdGF0dXNDb2Rlc1trZXlvZiB0eXBlb2YgT2JzZXJ2YXRpb25TdGF0dXNDb2Rlc107XHJcbiJdfQ==