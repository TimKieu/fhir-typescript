// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/http-verb|4.0.1
import { Coding } from '../fhir/Coding.js';
/**
 * HTTP verbs (in the HTTP command line). See [HTTP rfc](https://tools.ietf.org/html/rfc7231) for details.
 */
export const HttpVerbCodings = {
    /**
     * DELETE: HTTP DELETE Command.
     */
    DELETE: new Coding({
        display: "DELETE",
        code: "DELETE",
        system: "http://hl7.org/fhir/http-verb",
    }),
    /**
     * GET: HTTP GET Command.
     */
    GET: new Coding({
        display: "GET",
        code: "GET",
        system: "http://hl7.org/fhir/http-verb",
    }),
    /**
     * HEAD: HTTP HEAD Command.
     */
    HEAD: new Coding({
        display: "HEAD",
        code: "HEAD",
        system: "http://hl7.org/fhir/http-verb",
    }),
    /**
     * PATCH: HTTP PATCH Command.
     */
    PATCH: new Coding({
        display: "PATCH",
        code: "PATCH",
        system: "http://hl7.org/fhir/http-verb",
    }),
    /**
     * POST: HTTP POST Command.
     */
    POST: new Coding({
        display: "POST",
        code: "POST",
        system: "http://hl7.org/fhir/http-verb",
    }),
    /**
     * PUT: HTTP PUT Command.
     */
    PUT: new Coding({
        display: "PUT",
        code: "PUT",
        system: "http://hl7.org/fhir/http-verb",
    }),
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSHR0cFZlcmJDb2RpbmdzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9IdHRwVmVyYkNvZGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLCtDQUErQztBQUMvQyxrQ0FBa0M7QUFDbEMsOERBQThEO0FBRTlELE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQTtBQUUxQzs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLGVBQWUsR0FBRztJQUM3Qjs7T0FFRztJQUNILE1BQU0sRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUNqQixPQUFPLEVBQUUsUUFBUTtRQUNqQixJQUFJLEVBQUUsUUFBUTtRQUNkLE1BQU0sRUFBRSwrQkFBK0I7S0FDeEMsQ0FBQztJQUNGOztPQUVHO0lBQ0gsR0FBRyxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ2QsT0FBTyxFQUFFLEtBQUs7UUFDZCxJQUFJLEVBQUUsS0FBSztRQUNYLE1BQU0sRUFBRSwrQkFBK0I7S0FDeEMsQ0FBQztJQUNGOztPQUVHO0lBQ0gsSUFBSSxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ2YsT0FBTyxFQUFFLE1BQU07UUFDZixJQUFJLEVBQUUsTUFBTTtRQUNaLE1BQU0sRUFBRSwrQkFBK0I7S0FDeEMsQ0FBQztJQUNGOztPQUVHO0lBQ0gsS0FBSyxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ2hCLE9BQU8sRUFBRSxPQUFPO1FBQ2hCLElBQUksRUFBRSxPQUFPO1FBQ2IsTUFBTSxFQUFFLCtCQUErQjtLQUN4QyxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxJQUFJLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDZixPQUFPLEVBQUUsTUFBTTtRQUNmLElBQUksRUFBRSxNQUFNO1FBQ1osTUFBTSxFQUFFLCtCQUErQjtLQUN4QyxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxHQUFHLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDZCxPQUFPLEVBQUUsS0FBSztRQUNkLElBQUksRUFBRSxLQUFLO1FBQ1gsTUFBTSxFQUFFLCtCQUErQjtLQUN4QyxDQUFDO0NBQ00sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNC5jb3JlIHZlcnNpb246IDQuMC4xXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9odHRwLXZlcmJ8NC4wLjFcclxuXHJcbmltcG9ydCB7IENvZGluZyB9IGZyb20gJy4uL2ZoaXIvQ29kaW5nLmpzJ1xyXG5cclxuLyoqXHJcbiAqIEhUVFAgdmVyYnMgKGluIHRoZSBIVFRQIGNvbW1hbmQgbGluZSkuIFNlZSBbSFRUUCByZmNdKGh0dHBzOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9yZmM3MjMxKSBmb3IgZGV0YWlscy5cclxuICovXHJcbmV4cG9ydCBjb25zdCBIdHRwVmVyYkNvZGluZ3MgPSB7XHJcbiAgLyoqXHJcbiAgICogREVMRVRFOiBIVFRQIERFTEVURSBDb21tYW5kLlxyXG4gICAqL1xyXG4gIERFTEVURTogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIkRFTEVURVwiLFxyXG4gICAgY29kZTogXCJERUxFVEVcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2h0dHAtdmVyYlwiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIEdFVDogSFRUUCBHRVQgQ29tbWFuZC5cclxuICAgKi9cclxuICBHRVQ6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJHRVRcIixcclxuICAgIGNvZGU6IFwiR0VUXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9odHRwLXZlcmJcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBIRUFEOiBIVFRQIEhFQUQgQ29tbWFuZC5cclxuICAgKi9cclxuICBIRUFEOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiSEVBRFwiLFxyXG4gICAgY29kZTogXCJIRUFEXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9odHRwLXZlcmJcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBQQVRDSDogSFRUUCBQQVRDSCBDb21tYW5kLlxyXG4gICAqL1xyXG4gIFBBVENIOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiUEFUQ0hcIixcclxuICAgIGNvZGU6IFwiUEFUQ0hcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2h0dHAtdmVyYlwiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIFBPU1Q6IEhUVFAgUE9TVCBDb21tYW5kLlxyXG4gICAqL1xyXG4gIFBPU1Q6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJQT1NUXCIsXHJcbiAgICBjb2RlOiBcIlBPU1RcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2h0dHAtdmVyYlwiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIFBVVDogSFRUUCBQVVQgQ29tbWFuZC5cclxuICAgKi9cclxuICBQVVQ6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJQVVRcIixcclxuICAgIGNvZGU6IFwiUFVUXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9odHRwLXZlcmJcIixcclxuICB9KSxcclxufSBhcyBjb25zdDtcclxuXHJcbi8qKlxyXG4gKiBIVFRQIHZlcmJzIChpbiB0aGUgSFRUUCBjb21tYW5kIGxpbmUpLiBTZWUgW0hUVFAgcmZjXShodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjNzIzMSkgZm9yIGRldGFpbHMuXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBIdHRwVmVyYkNvZGluZ1R5cGUgPSB0eXBlb2YgSHR0cFZlcmJDb2RpbmdzO1xyXG4iXX0=