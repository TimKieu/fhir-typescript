// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/encounter-type|4.0.1
import { Coding } from '../fhir/Coding.js';
/**
 * This example value set defines a set of codes that can be used to indicate the type of encounter: a specific code indicating type of service provided.
 */
export const EncounterTypeCodings = {
    /**
     * Code: ADMS
     */
    AnnualDiabetesMellitusScreening: new Coding({
        display: "Annual diabetes mellitus screening",
        code: "ADMS",
        system: "http://terminology.hl7.org/CodeSystem/encounter-type",
    }),
    /**
     * Code: BD/BM-clin
     */
    BoneDrillingBoneMarrowPunctionInClinic: new Coding({
        display: "Bone drilling/bone marrow punction in clinic",
        code: "BD/BM-clin",
        system: "http://terminology.hl7.org/CodeSystem/encounter-type",
    }),
    /**
     * Code: CCS60
     */
    InfantColonScreening60Minutes: new Coding({
        display: "Infant colon screening - 60 minutes",
        code: "CCS60",
        system: "http://terminology.hl7.org/CodeSystem/encounter-type",
    }),
    /**
     * Code: OKI
     */
    OutpatientKenacortInjection: new Coding({
        display: "Outpatient Kenacort injection",
        code: "OKI",
        system: "http://terminology.hl7.org/CodeSystem/encounter-type",
    }),
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRW5jb3VudGVyVHlwZUNvZGluZ3MuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL0VuY291bnRlclR5cGVDb2RpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQiwrQ0FBK0M7QUFDL0Msa0NBQWtDO0FBQ2xDLG1FQUFtRTtBQUVuRSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sbUJBQW1CLENBQUE7QUFFMUM7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxvQkFBb0IsR0FBRztJQUNsQzs7T0FFRztJQUNILCtCQUErQixFQUFFLElBQUksTUFBTSxDQUFDO1FBQzFDLE9BQU8sRUFBRSxvQ0FBb0M7UUFDN0MsSUFBSSxFQUFFLE1BQU07UUFDWixNQUFNLEVBQUUsc0RBQXNEO0tBQy9ELENBQUM7SUFDRjs7T0FFRztJQUNILHNDQUFzQyxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ2pELE9BQU8sRUFBRSw4Q0FBOEM7UUFDdkQsSUFBSSxFQUFFLFlBQVk7UUFDbEIsTUFBTSxFQUFFLHNEQUFzRDtLQUMvRCxDQUFDO0lBQ0Y7O09BRUc7SUFDSCw2QkFBNkIsRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUN4QyxPQUFPLEVBQUUscUNBQXFDO1FBQzlDLElBQUksRUFBRSxPQUFPO1FBQ2IsTUFBTSxFQUFFLHNEQUFzRDtLQUMvRCxDQUFDO0lBQ0Y7O09BRUc7SUFDSCwyQkFBMkIsRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUN0QyxPQUFPLEVBQUUsK0JBQStCO1FBQ3hDLElBQUksRUFBRSxLQUFLO1FBQ1gsTUFBTSxFQUFFLHNEQUFzRDtLQUMvRCxDQUFDO0NBQ00sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNC5jb3JlIHZlcnNpb246IDQuMC4xXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9lbmNvdW50ZXItdHlwZXw0LjAuMVxyXG5cclxuaW1wb3J0IHsgQ29kaW5nIH0gZnJvbSAnLi4vZmhpci9Db2RpbmcuanMnXHJcblxyXG4vKipcclxuICogVGhpcyBleGFtcGxlIHZhbHVlIHNldCBkZWZpbmVzIGEgc2V0IG9mIGNvZGVzIHRoYXQgY2FuIGJlIHVzZWQgdG8gaW5kaWNhdGUgdGhlIHR5cGUgb2YgZW5jb3VudGVyOiBhIHNwZWNpZmljIGNvZGUgaW5kaWNhdGluZyB0eXBlIG9mIHNlcnZpY2UgcHJvdmlkZWQuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgRW5jb3VudGVyVHlwZUNvZGluZ3MgPSB7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogQURNU1xyXG4gICAqL1xyXG4gIEFubnVhbERpYWJldGVzTWVsbGl0dXNTY3JlZW5pbmc6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJBbm51YWwgZGlhYmV0ZXMgbWVsbGl0dXMgc2NyZWVuaW5nXCIsXHJcbiAgICBjb2RlOiBcIkFETVNcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2VuY291bnRlci10eXBlXCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogQ29kZTogQkQvQk0tY2xpblxyXG4gICAqL1xyXG4gIEJvbmVEcmlsbGluZ0JvbmVNYXJyb3dQdW5jdGlvbkluQ2xpbmljOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiQm9uZSBkcmlsbGluZy9ib25lIG1hcnJvdyBwdW5jdGlvbiBpbiBjbGluaWNcIixcclxuICAgIGNvZGU6IFwiQkQvQk0tY2xpblwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vZW5jb3VudGVyLXR5cGVcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBDb2RlOiBDQ1M2MFxyXG4gICAqL1xyXG4gIEluZmFudENvbG9uU2NyZWVuaW5nNjBNaW51dGVzOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiSW5mYW50IGNvbG9uIHNjcmVlbmluZyAtIDYwIG1pbnV0ZXNcIixcclxuICAgIGNvZGU6IFwiQ0NTNjBcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2VuY291bnRlci10eXBlXCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogQ29kZTogT0tJXHJcbiAgICovXHJcbiAgT3V0cGF0aWVudEtlbmFjb3J0SW5qZWN0aW9uOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiT3V0cGF0aWVudCBLZW5hY29ydCBpbmplY3Rpb25cIixcclxuICAgIGNvZGU6IFwiT0tJXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9lbmNvdW50ZXItdHlwZVwiLFxyXG4gIH0pLFxyXG59IGFzIGNvbnN0O1xyXG5cclxuLyoqXHJcbiAqIFRoaXMgZXhhbXBsZSB2YWx1ZSBzZXQgZGVmaW5lcyBhIHNldCBvZiBjb2RlcyB0aGF0IGNhbiBiZSB1c2VkIHRvIGluZGljYXRlIHRoZSB0eXBlIG9mIGVuY291bnRlcjogYSBzcGVjaWZpYyBjb2RlIGluZGljYXRpbmcgdHlwZSBvZiBzZXJ2aWNlIHByb3ZpZGVkLlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgRW5jb3VudGVyVHlwZUNvZGluZ1R5cGUgPSB0eXBlb2YgRW5jb3VudGVyVHlwZUNvZGluZ3M7XHJcbiJdfQ==