{"version":3,"file":"SpecimenContainedPreferenceCodings.js","sources":["../../src/fhirValueSets/SpecimenContainedPreferenceCodings.ts"],"sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4.core version: 4.0.1\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR ValueSet: http://hl7.org/fhir/ValueSet/specimen-contained-preference|4.0.1\r\n\r\nimport { Coding } from '../fhir/Coding.js'\r\n\r\n/**\r\n * Degree of preference of a type of conditioned specimen.\r\n */\r\nexport const SpecimenContainedPreferenceCodings = {\r\n  /**\r\n   * alternate: This type of conditioned specimen is an alternate.\r\n   */\r\n  Alternate: new Coding({\r\n    display: \"Alternate\",\r\n    code: \"alternate\",\r\n    system: \"http://hl7.org/fhir/specimen-contained-preference\",\r\n  }),\r\n  /**\r\n   * preferred: This type of contained specimen is preferred to collect this kind of specimen.\r\n   */\r\n  Preferred: new Coding({\r\n    display: \"Preferred\",\r\n    code: \"preferred\",\r\n    system: \"http://hl7.org/fhir/specimen-contained-preference\",\r\n  }),\r\n} as const;\r\n\r\n/**\r\n * Degree of preference of a type of conditioned specimen.\r\n */\r\nexport type SpecimenContainedPreferenceCodingType = typeof SpecimenContainedPreferenceCodings;\r\n"],"names":[],"mappings":";;;;AAAA;AAOA;;AAEG;AACU,IAAA,kCAAkC,GAAG;AAChD;;AAEG;IACH,SAAS,EAAE,IAAI,MAAM,CAAC;AACpB,QAAA,OAAO,EAAE,WAAW;AACpB,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,MAAM,EAAE,mDAAmD;KAC5D,CAAC;AACF;;AAEG;IACH,SAAS,EAAE,IAAI,MAAM,CAAC;AACpB,QAAA,OAAO,EAAE,WAAW;AACpB,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,MAAM,EAAE,mDAAmD;KAC5D,CAAC;;;;;"}