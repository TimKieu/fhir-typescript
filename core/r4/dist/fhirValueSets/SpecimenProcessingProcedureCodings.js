// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/specimen-processing-procedure|4.0.1
/**
 * The technique that is used to perform the process or preserve the specimen.
 */
export const SpecimenProcessingProcedureCodings = {
    /**
     * Code: ACID
     */
    Acidification: {
        display: "Acidification",
        code: "ACID",
        system: "http://terminology.hl7.org/CodeSystem/v2-0373",
    },
    /**
     * Code: ALK
     */
    Alkalization: {
        display: "Alkalization",
        code: "ALK",
        system: "http://terminology.hl7.org/CodeSystem/v2-0373",
    },
    /**
     * Code: DEFB
     */
    Defibrination: {
        display: "Defibrination",
        code: "DEFB",
        system: "http://terminology.hl7.org/CodeSystem/v2-0373",
    },
    /**
     * Code: FILT
     */
    Filtration: {
        display: "Filtration",
        code: "FILT",
        system: "http://terminology.hl7.org/CodeSystem/v2-0373",
    },
    /**
     * Code: LDLP
     */
    LDLPrecipitation: {
        display: "LDL Precipitation",
        code: "LDLP",
        system: "http://terminology.hl7.org/CodeSystem/v2-0373",
    },
    /**
     * Code: NEUT
     */
    Neutralization: {
        display: "Neutralization",
        code: "NEUT",
        system: "http://terminology.hl7.org/CodeSystem/v2-0373",
    },
    /**
     * Code: RECA
     */
    Recalification: {
        display: "Recalification",
        code: "RECA",
        system: "http://terminology.hl7.org/CodeSystem/v2-0373",
    },
    /**
     * Code: UFIL
     */
    Ultrafiltration: {
        display: "Ultrafiltration",
        code: "UFIL",
        system: "http://terminology.hl7.org/CodeSystem/v2-0373",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3BlY2ltZW5Qcm9jZXNzaW5nUHJvY2VkdXJlQ29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvU3BlY2ltZW5Qcm9jZXNzaW5nUHJvY2VkdXJlQ29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyxrRkFBa0Y7QUEwQ2xGOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sa0NBQWtDLEdBQXlDO0lBQ3RGOztPQUVHO0lBQ0gsYUFBYSxFQUFFO1FBQ2IsT0FBTyxFQUFFLGVBQWU7UUFDeEIsSUFBSSxFQUFFLE1BQU07UUFDWixNQUFNLEVBQUUsK0NBQStDO0tBQ3hEO0lBQ0Q7O09BRUc7SUFDSCxZQUFZLEVBQUU7UUFDWixPQUFPLEVBQUUsY0FBYztRQUN2QixJQUFJLEVBQUUsS0FBSztRQUNYLE1BQU0sRUFBRSwrQ0FBK0M7S0FDeEQ7SUFDRDs7T0FFRztJQUNILGFBQWEsRUFBRTtRQUNiLE9BQU8sRUFBRSxlQUFlO1FBQ3hCLElBQUksRUFBRSxNQUFNO1FBQ1osTUFBTSxFQUFFLCtDQUErQztLQUN4RDtJQUNEOztPQUVHO0lBQ0gsVUFBVSxFQUFFO1FBQ1YsT0FBTyxFQUFFLFlBQVk7UUFDckIsSUFBSSxFQUFFLE1BQU07UUFDWixNQUFNLEVBQUUsK0NBQStDO0tBQ3hEO0lBQ0Q7O09BRUc7SUFDSCxnQkFBZ0IsRUFBRTtRQUNoQixPQUFPLEVBQUUsbUJBQW1CO1FBQzVCLElBQUksRUFBRSxNQUFNO1FBQ1osTUFBTSxFQUFFLCtDQUErQztLQUN4RDtJQUNEOztPQUVHO0lBQ0gsY0FBYyxFQUFFO1FBQ2QsT0FBTyxFQUFFLGdCQUFnQjtRQUN6QixJQUFJLEVBQUUsTUFBTTtRQUNaLE1BQU0sRUFBRSwrQ0FBK0M7S0FDeEQ7SUFDRDs7T0FFRztJQUNILGNBQWMsRUFBRTtRQUNkLE9BQU8sRUFBRSxnQkFBZ0I7UUFDekIsSUFBSSxFQUFFLE1BQU07UUFDWixNQUFNLEVBQUUsK0NBQStDO0tBQ3hEO0lBQ0Q7O09BRUc7SUFDSCxlQUFlLEVBQUU7UUFDZixPQUFPLEVBQUUsaUJBQWlCO1FBQzFCLElBQUksRUFBRSxNQUFNO1FBQ1osTUFBTSxFQUFFLCtDQUErQztLQUN4RDtDQUNPLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjQuY29yZSB2ZXJzaW9uOiA0LjAuMVxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvc3BlY2ltZW4tcHJvY2Vzc2luZy1wcm9jZWR1cmV8NC4wLjFcclxuXHJcbmltcG9ydCB7IENvZGluZ0FyZ3MgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiBUaGUgdGVjaG5pcXVlIHRoYXQgaXMgdXNlZCB0byBwZXJmb3JtIHRoZSBwcm9jZXNzIG9yIHByZXNlcnZlIHRoZSBzcGVjaW1lbi5cclxuICovXHJcbmV4cG9ydCB0eXBlIFNwZWNpbWVuUHJvY2Vzc2luZ1Byb2NlZHVyZUNvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogQUNJRFxyXG4gICAqL1xyXG4gIEFjaWRpZmljYXRpb246IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogQUxLXHJcbiAgICovXHJcbiAgQWxrYWxpemF0aW9uOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IERFRkJcclxuICAgKi9cclxuICBEZWZpYnJpbmF0aW9uOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IEZJTFRcclxuICAgKi9cclxuICBGaWx0cmF0aW9uOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IExETFBcclxuICAgKi9cclxuICBMRExQcmVjaXBpdGF0aW9uOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IE5FVVRcclxuICAgKi9cclxuICBOZXV0cmFsaXphdGlvbjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiBSRUNBXHJcbiAgICovXHJcbiAgUmVjYWxpZmljYXRpb246IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogVUZJTFxyXG4gICAqL1xyXG4gIFVsdHJhZmlsdHJhdGlvbjogQ29kaW5nQXJncztcclxufVxyXG5cclxuLyoqXHJcbiAqIFRoZSB0ZWNobmlxdWUgdGhhdCBpcyB1c2VkIHRvIHBlcmZvcm0gdGhlIHByb2Nlc3Mgb3IgcHJlc2VydmUgdGhlIHNwZWNpbWVuLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IFNwZWNpbWVuUHJvY2Vzc2luZ1Byb2NlZHVyZUNvZGluZ3M6U3BlY2ltZW5Qcm9jZXNzaW5nUHJvY2VkdXJlQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBDb2RlOiBBQ0lEXHJcbiAgICovXHJcbiAgQWNpZGlmaWNhdGlvbjoge1xyXG4gICAgZGlzcGxheTogXCJBY2lkaWZpY2F0aW9uXCIsXHJcbiAgICBjb2RlOiBcIkFDSURcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL3YyLTAzNzNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IEFMS1xyXG4gICAqL1xyXG4gIEFsa2FsaXphdGlvbjoge1xyXG4gICAgZGlzcGxheTogXCJBbGthbGl6YXRpb25cIixcclxuICAgIGNvZGU6IFwiQUxLXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS92Mi0wMzczXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiBERUZCXHJcbiAgICovXHJcbiAgRGVmaWJyaW5hdGlvbjoge1xyXG4gICAgZGlzcGxheTogXCJEZWZpYnJpbmF0aW9uXCIsXHJcbiAgICBjb2RlOiBcIkRFRkJcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL3YyLTAzNzNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IEZJTFRcclxuICAgKi9cclxuICBGaWx0cmF0aW9uOiB7XHJcbiAgICBkaXNwbGF5OiBcIkZpbHRyYXRpb25cIixcclxuICAgIGNvZGU6IFwiRklMVFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vdjItMDM3M1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogTERMUFxyXG4gICAqL1xyXG4gIExETFByZWNpcGl0YXRpb246IHtcclxuICAgIGRpc3BsYXk6IFwiTERMIFByZWNpcGl0YXRpb25cIixcclxuICAgIGNvZGU6IFwiTERMUFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vdjItMDM3M1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogTkVVVFxyXG4gICAqL1xyXG4gIE5ldXRyYWxpemF0aW9uOiB7XHJcbiAgICBkaXNwbGF5OiBcIk5ldXRyYWxpemF0aW9uXCIsXHJcbiAgICBjb2RlOiBcIk5FVVRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL3YyLTAzNzNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IFJFQ0FcclxuICAgKi9cclxuICBSZWNhbGlmaWNhdGlvbjoge1xyXG4gICAgZGlzcGxheTogXCJSZWNhbGlmaWNhdGlvblwiLFxyXG4gICAgY29kZTogXCJSRUNBXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS92Mi0wMzczXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiBVRklMXHJcbiAgICovXHJcbiAgVWx0cmFmaWx0cmF0aW9uOiB7XHJcbiAgICBkaXNwbGF5OiBcIlVsdHJhZmlsdHJhdGlvblwiLFxyXG4gICAgY29kZTogXCJVRklMXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS92Mi0wMzczXCIsXHJcbiAgfSxcclxufSBhcyBjb25zdDtcclxuIl19