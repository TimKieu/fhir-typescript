// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/participationstatus|4.0.1
import { Coding } from '../fhir/Coding.js';
/**
 * The Participation status of an appointment.
 */
export const ParticipationstatusCodings = {
    /**
     * accepted: The participant has accepted the appointment.
     */
    Accepted: new Coding({
        display: "Accepted",
        code: "accepted",
        system: "http://hl7.org/fhir/participationstatus",
    }),
    /**
     * declined: The participant has declined the appointment and will not participate in the appointment.
     */
    Declined: new Coding({
        display: "Declined",
        code: "declined",
        system: "http://hl7.org/fhir/participationstatus",
    }),
    /**
     * needs-action: The participant needs to indicate if they accept the appointment by changing this status to one of the other statuses.
     */
    NeedsAction: new Coding({
        display: "Needs Action",
        code: "needs-action",
        system: "http://hl7.org/fhir/participationstatus",
    }),
    /**
     * tentative: The participant has  tentatively accepted the appointment. This could be automatically created by a system and requires further processing before it can be accepted. There is no commitment that attendance will occur.
     */
    Tentative: new Coding({
        display: "Tentative",
        code: "tentative",
        system: "http://hl7.org/fhir/participationstatus",
    }),
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUGFydGljaXBhdGlvbnN0YXR1c0NvZGluZ3MuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL1BhcnRpY2lwYXRpb25zdGF0dXNDb2RpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQiwrQ0FBK0M7QUFDL0Msa0NBQWtDO0FBQ2xDLHdFQUF3RTtBQUV4RSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sbUJBQW1CLENBQUE7QUFFMUM7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSwwQkFBMEIsR0FBRztJQUN4Qzs7T0FFRztJQUNILFFBQVEsRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUNuQixPQUFPLEVBQUUsVUFBVTtRQUNuQixJQUFJLEVBQUUsVUFBVTtRQUNoQixNQUFNLEVBQUUseUNBQXlDO0tBQ2xELENBQUM7SUFDRjs7T0FFRztJQUNILFFBQVEsRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUNuQixPQUFPLEVBQUUsVUFBVTtRQUNuQixJQUFJLEVBQUUsVUFBVTtRQUNoQixNQUFNLEVBQUUseUNBQXlDO0tBQ2xELENBQUM7SUFDRjs7T0FFRztJQUNILFdBQVcsRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUN0QixPQUFPLEVBQUUsY0FBYztRQUN2QixJQUFJLEVBQUUsY0FBYztRQUNwQixNQUFNLEVBQUUseUNBQXlDO0tBQ2xELENBQUM7SUFDRjs7T0FFRztJQUNILFNBQVMsRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUNwQixPQUFPLEVBQUUsV0FBVztRQUNwQixJQUFJLEVBQUUsV0FBVztRQUNqQixNQUFNLEVBQUUseUNBQXlDO0tBQ2xELENBQUM7Q0FDTSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0LmNvcmUgdmVyc2lvbjogNC4wLjFcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L3BhcnRpY2lwYXRpb25zdGF0dXN8NC4wLjFcclxuXHJcbmltcG9ydCB7IENvZGluZyB9IGZyb20gJy4uL2ZoaXIvQ29kaW5nLmpzJ1xyXG5cclxuLyoqXHJcbiAqIFRoZSBQYXJ0aWNpcGF0aW9uIHN0YXR1cyBvZiBhbiBhcHBvaW50bWVudC5cclxuICovXHJcbmV4cG9ydCBjb25zdCBQYXJ0aWNpcGF0aW9uc3RhdHVzQ29kaW5ncyA9IHtcclxuICAvKipcclxuICAgKiBhY2NlcHRlZDogVGhlIHBhcnRpY2lwYW50IGhhcyBhY2NlcHRlZCB0aGUgYXBwb2ludG1lbnQuXHJcbiAgICovXHJcbiAgQWNjZXB0ZWQ6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJBY2NlcHRlZFwiLFxyXG4gICAgY29kZTogXCJhY2NlcHRlZFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcGFydGljaXBhdGlvbnN0YXR1c1wiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIGRlY2xpbmVkOiBUaGUgcGFydGljaXBhbnQgaGFzIGRlY2xpbmVkIHRoZSBhcHBvaW50bWVudCBhbmQgd2lsbCBub3QgcGFydGljaXBhdGUgaW4gdGhlIGFwcG9pbnRtZW50LlxyXG4gICAqL1xyXG4gIERlY2xpbmVkOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiRGVjbGluZWRcIixcclxuICAgIGNvZGU6IFwiZGVjbGluZWRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3BhcnRpY2lwYXRpb25zdGF0dXNcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBuZWVkcy1hY3Rpb246IFRoZSBwYXJ0aWNpcGFudCBuZWVkcyB0byBpbmRpY2F0ZSBpZiB0aGV5IGFjY2VwdCB0aGUgYXBwb2ludG1lbnQgYnkgY2hhbmdpbmcgdGhpcyBzdGF0dXMgdG8gb25lIG9mIHRoZSBvdGhlciBzdGF0dXNlcy5cclxuICAgKi9cclxuICBOZWVkc0FjdGlvbjogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIk5lZWRzIEFjdGlvblwiLFxyXG4gICAgY29kZTogXCJuZWVkcy1hY3Rpb25cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3BhcnRpY2lwYXRpb25zdGF0dXNcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiB0ZW50YXRpdmU6IFRoZSBwYXJ0aWNpcGFudCBoYXMgIHRlbnRhdGl2ZWx5IGFjY2VwdGVkIHRoZSBhcHBvaW50bWVudC4gVGhpcyBjb3VsZCBiZSBhdXRvbWF0aWNhbGx5IGNyZWF0ZWQgYnkgYSBzeXN0ZW0gYW5kIHJlcXVpcmVzIGZ1cnRoZXIgcHJvY2Vzc2luZyBiZWZvcmUgaXQgY2FuIGJlIGFjY2VwdGVkLiBUaGVyZSBpcyBubyBjb21taXRtZW50IHRoYXQgYXR0ZW5kYW5jZSB3aWxsIG9jY3VyLlxyXG4gICAqL1xyXG4gIFRlbnRhdGl2ZTogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIlRlbnRhdGl2ZVwiLFxyXG4gICAgY29kZTogXCJ0ZW50YXRpdmVcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3BhcnRpY2lwYXRpb25zdGF0dXNcIixcclxuICB9KSxcclxufSBhcyBjb25zdDtcclxuXHJcbi8qKlxyXG4gKiBUaGUgUGFydGljaXBhdGlvbiBzdGF0dXMgb2YgYW4gYXBwb2ludG1lbnQuXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBQYXJ0aWNpcGF0aW9uc3RhdHVzQ29kaW5nVHlwZSA9IHR5cGVvZiBQYXJ0aWNpcGF0aW9uc3RhdHVzQ29kaW5ncztcclxuIl19