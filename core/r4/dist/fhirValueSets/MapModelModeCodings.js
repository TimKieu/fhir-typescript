// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/map-model-mode|4.0.1
import { Coding } from '../fhir/Coding.js';
/**
 * How the referenced structure is used in this mapping.
 */
export const MapModelModeCodings = {
    /**
     * produced: This structure describes an instance that the mapping engine may ask to create that is used a target of data.
     */
    ProducedStructureDefinition: new Coding({
        display: "Produced Structure Definition",
        code: "produced",
        system: "http://hl7.org/fhir/map-model-mode",
    }),
    /**
     * queried: This structure describes an instance that the mapping engine may ask for that is used a source of data.
     */
    QueriedStructureDefinition: new Coding({
        display: "Queried Structure Definition",
        code: "queried",
        system: "http://hl7.org/fhir/map-model-mode",
    }),
    /**
     * source: This structure describes an instance passed to the mapping engine that is used a source of data.
     */
    SourceStructureDefinition: new Coding({
        display: "Source Structure Definition",
        code: "source",
        system: "http://hl7.org/fhir/map-model-mode",
    }),
    /**
     * target: This structure describes an instance passed to the mapping engine that is used a target of data.
     */
    TargetStructureDefinition: new Coding({
        display: "Target Structure Definition",
        code: "target",
        system: "http://hl7.org/fhir/map-model-mode",
    }),
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWFwTW9kZWxNb2RlQ29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvTWFwTW9kZWxNb2RlQ29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyxtRUFBbUU7QUFFbkUsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLG1CQUFtQixDQUFBO0FBRTFDOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sbUJBQW1CLEdBQUc7SUFDakM7O09BRUc7SUFDSCwyQkFBMkIsRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUN0QyxPQUFPLEVBQUUsK0JBQStCO1FBQ3hDLElBQUksRUFBRSxVQUFVO1FBQ2hCLE1BQU0sRUFBRSxvQ0FBb0M7S0FDN0MsQ0FBQztJQUNGOztPQUVHO0lBQ0gsMEJBQTBCLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDckMsT0FBTyxFQUFFLDhCQUE4QjtRQUN2QyxJQUFJLEVBQUUsU0FBUztRQUNmLE1BQU0sRUFBRSxvQ0FBb0M7S0FDN0MsQ0FBQztJQUNGOztPQUVHO0lBQ0gseUJBQXlCLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDcEMsT0FBTyxFQUFFLDZCQUE2QjtRQUN0QyxJQUFJLEVBQUUsUUFBUTtRQUNkLE1BQU0sRUFBRSxvQ0FBb0M7S0FDN0MsQ0FBQztJQUNGOztPQUVHO0lBQ0gseUJBQXlCLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDcEMsT0FBTyxFQUFFLDZCQUE2QjtRQUN0QyxJQUFJLEVBQUUsUUFBUTtRQUNkLE1BQU0sRUFBRSxvQ0FBb0M7S0FDN0MsQ0FBQztDQUNNLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjQuY29yZSB2ZXJzaW9uOiA0LjAuMVxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvbWFwLW1vZGVsLW1vZGV8NC4wLjFcclxuXHJcbmltcG9ydCB7IENvZGluZyB9IGZyb20gJy4uL2ZoaXIvQ29kaW5nLmpzJ1xyXG5cclxuLyoqXHJcbiAqIEhvdyB0aGUgcmVmZXJlbmNlZCBzdHJ1Y3R1cmUgaXMgdXNlZCBpbiB0aGlzIG1hcHBpbmcuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgTWFwTW9kZWxNb2RlQ29kaW5ncyA9IHtcclxuICAvKipcclxuICAgKiBwcm9kdWNlZDogVGhpcyBzdHJ1Y3R1cmUgZGVzY3JpYmVzIGFuIGluc3RhbmNlIHRoYXQgdGhlIG1hcHBpbmcgZW5naW5lIG1heSBhc2sgdG8gY3JlYXRlIHRoYXQgaXMgdXNlZCBhIHRhcmdldCBvZiBkYXRhLlxyXG4gICAqL1xyXG4gIFByb2R1Y2VkU3RydWN0dXJlRGVmaW5pdGlvbjogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIlByb2R1Y2VkIFN0cnVjdHVyZSBEZWZpbml0aW9uXCIsXHJcbiAgICBjb2RlOiBcInByb2R1Y2VkXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9tYXAtbW9kZWwtbW9kZVwiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIHF1ZXJpZWQ6IFRoaXMgc3RydWN0dXJlIGRlc2NyaWJlcyBhbiBpbnN0YW5jZSB0aGF0IHRoZSBtYXBwaW5nIGVuZ2luZSBtYXkgYXNrIGZvciB0aGF0IGlzIHVzZWQgYSBzb3VyY2Ugb2YgZGF0YS5cclxuICAgKi9cclxuICBRdWVyaWVkU3RydWN0dXJlRGVmaW5pdGlvbjogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIlF1ZXJpZWQgU3RydWN0dXJlIERlZmluaXRpb25cIixcclxuICAgIGNvZGU6IFwicXVlcmllZFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvbWFwLW1vZGVsLW1vZGVcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBzb3VyY2U6IFRoaXMgc3RydWN0dXJlIGRlc2NyaWJlcyBhbiBpbnN0YW5jZSBwYXNzZWQgdG8gdGhlIG1hcHBpbmcgZW5naW5lIHRoYXQgaXMgdXNlZCBhIHNvdXJjZSBvZiBkYXRhLlxyXG4gICAqL1xyXG4gIFNvdXJjZVN0cnVjdHVyZURlZmluaXRpb246IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJTb3VyY2UgU3RydWN0dXJlIERlZmluaXRpb25cIixcclxuICAgIGNvZGU6IFwic291cmNlXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9tYXAtbW9kZWwtbW9kZVwiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIHRhcmdldDogVGhpcyBzdHJ1Y3R1cmUgZGVzY3JpYmVzIGFuIGluc3RhbmNlIHBhc3NlZCB0byB0aGUgbWFwcGluZyBlbmdpbmUgdGhhdCBpcyB1c2VkIGEgdGFyZ2V0IG9mIGRhdGEuXHJcbiAgICovXHJcbiAgVGFyZ2V0U3RydWN0dXJlRGVmaW5pdGlvbjogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIlRhcmdldCBTdHJ1Y3R1cmUgRGVmaW5pdGlvblwiLFxyXG4gICAgY29kZTogXCJ0YXJnZXRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL21hcC1tb2RlbC1tb2RlXCIsXHJcbiAgfSksXHJcbn0gYXMgY29uc3Q7XHJcblxyXG4vKipcclxuICogSG93IHRoZSByZWZlcmVuY2VkIHN0cnVjdHVyZSBpcyB1c2VkIGluIHRoaXMgbWFwcGluZy5cclxuICovXHJcbmV4cG9ydCB0eXBlIE1hcE1vZGVsTW9kZUNvZGluZ1R5cGUgPSB0eXBlb2YgTWFwTW9kZWxNb2RlQ29kaW5ncztcclxuIl19