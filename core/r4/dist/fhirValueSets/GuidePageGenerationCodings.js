// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/guide-page-generation|4.0.1
/**
 * A code that indicates how the page is generated.
 */
export const GuidePageGenerationCodings = {
    /**
     * generated: Page will be generated by the publication process - no source to bring across.
     */
    Generated: {
        display: "Generated",
        code: "generated",
        system: "http://hl7.org/fhir/guide-page-generation",
    },
    /**
     * html: Page is proper xhtml with no templating.  Will be brought across unchanged for standard post-processing.
     */
    HTML: {
        display: "HTML",
        code: "html",
        system: "http://hl7.org/fhir/guide-page-generation",
    },
    /**
     * markdown: Page is markdown with templating.  Will use the template to create a file that imports the markdown file prior to post-processing.
     */
    Markdown: {
        display: "Markdown",
        code: "markdown",
        system: "http://hl7.org/fhir/guide-page-generation",
    },
    /**
     * xml: Page is xml with templating.  Will use the template to create a file that imports the source file and run the nominated XSLT transform (see parameters) if present prior to post-processing.
     */
    XML: {
        display: "XML",
        code: "xml",
        system: "http://hl7.org/fhir/guide-page-generation",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR3VpZGVQYWdlR2VuZXJhdGlvbkNvZGluZ3MuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL0d1aWRlUGFnZUdlbmVyYXRpb25Db2RpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQiwrQ0FBK0M7QUFDL0Msa0NBQWtDO0FBQ2xDLDBFQUEwRTtBQTBCMUU7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSwwQkFBMEIsR0FBaUM7SUFDdEU7O09BRUc7SUFDSCxTQUFTLEVBQUU7UUFDVCxPQUFPLEVBQUUsV0FBVztRQUNwQixJQUFJLEVBQUUsV0FBVztRQUNqQixNQUFNLEVBQUUsMkNBQTJDO0tBQ3BEO0lBQ0Q7O09BRUc7SUFDSCxJQUFJLEVBQUU7UUFDSixPQUFPLEVBQUUsTUFBTTtRQUNmLElBQUksRUFBRSxNQUFNO1FBQ1osTUFBTSxFQUFFLDJDQUEyQztLQUNwRDtJQUNEOztPQUVHO0lBQ0gsUUFBUSxFQUFFO1FBQ1IsT0FBTyxFQUFFLFVBQVU7UUFDbkIsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLDJDQUEyQztLQUNwRDtJQUNEOztPQUVHO0lBQ0gsR0FBRyxFQUFFO1FBQ0gsT0FBTyxFQUFFLEtBQUs7UUFDZCxJQUFJLEVBQUUsS0FBSztRQUNYLE1BQU0sRUFBRSwyQ0FBMkM7S0FDcEQ7Q0FDTyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0LmNvcmUgdmVyc2lvbjogNC4wLjFcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L2d1aWRlLXBhZ2UtZ2VuZXJhdGlvbnw0LjAuMVxyXG5cclxuaW1wb3J0IHsgQ29kaW5nQXJncyB9IGZyb20gJy4uL2ZoaXIvQ29kaW5nLmpzJ1xyXG5cclxuLyoqXHJcbiAqIEEgY29kZSB0aGF0IGluZGljYXRlcyBob3cgdGhlIHBhZ2UgaXMgZ2VuZXJhdGVkLlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgR3VpZGVQYWdlR2VuZXJhdGlvbkNvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogZ2VuZXJhdGVkOiBQYWdlIHdpbGwgYmUgZ2VuZXJhdGVkIGJ5IHRoZSBwdWJsaWNhdGlvbiBwcm9jZXNzIC0gbm8gc291cmNlIHRvIGJyaW5nIGFjcm9zcy5cclxuICAgKi9cclxuICBHZW5lcmF0ZWQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogaHRtbDogUGFnZSBpcyBwcm9wZXIgeGh0bWwgd2l0aCBubyB0ZW1wbGF0aW5nLiAgV2lsbCBiZSBicm91Z2h0IGFjcm9zcyB1bmNoYW5nZWQgZm9yIHN0YW5kYXJkIHBvc3QtcHJvY2Vzc2luZy5cclxuICAgKi9cclxuICBIVE1MOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIG1hcmtkb3duOiBQYWdlIGlzIG1hcmtkb3duIHdpdGggdGVtcGxhdGluZy4gIFdpbGwgdXNlIHRoZSB0ZW1wbGF0ZSB0byBjcmVhdGUgYSBmaWxlIHRoYXQgaW1wb3J0cyB0aGUgbWFya2Rvd24gZmlsZSBwcmlvciB0byBwb3N0LXByb2Nlc3NpbmcuXHJcbiAgICovXHJcbiAgTWFya2Rvd246IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogeG1sOiBQYWdlIGlzIHhtbCB3aXRoIHRlbXBsYXRpbmcuICBXaWxsIHVzZSB0aGUgdGVtcGxhdGUgdG8gY3JlYXRlIGEgZmlsZSB0aGF0IGltcG9ydHMgdGhlIHNvdXJjZSBmaWxlIGFuZCBydW4gdGhlIG5vbWluYXRlZCBYU0xUIHRyYW5zZm9ybSAoc2VlIHBhcmFtZXRlcnMpIGlmIHByZXNlbnQgcHJpb3IgdG8gcG9zdC1wcm9jZXNzaW5nLlxyXG4gICAqL1xyXG4gIFhNTDogQ29kaW5nQXJncztcclxufVxyXG5cclxuLyoqXHJcbiAqIEEgY29kZSB0aGF0IGluZGljYXRlcyBob3cgdGhlIHBhZ2UgaXMgZ2VuZXJhdGVkLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IEd1aWRlUGFnZUdlbmVyYXRpb25Db2RpbmdzOkd1aWRlUGFnZUdlbmVyYXRpb25Db2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIGdlbmVyYXRlZDogUGFnZSB3aWxsIGJlIGdlbmVyYXRlZCBieSB0aGUgcHVibGljYXRpb24gcHJvY2VzcyAtIG5vIHNvdXJjZSB0byBicmluZyBhY3Jvc3MuXHJcbiAgICovXHJcbiAgR2VuZXJhdGVkOiB7XHJcbiAgICBkaXNwbGF5OiBcIkdlbmVyYXRlZFwiLFxyXG4gICAgY29kZTogXCJnZW5lcmF0ZWRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2d1aWRlLXBhZ2UtZ2VuZXJhdGlvblwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogaHRtbDogUGFnZSBpcyBwcm9wZXIgeGh0bWwgd2l0aCBubyB0ZW1wbGF0aW5nLiAgV2lsbCBiZSBicm91Z2h0IGFjcm9zcyB1bmNoYW5nZWQgZm9yIHN0YW5kYXJkIHBvc3QtcHJvY2Vzc2luZy5cclxuICAgKi9cclxuICBIVE1MOiB7XHJcbiAgICBkaXNwbGF5OiBcIkhUTUxcIixcclxuICAgIGNvZGU6IFwiaHRtbFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvZ3VpZGUtcGFnZS1nZW5lcmF0aW9uXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBtYXJrZG93bjogUGFnZSBpcyBtYXJrZG93biB3aXRoIHRlbXBsYXRpbmcuICBXaWxsIHVzZSB0aGUgdGVtcGxhdGUgdG8gY3JlYXRlIGEgZmlsZSB0aGF0IGltcG9ydHMgdGhlIG1hcmtkb3duIGZpbGUgcHJpb3IgdG8gcG9zdC1wcm9jZXNzaW5nLlxyXG4gICAqL1xyXG4gIE1hcmtkb3duOiB7XHJcbiAgICBkaXNwbGF5OiBcIk1hcmtkb3duXCIsXHJcbiAgICBjb2RlOiBcIm1hcmtkb3duXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9ndWlkZS1wYWdlLWdlbmVyYXRpb25cIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIHhtbDogUGFnZSBpcyB4bWwgd2l0aCB0ZW1wbGF0aW5nLiAgV2lsbCB1c2UgdGhlIHRlbXBsYXRlIHRvIGNyZWF0ZSBhIGZpbGUgdGhhdCBpbXBvcnRzIHRoZSBzb3VyY2UgZmlsZSBhbmQgcnVuIHRoZSBub21pbmF0ZWQgWFNMVCB0cmFuc2Zvcm0gKHNlZSBwYXJhbWV0ZXJzKSBpZiBwcmVzZW50IHByaW9yIHRvIHBvc3QtcHJvY2Vzc2luZy5cclxuICAgKi9cclxuICBYTUw6IHtcclxuICAgIGRpc3BsYXk6IFwiWE1MXCIsXHJcbiAgICBjb2RlOiBcInhtbFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvZ3VpZGUtcGFnZS1nZW5lcmF0aW9uXCIsXHJcbiAgfSxcclxufSBhcyBjb25zdDtcclxuIl19