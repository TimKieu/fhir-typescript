// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/linkage-type|4.0.1
/**
 * Used to distinguish different roles a resource can play within a set of linked resources.
 */
export const LinkageTypeCodings = {
    /**
     * alternate: The resource represents an alternative view of the underlying event/condition/etc.  The resource may still be actively maintained, even though it is not considered to be the source of truth.
     */
    AlternateRecord: {
        display: "Alternate Record",
        code: "alternate",
        system: "http://hl7.org/fhir/linkage-type",
    },
    /**
     * historical: The resource represents an obsolete record of the underlying event/condition/etc.  It is not expected to be actively maintained.
     */
    HistoricalObsoleteRecord: {
        display: "Historical/Obsolete Record",
        code: "historical",
        system: "http://hl7.org/fhir/linkage-type",
    },
    /**
     * source: The resource represents the "source of truth" (from the perspective of this Linkage resource) for the underlying event/condition/etc.
     */
    SourceOfTruth: {
        display: "Source of Truth",
        code: "source",
        system: "http://hl7.org/fhir/linkage-type",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTGlua2FnZVR5cGVDb2RpbmdzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9MaW5rYWdlVHlwZUNvZGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLCtDQUErQztBQUMvQyxrQ0FBa0M7QUFDbEMsaUVBQWlFO0FBc0JqRTs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLGtCQUFrQixHQUF5QjtJQUN0RDs7T0FFRztJQUNILGVBQWUsRUFBRTtRQUNmLE9BQU8sRUFBRSxrQkFBa0I7UUFDM0IsSUFBSSxFQUFFLFdBQVc7UUFDakIsTUFBTSxFQUFFLGtDQUFrQztLQUMzQztJQUNEOztPQUVHO0lBQ0gsd0JBQXdCLEVBQUU7UUFDeEIsT0FBTyxFQUFFLDRCQUE0QjtRQUNyQyxJQUFJLEVBQUUsWUFBWTtRQUNsQixNQUFNLEVBQUUsa0NBQWtDO0tBQzNDO0lBQ0Q7O09BRUc7SUFDSCxhQUFhLEVBQUU7UUFDYixPQUFPLEVBQUUsaUJBQWlCO1FBQzFCLElBQUksRUFBRSxRQUFRO1FBQ2QsTUFBTSxFQUFFLGtDQUFrQztLQUMzQztDQUNPLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjQuY29yZSB2ZXJzaW9uOiA0LjAuMVxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvbGlua2FnZS10eXBlfDQuMC4xXHJcblxyXG5pbXBvcnQgeyBDb2RpbmdBcmdzIH0gZnJvbSAnLi4vZmhpci9Db2RpbmcuanMnXHJcblxyXG4vKipcclxuICogVXNlZCB0byBkaXN0aW5ndWlzaCBkaWZmZXJlbnQgcm9sZXMgYSByZXNvdXJjZSBjYW4gcGxheSB3aXRoaW4gYSBzZXQgb2YgbGlua2VkIHJlc291cmNlcy5cclxuICovXHJcbmV4cG9ydCB0eXBlIExpbmthZ2VUeXBlQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBhbHRlcm5hdGU6IFRoZSByZXNvdXJjZSByZXByZXNlbnRzIGFuIGFsdGVybmF0aXZlIHZpZXcgb2YgdGhlIHVuZGVybHlpbmcgZXZlbnQvY29uZGl0aW9uL2V0Yy4gIFRoZSByZXNvdXJjZSBtYXkgc3RpbGwgYmUgYWN0aXZlbHkgbWFpbnRhaW5lZCwgZXZlbiB0aG91Z2ggaXQgaXMgbm90IGNvbnNpZGVyZWQgdG8gYmUgdGhlIHNvdXJjZSBvZiB0cnV0aC5cclxuICAgKi9cclxuICBBbHRlcm5hdGVSZWNvcmQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogaGlzdG9yaWNhbDogVGhlIHJlc291cmNlIHJlcHJlc2VudHMgYW4gb2Jzb2xldGUgcmVjb3JkIG9mIHRoZSB1bmRlcmx5aW5nIGV2ZW50L2NvbmRpdGlvbi9ldGMuICBJdCBpcyBub3QgZXhwZWN0ZWQgdG8gYmUgYWN0aXZlbHkgbWFpbnRhaW5lZC5cclxuICAgKi9cclxuICBIaXN0b3JpY2FsT2Jzb2xldGVSZWNvcmQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogc291cmNlOiBUaGUgcmVzb3VyY2UgcmVwcmVzZW50cyB0aGUgXCJzb3VyY2Ugb2YgdHJ1dGhcIiAoZnJvbSB0aGUgcGVyc3BlY3RpdmUgb2YgdGhpcyBMaW5rYWdlIHJlc291cmNlKSBmb3IgdGhlIHVuZGVybHlpbmcgZXZlbnQvY29uZGl0aW9uL2V0Yy5cclxuICAgKi9cclxuICBTb3VyY2VPZlRydXRoOiBDb2RpbmdBcmdzO1xyXG59XHJcblxyXG4vKipcclxuICogVXNlZCB0byBkaXN0aW5ndWlzaCBkaWZmZXJlbnQgcm9sZXMgYSByZXNvdXJjZSBjYW4gcGxheSB3aXRoaW4gYSBzZXQgb2YgbGlua2VkIHJlc291cmNlcy5cclxuICovXHJcbmV4cG9ydCBjb25zdCBMaW5rYWdlVHlwZUNvZGluZ3M6TGlua2FnZVR5cGVDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIGFsdGVybmF0ZTogVGhlIHJlc291cmNlIHJlcHJlc2VudHMgYW4gYWx0ZXJuYXRpdmUgdmlldyBvZiB0aGUgdW5kZXJseWluZyBldmVudC9jb25kaXRpb24vZXRjLiAgVGhlIHJlc291cmNlIG1heSBzdGlsbCBiZSBhY3RpdmVseSBtYWludGFpbmVkLCBldmVuIHRob3VnaCBpdCBpcyBub3QgY29uc2lkZXJlZCB0byBiZSB0aGUgc291cmNlIG9mIHRydXRoLlxyXG4gICAqL1xyXG4gIEFsdGVybmF0ZVJlY29yZDoge1xyXG4gICAgZGlzcGxheTogXCJBbHRlcm5hdGUgUmVjb3JkXCIsXHJcbiAgICBjb2RlOiBcImFsdGVybmF0ZVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvbGlua2FnZS10eXBlXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBoaXN0b3JpY2FsOiBUaGUgcmVzb3VyY2UgcmVwcmVzZW50cyBhbiBvYnNvbGV0ZSByZWNvcmQgb2YgdGhlIHVuZGVybHlpbmcgZXZlbnQvY29uZGl0aW9uL2V0Yy4gIEl0IGlzIG5vdCBleHBlY3RlZCB0byBiZSBhY3RpdmVseSBtYWludGFpbmVkLlxyXG4gICAqL1xyXG4gIEhpc3RvcmljYWxPYnNvbGV0ZVJlY29yZDoge1xyXG4gICAgZGlzcGxheTogXCJIaXN0b3JpY2FsL09ic29sZXRlIFJlY29yZFwiLFxyXG4gICAgY29kZTogXCJoaXN0b3JpY2FsXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9saW5rYWdlLXR5cGVcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIHNvdXJjZTogVGhlIHJlc291cmNlIHJlcHJlc2VudHMgdGhlIFwic291cmNlIG9mIHRydXRoXCIgKGZyb20gdGhlIHBlcnNwZWN0aXZlIG9mIHRoaXMgTGlua2FnZSByZXNvdXJjZSkgZm9yIHRoZSB1bmRlcmx5aW5nIGV2ZW50L2NvbmRpdGlvbi9ldGMuXHJcbiAgICovXHJcbiAgU291cmNlT2ZUcnV0aDoge1xyXG4gICAgZGlzcGxheTogXCJTb3VyY2Ugb2YgVHJ1dGhcIixcclxuICAgIGNvZGU6IFwic291cmNlXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9saW5rYWdlLXR5cGVcIixcclxuICB9LFxyXG59IGFzIGNvbnN0O1xyXG4iXX0=