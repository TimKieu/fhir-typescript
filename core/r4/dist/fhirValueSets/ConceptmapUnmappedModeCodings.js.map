{"version":3,"file":"ConceptmapUnmappedModeCodings.js","sources":["../../src/fhirValueSets/ConceptmapUnmappedModeCodings.ts"],"sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4.core version: 4.0.1\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR ValueSet: http://hl7.org/fhir/ValueSet/conceptmap-unmapped-mode|4.0.1\r\n\r\nimport { Coding } from '../fhir/Coding.js'\r\n\r\n/**\r\n * Defines which action to take if there is no match in the group.\r\n */\r\nexport const ConceptmapUnmappedModeCodings = {\r\n  /**\r\n   * fixed: Use the code explicitly provided in the group.unmapped.\r\n   */\r\n  FixedCode: new Coding({\r\n    display: \"Fixed Code\",\r\n    code: \"fixed\",\r\n    system: \"http://hl7.org/fhir/conceptmap-unmapped-mode\",\r\n  }),\r\n  /**\r\n   * other-map: Use the map identified by the canonical URL in the url element.\r\n   */\r\n  OtherMap: new Coding({\r\n    display: \"Other Map\",\r\n    code: \"other-map\",\r\n    system: \"http://hl7.org/fhir/conceptmap-unmapped-mode\",\r\n  }),\r\n  /**\r\n   * provided: Use the code as provided in the $translate request.\r\n   */\r\n  ProvidedCode: new Coding({\r\n    display: \"Provided Code\",\r\n    code: \"provided\",\r\n    system: \"http://hl7.org/fhir/conceptmap-unmapped-mode\",\r\n  }),\r\n} as const;\r\n\r\n/**\r\n * Defines which action to take if there is no match in the group.\r\n */\r\nexport type ConceptmapUnmappedModeCodingType = typeof ConceptmapUnmappedModeCodings;\r\n"],"names":[],"mappings":";;;;AAAA;AAOA;;AAEG;AACU,IAAA,6BAA6B,GAAG;AAC3C;;AAEG;IACH,SAAS,EAAE,IAAI,MAAM,CAAC;AACpB,QAAA,OAAO,EAAE,YAAY;AACrB,QAAA,IAAI,EAAE,OAAO;AACb,QAAA,MAAM,EAAE,8CAA8C;KACvD,CAAC;AACF;;AAEG;IACH,QAAQ,EAAE,IAAI,MAAM,CAAC;AACnB,QAAA,OAAO,EAAE,WAAW;AACpB,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,MAAM,EAAE,8CAA8C;KACvD,CAAC;AACF;;AAEG;IACH,YAAY,EAAE,IAAI,MAAM,CAAC;AACvB,QAAA,OAAO,EAAE,eAAe;AACxB,QAAA,IAAI,EAAE,UAAU;AAChB,QAAA,MAAM,EAAE,8CAA8C;KACvD,CAAC;;;;;"}