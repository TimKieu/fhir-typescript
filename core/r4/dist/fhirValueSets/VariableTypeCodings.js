// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/variable-type|4.0.1
import { Coding } from '../fhir/Coding.js';
/**
 * The possible types of variables for exposures or outcomes (E.g. Dichotomous, Continuous, Descriptive).
 */
export const VariableTypeCodings = {
    /**
     * continuous: The variable is a continuous result such as a quantity.
     */
    Continuous: new Coding({
        display: "Continuous",
        code: "continuous",
        system: "http://hl7.org/fhir/variable-type",
    }),
    /**
     * descriptive: The variable is described narratively rather than quantitatively.
     */
    Descriptive: new Coding({
        display: "Descriptive",
        code: "descriptive",
        system: "http://hl7.org/fhir/variable-type",
    }),
    /**
     * dichotomous: The variable is dichotomous, such as present or absent.
     */
    Dichotomous: new Coding({
        display: "Dichotomous",
        code: "dichotomous",
        system: "http://hl7.org/fhir/variable-type",
    }),
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVmFyaWFibGVUeXBlQ29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvVmFyaWFibGVUeXBlQ29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyxrRUFBa0U7QUFFbEUsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLG1CQUFtQixDQUFBO0FBRTFDOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sbUJBQW1CLEdBQUc7SUFDakM7O09BRUc7SUFDSCxVQUFVLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDckIsT0FBTyxFQUFFLFlBQVk7UUFDckIsSUFBSSxFQUFFLFlBQVk7UUFDbEIsTUFBTSxFQUFFLG1DQUFtQztLQUM1QyxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxXQUFXLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDdEIsT0FBTyxFQUFFLGFBQWE7UUFDdEIsSUFBSSxFQUFFLGFBQWE7UUFDbkIsTUFBTSxFQUFFLG1DQUFtQztLQUM1QyxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxXQUFXLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDdEIsT0FBTyxFQUFFLGFBQWE7UUFDdEIsSUFBSSxFQUFFLGFBQWE7UUFDbkIsTUFBTSxFQUFFLG1DQUFtQztLQUM1QyxDQUFDO0NBQ00sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNC5jb3JlIHZlcnNpb246IDQuMC4xXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC92YXJpYWJsZS10eXBlfDQuMC4xXHJcblxyXG5pbXBvcnQgeyBDb2RpbmcgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiBUaGUgcG9zc2libGUgdHlwZXMgb2YgdmFyaWFibGVzIGZvciBleHBvc3VyZXMgb3Igb3V0Y29tZXMgKEUuZy4gRGljaG90b21vdXMsIENvbnRpbnVvdXMsIERlc2NyaXB0aXZlKS5cclxuICovXHJcbmV4cG9ydCBjb25zdCBWYXJpYWJsZVR5cGVDb2RpbmdzID0ge1xyXG4gIC8qKlxyXG4gICAqIGNvbnRpbnVvdXM6IFRoZSB2YXJpYWJsZSBpcyBhIGNvbnRpbnVvdXMgcmVzdWx0IHN1Y2ggYXMgYSBxdWFudGl0eS5cclxuICAgKi9cclxuICBDb250aW51b3VzOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiQ29udGludW91c1wiLFxyXG4gICAgY29kZTogXCJjb250aW51b3VzXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci92YXJpYWJsZS10eXBlXCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogZGVzY3JpcHRpdmU6IFRoZSB2YXJpYWJsZSBpcyBkZXNjcmliZWQgbmFycmF0aXZlbHkgcmF0aGVyIHRoYW4gcXVhbnRpdGF0aXZlbHkuXHJcbiAgICovXHJcbiAgRGVzY3JpcHRpdmU6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJEZXNjcmlwdGl2ZVwiLFxyXG4gICAgY29kZTogXCJkZXNjcmlwdGl2ZVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvdmFyaWFibGUtdHlwZVwiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIGRpY2hvdG9tb3VzOiBUaGUgdmFyaWFibGUgaXMgZGljaG90b21vdXMsIHN1Y2ggYXMgcHJlc2VudCBvciBhYnNlbnQuXHJcbiAgICovXHJcbiAgRGljaG90b21vdXM6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJEaWNob3RvbW91c1wiLFxyXG4gICAgY29kZTogXCJkaWNob3RvbW91c1wiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvdmFyaWFibGUtdHlwZVwiLFxyXG4gIH0pLFxyXG59IGFzIGNvbnN0O1xyXG5cclxuLyoqXHJcbiAqIFRoZSBwb3NzaWJsZSB0eXBlcyBvZiB2YXJpYWJsZXMgZm9yIGV4cG9zdXJlcyBvciBvdXRjb21lcyAoRS5nLiBEaWNob3RvbW91cywgQ29udGludW91cywgRGVzY3JpcHRpdmUpLlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgVmFyaWFibGVUeXBlQ29kaW5nVHlwZSA9IHR5cGVvZiBWYXJpYWJsZVR5cGVDb2RpbmdzO1xyXG4iXX0=