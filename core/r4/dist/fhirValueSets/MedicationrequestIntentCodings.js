// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/medicationrequest-intent|4.0.1
/**
 * MedicationRequest Intent Codes
 */
export const MedicationrequestIntentCodings = {
    /**
     * filler-order: The request represents the view of an authorization instantiated by a fulfilling system representing the details of the fulfiller's intention to act upon a submitted order.
     */
    FillerOrder: {
        display: "Filler Order",
        code: "filler-order",
        system: "http://hl7.org/fhir/CodeSystem/medicationrequest-intent",
    },
    /**
     * instance-order: The request represents an instance for the particular order, for example a medication administration record.
     */
    InstanceOrder: {
        display: "Instance Order",
        code: "instance-order",
        system: "http://hl7.org/fhir/CodeSystem/medicationrequest-intent",
    },
    /**
     * option: The request represents a component or option for a RequestGroup that establishes timing, conditionality and/or  other constraints among a set of requests.
     */
    Option: {
        display: "Option",
        code: "option",
        system: "http://hl7.org/fhir/CodeSystem/medicationrequest-intent",
    },
    /**
     * order: The request represents a request/demand and authorization for action
     */
    Order: {
        display: "Order",
        code: "order",
        system: "http://hl7.org/fhir/CodeSystem/medicationrequest-intent",
    },
    /**
     * original-order: The request represents the original authorization for the medication request.
     */
    OriginalOrder: {
        display: "Original Order",
        code: "original-order",
        system: "http://hl7.org/fhir/CodeSystem/medicationrequest-intent",
    },
    /**
     * plan: The request represents an intention to ensure something occurs without providing an authorization for others to act.
     */
    Plan: {
        display: "Plan",
        code: "plan",
        system: "http://hl7.org/fhir/CodeSystem/medicationrequest-intent",
    },
    /**
     * proposal: The request is a suggestion made by someone/something that doesn't have an intention to ensure it occurs and without providing an authorization to act
     */
    Proposal: {
        display: "Proposal",
        code: "proposal",
        system: "http://hl7.org/fhir/CodeSystem/medicationrequest-intent",
    },
    /**
     * reflex-order: The request represents an automatically generated supplemental authorization for action based on a parent authorization together with initial results of the action taken against that parent authorization..
     */
    ReflexOrder: {
        display: "Reflex Order",
        code: "reflex-order",
        system: "http://hl7.org/fhir/CodeSystem/medicationrequest-intent",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWVkaWNhdGlvbnJlcXVlc3RJbnRlbnRDb2RpbmdzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9NZWRpY2F0aW9ucmVxdWVzdEludGVudENvZGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLCtDQUErQztBQUMvQyxrQ0FBa0M7QUFDbEMsNkVBQTZFO0FBMEM3RTs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLDhCQUE4QixHQUFxQztJQUM5RTs7T0FFRztJQUNILFdBQVcsRUFBRTtRQUNYLE9BQU8sRUFBRSxjQUFjO1FBQ3ZCLElBQUksRUFBRSxjQUFjO1FBQ3BCLE1BQU0sRUFBRSx5REFBeUQ7S0FDbEU7SUFDRDs7T0FFRztJQUNILGFBQWEsRUFBRTtRQUNiLE9BQU8sRUFBRSxnQkFBZ0I7UUFDekIsSUFBSSxFQUFFLGdCQUFnQjtRQUN0QixNQUFNLEVBQUUseURBQXlEO0tBQ2xFO0lBQ0Q7O09BRUc7SUFDSCxNQUFNLEVBQUU7UUFDTixPQUFPLEVBQUUsUUFBUTtRQUNqQixJQUFJLEVBQUUsUUFBUTtRQUNkLE1BQU0sRUFBRSx5REFBeUQ7S0FDbEU7SUFDRDs7T0FFRztJQUNILEtBQUssRUFBRTtRQUNMLE9BQU8sRUFBRSxPQUFPO1FBQ2hCLElBQUksRUFBRSxPQUFPO1FBQ2IsTUFBTSxFQUFFLHlEQUF5RDtLQUNsRTtJQUNEOztPQUVHO0lBQ0gsYUFBYSxFQUFFO1FBQ2IsT0FBTyxFQUFFLGdCQUFnQjtRQUN6QixJQUFJLEVBQUUsZ0JBQWdCO1FBQ3RCLE1BQU0sRUFBRSx5REFBeUQ7S0FDbEU7SUFDRDs7T0FFRztJQUNILElBQUksRUFBRTtRQUNKLE9BQU8sRUFBRSxNQUFNO1FBQ2YsSUFBSSxFQUFFLE1BQU07UUFDWixNQUFNLEVBQUUseURBQXlEO0tBQ2xFO0lBQ0Q7O09BRUc7SUFDSCxRQUFRLEVBQUU7UUFDUixPQUFPLEVBQUUsVUFBVTtRQUNuQixJQUFJLEVBQUUsVUFBVTtRQUNoQixNQUFNLEVBQUUseURBQXlEO0tBQ2xFO0lBQ0Q7O09BRUc7SUFDSCxXQUFXLEVBQUU7UUFDWCxPQUFPLEVBQUUsY0FBYztRQUN2QixJQUFJLEVBQUUsY0FBYztRQUNwQixNQUFNLEVBQUUseURBQXlEO0tBQ2xFO0NBQ08sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNC5jb3JlIHZlcnNpb246IDQuMC4xXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9tZWRpY2F0aW9ucmVxdWVzdC1pbnRlbnR8NC4wLjFcclxuXHJcbmltcG9ydCB7IENvZGluZ0FyZ3MgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiBNZWRpY2F0aW9uUmVxdWVzdCBJbnRlbnQgQ29kZXNcclxuICovXHJcbmV4cG9ydCB0eXBlIE1lZGljYXRpb25yZXF1ZXN0SW50ZW50Q29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBmaWxsZXItb3JkZXI6IFRoZSByZXF1ZXN0IHJlcHJlc2VudHMgdGhlIHZpZXcgb2YgYW4gYXV0aG9yaXphdGlvbiBpbnN0YW50aWF0ZWQgYnkgYSBmdWxmaWxsaW5nIHN5c3RlbSByZXByZXNlbnRpbmcgdGhlIGRldGFpbHMgb2YgdGhlIGZ1bGZpbGxlcidzIGludGVudGlvbiB0byBhY3QgdXBvbiBhIHN1Ym1pdHRlZCBvcmRlci5cclxuICAgKi9cclxuICBGaWxsZXJPcmRlcjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBpbnN0YW5jZS1vcmRlcjogVGhlIHJlcXVlc3QgcmVwcmVzZW50cyBhbiBpbnN0YW5jZSBmb3IgdGhlIHBhcnRpY3VsYXIgb3JkZXIsIGZvciBleGFtcGxlIGEgbWVkaWNhdGlvbiBhZG1pbmlzdHJhdGlvbiByZWNvcmQuXHJcbiAgICovXHJcbiAgSW5zdGFuY2VPcmRlcjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBvcHRpb246IFRoZSByZXF1ZXN0IHJlcHJlc2VudHMgYSBjb21wb25lbnQgb3Igb3B0aW9uIGZvciBhIFJlcXVlc3RHcm91cCB0aGF0IGVzdGFibGlzaGVzIHRpbWluZywgY29uZGl0aW9uYWxpdHkgYW5kL29yICBvdGhlciBjb25zdHJhaW50cyBhbW9uZyBhIHNldCBvZiByZXF1ZXN0cy5cclxuICAgKi9cclxuICBPcHRpb246IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogb3JkZXI6IFRoZSByZXF1ZXN0IHJlcHJlc2VudHMgYSByZXF1ZXN0L2RlbWFuZCBhbmQgYXV0aG9yaXphdGlvbiBmb3IgYWN0aW9uXHJcbiAgICovXHJcbiAgT3JkZXI6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogb3JpZ2luYWwtb3JkZXI6IFRoZSByZXF1ZXN0IHJlcHJlc2VudHMgdGhlIG9yaWdpbmFsIGF1dGhvcml6YXRpb24gZm9yIHRoZSBtZWRpY2F0aW9uIHJlcXVlc3QuXHJcbiAgICovXHJcbiAgT3JpZ2luYWxPcmRlcjogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBwbGFuOiBUaGUgcmVxdWVzdCByZXByZXNlbnRzIGFuIGludGVudGlvbiB0byBlbnN1cmUgc29tZXRoaW5nIG9jY3VycyB3aXRob3V0IHByb3ZpZGluZyBhbiBhdXRob3JpemF0aW9uIGZvciBvdGhlcnMgdG8gYWN0LlxyXG4gICAqL1xyXG4gIFBsYW46IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogcHJvcG9zYWw6IFRoZSByZXF1ZXN0IGlzIGEgc3VnZ2VzdGlvbiBtYWRlIGJ5IHNvbWVvbmUvc29tZXRoaW5nIHRoYXQgZG9lc24ndCBoYXZlIGFuIGludGVudGlvbiB0byBlbnN1cmUgaXQgb2NjdXJzIGFuZCB3aXRob3V0IHByb3ZpZGluZyBhbiBhdXRob3JpemF0aW9uIHRvIGFjdFxyXG4gICAqL1xyXG4gIFByb3Bvc2FsOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIHJlZmxleC1vcmRlcjogVGhlIHJlcXVlc3QgcmVwcmVzZW50cyBhbiBhdXRvbWF0aWNhbGx5IGdlbmVyYXRlZCBzdXBwbGVtZW50YWwgYXV0aG9yaXphdGlvbiBmb3IgYWN0aW9uIGJhc2VkIG9uIGEgcGFyZW50IGF1dGhvcml6YXRpb24gdG9nZXRoZXIgd2l0aCBpbml0aWFsIHJlc3VsdHMgb2YgdGhlIGFjdGlvbiB0YWtlbiBhZ2FpbnN0IHRoYXQgcGFyZW50IGF1dGhvcml6YXRpb24uLlxyXG4gICAqL1xyXG4gIFJlZmxleE9yZGVyOiBDb2RpbmdBcmdzO1xyXG59XHJcblxyXG4vKipcclxuICogTWVkaWNhdGlvblJlcXVlc3QgSW50ZW50IENvZGVzXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgTWVkaWNhdGlvbnJlcXVlc3RJbnRlbnRDb2RpbmdzOk1lZGljYXRpb25yZXF1ZXN0SW50ZW50Q29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBmaWxsZXItb3JkZXI6IFRoZSByZXF1ZXN0IHJlcHJlc2VudHMgdGhlIHZpZXcgb2YgYW4gYXV0aG9yaXphdGlvbiBpbnN0YW50aWF0ZWQgYnkgYSBmdWxmaWxsaW5nIHN5c3RlbSByZXByZXNlbnRpbmcgdGhlIGRldGFpbHMgb2YgdGhlIGZ1bGZpbGxlcidzIGludGVudGlvbiB0byBhY3QgdXBvbiBhIHN1Ym1pdHRlZCBvcmRlci5cclxuICAgKi9cclxuICBGaWxsZXJPcmRlcjoge1xyXG4gICAgZGlzcGxheTogXCJGaWxsZXIgT3JkZXJcIixcclxuICAgIGNvZGU6IFwiZmlsbGVyLW9yZGVyXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9Db2RlU3lzdGVtL21lZGljYXRpb25yZXF1ZXN0LWludGVudFwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogaW5zdGFuY2Utb3JkZXI6IFRoZSByZXF1ZXN0IHJlcHJlc2VudHMgYW4gaW5zdGFuY2UgZm9yIHRoZSBwYXJ0aWN1bGFyIG9yZGVyLCBmb3IgZXhhbXBsZSBhIG1lZGljYXRpb24gYWRtaW5pc3RyYXRpb24gcmVjb3JkLlxyXG4gICAqL1xyXG4gIEluc3RhbmNlT3JkZXI6IHtcclxuICAgIGRpc3BsYXk6IFwiSW5zdGFuY2UgT3JkZXJcIixcclxuICAgIGNvZGU6IFwiaW5zdGFuY2Utb3JkZXJcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL0NvZGVTeXN0ZW0vbWVkaWNhdGlvbnJlcXVlc3QtaW50ZW50XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBvcHRpb246IFRoZSByZXF1ZXN0IHJlcHJlc2VudHMgYSBjb21wb25lbnQgb3Igb3B0aW9uIGZvciBhIFJlcXVlc3RHcm91cCB0aGF0IGVzdGFibGlzaGVzIHRpbWluZywgY29uZGl0aW9uYWxpdHkgYW5kL29yICBvdGhlciBjb25zdHJhaW50cyBhbW9uZyBhIHNldCBvZiByZXF1ZXN0cy5cclxuICAgKi9cclxuICBPcHRpb246IHtcclxuICAgIGRpc3BsYXk6IFwiT3B0aW9uXCIsXHJcbiAgICBjb2RlOiBcIm9wdGlvblwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvQ29kZVN5c3RlbS9tZWRpY2F0aW9ucmVxdWVzdC1pbnRlbnRcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIG9yZGVyOiBUaGUgcmVxdWVzdCByZXByZXNlbnRzIGEgcmVxdWVzdC9kZW1hbmQgYW5kIGF1dGhvcml6YXRpb24gZm9yIGFjdGlvblxyXG4gICAqL1xyXG4gIE9yZGVyOiB7XHJcbiAgICBkaXNwbGF5OiBcIk9yZGVyXCIsXHJcbiAgICBjb2RlOiBcIm9yZGVyXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9Db2RlU3lzdGVtL21lZGljYXRpb25yZXF1ZXN0LWludGVudFwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogb3JpZ2luYWwtb3JkZXI6IFRoZSByZXF1ZXN0IHJlcHJlc2VudHMgdGhlIG9yaWdpbmFsIGF1dGhvcml6YXRpb24gZm9yIHRoZSBtZWRpY2F0aW9uIHJlcXVlc3QuXHJcbiAgICovXHJcbiAgT3JpZ2luYWxPcmRlcjoge1xyXG4gICAgZGlzcGxheTogXCJPcmlnaW5hbCBPcmRlclwiLFxyXG4gICAgY29kZTogXCJvcmlnaW5hbC1vcmRlclwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvQ29kZVN5c3RlbS9tZWRpY2F0aW9ucmVxdWVzdC1pbnRlbnRcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIHBsYW46IFRoZSByZXF1ZXN0IHJlcHJlc2VudHMgYW4gaW50ZW50aW9uIHRvIGVuc3VyZSBzb21ldGhpbmcgb2NjdXJzIHdpdGhvdXQgcHJvdmlkaW5nIGFuIGF1dGhvcml6YXRpb24gZm9yIG90aGVycyB0byBhY3QuXHJcbiAgICovXHJcbiAgUGxhbjoge1xyXG4gICAgZGlzcGxheTogXCJQbGFuXCIsXHJcbiAgICBjb2RlOiBcInBsYW5cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL0NvZGVTeXN0ZW0vbWVkaWNhdGlvbnJlcXVlc3QtaW50ZW50XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBwcm9wb3NhbDogVGhlIHJlcXVlc3QgaXMgYSBzdWdnZXN0aW9uIG1hZGUgYnkgc29tZW9uZS9zb21ldGhpbmcgdGhhdCBkb2Vzbid0IGhhdmUgYW4gaW50ZW50aW9uIHRvIGVuc3VyZSBpdCBvY2N1cnMgYW5kIHdpdGhvdXQgcHJvdmlkaW5nIGFuIGF1dGhvcml6YXRpb24gdG8gYWN0XHJcbiAgICovXHJcbiAgUHJvcG9zYWw6IHtcclxuICAgIGRpc3BsYXk6IFwiUHJvcG9zYWxcIixcclxuICAgIGNvZGU6IFwicHJvcG9zYWxcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL0NvZGVTeXN0ZW0vbWVkaWNhdGlvbnJlcXVlc3QtaW50ZW50XCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiByZWZsZXgtb3JkZXI6IFRoZSByZXF1ZXN0IHJlcHJlc2VudHMgYW4gYXV0b21hdGljYWxseSBnZW5lcmF0ZWQgc3VwcGxlbWVudGFsIGF1dGhvcml6YXRpb24gZm9yIGFjdGlvbiBiYXNlZCBvbiBhIHBhcmVudCBhdXRob3JpemF0aW9uIHRvZ2V0aGVyIHdpdGggaW5pdGlhbCByZXN1bHRzIG9mIHRoZSBhY3Rpb24gdGFrZW4gYWdhaW5zdCB0aGF0IHBhcmVudCBhdXRob3JpemF0aW9uLi5cclxuICAgKi9cclxuICBSZWZsZXhPcmRlcjoge1xyXG4gICAgZGlzcGxheTogXCJSZWZsZXggT3JkZXJcIixcclxuICAgIGNvZGU6IFwicmVmbGV4LW9yZGVyXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9Db2RlU3lzdGVtL21lZGljYXRpb25yZXF1ZXN0LWludGVudFwiLFxyXG4gIH0sXHJcbn0gYXMgY29uc3Q7XHJcbiJdfQ==