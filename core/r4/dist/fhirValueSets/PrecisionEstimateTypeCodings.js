// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/precision-estimate-type|4.0.1
/**
 * Method of reporting variability of estimates, such as confidence intervals, interquartile range or standard deviation.
 */
export const PrecisionEstimateTypeCodings = {
    /**
     * CI: confidence interval.
     */
    ConfidenceInterval: {
        display: "confidence interval",
        code: "CI",
        system: "http://terminology.hl7.org/CodeSystem/precision-estimate-type",
    },
    /**
     * IQR: interquartile range.
     */
    InterquartileRange: {
        display: "interquartile range",
        code: "IQR",
        system: "http://terminology.hl7.org/CodeSystem/precision-estimate-type",
    },
    /**
     * SD: standard deviation.
     */
    StandardDeviation: {
        display: "standard deviation",
        code: "SD",
        system: "http://terminology.hl7.org/CodeSystem/precision-estimate-type",
    },
    /**
     * SE: standard error.
     */
    StandardError: {
        display: "standard error",
        code: "SE",
        system: "http://terminology.hl7.org/CodeSystem/precision-estimate-type",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUHJlY2lzaW9uRXN0aW1hdGVUeXBlQ29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvUHJlY2lzaW9uRXN0aW1hdGVUeXBlQ29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyw0RUFBNEU7QUEwQjVFOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sNEJBQTRCLEdBQW1DO0lBQzFFOztPQUVHO0lBQ0gsa0JBQWtCLEVBQUU7UUFDbEIsT0FBTyxFQUFFLHFCQUFxQjtRQUM5QixJQUFJLEVBQUUsSUFBSTtRQUNWLE1BQU0sRUFBRSwrREFBK0Q7S0FDeEU7SUFDRDs7T0FFRztJQUNILGtCQUFrQixFQUFFO1FBQ2xCLE9BQU8sRUFBRSxxQkFBcUI7UUFDOUIsSUFBSSxFQUFFLEtBQUs7UUFDWCxNQUFNLEVBQUUsK0RBQStEO0tBQ3hFO0lBQ0Q7O09BRUc7SUFDSCxpQkFBaUIsRUFBRTtRQUNqQixPQUFPLEVBQUUsb0JBQW9CO1FBQzdCLElBQUksRUFBRSxJQUFJO1FBQ1YsTUFBTSxFQUFFLCtEQUErRDtLQUN4RTtJQUNEOztPQUVHO0lBQ0gsYUFBYSxFQUFFO1FBQ2IsT0FBTyxFQUFFLGdCQUFnQjtRQUN6QixJQUFJLEVBQUUsSUFBSTtRQUNWLE1BQU0sRUFBRSwrREFBK0Q7S0FDeEU7Q0FDTyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0LmNvcmUgdmVyc2lvbjogNC4wLjFcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L3ByZWNpc2lvbi1lc3RpbWF0ZS10eXBlfDQuMC4xXHJcblxyXG5pbXBvcnQgeyBDb2RpbmdBcmdzIH0gZnJvbSAnLi4vZmhpci9Db2RpbmcuanMnXHJcblxyXG4vKipcclxuICogTWV0aG9kIG9mIHJlcG9ydGluZyB2YXJpYWJpbGl0eSBvZiBlc3RpbWF0ZXMsIHN1Y2ggYXMgY29uZmlkZW5jZSBpbnRlcnZhbHMsIGludGVycXVhcnRpbGUgcmFuZ2Ugb3Igc3RhbmRhcmQgZGV2aWF0aW9uLlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgUHJlY2lzaW9uRXN0aW1hdGVUeXBlQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBDSTogY29uZmlkZW5jZSBpbnRlcnZhbC5cclxuICAgKi9cclxuICBDb25maWRlbmNlSW50ZXJ2YWw6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogSVFSOiBpbnRlcnF1YXJ0aWxlIHJhbmdlLlxyXG4gICAqL1xyXG4gIEludGVycXVhcnRpbGVSYW5nZTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBTRDogc3RhbmRhcmQgZGV2aWF0aW9uLlxyXG4gICAqL1xyXG4gIFN0YW5kYXJkRGV2aWF0aW9uOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIFNFOiBzdGFuZGFyZCBlcnJvci5cclxuICAgKi9cclxuICBTdGFuZGFyZEVycm9yOiBDb2RpbmdBcmdzO1xyXG59XHJcblxyXG4vKipcclxuICogTWV0aG9kIG9mIHJlcG9ydGluZyB2YXJpYWJpbGl0eSBvZiBlc3RpbWF0ZXMsIHN1Y2ggYXMgY29uZmlkZW5jZSBpbnRlcnZhbHMsIGludGVycXVhcnRpbGUgcmFuZ2Ugb3Igc3RhbmRhcmQgZGV2aWF0aW9uLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IFByZWNpc2lvbkVzdGltYXRlVHlwZUNvZGluZ3M6UHJlY2lzaW9uRXN0aW1hdGVUeXBlQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBDSTogY29uZmlkZW5jZSBpbnRlcnZhbC5cclxuICAgKi9cclxuICBDb25maWRlbmNlSW50ZXJ2YWw6IHtcclxuICAgIGRpc3BsYXk6IFwiY29uZmlkZW5jZSBpbnRlcnZhbFwiLFxyXG4gICAgY29kZTogXCJDSVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vcHJlY2lzaW9uLWVzdGltYXRlLXR5cGVcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIElRUjogaW50ZXJxdWFydGlsZSByYW5nZS5cclxuICAgKi9cclxuICBJbnRlcnF1YXJ0aWxlUmFuZ2U6IHtcclxuICAgIGRpc3BsYXk6IFwiaW50ZXJxdWFydGlsZSByYW5nZVwiLFxyXG4gICAgY29kZTogXCJJUVJcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL3ByZWNpc2lvbi1lc3RpbWF0ZS10eXBlXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBTRDogc3RhbmRhcmQgZGV2aWF0aW9uLlxyXG4gICAqL1xyXG4gIFN0YW5kYXJkRGV2aWF0aW9uOiB7XHJcbiAgICBkaXNwbGF5OiBcInN0YW5kYXJkIGRldmlhdGlvblwiLFxyXG4gICAgY29kZTogXCJTRFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vcHJlY2lzaW9uLWVzdGltYXRlLXR5cGVcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIFNFOiBzdGFuZGFyZCBlcnJvci5cclxuICAgKi9cclxuICBTdGFuZGFyZEVycm9yOiB7XHJcbiAgICBkaXNwbGF5OiBcInN0YW5kYXJkIGVycm9yXCIsXHJcbiAgICBjb2RlOiBcIlNFXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9wcmVjaXNpb24tZXN0aW1hdGUtdHlwZVwiLFxyXG4gIH0sXHJcbn0gYXMgY29uc3Q7XHJcbiJdfQ==