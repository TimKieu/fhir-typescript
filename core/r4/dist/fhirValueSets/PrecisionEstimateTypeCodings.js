// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/precision-estimate-type|4.0.1
import { Coding } from '../fhir/Coding.js';
/**
 * Method of reporting variability of estimates, such as confidence intervals, interquartile range or standard deviation.
 */
export const PrecisionEstimateTypeCodings = {
    /**
     * CI: confidence interval.
     */
    ConfidenceInterval: new Coding({
        display: "confidence interval",
        code: "CI",
        system: "http://terminology.hl7.org/CodeSystem/precision-estimate-type",
    }),
    /**
     * IQR: interquartile range.
     */
    InterquartileRange: new Coding({
        display: "interquartile range",
        code: "IQR",
        system: "http://terminology.hl7.org/CodeSystem/precision-estimate-type",
    }),
    /**
     * SD: standard deviation.
     */
    StandardDeviation: new Coding({
        display: "standard deviation",
        code: "SD",
        system: "http://terminology.hl7.org/CodeSystem/precision-estimate-type",
    }),
    /**
     * SE: standard error.
     */
    StandardError: new Coding({
        display: "standard error",
        code: "SE",
        system: "http://terminology.hl7.org/CodeSystem/precision-estimate-type",
    }),
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUHJlY2lzaW9uRXN0aW1hdGVUeXBlQ29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvUHJlY2lzaW9uRXN0aW1hdGVUeXBlQ29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyw0RUFBNEU7QUFFNUUsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLG1CQUFtQixDQUFBO0FBRTFDOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sNEJBQTRCLEdBQUc7SUFDMUM7O09BRUc7SUFDSCxrQkFBa0IsRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUM3QixPQUFPLEVBQUUscUJBQXFCO1FBQzlCLElBQUksRUFBRSxJQUFJO1FBQ1YsTUFBTSxFQUFFLCtEQUErRDtLQUN4RSxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxrQkFBa0IsRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUM3QixPQUFPLEVBQUUscUJBQXFCO1FBQzlCLElBQUksRUFBRSxLQUFLO1FBQ1gsTUFBTSxFQUFFLCtEQUErRDtLQUN4RSxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxpQkFBaUIsRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUM1QixPQUFPLEVBQUUsb0JBQW9CO1FBQzdCLElBQUksRUFBRSxJQUFJO1FBQ1YsTUFBTSxFQUFFLCtEQUErRDtLQUN4RSxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxhQUFhLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDeEIsT0FBTyxFQUFFLGdCQUFnQjtRQUN6QixJQUFJLEVBQUUsSUFBSTtRQUNWLE1BQU0sRUFBRSwrREFBK0Q7S0FDeEUsQ0FBQztDQUNNLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjQuY29yZSB2ZXJzaW9uOiA0LjAuMVxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvcHJlY2lzaW9uLWVzdGltYXRlLXR5cGV8NC4wLjFcclxuXHJcbmltcG9ydCB7IENvZGluZyB9IGZyb20gJy4uL2ZoaXIvQ29kaW5nLmpzJ1xyXG5cclxuLyoqXHJcbiAqIE1ldGhvZCBvZiByZXBvcnRpbmcgdmFyaWFiaWxpdHkgb2YgZXN0aW1hdGVzLCBzdWNoIGFzIGNvbmZpZGVuY2UgaW50ZXJ2YWxzLCBpbnRlcnF1YXJ0aWxlIHJhbmdlIG9yIHN0YW5kYXJkIGRldmlhdGlvbi5cclxuICovXHJcbmV4cG9ydCBjb25zdCBQcmVjaXNpb25Fc3RpbWF0ZVR5cGVDb2RpbmdzID0ge1xyXG4gIC8qKlxyXG4gICAqIENJOiBjb25maWRlbmNlIGludGVydmFsLlxyXG4gICAqL1xyXG4gIENvbmZpZGVuY2VJbnRlcnZhbDogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcImNvbmZpZGVuY2UgaW50ZXJ2YWxcIixcclxuICAgIGNvZGU6IFwiQ0lcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL3ByZWNpc2lvbi1lc3RpbWF0ZS10eXBlXCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogSVFSOiBpbnRlcnF1YXJ0aWxlIHJhbmdlLlxyXG4gICAqL1xyXG4gIEludGVycXVhcnRpbGVSYW5nZTogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcImludGVycXVhcnRpbGUgcmFuZ2VcIixcclxuICAgIGNvZGU6IFwiSVFSXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9wcmVjaXNpb24tZXN0aW1hdGUtdHlwZVwiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIFNEOiBzdGFuZGFyZCBkZXZpYXRpb24uXHJcbiAgICovXHJcbiAgU3RhbmRhcmREZXZpYXRpb246IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJzdGFuZGFyZCBkZXZpYXRpb25cIixcclxuICAgIGNvZGU6IFwiU0RcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL3ByZWNpc2lvbi1lc3RpbWF0ZS10eXBlXCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogU0U6IHN0YW5kYXJkIGVycm9yLlxyXG4gICAqL1xyXG4gIFN0YW5kYXJkRXJyb3I6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJzdGFuZGFyZCBlcnJvclwiLFxyXG4gICAgY29kZTogXCJTRVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vcHJlY2lzaW9uLWVzdGltYXRlLXR5cGVcIixcclxuICB9KSxcclxufSBhcyBjb25zdDtcclxuXHJcbi8qKlxyXG4gKiBNZXRob2Qgb2YgcmVwb3J0aW5nIHZhcmlhYmlsaXR5IG9mIGVzdGltYXRlcywgc3VjaCBhcyBjb25maWRlbmNlIGludGVydmFscywgaW50ZXJxdWFydGlsZSByYW5nZSBvciBzdGFuZGFyZCBkZXZpYXRpb24uXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBQcmVjaXNpb25Fc3RpbWF0ZVR5cGVDb2RpbmdUeXBlID0gdHlwZW9mIFByZWNpc2lvbkVzdGltYXRlVHlwZUNvZGluZ3M7XHJcbiJdfQ==