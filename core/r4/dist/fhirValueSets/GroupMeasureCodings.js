// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/group-measure|4.0.1
import { Coding } from '../fhir/Coding.js';
/**
 * Possible group measure aggregates (E.g. Mean, Median).
 */
export const GroupMeasureCodings = {
    /**
     * mean: Aggregated using Mean of participant values.
     */
    Mean: new Coding({
        display: "Mean",
        code: "mean",
        system: "http://hl7.org/fhir/group-measure",
    }),
    /**
     * mean-of-mean: Aggregated using Mean of study mean values.
     */
    MeanOfStudyMeans: new Coding({
        display: "Mean of Study Means",
        code: "mean-of-mean",
        system: "http://hl7.org/fhir/group-measure",
    }),
    /**
     * mean-of-median: Aggregated using Mean of study median values.
     */
    MeanOfStudyMedins: new Coding({
        display: "Mean of Study Medins",
        code: "mean-of-median",
        system: "http://hl7.org/fhir/group-measure",
    }),
    /**
     * median: Aggregated using Median of participant values.
     */
    Median: new Coding({
        display: "Median",
        code: "median",
        system: "http://hl7.org/fhir/group-measure",
    }),
    /**
     * median-of-mean: Aggregated using Median of study mean values.
     */
    MedianOfStudyMeans: new Coding({
        display: "Median of Study Means",
        code: "median-of-mean",
        system: "http://hl7.org/fhir/group-measure",
    }),
    /**
     * median-of-median: Aggregated using Median of study median values.
     */
    MedianOfStudyMedians: new Coding({
        display: "Median of Study Medians",
        code: "median-of-median",
        system: "http://hl7.org/fhir/group-measure",
    }),
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR3JvdXBNZWFzdXJlQ29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvR3JvdXBNZWFzdXJlQ29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyxrRUFBa0U7QUFFbEUsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLG1CQUFtQixDQUFBO0FBRTFDOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sbUJBQW1CLEdBQUc7SUFDakM7O09BRUc7SUFDSCxJQUFJLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDZixPQUFPLEVBQUUsTUFBTTtRQUNmLElBQUksRUFBRSxNQUFNO1FBQ1osTUFBTSxFQUFFLG1DQUFtQztLQUM1QyxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxnQkFBZ0IsRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUMzQixPQUFPLEVBQUUscUJBQXFCO1FBQzlCLElBQUksRUFBRSxjQUFjO1FBQ3BCLE1BQU0sRUFBRSxtQ0FBbUM7S0FDNUMsQ0FBQztJQUNGOztPQUVHO0lBQ0gsaUJBQWlCLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDNUIsT0FBTyxFQUFFLHNCQUFzQjtRQUMvQixJQUFJLEVBQUUsZ0JBQWdCO1FBQ3RCLE1BQU0sRUFBRSxtQ0FBbUM7S0FDNUMsQ0FBQztJQUNGOztPQUVHO0lBQ0gsTUFBTSxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ2pCLE9BQU8sRUFBRSxRQUFRO1FBQ2pCLElBQUksRUFBRSxRQUFRO1FBQ2QsTUFBTSxFQUFFLG1DQUFtQztLQUM1QyxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxrQkFBa0IsRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUM3QixPQUFPLEVBQUUsdUJBQXVCO1FBQ2hDLElBQUksRUFBRSxnQkFBZ0I7UUFDdEIsTUFBTSxFQUFFLG1DQUFtQztLQUM1QyxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxvQkFBb0IsRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUMvQixPQUFPLEVBQUUseUJBQXlCO1FBQ2xDLElBQUksRUFBRSxrQkFBa0I7UUFDeEIsTUFBTSxFQUFFLG1DQUFtQztLQUM1QyxDQUFDO0NBQ00sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNC5jb3JlIHZlcnNpb246IDQuMC4xXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9ncm91cC1tZWFzdXJlfDQuMC4xXHJcblxyXG5pbXBvcnQgeyBDb2RpbmcgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiBQb3NzaWJsZSBncm91cCBtZWFzdXJlIGFnZ3JlZ2F0ZXMgKEUuZy4gTWVhbiwgTWVkaWFuKS5cclxuICovXHJcbmV4cG9ydCBjb25zdCBHcm91cE1lYXN1cmVDb2RpbmdzID0ge1xyXG4gIC8qKlxyXG4gICAqIG1lYW46IEFnZ3JlZ2F0ZWQgdXNpbmcgTWVhbiBvZiBwYXJ0aWNpcGFudCB2YWx1ZXMuXHJcbiAgICovXHJcbiAgTWVhbjogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIk1lYW5cIixcclxuICAgIGNvZGU6IFwibWVhblwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvZ3JvdXAtbWVhc3VyZVwiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIG1lYW4tb2YtbWVhbjogQWdncmVnYXRlZCB1c2luZyBNZWFuIG9mIHN0dWR5IG1lYW4gdmFsdWVzLlxyXG4gICAqL1xyXG4gIE1lYW5PZlN0dWR5TWVhbnM6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJNZWFuIG9mIFN0dWR5IE1lYW5zXCIsXHJcbiAgICBjb2RlOiBcIm1lYW4tb2YtbWVhblwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvZ3JvdXAtbWVhc3VyZVwiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIG1lYW4tb2YtbWVkaWFuOiBBZ2dyZWdhdGVkIHVzaW5nIE1lYW4gb2Ygc3R1ZHkgbWVkaWFuIHZhbHVlcy5cclxuICAgKi9cclxuICBNZWFuT2ZTdHVkeU1lZGluczogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIk1lYW4gb2YgU3R1ZHkgTWVkaW5zXCIsXHJcbiAgICBjb2RlOiBcIm1lYW4tb2YtbWVkaWFuXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9ncm91cC1tZWFzdXJlXCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogbWVkaWFuOiBBZ2dyZWdhdGVkIHVzaW5nIE1lZGlhbiBvZiBwYXJ0aWNpcGFudCB2YWx1ZXMuXHJcbiAgICovXHJcbiAgTWVkaWFuOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiTWVkaWFuXCIsXHJcbiAgICBjb2RlOiBcIm1lZGlhblwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvZ3JvdXAtbWVhc3VyZVwiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIG1lZGlhbi1vZi1tZWFuOiBBZ2dyZWdhdGVkIHVzaW5nIE1lZGlhbiBvZiBzdHVkeSBtZWFuIHZhbHVlcy5cclxuICAgKi9cclxuICBNZWRpYW5PZlN0dWR5TWVhbnM6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJNZWRpYW4gb2YgU3R1ZHkgTWVhbnNcIixcclxuICAgIGNvZGU6IFwibWVkaWFuLW9mLW1lYW5cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2dyb3VwLW1lYXN1cmVcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBtZWRpYW4tb2YtbWVkaWFuOiBBZ2dyZWdhdGVkIHVzaW5nIE1lZGlhbiBvZiBzdHVkeSBtZWRpYW4gdmFsdWVzLlxyXG4gICAqL1xyXG4gIE1lZGlhbk9mU3R1ZHlNZWRpYW5zOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiTWVkaWFuIG9mIFN0dWR5IE1lZGlhbnNcIixcclxuICAgIGNvZGU6IFwibWVkaWFuLW9mLW1lZGlhblwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvZ3JvdXAtbWVhc3VyZVwiLFxyXG4gIH0pLFxyXG59IGFzIGNvbnN0O1xyXG5cclxuLyoqXHJcbiAqIFBvc3NpYmxlIGdyb3VwIG1lYXN1cmUgYWdncmVnYXRlcyAoRS5nLiBNZWFuLCBNZWRpYW4pLlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgR3JvdXBNZWFzdXJlQ29kaW5nVHlwZSA9IHR5cGVvZiBHcm91cE1lYXN1cmVDb2RpbmdzO1xyXG4iXX0=