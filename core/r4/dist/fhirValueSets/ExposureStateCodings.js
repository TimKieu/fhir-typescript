// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/exposure-state|4.0.1
import { Coding } from '../fhir/Coding.js';
/**
 * Whether the results by exposure is describing the results for the primary exposure of interest (exposure) or the alternative state (exposureAlternative).
 */
export const ExposureStateCodings = {
    /**
     * exposure: used when the results by exposure is describing the results for the primary exposure of interest.
     */
    Exposure: new Coding({
        display: "Exposure",
        code: "exposure",
        system: "http://hl7.org/fhir/exposure-state",
    }),
    /**
     * exposure-alternative: used when the results by exposure is describing the results for the alternative exposure state, control state or comparator state.
     */
    ExposureAlternative: new Coding({
        display: "Exposure Alternative",
        code: "exposure-alternative",
        system: "http://hl7.org/fhir/exposure-state",
    }),
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRXhwb3N1cmVTdGF0ZUNvZGluZ3MuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL0V4cG9zdXJlU3RhdGVDb2RpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQiwrQ0FBK0M7QUFDL0Msa0NBQWtDO0FBQ2xDLG1FQUFtRTtBQUVuRSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sbUJBQW1CLENBQUE7QUFFMUM7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxvQkFBb0IsR0FBRztJQUNsQzs7T0FFRztJQUNILFFBQVEsRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUNuQixPQUFPLEVBQUUsVUFBVTtRQUNuQixJQUFJLEVBQUUsVUFBVTtRQUNoQixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDLENBQUM7SUFDRjs7T0FFRztJQUNILG1CQUFtQixFQUFFLElBQUksTUFBTSxDQUFDO1FBQzlCLE9BQU8sRUFBRSxzQkFBc0I7UUFDL0IsSUFBSSxFQUFFLHNCQUFzQjtRQUM1QixNQUFNLEVBQUUsb0NBQW9DO0tBQzdDLENBQUM7Q0FDTSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0LmNvcmUgdmVyc2lvbjogNC4wLjFcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L2V4cG9zdXJlLXN0YXRlfDQuMC4xXHJcblxyXG5pbXBvcnQgeyBDb2RpbmcgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiBXaGV0aGVyIHRoZSByZXN1bHRzIGJ5IGV4cG9zdXJlIGlzIGRlc2NyaWJpbmcgdGhlIHJlc3VsdHMgZm9yIHRoZSBwcmltYXJ5IGV4cG9zdXJlIG9mIGludGVyZXN0IChleHBvc3VyZSkgb3IgdGhlIGFsdGVybmF0aXZlIHN0YXRlIChleHBvc3VyZUFsdGVybmF0aXZlKS5cclxuICovXHJcbmV4cG9ydCBjb25zdCBFeHBvc3VyZVN0YXRlQ29kaW5ncyA9IHtcclxuICAvKipcclxuICAgKiBleHBvc3VyZTogdXNlZCB3aGVuIHRoZSByZXN1bHRzIGJ5IGV4cG9zdXJlIGlzIGRlc2NyaWJpbmcgdGhlIHJlc3VsdHMgZm9yIHRoZSBwcmltYXJ5IGV4cG9zdXJlIG9mIGludGVyZXN0LlxyXG4gICAqL1xyXG4gIEV4cG9zdXJlOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiRXhwb3N1cmVcIixcclxuICAgIGNvZGU6IFwiZXhwb3N1cmVcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2V4cG9zdXJlLXN0YXRlXCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogZXhwb3N1cmUtYWx0ZXJuYXRpdmU6IHVzZWQgd2hlbiB0aGUgcmVzdWx0cyBieSBleHBvc3VyZSBpcyBkZXNjcmliaW5nIHRoZSByZXN1bHRzIGZvciB0aGUgYWx0ZXJuYXRpdmUgZXhwb3N1cmUgc3RhdGUsIGNvbnRyb2wgc3RhdGUgb3IgY29tcGFyYXRvciBzdGF0ZS5cclxuICAgKi9cclxuICBFeHBvc3VyZUFsdGVybmF0aXZlOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiRXhwb3N1cmUgQWx0ZXJuYXRpdmVcIixcclxuICAgIGNvZGU6IFwiZXhwb3N1cmUtYWx0ZXJuYXRpdmVcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2V4cG9zdXJlLXN0YXRlXCIsXHJcbiAgfSksXHJcbn0gYXMgY29uc3Q7XHJcblxyXG4vKipcclxuICogV2hldGhlciB0aGUgcmVzdWx0cyBieSBleHBvc3VyZSBpcyBkZXNjcmliaW5nIHRoZSByZXN1bHRzIGZvciB0aGUgcHJpbWFyeSBleHBvc3VyZSBvZiBpbnRlcmVzdCAoZXhwb3N1cmUpIG9yIHRoZSBhbHRlcm5hdGl2ZSBzdGF0ZSAoZXhwb3N1cmVBbHRlcm5hdGl2ZSkuXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBFeHBvc3VyZVN0YXRlQ29kaW5nVHlwZSA9IHR5cGVvZiBFeHBvc3VyZVN0YXRlQ29kaW5ncztcclxuIl19