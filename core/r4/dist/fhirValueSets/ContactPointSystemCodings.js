// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/contact-point-system|4.0.1
import { Coding } from '../fhir/Coding.js';
/**
 * Telecommunications form for contact point.
 */
export const ContactPointSystemCodings = {
    /**
     * email: The value is an email address.
     */
    Email: new Coding({
        display: "Email",
        code: "email",
        system: "http://hl7.org/fhir/contact-point-system",
    }),
    /**
     * fax: The value is a fax machine. Use of full international numbers starting with + is recommended to enable automatic dialing support but not required.
     */
    Fax: new Coding({
        display: "Fax",
        code: "fax",
        system: "http://hl7.org/fhir/contact-point-system",
    }),
    /**
     * other: A contact that is not a phone, fax, page or email address and is not expressible as a URL.  E.g. Internal mail address.  This SHOULD NOT be used for contacts that are expressible as a URL (e.g. Skype, Twitter, Facebook, etc.)  Extensions may be used to distinguish "other" contact types.
     */
    Other: new Coding({
        display: "Other",
        code: "other",
        system: "http://hl7.org/fhir/contact-point-system",
    }),
    /**
     * pager: The value is a pager number. These may be local pager numbers that are only usable on a particular pager system.
     */
    Pager: new Coding({
        display: "Pager",
        code: "pager",
        system: "http://hl7.org/fhir/contact-point-system",
    }),
    /**
     * phone: The value is a telephone number used for voice calls. Use of full international numbers starting with + is recommended to enable automatic dialing support but not required.
     */
    Phone: new Coding({
        display: "Phone",
        code: "phone",
        system: "http://hl7.org/fhir/contact-point-system",
    }),
    /**
     * sms: A contact that can be used for sending an sms message (e.g. mobile phones, some landlines).
     */
    SMS: new Coding({
        display: "SMS",
        code: "sms",
        system: "http://hl7.org/fhir/contact-point-system",
    }),
    /**
     * url: A contact that is not a phone, fax, pager or email address and is expressed as a URL.  This is intended for various institutional or personal contacts including web sites, blogs, Skype, Twitter, Facebook, etc. Do not use for email addresses.
     */
    URL: new Coding({
        display: "URL",
        code: "url",
        system: "http://hl7.org/fhir/contact-point-system",
    }),
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29udGFjdFBvaW50U3lzdGVtQ29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvQ29udGFjdFBvaW50U3lzdGVtQ29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyx5RUFBeUU7QUFFekUsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLG1CQUFtQixDQUFBO0FBRTFDOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0seUJBQXlCLEdBQUc7SUFDdkM7O09BRUc7SUFDSCxLQUFLLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDaEIsT0FBTyxFQUFFLE9BQU87UUFDaEIsSUFBSSxFQUFFLE9BQU87UUFDYixNQUFNLEVBQUUsMENBQTBDO0tBQ25ELENBQUM7SUFDRjs7T0FFRztJQUNILEdBQUcsRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUNkLE9BQU8sRUFBRSxLQUFLO1FBQ2QsSUFBSSxFQUFFLEtBQUs7UUFDWCxNQUFNLEVBQUUsMENBQTBDO0tBQ25ELENBQUM7SUFDRjs7T0FFRztJQUNILEtBQUssRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUNoQixPQUFPLEVBQUUsT0FBTztRQUNoQixJQUFJLEVBQUUsT0FBTztRQUNiLE1BQU0sRUFBRSwwQ0FBMEM7S0FDbkQsQ0FBQztJQUNGOztPQUVHO0lBQ0gsS0FBSyxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ2hCLE9BQU8sRUFBRSxPQUFPO1FBQ2hCLElBQUksRUFBRSxPQUFPO1FBQ2IsTUFBTSxFQUFFLDBDQUEwQztLQUNuRCxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxLQUFLLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDaEIsT0FBTyxFQUFFLE9BQU87UUFDaEIsSUFBSSxFQUFFLE9BQU87UUFDYixNQUFNLEVBQUUsMENBQTBDO0tBQ25ELENBQUM7SUFDRjs7T0FFRztJQUNILEdBQUcsRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUNkLE9BQU8sRUFBRSxLQUFLO1FBQ2QsSUFBSSxFQUFFLEtBQUs7UUFDWCxNQUFNLEVBQUUsMENBQTBDO0tBQ25ELENBQUM7SUFDRjs7T0FFRztJQUNILEdBQUcsRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUNkLE9BQU8sRUFBRSxLQUFLO1FBQ2QsSUFBSSxFQUFFLEtBQUs7UUFDWCxNQUFNLEVBQUUsMENBQTBDO0tBQ25ELENBQUM7Q0FDTSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0LmNvcmUgdmVyc2lvbjogNC4wLjFcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L2NvbnRhY3QtcG9pbnQtc3lzdGVtfDQuMC4xXHJcblxyXG5pbXBvcnQgeyBDb2RpbmcgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiBUZWxlY29tbXVuaWNhdGlvbnMgZm9ybSBmb3IgY29udGFjdCBwb2ludC5cclxuICovXHJcbmV4cG9ydCBjb25zdCBDb250YWN0UG9pbnRTeXN0ZW1Db2RpbmdzID0ge1xyXG4gIC8qKlxyXG4gICAqIGVtYWlsOiBUaGUgdmFsdWUgaXMgYW4gZW1haWwgYWRkcmVzcy5cclxuICAgKi9cclxuICBFbWFpbDogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIkVtYWlsXCIsXHJcbiAgICBjb2RlOiBcImVtYWlsXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9jb250YWN0LXBvaW50LXN5c3RlbVwiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIGZheDogVGhlIHZhbHVlIGlzIGEgZmF4IG1hY2hpbmUuIFVzZSBvZiBmdWxsIGludGVybmF0aW9uYWwgbnVtYmVycyBzdGFydGluZyB3aXRoICsgaXMgcmVjb21tZW5kZWQgdG8gZW5hYmxlIGF1dG9tYXRpYyBkaWFsaW5nIHN1cHBvcnQgYnV0IG5vdCByZXF1aXJlZC5cclxuICAgKi9cclxuICBGYXg6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJGYXhcIixcclxuICAgIGNvZGU6IFwiZmF4XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9jb250YWN0LXBvaW50LXN5c3RlbVwiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIG90aGVyOiBBIGNvbnRhY3QgdGhhdCBpcyBub3QgYSBwaG9uZSwgZmF4LCBwYWdlIG9yIGVtYWlsIGFkZHJlc3MgYW5kIGlzIG5vdCBleHByZXNzaWJsZSBhcyBhIFVSTC4gIEUuZy4gSW50ZXJuYWwgbWFpbCBhZGRyZXNzLiAgVGhpcyBTSE9VTEQgTk9UIGJlIHVzZWQgZm9yIGNvbnRhY3RzIHRoYXQgYXJlIGV4cHJlc3NpYmxlIGFzIGEgVVJMIChlLmcuIFNreXBlLCBUd2l0dGVyLCBGYWNlYm9vaywgZXRjLikgIEV4dGVuc2lvbnMgbWF5IGJlIHVzZWQgdG8gZGlzdGluZ3Vpc2ggXCJvdGhlclwiIGNvbnRhY3QgdHlwZXMuXHJcbiAgICovXHJcbiAgT3RoZXI6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJPdGhlclwiLFxyXG4gICAgY29kZTogXCJvdGhlclwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvY29udGFjdC1wb2ludC1zeXN0ZW1cIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBwYWdlcjogVGhlIHZhbHVlIGlzIGEgcGFnZXIgbnVtYmVyLiBUaGVzZSBtYXkgYmUgbG9jYWwgcGFnZXIgbnVtYmVycyB0aGF0IGFyZSBvbmx5IHVzYWJsZSBvbiBhIHBhcnRpY3VsYXIgcGFnZXIgc3lzdGVtLlxyXG4gICAqL1xyXG4gIFBhZ2VyOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiUGFnZXJcIixcclxuICAgIGNvZGU6IFwicGFnZXJcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2NvbnRhY3QtcG9pbnQtc3lzdGVtXCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogcGhvbmU6IFRoZSB2YWx1ZSBpcyBhIHRlbGVwaG9uZSBudW1iZXIgdXNlZCBmb3Igdm9pY2UgY2FsbHMuIFVzZSBvZiBmdWxsIGludGVybmF0aW9uYWwgbnVtYmVycyBzdGFydGluZyB3aXRoICsgaXMgcmVjb21tZW5kZWQgdG8gZW5hYmxlIGF1dG9tYXRpYyBkaWFsaW5nIHN1cHBvcnQgYnV0IG5vdCByZXF1aXJlZC5cclxuICAgKi9cclxuICBQaG9uZTogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIlBob25lXCIsXHJcbiAgICBjb2RlOiBcInBob25lXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9jb250YWN0LXBvaW50LXN5c3RlbVwiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIHNtczogQSBjb250YWN0IHRoYXQgY2FuIGJlIHVzZWQgZm9yIHNlbmRpbmcgYW4gc21zIG1lc3NhZ2UgKGUuZy4gbW9iaWxlIHBob25lcywgc29tZSBsYW5kbGluZXMpLlxyXG4gICAqL1xyXG4gIFNNUzogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIlNNU1wiLFxyXG4gICAgY29kZTogXCJzbXNcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL2NvbnRhY3QtcG9pbnQtc3lzdGVtXCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogdXJsOiBBIGNvbnRhY3QgdGhhdCBpcyBub3QgYSBwaG9uZSwgZmF4LCBwYWdlciBvciBlbWFpbCBhZGRyZXNzIGFuZCBpcyBleHByZXNzZWQgYXMgYSBVUkwuICBUaGlzIGlzIGludGVuZGVkIGZvciB2YXJpb3VzIGluc3RpdHV0aW9uYWwgb3IgcGVyc29uYWwgY29udGFjdHMgaW5jbHVkaW5nIHdlYiBzaXRlcywgYmxvZ3MsIFNreXBlLCBUd2l0dGVyLCBGYWNlYm9vaywgZXRjLiBEbyBub3QgdXNlIGZvciBlbWFpbCBhZGRyZXNzZXMuXHJcbiAgICovXHJcbiAgVVJMOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiVVJMXCIsXHJcbiAgICBjb2RlOiBcInVybFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvY29udGFjdC1wb2ludC1zeXN0ZW1cIixcclxuICB9KSxcclxufSBhcyBjb25zdDtcclxuXHJcbi8qKlxyXG4gKiBUZWxlY29tbXVuaWNhdGlvbnMgZm9ybSBmb3IgY29udGFjdCBwb2ludC5cclxuICovXHJcbmV4cG9ydCB0eXBlIENvbnRhY3RQb2ludFN5c3RlbUNvZGluZ1R5cGUgPSB0eXBlb2YgQ29udGFjdFBvaW50U3lzdGVtQ29kaW5ncztcclxuIl19