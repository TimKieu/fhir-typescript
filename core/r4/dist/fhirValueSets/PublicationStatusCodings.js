// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/publication-status|4.0.1
/**
 * The lifecycle status of an artifact.
 */
export const PublicationStatusCodings = {
    /**
     * active: This resource is ready for normal use.
     */
    Active: {
        display: "Active",
        code: "active",
        system: "http://hl7.org/fhir/publication-status",
    },
    /**
     * draft: This resource is still under development and is not yet considered to be ready for normal use.
     */
    Draft: {
        display: "Draft",
        code: "draft",
        system: "http://hl7.org/fhir/publication-status",
    },
    /**
     * retired: This resource has been withdrawn or superseded and should no longer be used.
     */
    Retired: {
        display: "Retired",
        code: "retired",
        system: "http://hl7.org/fhir/publication-status",
    },
    /**
     * unknown: The authoring system does not know which of the status values currently applies for this resource.  Note: This concept is not to be used for "other" - one of the listed statuses is presumed to apply, it's just not known which one.
     */
    Unknown: {
        display: "Unknown",
        code: "unknown",
        system: "http://hl7.org/fhir/publication-status",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUHVibGljYXRpb25TdGF0dXNDb2RpbmdzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9QdWJsaWNhdGlvblN0YXR1c0NvZGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLCtDQUErQztBQUMvQyxrQ0FBa0M7QUFDbEMsdUVBQXVFO0FBMEJ2RTs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLHdCQUF3QixHQUErQjtJQUNsRTs7T0FFRztJQUNILE1BQU0sRUFBRTtRQUNOLE9BQU8sRUFBRSxRQUFRO1FBQ2pCLElBQUksRUFBRSxRQUFRO1FBQ2QsTUFBTSxFQUFFLHdDQUF3QztLQUNqRDtJQUNEOztPQUVHO0lBQ0gsS0FBSyxFQUFFO1FBQ0wsT0FBTyxFQUFFLE9BQU87UUFDaEIsSUFBSSxFQUFFLE9BQU87UUFDYixNQUFNLEVBQUUsd0NBQXdDO0tBQ2pEO0lBQ0Q7O09BRUc7SUFDSCxPQUFPLEVBQUU7UUFDUCxPQUFPLEVBQUUsU0FBUztRQUNsQixJQUFJLEVBQUUsU0FBUztRQUNmLE1BQU0sRUFBRSx3Q0FBd0M7S0FDakQ7SUFDRDs7T0FFRztJQUNILE9BQU8sRUFBRTtRQUNQLE9BQU8sRUFBRSxTQUFTO1FBQ2xCLElBQUksRUFBRSxTQUFTO1FBQ2YsTUFBTSxFQUFFLHdDQUF3QztLQUNqRDtDQUNPLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjQuY29yZSB2ZXJzaW9uOiA0LjAuMVxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvcHVibGljYXRpb24tc3RhdHVzfDQuMC4xXHJcblxyXG5pbXBvcnQgeyBDb2RpbmdBcmdzIH0gZnJvbSAnLi4vZmhpci9Db2RpbmcuanMnXHJcblxyXG4vKipcclxuICogVGhlIGxpZmVjeWNsZSBzdGF0dXMgb2YgYW4gYXJ0aWZhY3QuXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBQdWJsaWNhdGlvblN0YXR1c0NvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogYWN0aXZlOiBUaGlzIHJlc291cmNlIGlzIHJlYWR5IGZvciBub3JtYWwgdXNlLlxyXG4gICAqL1xyXG4gIEFjdGl2ZTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBkcmFmdDogVGhpcyByZXNvdXJjZSBpcyBzdGlsbCB1bmRlciBkZXZlbG9wbWVudCBhbmQgaXMgbm90IHlldCBjb25zaWRlcmVkIHRvIGJlIHJlYWR5IGZvciBub3JtYWwgdXNlLlxyXG4gICAqL1xyXG4gIERyYWZ0OiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIHJldGlyZWQ6IFRoaXMgcmVzb3VyY2UgaGFzIGJlZW4gd2l0aGRyYXduIG9yIHN1cGVyc2VkZWQgYW5kIHNob3VsZCBubyBsb25nZXIgYmUgdXNlZC5cclxuICAgKi9cclxuICBSZXRpcmVkOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIHVua25vd246IFRoZSBhdXRob3Jpbmcgc3lzdGVtIGRvZXMgbm90IGtub3cgd2hpY2ggb2YgdGhlIHN0YXR1cyB2YWx1ZXMgY3VycmVudGx5IGFwcGxpZXMgZm9yIHRoaXMgcmVzb3VyY2UuICBOb3RlOiBUaGlzIGNvbmNlcHQgaXMgbm90IHRvIGJlIHVzZWQgZm9yIFwib3RoZXJcIiAtIG9uZSBvZiB0aGUgbGlzdGVkIHN0YXR1c2VzIGlzIHByZXN1bWVkIHRvIGFwcGx5LCBpdCdzIGp1c3Qgbm90IGtub3duIHdoaWNoIG9uZS5cclxuICAgKi9cclxuICBVbmtub3duOiBDb2RpbmdBcmdzO1xyXG59XHJcblxyXG4vKipcclxuICogVGhlIGxpZmVjeWNsZSBzdGF0dXMgb2YgYW4gYXJ0aWZhY3QuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgUHVibGljYXRpb25TdGF0dXNDb2RpbmdzOlB1YmxpY2F0aW9uU3RhdHVzQ29kaW5nVHlwZSA9IHtcclxuICAvKipcclxuICAgKiBhY3RpdmU6IFRoaXMgcmVzb3VyY2UgaXMgcmVhZHkgZm9yIG5vcm1hbCB1c2UuXHJcbiAgICovXHJcbiAgQWN0aXZlOiB7XHJcbiAgICBkaXNwbGF5OiBcIkFjdGl2ZVwiLFxyXG4gICAgY29kZTogXCJhY3RpdmVcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3B1YmxpY2F0aW9uLXN0YXR1c1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogZHJhZnQ6IFRoaXMgcmVzb3VyY2UgaXMgc3RpbGwgdW5kZXIgZGV2ZWxvcG1lbnQgYW5kIGlzIG5vdCB5ZXQgY29uc2lkZXJlZCB0byBiZSByZWFkeSBmb3Igbm9ybWFsIHVzZS5cclxuICAgKi9cclxuICBEcmFmdDoge1xyXG4gICAgZGlzcGxheTogXCJEcmFmdFwiLFxyXG4gICAgY29kZTogXCJkcmFmdFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvcHVibGljYXRpb24tc3RhdHVzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiByZXRpcmVkOiBUaGlzIHJlc291cmNlIGhhcyBiZWVuIHdpdGhkcmF3biBvciBzdXBlcnNlZGVkIGFuZCBzaG91bGQgbm8gbG9uZ2VyIGJlIHVzZWQuXHJcbiAgICovXHJcbiAgUmV0aXJlZDoge1xyXG4gICAgZGlzcGxheTogXCJSZXRpcmVkXCIsXHJcbiAgICBjb2RlOiBcInJldGlyZWRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3B1YmxpY2F0aW9uLXN0YXR1c1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogdW5rbm93bjogVGhlIGF1dGhvcmluZyBzeXN0ZW0gZG9lcyBub3Qga25vdyB3aGljaCBvZiB0aGUgc3RhdHVzIHZhbHVlcyBjdXJyZW50bHkgYXBwbGllcyBmb3IgdGhpcyByZXNvdXJjZS4gIE5vdGU6IFRoaXMgY29uY2VwdCBpcyBub3QgdG8gYmUgdXNlZCBmb3IgXCJvdGhlclwiIC0gb25lIG9mIHRoZSBsaXN0ZWQgc3RhdHVzZXMgaXMgcHJlc3VtZWQgdG8gYXBwbHksIGl0J3MganVzdCBub3Qga25vd24gd2hpY2ggb25lLlxyXG4gICAqL1xyXG4gIFVua25vd246IHtcclxuICAgIGRpc3BsYXk6IFwiVW5rbm93blwiLFxyXG4gICAgY29kZTogXCJ1bmtub3duXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9wdWJsaWNhdGlvbi1zdGF0dXNcIixcclxuICB9LFxyXG59IGFzIGNvbnN0O1xyXG4iXX0=