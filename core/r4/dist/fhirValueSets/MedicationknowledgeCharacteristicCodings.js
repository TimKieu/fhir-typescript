// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/medicationknowledge-characteristic|4.0.1
import { Coding } from '../fhir/Coding.js';
/**
 * MedicationKnowledge Characteristic Codes
 */
export const MedicationknowledgeCharacteristicCodings = {
    /**
     * coating: Description of the coating of the product
     */
    Coating: new Coding({
        display: "Coating",
        code: "coating",
        system: "http://terminology.hl7.org/CodeSystem/medicationknowledge-characteristic",
    }),
    /**
     * color: Description of the color of the product
     */
    Color: new Coding({
        display: "Color",
        code: "color",
        system: "http://terminology.hl7.org/CodeSystem/medicationknowledge-characteristic",
    }),
    /**
     * imprintcd: Identyifying marks on product
     */
    ImprintCode: new Coding({
        display: "Imprint Code",
        code: "imprintcd",
        system: "http://terminology.hl7.org/CodeSystem/medicationknowledge-characteristic",
    }),
    /**
     * logo: Description of the Logo of the product
     */
    Logo: new Coding({
        display: "Logo",
        code: "logo",
        system: "http://terminology.hl7.org/CodeSystem/medicationknowledge-characteristic",
    }),
    /**
     * scoring: Description of the scoring of the product
     */
    Scoring: new Coding({
        display: "Scoring",
        code: "scoring",
        system: "http://terminology.hl7.org/CodeSystem/medicationknowledge-characteristic",
    }),
    /**
     * shape: Description of the shape of the product
     */
    Shape: new Coding({
        display: "Shape",
        code: "shape",
        system: "http://terminology.hl7.org/CodeSystem/medicationknowledge-characteristic",
    }),
    /**
     * size: Description of size of the product
     */
    Size: new Coding({
        display: "Size",
        code: "size",
        system: "http://terminology.hl7.org/CodeSystem/medicationknowledge-characteristic",
    }),
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWVkaWNhdGlvbmtub3dsZWRnZUNoYXJhY3RlcmlzdGljQ29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvTWVkaWNhdGlvbmtub3dsZWRnZUNoYXJhY3RlcmlzdGljQ29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyx1RkFBdUY7QUFFdkYsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLG1CQUFtQixDQUFBO0FBRTFDOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sd0NBQXdDLEdBQUc7SUFDdEQ7O09BRUc7SUFDSCxPQUFPLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDbEIsT0FBTyxFQUFFLFNBQVM7UUFDbEIsSUFBSSxFQUFFLFNBQVM7UUFDZixNQUFNLEVBQUUsMEVBQTBFO0tBQ25GLENBQUM7SUFDRjs7T0FFRztJQUNILEtBQUssRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUNoQixPQUFPLEVBQUUsT0FBTztRQUNoQixJQUFJLEVBQUUsT0FBTztRQUNiLE1BQU0sRUFBRSwwRUFBMEU7S0FDbkYsQ0FBQztJQUNGOztPQUVHO0lBQ0gsV0FBVyxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ3RCLE9BQU8sRUFBRSxjQUFjO1FBQ3ZCLElBQUksRUFBRSxXQUFXO1FBQ2pCLE1BQU0sRUFBRSwwRUFBMEU7S0FDbkYsQ0FBQztJQUNGOztPQUVHO0lBQ0gsSUFBSSxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ2YsT0FBTyxFQUFFLE1BQU07UUFDZixJQUFJLEVBQUUsTUFBTTtRQUNaLE1BQU0sRUFBRSwwRUFBMEU7S0FDbkYsQ0FBQztJQUNGOztPQUVHO0lBQ0gsT0FBTyxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ2xCLE9BQU8sRUFBRSxTQUFTO1FBQ2xCLElBQUksRUFBRSxTQUFTO1FBQ2YsTUFBTSxFQUFFLDBFQUEwRTtLQUNuRixDQUFDO0lBQ0Y7O09BRUc7SUFDSCxLQUFLLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDaEIsT0FBTyxFQUFFLE9BQU87UUFDaEIsSUFBSSxFQUFFLE9BQU87UUFDYixNQUFNLEVBQUUsMEVBQTBFO0tBQ25GLENBQUM7SUFDRjs7T0FFRztJQUNILElBQUksRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUNmLE9BQU8sRUFBRSxNQUFNO1FBQ2YsSUFBSSxFQUFFLE1BQU07UUFDWixNQUFNLEVBQUUsMEVBQTBFO0tBQ25GLENBQUM7Q0FDTSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0LmNvcmUgdmVyc2lvbjogNC4wLjFcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L21lZGljYXRpb25rbm93bGVkZ2UtY2hhcmFjdGVyaXN0aWN8NC4wLjFcclxuXHJcbmltcG9ydCB7IENvZGluZyB9IGZyb20gJy4uL2ZoaXIvQ29kaW5nLmpzJ1xyXG5cclxuLyoqXHJcbiAqIE1lZGljYXRpb25Lbm93bGVkZ2UgQ2hhcmFjdGVyaXN0aWMgQ29kZXNcclxuICovXHJcbmV4cG9ydCBjb25zdCBNZWRpY2F0aW9ua25vd2xlZGdlQ2hhcmFjdGVyaXN0aWNDb2RpbmdzID0ge1xyXG4gIC8qKlxyXG4gICAqIGNvYXRpbmc6IERlc2NyaXB0aW9uIG9mIHRoZSBjb2F0aW5nIG9mIHRoZSBwcm9kdWN0XHJcbiAgICovXHJcbiAgQ29hdGluZzogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIkNvYXRpbmdcIixcclxuICAgIGNvZGU6IFwiY29hdGluZ1wiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vbWVkaWNhdGlvbmtub3dsZWRnZS1jaGFyYWN0ZXJpc3RpY1wiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIGNvbG9yOiBEZXNjcmlwdGlvbiBvZiB0aGUgY29sb3Igb2YgdGhlIHByb2R1Y3RcclxuICAgKi9cclxuICBDb2xvcjogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIkNvbG9yXCIsXHJcbiAgICBjb2RlOiBcImNvbG9yXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9tZWRpY2F0aW9ua25vd2xlZGdlLWNoYXJhY3RlcmlzdGljXCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogaW1wcmludGNkOiBJZGVudHlpZnlpbmcgbWFya3Mgb24gcHJvZHVjdFxyXG4gICAqL1xyXG4gIEltcHJpbnRDb2RlOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiSW1wcmludCBDb2RlXCIsXHJcbiAgICBjb2RlOiBcImltcHJpbnRjZFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vbWVkaWNhdGlvbmtub3dsZWRnZS1jaGFyYWN0ZXJpc3RpY1wiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIGxvZ286IERlc2NyaXB0aW9uIG9mIHRoZSBMb2dvIG9mIHRoZSBwcm9kdWN0XHJcbiAgICovXHJcbiAgTG9nbzogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIkxvZ29cIixcclxuICAgIGNvZGU6IFwibG9nb1wiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vbWVkaWNhdGlvbmtub3dsZWRnZS1jaGFyYWN0ZXJpc3RpY1wiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIHNjb3Jpbmc6IERlc2NyaXB0aW9uIG9mIHRoZSBzY29yaW5nIG9mIHRoZSBwcm9kdWN0XHJcbiAgICovXHJcbiAgU2NvcmluZzogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIlNjb3JpbmdcIixcclxuICAgIGNvZGU6IFwic2NvcmluZ1wiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vbWVkaWNhdGlvbmtub3dsZWRnZS1jaGFyYWN0ZXJpc3RpY1wiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIHNoYXBlOiBEZXNjcmlwdGlvbiBvZiB0aGUgc2hhcGUgb2YgdGhlIHByb2R1Y3RcclxuICAgKi9cclxuICBTaGFwZTogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIlNoYXBlXCIsXHJcbiAgICBjb2RlOiBcInNoYXBlXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9tZWRpY2F0aW9ua25vd2xlZGdlLWNoYXJhY3RlcmlzdGljXCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogc2l6ZTogRGVzY3JpcHRpb24gb2Ygc2l6ZSBvZiB0aGUgcHJvZHVjdFxyXG4gICAqL1xyXG4gIFNpemU6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJTaXplXCIsXHJcbiAgICBjb2RlOiBcInNpemVcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL21lZGljYXRpb25rbm93bGVkZ2UtY2hhcmFjdGVyaXN0aWNcIixcclxuICB9KSxcclxufSBhcyBjb25zdDtcclxuXHJcbi8qKlxyXG4gKiBNZWRpY2F0aW9uS25vd2xlZGdlIENoYXJhY3RlcmlzdGljIENvZGVzXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBNZWRpY2F0aW9ua25vd2xlZGdlQ2hhcmFjdGVyaXN0aWNDb2RpbmdUeXBlID0gdHlwZW9mIE1lZGljYXRpb25rbm93bGVkZ2VDaGFyYWN0ZXJpc3RpY0NvZGluZ3M7XHJcbiJdfQ==