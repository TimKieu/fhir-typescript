// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://terminology.hl7.org/ValueSet/v2-0371|2.9
/**
 * FHIR Value set/code system definition for HL7 v2 table 0371 ( Additive)
 */
export const V20371Codes = {
    /**
     * Code: ACDA
     */
    ACDSolutionA: "ACDA",
    /**
     * Code: ACDB
     */
    ACDSolutionB: "ACDB",
    /**
     * Code: ACET
     */
    AceticAcid: "ACET",
    /**
     * Code: AMIES
     */
    AmiesTransportMedium: "AMIES",
    /**
     * Code: BACTM
     */
    BacterialTransportMedium: "BACTM",
    /**
     * Code: BF10
     */
    Buffered10PercentFormalin: "BF10",
    /**
     * Code: BOR
     */
    BorateBoricAcid: "BOR",
    /**
     * Code: BOUIN
     */
    BouinQuoteSSolution: "BOUIN",
    /**
     * Code: BSKM
     */
    BufferedSkimMilk: "BSKM",
    /**
     * Code: C32
     */
    VAL32PercentCitrate: "C32",
    /**
     * Code: C38
     */
    VAL38PercentCitrate: "C38",
    /**
     * Code: CARS
     */
    CarsonQuoteSModified10PercentFormalin: "CARS",
    /**
     * Code: CARY
     */
    CaryBlairMedium: "CARY",
    /**
     * Code: CHLTM
     */
    ChlamydiaTransportMedium: "CHLTM",
    /**
     * Code: CTAD
     */
    CTADThisShouldBeSpelledOutIfNotUniversallyUnderstood: "CTAD",
    /**
     * Code: EDTK
     */
    PotassiumKEDTA: "EDTK",
    /**
     * Code: EDTK15
     */
    PotassiumKEDTA15Percent: "EDTK15",
    /**
     * Code: EDTK75
     */
    PotassiumKEDTA75Percent: "EDTK75",
    /**
     * Code: EDTN
     */
    SodiumNaEDTA: "EDTN",
    /**
     * Code: ENT
     */
    EntericBacteriaTransportMedium: "ENT",
    /**
     * Code: ENT+
     */
    EntericPlus: "ENT+",
    /**
     * Code: F10
     */
    VAL10PercentFormalin: "F10",
    /**
     * Code: FDP
     */
    ThrombinNIHSoybeanTrypsinInhibitorFibrinDegradationProducts: "FDP",
    /**
     * Code: FL10
     */
    SodiumFluoride10mg: "FL10",
    /**
     * Code: FL100
     */
    SodiumFluoride100mg: "FL100",
    /**
     * Code: HCL6
     */
    VAL6NHCL: "HCL6",
    /**
     * Code: HEPA
     */
    AmmoniumHeparin: "HEPA",
    /**
     * Code: HEPL
     */
    LithiumLiHeparin: "HEPL",
    /**
     * Code: HEPN
     */
    SodiumNaHeparin: "HEPN",
    /**
     * Code: HNO3
     */
    NitricAcid: "HNO3",
    /**
     * Code: JKM
     */
    JonesKendrickMedium: "JKM",
    /**
     * Code: KARN
     */
    KarnovskyQuoteSFixative: "KARN",
    /**
     * Code: KOX
     */
    PotassiumOxalate: "KOX",
    /**
     * Code: LIA
     */
    LithiumIodoacetate: "LIA",
    /**
     * Code: M4
     */
    M4: "M4",
    /**
     * Code: M4RT
     */
    M4RT: "M4RT",
    /**
     * Code: M5
     */
    M5: "M5",
    /**
     * Code: MICHTM
     */
    MichelQuoteSTransportMedium: "MICHTM",
    /**
     * Code: MMDTM
     */
    MMDTransportMedium: "MMDTM",
    /**
     * Code: NAF
     */
    SodiumFluoride: "NAF",
    /**
     * Code: NAPS
     */
    SodiumPolyanetholSulfonate035PercentIn085PercentSodiumChloride: "NAPS",
    /**
     * Code: NONE
     */
    None: "NONE",
    /**
     * Code: PAGE
     */
    PagesQuoteSSaline: "PAGE",
    /**
     * Code: PHENOL
     */
    Phenol: "PHENOL",
    /**
     * Code: PVA
     */
    PVAPolyvinylalcohol: "PVA",
    /**
     * Code: RLM
     */
    ReaganLoweMedium: "RLM",
    /**
     * Code: SILICA
     */
    SiliceousEarth12Mg: "SILICA",
    /**
     * Code: SPS
     */
    SPSThisShouldBeSpelledOutIfNotUniversallyUnderstood: "SPS",
    /**
     * Code: SST
     */
    SerumSeparatorTubePolymerGel: "SST",
    /**
     * Code: STUTM
     */
    StuartTransportMedium: "STUTM",
    /**
     * Code: THROM
     */
    Thrombin: "THROM",
    /**
     * Code: THYMOL
     */
    Thymol: "THYMOL",
    /**
     * Code: THYO
     */
    ThyoglycollateBroth: "THYO",
    /**
     * Code: TOLU
     */
    Toluene: "TOLU",
    /**
     * Code: URETM
     */
    UreaplasmaTransportMedium: "URETM",
    /**
     * Code: VIRTM
     */
    ViralTransportMedium: "VIRTM",
    /**
     * Code: WEST
     */
    BufferedCitrateWestergrenSedimentationRate: "WEST",
};
//# sourceMappingURL=data:application/json;base64,