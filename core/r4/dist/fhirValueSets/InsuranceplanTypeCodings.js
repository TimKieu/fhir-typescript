// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/insuranceplan-type|4.0.1
import { Coding } from '../fhir/Coding.js';
/**
 * This example value set defines a set of codes that can be used to indicate a type of insurance plan.
 */
export const InsuranceplanTypeCodings = {
    /**
     * Code: dental
     */
    Dental: new Coding({
        display: "Dental",
        code: "dental",
        system: "http://terminology.hl7.org/CodeSystem/insurance-plan-type",
    }),
    /**
     * Code: Drug
     */
    Drug: new Coding({
        display: "Drug",
        code: "Drug",
        system: "http://terminology.hl7.org/CodeSystem/insurance-plan-type",
    }),
    /**
     * Code: home
     */
    HomeHealth: new Coding({
        display: "Home Health",
        code: "home",
        system: "http://terminology.hl7.org/CodeSystem/insurance-plan-type",
    }),
    /**
     * Code: hospice
     */
    Hospice: new Coding({
        display: "Hospice",
        code: "hospice",
        system: "http://terminology.hl7.org/CodeSystem/insurance-plan-type",
    }),
    /**
     * Code: long-term
     */
    LongTermCare: new Coding({
        display: "Long Term Care",
        code: "long-term",
        system: "http://terminology.hl7.org/CodeSystem/insurance-plan-type",
    }),
    /**
     * Code: medical
     */
    Medical: new Coding({
        display: "Medical",
        code: "medical",
        system: "http://terminology.hl7.org/CodeSystem/insurance-plan-type",
    }),
    /**
     * Code: mental
     */
    MentalHealth: new Coding({
        display: "Mental Health",
        code: "mental",
        system: "http://terminology.hl7.org/CodeSystem/insurance-plan-type",
    }),
    /**
     * Code: short-term
     */
    ShortTerm: new Coding({
        display: "Short Term",
        code: "short-term",
        system: "http://terminology.hl7.org/CodeSystem/insurance-plan-type",
    }),
    /**
     * Code: subst-ab
     */
    SubstanceAbuse: new Coding({
        display: "Substance Abuse",
        code: "subst-ab",
        system: "http://terminology.hl7.org/CodeSystem/insurance-plan-type",
    }),
    /**
     * Code: vision
     */
    Vision: new Coding({
        display: "Vision",
        code: "vision",
        system: "http://terminology.hl7.org/CodeSystem/insurance-plan-type",
    }),
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSW5zdXJhbmNlcGxhblR5cGVDb2RpbmdzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9JbnN1cmFuY2VwbGFuVHlwZUNvZGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLCtDQUErQztBQUMvQyxrQ0FBa0M7QUFDbEMsdUVBQXVFO0FBRXZFLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQTtBQUUxQzs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLHdCQUF3QixHQUFHO0lBQ3RDOztPQUVHO0lBQ0gsTUFBTSxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ2pCLE9BQU8sRUFBRSxRQUFRO1FBQ2pCLElBQUksRUFBRSxRQUFRO1FBQ2QsTUFBTSxFQUFFLDJEQUEyRDtLQUNwRSxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxJQUFJLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDZixPQUFPLEVBQUUsTUFBTTtRQUNmLElBQUksRUFBRSxNQUFNO1FBQ1osTUFBTSxFQUFFLDJEQUEyRDtLQUNwRSxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxVQUFVLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDckIsT0FBTyxFQUFFLGFBQWE7UUFDdEIsSUFBSSxFQUFFLE1BQU07UUFDWixNQUFNLEVBQUUsMkRBQTJEO0tBQ3BFLENBQUM7SUFDRjs7T0FFRztJQUNILE9BQU8sRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUNsQixPQUFPLEVBQUUsU0FBUztRQUNsQixJQUFJLEVBQUUsU0FBUztRQUNmLE1BQU0sRUFBRSwyREFBMkQ7S0FDcEUsQ0FBQztJQUNGOztPQUVHO0lBQ0gsWUFBWSxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ3ZCLE9BQU8sRUFBRSxnQkFBZ0I7UUFDekIsSUFBSSxFQUFFLFdBQVc7UUFDakIsTUFBTSxFQUFFLDJEQUEyRDtLQUNwRSxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxPQUFPLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDbEIsT0FBTyxFQUFFLFNBQVM7UUFDbEIsSUFBSSxFQUFFLFNBQVM7UUFDZixNQUFNLEVBQUUsMkRBQTJEO0tBQ3BFLENBQUM7SUFDRjs7T0FFRztJQUNILFlBQVksRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUN2QixPQUFPLEVBQUUsZUFBZTtRQUN4QixJQUFJLEVBQUUsUUFBUTtRQUNkLE1BQU0sRUFBRSwyREFBMkQ7S0FDcEUsQ0FBQztJQUNGOztPQUVHO0lBQ0gsU0FBUyxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ3BCLE9BQU8sRUFBRSxZQUFZO1FBQ3JCLElBQUksRUFBRSxZQUFZO1FBQ2xCLE1BQU0sRUFBRSwyREFBMkQ7S0FDcEUsQ0FBQztJQUNGOztPQUVHO0lBQ0gsY0FBYyxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ3pCLE9BQU8sRUFBRSxpQkFBaUI7UUFDMUIsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLDJEQUEyRDtLQUNwRSxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxNQUFNLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDakIsT0FBTyxFQUFFLFFBQVE7UUFDakIsSUFBSSxFQUFFLFFBQVE7UUFDZCxNQUFNLEVBQUUsMkRBQTJEO0tBQ3BFLENBQUM7Q0FDTSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0LmNvcmUgdmVyc2lvbjogNC4wLjFcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L2luc3VyYW5jZXBsYW4tdHlwZXw0LjAuMVxyXG5cclxuaW1wb3J0IHsgQ29kaW5nIH0gZnJvbSAnLi4vZmhpci9Db2RpbmcuanMnXHJcblxyXG4vKipcclxuICogVGhpcyBleGFtcGxlIHZhbHVlIHNldCBkZWZpbmVzIGEgc2V0IG9mIGNvZGVzIHRoYXQgY2FuIGJlIHVzZWQgdG8gaW5kaWNhdGUgYSB0eXBlIG9mIGluc3VyYW5jZSBwbGFuLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IEluc3VyYW5jZXBsYW5UeXBlQ29kaW5ncyA9IHtcclxuICAvKipcclxuICAgKiBDb2RlOiBkZW50YWxcclxuICAgKi9cclxuICBEZW50YWw6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJEZW50YWxcIixcclxuICAgIGNvZGU6IFwiZGVudGFsXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9pbnN1cmFuY2UtcGxhbi10eXBlXCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogQ29kZTogRHJ1Z1xyXG4gICAqL1xyXG4gIERydWc6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJEcnVnXCIsXHJcbiAgICBjb2RlOiBcIkRydWdcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2luc3VyYW5jZS1wbGFuLXR5cGVcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBDb2RlOiBob21lXHJcbiAgICovXHJcbiAgSG9tZUhlYWx0aDogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIkhvbWUgSGVhbHRoXCIsXHJcbiAgICBjb2RlOiBcImhvbWVcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2luc3VyYW5jZS1wbGFuLXR5cGVcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBDb2RlOiBob3NwaWNlXHJcbiAgICovXHJcbiAgSG9zcGljZTogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIkhvc3BpY2VcIixcclxuICAgIGNvZGU6IFwiaG9zcGljZVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vaW5zdXJhbmNlLXBsYW4tdHlwZVwiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IGxvbmctdGVybVxyXG4gICAqL1xyXG4gIExvbmdUZXJtQ2FyZTogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIkxvbmcgVGVybSBDYXJlXCIsXHJcbiAgICBjb2RlOiBcImxvbmctdGVybVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vaW5zdXJhbmNlLXBsYW4tdHlwZVwiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IG1lZGljYWxcclxuICAgKi9cclxuICBNZWRpY2FsOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiTWVkaWNhbFwiLFxyXG4gICAgY29kZTogXCJtZWRpY2FsXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9pbnN1cmFuY2UtcGxhbi10eXBlXCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogQ29kZTogbWVudGFsXHJcbiAgICovXHJcbiAgTWVudGFsSGVhbHRoOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiTWVudGFsIEhlYWx0aFwiLFxyXG4gICAgY29kZTogXCJtZW50YWxcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2luc3VyYW5jZS1wbGFuLXR5cGVcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBDb2RlOiBzaG9ydC10ZXJtXHJcbiAgICovXHJcbiAgU2hvcnRUZXJtOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiU2hvcnQgVGVybVwiLFxyXG4gICAgY29kZTogXCJzaG9ydC10ZXJtXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9pbnN1cmFuY2UtcGxhbi10eXBlXCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogQ29kZTogc3Vic3QtYWJcclxuICAgKi9cclxuICBTdWJzdGFuY2VBYnVzZTogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIlN1YnN0YW5jZSBBYnVzZVwiLFxyXG4gICAgY29kZTogXCJzdWJzdC1hYlwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vaW5zdXJhbmNlLXBsYW4tdHlwZVwiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IHZpc2lvblxyXG4gICAqL1xyXG4gIFZpc2lvbjogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIlZpc2lvblwiLFxyXG4gICAgY29kZTogXCJ2aXNpb25cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2luc3VyYW5jZS1wbGFuLXR5cGVcIixcclxuICB9KSxcclxufSBhcyBjb25zdDtcclxuXHJcbi8qKlxyXG4gKiBUaGlzIGV4YW1wbGUgdmFsdWUgc2V0IGRlZmluZXMgYSBzZXQgb2YgY29kZXMgdGhhdCBjYW4gYmUgdXNlZCB0byBpbmRpY2F0ZSBhIHR5cGUgb2YgaW5zdXJhbmNlIHBsYW4uXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBJbnN1cmFuY2VwbGFuVHlwZUNvZGluZ1R5cGUgPSB0eXBlb2YgSW5zdXJhbmNlcGxhblR5cGVDb2RpbmdzO1xyXG4iXX0=