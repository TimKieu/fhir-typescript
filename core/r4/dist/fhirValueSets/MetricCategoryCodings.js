// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/metric-category|4.0.1
import { Coding } from '../fhir/Coding.js';
/**
 * Describes the category of the metric.
 */
export const MetricCategoryCodings = {
    /**
     * calculation: DeviceObservations generated for this DeviceMetric are calculated.
     */
    Calculation: new Coding({
        display: "Calculation",
        code: "calculation",
        system: "http://hl7.org/fhir/metric-category",
    }),
    /**
     * measurement: DeviceObservations generated for this DeviceMetric are measured.
     */
    Measurement: new Coding({
        display: "Measurement",
        code: "measurement",
        system: "http://hl7.org/fhir/metric-category",
    }),
    /**
     * setting: DeviceObservations generated for this DeviceMetric is a setting that will influence the behavior of the Device.
     */
    Setting: new Coding({
        display: "Setting",
        code: "setting",
        system: "http://hl7.org/fhir/metric-category",
    }),
    /**
     * unspecified: The category of this DeviceMetric is unspecified.
     */
    Unspecified: new Coding({
        display: "Unspecified",
        code: "unspecified",
        system: "http://hl7.org/fhir/metric-category",
    }),
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWV0cmljQ2F0ZWdvcnlDb2RpbmdzLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpclZhbHVlU2V0cy9NZXRyaWNDYXRlZ29yeUNvZGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLCtDQUErQztBQUMvQyxrQ0FBa0M7QUFDbEMsb0VBQW9FO0FBRXBFLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQTtBQUUxQzs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUFHO0lBQ25DOztPQUVHO0lBQ0gsV0FBVyxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ3RCLE9BQU8sRUFBRSxhQUFhO1FBQ3RCLElBQUksRUFBRSxhQUFhO1FBQ25CLE1BQU0sRUFBRSxxQ0FBcUM7S0FDOUMsQ0FBQztJQUNGOztPQUVHO0lBQ0gsV0FBVyxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ3RCLE9BQU8sRUFBRSxhQUFhO1FBQ3RCLElBQUksRUFBRSxhQUFhO1FBQ25CLE1BQU0sRUFBRSxxQ0FBcUM7S0FDOUMsQ0FBQztJQUNGOztPQUVHO0lBQ0gsT0FBTyxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ2xCLE9BQU8sRUFBRSxTQUFTO1FBQ2xCLElBQUksRUFBRSxTQUFTO1FBQ2YsTUFBTSxFQUFFLHFDQUFxQztLQUM5QyxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxXQUFXLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDdEIsT0FBTyxFQUFFLGFBQWE7UUFDdEIsSUFBSSxFQUFFLGFBQWE7UUFDbkIsTUFBTSxFQUFFLHFDQUFxQztLQUM5QyxDQUFDO0NBQ00sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNC5jb3JlIHZlcnNpb246IDQuMC4xXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9tZXRyaWMtY2F0ZWdvcnl8NC4wLjFcclxuXHJcbmltcG9ydCB7IENvZGluZyB9IGZyb20gJy4uL2ZoaXIvQ29kaW5nLmpzJ1xyXG5cclxuLyoqXHJcbiAqIERlc2NyaWJlcyB0aGUgY2F0ZWdvcnkgb2YgdGhlIG1ldHJpYy5cclxuICovXHJcbmV4cG9ydCBjb25zdCBNZXRyaWNDYXRlZ29yeUNvZGluZ3MgPSB7XHJcbiAgLyoqXHJcbiAgICogY2FsY3VsYXRpb246IERldmljZU9ic2VydmF0aW9ucyBnZW5lcmF0ZWQgZm9yIHRoaXMgRGV2aWNlTWV0cmljIGFyZSBjYWxjdWxhdGVkLlxyXG4gICAqL1xyXG4gIENhbGN1bGF0aW9uOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiQ2FsY3VsYXRpb25cIixcclxuICAgIGNvZGU6IFwiY2FsY3VsYXRpb25cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL21ldHJpYy1jYXRlZ29yeVwiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIG1lYXN1cmVtZW50OiBEZXZpY2VPYnNlcnZhdGlvbnMgZ2VuZXJhdGVkIGZvciB0aGlzIERldmljZU1ldHJpYyBhcmUgbWVhc3VyZWQuXHJcbiAgICovXHJcbiAgTWVhc3VyZW1lbnQ6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJNZWFzdXJlbWVudFwiLFxyXG4gICAgY29kZTogXCJtZWFzdXJlbWVudFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvbWV0cmljLWNhdGVnb3J5XCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogc2V0dGluZzogRGV2aWNlT2JzZXJ2YXRpb25zIGdlbmVyYXRlZCBmb3IgdGhpcyBEZXZpY2VNZXRyaWMgaXMgYSBzZXR0aW5nIHRoYXQgd2lsbCBpbmZsdWVuY2UgdGhlIGJlaGF2aW9yIG9mIHRoZSBEZXZpY2UuXHJcbiAgICovXHJcbiAgU2V0dGluZzogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIlNldHRpbmdcIixcclxuICAgIGNvZGU6IFwic2V0dGluZ1wiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvbWV0cmljLWNhdGVnb3J5XCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogdW5zcGVjaWZpZWQ6IFRoZSBjYXRlZ29yeSBvZiB0aGlzIERldmljZU1ldHJpYyBpcyB1bnNwZWNpZmllZC5cclxuICAgKi9cclxuICBVbnNwZWNpZmllZDogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIlVuc3BlY2lmaWVkXCIsXHJcbiAgICBjb2RlOiBcInVuc3BlY2lmaWVkXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9tZXRyaWMtY2F0ZWdvcnlcIixcclxuICB9KSxcclxufSBhcyBjb25zdDtcclxuXHJcbi8qKlxyXG4gKiBEZXNjcmliZXMgdGhlIGNhdGVnb3J5IG9mIHRoZSBtZXRyaWMuXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBNZXRyaWNDYXRlZ29yeUNvZGluZ1R5cGUgPSB0eXBlb2YgTWV0cmljQ2F0ZWdvcnlDb2RpbmdzO1xyXG4iXX0=