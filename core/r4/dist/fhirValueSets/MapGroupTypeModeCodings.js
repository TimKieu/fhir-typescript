/*! @fhir-typescript/r4-core v0.0.11-beta.2 2022-05-18 */
'use strict';
import { Coding } from '../fhir/Coding.js';

// <auto-generated/>
/**
 * If this is the default rule set to apply for the source type, or this combination of types.
 */
var MapGroupTypeModeCodings = {
    /**
     * none: This group is not a default group for the types.
     */
    NotADefault: new Coding({
        display: "Not a Default",
        code: "none",
        system: "http://hl7.org/fhir/map-group-type-mode",
    }),
    /**
     * type-and-types: This group is a default mapping group for the specified types.
     */
    DefaultForTypePlusCombination: new Coding({
        display: "Default for type + combination",
        code: "type-and-types",
        system: "http://hl7.org/fhir/map-group-type-mode",
    }),
    /**
     * types: This group is a default mapping group for the specified types and for the primary source type.
     */
    DefaultForTypeCombination: new Coding({
        display: "Default for Type Combination",
        code: "types",
        system: "http://hl7.org/fhir/map-group-type-mode",
    }),
};

export { MapGroupTypeModeCodings };
//# sourceMappingURL=MapGroupTypeModeCodings.js.map
