// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/contact-point-system|4.0.1
/**
 * Telecommunications form for contact point.
 */
export const ContactPointSystemCodes = {
    /**
     * email: The value is an email address.
     */
    Email: "email",
    /**
     * fax: The value is a fax machine. Use of full international numbers starting with + is recommended to enable automatic dialing support but not required.
     */
    Fax: "fax",
    /**
     * other: A contact that is not a phone, fax, page or email address and is not expressible as a URL.  E.g. Internal mail address.  This SHOULD NOT be used for contacts that are expressible as a URL (e.g. Skype, Twitter, Facebook, etc.)  Extensions may be used to distinguish "other" contact types.
     */
    Other: "other",
    /**
     * pager: The value is a pager number. These may be local pager numbers that are only usable on a particular pager system.
     */
    Pager: "pager",
    /**
     * phone: The value is a telephone number used for voice calls. Use of full international numbers starting with + is recommended to enable automatic dialing support but not required.
     */
    Phone: "phone",
    /**
     * sms: A contact that can be used for sending an sms message (e.g. mobile phones, some landlines).
     */
    SMS: "sms",
    /**
     * url: A contact that is not a phone, fax, pager or email address and is expressed as a URL.  This is intended for various institutional or personal contacts including web sites, blogs, Skype, Twitter, Facebook, etc. Do not use for email addresses.
     */
    URL: "url",
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29udGFjdFBvaW50U3lzdGVtQ29kZXMuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL0NvbnRhY3RQb2ludFN5c3RlbUNvZGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQiwrQ0FBK0M7QUFDL0Msa0NBQWtDO0FBQ2xDLHlFQUF5RTtBQUV6RTs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLHVCQUF1QixHQUFHO0lBQ3JDOztPQUVHO0lBQ0gsS0FBSyxFQUFFLE9BQU87SUFDZDs7T0FFRztJQUNILEdBQUcsRUFBRSxLQUFLO0lBQ1Y7O09BRUc7SUFDSCxLQUFLLEVBQUUsT0FBTztJQUNkOztPQUVHO0lBQ0gsS0FBSyxFQUFFLE9BQU87SUFDZDs7T0FFRztJQUNILEtBQUssRUFBRSxPQUFPO0lBQ2Q7O09BRUc7SUFDSCxHQUFHLEVBQUUsS0FBSztJQUNWOztPQUVHO0lBQ0gsR0FBRyxFQUFFLEtBQUs7Q0FDRixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0LmNvcmUgdmVyc2lvbjogNC4wLjFcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L2NvbnRhY3QtcG9pbnQtc3lzdGVtfDQuMC4xXHJcblxyXG4vKipcclxuICogVGVsZWNvbW11bmljYXRpb25zIGZvcm0gZm9yIGNvbnRhY3QgcG9pbnQuXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgQ29udGFjdFBvaW50U3lzdGVtQ29kZXMgPSB7XHJcbiAgLyoqXHJcbiAgICogZW1haWw6IFRoZSB2YWx1ZSBpcyBhbiBlbWFpbCBhZGRyZXNzLlxyXG4gICAqL1xyXG4gIEVtYWlsOiBcImVtYWlsXCIsXHJcbiAgLyoqXHJcbiAgICogZmF4OiBUaGUgdmFsdWUgaXMgYSBmYXggbWFjaGluZS4gVXNlIG9mIGZ1bGwgaW50ZXJuYXRpb25hbCBudW1iZXJzIHN0YXJ0aW5nIHdpdGggKyBpcyByZWNvbW1lbmRlZCB0byBlbmFibGUgYXV0b21hdGljIGRpYWxpbmcgc3VwcG9ydCBidXQgbm90IHJlcXVpcmVkLlxyXG4gICAqL1xyXG4gIEZheDogXCJmYXhcIixcclxuICAvKipcclxuICAgKiBvdGhlcjogQSBjb250YWN0IHRoYXQgaXMgbm90IGEgcGhvbmUsIGZheCwgcGFnZSBvciBlbWFpbCBhZGRyZXNzIGFuZCBpcyBub3QgZXhwcmVzc2libGUgYXMgYSBVUkwuICBFLmcuIEludGVybmFsIG1haWwgYWRkcmVzcy4gIFRoaXMgU0hPVUxEIE5PVCBiZSB1c2VkIGZvciBjb250YWN0cyB0aGF0IGFyZSBleHByZXNzaWJsZSBhcyBhIFVSTCAoZS5nLiBTa3lwZSwgVHdpdHRlciwgRmFjZWJvb2ssIGV0Yy4pICBFeHRlbnNpb25zIG1heSBiZSB1c2VkIHRvIGRpc3Rpbmd1aXNoIFwib3RoZXJcIiBjb250YWN0IHR5cGVzLlxyXG4gICAqL1xyXG4gIE90aGVyOiBcIm90aGVyXCIsXHJcbiAgLyoqXHJcbiAgICogcGFnZXI6IFRoZSB2YWx1ZSBpcyBhIHBhZ2VyIG51bWJlci4gVGhlc2UgbWF5IGJlIGxvY2FsIHBhZ2VyIG51bWJlcnMgdGhhdCBhcmUgb25seSB1c2FibGUgb24gYSBwYXJ0aWN1bGFyIHBhZ2VyIHN5c3RlbS5cclxuICAgKi9cclxuICBQYWdlcjogXCJwYWdlclwiLFxyXG4gIC8qKlxyXG4gICAqIHBob25lOiBUaGUgdmFsdWUgaXMgYSB0ZWxlcGhvbmUgbnVtYmVyIHVzZWQgZm9yIHZvaWNlIGNhbGxzLiBVc2Ugb2YgZnVsbCBpbnRlcm5hdGlvbmFsIG51bWJlcnMgc3RhcnRpbmcgd2l0aCArIGlzIHJlY29tbWVuZGVkIHRvIGVuYWJsZSBhdXRvbWF0aWMgZGlhbGluZyBzdXBwb3J0IGJ1dCBub3QgcmVxdWlyZWQuXHJcbiAgICovXHJcbiAgUGhvbmU6IFwicGhvbmVcIixcclxuICAvKipcclxuICAgKiBzbXM6IEEgY29udGFjdCB0aGF0IGNhbiBiZSB1c2VkIGZvciBzZW5kaW5nIGFuIHNtcyBtZXNzYWdlIChlLmcuIG1vYmlsZSBwaG9uZXMsIHNvbWUgbGFuZGxpbmVzKS5cclxuICAgKi9cclxuICBTTVM6IFwic21zXCIsXHJcbiAgLyoqXHJcbiAgICogdXJsOiBBIGNvbnRhY3QgdGhhdCBpcyBub3QgYSBwaG9uZSwgZmF4LCBwYWdlciBvciBlbWFpbCBhZGRyZXNzIGFuZCBpcyBleHByZXNzZWQgYXMgYSBVUkwuICBUaGlzIGlzIGludGVuZGVkIGZvciB2YXJpb3VzIGluc3RpdHV0aW9uYWwgb3IgcGVyc29uYWwgY29udGFjdHMgaW5jbHVkaW5nIHdlYiBzaXRlcywgYmxvZ3MsIFNreXBlLCBUd2l0dGVyLCBGYWNlYm9vaywgZXRjLiBEbyBub3QgdXNlIGZvciBlbWFpbCBhZGRyZXNzZXMuXHJcbiAgICovXHJcbiAgVVJMOiBcInVybFwiLFxyXG59IGFzIGNvbnN0O1xyXG5cclxuLyoqXHJcbiAqIFRlbGVjb21tdW5pY2F0aW9ucyBmb3JtIGZvciBjb250YWN0IHBvaW50LlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgQ29udGFjdFBvaW50U3lzdGVtQ29kZVR5cGUgPSB0eXBlb2YgQ29udGFjdFBvaW50U3lzdGVtQ29kZXNba2V5b2YgdHlwZW9mIENvbnRhY3RQb2ludFN5c3RlbUNvZGVzXTtcclxuIl19