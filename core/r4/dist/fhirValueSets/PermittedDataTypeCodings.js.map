{"version":3,"file":"PermittedDataTypeCodings.js","sources":["../../src/fhirValueSets/PermittedDataTypeCodings.ts"],"sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4.core version: 4.0.1\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR ValueSet: http://hl7.org/fhir/ValueSet/permitted-data-type|4.0.1\r\n\r\nimport { Coding } from '../fhir/Coding.js'\r\n\r\n/**\r\n * Permitted data type for observation value.\r\n */\r\nexport const PermittedDataTypeCodings = {\r\n  /**\r\n   * boolean: true or false.\r\n   */\r\n  VALBoolean: new Coding({\r\n    display: \"boolean\",\r\n    code: \"boolean\",\r\n    system: \"http://hl7.org/fhir/permitted-data-type\",\r\n  }),\r\n  /**\r\n   * CodeableConcept: A coded concept from a reference terminology and/or text.\r\n   */\r\n  CodeableConcept: new Coding({\r\n    display: \"CodeableConcept\",\r\n    code: \"CodeableConcept\",\r\n    system: \"http://hl7.org/fhir/permitted-data-type\",\r\n  }),\r\n  /**\r\n   * dateTime: A date, date-time or partial date (e.g. just year or year + month) as used in human communication.\r\n   */\r\n  DateTime: new Coding({\r\n    display: \"dateTime\",\r\n    code: \"dateTime\",\r\n    system: \"http://hl7.org/fhir/permitted-data-type\",\r\n  }),\r\n  /**\r\n   * integer: A signed integer.\r\n   */\r\n  Integer: new Coding({\r\n    display: \"integer\",\r\n    code: \"integer\",\r\n    system: \"http://hl7.org/fhir/permitted-data-type\",\r\n  }),\r\n  /**\r\n   * Period: A time range defined by start and end date/time.\r\n   */\r\n  Period: new Coding({\r\n    display: \"Period\",\r\n    code: \"Period\",\r\n    system: \"http://hl7.org/fhir/permitted-data-type\",\r\n  }),\r\n  /**\r\n   * Quantity: A measured amount.\r\n   */\r\n  Quantity: new Coding({\r\n    display: \"Quantity\",\r\n    code: \"Quantity\",\r\n    system: \"http://hl7.org/fhir/permitted-data-type\",\r\n  }),\r\n  /**\r\n   * Range: A set of values bounded by low and high.\r\n   */\r\n  Range: new Coding({\r\n    display: \"Range\",\r\n    code: \"Range\",\r\n    system: \"http://hl7.org/fhir/permitted-data-type\",\r\n  }),\r\n  /**\r\n   * Ratio: A ratio of two Quantity values - a numerator and a denominator.\r\n   */\r\n  Ratio: new Coding({\r\n    display: \"Ratio\",\r\n    code: \"Ratio\",\r\n    system: \"http://hl7.org/fhir/permitted-data-type\",\r\n  }),\r\n  /**\r\n   * SampledData: A series of measurements taken by a device.\r\n   */\r\n  SampledData: new Coding({\r\n    display: \"SampledData\",\r\n    code: \"SampledData\",\r\n    system: \"http://hl7.org/fhir/permitted-data-type\",\r\n  }),\r\n  /**\r\n   * string: A sequence of Unicode characters.\r\n   */\r\n  VALString: new Coding({\r\n    display: \"string\",\r\n    code: \"string\",\r\n    system: \"http://hl7.org/fhir/permitted-data-type\",\r\n  }),\r\n  /**\r\n   * time: A time during the day, in the format hh:mm:ss.\r\n   */\r\n  Time: new Coding({\r\n    display: \"time\",\r\n    code: \"time\",\r\n    system: \"http://hl7.org/fhir/permitted-data-type\",\r\n  }),\r\n} as const;\r\n\r\n/**\r\n * Permitted data type for observation value.\r\n */\r\nexport type PermittedDataTypeCodingType = typeof PermittedDataTypeCodings;\r\n"],"names":[],"mappings":";;;;AAAA;AAOA;;AAEG;AACU,IAAA,wBAAwB,GAAG;AACtC;;AAEG;IACH,UAAU,EAAE,IAAI,MAAM,CAAC;AACrB,QAAA,OAAO,EAAE,SAAS;AAClB,QAAA,IAAI,EAAE,SAAS;AACf,QAAA,MAAM,EAAE,yCAAyC;KAClD,CAAC;AACF;;AAEG;IACH,eAAe,EAAE,IAAI,MAAM,CAAC;AAC1B,QAAA,OAAO,EAAE,iBAAiB;AAC1B,QAAA,IAAI,EAAE,iBAAiB;AACvB,QAAA,MAAM,EAAE,yCAAyC;KAClD,CAAC;AACF;;AAEG;IACH,QAAQ,EAAE,IAAI,MAAM,CAAC;AACnB,QAAA,OAAO,EAAE,UAAU;AACnB,QAAA,IAAI,EAAE,UAAU;AAChB,QAAA,MAAM,EAAE,yCAAyC;KAClD,CAAC;AACF;;AAEG;IACH,OAAO,EAAE,IAAI,MAAM,CAAC;AAClB,QAAA,OAAO,EAAE,SAAS;AAClB,QAAA,IAAI,EAAE,SAAS;AACf,QAAA,MAAM,EAAE,yCAAyC;KAClD,CAAC;AACF;;AAEG;IACH,MAAM,EAAE,IAAI,MAAM,CAAC;AACjB,QAAA,OAAO,EAAE,QAAQ;AACjB,QAAA,IAAI,EAAE,QAAQ;AACd,QAAA,MAAM,EAAE,yCAAyC;KAClD,CAAC;AACF;;AAEG;IACH,QAAQ,EAAE,IAAI,MAAM,CAAC;AACnB,QAAA,OAAO,EAAE,UAAU;AACnB,QAAA,IAAI,EAAE,UAAU;AAChB,QAAA,MAAM,EAAE,yCAAyC;KAClD,CAAC;AACF;;AAEG;IACH,KAAK,EAAE,IAAI,MAAM,CAAC;AAChB,QAAA,OAAO,EAAE,OAAO;AAChB,QAAA,IAAI,EAAE,OAAO;AACb,QAAA,MAAM,EAAE,yCAAyC;KAClD,CAAC;AACF;;AAEG;IACH,KAAK,EAAE,IAAI,MAAM,CAAC;AAChB,QAAA,OAAO,EAAE,OAAO;AAChB,QAAA,IAAI,EAAE,OAAO;AACb,QAAA,MAAM,EAAE,yCAAyC;KAClD,CAAC;AACF;;AAEG;IACH,WAAW,EAAE,IAAI,MAAM,CAAC;AACtB,QAAA,OAAO,EAAE,aAAa;AACtB,QAAA,IAAI,EAAE,aAAa;AACnB,QAAA,MAAM,EAAE,yCAAyC;KAClD,CAAC;AACF;;AAEG;IACH,SAAS,EAAE,IAAI,MAAM,CAAC;AACpB,QAAA,OAAO,EAAE,QAAQ;AACjB,QAAA,IAAI,EAAE,QAAQ;AACd,QAAA,MAAM,EAAE,yCAAyC;KAClD,CAAC;AACF;;AAEG;IACH,IAAI,EAAE,IAAI,MAAM,CAAC;AACf,QAAA,OAAO,EAAE,MAAM;AACf,QAAA,IAAI,EAAE,MAAM;AACZ,QAAA,MAAM,EAAE,yCAAyC;KAClD,CAAC;;;;;"}