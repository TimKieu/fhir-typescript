// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet Validation: http://hl7.org/fhir/ValueSet/endpoint-connection-type|4.0.1
/**
 * This is an example value set defined by the FHIR project, that could be used to represent possible connection type profile values.
 */
export const EndpointConnectionTypeVsValidation = [
    "http://terminology.hl7.org/CodeSystem/endpoint-connection-type|dicom-qido-rs", "dicom-qido-rs",
    "http://terminology.hl7.org/CodeSystem/endpoint-connection-type|dicom-stow-rs", "dicom-stow-rs",
    "http://terminology.hl7.org/CodeSystem/endpoint-connection-type|dicom-wado-rs", "dicom-wado-rs",
    "http://terminology.hl7.org/CodeSystem/endpoint-connection-type|dicom-wado-uri", "dicom-wado-uri",
    "http://terminology.hl7.org/CodeSystem/endpoint-connection-type|direct-project", "direct-project",
    "http://terminology.hl7.org/CodeSystem/endpoint-connection-type|hl7-fhir-msg", "hl7-fhir-msg",
    "http://terminology.hl7.org/CodeSystem/endpoint-connection-type|hl7-fhir-rest", "hl7-fhir-rest",
    "http://terminology.hl7.org/CodeSystem/endpoint-connection-type|hl7v2-mllp", "hl7v2-mllp",
    "http://terminology.hl7.org/CodeSystem/endpoint-connection-type|ihe-iid", "ihe-iid",
    "http://terminology.hl7.org/CodeSystem/endpoint-connection-type|ihe-xca", "ihe-xca",
    "http://terminology.hl7.org/CodeSystem/endpoint-connection-type|ihe-xcpd", "ihe-xcpd",
    "http://terminology.hl7.org/CodeSystem/endpoint-connection-type|ihe-xdr", "ihe-xdr",
    "http://terminology.hl7.org/CodeSystem/endpoint-connection-type|ihe-xds", "ihe-xds",
    "http://terminology.hl7.org/CodeSystem/endpoint-connection-type|secure-email", "secure-email",
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRW5kcG9pbnRDb25uZWN0aW9uVHlwZVZzVmFsaWRhdGlvbi5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvRW5kcG9pbnRDb25uZWN0aW9uVHlwZVZzVmFsaWRhdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyx3RkFBd0Y7QUFFeEY7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxrQ0FBa0MsR0FBc0I7SUFDbkUsOEVBQThFLEVBQUUsZUFBZTtJQUMvRiw4RUFBOEUsRUFBRSxlQUFlO0lBQy9GLDhFQUE4RSxFQUFFLGVBQWU7SUFDL0YsK0VBQStFLEVBQUUsZ0JBQWdCO0lBQ2pHLCtFQUErRSxFQUFFLGdCQUFnQjtJQUNqRyw2RUFBNkUsRUFBRSxjQUFjO0lBQzdGLDhFQUE4RSxFQUFFLGVBQWU7SUFDL0YsMkVBQTJFLEVBQUUsWUFBWTtJQUN6Rix3RUFBd0UsRUFBRSxTQUFTO0lBQ25GLHdFQUF3RSxFQUFFLFNBQVM7SUFDbkYseUVBQXlFLEVBQUUsVUFBVTtJQUNyRix3RUFBd0UsRUFBRSxTQUFTO0lBQ25GLHdFQUF3RSxFQUFFLFNBQVM7SUFDbkYsNkVBQTZFLEVBQUUsY0FBYztDQUNyRixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0LmNvcmUgdmVyc2lvbjogNC4wLjFcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0IFZhbGlkYXRpb246IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvZW5kcG9pbnQtY29ubmVjdGlvbi10eXBlfDQuMC4xXHJcblxyXG4vKipcclxuICogVGhpcyBpcyBhbiBleGFtcGxlIHZhbHVlIHNldCBkZWZpbmVkIGJ5IHRoZSBGSElSIHByb2plY3QsIHRoYXQgY291bGQgYmUgdXNlZCB0byByZXByZXNlbnQgcG9zc2libGUgY29ubmVjdGlvbiB0eXBlIHByb2ZpbGUgdmFsdWVzLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IEVuZHBvaW50Q29ubmVjdGlvblR5cGVWc1ZhbGlkYXRpb246IHJlYWRvbmx5IHN0cmluZ1tdID0gW1xyXG4gIFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9lbmRwb2ludC1jb25uZWN0aW9uLXR5cGV8ZGljb20tcWlkby1yc1wiLCBcImRpY29tLXFpZG8tcnNcIiwgXHJcbiAgXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2VuZHBvaW50LWNvbm5lY3Rpb24tdHlwZXxkaWNvbS1zdG93LXJzXCIsIFwiZGljb20tc3Rvdy1yc1wiLCBcclxuICBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vZW5kcG9pbnQtY29ubmVjdGlvbi10eXBlfGRpY29tLXdhZG8tcnNcIiwgXCJkaWNvbS13YWRvLXJzXCIsIFxyXG4gIFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9lbmRwb2ludC1jb25uZWN0aW9uLXR5cGV8ZGljb20td2Fkby11cmlcIiwgXCJkaWNvbS13YWRvLXVyaVwiLCBcclxuICBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vZW5kcG9pbnQtY29ubmVjdGlvbi10eXBlfGRpcmVjdC1wcm9qZWN0XCIsIFwiZGlyZWN0LXByb2plY3RcIiwgXHJcbiAgXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2VuZHBvaW50LWNvbm5lY3Rpb24tdHlwZXxobDctZmhpci1tc2dcIiwgXCJobDctZmhpci1tc2dcIiwgXHJcbiAgXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2VuZHBvaW50LWNvbm5lY3Rpb24tdHlwZXxobDctZmhpci1yZXN0XCIsIFwiaGw3LWZoaXItcmVzdFwiLCBcclxuICBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vZW5kcG9pbnQtY29ubmVjdGlvbi10eXBlfGhsN3YyLW1sbHBcIiwgXCJobDd2Mi1tbGxwXCIsIFxyXG4gIFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9lbmRwb2ludC1jb25uZWN0aW9uLXR5cGV8aWhlLWlpZFwiLCBcImloZS1paWRcIiwgXHJcbiAgXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2VuZHBvaW50LWNvbm5lY3Rpb24tdHlwZXxpaGUteGNhXCIsIFwiaWhlLXhjYVwiLCBcclxuICBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vZW5kcG9pbnQtY29ubmVjdGlvbi10eXBlfGloZS14Y3BkXCIsIFwiaWhlLXhjcGRcIiwgXHJcbiAgXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2VuZHBvaW50LWNvbm5lY3Rpb24tdHlwZXxpaGUteGRyXCIsIFwiaWhlLXhkclwiLCBcclxuICBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vZW5kcG9pbnQtY29ubmVjdGlvbi10eXBlfGloZS14ZHNcIiwgXCJpaGUteGRzXCIsIFxyXG4gIFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9lbmRwb2ludC1jb25uZWN0aW9uLXR5cGV8c2VjdXJlLWVtYWlsXCIsIFwic2VjdXJlLWVtYWlsXCIsIFxyXG5dIGFzIGNvbnN0O1xyXG4iXX0=