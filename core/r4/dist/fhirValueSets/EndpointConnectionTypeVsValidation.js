// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet Validation: http://hl7.org/fhir/ValueSet/endpoint-connection-type|4.0.1
/**
 * This is an example value set defined by the FHIR project, that could be used to represent possible connection type profile values.
 */
export const EndpointConnectionTypeVsValidation = [
    "dicom-qido-rs", "http://terminology.hl7.org/CodeSystem/endpoint-connection-type|dicom-qido-rs",
    "dicom-stow-rs", "http://terminology.hl7.org/CodeSystem/endpoint-connection-type|dicom-stow-rs",
    "dicom-wado-rs", "http://terminology.hl7.org/CodeSystem/endpoint-connection-type|dicom-wado-rs",
    "dicom-wado-uri", "http://terminology.hl7.org/CodeSystem/endpoint-connection-type|dicom-wado-uri",
    "direct-project", "http://terminology.hl7.org/CodeSystem/endpoint-connection-type|direct-project",
    "hl7-fhir-msg", "http://terminology.hl7.org/CodeSystem/endpoint-connection-type|hl7-fhir-msg",
    "hl7-fhir-rest", "http://terminology.hl7.org/CodeSystem/endpoint-connection-type|hl7-fhir-rest",
    "hl7v2-mllp", "http://terminology.hl7.org/CodeSystem/endpoint-connection-type|hl7v2-mllp",
    "ihe-iid", "http://terminology.hl7.org/CodeSystem/endpoint-connection-type|ihe-iid",
    "ihe-xca", "http://terminology.hl7.org/CodeSystem/endpoint-connection-type|ihe-xca",
    "ihe-xcpd", "http://terminology.hl7.org/CodeSystem/endpoint-connection-type|ihe-xcpd",
    "ihe-xdr", "http://terminology.hl7.org/CodeSystem/endpoint-connection-type|ihe-xdr",
    "ihe-xds", "http://terminology.hl7.org/CodeSystem/endpoint-connection-type|ihe-xds",
    "secure-email", "http://terminology.hl7.org/CodeSystem/endpoint-connection-type|secure-email",
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRW5kcG9pbnRDb25uZWN0aW9uVHlwZVZzVmFsaWRhdGlvbi5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvRW5kcG9pbnRDb25uZWN0aW9uVHlwZVZzVmFsaWRhdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyx3RkFBd0Y7QUFFeEY7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxrQ0FBa0MsR0FBc0I7SUFDbkUsZUFBZSxFQUFFLDhFQUE4RTtJQUMvRixlQUFlLEVBQUUsOEVBQThFO0lBQy9GLGVBQWUsRUFBRSw4RUFBOEU7SUFDL0YsZ0JBQWdCLEVBQUUsK0VBQStFO0lBQ2pHLGdCQUFnQixFQUFFLCtFQUErRTtJQUNqRyxjQUFjLEVBQUUsNkVBQTZFO0lBQzdGLGVBQWUsRUFBRSw4RUFBOEU7SUFDL0YsWUFBWSxFQUFFLDJFQUEyRTtJQUN6RixTQUFTLEVBQUUsd0VBQXdFO0lBQ25GLFNBQVMsRUFBRSx3RUFBd0U7SUFDbkYsVUFBVSxFQUFFLHlFQUF5RTtJQUNyRixTQUFTLEVBQUUsd0VBQXdFO0lBQ25GLFNBQVMsRUFBRSx3RUFBd0U7SUFDbkYsY0FBYyxFQUFFLDZFQUE2RTtDQUNyRixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0LmNvcmUgdmVyc2lvbjogNC4wLjFcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0IFZhbGlkYXRpb246IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvZW5kcG9pbnQtY29ubmVjdGlvbi10eXBlfDQuMC4xXHJcblxyXG4vKipcclxuICogVGhpcyBpcyBhbiBleGFtcGxlIHZhbHVlIHNldCBkZWZpbmVkIGJ5IHRoZSBGSElSIHByb2plY3QsIHRoYXQgY291bGQgYmUgdXNlZCB0byByZXByZXNlbnQgcG9zc2libGUgY29ubmVjdGlvbiB0eXBlIHByb2ZpbGUgdmFsdWVzLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IEVuZHBvaW50Q29ubmVjdGlvblR5cGVWc1ZhbGlkYXRpb246IHJlYWRvbmx5IHN0cmluZ1tdID0gW1xyXG4gIFwiZGljb20tcWlkby1yc1wiLCBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vZW5kcG9pbnQtY29ubmVjdGlvbi10eXBlfGRpY29tLXFpZG8tcnNcIiwgXHJcbiAgXCJkaWNvbS1zdG93LXJzXCIsIFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9lbmRwb2ludC1jb25uZWN0aW9uLXR5cGV8ZGljb20tc3Rvdy1yc1wiLCBcclxuICBcImRpY29tLXdhZG8tcnNcIiwgXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2VuZHBvaW50LWNvbm5lY3Rpb24tdHlwZXxkaWNvbS13YWRvLXJzXCIsIFxyXG4gIFwiZGljb20td2Fkby11cmlcIiwgXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2VuZHBvaW50LWNvbm5lY3Rpb24tdHlwZXxkaWNvbS13YWRvLXVyaVwiLCBcclxuICBcImRpcmVjdC1wcm9qZWN0XCIsIFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9lbmRwb2ludC1jb25uZWN0aW9uLXR5cGV8ZGlyZWN0LXByb2plY3RcIiwgXHJcbiAgXCJobDctZmhpci1tc2dcIiwgXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2VuZHBvaW50LWNvbm5lY3Rpb24tdHlwZXxobDctZmhpci1tc2dcIiwgXHJcbiAgXCJobDctZmhpci1yZXN0XCIsIFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9lbmRwb2ludC1jb25uZWN0aW9uLXR5cGV8aGw3LWZoaXItcmVzdFwiLCBcclxuICBcImhsN3YyLW1sbHBcIiwgXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2VuZHBvaW50LWNvbm5lY3Rpb24tdHlwZXxobDd2Mi1tbGxwXCIsIFxyXG4gIFwiaWhlLWlpZFwiLCBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vZW5kcG9pbnQtY29ubmVjdGlvbi10eXBlfGloZS1paWRcIiwgXHJcbiAgXCJpaGUteGNhXCIsIFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9lbmRwb2ludC1jb25uZWN0aW9uLXR5cGV8aWhlLXhjYVwiLCBcclxuICBcImloZS14Y3BkXCIsIFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9lbmRwb2ludC1jb25uZWN0aW9uLXR5cGV8aWhlLXhjcGRcIiwgXHJcbiAgXCJpaGUteGRyXCIsIFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9lbmRwb2ludC1jb25uZWN0aW9uLXR5cGV8aWhlLXhkclwiLCBcclxuICBcImloZS14ZHNcIiwgXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2VuZHBvaW50LWNvbm5lY3Rpb24tdHlwZXxpaGUteGRzXCIsIFxyXG4gIFwic2VjdXJlLWVtYWlsXCIsIFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9lbmRwb2ludC1jb25uZWN0aW9uLXR5cGV8c2VjdXJlLWVtYWlsXCIsIFxyXG5dIGFzIGNvbnN0O1xyXG4iXX0=