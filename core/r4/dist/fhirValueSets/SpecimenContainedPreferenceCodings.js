// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/specimen-contained-preference|4.0.1
import { Coding } from '../fhir/Coding.js';
/**
 * Degree of preference of a type of conditioned specimen.
 */
export const SpecimenContainedPreferenceCodings = {
    /**
     * alternate: This type of conditioned specimen is an alternate.
     */
    Alternate: new Coding({
        display: "Alternate",
        code: "alternate",
        system: "http://hl7.org/fhir/specimen-contained-preference",
    }),
    /**
     * preferred: This type of contained specimen is preferred to collect this kind of specimen.
     */
    Preferred: new Coding({
        display: "Preferred",
        code: "preferred",
        system: "http://hl7.org/fhir/specimen-contained-preference",
    }),
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3BlY2ltZW5Db250YWluZWRQcmVmZXJlbmNlQ29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvU3BlY2ltZW5Db250YWluZWRQcmVmZXJlbmNlQ29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyxrRkFBa0Y7QUFFbEYsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLG1CQUFtQixDQUFBO0FBRTFDOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sa0NBQWtDLEdBQUc7SUFDaEQ7O09BRUc7SUFDSCxTQUFTLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDcEIsT0FBTyxFQUFFLFdBQVc7UUFDcEIsSUFBSSxFQUFFLFdBQVc7UUFDakIsTUFBTSxFQUFFLG1EQUFtRDtLQUM1RCxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxTQUFTLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDcEIsT0FBTyxFQUFFLFdBQVc7UUFDcEIsSUFBSSxFQUFFLFdBQVc7UUFDakIsTUFBTSxFQUFFLG1EQUFtRDtLQUM1RCxDQUFDO0NBQ00sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNC5jb3JlIHZlcnNpb246IDQuMC4xXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9zcGVjaW1lbi1jb250YWluZWQtcHJlZmVyZW5jZXw0LjAuMVxyXG5cclxuaW1wb3J0IHsgQ29kaW5nIH0gZnJvbSAnLi4vZmhpci9Db2RpbmcuanMnXHJcblxyXG4vKipcclxuICogRGVncmVlIG9mIHByZWZlcmVuY2Ugb2YgYSB0eXBlIG9mIGNvbmRpdGlvbmVkIHNwZWNpbWVuLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IFNwZWNpbWVuQ29udGFpbmVkUHJlZmVyZW5jZUNvZGluZ3MgPSB7XHJcbiAgLyoqXHJcbiAgICogYWx0ZXJuYXRlOiBUaGlzIHR5cGUgb2YgY29uZGl0aW9uZWQgc3BlY2ltZW4gaXMgYW4gYWx0ZXJuYXRlLlxyXG4gICAqL1xyXG4gIEFsdGVybmF0ZTogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIkFsdGVybmF0ZVwiLFxyXG4gICAgY29kZTogXCJhbHRlcm5hdGVcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3NwZWNpbWVuLWNvbnRhaW5lZC1wcmVmZXJlbmNlXCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogcHJlZmVycmVkOiBUaGlzIHR5cGUgb2YgY29udGFpbmVkIHNwZWNpbWVuIGlzIHByZWZlcnJlZCB0byBjb2xsZWN0IHRoaXMga2luZCBvZiBzcGVjaW1lbi5cclxuICAgKi9cclxuICBQcmVmZXJyZWQ6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJQcmVmZXJyZWRcIixcclxuICAgIGNvZGU6IFwicHJlZmVycmVkXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9zcGVjaW1lbi1jb250YWluZWQtcHJlZmVyZW5jZVwiLFxyXG4gIH0pLFxyXG59IGFzIGNvbnN0O1xyXG5cclxuLyoqXHJcbiAqIERlZ3JlZSBvZiBwcmVmZXJlbmNlIG9mIGEgdHlwZSBvZiBjb25kaXRpb25lZCBzcGVjaW1lbi5cclxuICovXHJcbmV4cG9ydCB0eXBlIFNwZWNpbWVuQ29udGFpbmVkUHJlZmVyZW5jZUNvZGluZ1R5cGUgPSB0eXBlb2YgU3BlY2ltZW5Db250YWluZWRQcmVmZXJlbmNlQ29kaW5ncztcclxuIl19