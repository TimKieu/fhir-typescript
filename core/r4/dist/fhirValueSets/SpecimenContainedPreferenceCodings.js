// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/specimen-contained-preference|4.0.1
/**
 * Degree of preference of a type of conditioned specimen.
 */
export const SpecimenContainedPreferenceCodings = {
    /**
     * alternate: This type of conditioned specimen is an alternate.
     */
    Alternate: {
        display: "Alternate",
        code: "alternate",
        system: "http://hl7.org/fhir/specimen-contained-preference",
    },
    /**
     * preferred: This type of contained specimen is preferred to collect this kind of specimen.
     */
    Preferred: {
        display: "Preferred",
        code: "preferred",
        system: "http://hl7.org/fhir/specimen-contained-preference",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3BlY2ltZW5Db250YWluZWRQcmVmZXJlbmNlQ29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvU3BlY2ltZW5Db250YWluZWRQcmVmZXJlbmNlQ29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyxrRkFBa0Y7QUFrQmxGOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sa0NBQWtDLEdBQXlDO0lBQ3RGOztPQUVHO0lBQ0gsU0FBUyxFQUFFO1FBQ1QsT0FBTyxFQUFFLFdBQVc7UUFDcEIsSUFBSSxFQUFFLFdBQVc7UUFDakIsTUFBTSxFQUFFLG1EQUFtRDtLQUM1RDtJQUNEOztPQUVHO0lBQ0gsU0FBUyxFQUFFO1FBQ1QsT0FBTyxFQUFFLFdBQVc7UUFDcEIsSUFBSSxFQUFFLFdBQVc7UUFDakIsTUFBTSxFQUFFLG1EQUFtRDtLQUM1RDtDQUNPLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjQuY29yZSB2ZXJzaW9uOiA0LjAuMVxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvc3BlY2ltZW4tY29udGFpbmVkLXByZWZlcmVuY2V8NC4wLjFcclxuXHJcbmltcG9ydCB7IENvZGluZ0FyZ3MgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiBEZWdyZWUgb2YgcHJlZmVyZW5jZSBvZiBhIHR5cGUgb2YgY29uZGl0aW9uZWQgc3BlY2ltZW4uXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBTcGVjaW1lbkNvbnRhaW5lZFByZWZlcmVuY2VDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIGFsdGVybmF0ZTogVGhpcyB0eXBlIG9mIGNvbmRpdGlvbmVkIHNwZWNpbWVuIGlzIGFuIGFsdGVybmF0ZS5cclxuICAgKi9cclxuICBBbHRlcm5hdGU6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogcHJlZmVycmVkOiBUaGlzIHR5cGUgb2YgY29udGFpbmVkIHNwZWNpbWVuIGlzIHByZWZlcnJlZCB0byBjb2xsZWN0IHRoaXMga2luZCBvZiBzcGVjaW1lbi5cclxuICAgKi9cclxuICBQcmVmZXJyZWQ6IENvZGluZ0FyZ3M7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBEZWdyZWUgb2YgcHJlZmVyZW5jZSBvZiBhIHR5cGUgb2YgY29uZGl0aW9uZWQgc3BlY2ltZW4uXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgU3BlY2ltZW5Db250YWluZWRQcmVmZXJlbmNlQ29kaW5nczpTcGVjaW1lbkNvbnRhaW5lZFByZWZlcmVuY2VDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIGFsdGVybmF0ZTogVGhpcyB0eXBlIG9mIGNvbmRpdGlvbmVkIHNwZWNpbWVuIGlzIGFuIGFsdGVybmF0ZS5cclxuICAgKi9cclxuICBBbHRlcm5hdGU6IHtcclxuICAgIGRpc3BsYXk6IFwiQWx0ZXJuYXRlXCIsXHJcbiAgICBjb2RlOiBcImFsdGVybmF0ZVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvc3BlY2ltZW4tY29udGFpbmVkLXByZWZlcmVuY2VcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIHByZWZlcnJlZDogVGhpcyB0eXBlIG9mIGNvbnRhaW5lZCBzcGVjaW1lbiBpcyBwcmVmZXJyZWQgdG8gY29sbGVjdCB0aGlzIGtpbmQgb2Ygc3BlY2ltZW4uXHJcbiAgICovXHJcbiAgUHJlZmVycmVkOiB7XHJcbiAgICBkaXNwbGF5OiBcIlByZWZlcnJlZFwiLFxyXG4gICAgY29kZTogXCJwcmVmZXJyZWRcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3NwZWNpbWVuLWNvbnRhaW5lZC1wcmVmZXJlbmNlXCIsXHJcbiAgfSxcclxufSBhcyBjb25zdDtcclxuIl19