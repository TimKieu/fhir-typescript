// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/consent-action|4.0.1
import { Coding } from '../fhir/Coding.js';
/**
 * This value set includes sample Consent Action codes.
 */
export const ConsentActionCodings = {
    /**
     * access: Retrieval without permitting collection, use or disclosure. e.g., no screen-scraping for collection, use or disclosure (view-only access)
     */
    Access: new Coding({
        display: "Access",
        code: "access",
        system: "http://terminology.hl7.org/CodeSystem/consentaction",
    }),
    /**
     * collect: Gather retrieved information for storage
     */
    Collect: new Coding({
        display: "Collect",
        code: "collect",
        system: "http://terminology.hl7.org/CodeSystem/consentaction",
    }),
    /**
     * correct: Allow retrieval of a patient's information for the purpose of update or rectify
     */
    AccessAndCorrect: new Coding({
        display: "Access and Correct",
        code: "correct",
        system: "http://terminology.hl7.org/CodeSystem/consentaction",
    }),
    /**
     * disclose: Transfer retrieved information
     */
    Disclose: new Coding({
        display: "Disclose",
        code: "disclose",
        system: "http://terminology.hl7.org/CodeSystem/consentaction",
    }),
    /**
     * use: Utilize the retrieved information
     */
    Use: new Coding({
        display: "Use",
        code: "use",
        system: "http://terminology.hl7.org/CodeSystem/consentaction",
    }),
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29uc2VudEFjdGlvbkNvZGluZ3MuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL0NvbnNlbnRBY3Rpb25Db2RpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQiwrQ0FBK0M7QUFDL0Msa0NBQWtDO0FBQ2xDLG1FQUFtRTtBQUVuRSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sbUJBQW1CLENBQUE7QUFFMUM7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxvQkFBb0IsR0FBRztJQUNsQzs7T0FFRztJQUNILE1BQU0sRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUNqQixPQUFPLEVBQUUsUUFBUTtRQUNqQixJQUFJLEVBQUUsUUFBUTtRQUNkLE1BQU0sRUFBRSxxREFBcUQ7S0FDOUQsQ0FBQztJQUNGOztPQUVHO0lBQ0gsT0FBTyxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ2xCLE9BQU8sRUFBRSxTQUFTO1FBQ2xCLElBQUksRUFBRSxTQUFTO1FBQ2YsTUFBTSxFQUFFLHFEQUFxRDtLQUM5RCxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxnQkFBZ0IsRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUMzQixPQUFPLEVBQUUsb0JBQW9CO1FBQzdCLElBQUksRUFBRSxTQUFTO1FBQ2YsTUFBTSxFQUFFLHFEQUFxRDtLQUM5RCxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxRQUFRLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDbkIsT0FBTyxFQUFFLFVBQVU7UUFDbkIsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLHFEQUFxRDtLQUM5RCxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxHQUFHLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDZCxPQUFPLEVBQUUsS0FBSztRQUNkLElBQUksRUFBRSxLQUFLO1FBQ1gsTUFBTSxFQUFFLHFEQUFxRDtLQUM5RCxDQUFDO0NBQ00sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNC5jb3JlIHZlcnNpb246IDQuMC4xXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9jb25zZW50LWFjdGlvbnw0LjAuMVxyXG5cclxuaW1wb3J0IHsgQ29kaW5nIH0gZnJvbSAnLi4vZmhpci9Db2RpbmcuanMnXHJcblxyXG4vKipcclxuICogVGhpcyB2YWx1ZSBzZXQgaW5jbHVkZXMgc2FtcGxlIENvbnNlbnQgQWN0aW9uIGNvZGVzLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IENvbnNlbnRBY3Rpb25Db2RpbmdzID0ge1xyXG4gIC8qKlxyXG4gICAqIGFjY2VzczogUmV0cmlldmFsIHdpdGhvdXQgcGVybWl0dGluZyBjb2xsZWN0aW9uLCB1c2Ugb3IgZGlzY2xvc3VyZS4gZS5nLiwgbm8gc2NyZWVuLXNjcmFwaW5nIGZvciBjb2xsZWN0aW9uLCB1c2Ugb3IgZGlzY2xvc3VyZSAodmlldy1vbmx5IGFjY2VzcylcclxuICAgKi9cclxuICBBY2Nlc3M6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJBY2Nlc3NcIixcclxuICAgIGNvZGU6IFwiYWNjZXNzXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9jb25zZW50YWN0aW9uXCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogY29sbGVjdDogR2F0aGVyIHJldHJpZXZlZCBpbmZvcm1hdGlvbiBmb3Igc3RvcmFnZVxyXG4gICAqL1xyXG4gIENvbGxlY3Q6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJDb2xsZWN0XCIsXHJcbiAgICBjb2RlOiBcImNvbGxlY3RcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2NvbnNlbnRhY3Rpb25cIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBjb3JyZWN0OiBBbGxvdyByZXRyaWV2YWwgb2YgYSBwYXRpZW50J3MgaW5mb3JtYXRpb24gZm9yIHRoZSBwdXJwb3NlIG9mIHVwZGF0ZSBvciByZWN0aWZ5XHJcbiAgICovXHJcbiAgQWNjZXNzQW5kQ29ycmVjdDogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIkFjY2VzcyBhbmQgQ29ycmVjdFwiLFxyXG4gICAgY29kZTogXCJjb3JyZWN0XCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9jb25zZW50YWN0aW9uXCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogZGlzY2xvc2U6IFRyYW5zZmVyIHJldHJpZXZlZCBpbmZvcm1hdGlvblxyXG4gICAqL1xyXG4gIERpc2Nsb3NlOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiRGlzY2xvc2VcIixcclxuICAgIGNvZGU6IFwiZGlzY2xvc2VcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2NvbnNlbnRhY3Rpb25cIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiB1c2U6IFV0aWxpemUgdGhlIHJldHJpZXZlZCBpbmZvcm1hdGlvblxyXG4gICAqL1xyXG4gIFVzZTogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIlVzZVwiLFxyXG4gICAgY29kZTogXCJ1c2VcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2NvbnNlbnRhY3Rpb25cIixcclxuICB9KSxcclxufSBhcyBjb25zdDtcclxuXHJcbi8qKlxyXG4gKiBUaGlzIHZhbHVlIHNldCBpbmNsdWRlcyBzYW1wbGUgQ29uc2VudCBBY3Rpb24gY29kZXMuXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBDb25zZW50QWN0aW9uQ29kaW5nVHlwZSA9IHR5cGVvZiBDb25zZW50QWN0aW9uQ29kaW5ncztcclxuIl19