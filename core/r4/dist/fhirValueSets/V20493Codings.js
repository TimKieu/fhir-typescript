// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://terminology.hl7.org/ValueSet/v2-0493|2.9
import { Coding } from '../fhir/Coding.js';
/**
 * FHIR Value set/code system definition for HL7 v2 table 0493 ( Specimen Condition)
 */
export const V20493Codings = {
    /**
     * Code: AUT
     */
    Autolyzed: new Coding({
        display: "Autolyzed",
        code: "AUT",
        system: "http://terminology.hl7.org/CodeSystem/v2-0493",
    }),
    /**
     * Code: CFU
     */
    Centrifuged: new Coding({
        display: "Centrifuged",
        code: "CFU",
        system: "http://terminology.hl7.org/CodeSystem/v2-0493",
    }),
    /**
     * Code: CLOT
     */
    Clotted: new Coding({
        display: "Clotted",
        code: "CLOT",
        system: "http://terminology.hl7.org/CodeSystem/v2-0493",
    }),
    /**
     * Code: CON
     */
    Contaminated: new Coding({
        display: "Contaminated",
        code: "CON",
        system: "http://terminology.hl7.org/CodeSystem/v2-0493",
    }),
    /**
     * Code: COOL
     */
    Cool: new Coding({
        display: "Cool",
        code: "COOL",
        system: "http://terminology.hl7.org/CodeSystem/v2-0493",
    }),
    /**
     * Code: FROZ
     */
    Frozen: new Coding({
        display: "Frozen",
        code: "FROZ",
        system: "http://terminology.hl7.org/CodeSystem/v2-0493",
    }),
    /**
     * Code: HEM
     */
    Hemolyzed: new Coding({
        display: "Hemolyzed",
        code: "HEM",
        system: "http://terminology.hl7.org/CodeSystem/v2-0493",
    }),
    /**
     * Code: LIVE
     */
    Live: new Coding({
        display: "Live",
        code: "LIVE",
        system: "http://terminology.hl7.org/CodeSystem/v2-0493",
    }),
    /**
     * Code: ROOM
     */
    RoomTemperature: new Coding({
        display: "Room temperature",
        code: "ROOM",
        system: "http://terminology.hl7.org/CodeSystem/v2-0493",
    }),
    /**
     * Code: SNR
     */
    SampleNotReceived: new Coding({
        display: "Sample not received",
        code: "SNR",
        system: "http://terminology.hl7.org/CodeSystem/v2-0493",
    }),
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVjIwNDkzQ29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvVjIwNDkzQ29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyxpRUFBaUU7QUFFakUsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLG1CQUFtQixDQUFBO0FBRTFDOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sYUFBYSxHQUFHO0lBQzNCOztPQUVHO0lBQ0gsU0FBUyxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ3BCLE9BQU8sRUFBRSxXQUFXO1FBQ3BCLElBQUksRUFBRSxLQUFLO1FBQ1gsTUFBTSxFQUFFLCtDQUErQztLQUN4RCxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxXQUFXLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDdEIsT0FBTyxFQUFFLGFBQWE7UUFDdEIsSUFBSSxFQUFFLEtBQUs7UUFDWCxNQUFNLEVBQUUsK0NBQStDO0tBQ3hELENBQUM7SUFDRjs7T0FFRztJQUNILE9BQU8sRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUNsQixPQUFPLEVBQUUsU0FBUztRQUNsQixJQUFJLEVBQUUsTUFBTTtRQUNaLE1BQU0sRUFBRSwrQ0FBK0M7S0FDeEQsQ0FBQztJQUNGOztPQUVHO0lBQ0gsWUFBWSxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ3ZCLE9BQU8sRUFBRSxjQUFjO1FBQ3ZCLElBQUksRUFBRSxLQUFLO1FBQ1gsTUFBTSxFQUFFLCtDQUErQztLQUN4RCxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxJQUFJLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDZixPQUFPLEVBQUUsTUFBTTtRQUNmLElBQUksRUFBRSxNQUFNO1FBQ1osTUFBTSxFQUFFLCtDQUErQztLQUN4RCxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxNQUFNLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDakIsT0FBTyxFQUFFLFFBQVE7UUFDakIsSUFBSSxFQUFFLE1BQU07UUFDWixNQUFNLEVBQUUsK0NBQStDO0tBQ3hELENBQUM7SUFDRjs7T0FFRztJQUNILFNBQVMsRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUNwQixPQUFPLEVBQUUsV0FBVztRQUNwQixJQUFJLEVBQUUsS0FBSztRQUNYLE1BQU0sRUFBRSwrQ0FBK0M7S0FDeEQsQ0FBQztJQUNGOztPQUVHO0lBQ0gsSUFBSSxFQUFFLElBQUksTUFBTSxDQUFDO1FBQ2YsT0FBTyxFQUFFLE1BQU07UUFDZixJQUFJLEVBQUUsTUFBTTtRQUNaLE1BQU0sRUFBRSwrQ0FBK0M7S0FDeEQsQ0FBQztJQUNGOztPQUVHO0lBQ0gsZUFBZSxFQUFFLElBQUksTUFBTSxDQUFDO1FBQzFCLE9BQU8sRUFBRSxrQkFBa0I7UUFDM0IsSUFBSSxFQUFFLE1BQU07UUFDWixNQUFNLEVBQUUsK0NBQStDO0tBQ3hELENBQUM7SUFDRjs7T0FFRztJQUNILGlCQUFpQixFQUFFLElBQUksTUFBTSxDQUFDO1FBQzVCLE9BQU8sRUFBRSxxQkFBcUI7UUFDOUIsSUFBSSxFQUFFLEtBQUs7UUFDWCxNQUFNLEVBQUUsK0NBQStDO0tBQ3hELENBQUM7Q0FDTSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0LmNvcmUgdmVyc2lvbjogNC4wLjFcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9WYWx1ZVNldC92Mi0wNDkzfDIuOVxyXG5cclxuaW1wb3J0IHsgQ29kaW5nIH0gZnJvbSAnLi4vZmhpci9Db2RpbmcuanMnXHJcblxyXG4vKipcclxuICogRkhJUiBWYWx1ZSBzZXQvY29kZSBzeXN0ZW0gZGVmaW5pdGlvbiBmb3IgSEw3IHYyIHRhYmxlIDA0OTMgKCBTcGVjaW1lbiBDb25kaXRpb24pXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgVjIwNDkzQ29kaW5ncyA9IHtcclxuICAvKipcclxuICAgKiBDb2RlOiBBVVRcclxuICAgKi9cclxuICBBdXRvbHl6ZWQ6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJBdXRvbHl6ZWRcIixcclxuICAgIGNvZGU6IFwiQVVUXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS92Mi0wNDkzXCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogQ29kZTogQ0ZVXHJcbiAgICovXHJcbiAgQ2VudHJpZnVnZWQ6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJDZW50cmlmdWdlZFwiLFxyXG4gICAgY29kZTogXCJDRlVcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL3YyLTA0OTNcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBDb2RlOiBDTE9UXHJcbiAgICovXHJcbiAgQ2xvdHRlZDogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIkNsb3R0ZWRcIixcclxuICAgIGNvZGU6IFwiQ0xPVFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vdjItMDQ5M1wiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IENPTlxyXG4gICAqL1xyXG4gIENvbnRhbWluYXRlZDogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIkNvbnRhbWluYXRlZFwiLFxyXG4gICAgY29kZTogXCJDT05cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL3YyLTA0OTNcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBDb2RlOiBDT09MXHJcbiAgICovXHJcbiAgQ29vbDogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIkNvb2xcIixcclxuICAgIGNvZGU6IFwiQ09PTFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vdjItMDQ5M1wiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IEZST1pcclxuICAgKi9cclxuICBGcm96ZW46IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJGcm96ZW5cIixcclxuICAgIGNvZGU6IFwiRlJPWlwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vdjItMDQ5M1wiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IEhFTVxyXG4gICAqL1xyXG4gIEhlbW9seXplZDogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIkhlbW9seXplZFwiLFxyXG4gICAgY29kZTogXCJIRU1cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL3YyLTA0OTNcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBDb2RlOiBMSVZFXHJcbiAgICovXHJcbiAgTGl2ZTogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIkxpdmVcIixcclxuICAgIGNvZGU6IFwiTElWRVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vdjItMDQ5M1wiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IFJPT01cclxuICAgKi9cclxuICBSb29tVGVtcGVyYXR1cmU6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJSb29tIHRlbXBlcmF0dXJlXCIsXHJcbiAgICBjb2RlOiBcIlJPT01cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL3YyLTA0OTNcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBDb2RlOiBTTlJcclxuICAgKi9cclxuICBTYW1wbGVOb3RSZWNlaXZlZDogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIlNhbXBsZSBub3QgcmVjZWl2ZWRcIixcclxuICAgIGNvZGU6IFwiU05SXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS92Mi0wNDkzXCIsXHJcbiAgfSksXHJcbn0gYXMgY29uc3Q7XHJcblxyXG4vKipcclxuICogRkhJUiBWYWx1ZSBzZXQvY29kZSBzeXN0ZW0gZGVmaW5pdGlvbiBmb3IgSEw3IHYyIHRhYmxlIDA0OTMgKCBTcGVjaW1lbiBDb25kaXRpb24pXHJcbiAqL1xyXG5leHBvcnQgdHlwZSBWMjA0OTNDb2RpbmdUeXBlID0gdHlwZW9mIFYyMDQ5M0NvZGluZ3M7XHJcbiJdfQ==