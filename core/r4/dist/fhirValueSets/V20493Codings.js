// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://terminology.hl7.org/ValueSet/v2-0493|2.9
/**
 * FHIR Value set/code system definition for HL7 v2 table 0493 ( Specimen Condition)
 */
export const V20493Codings = {
    /**
     * Code: AUT
     */
    Autolyzed: {
        display: "Autolyzed",
        code: "AUT",
        system: "http://terminology.hl7.org/CodeSystem/v2-0493",
    },
    /**
     * Code: CFU
     */
    Centrifuged: {
        display: "Centrifuged",
        code: "CFU",
        system: "http://terminology.hl7.org/CodeSystem/v2-0493",
    },
    /**
     * Code: CLOT
     */
    Clotted: {
        display: "Clotted",
        code: "CLOT",
        system: "http://terminology.hl7.org/CodeSystem/v2-0493",
    },
    /**
     * Code: CON
     */
    Contaminated: {
        display: "Contaminated",
        code: "CON",
        system: "http://terminology.hl7.org/CodeSystem/v2-0493",
    },
    /**
     * Code: COOL
     */
    Cool: {
        display: "Cool",
        code: "COOL",
        system: "http://terminology.hl7.org/CodeSystem/v2-0493",
    },
    /**
     * Code: FROZ
     */
    Frozen: {
        display: "Frozen",
        code: "FROZ",
        system: "http://terminology.hl7.org/CodeSystem/v2-0493",
    },
    /**
     * Code: HEM
     */
    Hemolyzed: {
        display: "Hemolyzed",
        code: "HEM",
        system: "http://terminology.hl7.org/CodeSystem/v2-0493",
    },
    /**
     * Code: LIVE
     */
    Live: {
        display: "Live",
        code: "LIVE",
        system: "http://terminology.hl7.org/CodeSystem/v2-0493",
    },
    /**
     * Code: ROOM
     */
    RoomTemperature: {
        display: "Room temperature",
        code: "ROOM",
        system: "http://terminology.hl7.org/CodeSystem/v2-0493",
    },
    /**
     * Code: SNR
     */
    SampleNotReceived: {
        display: "Sample not received",
        code: "SNR",
        system: "http://terminology.hl7.org/CodeSystem/v2-0493",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVjIwNDkzQ29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvVjIwNDkzQ29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyxpRUFBaUU7QUFrRGpFOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sYUFBYSxHQUFvQjtJQUM1Qzs7T0FFRztJQUNILFNBQVMsRUFBRTtRQUNULE9BQU8sRUFBRSxXQUFXO1FBQ3BCLElBQUksRUFBRSxLQUFLO1FBQ1gsTUFBTSxFQUFFLCtDQUErQztLQUN4RDtJQUNEOztPQUVHO0lBQ0gsV0FBVyxFQUFFO1FBQ1gsT0FBTyxFQUFFLGFBQWE7UUFDdEIsSUFBSSxFQUFFLEtBQUs7UUFDWCxNQUFNLEVBQUUsK0NBQStDO0tBQ3hEO0lBQ0Q7O09BRUc7SUFDSCxPQUFPLEVBQUU7UUFDUCxPQUFPLEVBQUUsU0FBUztRQUNsQixJQUFJLEVBQUUsTUFBTTtRQUNaLE1BQU0sRUFBRSwrQ0FBK0M7S0FDeEQ7SUFDRDs7T0FFRztJQUNILFlBQVksRUFBRTtRQUNaLE9BQU8sRUFBRSxjQUFjO1FBQ3ZCLElBQUksRUFBRSxLQUFLO1FBQ1gsTUFBTSxFQUFFLCtDQUErQztLQUN4RDtJQUNEOztPQUVHO0lBQ0gsSUFBSSxFQUFFO1FBQ0osT0FBTyxFQUFFLE1BQU07UUFDZixJQUFJLEVBQUUsTUFBTTtRQUNaLE1BQU0sRUFBRSwrQ0FBK0M7S0FDeEQ7SUFDRDs7T0FFRztJQUNILE1BQU0sRUFBRTtRQUNOLE9BQU8sRUFBRSxRQUFRO1FBQ2pCLElBQUksRUFBRSxNQUFNO1FBQ1osTUFBTSxFQUFFLCtDQUErQztLQUN4RDtJQUNEOztPQUVHO0lBQ0gsU0FBUyxFQUFFO1FBQ1QsT0FBTyxFQUFFLFdBQVc7UUFDcEIsSUFBSSxFQUFFLEtBQUs7UUFDWCxNQUFNLEVBQUUsK0NBQStDO0tBQ3hEO0lBQ0Q7O09BRUc7SUFDSCxJQUFJLEVBQUU7UUFDSixPQUFPLEVBQUUsTUFBTTtRQUNmLElBQUksRUFBRSxNQUFNO1FBQ1osTUFBTSxFQUFFLCtDQUErQztLQUN4RDtJQUNEOztPQUVHO0lBQ0gsZUFBZSxFQUFFO1FBQ2YsT0FBTyxFQUFFLGtCQUFrQjtRQUMzQixJQUFJLEVBQUUsTUFBTTtRQUNaLE1BQU0sRUFBRSwrQ0FBK0M7S0FDeEQ7SUFDRDs7T0FFRztJQUNILGlCQUFpQixFQUFFO1FBQ2pCLE9BQU8sRUFBRSxxQkFBcUI7UUFDOUIsSUFBSSxFQUFFLEtBQUs7UUFDWCxNQUFNLEVBQUUsK0NBQStDO0tBQ3hEO0NBQ08sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNC5jb3JlIHZlcnNpb246IDQuMC4xXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvVmFsdWVTZXQvdjItMDQ5M3wyLjlcclxuXHJcbmltcG9ydCB7IENvZGluZ0FyZ3MgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiBGSElSIFZhbHVlIHNldC9jb2RlIHN5c3RlbSBkZWZpbml0aW9uIGZvciBITDcgdjIgdGFibGUgMDQ5MyAoIFNwZWNpbWVuIENvbmRpdGlvbilcclxuICovXHJcbmV4cG9ydCB0eXBlIFYyMDQ5M0NvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogQ29kZTogQVVUXHJcbiAgICovXHJcbiAgQXV0b2x5emVkOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IENGVVxyXG4gICAqL1xyXG4gIENlbnRyaWZ1Z2VkOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IENMT1RcclxuICAgKi9cclxuICBDbG90dGVkOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IENPTlxyXG4gICAqL1xyXG4gIENvbnRhbWluYXRlZDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiBDT09MXHJcbiAgICovXHJcbiAgQ29vbDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiBGUk9aXHJcbiAgICovXHJcbiAgRnJvemVuOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IEhFTVxyXG4gICAqL1xyXG4gIEhlbW9seXplZDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiBMSVZFXHJcbiAgICovXHJcbiAgTGl2ZTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBDb2RlOiBST09NXHJcbiAgICovXHJcbiAgUm9vbVRlbXBlcmF0dXJlOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IFNOUlxyXG4gICAqL1xyXG4gIFNhbXBsZU5vdFJlY2VpdmVkOiBDb2RpbmdBcmdzO1xyXG59XHJcblxyXG4vKipcclxuICogRkhJUiBWYWx1ZSBzZXQvY29kZSBzeXN0ZW0gZGVmaW5pdGlvbiBmb3IgSEw3IHYyIHRhYmxlIDA0OTMgKCBTcGVjaW1lbiBDb25kaXRpb24pXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgVjIwNDkzQ29kaW5nczpWMjA0OTNDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIENvZGU6IEFVVFxyXG4gICAqL1xyXG4gIEF1dG9seXplZDoge1xyXG4gICAgZGlzcGxheTogXCJBdXRvbHl6ZWRcIixcclxuICAgIGNvZGU6IFwiQVVUXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS92Mi0wNDkzXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBDb2RlOiBDRlVcclxuICAgKi9cclxuICBDZW50cmlmdWdlZDoge1xyXG4gICAgZGlzcGxheTogXCJDZW50cmlmdWdlZFwiLFxyXG4gICAgY29kZTogXCJDRlVcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL3YyLTA0OTNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IENMT1RcclxuICAgKi9cclxuICBDbG90dGVkOiB7XHJcbiAgICBkaXNwbGF5OiBcIkNsb3R0ZWRcIixcclxuICAgIGNvZGU6IFwiQ0xPVFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vdjItMDQ5M1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogQ09OXHJcbiAgICovXHJcbiAgQ29udGFtaW5hdGVkOiB7XHJcbiAgICBkaXNwbGF5OiBcIkNvbnRhbWluYXRlZFwiLFxyXG4gICAgY29kZTogXCJDT05cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL3YyLTA0OTNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IENPT0xcclxuICAgKi9cclxuICBDb29sOiB7XHJcbiAgICBkaXNwbGF5OiBcIkNvb2xcIixcclxuICAgIGNvZGU6IFwiQ09PTFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vdjItMDQ5M1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogRlJPWlxyXG4gICAqL1xyXG4gIEZyb3plbjoge1xyXG4gICAgZGlzcGxheTogXCJGcm96ZW5cIixcclxuICAgIGNvZGU6IFwiRlJPWlwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vdjItMDQ5M1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogSEVNXHJcbiAgICovXHJcbiAgSGVtb2x5emVkOiB7XHJcbiAgICBkaXNwbGF5OiBcIkhlbW9seXplZFwiLFxyXG4gICAgY29kZTogXCJIRU1cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL3YyLTA0OTNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IExJVkVcclxuICAgKi9cclxuICBMaXZlOiB7XHJcbiAgICBkaXNwbGF5OiBcIkxpdmVcIixcclxuICAgIGNvZGU6IFwiTElWRVwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vdjItMDQ5M1wiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogQ29kZTogUk9PTVxyXG4gICAqL1xyXG4gIFJvb21UZW1wZXJhdHVyZToge1xyXG4gICAgZGlzcGxheTogXCJSb29tIHRlbXBlcmF0dXJlXCIsXHJcbiAgICBjb2RlOiBcIlJPT01cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL3YyLTA0OTNcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIENvZGU6IFNOUlxyXG4gICAqL1xyXG4gIFNhbXBsZU5vdFJlY2VpdmVkOiB7XHJcbiAgICBkaXNwbGF5OiBcIlNhbXBsZSBub3QgcmVjZWl2ZWRcIixcclxuICAgIGNvZGU6IFwiU05SXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS92Mi0wNDkzXCIsXHJcbiAgfSxcclxufSBhcyBjb25zdDtcclxuIl19