// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet Validation: http://hl7.org/fhir/ValueSet/adverse-event-category|4.0.1
/**
 * Overall categorization of the event, e.g. product-related or situational.
 */
export const AdverseEventCategoryVsValidation = [
    "expired-drug", "http://terminology.hl7.org/CodeSystem/adverse-event-category|expired-drug",
    "incorrect-prescribing-information", "http://terminology.hl7.org/CodeSystem/adverse-event-category|incorrect-prescribing-information",
    "medical-device-use-error", "http://terminology.hl7.org/CodeSystem/adverse-event-category|medical-device-use-error",
    "problem-different-manufacturer", "http://terminology.hl7.org/CodeSystem/adverse-event-category|problem-different-manufacturer",
    "product-problem", "http://terminology.hl7.org/CodeSystem/adverse-event-category|product-problem",
    "product-quality", "http://terminology.hl7.org/CodeSystem/adverse-event-category|product-quality",
    "product-use-error", "http://terminology.hl7.org/CodeSystem/adverse-event-category|product-use-error",
    "unsafe-physical-environment", "http://terminology.hl7.org/CodeSystem/adverse-event-category|unsafe-physical-environment",
    "wrong-dose", "http://terminology.hl7.org/CodeSystem/adverse-event-category|wrong-dose",
    "wrong-duration", "http://terminology.hl7.org/CodeSystem/adverse-event-category|wrong-duration",
    "wrong-rate", "http://terminology.hl7.org/CodeSystem/adverse-event-category|wrong-rate",
    "wrong-route-of-administration", "http://terminology.hl7.org/CodeSystem/adverse-event-category|wrong-route-of-administration",
    "wrong-technique", "http://terminology.hl7.org/CodeSystem/adverse-event-category|wrong-technique",
    "wrong-time", "http://terminology.hl7.org/CodeSystem/adverse-event-category|wrong-time",
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQWR2ZXJzZUV2ZW50Q2F0ZWdvcnlWc1ZhbGlkYXRpb24uanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL0FkdmVyc2VFdmVudENhdGVnb3J5VnNWYWxpZGF0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQiwrQ0FBK0M7QUFDL0Msa0NBQWtDO0FBQ2xDLHNGQUFzRjtBQUV0Rjs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLGdDQUFnQyxHQUFzQjtJQUNqRSxjQUFjLEVBQUUsMkVBQTJFO0lBQzNGLG1DQUFtQyxFQUFFLGdHQUFnRztJQUNySSwwQkFBMEIsRUFBRSx1RkFBdUY7SUFDbkgsZ0NBQWdDLEVBQUUsNkZBQTZGO0lBQy9ILGlCQUFpQixFQUFFLDhFQUE4RTtJQUNqRyxpQkFBaUIsRUFBRSw4RUFBOEU7SUFDakcsbUJBQW1CLEVBQUUsZ0ZBQWdGO0lBQ3JHLDZCQUE2QixFQUFFLDBGQUEwRjtJQUN6SCxZQUFZLEVBQUUseUVBQXlFO0lBQ3ZGLGdCQUFnQixFQUFFLDZFQUE2RTtJQUMvRixZQUFZLEVBQUUseUVBQXlFO0lBQ3ZGLCtCQUErQixFQUFFLDRGQUE0RjtJQUM3SCxpQkFBaUIsRUFBRSw4RUFBOEU7SUFDakcsWUFBWSxFQUFFLHlFQUF5RTtDQUMvRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0LmNvcmUgdmVyc2lvbjogNC4wLjFcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0IFZhbGlkYXRpb246IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvYWR2ZXJzZS1ldmVudC1jYXRlZ29yeXw0LjAuMVxyXG5cclxuLyoqXHJcbiAqIE92ZXJhbGwgY2F0ZWdvcml6YXRpb24gb2YgdGhlIGV2ZW50LCBlLmcuIHByb2R1Y3QtcmVsYXRlZCBvciBzaXR1YXRpb25hbC5cclxuICovXHJcbmV4cG9ydCBjb25zdCBBZHZlcnNlRXZlbnRDYXRlZ29yeVZzVmFsaWRhdGlvbjogcmVhZG9ubHkgc3RyaW5nW10gPSBbXHJcbiAgXCJleHBpcmVkLWRydWdcIiwgXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2FkdmVyc2UtZXZlbnQtY2F0ZWdvcnl8ZXhwaXJlZC1kcnVnXCIsIFxyXG4gIFwiaW5jb3JyZWN0LXByZXNjcmliaW5nLWluZm9ybWF0aW9uXCIsIFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9hZHZlcnNlLWV2ZW50LWNhdGVnb3J5fGluY29ycmVjdC1wcmVzY3JpYmluZy1pbmZvcm1hdGlvblwiLCBcclxuICBcIm1lZGljYWwtZGV2aWNlLXVzZS1lcnJvclwiLCBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vYWR2ZXJzZS1ldmVudC1jYXRlZ29yeXxtZWRpY2FsLWRldmljZS11c2UtZXJyb3JcIiwgXHJcbiAgXCJwcm9ibGVtLWRpZmZlcmVudC1tYW51ZmFjdHVyZXJcIiwgXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2FkdmVyc2UtZXZlbnQtY2F0ZWdvcnl8cHJvYmxlbS1kaWZmZXJlbnQtbWFudWZhY3R1cmVyXCIsIFxyXG4gIFwicHJvZHVjdC1wcm9ibGVtXCIsIFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9hZHZlcnNlLWV2ZW50LWNhdGVnb3J5fHByb2R1Y3QtcHJvYmxlbVwiLCBcclxuICBcInByb2R1Y3QtcXVhbGl0eVwiLCBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vYWR2ZXJzZS1ldmVudC1jYXRlZ29yeXxwcm9kdWN0LXF1YWxpdHlcIiwgXHJcbiAgXCJwcm9kdWN0LXVzZS1lcnJvclwiLCBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vYWR2ZXJzZS1ldmVudC1jYXRlZ29yeXxwcm9kdWN0LXVzZS1lcnJvclwiLCBcclxuICBcInVuc2FmZS1waHlzaWNhbC1lbnZpcm9ubWVudFwiLCBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vYWR2ZXJzZS1ldmVudC1jYXRlZ29yeXx1bnNhZmUtcGh5c2ljYWwtZW52aXJvbm1lbnRcIiwgXHJcbiAgXCJ3cm9uZy1kb3NlXCIsIFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9hZHZlcnNlLWV2ZW50LWNhdGVnb3J5fHdyb25nLWRvc2VcIiwgXHJcbiAgXCJ3cm9uZy1kdXJhdGlvblwiLCBcImh0dHA6Ly90ZXJtaW5vbG9neS5obDcub3JnL0NvZGVTeXN0ZW0vYWR2ZXJzZS1ldmVudC1jYXRlZ29yeXx3cm9uZy1kdXJhdGlvblwiLCBcclxuICBcIndyb25nLXJhdGVcIiwgXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2FkdmVyc2UtZXZlbnQtY2F0ZWdvcnl8d3JvbmctcmF0ZVwiLCBcclxuICBcIndyb25nLXJvdXRlLW9mLWFkbWluaXN0cmF0aW9uXCIsIFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9hZHZlcnNlLWV2ZW50LWNhdGVnb3J5fHdyb25nLXJvdXRlLW9mLWFkbWluaXN0cmF0aW9uXCIsIFxyXG4gIFwid3JvbmctdGVjaG5pcXVlXCIsIFwiaHR0cDovL3Rlcm1pbm9sb2d5LmhsNy5vcmcvQ29kZVN5c3RlbS9hZHZlcnNlLWV2ZW50LWNhdGVnb3J5fHdyb25nLXRlY2huaXF1ZVwiLCBcclxuICBcIndyb25nLXRpbWVcIiwgXCJodHRwOi8vdGVybWlub2xvZ3kuaGw3Lm9yZy9Db2RlU3lzdGVtL2FkdmVyc2UtZXZlbnQtY2F0ZWdvcnl8d3JvbmctdGltZVwiLCBcclxuXSBhcyBjb25zdDtcclxuIl19