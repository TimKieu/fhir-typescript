// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/type-derivation-rule|4.0.1
import { Coding } from '../fhir/Coding.js';
/**
 * How a type relates to its baseDefinition.
 */
export const TypeDerivationRuleCodings = {
    /**
     * constraint: This definition adds additional rules to an existing concrete type.
     */
    Constraint: new Coding({
        display: "Constraint",
        code: "constraint",
        system: "http://hl7.org/fhir/type-derivation-rule",
    }),
    /**
     * specialization: This definition defines a new type that adds additional elements to the base type.
     */
    Specialization: new Coding({
        display: "Specialization",
        code: "specialization",
        system: "http://hl7.org/fhir/type-derivation-rule",
    }),
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVHlwZURlcml2YXRpb25SdWxlQ29kaW5ncy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJWYWx1ZVNldHMvVHlwZURlcml2YXRpb25SdWxlQ29kaW5ncy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQyx5RUFBeUU7QUFFekUsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLG1CQUFtQixDQUFBO0FBRTFDOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0seUJBQXlCLEdBQUc7SUFDdkM7O09BRUc7SUFDSCxVQUFVLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDckIsT0FBTyxFQUFFLFlBQVk7UUFDckIsSUFBSSxFQUFFLFlBQVk7UUFDbEIsTUFBTSxFQUFFLDBDQUEwQztLQUNuRCxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxjQUFjLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDekIsT0FBTyxFQUFFLGdCQUFnQjtRQUN6QixJQUFJLEVBQUUsZ0JBQWdCO1FBQ3RCLE1BQU0sRUFBRSwwQ0FBMEM7S0FDbkQsQ0FBQztDQUNNLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjQuY29yZSB2ZXJzaW9uOiA0LjAuMVxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgVmFsdWVTZXQ6IGh0dHA6Ly9obDcub3JnL2ZoaXIvVmFsdWVTZXQvdHlwZS1kZXJpdmF0aW9uLXJ1bGV8NC4wLjFcclxuXHJcbmltcG9ydCB7IENvZGluZyB9IGZyb20gJy4uL2ZoaXIvQ29kaW5nLmpzJ1xyXG5cclxuLyoqXHJcbiAqIEhvdyBhIHR5cGUgcmVsYXRlcyB0byBpdHMgYmFzZURlZmluaXRpb24uXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgVHlwZURlcml2YXRpb25SdWxlQ29kaW5ncyA9IHtcclxuICAvKipcclxuICAgKiBjb25zdHJhaW50OiBUaGlzIGRlZmluaXRpb24gYWRkcyBhZGRpdGlvbmFsIHJ1bGVzIHRvIGFuIGV4aXN0aW5nIGNvbmNyZXRlIHR5cGUuXHJcbiAgICovXHJcbiAgQ29uc3RyYWludDogbmV3IENvZGluZyh7XHJcbiAgICBkaXNwbGF5OiBcIkNvbnN0cmFpbnRcIixcclxuICAgIGNvZGU6IFwiY29uc3RyYWludFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvdHlwZS1kZXJpdmF0aW9uLXJ1bGVcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBzcGVjaWFsaXphdGlvbjogVGhpcyBkZWZpbml0aW9uIGRlZmluZXMgYSBuZXcgdHlwZSB0aGF0IGFkZHMgYWRkaXRpb25hbCBlbGVtZW50cyB0byB0aGUgYmFzZSB0eXBlLlxyXG4gICAqL1xyXG4gIFNwZWNpYWxpemF0aW9uOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiU3BlY2lhbGl6YXRpb25cIixcclxuICAgIGNvZGU6IFwic3BlY2lhbGl6YXRpb25cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL3R5cGUtZGVyaXZhdGlvbi1ydWxlXCIsXHJcbiAgfSksXHJcbn0gYXMgY29uc3Q7XHJcblxyXG4vKipcclxuICogSG93IGEgdHlwZSByZWxhdGVzIHRvIGl0cyBiYXNlRGVmaW5pdGlvbi5cclxuICovXHJcbmV4cG9ydCB0eXBlIFR5cGVEZXJpdmF0aW9uUnVsZUNvZGluZ1R5cGUgPSB0eXBlb2YgVHlwZURlcml2YXRpb25SdWxlQ29kaW5ncztcclxuIl19