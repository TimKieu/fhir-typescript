// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/name-use|4.0.1
/**
 * The use of a human name.
 */
export const NameUseCodings = {
    /**
     * anonymous: Anonymous assigned name, alias, or pseudonym (used to protect a person's identity for privacy reasons).
     */
    Anonymous: {
        display: "Anonymous",
        code: "anonymous",
        system: "http://hl7.org/fhir/name-use",
    },
    /**
     * maiden: A name used prior to changing name because of marriage. This name use is for use by applications that collect and store names that were used prior to a marriage. Marriage naming customs vary greatly around the world, and are constantly changing. This term is not gender specific. The use of this term does not imply any particular history for a person's name.
     */
    NameChangedForMarriage: {
        display: "Name changed for Marriage",
        code: "maiden",
        system: "http://hl7.org/fhir/name-use",
    },
    /**
     * nickname: A name that is used to address the person in an informal manner, but is not part of their formal or usual name.
     */
    Nickname: {
        display: "Nickname",
        code: "nickname",
        system: "http://hl7.org/fhir/name-use",
    },
    /**
     * official: The formal name as registered in an official (government) registry, but which name might not be commonly used. May be called "legal name".
     */
    Official: {
        display: "Official",
        code: "official",
        system: "http://hl7.org/fhir/name-use",
    },
    /**
     * old: This name is no longer in use (or was never correct, but retained for records).
     */
    Old: {
        display: "Old",
        code: "old",
        system: "http://hl7.org/fhir/name-use",
    },
    /**
     * temp: A temporary name. Name.period can provide more detailed information. This may also be used for temporary names assigned at birth or in emergency situations.
     */
    Temp: {
        display: "Temp",
        code: "temp",
        system: "http://hl7.org/fhir/name-use",
    },
    /**
     * usual: Known as/conventional/the one you normally use.
     */
    Usual: {
        display: "Usual",
        code: "usual",
        system: "http://hl7.org/fhir/name-use",
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTmFtZVVzZUNvZGluZ3MuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL05hbWVVc2VDb2RpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQiwrQ0FBK0M7QUFDL0Msa0NBQWtDO0FBQ2xDLDZEQUE2RDtBQXNDN0Q7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxjQUFjLEdBQXFCO0lBQzlDOztPQUVHO0lBQ0gsU0FBUyxFQUFFO1FBQ1QsT0FBTyxFQUFFLFdBQVc7UUFDcEIsSUFBSSxFQUFFLFdBQVc7UUFDakIsTUFBTSxFQUFFLDhCQUE4QjtLQUN2QztJQUNEOztPQUVHO0lBQ0gsc0JBQXNCLEVBQUU7UUFDdEIsT0FBTyxFQUFFLDJCQUEyQjtRQUNwQyxJQUFJLEVBQUUsUUFBUTtRQUNkLE1BQU0sRUFBRSw4QkFBOEI7S0FDdkM7SUFDRDs7T0FFRztJQUNILFFBQVEsRUFBRTtRQUNSLE9BQU8sRUFBRSxVQUFVO1FBQ25CLElBQUksRUFBRSxVQUFVO1FBQ2hCLE1BQU0sRUFBRSw4QkFBOEI7S0FDdkM7SUFDRDs7T0FFRztJQUNILFFBQVEsRUFBRTtRQUNSLE9BQU8sRUFBRSxVQUFVO1FBQ25CLElBQUksRUFBRSxVQUFVO1FBQ2hCLE1BQU0sRUFBRSw4QkFBOEI7S0FDdkM7SUFDRDs7T0FFRztJQUNILEdBQUcsRUFBRTtRQUNILE9BQU8sRUFBRSxLQUFLO1FBQ2QsSUFBSSxFQUFFLEtBQUs7UUFDWCxNQUFNLEVBQUUsOEJBQThCO0tBQ3ZDO0lBQ0Q7O09BRUc7SUFDSCxJQUFJLEVBQUU7UUFDSixPQUFPLEVBQUUsTUFBTTtRQUNmLElBQUksRUFBRSxNQUFNO1FBQ1osTUFBTSxFQUFFLDhCQUE4QjtLQUN2QztJQUNEOztPQUVHO0lBQ0gsS0FBSyxFQUFFO1FBQ0wsT0FBTyxFQUFFLE9BQU87UUFDaEIsSUFBSSxFQUFFLE9BQU87UUFDYixNQUFNLEVBQUUsOEJBQThCO0tBQ3ZDO0NBQ08sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNC5jb3JlIHZlcnNpb246IDQuMC4xXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBWYWx1ZVNldDogaHR0cDovL2hsNy5vcmcvZmhpci9WYWx1ZVNldC9uYW1lLXVzZXw0LjAuMVxyXG5cclxuaW1wb3J0IHsgQ29kaW5nQXJncyB9IGZyb20gJy4uL2ZoaXIvQ29kaW5nLmpzJ1xyXG5cclxuLyoqXHJcbiAqIFRoZSB1c2Ugb2YgYSBodW1hbiBuYW1lLlxyXG4gKi9cclxuZXhwb3J0IHR5cGUgTmFtZVVzZUNvZGluZ1R5cGUgPSB7XHJcbiAgLyoqXHJcbiAgICogYW5vbnltb3VzOiBBbm9ueW1vdXMgYXNzaWduZWQgbmFtZSwgYWxpYXMsIG9yIHBzZXVkb255bSAodXNlZCB0byBwcm90ZWN0IGEgcGVyc29uJ3MgaWRlbnRpdHkgZm9yIHByaXZhY3kgcmVhc29ucykuXHJcbiAgICovXHJcbiAgQW5vbnltb3VzOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIG1haWRlbjogQSBuYW1lIHVzZWQgcHJpb3IgdG8gY2hhbmdpbmcgbmFtZSBiZWNhdXNlIG9mIG1hcnJpYWdlLiBUaGlzIG5hbWUgdXNlIGlzIGZvciB1c2UgYnkgYXBwbGljYXRpb25zIHRoYXQgY29sbGVjdCBhbmQgc3RvcmUgbmFtZXMgdGhhdCB3ZXJlIHVzZWQgcHJpb3IgdG8gYSBtYXJyaWFnZS4gTWFycmlhZ2UgbmFtaW5nIGN1c3RvbXMgdmFyeSBncmVhdGx5IGFyb3VuZCB0aGUgd29ybGQsIGFuZCBhcmUgY29uc3RhbnRseSBjaGFuZ2luZy4gVGhpcyB0ZXJtIGlzIG5vdCBnZW5kZXIgc3BlY2lmaWMuIFRoZSB1c2Ugb2YgdGhpcyB0ZXJtIGRvZXMgbm90IGltcGx5IGFueSBwYXJ0aWN1bGFyIGhpc3RvcnkgZm9yIGEgcGVyc29uJ3MgbmFtZS5cclxuICAgKi9cclxuICBOYW1lQ2hhbmdlZEZvck1hcnJpYWdlOiBDb2RpbmdBcmdzO1xyXG4gIC8qKlxyXG4gICAqIG5pY2tuYW1lOiBBIG5hbWUgdGhhdCBpcyB1c2VkIHRvIGFkZHJlc3MgdGhlIHBlcnNvbiBpbiBhbiBpbmZvcm1hbCBtYW5uZXIsIGJ1dCBpcyBub3QgcGFydCBvZiB0aGVpciBmb3JtYWwgb3IgdXN1YWwgbmFtZS5cclxuICAgKi9cclxuICBOaWNrbmFtZTogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBvZmZpY2lhbDogVGhlIGZvcm1hbCBuYW1lIGFzIHJlZ2lzdGVyZWQgaW4gYW4gb2ZmaWNpYWwgKGdvdmVybm1lbnQpIHJlZ2lzdHJ5LCBidXQgd2hpY2ggbmFtZSBtaWdodCBub3QgYmUgY29tbW9ubHkgdXNlZC4gTWF5IGJlIGNhbGxlZCBcImxlZ2FsIG5hbWVcIi5cclxuICAgKi9cclxuICBPZmZpY2lhbDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiBvbGQ6IFRoaXMgbmFtZSBpcyBubyBsb25nZXIgaW4gdXNlIChvciB3YXMgbmV2ZXIgY29ycmVjdCwgYnV0IHJldGFpbmVkIGZvciByZWNvcmRzKS5cclxuICAgKi9cclxuICBPbGQ6IENvZGluZ0FyZ3M7XHJcbiAgLyoqXHJcbiAgICogdGVtcDogQSB0ZW1wb3JhcnkgbmFtZS4gTmFtZS5wZXJpb2QgY2FuIHByb3ZpZGUgbW9yZSBkZXRhaWxlZCBpbmZvcm1hdGlvbi4gVGhpcyBtYXkgYWxzbyBiZSB1c2VkIGZvciB0ZW1wb3JhcnkgbmFtZXMgYXNzaWduZWQgYXQgYmlydGggb3IgaW4gZW1lcmdlbmN5IHNpdHVhdGlvbnMuXHJcbiAgICovXHJcbiAgVGVtcDogQ29kaW5nQXJncztcclxuICAvKipcclxuICAgKiB1c3VhbDogS25vd24gYXMvY29udmVudGlvbmFsL3RoZSBvbmUgeW91IG5vcm1hbGx5IHVzZS5cclxuICAgKi9cclxuICBVc3VhbDogQ29kaW5nQXJncztcclxufVxyXG5cclxuLyoqXHJcbiAqIFRoZSB1c2Ugb2YgYSBodW1hbiBuYW1lLlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IE5hbWVVc2VDb2RpbmdzOk5hbWVVc2VDb2RpbmdUeXBlID0ge1xyXG4gIC8qKlxyXG4gICAqIGFub255bW91czogQW5vbnltb3VzIGFzc2lnbmVkIG5hbWUsIGFsaWFzLCBvciBwc2V1ZG9ueW0gKHVzZWQgdG8gcHJvdGVjdCBhIHBlcnNvbidzIGlkZW50aXR5IGZvciBwcml2YWN5IHJlYXNvbnMpLlxyXG4gICAqL1xyXG4gIEFub255bW91czoge1xyXG4gICAgZGlzcGxheTogXCJBbm9ueW1vdXNcIixcclxuICAgIGNvZGU6IFwiYW5vbnltb3VzXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9uYW1lLXVzZVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogbWFpZGVuOiBBIG5hbWUgdXNlZCBwcmlvciB0byBjaGFuZ2luZyBuYW1lIGJlY2F1c2Ugb2YgbWFycmlhZ2UuIFRoaXMgbmFtZSB1c2UgaXMgZm9yIHVzZSBieSBhcHBsaWNhdGlvbnMgdGhhdCBjb2xsZWN0IGFuZCBzdG9yZSBuYW1lcyB0aGF0IHdlcmUgdXNlZCBwcmlvciB0byBhIG1hcnJpYWdlLiBNYXJyaWFnZSBuYW1pbmcgY3VzdG9tcyB2YXJ5IGdyZWF0bHkgYXJvdW5kIHRoZSB3b3JsZCwgYW5kIGFyZSBjb25zdGFudGx5IGNoYW5naW5nLiBUaGlzIHRlcm0gaXMgbm90IGdlbmRlciBzcGVjaWZpYy4gVGhlIHVzZSBvZiB0aGlzIHRlcm0gZG9lcyBub3QgaW1wbHkgYW55IHBhcnRpY3VsYXIgaGlzdG9yeSBmb3IgYSBwZXJzb24ncyBuYW1lLlxyXG4gICAqL1xyXG4gIE5hbWVDaGFuZ2VkRm9yTWFycmlhZ2U6IHtcclxuICAgIGRpc3BsYXk6IFwiTmFtZSBjaGFuZ2VkIGZvciBNYXJyaWFnZVwiLFxyXG4gICAgY29kZTogXCJtYWlkZW5cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL25hbWUtdXNlXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBuaWNrbmFtZTogQSBuYW1lIHRoYXQgaXMgdXNlZCB0byBhZGRyZXNzIHRoZSBwZXJzb24gaW4gYW4gaW5mb3JtYWwgbWFubmVyLCBidXQgaXMgbm90IHBhcnQgb2YgdGhlaXIgZm9ybWFsIG9yIHVzdWFsIG5hbWUuXHJcbiAgICovXHJcbiAgTmlja25hbWU6IHtcclxuICAgIGRpc3BsYXk6IFwiTmlja25hbWVcIixcclxuICAgIGNvZGU6IFwibmlja25hbWVcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL25hbWUtdXNlXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiBvZmZpY2lhbDogVGhlIGZvcm1hbCBuYW1lIGFzIHJlZ2lzdGVyZWQgaW4gYW4gb2ZmaWNpYWwgKGdvdmVybm1lbnQpIHJlZ2lzdHJ5LCBidXQgd2hpY2ggbmFtZSBtaWdodCBub3QgYmUgY29tbW9ubHkgdXNlZC4gTWF5IGJlIGNhbGxlZCBcImxlZ2FsIG5hbWVcIi5cclxuICAgKi9cclxuICBPZmZpY2lhbDoge1xyXG4gICAgZGlzcGxheTogXCJPZmZpY2lhbFwiLFxyXG4gICAgY29kZTogXCJvZmZpY2lhbFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvbmFtZS11c2VcIixcclxuICB9LFxyXG4gIC8qKlxyXG4gICAqIG9sZDogVGhpcyBuYW1lIGlzIG5vIGxvbmdlciBpbiB1c2UgKG9yIHdhcyBuZXZlciBjb3JyZWN0LCBidXQgcmV0YWluZWQgZm9yIHJlY29yZHMpLlxyXG4gICAqL1xyXG4gIE9sZDoge1xyXG4gICAgZGlzcGxheTogXCJPbGRcIixcclxuICAgIGNvZGU6IFwib2xkXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9uYW1lLXVzZVwiLFxyXG4gIH0sXHJcbiAgLyoqXHJcbiAgICogdGVtcDogQSB0ZW1wb3JhcnkgbmFtZS4gTmFtZS5wZXJpb2QgY2FuIHByb3ZpZGUgbW9yZSBkZXRhaWxlZCBpbmZvcm1hdGlvbi4gVGhpcyBtYXkgYWxzbyBiZSB1c2VkIGZvciB0ZW1wb3JhcnkgbmFtZXMgYXNzaWduZWQgYXQgYmlydGggb3IgaW4gZW1lcmdlbmN5IHNpdHVhdGlvbnMuXHJcbiAgICovXHJcbiAgVGVtcDoge1xyXG4gICAgZGlzcGxheTogXCJUZW1wXCIsXHJcbiAgICBjb2RlOiBcInRlbXBcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL25hbWUtdXNlXCIsXHJcbiAgfSxcclxuICAvKipcclxuICAgKiB1c3VhbDogS25vd24gYXMvY29udmVudGlvbmFsL3RoZSBvbmUgeW91IG5vcm1hbGx5IHVzZS5cclxuICAgKi9cclxuICBVc3VhbDoge1xyXG4gICAgZGlzcGxheTogXCJVc3VhbFwiLFxyXG4gICAgY29kZTogXCJ1c3VhbFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvbmFtZS11c2VcIixcclxuICB9LFxyXG59IGFzIGNvbnN0O1xyXG4iXX0=