// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/name-use|4.0.1
import { Coding } from '../fhir/Coding.js';
/**
 * The use of a human name.
 */
export const NameUseCodings = {
    /**
     * anonymous: Anonymous assigned name, alias, or pseudonym (used to protect a person's identity for privacy reasons).
     */
    Anonymous: new Coding({
        display: "Anonymous",
        code: "anonymous",
        system: "http://hl7.org/fhir/name-use",
    }),
    /**
     * maiden: A name used prior to changing name because of marriage. This name use is for use by applications that collect and store names that were used prior to a marriage. Marriage naming customs vary greatly around the world, and are constantly changing. This term is not gender specific. The use of this term does not imply any particular history for a person's name.
     */
    NameChangedForMarriage: new Coding({
        display: "Name changed for Marriage",
        code: "maiden",
        system: "http://hl7.org/fhir/name-use",
    }),
    /**
     * nickname: A name that is used to address the person in an informal manner, but is not part of their formal or usual name.
     */
    Nickname: new Coding({
        display: "Nickname",
        code: "nickname",
        system: "http://hl7.org/fhir/name-use",
    }),
    /**
     * official: The formal name as registered in an official (government) registry, but which name might not be commonly used. May be called "legal name".
     */
    Official: new Coding({
        display: "Official",
        code: "official",
        system: "http://hl7.org/fhir/name-use",
    }),
    /**
     * old: This name is no longer in use (or was never correct, but retained for records).
     */
    Old: new Coding({
        display: "Old",
        code: "old",
        system: "http://hl7.org/fhir/name-use",
    }),
    /**
     * temp: A temporary name. Name.period can provide more detailed information. This may also be used for temporary names assigned at birth or in emergency situations.
     */
    Temp: new Coding({
        display: "Temp",
        code: "temp",
        system: "http://hl7.org/fhir/name-use",
    }),
    /**
     * usual: Known as/conventional/the one you normally use.
     */
    Usual: new Coding({
        display: "Usual",
        code: "usual",
        system: "http://hl7.org/fhir/name-use",
    }),
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTmFtZVVzZUNvZGluZ3MuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlyVmFsdWVTZXRzL05hbWVVc2VDb2RpbmdzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQiwrQ0FBK0M7QUFDL0Msa0NBQWtDO0FBQ2xDLDZEQUE2RDtBQUU3RCxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sbUJBQW1CLENBQUE7QUFFMUM7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxjQUFjLEdBQUc7SUFDNUI7O09BRUc7SUFDSCxTQUFTLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDcEIsT0FBTyxFQUFFLFdBQVc7UUFDcEIsSUFBSSxFQUFFLFdBQVc7UUFDakIsTUFBTSxFQUFFLDhCQUE4QjtLQUN2QyxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxzQkFBc0IsRUFBRSxJQUFJLE1BQU0sQ0FBQztRQUNqQyxPQUFPLEVBQUUsMkJBQTJCO1FBQ3BDLElBQUksRUFBRSxRQUFRO1FBQ2QsTUFBTSxFQUFFLDhCQUE4QjtLQUN2QyxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxRQUFRLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDbkIsT0FBTyxFQUFFLFVBQVU7UUFDbkIsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLDhCQUE4QjtLQUN2QyxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxRQUFRLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDbkIsT0FBTyxFQUFFLFVBQVU7UUFDbkIsSUFBSSxFQUFFLFVBQVU7UUFDaEIsTUFBTSxFQUFFLDhCQUE4QjtLQUN2QyxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxHQUFHLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDZCxPQUFPLEVBQUUsS0FBSztRQUNkLElBQUksRUFBRSxLQUFLO1FBQ1gsTUFBTSxFQUFFLDhCQUE4QjtLQUN2QyxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxJQUFJLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDZixPQUFPLEVBQUUsTUFBTTtRQUNmLElBQUksRUFBRSxNQUFNO1FBQ1osTUFBTSxFQUFFLDhCQUE4QjtLQUN2QyxDQUFDO0lBQ0Y7O09BRUc7SUFDSCxLQUFLLEVBQUUsSUFBSSxNQUFNLENBQUM7UUFDaEIsT0FBTyxFQUFFLE9BQU87UUFDaEIsSUFBSSxFQUFFLE9BQU87UUFDYixNQUFNLEVBQUUsOEJBQThCO0tBQ3ZDLENBQUM7Q0FDTSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0LmNvcmUgdmVyc2lvbjogNC4wLjFcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFZhbHVlU2V0OiBodHRwOi8vaGw3Lm9yZy9maGlyL1ZhbHVlU2V0L25hbWUtdXNlfDQuMC4xXHJcblxyXG5pbXBvcnQgeyBDb2RpbmcgfSBmcm9tICcuLi9maGlyL0NvZGluZy5qcydcclxuXHJcbi8qKlxyXG4gKiBUaGUgdXNlIG9mIGEgaHVtYW4gbmFtZS5cclxuICovXHJcbmV4cG9ydCBjb25zdCBOYW1lVXNlQ29kaW5ncyA9IHtcclxuICAvKipcclxuICAgKiBhbm9ueW1vdXM6IEFub255bW91cyBhc3NpZ25lZCBuYW1lLCBhbGlhcywgb3IgcHNldWRvbnltICh1c2VkIHRvIHByb3RlY3QgYSBwZXJzb24ncyBpZGVudGl0eSBmb3IgcHJpdmFjeSByZWFzb25zKS5cclxuICAgKi9cclxuICBBbm9ueW1vdXM6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJBbm9ueW1vdXNcIixcclxuICAgIGNvZGU6IFwiYW5vbnltb3VzXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9uYW1lLXVzZVwiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIG1haWRlbjogQSBuYW1lIHVzZWQgcHJpb3IgdG8gY2hhbmdpbmcgbmFtZSBiZWNhdXNlIG9mIG1hcnJpYWdlLiBUaGlzIG5hbWUgdXNlIGlzIGZvciB1c2UgYnkgYXBwbGljYXRpb25zIHRoYXQgY29sbGVjdCBhbmQgc3RvcmUgbmFtZXMgdGhhdCB3ZXJlIHVzZWQgcHJpb3IgdG8gYSBtYXJyaWFnZS4gTWFycmlhZ2UgbmFtaW5nIGN1c3RvbXMgdmFyeSBncmVhdGx5IGFyb3VuZCB0aGUgd29ybGQsIGFuZCBhcmUgY29uc3RhbnRseSBjaGFuZ2luZy4gVGhpcyB0ZXJtIGlzIG5vdCBnZW5kZXIgc3BlY2lmaWMuIFRoZSB1c2Ugb2YgdGhpcyB0ZXJtIGRvZXMgbm90IGltcGx5IGFueSBwYXJ0aWN1bGFyIGhpc3RvcnkgZm9yIGEgcGVyc29uJ3MgbmFtZS5cclxuICAgKi9cclxuICBOYW1lQ2hhbmdlZEZvck1hcnJpYWdlOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiTmFtZSBjaGFuZ2VkIGZvciBNYXJyaWFnZVwiLFxyXG4gICAgY29kZTogXCJtYWlkZW5cIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL25hbWUtdXNlXCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogbmlja25hbWU6IEEgbmFtZSB0aGF0IGlzIHVzZWQgdG8gYWRkcmVzcyB0aGUgcGVyc29uIGluIGFuIGluZm9ybWFsIG1hbm5lciwgYnV0IGlzIG5vdCBwYXJ0IG9mIHRoZWlyIGZvcm1hbCBvciB1c3VhbCBuYW1lLlxyXG4gICAqL1xyXG4gIE5pY2tuYW1lOiBuZXcgQ29kaW5nKHtcclxuICAgIGRpc3BsYXk6IFwiTmlja25hbWVcIixcclxuICAgIGNvZGU6IFwibmlja25hbWVcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL25hbWUtdXNlXCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogb2ZmaWNpYWw6IFRoZSBmb3JtYWwgbmFtZSBhcyByZWdpc3RlcmVkIGluIGFuIG9mZmljaWFsIChnb3Zlcm5tZW50KSByZWdpc3RyeSwgYnV0IHdoaWNoIG5hbWUgbWlnaHQgbm90IGJlIGNvbW1vbmx5IHVzZWQuIE1heSBiZSBjYWxsZWQgXCJsZWdhbCBuYW1lXCIuXHJcbiAgICovXHJcbiAgT2ZmaWNpYWw6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJPZmZpY2lhbFwiLFxyXG4gICAgY29kZTogXCJvZmZpY2lhbFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvbmFtZS11c2VcIixcclxuICB9KSxcclxuICAvKipcclxuICAgKiBvbGQ6IFRoaXMgbmFtZSBpcyBubyBsb25nZXIgaW4gdXNlIChvciB3YXMgbmV2ZXIgY29ycmVjdCwgYnV0IHJldGFpbmVkIGZvciByZWNvcmRzKS5cclxuICAgKi9cclxuICBPbGQ6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJPbGRcIixcclxuICAgIGNvZGU6IFwib2xkXCIsXHJcbiAgICBzeXN0ZW06IFwiaHR0cDovL2hsNy5vcmcvZmhpci9uYW1lLXVzZVwiLFxyXG4gIH0pLFxyXG4gIC8qKlxyXG4gICAqIHRlbXA6IEEgdGVtcG9yYXJ5IG5hbWUuIE5hbWUucGVyaW9kIGNhbiBwcm92aWRlIG1vcmUgZGV0YWlsZWQgaW5mb3JtYXRpb24uIFRoaXMgbWF5IGFsc28gYmUgdXNlZCBmb3IgdGVtcG9yYXJ5IG5hbWVzIGFzc2lnbmVkIGF0IGJpcnRoIG9yIGluIGVtZXJnZW5jeSBzaXR1YXRpb25zLlxyXG4gICAqL1xyXG4gIFRlbXA6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJUZW1wXCIsXHJcbiAgICBjb2RlOiBcInRlbXBcIixcclxuICAgIHN5c3RlbTogXCJodHRwOi8vaGw3Lm9yZy9maGlyL25hbWUtdXNlXCIsXHJcbiAgfSksXHJcbiAgLyoqXHJcbiAgICogdXN1YWw6IEtub3duIGFzL2NvbnZlbnRpb25hbC90aGUgb25lIHlvdSBub3JtYWxseSB1c2UuXHJcbiAgICovXHJcbiAgVXN1YWw6IG5ldyBDb2Rpbmcoe1xyXG4gICAgZGlzcGxheTogXCJVc3VhbFwiLFxyXG4gICAgY29kZTogXCJ1c3VhbFwiLFxyXG4gICAgc3lzdGVtOiBcImh0dHA6Ly9obDcub3JnL2ZoaXIvbmFtZS11c2VcIixcclxuICB9KSxcclxufSBhcyBjb25zdDtcclxuXHJcbi8qKlxyXG4gKiBUaGUgdXNlIG9mIGEgaHVtYW4gbmFtZS5cclxuICovXHJcbmV4cG9ydCB0eXBlIE5hbWVVc2VDb2RpbmdUeXBlID0gdHlwZW9mIE5hbWVVc2VDb2RpbmdzO1xyXG4iXX0=