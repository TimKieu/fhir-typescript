/*! @fhir-typescript/r4-core v0.0.11-beta.2 2022-05-18 */
'use strict';
import { __extends } from '../_virtual/_tslib.js';
import { IssueTypeCodes } from '../fhirValueSets/IssueTypeCodes.js';
import { IssueSeverityCodes } from '../fhirValueSets/IssueSeverityCodes.js';
import { OperationOutcomeIssue } from './OperationOutcome.js';
import { DomainResource } from './DomainResource.js';
import { Reference } from './Reference.js';
import { CodeableConcept } from './CodeableConcept.js';
import { Population } from './Population.js';

// <auto-generated/>
/**
 * Describe the undesirable effects of the medicinal product.
 */
var MedicinalProductUndesirableEffect = /** @class */ (function (_super) {
    __extends(MedicinalProductUndesirableEffect, _super);
    /**
     * Default constructor for MedicinalProductUndesirableEffect - initializes any required elements to null if a value is not provided.
     */
    function MedicinalProductUndesirableEffect(source, options) {
        if (source === void 0) { source = {}; }
        if (options === void 0) { options = {}; }
        var _this = _super.call(this, source, options) || this;
        _this.resourceType = 'MedicinalProductUndesirableEffect';
        if (source['subject']) {
            _this.subject = source.subject.map(function (x) { return new Reference(x); });
        }
        else {
            _this.subject = [];
        }
        if (source['symptomConditionEffect']) {
            _this.symptomConditionEffect = new CodeableConcept(source.symptomConditionEffect);
        }
        if (source['classification']) {
            _this.classification = new CodeableConcept(source.classification);
        }
        if (source['frequencyOfOccurrence']) {
            _this.frequencyOfOccurrence = new CodeableConcept(source.frequencyOfOccurrence);
        }
        if (source['population']) {
            _this.population = source.population.map(function (x) { return new Population(x); });
        }
        else {
            _this.population = [];
        }
        return _this;
    }
    /**
     * Function to perform basic model validation (e.g., check if required elements are present).
     */
    MedicinalProductUndesirableEffect.prototype.doModelValidation = function () {
        var _a, _b, _c;
        var outcome = _super.prototype.doModelValidation.call(this);
        if (!this['resourceType']) {
            outcome.issue.push(new OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing, diagnostics: 'Missing required property resourceType:"MedicinalProductUndesirableEffect" fhir: MedicinalProductUndesirableEffect.resourceType:"MedicinalProductUndesirableEffect"', }));
        }
        if (this["subject"]) {
            this.subject.forEach(function (x) {
                var _a;
                (_a = outcome.issue).push.apply(_a, x.doModelValidation().issue);
            });
        }
        if (this["symptomConditionEffect"]) {
            (_a = outcome.issue).push.apply(_a, this.symptomConditionEffect.doModelValidation().issue);
        }
        if (this["classification"]) {
            (_b = outcome.issue).push.apply(_b, this.classification.doModelValidation().issue);
        }
        if (this["frequencyOfOccurrence"]) {
            (_c = outcome.issue).push.apply(_c, this.frequencyOfOccurrence.doModelValidation().issue);
        }
        if (this["population"]) {
            this.population.forEach(function (x) {
                var _a;
                (_a = outcome.issue).push.apply(_a, x.doModelValidation().issue);
            });
        }
        return outcome;
    };
    /**
     * Mapping of this datatype to a FHIR equivalent
     */
    MedicinalProductUndesirableEffect._fts_dataType = 'MedicinalProductUndesirableEffect';
    return MedicinalProductUndesirableEffect;
}(DomainResource));

export { MedicinalProductUndesirableEffect };
//# sourceMappingURL=MedicinalProductUndesirableEffect.js.map
