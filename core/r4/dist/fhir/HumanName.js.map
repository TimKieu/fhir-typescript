{"version":3,"file":"HumanName.js","sources":["../../src/fhir/HumanName.ts"],"sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4.core version: 4.0.1\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR ComplexType: HumanName\r\n\r\nimport * as fhir from '../fhir.js';\r\n\r\n// @ts-ignore\r\nimport { NameUseCodings, NameUseCodingType,} from '../fhirValueSets/NameUseCodings.js';\r\n// @ts-ignore\r\nimport { NameUseCodes,  NameUseCodeType } from '../fhirValueSets/NameUseCodes.js';\r\n// @ts-ignore\r\nimport { IssueTypeCodes } from '../fhirValueSets/IssueTypeCodes.js';\r\n// @ts-ignore\r\nimport { IssueSeverityCodes } from '../fhirValueSets/IssueSeverityCodes.js';\r\n/**\r\n * Valid arguments for the HumanName type.\r\n */\r\nexport interface HumanNameArgs extends fhir.FhirElementArgs {\r\n  /**\r\n   * Applications can assume that a name is current unless it explicitly says that it is temporary or old.\r\n   */\r\n  use?: NameUseCodeType|undefined;\r\n  /**\r\n   * Can provide both a text representation and parts. Applications updating a name SHALL ensure that when both text and parts are present,  no content is included in the text that isn't found in a part.\r\n   */\r\n  text?: fhir.FhirString|string|undefined;\r\n  /**\r\n   * Family Name may be decomposed into specific parts using extensions (de, nl, es related cultures).\r\n   */\r\n  family?: fhir.FhirString|string|undefined;\r\n  /**\r\n   * If only initials are recorded, they may be used in place of the full name parts. Initials may be separated into multiple given names but often aren't due to paractical limitations.  This element is not called \"first name\" since given names do not always come first.\r\n   */\r\n  given?: fhir.FhirString[]|string[]|undefined;\r\n  /**\r\n   * Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the start of the name.\r\n   */\r\n  prefix?: fhir.FhirString[]|string[]|undefined;\r\n  /**\r\n   * Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the end of the name.\r\n   */\r\n  suffix?: fhir.FhirString[]|string[]|undefined;\r\n  /**\r\n   * Indicates the period of time when this name was valid for the named person.\r\n   */\r\n  period?: fhir.PeriodArgs|undefined;\r\n}\r\n\r\n/**\r\n * A human's name with the ability to identify parts and usage.\r\n */\r\nexport class HumanName extends fhir.FhirElement {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'HumanName';\r\n  /**\r\n   * Applications can assume that a name is current unless it explicitly says that it is temporary or old.\r\n   */\r\n  public use?: NameUseCodeType|undefined;\r\n  /**\r\n   * Can provide both a text representation and parts. Applications updating a name SHALL ensure that when both text and parts are present,  no content is included in the text that isn't found in a part.\r\n   */\r\n  public text?: fhir.FhirString|undefined;\r\n  /**\r\n   * Family Name may be decomposed into specific parts using extensions (de, nl, es related cultures).\r\n   */\r\n  public family?: fhir.FhirString|undefined;\r\n  /**\r\n   * If only initials are recorded, they may be used in place of the full name parts. Initials may be separated into multiple given names but often aren't due to paractical limitations.  This element is not called \"first name\" since given names do not always come first.\r\n   */\r\n  public given?: fhir.FhirString[];\r\n  /**\r\n   * Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the start of the name.\r\n   */\r\n  public prefix?: fhir.FhirString[];\r\n  /**\r\n   * Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the end of the name.\r\n   */\r\n  public suffix?: fhir.FhirString[];\r\n  /**\r\n   * Indicates the period of time when this name was valid for the named person.\r\n   */\r\n  public period?: fhir.Period|undefined;\r\n  /**\r\n   * Default constructor for HumanName - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<HumanNameArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    if (source['use']) { this.use = source.use; }\r\n    if (source['text']) { this.text = new fhir.FhirString({value: source.text}); }\r\n    if (source['family']) { this.family = new fhir.FhirString({value: source.family}); }\r\n    if (source['given']) { this.given = source.given.map((x) => new fhir.FhirString({value: x})); }\r\n    else { this.given = []; }\r\n    if (source['prefix']) { this.prefix = source.prefix.map((x) => new fhir.FhirString({value: x})); }\r\n    else { this.prefix = []; }\r\n    if (source['suffix']) { this.suffix = source.suffix.map((x) => new fhir.FhirString({value: x})); }\r\n    else { this.suffix = []; }\r\n    if (source['period']) { this.period = new fhir.Period(source.period); }\r\n  }\r\n  /**\r\n   * Required-bound Value Set for use (HumanName.use)\r\n   */\r\n  public static useRequiredCoding():NameUseCodingType {\r\n    return NameUseCodings;\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (this[\"text\"]) { outcome.issue!.push(...this.text.doModelValidation().issue!); }\r\n    if (this[\"family\"]) { outcome.issue!.push(...this.family.doModelValidation().issue!); }\r\n    if (this[\"given\"]) { this.given.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"prefix\"]) { this.prefix.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"suffix\"]) { this.suffix.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"period\"]) { outcome.issue!.push(...this.period.doModelValidation().issue!); }\r\n    return outcome;\r\n  }\r\n\r\n/**\r\n * Convert a HumanName into a displayable string\r\n */\r\ntoDisplay(familyFirst:boolean = true, includeAnnotations:boolean = false):string {\r\n  if ((this.text) && (this.text.length > 0)) {\r\n    return this.text.toString();\r\n  }\r\n\r\n  var val:string = '';\r\n\r\n  if (familyFirst) {\r\n    if (this.family) {\r\n      val = this.family.toString();\r\n    }\r\n\r\n    if (this.given) {\r\n      val += (val.length > 0 ? ', ' : '') + this.given.join(' ');\r\n    }\r\n\r\n    if (includeAnnotations) {\r\n      if (this.suffix) {\r\n        val += (val.length > 0 ? ', ' : '') + this.suffix.join(', ');\r\n      }\r\n\r\n      if (this.prefix) {\r\n        val += (val.length > 0 ? ', ' : '') + this.prefix.join(', ');\r\n      }\r\n    }\r\n\r\n    return val;\r\n  }\r\n\r\n  if ((includeAnnotations) && (this.prefix)) {\r\n    val += this.prefix.join(', ');\r\n  }\r\n\r\n  if (this.given) {\r\n    val = (val.length > 0 ? ' ' : '') + this.given.join(' ');\r\n  }\r\n  if (this.family) {\r\n    val += (val.length > 0 ? ' ' : '') + this.family;\r\n  }\r\n\r\n  if ((includeAnnotations) && (this.suffix)) {\r\n    val += (val.length > 0 ? ', ' : '') + this.suffix.join(', ');\r\n  }\r\n\r\n  return val;\r\n}\r\n}\r\n"],"names":["fhir.FhirString","fhir.Period","fhir.FhirElement"],"mappings":"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"}