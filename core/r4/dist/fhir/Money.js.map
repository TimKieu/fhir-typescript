{"version":3,"file":"Money.js","sources":["../../src/fhir/Money.ts"],"sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4.core version: 4.0.1\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR ComplexType: Money\r\n\r\nimport * as fhir from '../fhir.js';\r\n\r\n// @ts-ignore\r\nimport { CurrenciesCodings, CurrenciesCodingType,} from '../fhirValueSets/CurrenciesCodings.js';\r\n// @ts-ignore\r\nimport { CurrenciesCodes,  CurrenciesCodeType } from '../fhirValueSets/CurrenciesCodes.js';\r\n// @ts-ignore\r\nimport { IssueTypeCodes } from '../fhirValueSets/IssueTypeCodes.js';\r\n// @ts-ignore\r\nimport { IssueSeverityCodes } from '../fhirValueSets/IssueSeverityCodes.js';\r\n/**\r\n * Valid arguments for the Money type.\r\n */\r\nexport interface MoneyArgs extends fhir.FhirElementArgs {\r\n  /**\r\n   * Monetary values have their own rules for handling precision (refer to standard accounting text books).\r\n   */\r\n  value?: fhir.FhirDecimal|number|undefined;\r\n  /**\r\n   * ISO 4217 Currency Code.\r\n   */\r\n  currency?: fhir.FhirCode|string|undefined;\r\n}\r\n\r\n/**\r\n * An amount of economic utility in some recognized currency.\r\n */\r\nexport class Money extends fhir.FhirElement {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'Money';\r\n  /**\r\n   * Monetary values have their own rules for handling precision (refer to standard accounting text books).\r\n   */\r\n  public value?: fhir.FhirDecimal|undefined;\r\n  /**\r\n   * ISO 4217 Currency Code.\r\n   */\r\n  public currency?: fhir.FhirCode|undefined;\r\n  /**\r\n   * Default constructor for Money - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<MoneyArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    if (source['value']) { this.value = new fhir.FhirDecimal({value: source.value}); }\r\n    if (source['currency']) { this.currency = new fhir.FhirCode({value: source.currency}); }\r\n  }\r\n  /**\r\n   * Required-bound Value Set for currency (Money.currency)\r\n   */\r\n  public static currencyRequiredCoding():CurrenciesCodingType {\r\n    return CurrenciesCodings;\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (this[\"value\"]) { outcome.issue!.push(...this.value.doModelValidation().issue!); }\r\n    if (this[\"currency\"]) { outcome.issue!.push(...this.currency.doModelValidation().issue!); }\r\n    return outcome;\r\n  }\r\n}\r\n"],"names":["fhir.FhirDecimal","fhir.FhirCode","fhir.FhirElement"],"mappings":";;;;;;;;AAAA;AA6BA;;AAEG;AACH,IAAA,KAAA,kBAAA,UAAA,MAAA,EAAA;IAA2B,SAAgB,CAAA,KAAA,EAAA,MAAA,CAAA,CAAA;AAazC;;AAEG;IACH,SAAY,KAAA,CAAA,MAA8B,EAAE,OAAwC,EAAA;AAAxE,QAAA,IAAA,MAAA,KAAA,KAAA,CAAA,EAAA,EAAA,MAA8B,GAAA,EAAA,CAAA,EAAA;AAAE,QAAA,IAAA,OAAA,KAAA,KAAA,CAAA,EAAA,EAAA,OAAwC,GAAA,EAAA,CAAA,EAAA;AAApF,QAAA,IAAA,KAAA,GACE,MAAM,CAAA,IAAA,CAAA,IAAA,EAAA,MAAM,EAAE,OAAO,CAAC,IAGvB,IAAA,CAAA;AAFC,QAAA,IAAI,MAAM,CAAC,OAAO,CAAC,EAAE;AAAE,YAAA,KAAI,CAAC,KAAK,GAAG,IAAIA,WAAgB,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,KAAK,EAAC,CAAC,CAAC;AAAE,SAAA;AAClF,QAAA,IAAI,MAAM,CAAC,UAAU,CAAC,EAAE;AAAE,YAAA,KAAI,CAAC,QAAQ,GAAG,IAAIC,QAAa,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,QAAQ,EAAC,CAAC,CAAC;AAAE,SAAA;;KACzF;AACD;;AAEG;AACW,IAAA,KAAA,CAAA,sBAAsB,GAApC,YAAA;AACE,QAAA,OAAO,iBAAiB,CAAC;KAC1B,CAAA;AACD;;AAEG;AACa,IAAA,KAAA,CAAA,SAAA,CAAA,iBAAiB,GAAjC,YAAA;;AACE,QAAA,IAAI,OAAO,GAAyB,MAAM,CAAA,SAAA,CAAA,iBAAiB,WAAE,CAAC;AAC9D,QAAA,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE;AAAE,YAAA,CAAA,KAAA,OAAO,CAAC,KAAM,EAAC,IAAI,CAAA,KAAA,CAAA,EAAA,EAAI,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE,CAAC,KAAM,CAAE,CAAA;AAAE,SAAA;AACrF,QAAA,IAAI,IAAI,CAAC,UAAU,CAAC,EAAE;AAAE,YAAA,CAAA,KAAA,OAAO,CAAC,KAAM,EAAC,IAAI,CAAA,KAAA,CAAA,EAAA,EAAI,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,CAAC,KAAM,CAAE,CAAA;AAAE,SAAA;AAC3F,QAAA,OAAO,OAAO,CAAC;KAChB,CAAA;AAlCD;;AAEG;IACoB,KAAa,CAAA,aAAA,GAAU,OAAO,CAAC;IAgCxD,OAAC,KAAA,CAAA;AAAA,CApCD,CAA2BC,WAAgB,CAoC1C;;;;"}