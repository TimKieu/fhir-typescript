{"version":3,"file":"MedicinalProductManufactured.js","sources":["../../src/fhir/MedicinalProductManufactured.ts"],"sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4.core version: 4.0.1\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR Resource: MedicinalProductManufactured\r\n\r\nimport * as fhir from '../fhir.js';\r\n\r\n// @ts-ignore\r\nimport { IssueTypeCodes } from '../fhirValueSets/IssueTypeCodes.js';\r\n// @ts-ignore\r\nimport { IssueSeverityCodes } from '../fhirValueSets/IssueSeverityCodes.js';\r\n/**\r\n * Valid arguments for the MedicinalProductManufactured type.\r\n */\r\nexport interface MedicinalProductManufacturedArgs extends fhir.DomainResourceArgs {\r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  resourceType: \"MedicinalProductManufactured\"|undefined;\r\n  /**\r\n   * Dose form as manufactured and before any transformation into the pharmaceutical product.\r\n   */\r\n  manufacturedDoseForm: fhir.CodeableConceptArgs|null;\r\n  /**\r\n   * The “real world” units in which the quantity of the manufactured item is described.\r\n   */\r\n  unitOfPresentation?: fhir.CodeableConceptArgs|undefined;\r\n  /**\r\n   * The quantity or \"count number\" of the manufactured item.\r\n   */\r\n  quantity: fhir.QuantityArgs|null;\r\n  /**\r\n   * Manufacturer of the item (Note that this should be named \"manufacturer\" but it currently causes technical issues).\r\n   */\r\n  manufacturer?: fhir.ReferenceArgs[]|undefined;\r\n  /**\r\n   * Ingredient.\r\n   */\r\n  ingredient?: fhir.ReferenceArgs[]|undefined;\r\n  /**\r\n   * Dimensions, color etc.\r\n   */\r\n  physicalCharacteristics?: fhir.ProdCharacteristicArgs|undefined;\r\n  /**\r\n   * Other codeable characteristics.\r\n   */\r\n  otherCharacteristics?: fhir.CodeableConceptArgs[]|undefined;\r\n}\r\n\r\n/**\r\n * The manufactured item as contained in the packaged medicinal product.\r\n */\r\nexport class MedicinalProductManufactured extends fhir.DomainResource {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'MedicinalProductManufactured';\r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  public resourceType: \"MedicinalProductManufactured\";\r\n  /**\r\n   * Dose form as manufactured and before any transformation into the pharmaceutical product.\r\n   */\r\n  public manufacturedDoseForm: fhir.CodeableConcept|null;\r\n  /**\r\n   * The “real world” units in which the quantity of the manufactured item is described.\r\n   */\r\n  public unitOfPresentation?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * The quantity or \"count number\" of the manufactured item.\r\n   */\r\n  public quantity: fhir.Quantity|null;\r\n  /**\r\n   * Manufacturer of the item (Note that this should be named \"manufacturer\" but it currently causes technical issues).\r\n   */\r\n  public manufacturer?: fhir.Reference[];\r\n  /**\r\n   * Ingredient.\r\n   */\r\n  public ingredient?: fhir.Reference[];\r\n  /**\r\n   * Dimensions, color etc.\r\n   */\r\n  public physicalCharacteristics?: fhir.ProdCharacteristic|undefined;\r\n  /**\r\n   * Other codeable characteristics.\r\n   */\r\n  public otherCharacteristics?: fhir.CodeableConcept[];\r\n  /**\r\n   * Default constructor for MedicinalProductManufactured - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<MedicinalProductManufacturedArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    this.resourceType = 'MedicinalProductManufactured';\r\n    if (source['manufacturedDoseForm']) { this.manufacturedDoseForm = new fhir.CodeableConcept(source.manufacturedDoseForm); }\r\n    else { this.manufacturedDoseForm = null; }\r\n    if (source['unitOfPresentation']) { this.unitOfPresentation = new fhir.CodeableConcept(source.unitOfPresentation); }\r\n    if (source['quantity']) { this.quantity = new fhir.Quantity(source.quantity); }\r\n    else { this.quantity = null; }\r\n    if (source['manufacturer']) { this.manufacturer = source.manufacturer.map((x) => new fhir.Reference(x)); }\r\n    else { this.manufacturer = []; }\r\n    if (source['ingredient']) { this.ingredient = source.ingredient.map((x) => new fhir.Reference(x)); }\r\n    else { this.ingredient = []; }\r\n    if (source['physicalCharacteristics']) { this.physicalCharacteristics = new fhir.ProdCharacteristic(source.physicalCharacteristics); }\r\n    if (source['otherCharacteristics']) { this.otherCharacteristics = source.otherCharacteristics.map((x) => new fhir.CodeableConcept(x)); }\r\n    else { this.otherCharacteristics = []; }\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (!this['resourceType']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property resourceType:\"MedicinalProductManufactured\" fhir: MedicinalProductManufactured.resourceType:\"MedicinalProductManufactured\"', }));\r\n    }\r\n    if (!this['manufacturedDoseForm']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property manufacturedDoseForm:fhir.CodeableConcept fhir: MedicinalProductManufactured.manufacturedDoseForm:CodeableConcept', }));\r\n    }\r\n    if (this[\"manufacturedDoseForm\"]) { outcome.issue!.push(...this.manufacturedDoseForm.doModelValidation().issue!); }\r\n    if (this[\"unitOfPresentation\"]) { outcome.issue!.push(...this.unitOfPresentation.doModelValidation().issue!); }\r\n    if (!this['quantity']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property quantity:fhir.Quantity fhir: MedicinalProductManufactured.quantity:Quantity', }));\r\n    }\r\n    if (this[\"quantity\"]) { outcome.issue!.push(...this.quantity.doModelValidation().issue!); }\r\n    if (this[\"manufacturer\"]) { this.manufacturer.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"ingredient\"]) { this.ingredient.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"physicalCharacteristics\"]) { outcome.issue!.push(...this.physicalCharacteristics.doModelValidation().issue!); }\r\n    if (this[\"otherCharacteristics\"]) { this.otherCharacteristics.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    return outcome;\r\n  }\r\n}\r\n"],"names":["fhir.CodeableConcept","fhir.Quantity","fhir.Reference","fhir.ProdCharacteristic","fhir.OperationOutcomeIssue","fhir.DomainResource"],"mappings":"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"}