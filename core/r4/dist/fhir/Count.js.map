{"version":3,"file":"Count.js","sources":["../../src/fhir/Count.ts"],"sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4.core version: 4.0.1\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR ComplexType: Count\r\n\r\nimport * as fhir from '../fhir.js';\r\n\r\n// @ts-ignore\r\nimport { IssueTypeCodes } from '../fhirValueSets/IssueTypeCodes.js';\r\n// @ts-ignore\r\nimport { IssueSeverityCodes } from '../fhirValueSets/IssueSeverityCodes.js';\r\n/**\r\n * Valid arguments for the Count type.\r\n */\r\nexport interface CountArgs extends fhir.QuantityArgs {\r\n}\r\n\r\n/**\r\n * A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.\r\n */\r\nexport class Count extends fhir.Quantity {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'Count';\r\n  /**\r\n   * Default constructor for Count - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<CountArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    return outcome;\r\n  }\r\n}\r\n"],"names":["fhir.Quantity"],"mappings":";;;;;AAAA;AAiBA;;AAEG;AACH,IAAA,KAAA,kBAAA,UAAA,MAAA,EAAA;IAA2B,SAAa,CAAA,KAAA,EAAA,MAAA,CAAA,CAAA;AAKtC;;AAEG;IACH,SAAY,KAAA,CAAA,MAA8B,EAAE,OAAwC,EAAA;AAAxE,QAAA,IAAA,MAAA,KAAA,KAAA,CAAA,EAAA,EAAA,MAA8B,GAAA,EAAA,CAAA,EAAA;AAAE,QAAA,IAAA,OAAA,KAAA,KAAA,CAAA,EAAA,EAAA,OAAwC,GAAA,EAAA,CAAA,EAAA;eAClF,MAAM,CAAA,IAAA,CAAA,IAAA,EAAA,MAAM,EAAE,OAAO,CAAC,IAAA,IAAA,CAAA;KACvB;AACD;;AAEG;AACa,IAAA,KAAA,CAAA,SAAA,CAAA,iBAAiB,GAAjC,YAAA;AACE,QAAA,IAAI,OAAO,GAAyB,MAAM,CAAA,SAAA,CAAA,iBAAiB,WAAE,CAAC;AAC9D,QAAA,OAAO,OAAO,CAAC;KAChB,CAAA;AAhBD;;AAEG;IACoB,KAAa,CAAA,aAAA,GAAU,OAAO,CAAC;IAcxD,OAAC,KAAA,CAAA;AAAA,CAlBD,CAA2BA,QAAa,CAkBvC;;;;"}