{"version":3,"file":"MedicinalProductContraindication.js","sources":["../../src/fhir/MedicinalProductContraindication.ts"],"sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4.core version: 4.0.1\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR Resource: MedicinalProductContraindication\r\n\r\nimport * as fhir from '../fhir.js';\r\n\r\n// @ts-ignore\r\nimport { IssueTypeCodes } from '../fhirValueSets/IssueTypeCodes.js';\r\n// @ts-ignore\r\nimport { IssueSeverityCodes } from '../fhirValueSets/IssueSeverityCodes.js';\r\n/**\r\n * Valid arguments for the MedicinalProductContraindicationOtherTherapy type.\r\n */\r\nexport interface MedicinalProductContraindicationOtherTherapyArgs extends fhir.BackboneElementArgs {\r\n  /**\r\n   * The type of relationship between the medicinal product indication or contraindication and another therapy.\r\n   */\r\n  therapyRelationshipType: fhir.CodeableConceptArgs|null;\r\n  /**\r\n   * Reference to a specific medication (active substance, medicinal product or class of products) as part of an indication or contraindication.\r\n   */\r\n  medication?: fhir.CodeableConcept|fhir.Reference|undefined;\r\n  /**\r\n   * Reference to a specific medication (active substance, medicinal product or class of products) as part of an indication or contraindication.\r\n   */\r\n  medicationCodeableConcept?: fhir.CodeableConceptArgs|undefined;\r\n  /**\r\n   * Reference to a specific medication (active substance, medicinal product or class of products) as part of an indication or contraindication.\r\n   */\r\n  medicationReference?: fhir.ReferenceArgs|undefined;\r\n}\r\n\r\n/**\r\n * Information about the use of the medicinal product in relation to other therapies described as part of the indication.\r\n */\r\nexport class MedicinalProductContraindicationOtherTherapy extends fhir.BackboneElement {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'MedicinalProductContraindicationOtherTherapy';\r\n  /**\r\n   * The type of relationship between the medicinal product indication or contraindication and another therapy.\r\n   */\r\n  public therapyRelationshipType: fhir.CodeableConcept|null;\r\n  /**\r\n   * Reference to a specific medication (active substance, medicinal product or class of products) as part of an indication or contraindication.\r\n   */\r\n  public medication: (fhir.CodeableConcept|fhir.Reference)|null;\r\n  /**\r\n   * Internal flag to properly serialize choice-type element MedicinalProductContraindication.otherTherapy.medication[x]\r\n   */\r\n  protected static readonly _fts_medicationIsChoice:true = true;\r\n  /**\r\n   * Default constructor for MedicinalProductContraindicationOtherTherapy - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<MedicinalProductContraindicationOtherTherapyArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    if (source['therapyRelationshipType']) { this.therapyRelationshipType = new fhir.CodeableConcept(source.therapyRelationshipType); }\r\n    else { this.therapyRelationshipType = null; }\r\n    if (source['medication']) { this.medication = source.medication; }\r\n    else if (source['medicationCodeableConcept']) { this.medication = new fhir.CodeableConcept(source.medicationCodeableConcept); }\r\n    else if (source['medicationReference']) { this.medication = new fhir.Reference(source.medicationReference); }\r\n    else { this.medication = null; }\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (!this['therapyRelationshipType']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property therapyRelationshipType:fhir.CodeableConcept fhir: MedicinalProductContraindication.otherTherapy.therapyRelationshipType:CodeableConcept', }));\r\n    }\r\n    if (this[\"therapyRelationshipType\"]) { outcome.issue!.push(...this.therapyRelationshipType.doModelValidation().issue!); }\r\n    if (!this['medication']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property medication: fhir: MedicinalProductContraindication.otherTherapy.medication[x]:', }));\r\n    }\r\n    return outcome;\r\n  }\r\n}\r\n/**\r\n * Valid arguments for the MedicinalProductContraindication type.\r\n */\r\nexport interface MedicinalProductContraindicationArgs extends fhir.DomainResourceArgs {\r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  resourceType: \"MedicinalProductContraindication\"|undefined;\r\n  /**\r\n   * The medication for which this is an indication.\r\n   */\r\n  subject?: fhir.ReferenceArgs[]|undefined;\r\n  /**\r\n   * The disease, symptom or procedure for the contraindication.\r\n   */\r\n  disease?: fhir.CodeableConceptArgs|undefined;\r\n  /**\r\n   * The status of the disease or symptom for the contraindication.\r\n   */\r\n  diseaseStatus?: fhir.CodeableConceptArgs|undefined;\r\n  /**\r\n   * A comorbidity (concurrent condition) or coinfection.\r\n   */\r\n  comorbidity?: fhir.CodeableConceptArgs[]|undefined;\r\n  /**\r\n   * Information about the use of the medicinal product in relation to other therapies as part of the indication.\r\n   */\r\n  therapeuticIndication?: fhir.ReferenceArgs[]|undefined;\r\n  /**\r\n   * Information about the use of the medicinal product in relation to other therapies described as part of the indication.\r\n   */\r\n  otherTherapy?: fhir.MedicinalProductContraindicationOtherTherapyArgs[]|undefined;\r\n  /**\r\n   * The population group to which this applies.\r\n   */\r\n  population?: fhir.PopulationArgs[]|undefined;\r\n}\r\n\r\n/**\r\n * The clinical particulars - indications, contraindications etc. of a medicinal product, including for regulatory purposes.\r\n */\r\nexport class MedicinalProductContraindication extends fhir.DomainResource {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'MedicinalProductContraindication';\r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  public resourceType: \"MedicinalProductContraindication\";\r\n  /**\r\n   * The medication for which this is an indication.\r\n   */\r\n  public subject?: fhir.Reference[];\r\n  /**\r\n   * The disease, symptom or procedure for the contraindication.\r\n   */\r\n  public disease?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * The status of the disease or symptom for the contraindication.\r\n   */\r\n  public diseaseStatus?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * A comorbidity (concurrent condition) or coinfection.\r\n   */\r\n  public comorbidity?: fhir.CodeableConcept[];\r\n  /**\r\n   * Information about the use of the medicinal product in relation to other therapies as part of the indication.\r\n   */\r\n  public therapeuticIndication?: fhir.Reference[];\r\n  /**\r\n   * Information about the use of the medicinal product in relation to other therapies described as part of the indication.\r\n   */\r\n  public otherTherapy?: fhir.MedicinalProductContraindicationOtherTherapy[];\r\n  /**\r\n   * The population group to which this applies.\r\n   */\r\n  public population?: fhir.Population[];\r\n  /**\r\n   * Default constructor for MedicinalProductContraindication - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<MedicinalProductContraindicationArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    this.resourceType = 'MedicinalProductContraindication';\r\n    if (source['subject']) { this.subject = source.subject.map((x) => new fhir.Reference(x)); }\r\n    else { this.subject = []; }\r\n    if (source['disease']) { this.disease = new fhir.CodeableConcept(source.disease); }\r\n    if (source['diseaseStatus']) { this.diseaseStatus = new fhir.CodeableConcept(source.diseaseStatus); }\r\n    if (source['comorbidity']) { this.comorbidity = source.comorbidity.map((x) => new fhir.CodeableConcept(x)); }\r\n    else { this.comorbidity = []; }\r\n    if (source['therapeuticIndication']) { this.therapeuticIndication = source.therapeuticIndication.map((x) => new fhir.Reference(x)); }\r\n    else { this.therapeuticIndication = []; }\r\n    if (source['otherTherapy']) { this.otherTherapy = source.otherTherapy.map((x) => new fhir.MedicinalProductContraindicationOtherTherapy(x)); }\r\n    else { this.otherTherapy = []; }\r\n    if (source['population']) { this.population = source.population.map((x) => new fhir.Population(x)); }\r\n    else { this.population = []; }\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (!this['resourceType']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property resourceType:\"MedicinalProductContraindication\" fhir: MedicinalProductContraindication.resourceType:\"MedicinalProductContraindication\"', }));\r\n    }\r\n    if (this[\"subject\"]) { this.subject.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"disease\"]) { outcome.issue!.push(...this.disease.doModelValidation().issue!); }\r\n    if (this[\"diseaseStatus\"]) { outcome.issue!.push(...this.diseaseStatus.doModelValidation().issue!); }\r\n    if (this[\"comorbidity\"]) { this.comorbidity.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"therapeuticIndication\"]) { this.therapeuticIndication.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"otherTherapy\"]) { this.otherTherapy.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"population\"]) { this.population.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    return outcome;\r\n  }\r\n}\r\n"],"names":["fhir.CodeableConcept","fhir.Reference","fhir.OperationOutcomeIssue","fhir.BackboneElement","fhir.MedicinalProductContraindicationOtherTherapy","fhir.Population","fhir.DomainResource"],"mappings":"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"}