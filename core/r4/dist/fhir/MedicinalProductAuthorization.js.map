{"version":3,"file":"MedicinalProductAuthorization.js","sources":["../../src/fhir/MedicinalProductAuthorization.ts"],"sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4.core version: 4.0.1\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR Resource: MedicinalProductAuthorization\r\n\r\nimport * as fhir from '../fhir.js';\r\n\r\n// @ts-ignore\r\nimport { IssueTypeCodes } from '../fhirValueSets/IssueTypeCodes.js';\r\n// @ts-ignore\r\nimport { IssueSeverityCodes } from '../fhirValueSets/IssueSeverityCodes.js';\r\n/**\r\n * Valid arguments for the MedicinalProductAuthorizationJurisdictionalAuthorization type.\r\n */\r\nexport interface MedicinalProductAuthorizationJurisdictionalAuthorizationArgs extends fhir.BackboneElementArgs {\r\n  /**\r\n   * The assigned number for the marketing authorization.\r\n   */\r\n  identifier?: fhir.IdentifierArgs[]|undefined;\r\n  /**\r\n   * Country of authorization.\r\n   */\r\n  country?: fhir.CodeableConceptArgs|undefined;\r\n  /**\r\n   * Jurisdiction within a country.\r\n   */\r\n  jurisdiction?: fhir.CodeableConceptArgs[]|undefined;\r\n  /**\r\n   * The legal status of supply in a jurisdiction or region.\r\n   */\r\n  legalStatusOfSupply?: fhir.CodeableConceptArgs|undefined;\r\n  /**\r\n   * The start and expected end date of the authorization.\r\n   */\r\n  validityPeriod?: fhir.PeriodArgs|undefined;\r\n}\r\n\r\n/**\r\n * Authorization in areas within a country.\r\n */\r\nexport class MedicinalProductAuthorizationJurisdictionalAuthorization extends fhir.BackboneElement {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'MedicinalProductAuthorizationJurisdictionalAuthorization';\r\n  /**\r\n   * The assigned number for the marketing authorization.\r\n   */\r\n  public identifier?: fhir.Identifier[];\r\n  /**\r\n   * Country of authorization.\r\n   */\r\n  public country?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * Jurisdiction within a country.\r\n   */\r\n  public jurisdiction?: fhir.CodeableConcept[];\r\n  /**\r\n   * The legal status of supply in a jurisdiction or region.\r\n   */\r\n  public legalStatusOfSupply?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * The start and expected end date of the authorization.\r\n   */\r\n  public validityPeriod?: fhir.Period|undefined;\r\n  /**\r\n   * Default constructor for MedicinalProductAuthorizationJurisdictionalAuthorization - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<MedicinalProductAuthorizationJurisdictionalAuthorizationArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    if (source['identifier']) { this.identifier = source.identifier.map((x) => new fhir.Identifier(x)); }\r\n    else { this.identifier = []; }\r\n    if (source['country']) { this.country = new fhir.CodeableConcept(source.country); }\r\n    if (source['jurisdiction']) { this.jurisdiction = source.jurisdiction.map((x) => new fhir.CodeableConcept(x)); }\r\n    else { this.jurisdiction = []; }\r\n    if (source['legalStatusOfSupply']) { this.legalStatusOfSupply = new fhir.CodeableConcept(source.legalStatusOfSupply); }\r\n    if (source['validityPeriod']) { this.validityPeriod = new fhir.Period(source.validityPeriod); }\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (this[\"identifier\"]) { this.identifier.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"country\"]) { outcome.issue!.push(...this.country.doModelValidation().issue!); }\r\n    if (this[\"jurisdiction\"]) { this.jurisdiction.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"legalStatusOfSupply\"]) { outcome.issue!.push(...this.legalStatusOfSupply.doModelValidation().issue!); }\r\n    if (this[\"validityPeriod\"]) { outcome.issue!.push(...this.validityPeriod.doModelValidation().issue!); }\r\n    return outcome;\r\n  }\r\n}\r\n/**\r\n * Valid arguments for the MedicinalProductAuthorizationProcedure type.\r\n */\r\nexport interface MedicinalProductAuthorizationProcedureArgs extends fhir.BackboneElementArgs {\r\n  /**\r\n   * Identifier for this procedure.\r\n   */\r\n  identifier?: fhir.IdentifierArgs|undefined;\r\n  /**\r\n   * Type of procedure.\r\n   */\r\n  type: fhir.CodeableConceptArgs|null;\r\n  /**\r\n   * Date of procedure.\r\n   */\r\n  date?: fhir.Period|fhir.FhirDateTime|undefined;\r\n  /**\r\n   * Date of procedure.\r\n   */\r\n  datePeriod?: fhir.PeriodArgs|undefined;\r\n  /**\r\n   * Date of procedure.\r\n   */\r\n  dateDateTime?: fhir.FhirDateTime|string|undefined;\r\n  /**\r\n   * Applcations submitted to obtain a marketing authorization.\r\n   */\r\n  application?: fhir.MedicinalProductAuthorizationProcedureArgs[]|undefined;\r\n}\r\n\r\n/**\r\n * The regulatory procedure for granting or amending a marketing authorization.\r\n */\r\nexport class MedicinalProductAuthorizationProcedure extends fhir.BackboneElement {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'MedicinalProductAuthorizationProcedure';\r\n  /**\r\n   * Identifier for this procedure.\r\n   */\r\n  public identifier?: fhir.Identifier|undefined;\r\n  /**\r\n   * Type of procedure.\r\n   */\r\n  public type: fhir.CodeableConcept|null;\r\n  /**\r\n   * Date of procedure.\r\n   */\r\n  public date?: (fhir.Period|fhir.FhirDateTime)|undefined;\r\n  /**\r\n   * Internal flag to properly serialize choice-type element MedicinalProductAuthorization.procedure.date[x]\r\n   */\r\n  protected static readonly _fts_dateIsChoice:true = true;\r\n  /**\r\n   * Applcations submitted to obtain a marketing authorization.\r\n   */\r\n  public application?: fhir.MedicinalProductAuthorizationProcedure[];\r\n  /**\r\n   * Default constructor for MedicinalProductAuthorizationProcedure - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<MedicinalProductAuthorizationProcedureArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    if (source['identifier']) { this.identifier = new fhir.Identifier(source.identifier); }\r\n    if (source['type']) { this.type = new fhir.CodeableConcept(source.type); }\r\n    else { this.type = null; }\r\n    if (source['date']) { this.date = source.date; }\r\n    else if (source['datePeriod']) { this.date = new fhir.Period(source.datePeriod); }\r\n    else if (source['dateDateTime']) { this.date = new fhir.FhirDateTime({value: source.dateDateTime}); }\r\n    if (source['application']) { this.application = source.application.map((x) => new fhir.MedicinalProductAuthorizationProcedure(x)); }\r\n    else { this.application = []; }\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (this[\"identifier\"]) { outcome.issue!.push(...this.identifier.doModelValidation().issue!); }\r\n    if (!this['type']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property type:fhir.CodeableConcept fhir: MedicinalProductAuthorization.procedure.type:CodeableConcept', }));\r\n    }\r\n    if (this[\"type\"]) { outcome.issue!.push(...this.type.doModelValidation().issue!); }\r\n    if (this[\"application\"]) { this.application.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    return outcome;\r\n  }\r\n}\r\n/**\r\n * Valid arguments for the MedicinalProductAuthorization type.\r\n */\r\nexport interface MedicinalProductAuthorizationArgs extends fhir.DomainResourceArgs {\r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  resourceType: \"MedicinalProductAuthorization\"|undefined;\r\n  /**\r\n   * Business identifier for the marketing authorization, as assigned by a regulator.\r\n   */\r\n  identifier?: fhir.IdentifierArgs[]|undefined;\r\n  /**\r\n   * The medicinal product that is being authorized.\r\n   */\r\n  subject?: fhir.ReferenceArgs|undefined;\r\n  /**\r\n   * The country in which the marketing authorization has been granted.\r\n   */\r\n  country?: fhir.CodeableConceptArgs[]|undefined;\r\n  /**\r\n   * Jurisdiction within a country.\r\n   */\r\n  jurisdiction?: fhir.CodeableConceptArgs[]|undefined;\r\n  /**\r\n   * The status of the marketing authorization.\r\n   */\r\n  status?: fhir.CodeableConceptArgs|undefined;\r\n  /**\r\n   * The date at which the given status has become applicable.\r\n   */\r\n  statusDate?: fhir.FhirDateTime|string|undefined;\r\n  /**\r\n   * The date when a suspended the marketing or the marketing authorization of the product is anticipated to be restored.\r\n   */\r\n  restoreDate?: fhir.FhirDateTime|string|undefined;\r\n  /**\r\n   * The beginning of the time period in which the marketing authorization is in the specific status shall be specified A complete date consisting of day, month and year shall be specified using the ISO 8601 date format.\r\n   */\r\n  validityPeriod?: fhir.PeriodArgs|undefined;\r\n  /**\r\n   * A period of time after authorization before generic product applicatiosn can be submitted.\r\n   */\r\n  dataExclusivityPeriod?: fhir.PeriodArgs|undefined;\r\n  /**\r\n   * The date when the first authorization was granted by a Medicines Regulatory Agency.\r\n   */\r\n  dateOfFirstAuthorization?: fhir.FhirDateTime|string|undefined;\r\n  /**\r\n   * Date of first marketing authorization for a company's new medicinal product in any country in the World.\r\n   */\r\n  internationalBirthDate?: fhir.FhirDateTime|string|undefined;\r\n  /**\r\n   * The legal framework against which this authorization is granted.\r\n   */\r\n  legalBasis?: fhir.CodeableConceptArgs|undefined;\r\n  /**\r\n   * Authorization in areas within a country.\r\n   */\r\n  jurisdictionalAuthorization?: fhir.MedicinalProductAuthorizationJurisdictionalAuthorizationArgs[]|undefined;\r\n  /**\r\n   * Marketing Authorization Holder.\r\n   */\r\n  holder?: fhir.ReferenceArgs|undefined;\r\n  /**\r\n   * Medicines Regulatory Agency.\r\n   */\r\n  regulator?: fhir.ReferenceArgs|undefined;\r\n  /**\r\n   * The regulatory procedure for granting or amending a marketing authorization.\r\n   */\r\n  procedure?: fhir.MedicinalProductAuthorizationProcedureArgs|undefined;\r\n}\r\n\r\n/**\r\n * The regulatory authorization of a medicinal product.\r\n */\r\nexport class MedicinalProductAuthorization extends fhir.DomainResource {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'MedicinalProductAuthorization';\r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  public resourceType: \"MedicinalProductAuthorization\";\r\n  /**\r\n   * Business identifier for the marketing authorization, as assigned by a regulator.\r\n   */\r\n  public identifier?: fhir.Identifier[];\r\n  /**\r\n   * The medicinal product that is being authorized.\r\n   */\r\n  public subject?: fhir.Reference|undefined;\r\n  /**\r\n   * The country in which the marketing authorization has been granted.\r\n   */\r\n  public country?: fhir.CodeableConcept[];\r\n  /**\r\n   * Jurisdiction within a country.\r\n   */\r\n  public jurisdiction?: fhir.CodeableConcept[];\r\n  /**\r\n   * The status of the marketing authorization.\r\n   */\r\n  public status?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * The date at which the given status has become applicable.\r\n   */\r\n  public statusDate?: fhir.FhirDateTime|undefined;\r\n  /**\r\n   * The date when a suspended the marketing or the marketing authorization of the product is anticipated to be restored.\r\n   */\r\n  public restoreDate?: fhir.FhirDateTime|undefined;\r\n  /**\r\n   * The beginning of the time period in which the marketing authorization is in the specific status shall be specified A complete date consisting of day, month and year shall be specified using the ISO 8601 date format.\r\n   */\r\n  public validityPeriod?: fhir.Period|undefined;\r\n  /**\r\n   * A period of time after authorization before generic product applicatiosn can be submitted.\r\n   */\r\n  public dataExclusivityPeriod?: fhir.Period|undefined;\r\n  /**\r\n   * The date when the first authorization was granted by a Medicines Regulatory Agency.\r\n   */\r\n  public dateOfFirstAuthorization?: fhir.FhirDateTime|undefined;\r\n  /**\r\n   * Date of first marketing authorization for a company's new medicinal product in any country in the World.\r\n   */\r\n  public internationalBirthDate?: fhir.FhirDateTime|undefined;\r\n  /**\r\n   * The legal framework against which this authorization is granted.\r\n   */\r\n  public legalBasis?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * Authorization in areas within a country.\r\n   */\r\n  public jurisdictionalAuthorization?: fhir.MedicinalProductAuthorizationJurisdictionalAuthorization[];\r\n  /**\r\n   * Marketing Authorization Holder.\r\n   */\r\n  public holder?: fhir.Reference|undefined;\r\n  /**\r\n   * Medicines Regulatory Agency.\r\n   */\r\n  public regulator?: fhir.Reference|undefined;\r\n  /**\r\n   * The regulatory procedure for granting or amending a marketing authorization.\r\n   */\r\n  public procedure?: fhir.MedicinalProductAuthorizationProcedure|undefined;\r\n  /**\r\n   * Default constructor for MedicinalProductAuthorization - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<MedicinalProductAuthorizationArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    this.resourceType = 'MedicinalProductAuthorization';\r\n    if (source['identifier']) { this.identifier = source.identifier.map((x) => new fhir.Identifier(x)); }\r\n    else { this.identifier = []; }\r\n    if (source['subject']) { this.subject = new fhir.Reference(source.subject); }\r\n    if (source['country']) { this.country = source.country.map((x) => new fhir.CodeableConcept(x)); }\r\n    else { this.country = []; }\r\n    if (source['jurisdiction']) { this.jurisdiction = source.jurisdiction.map((x) => new fhir.CodeableConcept(x)); }\r\n    else { this.jurisdiction = []; }\r\n    if (source['status']) { this.status = new fhir.CodeableConcept(source.status); }\r\n    if (source['statusDate']) { this.statusDate = new fhir.FhirDateTime({value: source.statusDate}); }\r\n    if (source['restoreDate']) { this.restoreDate = new fhir.FhirDateTime({value: source.restoreDate}); }\r\n    if (source['validityPeriod']) { this.validityPeriod = new fhir.Period(source.validityPeriod); }\r\n    if (source['dataExclusivityPeriod']) { this.dataExclusivityPeriod = new fhir.Period(source.dataExclusivityPeriod); }\r\n    if (source['dateOfFirstAuthorization']) { this.dateOfFirstAuthorization = new fhir.FhirDateTime({value: source.dateOfFirstAuthorization}); }\r\n    if (source['internationalBirthDate']) { this.internationalBirthDate = new fhir.FhirDateTime({value: source.internationalBirthDate}); }\r\n    if (source['legalBasis']) { this.legalBasis = new fhir.CodeableConcept(source.legalBasis); }\r\n    if (source['jurisdictionalAuthorization']) { this.jurisdictionalAuthorization = source.jurisdictionalAuthorization.map((x) => new fhir.MedicinalProductAuthorizationJurisdictionalAuthorization(x)); }\r\n    else { this.jurisdictionalAuthorization = []; }\r\n    if (source['holder']) { this.holder = new fhir.Reference(source.holder); }\r\n    if (source['regulator']) { this.regulator = new fhir.Reference(source.regulator); }\r\n    if (source['procedure']) { this.procedure = new fhir.MedicinalProductAuthorizationProcedure(source.procedure); }\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (!this['resourceType']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property resourceType:\"MedicinalProductAuthorization\" fhir: MedicinalProductAuthorization.resourceType:\"MedicinalProductAuthorization\"', }));\r\n    }\r\n    if (this[\"identifier\"]) { this.identifier.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"subject\"]) { outcome.issue!.push(...this.subject.doModelValidation().issue!); }\r\n    if (this[\"country\"]) { this.country.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"jurisdiction\"]) { this.jurisdiction.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"status\"]) { outcome.issue!.push(...this.status.doModelValidation().issue!); }\r\n    if (this[\"statusDate\"]) { outcome.issue!.push(...this.statusDate.doModelValidation().issue!); }\r\n    if (this[\"restoreDate\"]) { outcome.issue!.push(...this.restoreDate.doModelValidation().issue!); }\r\n    if (this[\"validityPeriod\"]) { outcome.issue!.push(...this.validityPeriod.doModelValidation().issue!); }\r\n    if (this[\"dataExclusivityPeriod\"]) { outcome.issue!.push(...this.dataExclusivityPeriod.doModelValidation().issue!); }\r\n    if (this[\"dateOfFirstAuthorization\"]) { outcome.issue!.push(...this.dateOfFirstAuthorization.doModelValidation().issue!); }\r\n    if (this[\"internationalBirthDate\"]) { outcome.issue!.push(...this.internationalBirthDate.doModelValidation().issue!); }\r\n    if (this[\"legalBasis\"]) { outcome.issue!.push(...this.legalBasis.doModelValidation().issue!); }\r\n    if (this[\"jurisdictionalAuthorization\"]) { this.jurisdictionalAuthorization.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"holder\"]) { outcome.issue!.push(...this.holder.doModelValidation().issue!); }\r\n    if (this[\"regulator\"]) { outcome.issue!.push(...this.regulator.doModelValidation().issue!); }\r\n    if (this[\"procedure\"]) { outcome.issue!.push(...this.procedure.doModelValidation().issue!); }\r\n    return outcome;\r\n  }\r\n}\r\n"],"names":["fhir.Identifier","fhir.CodeableConcept","fhir.Period","fhir.BackboneElement","MedicinalProductAuthorizationProcedure","fhir.FhirDateTime","fhir.MedicinalProductAuthorizationProcedure","fhir.OperationOutcomeIssue","fhir.Reference","fhir.MedicinalProductAuthorizationJurisdictionalAuthorization","fhir.DomainResource"],"mappings":"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"}