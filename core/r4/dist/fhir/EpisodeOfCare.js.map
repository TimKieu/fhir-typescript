{"version":3,"file":"EpisodeOfCare.js","sources":["../../src/fhir/EpisodeOfCare.ts"],"sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4.core version: 4.0.1\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR Resource: EpisodeOfCare\r\n\r\nimport * as fhir from '../fhir.js';\r\n\r\n// @ts-ignore\r\nimport { EpisodeOfCareStatusCodings, EpisodeOfCareStatusCodingType,} from '../fhirValueSets/EpisodeOfCareStatusCodings.js';\r\n// @ts-ignore\r\nimport { EpisodeOfCareStatusCodes,  EpisodeOfCareStatusCodeType } from '../fhirValueSets/EpisodeOfCareStatusCodes.js';\r\n// @ts-ignore\r\nimport { DiagnosisRoleCodings, DiagnosisRoleCodingType,} from '../fhirValueSets/DiagnosisRoleCodings.js';\r\n// @ts-ignore\r\nimport { DiagnosisRoleCodes,  DiagnosisRoleCodeType } from '../fhirValueSets/DiagnosisRoleCodes.js';\r\n// @ts-ignore\r\nimport { EpisodeofcareTypeCodings, EpisodeofcareTypeCodingType,} from '../fhirValueSets/EpisodeofcareTypeCodings.js';\r\n// @ts-ignore\r\nimport { EpisodeofcareTypeCodes,  EpisodeofcareTypeCodeType } from '../fhirValueSets/EpisodeofcareTypeCodes.js';\r\n// @ts-ignore\r\nimport { IssueTypeCodes } from '../fhirValueSets/IssueTypeCodes.js';\r\n// @ts-ignore\r\nimport { IssueSeverityCodes } from '../fhirValueSets/IssueSeverityCodes.js';\r\n/**\r\n * Valid arguments for the EpisodeOfCareStatusHistory type.\r\n */\r\nexport interface EpisodeOfCareStatusHistoryArgs extends fhir.BackboneElementArgs {\r\n  /**\r\n   * planned | waitlist | active | onhold | finished | cancelled.\r\n   */\r\n  status: EpisodeOfCareStatusCodeType|null;\r\n  /**\r\n   * The period during this EpisodeOfCare that the specific status applied.\r\n   */\r\n  period: fhir.PeriodArgs|null;\r\n}\r\n\r\n/**\r\n * The history of statuses that the EpisodeOfCare has been through (without requiring processing the history of the resource).\r\n */\r\nexport class EpisodeOfCareStatusHistory extends fhir.BackboneElement {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'EpisodeOfCareStatusHistory';\r\n  /**\r\n   * planned | waitlist | active | onhold | finished | cancelled.\r\n   */\r\n  public status: EpisodeOfCareStatusCodeType|null;\r\n  /**\r\n   * The period during this EpisodeOfCare that the specific status applied.\r\n   */\r\n  public period: fhir.Period|null;\r\n  /**\r\n   * Default constructor for EpisodeOfCareStatusHistory - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<EpisodeOfCareStatusHistoryArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    if (source['status']) { this.status = source.status; }\r\n    else { this.status = null; }\r\n    if (source['period']) { this.period = new fhir.Period(source.period); }\r\n    else { this.period = null; }\r\n  }\r\n  /**\r\n   * Required-bound Value Set for status (EpisodeOfCare.statusHistory.status)\r\n   */\r\n  public static statusRequiredCoding():EpisodeOfCareStatusCodingType {\r\n    return EpisodeOfCareStatusCodings;\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (!this['status']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property status:EpisodeOfCareStatusCodeType fhir: EpisodeOfCare.statusHistory.status:code', }));\r\n    }\r\n    if (!this['period']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property period:fhir.Period fhir: EpisodeOfCare.statusHistory.period:Period', }));\r\n    }\r\n    if (this[\"period\"]) { outcome.issue!.push(...this.period.doModelValidation().issue!); }\r\n    return outcome;\r\n  }\r\n}\r\n/**\r\n * Valid arguments for the EpisodeOfCareDiagnosis type.\r\n */\r\nexport interface EpisodeOfCareDiagnosisArgs extends fhir.BackboneElementArgs {\r\n  /**\r\n   * A list of conditions/problems/diagnoses that this episode of care is intended to be providing care for.\r\n   */\r\n  condition: fhir.ReferenceArgs|null;\r\n  /**\r\n   * Role that this diagnosis has within the episode of care (e.g. admission, billing, discharge …).\r\n   */\r\n  role?: fhir.CodeableConceptArgs|undefined;\r\n  /**\r\n   * Ranking of the diagnosis (for each role type).\r\n   */\r\n  rank?: fhir.FhirPositiveInt|number|undefined;\r\n}\r\n\r\n/**\r\n * The list of diagnosis relevant to this episode of care.\r\n */\r\nexport class EpisodeOfCareDiagnosis extends fhir.BackboneElement {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'EpisodeOfCareDiagnosis';\r\n  /**\r\n   * A list of conditions/problems/diagnoses that this episode of care is intended to be providing care for.\r\n   */\r\n  public condition: fhir.Reference|null;\r\n  /**\r\n   * Role that this diagnosis has within the episode of care (e.g. admission, billing, discharge …).\r\n   */\r\n  public role?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * Ranking of the diagnosis (for each role type).\r\n   */\r\n  public rank?: fhir.FhirPositiveInt|undefined;\r\n  /**\r\n   * Default constructor for EpisodeOfCareDiagnosis - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<EpisodeOfCareDiagnosisArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    if (source['condition']) { this.condition = new fhir.Reference(source.condition); }\r\n    else { this.condition = null; }\r\n    if (source['role']) { this.role = new fhir.CodeableConcept(source.role); }\r\n    if (source['rank']) { this.rank = new fhir.FhirPositiveInt({value: source.rank}); }\r\n  }\r\n  /**\r\n   * Preferred-bound Value Set for role (EpisodeOfCare.diagnosis.role)\r\n   */\r\n  public static rolePreferredCoding():DiagnosisRoleCodingType {\r\n    return DiagnosisRoleCodings;\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (!this['condition']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property condition:fhir.Reference fhir: EpisodeOfCare.diagnosis.condition:Reference', }));\r\n    }\r\n    if (this[\"condition\"]) { outcome.issue!.push(...this.condition.doModelValidation().issue!); }\r\n    if (this[\"role\"]) { outcome.issue!.push(...this.role.doModelValidation().issue!); }\r\n    if (this[\"rank\"]) { outcome.issue!.push(...this.rank.doModelValidation().issue!); }\r\n    return outcome;\r\n  }\r\n}\r\n/**\r\n * Valid arguments for the EpisodeOfCare type.\r\n */\r\nexport interface EpisodeOfCareArgs extends fhir.DomainResourceArgs {\r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  resourceType: \"EpisodeOfCare\"|undefined;\r\n  /**\r\n   * The EpisodeOfCare may be known by different identifiers for different contexts of use, such as when an external agency is tracking the Episode for funding purposes.\r\n   */\r\n  identifier?: fhir.IdentifierArgs[]|undefined;\r\n  /**\r\n   * This element is labeled as a modifier because the status contains codes that mark the episode as not currently valid.\r\n   */\r\n  status: EpisodeOfCareStatusCodeType|null;\r\n  /**\r\n   * The history of statuses that the EpisodeOfCare has been through (without requiring processing the history of the resource).\r\n   */\r\n  statusHistory?: fhir.EpisodeOfCareStatusHistoryArgs[]|undefined;\r\n  /**\r\n   * The type can be very important in processing as this could be used in determining if the EpisodeOfCare is relevant to specific government reporting, or other types of classifications.\r\n   */\r\n  type?: fhir.CodeableConceptArgs[]|undefined;\r\n  /**\r\n   * The list of diagnosis relevant to this episode of care.\r\n   */\r\n  diagnosis?: fhir.EpisodeOfCareDiagnosisArgs[]|undefined;\r\n  /**\r\n   * The patient who is the focus of this episode of care.\r\n   */\r\n  patient: fhir.ReferenceArgs|null;\r\n  /**\r\n   * The organization that has assumed the specific responsibilities for the specified duration.\r\n   */\r\n  managingOrganization?: fhir.ReferenceArgs|undefined;\r\n  /**\r\n   * The interval during which the managing organization assumes the defined responsibility.\r\n   */\r\n  period?: fhir.PeriodArgs|undefined;\r\n  /**\r\n   * Referral Request(s) that are fulfilled by this EpisodeOfCare, incoming referrals.\r\n   */\r\n  referralRequest?: fhir.ReferenceArgs[]|undefined;\r\n  /**\r\n   * The practitioner that is the care manager/care coordinator for this patient.\r\n   */\r\n  careManager?: fhir.ReferenceArgs|undefined;\r\n  /**\r\n   * The list of practitioners that may be facilitating this episode of care for specific purposes.\r\n   */\r\n  team?: fhir.ReferenceArgs[]|undefined;\r\n  /**\r\n   * The billing system may choose to allocate billable items associated with the EpisodeOfCare to different referenced Accounts based on internal business rules.\r\n   */\r\n  account?: fhir.ReferenceArgs[]|undefined;\r\n}\r\n\r\n/**\r\n * An association between a patient and an organization / healthcare provider(s) during which time encounters may occur. The managing organization assumes a level of responsibility for the patient during this time.\r\n */\r\nexport class EpisodeOfCare extends fhir.DomainResource {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'EpisodeOfCare';\r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  public resourceType: \"EpisodeOfCare\";\r\n  /**\r\n   * The EpisodeOfCare may be known by different identifiers for different contexts of use, such as when an external agency is tracking the Episode for funding purposes.\r\n   */\r\n  public identifier?: fhir.Identifier[];\r\n  /**\r\n   * This element is labeled as a modifier because the status contains codes that mark the episode as not currently valid.\r\n   */\r\n  public status: EpisodeOfCareStatusCodeType|null;\r\n  /**\r\n   * The history of statuses that the EpisodeOfCare has been through (without requiring processing the history of the resource).\r\n   */\r\n  public statusHistory?: fhir.EpisodeOfCareStatusHistory[];\r\n  /**\r\n   * The type can be very important in processing as this could be used in determining if the EpisodeOfCare is relevant to specific government reporting, or other types of classifications.\r\n   */\r\n  public type?: fhir.CodeableConcept[];\r\n  /**\r\n   * The list of diagnosis relevant to this episode of care.\r\n   */\r\n  public diagnosis?: fhir.EpisodeOfCareDiagnosis[];\r\n  /**\r\n   * The patient who is the focus of this episode of care.\r\n   */\r\n  public patient: fhir.Reference|null;\r\n  /**\r\n   * The organization that has assumed the specific responsibilities for the specified duration.\r\n   */\r\n  public managingOrganization?: fhir.Reference|undefined;\r\n  /**\r\n   * The interval during which the managing organization assumes the defined responsibility.\r\n   */\r\n  public period?: fhir.Period|undefined;\r\n  /**\r\n   * Referral Request(s) that are fulfilled by this EpisodeOfCare, incoming referrals.\r\n   */\r\n  public referralRequest?: fhir.Reference[];\r\n  /**\r\n   * The practitioner that is the care manager/care coordinator for this patient.\r\n   */\r\n  public careManager?: fhir.Reference|undefined;\r\n  /**\r\n   * The list of practitioners that may be facilitating this episode of care for specific purposes.\r\n   */\r\n  public team?: fhir.Reference[];\r\n  /**\r\n   * The billing system may choose to allocate billable items associated with the EpisodeOfCare to different referenced Accounts based on internal business rules.\r\n   */\r\n  public account?: fhir.Reference[];\r\n  /**\r\n   * Default constructor for EpisodeOfCare - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<EpisodeOfCareArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    this.resourceType = 'EpisodeOfCare';\r\n    if (source['identifier']) { this.identifier = source.identifier.map((x) => new fhir.Identifier(x)); }\r\n    else { this.identifier = []; }\r\n    if (source['status']) { this.status = source.status; }\r\n    else { this.status = null; }\r\n    if (source['statusHistory']) { this.statusHistory = source.statusHistory.map((x) => new fhir.EpisodeOfCareStatusHistory(x)); }\r\n    else { this.statusHistory = []; }\r\n    if (source['type']) { this.type = source.type.map((x) => new fhir.CodeableConcept(x)); }\r\n    else { this.type = []; }\r\n    if (source['diagnosis']) { this.diagnosis = source.diagnosis.map((x) => new fhir.EpisodeOfCareDiagnosis(x)); }\r\n    else { this.diagnosis = []; }\r\n    if (source['patient']) { this.patient = new fhir.Reference(source.patient); }\r\n    else { this.patient = null; }\r\n    if (source['managingOrganization']) { this.managingOrganization = new fhir.Reference(source.managingOrganization); }\r\n    if (source['period']) { this.period = new fhir.Period(source.period); }\r\n    if (source['referralRequest']) { this.referralRequest = source.referralRequest.map((x) => new fhir.Reference(x)); }\r\n    else { this.referralRequest = []; }\r\n    if (source['careManager']) { this.careManager = new fhir.Reference(source.careManager); }\r\n    if (source['team']) { this.team = source.team.map((x) => new fhir.Reference(x)); }\r\n    else { this.team = []; }\r\n    if (source['account']) { this.account = source.account.map((x) => new fhir.Reference(x)); }\r\n    else { this.account = []; }\r\n  }\r\n  /**\r\n   * Required-bound Value Set for status (EpisodeOfCare.status)\r\n   */\r\n  public static statusRequiredCoding():EpisodeOfCareStatusCodingType {\r\n    return EpisodeOfCareStatusCodings;\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (!this['resourceType']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property resourceType:\"EpisodeOfCare\" fhir: EpisodeOfCare.resourceType:\"EpisodeOfCare\"', }));\r\n    }\r\n    if (this[\"identifier\"]) { this.identifier.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (!this['status']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property status:EpisodeOfCareStatusCodeType fhir: EpisodeOfCare.status:code', }));\r\n    }\r\n    if (this[\"statusHistory\"]) { this.statusHistory.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"type\"]) { this.type.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"diagnosis\"]) { this.diagnosis.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (!this['patient']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property patient:fhir.Reference fhir: EpisodeOfCare.patient:Reference', }));\r\n    }\r\n    if (this[\"patient\"]) { outcome.issue!.push(...this.patient.doModelValidation().issue!); }\r\n    if (this[\"managingOrganization\"]) { outcome.issue!.push(...this.managingOrganization.doModelValidation().issue!); }\r\n    if (this[\"period\"]) { outcome.issue!.push(...this.period.doModelValidation().issue!); }\r\n    if (this[\"referralRequest\"]) { this.referralRequest.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"careManager\"]) { outcome.issue!.push(...this.careManager.doModelValidation().issue!); }\r\n    if (this[\"team\"]) { this.team.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"account\"]) { this.account.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    return outcome;\r\n  }\r\n}\r\n"],"names":["fhir.Period","fhir.OperationOutcomeIssue","fhir.BackboneElement","fhir.Reference","fhir.CodeableConcept","fhir.FhirPositiveInt","fhir.Identifier","fhir.EpisodeOfCareStatusHistory","fhir.EpisodeOfCareDiagnosis","fhir.DomainResource"],"mappings":"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"}