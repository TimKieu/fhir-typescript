{"version":3,"file":"BodyStructure.js","sources":["../../src/fhir/BodyStructure.ts"],"sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4.core version: 4.0.1\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR Resource: BodyStructure\r\n\r\nimport * as fhir from '../fhir.js';\r\n\r\n// @ts-ignore\r\nimport { BodystructureCodeCodings, BodystructureCodeCodingType,} from '../fhirValueSets/BodystructureCodeCodings.js';\r\n// @ts-ignore\r\nimport { BodystructureCodeCodes,  BodystructureCodeCodeType } from '../fhirValueSets/BodystructureCodeCodes.js';\r\n// @ts-ignore\r\nimport { BodySiteCodings, BodySiteCodingType,} from '../fhirValueSets/BodySiteCodings.js';\r\n// @ts-ignore\r\nimport { BodySiteCodes,  BodySiteCodeType } from '../fhirValueSets/BodySiteCodes.js';\r\n// @ts-ignore\r\nimport { BodystructureRelativeLocationCodings, BodystructureRelativeLocationCodingType,} from '../fhirValueSets/BodystructureRelativeLocationCodings.js';\r\n// @ts-ignore\r\nimport { BodystructureRelativeLocationCodes,  BodystructureRelativeLocationCodeType } from '../fhirValueSets/BodystructureRelativeLocationCodes.js';\r\n// @ts-ignore\r\nimport { IssueTypeCodes } from '../fhirValueSets/IssueTypeCodes.js';\r\n// @ts-ignore\r\nimport { IssueSeverityCodes } from '../fhirValueSets/IssueSeverityCodes.js';\r\n/**\r\n * Valid arguments for the BodyStructure type.\r\n */\r\nexport interface BodyStructureArgs extends fhir.DomainResourceArgs {\r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  resourceType: \"BodyStructure\"|undefined;\r\n  /**\r\n   * Identifier for this instance of the anatomical structure.\r\n   */\r\n  identifier?: fhir.IdentifierArgs[]|undefined;\r\n  /**\r\n   * This element is labeled as a modifier because it may be used to mark that the resource was created in error.\r\n   */\r\n  active?: fhir.FhirBoolean|boolean|undefined;\r\n  /**\r\n   * The minimum cardinality of 0 supports the use case of specifying a location without defining a morphology.\r\n   */\r\n  morphology?: fhir.CodeableConceptArgs|undefined;\r\n  /**\r\n   * The anatomical location or region of the specimen, lesion, or body structure.\r\n   */\r\n  location?: fhir.CodeableConceptArgs|undefined;\r\n  /**\r\n   * Qualifier to refine the anatomical location.  These include qualifiers for laterality, relative location, directionality, number, and plane.\r\n   */\r\n  locationQualifier?: fhir.CodeableConceptArgs[]|undefined;\r\n  /**\r\n   * This description could include any visual markings used to orientate the viewer e.g. external reference points, special sutures, ink markings.\r\n   */\r\n  description?: fhir.FhirString|string|undefined;\r\n  /**\r\n   * Image or images used to identify a location.\r\n   */\r\n  image?: fhir.AttachmentArgs[]|undefined;\r\n  /**\r\n   * The person to which the body site belongs.\r\n   */\r\n  patient: fhir.ReferenceArgs|null;\r\n}\r\n\r\n/**\r\n * Record details about an anatomical structure.  This resource may be used when a coded concept does not provide the necessary detail needed for the use case.\r\n */\r\nexport class BodyStructure extends fhir.DomainResource {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'BodyStructure';\r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  public resourceType: \"BodyStructure\";\r\n  /**\r\n   * Identifier for this instance of the anatomical structure.\r\n   */\r\n  public identifier?: fhir.Identifier[];\r\n  /**\r\n   * This element is labeled as a modifier because it may be used to mark that the resource was created in error.\r\n   */\r\n  public active?: fhir.FhirBoolean|undefined;\r\n  /**\r\n   * The minimum cardinality of 0 supports the use case of specifying a location without defining a morphology.\r\n   */\r\n  public morphology?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * The anatomical location or region of the specimen, lesion, or body structure.\r\n   */\r\n  public location?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * Qualifier to refine the anatomical location.  These include qualifiers for laterality, relative location, directionality, number, and plane.\r\n   */\r\n  public locationQualifier?: fhir.CodeableConcept[];\r\n  /**\r\n   * This description could include any visual markings used to orientate the viewer e.g. external reference points, special sutures, ink markings.\r\n   */\r\n  public description?: fhir.FhirString|undefined;\r\n  /**\r\n   * Image or images used to identify a location.\r\n   */\r\n  public image?: fhir.Attachment[];\r\n  /**\r\n   * The person to which the body site belongs.\r\n   */\r\n  public patient: fhir.Reference|null;\r\n  /**\r\n   * Default constructor for BodyStructure - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<BodyStructureArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    this.resourceType = 'BodyStructure';\r\n    if (source['identifier']) { this.identifier = source.identifier.map((x) => new fhir.Identifier(x)); }\r\n    else { this.identifier = []; }\r\n    if (source['active']) { this.active = new fhir.FhirBoolean({value: source.active}); }\r\n    if (source['morphology']) { this.morphology = new fhir.CodeableConcept(source.morphology); }\r\n    if (source['location']) { this.location = new fhir.CodeableConcept(source.location); }\r\n    if (source['locationQualifier']) { this.locationQualifier = source.locationQualifier.map((x) => new fhir.CodeableConcept(x)); }\r\n    else { this.locationQualifier = []; }\r\n    if (source['description']) { this.description = new fhir.FhirString({value: source.description}); }\r\n    if (source['image']) { this.image = source.image.map((x) => new fhir.Attachment(x)); }\r\n    else { this.image = []; }\r\n    if (source['patient']) { this.patient = new fhir.Reference(source.patient); }\r\n    else { this.patient = null; }\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (!this['resourceType']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property resourceType:\"BodyStructure\" fhir: BodyStructure.resourceType:\"BodyStructure\"', }));\r\n    }\r\n    if (this[\"identifier\"]) { this.identifier.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"active\"]) { outcome.issue!.push(...this.active.doModelValidation().issue!); }\r\n    if (this[\"morphology\"]) { outcome.issue!.push(...this.morphology.doModelValidation().issue!); }\r\n    if (this[\"location\"]) { outcome.issue!.push(...this.location.doModelValidation().issue!); }\r\n    if (this[\"locationQualifier\"]) { this.locationQualifier.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"description\"]) { outcome.issue!.push(...this.description.doModelValidation().issue!); }\r\n    if (this[\"image\"]) { this.image.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (!this['patient']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property patient:fhir.Reference fhir: BodyStructure.patient:Reference', }));\r\n    }\r\n    if (this[\"patient\"]) { outcome.issue!.push(...this.patient.doModelValidation().issue!); }\r\n    return outcome;\r\n  }\r\n}\r\n"],"names":["fhir.Identifier","fhir.FhirBoolean","fhir.CodeableConcept","fhir.FhirString","fhir.Attachment","fhir.Reference","fhir.OperationOutcomeIssue","fhir.DomainResource"],"mappings":";;;;;;;;;;;;;;AAAA;AAiEA;;AAEG;AACH,IAAA,aAAA,kBAAA,UAAA,MAAA,EAAA;IAAmC,SAAmB,CAAA,aAAA,EAAA,MAAA,CAAA,CAAA;AAyCpD;;AAEG;IACH,SAAY,aAAA,CAAA,MAAsC,EAAE,OAAwC,EAAA;AAAhF,QAAA,IAAA,MAAA,KAAA,KAAA,CAAA,EAAA,EAAA,MAAsC,GAAA,EAAA,CAAA,EAAA;AAAE,QAAA,IAAA,OAAA,KAAA,KAAA,CAAA,EAAA,EAAA,OAAwC,GAAA,EAAA,CAAA,EAAA;AAA5F,QAAA,IAAA,KAAA,GACE,MAAM,CAAA,IAAA,CAAA,IAAA,EAAA,MAAM,EAAE,OAAO,CAAC,IAcvB,IAAA,CAAA;AAbC,QAAA,KAAI,CAAC,YAAY,GAAG,eAAe,CAAC;AACpC,QAAA,IAAI,MAAM,CAAC,YAAY,CAAC,EAAE;YAAE,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,UAAC,CAAC,IAAK,OAAA,IAAIA,UAAe,CAAC,CAAC,CAAC,CAAA,EAAA,CAAC,CAAC;AAAE,SAAA;AAChG,aAAA;AAAE,YAAA,KAAI,CAAC,UAAU,GAAG,EAAE,CAAC;AAAE,SAAA;AAC9B,QAAA,IAAI,MAAM,CAAC,QAAQ,CAAC,EAAE;AAAE,YAAA,KAAI,CAAC,MAAM,GAAG,IAAIC,WAAgB,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,MAAM,EAAC,CAAC,CAAC;AAAE,SAAA;AACrF,QAAA,IAAI,MAAM,CAAC,YAAY,CAAC,EAAE;AAAE,YAAA,KAAI,CAAC,UAAU,GAAG,IAAIC,eAAoB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;AAAE,SAAA;AAC5F,QAAA,IAAI,MAAM,CAAC,UAAU,CAAC,EAAE;AAAE,YAAA,KAAI,CAAC,QAAQ,GAAG,IAAIA,eAAoB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AAAE,SAAA;AACtF,QAAA,IAAI,MAAM,CAAC,mBAAmB,CAAC,EAAE;YAAE,KAAI,CAAC,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC,GAAG,CAAC,UAAC,CAAC,IAAK,OAAA,IAAIA,eAAoB,CAAC,CAAC,CAAC,CAAA,EAAA,CAAC,CAAC;AAAE,SAAA;AAC1H,aAAA;AAAE,YAAA,KAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;AAAE,SAAA;AACrC,QAAA,IAAI,MAAM,CAAC,aAAa,CAAC,EAAE;AAAE,YAAA,KAAI,CAAC,WAAW,GAAG,IAAIC,UAAe,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,WAAW,EAAC,CAAC,CAAC;AAAE,SAAA;AACnG,QAAA,IAAI,MAAM,CAAC,OAAO,CAAC,EAAE;YAAE,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,UAAC,CAAC,IAAK,OAAA,IAAIC,UAAe,CAAC,CAAC,CAAC,CAAA,EAAA,CAAC,CAAC;AAAE,SAAA;AACjF,aAAA;AAAE,YAAA,KAAI,CAAC,KAAK,GAAG,EAAE,CAAC;AAAE,SAAA;AACzB,QAAA,IAAI,MAAM,CAAC,SAAS,CAAC,EAAE;AAAE,YAAA,KAAI,CAAC,OAAO,GAAG,IAAIC,SAAc,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AAAE,SAAA;AACxE,aAAA;AAAE,YAAA,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;AAAE,SAAA;;KAC9B;AACD;;AAEG;AACa,IAAA,aAAA,CAAA,SAAA,CAAA,iBAAiB,GAAjC,YAAA;;AACE,QAAA,IAAI,OAAO,GAAyB,MAAM,CAAA,SAAA,CAAA,iBAAiB,WAAE,CAAC;AAC9D,QAAA,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE;AACzB,YAAA,OAAO,CAAC,KAAM,CAAC,IAAI,CAAC,IAAIC,qBAA0B,CAAC,EAAE,QAAQ,EAAE,kBAAkB,CAAC,KAAK,EAAE,IAAI,EAAE,cAAc,CAAC,sBAAsB,EAAG,WAAW,EAAE,yGAAyG,GAAG,CAAC,CAAC,CAAC;AACpQ,SAAA;AACD,QAAA,IAAI,IAAI,CAAC,YAAY,CAAC,EAAE;AAAE,YAAA,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAC,CAAC,EAAA;;AAAO,gBAAA,CAAA,EAAA,GAAA,OAAO,CAAC,KAAM,EAAC,IAAI,CAAI,KAAA,CAAA,EAAA,EAAA,CAAC,CAAC,iBAAiB,EAAE,CAAC,KAAM,CAAE,CAAA;AAAC,aAAC,CAAC,CAAA;AAAE,SAAA;AACrH,QAAA,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE;AAAE,YAAA,CAAA,KAAA,OAAO,CAAC,KAAM,EAAC,IAAI,CAAA,KAAA,CAAA,EAAA,EAAI,IAAI,CAAC,MAAM,CAAC,iBAAiB,EAAE,CAAC,KAAM,CAAE,CAAA;AAAE,SAAA;AACvF,QAAA,IAAI,IAAI,CAAC,YAAY,CAAC,EAAE;AAAE,YAAA,CAAA,KAAA,OAAO,CAAC,KAAM,EAAC,IAAI,CAAA,KAAA,CAAA,EAAA,EAAI,IAAI,CAAC,UAAU,CAAC,iBAAiB,EAAE,CAAC,KAAM,CAAE,CAAA;AAAE,SAAA;AAC/F,QAAA,IAAI,IAAI,CAAC,UAAU,CAAC,EAAE;AAAE,YAAA,CAAA,KAAA,OAAO,CAAC,KAAM,EAAC,IAAI,CAAA,KAAA,CAAA,EAAA,EAAI,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,CAAC,KAAM,CAAE,CAAA;AAAE,SAAA;AAC3F,QAAA,IAAI,IAAI,CAAC,mBAAmB,CAAC,EAAE;AAAE,YAAA,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,UAAC,CAAC,EAAA;;AAAO,gBAAA,CAAA,EAAA,GAAA,OAAO,CAAC,KAAM,EAAC,IAAI,CAAI,KAAA,CAAA,EAAA,EAAA,CAAC,CAAC,iBAAiB,EAAE,CAAC,KAAM,CAAE,CAAA;AAAC,aAAC,CAAC,CAAA;AAAE,SAAA;AACnI,QAAA,IAAI,IAAI,CAAC,aAAa,CAAC,EAAE;AAAE,YAAA,CAAA,KAAA,OAAO,CAAC,KAAM,EAAC,IAAI,CAAA,KAAA,CAAA,EAAA,EAAI,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,CAAC,KAAM,CAAE,CAAA;AAAE,SAAA;AACjG,QAAA,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE;AAAE,YAAA,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAC,CAAC,EAAA;;AAAO,gBAAA,CAAA,EAAA,GAAA,OAAO,CAAC,KAAM,EAAC,IAAI,CAAI,KAAA,CAAA,EAAA,EAAA,CAAC,CAAC,iBAAiB,EAAE,CAAC,KAAM,CAAE,CAAA;AAAC,aAAC,CAAC,CAAA;AAAE,SAAA;AAC3G,QAAA,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;AACpB,YAAA,OAAO,CAAC,KAAM,CAAC,IAAI,CAAC,IAAIA,qBAA0B,CAAC,EAAE,QAAQ,EAAE,kBAAkB,CAAC,KAAK,EAAE,IAAI,EAAE,cAAc,CAAC,sBAAsB,EAAG,WAAW,EAAE,wFAAwF,GAAG,CAAC,CAAC,CAAC;AACnP,SAAA;AACD,QAAA,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE;AAAE,YAAA,CAAA,KAAA,OAAO,CAAC,KAAM,EAAC,IAAI,CAAA,KAAA,CAAA,EAAA,EAAI,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC,KAAM,CAAE,CAAA;AAAE,SAAA;AACzF,QAAA,OAAO,OAAO,CAAC;KAChB,CAAA;AA/ED;;AAEG;IACoB,aAAa,CAAA,aAAA,GAAU,eAAe,CAAC;IA6EhE,OAAC,aAAA,CAAA;AAAA,CAjFD,CAAmCC,cAAmB,CAiFrD;;;;"}