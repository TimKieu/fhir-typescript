{"version":3,"file":"ContactPoint.js","sources":["../../src/fhir/ContactPoint.ts"],"sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4.core version: 4.0.1\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR ComplexType: ContactPoint\r\n\r\nimport * as fhir from '../fhir.js';\r\n\r\n// @ts-ignore\r\nimport { ContactPointSystemCodings, ContactPointSystemCodingType,} from '../fhirValueSets/ContactPointSystemCodings.js';\r\n// @ts-ignore\r\nimport { ContactPointSystemCodes,  ContactPointSystemCodeType } from '../fhirValueSets/ContactPointSystemCodes.js';\r\n// @ts-ignore\r\nimport { ContactPointUseCodings, ContactPointUseCodingType,} from '../fhirValueSets/ContactPointUseCodings.js';\r\n// @ts-ignore\r\nimport { ContactPointUseCodes,  ContactPointUseCodeType } from '../fhirValueSets/ContactPointUseCodes.js';\r\n// @ts-ignore\r\nimport { IssueTypeCodes } from '../fhirValueSets/IssueTypeCodes.js';\r\n// @ts-ignore\r\nimport { IssueSeverityCodes } from '../fhirValueSets/IssueSeverityCodes.js';\r\n/**\r\n * Valid arguments for the ContactPoint type.\r\n */\r\nexport interface ContactPointArgs extends fhir.FhirElementArgs {\r\n  /**\r\n   * Telecommunications form for contact point - what communications system is required to make use of the contact.\r\n   */\r\n  system?: ContactPointSystemCodeType|undefined;\r\n  /**\r\n   * Additional text data such as phone extension numbers, or notes about use of the contact are sometimes included in the value.\r\n   */\r\n  value?: fhir.FhirString|string|undefined;\r\n  /**\r\n   * Applications can assume that a contact is current unless it explicitly says that it is temporary or old.\r\n   */\r\n  use?: ContactPointUseCodeType|undefined;\r\n  /**\r\n   * Note that rank does not necessarily follow the order in which the contacts are represented in the instance.\r\n   */\r\n  rank?: fhir.FhirPositiveInt|number|undefined;\r\n  /**\r\n   * Time period when the contact point was/is in use.\r\n   */\r\n  period?: fhir.PeriodArgs|undefined;\r\n}\r\n\r\n/**\r\n * Details for all kinds of technology mediated contact points for a person or organization, including telephone, email, etc.\r\n */\r\nexport class ContactPoint extends fhir.FhirElement {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'ContactPoint';\r\n  /**\r\n   * Telecommunications form for contact point - what communications system is required to make use of the contact.\r\n   */\r\n  public system?: ContactPointSystemCodeType|undefined;\r\n  /**\r\n   * Additional text data such as phone extension numbers, or notes about use of the contact are sometimes included in the value.\r\n   */\r\n  public value?: fhir.FhirString|undefined;\r\n  /**\r\n   * Applications can assume that a contact is current unless it explicitly says that it is temporary or old.\r\n   */\r\n  public use?: ContactPointUseCodeType|undefined;\r\n  /**\r\n   * Note that rank does not necessarily follow the order in which the contacts are represented in the instance.\r\n   */\r\n  public rank?: fhir.FhirPositiveInt|undefined;\r\n  /**\r\n   * Time period when the contact point was/is in use.\r\n   */\r\n  public period?: fhir.Period|undefined;\r\n  /**\r\n   * Default constructor for ContactPoint - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<ContactPointArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    if (source['system']) { this.system = source.system; }\r\n    if (source['value']) { this.value = new fhir.FhirString({value: source.value}); }\r\n    if (source['use']) { this.use = source.use; }\r\n    if (source['rank']) { this.rank = new fhir.FhirPositiveInt({value: source.rank}); }\r\n    if (source['period']) { this.period = new fhir.Period(source.period); }\r\n  }\r\n  /**\r\n   * Required-bound Value Set for system (ContactPoint.system)\r\n   */\r\n  public static systemRequiredCoding():ContactPointSystemCodingType {\r\n    return ContactPointSystemCodings;\r\n  }\r\n  /**\r\n   * Required-bound Value Set for use (ContactPoint.use)\r\n   */\r\n  public static useRequiredCoding():ContactPointUseCodingType {\r\n    return ContactPointUseCodings;\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (this[\"value\"]) { outcome.issue!.push(...this.value.doModelValidation().issue!); }\r\n    if (this[\"rank\"]) { outcome.issue!.push(...this.rank.doModelValidation().issue!); }\r\n    if (this[\"period\"]) { outcome.issue!.push(...this.period.doModelValidation().issue!); }\r\n    return outcome;\r\n  }\r\n}\r\n"],"names":["fhir.FhirString","fhir.FhirPositiveInt","fhir.Period","fhir.FhirElement"],"mappings":";;;;;;;;;;AAAA;AA6CA;;AAEG;AACH,IAAA,YAAA,kBAAA,UAAA,MAAA,EAAA;IAAkC,SAAgB,CAAA,YAAA,EAAA,MAAA,CAAA,CAAA;AAyBhD;;AAEG;IACH,SAAY,YAAA,CAAA,MAAqC,EAAE,OAAwC,EAAA;AAA/E,QAAA,IAAA,MAAA,KAAA,KAAA,CAAA,EAAA,EAAA,MAAqC,GAAA,EAAA,CAAA,EAAA;AAAE,QAAA,IAAA,OAAA,KAAA,KAAA,CAAA,EAAA,EAAA,OAAwC,GAAA,EAAA,CAAA,EAAA;AAA3F,QAAA,IAAA,KAAA,GACE,MAAM,CAAA,IAAA,CAAA,IAAA,EAAA,MAAM,EAAE,OAAO,CAAC,IAMvB,IAAA,CAAA;AALC,QAAA,IAAI,MAAM,CAAC,QAAQ,CAAC,EAAE;AAAE,YAAA,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;AAAE,SAAA;AACtD,QAAA,IAAI,MAAM,CAAC,OAAO,CAAC,EAAE;AAAE,YAAA,KAAI,CAAC,KAAK,GAAG,IAAIA,UAAe,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,KAAK,EAAC,CAAC,CAAC;AAAE,SAAA;AACjF,QAAA,IAAI,MAAM,CAAC,KAAK,CAAC,EAAE;AAAE,YAAA,KAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;AAAE,SAAA;AAC7C,QAAA,IAAI,MAAM,CAAC,MAAM,CAAC,EAAE;AAAE,YAAA,KAAI,CAAC,IAAI,GAAG,IAAIC,eAAoB,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAC,CAAC,CAAC;AAAE,SAAA;AACnF,QAAA,IAAI,MAAM,CAAC,QAAQ,CAAC,EAAE;AAAE,YAAA,KAAI,CAAC,MAAM,GAAG,IAAIC,MAAW,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAAE,SAAA;;KACxE;AACD;;AAEG;AACW,IAAA,YAAA,CAAA,oBAAoB,GAAlC,YAAA;AACE,QAAA,OAAO,yBAAyB,CAAC;KAClC,CAAA;AACD;;AAEG;AACW,IAAA,YAAA,CAAA,iBAAiB,GAA/B,YAAA;AACE,QAAA,OAAO,sBAAsB,CAAC;KAC/B,CAAA;AACD;;AAEG;AACa,IAAA,YAAA,CAAA,SAAA,CAAA,iBAAiB,GAAjC,YAAA;;AACE,QAAA,IAAI,OAAO,GAAyB,MAAM,CAAA,SAAA,CAAA,iBAAiB,WAAE,CAAC;AAC9D,QAAA,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE;AAAE,YAAA,CAAA,KAAA,OAAO,CAAC,KAAM,EAAC,IAAI,CAAA,KAAA,CAAA,EAAA,EAAI,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE,CAAC,KAAM,CAAE,CAAA;AAAE,SAAA;AACrF,QAAA,IAAI,IAAI,CAAC,MAAM,CAAC,EAAE;AAAE,YAAA,CAAA,KAAA,OAAO,CAAC,KAAM,EAAC,IAAI,CAAA,KAAA,CAAA,EAAA,EAAI,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,KAAM,CAAE,CAAA;AAAE,SAAA;AACnF,QAAA,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE;AAAE,YAAA,CAAA,KAAA,OAAO,CAAC,KAAM,EAAC,IAAI,CAAA,KAAA,CAAA,EAAA,EAAI,IAAI,CAAC,MAAM,CAAC,iBAAiB,EAAE,CAAC,KAAM,CAAE,CAAA;AAAE,SAAA;AACvF,QAAA,OAAO,OAAO,CAAC;KAChB,CAAA;AAxDD;;AAEG;IACoB,YAAa,CAAA,aAAA,GAAU,cAAc,CAAC;IAsD/D,OAAC,YAAA,CAAA;AAAA,CA1DD,CAAkCC,WAAgB,CA0DjD;;;;"}