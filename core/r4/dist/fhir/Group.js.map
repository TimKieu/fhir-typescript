{"version":3,"file":"Group.js","sources":["../../src/fhir/Group.ts"],"sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4.core version: 4.0.1\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR Resource: Group\r\n\r\nimport * as fhir from '../fhir.js';\r\n\r\n// @ts-ignore\r\nimport { GroupTypeCodings, GroupTypeCodingType,} from '../fhirValueSets/GroupTypeCodings.js';\r\n// @ts-ignore\r\nimport { GroupTypeCodes,  GroupTypeCodeType } from '../fhirValueSets/GroupTypeCodes.js';\r\n// @ts-ignore\r\nimport { IssueTypeCodes } from '../fhirValueSets/IssueTypeCodes.js';\r\n// @ts-ignore\r\nimport { IssueSeverityCodes } from '../fhirValueSets/IssueSeverityCodes.js';\r\n/**\r\n * Valid arguments for the GroupCharacteristic type.\r\n */\r\nexport interface GroupCharacteristicArgs extends fhir.BackboneElementArgs {\r\n  /**\r\n   * A code that identifies the kind of trait being asserted.\r\n   */\r\n  code: fhir.CodeableConceptArgs|null;\r\n  /**\r\n   * For Range, it means members of the group have a value that falls somewhere within the specified range.\r\n   */\r\n  value?: fhir.CodeableConcept|fhir.FhirBoolean|fhir.Quantity|fhir.Range|fhir.Reference|undefined;\r\n  /**\r\n   * For Range, it means members of the group have a value that falls somewhere within the specified range.\r\n   */\r\n  valueCodeableConcept?: fhir.CodeableConceptArgs|undefined;\r\n  /**\r\n   * For Range, it means members of the group have a value that falls somewhere within the specified range.\r\n   */\r\n  valueBoolean?: fhir.FhirBoolean|boolean|undefined;\r\n  /**\r\n   * For Range, it means members of the group have a value that falls somewhere within the specified range.\r\n   */\r\n  valueQuantity?: fhir.QuantityArgs|undefined;\r\n  /**\r\n   * For Range, it means members of the group have a value that falls somewhere within the specified range.\r\n   */\r\n  valueRange?: fhir.RangeArgs|undefined;\r\n  /**\r\n   * For Range, it means members of the group have a value that falls somewhere within the specified range.\r\n   */\r\n  valueReference?: fhir.ReferenceArgs|undefined;\r\n  /**\r\n   * This is labeled as \"Is Modifier\" because applications cannot wrongly include excluded members as included or vice versa.\r\n   */\r\n  exclude: fhir.FhirBoolean|boolean|undefined;\r\n  /**\r\n   * The period over which the characteristic is tested; e.g. the patient had an operation during the month of June.\r\n   */\r\n  period?: fhir.PeriodArgs|undefined;\r\n}\r\n\r\n/**\r\n * All the identified characteristics must be true for an entity to a member of the group.\r\n */\r\nexport class GroupCharacteristic extends fhir.BackboneElement {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'GroupCharacteristic';\r\n  /**\r\n   * A code that identifies the kind of trait being asserted.\r\n   */\r\n  public code: fhir.CodeableConcept|null;\r\n  /**\r\n   * For Range, it means members of the group have a value that falls somewhere within the specified range.\r\n   */\r\n  public value: (fhir.CodeableConcept|fhir.FhirBoolean|fhir.Quantity|fhir.Range|fhir.Reference)|null;\r\n  /**\r\n   * Internal flag to properly serialize choice-type element Group.characteristic.value[x]\r\n   */\r\n  protected static readonly _fts_valueIsChoice:true = true;\r\n  /**\r\n   * This is labeled as \"Is Modifier\" because applications cannot wrongly include excluded members as included or vice versa.\r\n   */\r\n  public exclude: fhir.FhirBoolean|null;\r\n  /**\r\n   * The period over which the characteristic is tested; e.g. the patient had an operation during the month of June.\r\n   */\r\n  public period?: fhir.Period|undefined;\r\n  /**\r\n   * Default constructor for GroupCharacteristic - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<GroupCharacteristicArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    if (source['code']) { this.code = new fhir.CodeableConcept(source.code); }\r\n    else { this.code = null; }\r\n    if (source['value']) { this.value = source.value; }\r\n    else if (source['valueCodeableConcept']) { this.value = new fhir.CodeableConcept(source.valueCodeableConcept); }\r\n    else if (source['valueBoolean']) { this.value = new fhir.FhirBoolean({value: source.valueBoolean}); }\r\n    else if (source['valueQuantity']) { this.value = new fhir.Quantity(source.valueQuantity); }\r\n    else if (source['valueRange']) { this.value = new fhir.Range(source.valueRange); }\r\n    else if (source['valueReference']) { this.value = new fhir.Reference(source.valueReference); }\r\n    else { this.value = null; }\r\n    if (source['exclude']) { this.exclude = new fhir.FhirBoolean({value: source.exclude}); }\r\n    else { this.exclude = null; }\r\n    if (source['period']) { this.period = new fhir.Period(source.period); }\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (!this['code']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property code:fhir.CodeableConcept fhir: Group.characteristic.code:CodeableConcept', }));\r\n    }\r\n    if (this[\"code\"]) { outcome.issue!.push(...this.code.doModelValidation().issue!); }\r\n    if (!this['value']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property value: fhir: Group.characteristic.value[x]:', }));\r\n    }\r\n    if (!this['exclude']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property exclude:fhir.FhirBoolean fhir: Group.characteristic.exclude:boolean', }));\r\n    }\r\n    if (this[\"exclude\"]) { outcome.issue!.push(...this.exclude.doModelValidation().issue!); }\r\n    if (this[\"period\"]) { outcome.issue!.push(...this.period.doModelValidation().issue!); }\r\n    return outcome;\r\n  }\r\n}\r\n/**\r\n * Valid arguments for the GroupMember type.\r\n */\r\nexport interface GroupMemberArgs extends fhir.BackboneElementArgs {\r\n  /**\r\n   * A reference to the entity that is a member of the group. Must be consistent with Group.type. If the entity is another group, then the type must be the same.\r\n   */\r\n  entity: fhir.ReferenceArgs|null;\r\n  /**\r\n   * The period that the member was in the group, if known.\r\n   */\r\n  period?: fhir.PeriodArgs|undefined;\r\n  /**\r\n   * A flag to indicate that the member is no longer in the group, but previously may have been a member.\r\n   */\r\n  inactive?: fhir.FhirBoolean|boolean|undefined;\r\n}\r\n\r\n/**\r\n * Identifies the resource instances that are members of the group.\r\n */\r\nexport class GroupMember extends fhir.BackboneElement {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'GroupMember';\r\n  /**\r\n   * A reference to the entity that is a member of the group. Must be consistent with Group.type. If the entity is another group, then the type must be the same.\r\n   */\r\n  public entity: fhir.Reference|null;\r\n  /**\r\n   * The period that the member was in the group, if known.\r\n   */\r\n  public period?: fhir.Period|undefined;\r\n  /**\r\n   * A flag to indicate that the member is no longer in the group, but previously may have been a member.\r\n   */\r\n  public inactive?: fhir.FhirBoolean|undefined;\r\n  /**\r\n   * Default constructor for GroupMember - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<GroupMemberArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    if (source['entity']) { this.entity = new fhir.Reference(source.entity); }\r\n    else { this.entity = null; }\r\n    if (source['period']) { this.period = new fhir.Period(source.period); }\r\n    if (source['inactive']) { this.inactive = new fhir.FhirBoolean({value: source.inactive}); }\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (!this['entity']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property entity:fhir.Reference fhir: Group.member.entity:Reference', }));\r\n    }\r\n    if (this[\"entity\"]) { outcome.issue!.push(...this.entity.doModelValidation().issue!); }\r\n    if (this[\"period\"]) { outcome.issue!.push(...this.period.doModelValidation().issue!); }\r\n    if (this[\"inactive\"]) { outcome.issue!.push(...this.inactive.doModelValidation().issue!); }\r\n    return outcome;\r\n  }\r\n}\r\n/**\r\n * Valid arguments for the Group type.\r\n */\r\nexport interface GroupArgs extends fhir.DomainResourceArgs {\r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  resourceType: \"Group\"|undefined;\r\n  /**\r\n   * A unique business identifier for this group.\r\n   */\r\n  identifier?: fhir.IdentifierArgs[]|undefined;\r\n  /**\r\n   * Indicates whether the record for the group is available for use or is merely being retained for historical purposes.\r\n   */\r\n  active?: fhir.FhirBoolean|boolean|undefined;\r\n  /**\r\n   * Group members SHALL be of the appropriate resource type (Patient for person or animal; or Practitioner, Device, Medication or Substance for the other types.).\r\n   */\r\n  type: GroupTypeCodeType|null;\r\n  /**\r\n   * If true, indicates that the resource refers to a specific group of real individuals.  If false, the group defines a set of intended individuals.\r\n   */\r\n  actual: fhir.FhirBoolean|boolean|undefined;\r\n  /**\r\n   * This would generally be omitted for Person resources.\r\n   */\r\n  code?: fhir.CodeableConceptArgs|undefined;\r\n  /**\r\n   * A label assigned to the group for human identification and communication.\r\n   */\r\n  name?: fhir.FhirString|string|undefined;\r\n  /**\r\n   * Note that the quantity may be less than the number of members if some of the members are not active.\r\n   */\r\n  quantity?: fhir.FhirUnsignedInt|number|undefined;\r\n  /**\r\n   * This does not strictly align with ownership of a herd or flock, but may suffice to represent that relationship in simple cases. More complex cases will require an extension.\r\n   */\r\n  managingEntity?: fhir.ReferenceArgs|undefined;\r\n  /**\r\n   * All the identified characteristics must be true for an entity to a member of the group.\r\n   */\r\n  characteristic?: fhir.GroupCharacteristicArgs[]|undefined;\r\n  /**\r\n   * Identifies the resource instances that are members of the group.\r\n   */\r\n  member?: fhir.GroupMemberArgs[]|undefined;\r\n}\r\n\r\n/**\r\n * Represents a defined collection of entities that may be discussed or acted upon collectively but which are not expected to act collectively, and are not formally or legally recognized; i.e. a collection of entities that isn't an Organization.\r\n */\r\nexport class Group extends fhir.DomainResource {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'Group';\r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  public resourceType: \"Group\";\r\n  /**\r\n   * A unique business identifier for this group.\r\n   */\r\n  public identifier?: fhir.Identifier[];\r\n  /**\r\n   * Indicates whether the record for the group is available for use or is merely being retained for historical purposes.\r\n   */\r\n  public active?: fhir.FhirBoolean|undefined;\r\n  /**\r\n   * Group members SHALL be of the appropriate resource type (Patient for person or animal; or Practitioner, Device, Medication or Substance for the other types.).\r\n   */\r\n  public type: GroupTypeCodeType|null;\r\n  /**\r\n   * If true, indicates that the resource refers to a specific group of real individuals.  If false, the group defines a set of intended individuals.\r\n   */\r\n  public actual: fhir.FhirBoolean|null;\r\n  /**\r\n   * This would generally be omitted for Person resources.\r\n   */\r\n  public code?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * A label assigned to the group for human identification and communication.\r\n   */\r\n  public name?: fhir.FhirString|undefined;\r\n  /**\r\n   * Note that the quantity may be less than the number of members if some of the members are not active.\r\n   */\r\n  public quantity?: fhir.FhirUnsignedInt|undefined;\r\n  /**\r\n   * This does not strictly align with ownership of a herd or flock, but may suffice to represent that relationship in simple cases. More complex cases will require an extension.\r\n   */\r\n  public managingEntity?: fhir.Reference|undefined;\r\n  /**\r\n   * All the identified characteristics must be true for an entity to a member of the group.\r\n   */\r\n  public characteristic?: fhir.GroupCharacteristic[];\r\n  /**\r\n   * Identifies the resource instances that are members of the group.\r\n   */\r\n  public member?: fhir.GroupMember[];\r\n  /**\r\n   * Default constructor for Group - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<GroupArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    this.resourceType = 'Group';\r\n    if (source['identifier']) { this.identifier = source.identifier.map((x) => new fhir.Identifier(x)); }\r\n    else { this.identifier = []; }\r\n    if (source['active']) { this.active = new fhir.FhirBoolean({value: source.active}); }\r\n    if (source['type']) { this.type = source.type; }\r\n    else { this.type = null; }\r\n    if (source['actual']) { this.actual = new fhir.FhirBoolean({value: source.actual}); }\r\n    else { this.actual = null; }\r\n    if (source['code']) { this.code = new fhir.CodeableConcept(source.code); }\r\n    if (source['name']) { this.name = new fhir.FhirString({value: source.name}); }\r\n    if (source['quantity']) { this.quantity = new fhir.FhirUnsignedInt({value: source.quantity}); }\r\n    if (source['managingEntity']) { this.managingEntity = new fhir.Reference(source.managingEntity); }\r\n    if (source['characteristic']) { this.characteristic = source.characteristic.map((x) => new fhir.GroupCharacteristic(x)); }\r\n    else { this.characteristic = []; }\r\n    if (source['member']) { this.member = source.member.map((x) => new fhir.GroupMember(x)); }\r\n    else { this.member = []; }\r\n  }\r\n  /**\r\n   * Required-bound Value Set for type (Group.type)\r\n   */\r\n  public static typeRequiredCoding():GroupTypeCodingType {\r\n    return GroupTypeCodings;\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (!this['resourceType']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property resourceType:\"Group\" fhir: Group.resourceType:\"Group\"', }));\r\n    }\r\n    if (this[\"identifier\"]) { this.identifier.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"active\"]) { outcome.issue!.push(...this.active.doModelValidation().issue!); }\r\n    if (!this['type']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property type:GroupTypeCodeType fhir: Group.type:code', }));\r\n    }\r\n    if (!this['actual']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property actual:fhir.FhirBoolean fhir: Group.actual:boolean', }));\r\n    }\r\n    if (this[\"actual\"]) { outcome.issue!.push(...this.actual.doModelValidation().issue!); }\r\n    if (this[\"code\"]) { outcome.issue!.push(...this.code.doModelValidation().issue!); }\r\n    if (this[\"name\"]) { outcome.issue!.push(...this.name.doModelValidation().issue!); }\r\n    if (this[\"quantity\"]) { outcome.issue!.push(...this.quantity.doModelValidation().issue!); }\r\n    if (this[\"managingEntity\"]) { outcome.issue!.push(...this.managingEntity.doModelValidation().issue!); }\r\n    if (this[\"characteristic\"]) { this.characteristic.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"member\"]) { this.member.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    return outcome;\r\n  }\r\n}\r\n"],"names":["fhir.CodeableConcept","fhir.FhirBoolean","fhir.Quantity","fhir.Range","fhir.Reference","fhir.Period","fhir.OperationOutcomeIssue","fhir.BackboneElement","fhir.Identifier","fhir.FhirString","fhir.FhirUnsignedInt","fhir.GroupCharacteristic","fhir.GroupMember","fhir.DomainResource"],"mappings":"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"}