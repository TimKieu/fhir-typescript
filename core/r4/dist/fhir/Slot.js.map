{"version":3,"file":"Slot.js","sources":["../../src/fhir/Slot.ts"],"sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4.core version: 4.0.1\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR Resource: Slot\r\n\r\nimport * as fhir from '../fhir.js';\r\n\r\n// @ts-ignore\r\nimport { ServiceCategoryCodings, ServiceCategoryCodingType,} from '../fhirValueSets/ServiceCategoryCodings.js';\r\n// @ts-ignore\r\nimport { ServiceCategoryCodes,  ServiceCategoryCodeType } from '../fhirValueSets/ServiceCategoryCodes.js';\r\n// @ts-ignore\r\nimport { ServiceTypeCodings, ServiceTypeCodingType,} from '../fhirValueSets/ServiceTypeCodings.js';\r\n// @ts-ignore\r\nimport { ServiceTypeCodes,  ServiceTypeCodeType } from '../fhirValueSets/ServiceTypeCodes.js';\r\n// @ts-ignore\r\nimport { C80PracticeCodesCodings, C80PracticeCodesCodingType,} from '../fhirValueSets/C80PracticeCodesCodings.js';\r\n// @ts-ignore\r\nimport { C80PracticeCodesCodes,  C80PracticeCodesCodeType } from '../fhirValueSets/C80PracticeCodesCodes.js';\r\n// @ts-ignore\r\nimport { V20276Codings, V20276CodingType,} from '../fhirValueSets/V20276Codings.js';\r\n// @ts-ignore\r\nimport { V20276Codes,  V20276CodeType } from '../fhirValueSets/V20276Codes.js';\r\n// @ts-ignore\r\nimport { SlotstatusCodings, SlotstatusCodingType,} from '../fhirValueSets/SlotstatusCodings.js';\r\n// @ts-ignore\r\nimport { SlotstatusCodes,  SlotstatusCodeType } from '../fhirValueSets/SlotstatusCodes.js';\r\n// @ts-ignore\r\nimport { IssueTypeCodes } from '../fhirValueSets/IssueTypeCodes.js';\r\n// @ts-ignore\r\nimport { IssueSeverityCodes } from '../fhirValueSets/IssueSeverityCodes.js';\r\n/**\r\n * Valid arguments for the Slot type.\r\n */\r\nexport interface SlotArgs extends fhir.DomainResourceArgs {\r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  resourceType: \"Slot\"|undefined;\r\n  /**\r\n   * External Ids for this item.\r\n   */\r\n  identifier?: fhir.IdentifierArgs[]|undefined;\r\n  /**\r\n   * A broad categorization of the service that is to be performed during this appointment.\r\n   */\r\n  serviceCategory?: fhir.CodeableConceptArgs[]|undefined;\r\n  /**\r\n   * The type of appointments that can be booked into this slot (ideally this would be an identifiable service - which is at a location, rather than the location itself). If provided then this overrides the value provided on the availability resource.\r\n   */\r\n  serviceType?: fhir.CodeableConceptArgs[]|undefined;\r\n  /**\r\n   * The specialty of a practitioner that would be required to perform the service requested in this appointment.\r\n   */\r\n  specialty?: fhir.CodeableConceptArgs[]|undefined;\r\n  /**\r\n   * The style of appointment or patient that may be booked in the slot (not service type).\r\n   */\r\n  appointmentType?: fhir.CodeableConceptArgs|undefined;\r\n  /**\r\n   * The schedule resource that this slot defines an interval of status information.\r\n   */\r\n  schedule: fhir.ReferenceArgs|null;\r\n  /**\r\n   * busy | free | busy-unavailable | busy-tentative | entered-in-error.\r\n   */\r\n  status: SlotstatusCodeType|null;\r\n  /**\r\n   * Date/Time that the slot is to begin.\r\n   */\r\n  start: fhir.FhirInstant|string|undefined;\r\n  /**\r\n   * Date/Time that the slot is to conclude.\r\n   */\r\n  end: fhir.FhirInstant|string|undefined;\r\n  /**\r\n   * This slot has already been overbooked, appointments are unlikely to be accepted for this time.\r\n   */\r\n  overbooked?: fhir.FhirBoolean|boolean|undefined;\r\n  /**\r\n   * Comments on the slot to describe any extended information. Such as custom constraints on the slot.\r\n   */\r\n  comment?: fhir.FhirString|string|undefined;\r\n}\r\n\r\n/**\r\n * A slot of time on a schedule that may be available for booking appointments.\r\n */\r\nexport class Slot extends fhir.DomainResource {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'Slot';\r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  public resourceType: \"Slot\";\r\n  /**\r\n   * External Ids for this item.\r\n   */\r\n  public identifier?: fhir.Identifier[];\r\n  /**\r\n   * A broad categorization of the service that is to be performed during this appointment.\r\n   */\r\n  public serviceCategory?: fhir.CodeableConcept[];\r\n  /**\r\n   * The type of appointments that can be booked into this slot (ideally this would be an identifiable service - which is at a location, rather than the location itself). If provided then this overrides the value provided on the availability resource.\r\n   */\r\n  public serviceType?: fhir.CodeableConcept[];\r\n  /**\r\n   * The specialty of a practitioner that would be required to perform the service requested in this appointment.\r\n   */\r\n  public specialty?: fhir.CodeableConcept[];\r\n  /**\r\n   * The style of appointment or patient that may be booked in the slot (not service type).\r\n   */\r\n  public appointmentType?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * The schedule resource that this slot defines an interval of status information.\r\n   */\r\n  public schedule: fhir.Reference|null;\r\n  /**\r\n   * busy | free | busy-unavailable | busy-tentative | entered-in-error.\r\n   */\r\n  public status: SlotstatusCodeType|null;\r\n  /**\r\n   * Date/Time that the slot is to begin.\r\n   */\r\n  public start: fhir.FhirInstant|null;\r\n  /**\r\n   * Date/Time that the slot is to conclude.\r\n   */\r\n  public end: fhir.FhirInstant|null;\r\n  /**\r\n   * This slot has already been overbooked, appointments are unlikely to be accepted for this time.\r\n   */\r\n  public overbooked?: fhir.FhirBoolean|undefined;\r\n  /**\r\n   * Comments on the slot to describe any extended information. Such as custom constraints on the slot.\r\n   */\r\n  public comment?: fhir.FhirString|undefined;\r\n  /**\r\n   * Default constructor for Slot - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<SlotArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    this.resourceType = 'Slot';\r\n    if (source['identifier']) { this.identifier = source.identifier.map((x) => new fhir.Identifier(x)); }\r\n    else { this.identifier = []; }\r\n    if (source['serviceCategory']) { this.serviceCategory = source.serviceCategory.map((x) => new fhir.CodeableConcept(x)); }\r\n    else { this.serviceCategory = []; }\r\n    if (source['serviceType']) { this.serviceType = source.serviceType.map((x) => new fhir.CodeableConcept(x)); }\r\n    else { this.serviceType = []; }\r\n    if (source['specialty']) { this.specialty = source.specialty.map((x) => new fhir.CodeableConcept(x)); }\r\n    else { this.specialty = []; }\r\n    if (source['appointmentType']) { this.appointmentType = new fhir.CodeableConcept(source.appointmentType); }\r\n    if (source['schedule']) { this.schedule = new fhir.Reference(source.schedule); }\r\n    else { this.schedule = null; }\r\n    if (source['status']) { this.status = source.status; }\r\n    else { this.status = null; }\r\n    if (source['start']) { this.start = new fhir.FhirInstant({value: source.start}); }\r\n    else { this.start = null; }\r\n    if (source['end']) { this.end = new fhir.FhirInstant({value: source.end}); }\r\n    else { this.end = null; }\r\n    if (source['overbooked']) { this.overbooked = new fhir.FhirBoolean({value: source.overbooked}); }\r\n    if (source['comment']) { this.comment = new fhir.FhirString({value: source.comment}); }\r\n  }\r\n  /**\r\n   * Preferred-bound Value Set for specialty (Slot.specialty)\r\n   */\r\n  public static specialtyPreferredCoding():C80PracticeCodesCodingType {\r\n    return C80PracticeCodesCodings;\r\n  }\r\n  /**\r\n   * Preferred-bound Value Set for appointmentType (Slot.appointmentType)\r\n   */\r\n  public static appointmentTypePreferredCoding():V20276CodingType {\r\n    return V20276Codings;\r\n  }\r\n  /**\r\n   * Required-bound Value Set for status (Slot.status)\r\n   */\r\n  public static statusRequiredCoding():SlotstatusCodingType {\r\n    return SlotstatusCodings;\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (!this['resourceType']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property resourceType:\"Slot\" fhir: Slot.resourceType:\"Slot\"', }));\r\n    }\r\n    if (this[\"identifier\"]) { this.identifier.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"serviceCategory\"]) { this.serviceCategory.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"serviceType\"]) { this.serviceType.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"specialty\"]) { this.specialty.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"appointmentType\"]) { outcome.issue!.push(...this.appointmentType.doModelValidation().issue!); }\r\n    if (!this['schedule']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property schedule:fhir.Reference fhir: Slot.schedule:Reference', }));\r\n    }\r\n    if (this[\"schedule\"]) { outcome.issue!.push(...this.schedule.doModelValidation().issue!); }\r\n    if (!this['status']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property status:SlotstatusCodeType fhir: Slot.status:code', }));\r\n    }\r\n    if (!this['start']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property start:fhir.FhirInstant fhir: Slot.start:instant', }));\r\n    }\r\n    if (this[\"start\"]) { outcome.issue!.push(...this.start.doModelValidation().issue!); }\r\n    if (!this['end']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property end:fhir.FhirInstant fhir: Slot.end:instant', }));\r\n    }\r\n    if (this[\"end\"]) { outcome.issue!.push(...this.end.doModelValidation().issue!); }\r\n    if (this[\"overbooked\"]) { outcome.issue!.push(...this.overbooked.doModelValidation().issue!); }\r\n    if (this[\"comment\"]) { outcome.issue!.push(...this.comment.doModelValidation().issue!); }\r\n    return outcome;\r\n  }\r\n}\r\n"],"names":["fhir.Identifier","fhir.CodeableConcept","fhir.Reference","fhir.FhirInstant","fhir.FhirBoolean","fhir.FhirString","fhir.OperationOutcomeIssue","fhir.DomainResource"],"mappings":"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"}