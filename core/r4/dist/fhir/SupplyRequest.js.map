{"version":3,"file":"SupplyRequest.js","sources":["../../src/fhir/SupplyRequest.ts"],"sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4.core version: 4.0.1\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR Resource: SupplyRequest\r\n\r\nimport * as fhir from '../fhir.js';\r\n\r\n// @ts-ignore\r\nimport { SupplyrequestStatusCodings, SupplyrequestStatusCodingType,} from '../fhirValueSets/SupplyrequestStatusCodings.js';\r\n// @ts-ignore\r\nimport { SupplyrequestStatusCodes,  SupplyrequestStatusCodeType } from '../fhirValueSets/SupplyrequestStatusCodes.js';\r\n// @ts-ignore\r\nimport { SupplyrequestKindCodings, SupplyrequestKindCodingType,} from '../fhirValueSets/SupplyrequestKindCodings.js';\r\n// @ts-ignore\r\nimport { SupplyrequestKindCodes,  SupplyrequestKindCodeType } from '../fhirValueSets/SupplyrequestKindCodes.js';\r\n// @ts-ignore\r\nimport { RequestPriorityCodings, RequestPriorityCodingType,} from '../fhirValueSets/RequestPriorityCodings.js';\r\n// @ts-ignore\r\nimport { RequestPriorityCodes,  RequestPriorityCodeType } from '../fhirValueSets/RequestPriorityCodes.js';\r\n// @ts-ignore\r\nimport { SupplyrequestReasonCodings, SupplyrequestReasonCodingType,} from '../fhirValueSets/SupplyrequestReasonCodings.js';\r\n// @ts-ignore\r\nimport { SupplyrequestReasonCodes,  SupplyrequestReasonCodeType } from '../fhirValueSets/SupplyrequestReasonCodes.js';\r\n// @ts-ignore\r\nimport { IssueTypeCodes } from '../fhirValueSets/IssueTypeCodes.js';\r\n// @ts-ignore\r\nimport { IssueSeverityCodes } from '../fhirValueSets/IssueSeverityCodes.js';\r\n/**\r\n * Valid arguments for the SupplyRequestParameter type.\r\n */\r\nexport interface SupplyRequestParameterArgs extends fhir.BackboneElementArgs {\r\n  /**\r\n   * A code or string that identifies the device detail being asserted.\r\n   */\r\n  code?: fhir.CodeableConceptArgs|undefined;\r\n  /**\r\n   * Range means device should have a value that falls somewhere within the specified range.\r\n   */\r\n  value?: fhir.CodeableConcept|fhir.Quantity|fhir.Range|fhir.FhirBoolean|undefined;\r\n  /**\r\n   * Range means device should have a value that falls somewhere within the specified range.\r\n   */\r\n  valueCodeableConcept?: fhir.CodeableConceptArgs|undefined;\r\n  /**\r\n   * Range means device should have a value that falls somewhere within the specified range.\r\n   */\r\n  valueQuantity?: fhir.QuantityArgs|undefined;\r\n  /**\r\n   * Range means device should have a value that falls somewhere within the specified range.\r\n   */\r\n  valueRange?: fhir.RangeArgs|undefined;\r\n  /**\r\n   * Range means device should have a value that falls somewhere within the specified range.\r\n   */\r\n  valueBoolean?: fhir.FhirBoolean|boolean|undefined;\r\n}\r\n\r\n/**\r\n * Specific parameters for the ordered item.  For example, the size of the indicated item.\r\n */\r\nexport class SupplyRequestParameter extends fhir.BackboneElement {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'SupplyRequestParameter';\r\n  /**\r\n   * A code or string that identifies the device detail being asserted.\r\n   */\r\n  public code?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * Range means device should have a value that falls somewhere within the specified range.\r\n   */\r\n  public value?: (fhir.CodeableConcept|fhir.Quantity|fhir.Range|fhir.FhirBoolean)|undefined;\r\n  /**\r\n   * Internal flag to properly serialize choice-type element SupplyRequest.parameter.value[x]\r\n   */\r\n  protected static readonly _fts_valueIsChoice:true = true;\r\n  /**\r\n   * Default constructor for SupplyRequestParameter - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<SupplyRequestParameterArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    if (source['code']) { this.code = new fhir.CodeableConcept(source.code); }\r\n    if (source['value']) { this.value = source.value; }\r\n    else if (source['valueCodeableConcept']) { this.value = new fhir.CodeableConcept(source.valueCodeableConcept); }\r\n    else if (source['valueQuantity']) { this.value = new fhir.Quantity(source.valueQuantity); }\r\n    else if (source['valueRange']) { this.value = new fhir.Range(source.valueRange); }\r\n    else if (source['valueBoolean']) { this.value = new fhir.FhirBoolean({value: source.valueBoolean}); }\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (this[\"code\"]) { outcome.issue!.push(...this.code.doModelValidation().issue!); }\r\n    return outcome;\r\n  }\r\n}\r\n/**\r\n * Valid arguments for the SupplyRequest type.\r\n */\r\nexport interface SupplyRequestArgs extends fhir.DomainResourceArgs {\r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  resourceType: \"SupplyRequest\"|undefined;\r\n  /**\r\n   * The identifier.type element is used to distinguish between the identifiers assigned by the requester/placer and the performer/filler.\r\n   */\r\n  identifier?: fhir.IdentifierArgs[]|undefined;\r\n  /**\r\n   * Status of the supply request.\r\n   */\r\n  status?: SupplyrequestStatusCodeType|undefined;\r\n  /**\r\n   * Category of supply, e.g.  central, non-stock, etc. This is used to support work flows associated with the supply process.\r\n   */\r\n  category?: fhir.CodeableConceptArgs|undefined;\r\n  /**\r\n   * Indicates how quickly this SupplyRequest should be addressed with respect to other requests.\r\n   */\r\n  priority?: RequestPriorityCodeType|undefined;\r\n  /**\r\n   * Note that there's a difference between a prescription - an instruction to take a medication, along with a (sometimes) implicit supply, and an explicit request to supply, with no explicit instructions.\r\n   */\r\n  item?: fhir.CodeableConcept|fhir.Reference|undefined;\r\n  /**\r\n   * Note that there's a difference between a prescription - an instruction to take a medication, along with a (sometimes) implicit supply, and an explicit request to supply, with no explicit instructions.\r\n   */\r\n  itemCodeableConcept?: fhir.CodeableConceptArgs|undefined;\r\n  /**\r\n   * Note that there's a difference between a prescription - an instruction to take a medication, along with a (sometimes) implicit supply, and an explicit request to supply, with no explicit instructions.\r\n   */\r\n  itemReference?: fhir.ReferenceArgs|undefined;\r\n  /**\r\n   * The amount that is being ordered of the indicated item.\r\n   */\r\n  quantity: fhir.QuantityArgs|null;\r\n  /**\r\n   * Specific parameters for the ordered item.  For example, the size of the indicated item.\r\n   */\r\n  parameter?: fhir.SupplyRequestParameterArgs[]|undefined;\r\n  /**\r\n   * When the request should be fulfilled.\r\n   */\r\n  occurrence?: fhir.FhirDateTime|fhir.Period|fhir.Timing|undefined;\r\n  /**\r\n   * When the request should be fulfilled.\r\n   */\r\n  occurrenceDateTime?: fhir.FhirDateTime|string|undefined;\r\n  /**\r\n   * When the request should be fulfilled.\r\n   */\r\n  occurrencePeriod?: fhir.PeriodArgs|undefined;\r\n  /**\r\n   * When the request should be fulfilled.\r\n   */\r\n  occurrenceTiming?: fhir.TimingArgs|undefined;\r\n  /**\r\n   * When the request was made.\r\n   */\r\n  authoredOn?: fhir.FhirDateTime|string|undefined;\r\n  /**\r\n   * The device, practitioner, etc. who initiated the request.\r\n   */\r\n  requester?: fhir.ReferenceArgs|undefined;\r\n  /**\r\n   * Who is intended to fulfill the request.\r\n   */\r\n  supplier?: fhir.ReferenceArgs[]|undefined;\r\n  /**\r\n   * The reason why the supply item was requested.\r\n   */\r\n  reasonCode?: fhir.CodeableConceptArgs[]|undefined;\r\n  /**\r\n   * The reason why the supply item was requested.\r\n   */\r\n  reasonReference?: fhir.ReferenceArgs[]|undefined;\r\n  /**\r\n   * Where the supply is expected to come from.\r\n   */\r\n  deliverFrom?: fhir.ReferenceArgs|undefined;\r\n  /**\r\n   * Where the supply is destined to go.\r\n   */\r\n  deliverTo?: fhir.ReferenceArgs|undefined;\r\n}\r\n\r\n/**\r\n * A record of a request for a medication, substance or device used in the healthcare setting.\r\n */\r\nexport class SupplyRequest extends fhir.DomainResource {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'SupplyRequest';\r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  public resourceType: \"SupplyRequest\";\r\n  /**\r\n   * The identifier.type element is used to distinguish between the identifiers assigned by the requester/placer and the performer/filler.\r\n   */\r\n  public identifier?: fhir.Identifier[];\r\n  /**\r\n   * Status of the supply request.\r\n   */\r\n  public status?: SupplyrequestStatusCodeType|undefined;\r\n  /**\r\n   * Category of supply, e.g.  central, non-stock, etc. This is used to support work flows associated with the supply process.\r\n   */\r\n  public category?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * Indicates how quickly this SupplyRequest should be addressed with respect to other requests.\r\n   */\r\n  public priority?: RequestPriorityCodeType|undefined;\r\n  /**\r\n   * Note that there's a difference between a prescription - an instruction to take a medication, along with a (sometimes) implicit supply, and an explicit request to supply, with no explicit instructions.\r\n   */\r\n  public item: (fhir.CodeableConcept|fhir.Reference)|null;\r\n  /**\r\n   * Internal flag to properly serialize choice-type element SupplyRequest.item[x]\r\n   */\r\n  protected static readonly _fts_itemIsChoice:true = true;\r\n  /**\r\n   * The amount that is being ordered of the indicated item.\r\n   */\r\n  public quantity: fhir.Quantity|null;\r\n  /**\r\n   * Specific parameters for the ordered item.  For example, the size of the indicated item.\r\n   */\r\n  public parameter?: fhir.SupplyRequestParameter[];\r\n  /**\r\n   * When the request should be fulfilled.\r\n   */\r\n  public occurrence?: (fhir.FhirDateTime|fhir.Period|fhir.Timing)|undefined;\r\n  /**\r\n   * Internal flag to properly serialize choice-type element SupplyRequest.occurrence[x]\r\n   */\r\n  protected static readonly _fts_occurrenceIsChoice:true = true;\r\n  /**\r\n   * When the request was made.\r\n   */\r\n  public authoredOn?: fhir.FhirDateTime|undefined;\r\n  /**\r\n   * The device, practitioner, etc. who initiated the request.\r\n   */\r\n  public requester?: fhir.Reference|undefined;\r\n  /**\r\n   * Who is intended to fulfill the request.\r\n   */\r\n  public supplier?: fhir.Reference[];\r\n  /**\r\n   * The reason why the supply item was requested.\r\n   */\r\n  public reasonCode?: fhir.CodeableConcept[];\r\n  /**\r\n   * The reason why the supply item was requested.\r\n   */\r\n  public reasonReference?: fhir.Reference[];\r\n  /**\r\n   * Where the supply is expected to come from.\r\n   */\r\n  public deliverFrom?: fhir.Reference|undefined;\r\n  /**\r\n   * Where the supply is destined to go.\r\n   */\r\n  public deliverTo?: fhir.Reference|undefined;\r\n  /**\r\n   * Default constructor for SupplyRequest - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<SupplyRequestArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    this.resourceType = 'SupplyRequest';\r\n    if (source['identifier']) { this.identifier = source.identifier.map((x) => new fhir.Identifier(x)); }\r\n    else { this.identifier = []; }\r\n    if (source['status']) { this.status = source.status; }\r\n    if (source['category']) { this.category = new fhir.CodeableConcept(source.category); }\r\n    if (source['priority']) { this.priority = source.priority; }\r\n    if (source['item']) { this.item = source.item; }\r\n    else if (source['itemCodeableConcept']) { this.item = new fhir.CodeableConcept(source.itemCodeableConcept); }\r\n    else if (source['itemReference']) { this.item = new fhir.Reference(source.itemReference); }\r\n    else { this.item = null; }\r\n    if (source['quantity']) { this.quantity = new fhir.Quantity(source.quantity); }\r\n    else { this.quantity = null; }\r\n    if (source['parameter']) { this.parameter = source.parameter.map((x) => new fhir.SupplyRequestParameter(x)); }\r\n    else { this.parameter = []; }\r\n    if (source['occurrence']) { this.occurrence = source.occurrence; }\r\n    else if (source['occurrenceDateTime']) { this.occurrence = new fhir.FhirDateTime({value: source.occurrenceDateTime}); }\r\n    else if (source['occurrencePeriod']) { this.occurrence = new fhir.Period(source.occurrencePeriod); }\r\n    else if (source['occurrenceTiming']) { this.occurrence = new fhir.Timing(source.occurrenceTiming); }\r\n    if (source['authoredOn']) { this.authoredOn = new fhir.FhirDateTime({value: source.authoredOn}); }\r\n    if (source['requester']) { this.requester = new fhir.Reference(source.requester); }\r\n    if (source['supplier']) { this.supplier = source.supplier.map((x) => new fhir.Reference(x)); }\r\n    else { this.supplier = []; }\r\n    if (source['reasonCode']) { this.reasonCode = source.reasonCode.map((x) => new fhir.CodeableConcept(x)); }\r\n    else { this.reasonCode = []; }\r\n    if (source['reasonReference']) { this.reasonReference = source.reasonReference.map((x) => new fhir.Reference(x)); }\r\n    else { this.reasonReference = []; }\r\n    if (source['deliverFrom']) { this.deliverFrom = new fhir.Reference(source.deliverFrom); }\r\n    if (source['deliverTo']) { this.deliverTo = new fhir.Reference(source.deliverTo); }\r\n  }\r\n  /**\r\n   * Required-bound Value Set for status (SupplyRequest.status)\r\n   */\r\n  public static statusRequiredCoding():SupplyrequestStatusCodingType {\r\n    return SupplyrequestStatusCodings;\r\n  }\r\n  /**\r\n   * Required-bound Value Set for priority (SupplyRequest.priority)\r\n   */\r\n  public static priorityRequiredCoding():RequestPriorityCodingType {\r\n    return RequestPriorityCodings;\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (!this['resourceType']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property resourceType:\"SupplyRequest\" fhir: SupplyRequest.resourceType:\"SupplyRequest\"', }));\r\n    }\r\n    if (this[\"identifier\"]) { this.identifier.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"category\"]) { outcome.issue!.push(...this.category.doModelValidation().issue!); }\r\n    if (!this['item']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property item: fhir: SupplyRequest.item[x]:', }));\r\n    }\r\n    if (!this['quantity']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property quantity:fhir.Quantity fhir: SupplyRequest.quantity:Quantity', }));\r\n    }\r\n    if (this[\"quantity\"]) { outcome.issue!.push(...this.quantity.doModelValidation().issue!); }\r\n    if (this[\"parameter\"]) { this.parameter.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"authoredOn\"]) { outcome.issue!.push(...this.authoredOn.doModelValidation().issue!); }\r\n    if (this[\"requester\"]) { outcome.issue!.push(...this.requester.doModelValidation().issue!); }\r\n    if (this[\"supplier\"]) { this.supplier.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"reasonCode\"]) { this.reasonCode.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"reasonReference\"]) { this.reasonReference.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"deliverFrom\"]) { outcome.issue!.push(...this.deliverFrom.doModelValidation().issue!); }\r\n    if (this[\"deliverTo\"]) { outcome.issue!.push(...this.deliverTo.doModelValidation().issue!); }\r\n    return outcome;\r\n  }\r\n}\r\n"],"names":["fhir.CodeableConcept","fhir.Quantity","fhir.Range","fhir.FhirBoolean","fhir.BackboneElement","fhir.Identifier","fhir.Reference","fhir.SupplyRequestParameter","fhir.FhirDateTime","fhir.Period","fhir.Timing","fhir.OperationOutcomeIssue","fhir.DomainResource"],"mappings":"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"}