{"version":3,"file":"Meta.js","sources":["../../src/fhir/Meta.ts"],"sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4.core version: 4.0.1\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR ComplexType: Meta\r\n\r\nimport * as fhir from '../fhir.js';\r\n\r\n// @ts-ignore\r\nimport { SecurityLabelsCodings, SecurityLabelsCodingType,} from '../fhirValueSets/SecurityLabelsCodings.js';\r\n// @ts-ignore\r\nimport { SecurityLabelsCodes,  SecurityLabelsCodeType } from '../fhirValueSets/SecurityLabelsCodes.js';\r\n// @ts-ignore\r\nimport { CommonTagsCodings, CommonTagsCodingType,} from '../fhirValueSets/CommonTagsCodings.js';\r\n// @ts-ignore\r\nimport { CommonTagsCodes,  CommonTagsCodeType } from '../fhirValueSets/CommonTagsCodes.js';\r\n// @ts-ignore\r\nimport { IssueTypeCodes } from '../fhirValueSets/IssueTypeCodes.js';\r\n// @ts-ignore\r\nimport { IssueSeverityCodes } from '../fhirValueSets/IssueSeverityCodes.js';\r\n/**\r\n * Valid arguments for the Meta type.\r\n */\r\nexport interface MetaArgs extends fhir.FhirElementArgs {\r\n  /**\r\n   * The server assigns this value, and ignores what the client specifies, except in the case that the server is imposing version integrity on updates/deletes.\r\n   */\r\n  versionId?: fhir.FhirId|string|undefined;\r\n  /**\r\n   * This value is always populated except when the resource is first being created. The server / resource manager sets this value; what a client provides is irrelevant. This is equivalent to the HTTP Last-Modified and SHOULD have the same value on a [read](http.html#read) interaction.\r\n   */\r\n  lastUpdated?: fhir.FhirInstant|string|undefined;\r\n  /**\r\n   * In the provenance resource, this corresponds to Provenance.entity.what[x]. The exact use of the source (and the implied Provenance.entity.role) is left to implementer discretion. Only one nominated source is allowed; for additional provenance details, a full Provenance resource should be used. \r\n   * This element can be used to indicate where the current master source of a resource that has a canonical URL if the resource is no longer hosted at the canonical URL.\r\n   */\r\n  source?: fhir.FhirUri|string|undefined;\r\n  /**\r\n   * It is up to the server and/or other infrastructure of policy to determine whether/how these claims are verified and/or updated over time.  The list of profile URLs is a set.\r\n   */\r\n  profile?: fhir.FhirCanonical[]|string[]|undefined;\r\n  /**\r\n   * The security labels can be updated without changing the stated version of the resource. The list of security labels is a set. Uniqueness is based the system/code, and version and display are ignored.\r\n   */\r\n  security?: fhir.CodingArgs[]|undefined;\r\n  /**\r\n   * The tags can be updated without changing the stated version of the resource. The list of tags is a set. Uniqueness is based the system/code, and version and display are ignored.\r\n   */\r\n  tag?: fhir.CodingArgs[]|undefined;\r\n}\r\n\r\n/**\r\n * The metadata about a resource. This is content in the resource that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.\r\n */\r\nexport class Meta extends fhir.FhirElement {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'Meta';\r\n  /**\r\n   * The server assigns this value, and ignores what the client specifies, except in the case that the server is imposing version integrity on updates/deletes.\r\n   */\r\n  public versionId?: fhir.FhirId|undefined;\r\n  /**\r\n   * This value is always populated except when the resource is first being created. The server / resource manager sets this value; what a client provides is irrelevant. This is equivalent to the HTTP Last-Modified and SHOULD have the same value on a [read](http.html#read) interaction.\r\n   */\r\n  public lastUpdated?: fhir.FhirInstant|undefined;\r\n  /**\r\n   * In the provenance resource, this corresponds to Provenance.entity.what[x]. The exact use of the source (and the implied Provenance.entity.role) is left to implementer discretion. Only one nominated source is allowed; for additional provenance details, a full Provenance resource should be used. \r\n   * This element can be used to indicate where the current master source of a resource that has a canonical URL if the resource is no longer hosted at the canonical URL.\r\n   */\r\n  public source?: fhir.FhirUri|undefined;\r\n  /**\r\n   * It is up to the server and/or other infrastructure of policy to determine whether/how these claims are verified and/or updated over time.  The list of profile URLs is a set.\r\n   */\r\n  public profile?: fhir.FhirCanonical[];\r\n  /**\r\n   * The security labels can be updated without changing the stated version of the resource. The list of security labels is a set. Uniqueness is based the system/code, and version and display are ignored.\r\n   */\r\n  public security?: fhir.Coding[];\r\n  /**\r\n   * The tags can be updated without changing the stated version of the resource. The list of tags is a set. Uniqueness is based the system/code, and version and display are ignored.\r\n   */\r\n  public tag?: fhir.Coding[];\r\n  /**\r\n   * Default constructor for Meta - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<MetaArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    if (source['versionId']) { this.versionId = new fhir.FhirId({value: source.versionId}); }\r\n    if (source['lastUpdated']) { this.lastUpdated = new fhir.FhirInstant({value: source.lastUpdated}); }\r\n    if (source['source']) { this.source = new fhir.FhirUri({value: source.source}); }\r\n    if (source['profile']) { this.profile = source.profile.map((x) => new fhir.FhirCanonical({value: x})); }\r\n    else { this.profile = []; }\r\n    if (source['security']) { this.security = source.security.map((x) => new fhir.Coding(x)); }\r\n    else { this.security = []; }\r\n    if (source['tag']) { this.tag = source.tag.map((x) => new fhir.Coding(x)); }\r\n    else { this.tag = []; }\r\n  }\r\n  /**\r\n   * Extensible-bound Value Set for security (Meta.security)\r\n   */\r\n  public static securityExtensibleCoding():SecurityLabelsCodingType {\r\n    return SecurityLabelsCodings;\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (this[\"versionId\"]) { outcome.issue!.push(...this.versionId.doModelValidation().issue!); }\r\n    if (this[\"lastUpdated\"]) { outcome.issue!.push(...this.lastUpdated.doModelValidation().issue!); }\r\n    if (this[\"source\"]) { outcome.issue!.push(...this.source.doModelValidation().issue!); }\r\n    if (this[\"profile\"]) { this.profile.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"security\"]) { this.security.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"tag\"]) { this.tag.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    return outcome;\r\n  }\r\n}\r\n"],"names":["fhir.FhirId","fhir.FhirInstant","fhir.FhirUri","fhir.FhirCanonical","fhir.Coding","fhir.FhirElement"],"mappings":";;;;;;;;;;;AAAA;AAkDA;;AAEG;AACH,IAAA,IAAA,kBAAA,UAAA,MAAA,EAAA;IAA0B,SAAgB,CAAA,IAAA,EAAA,MAAA,CAAA,CAAA;AA8BxC;;AAEG;IACH,SAAY,IAAA,CAAA,MAA6B,EAAE,OAAwC,EAAA;AAAvE,QAAA,IAAA,MAAA,KAAA,KAAA,CAAA,EAAA,EAAA,MAA6B,GAAA,EAAA,CAAA,EAAA;AAAE,QAAA,IAAA,OAAA,KAAA,KAAA,CAAA,EAAA,EAAA,OAAwC,GAAA,EAAA,CAAA,EAAA;AAAnF,QAAA,IAAA,KAAA,GACE,MAAM,CAAA,IAAA,CAAA,IAAA,EAAA,MAAM,EAAE,OAAO,CAAC,IAUvB,IAAA,CAAA;AATC,QAAA,IAAI,MAAM,CAAC,WAAW,CAAC,EAAE;AAAE,YAAA,KAAI,CAAC,SAAS,GAAG,IAAIA,MAAW,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,SAAS,EAAC,CAAC,CAAC;AAAE,SAAA;AACzF,QAAA,IAAI,MAAM,CAAC,aAAa,CAAC,EAAE;AAAE,YAAA,KAAI,CAAC,WAAW,GAAG,IAAIC,WAAgB,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,WAAW,EAAC,CAAC,CAAC;AAAE,SAAA;AACpG,QAAA,IAAI,MAAM,CAAC,QAAQ,CAAC,EAAE;AAAE,YAAA,KAAI,CAAC,MAAM,GAAG,IAAIC,OAAY,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,MAAM,EAAC,CAAC,CAAC;AAAE,SAAA;AACjF,QAAA,IAAI,MAAM,CAAC,SAAS,CAAC,EAAE;YAAE,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,UAAC,CAAC,EAAK,EAAA,OAAA,IAAIC,aAAkB,CAAC,EAAC,KAAK,EAAE,CAAC,EAAC,CAAC,CAAA,EAAA,CAAC,CAAC;AAAE,SAAA;AACnG,aAAA;AAAE,YAAA,KAAI,CAAC,OAAO,GAAG,EAAE,CAAC;AAAE,SAAA;AAC3B,QAAA,IAAI,MAAM,CAAC,UAAU,CAAC,EAAE;YAAE,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAC,CAAC,IAAK,OAAA,IAAIC,MAAW,CAAC,CAAC,CAAC,CAAA,EAAA,CAAC,CAAC;AAAE,SAAA;AACtF,aAAA;AAAE,YAAA,KAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AAAE,SAAA;AAC5B,QAAA,IAAI,MAAM,CAAC,KAAK,CAAC,EAAE;YAAE,KAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,UAAC,CAAC,IAAK,OAAA,IAAIA,MAAW,CAAC,CAAC,CAAC,CAAA,EAAA,CAAC,CAAC;AAAE,SAAA;AACvE,aAAA;AAAE,YAAA,KAAI,CAAC,GAAG,GAAG,EAAE,CAAC;AAAE,SAAA;;KACxB;AACD;;AAEG;AACW,IAAA,IAAA,CAAA,wBAAwB,GAAtC,YAAA;AACE,QAAA,OAAO,qBAAqB,CAAC;KAC9B,CAAA;AACD;;AAEG;AACa,IAAA,IAAA,CAAA,SAAA,CAAA,iBAAiB,GAAjC,YAAA;;AACE,QAAA,IAAI,OAAO,GAAyB,MAAM,CAAA,SAAA,CAAA,iBAAiB,WAAE,CAAC;AAC9D,QAAA,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE;AAAE,YAAA,CAAA,KAAA,OAAO,CAAC,KAAM,EAAC,IAAI,CAAA,KAAA,CAAA,EAAA,EAAI,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC,KAAM,CAAE,CAAA;AAAE,SAAA;AAC7F,QAAA,IAAI,IAAI,CAAC,aAAa,CAAC,EAAE;AAAE,YAAA,CAAA,KAAA,OAAO,CAAC,KAAM,EAAC,IAAI,CAAA,KAAA,CAAA,EAAA,EAAI,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,CAAC,KAAM,CAAE,CAAA;AAAE,SAAA;AACjG,QAAA,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE;AAAE,YAAA,CAAA,KAAA,OAAO,CAAC,KAAM,EAAC,IAAI,CAAA,KAAA,CAAA,EAAA,EAAI,IAAI,CAAC,MAAM,CAAC,iBAAiB,EAAE,CAAC,KAAM,CAAE,CAAA;AAAE,SAAA;AACvF,QAAA,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE;AAAE,YAAA,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAC,CAAC,EAAA;;AAAO,gBAAA,CAAA,EAAA,GAAA,OAAO,CAAC,KAAM,EAAC,IAAI,CAAI,KAAA,CAAA,EAAA,EAAA,CAAC,CAAC,iBAAiB,EAAE,CAAC,KAAM,CAAE,CAAA;AAAC,aAAC,CAAC,CAAA;AAAE,SAAA;AAC/G,QAAA,IAAI,IAAI,CAAC,UAAU,CAAC,EAAE;AAAE,YAAA,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAC,CAAC,EAAA;;AAAO,gBAAA,CAAA,EAAA,GAAA,OAAO,CAAC,KAAM,EAAC,IAAI,CAAI,KAAA,CAAA,EAAA,EAAA,CAAC,CAAC,iBAAiB,EAAE,CAAC,KAAM,CAAE,CAAA;AAAC,aAAC,CAAC,CAAA;AAAE,SAAA;AACjH,QAAA,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE;AAAE,YAAA,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,UAAC,CAAC,EAAA;;AAAO,gBAAA,CAAA,EAAA,GAAA,OAAO,CAAC,KAAM,EAAC,IAAI,CAAI,KAAA,CAAA,EAAA,EAAA,CAAC,CAAC,iBAAiB,EAAE,CAAC,KAAM,CAAE,CAAA;AAAC,aAAC,CAAC,CAAA;AAAE,SAAA;AACvG,QAAA,OAAO,OAAO,CAAC;KAChB,CAAA;AA9DD;;AAEG;IACoB,IAAa,CAAA,aAAA,GAAU,MAAM,CAAC;IA4DvD,OAAC,IAAA,CAAA;AAAA,CAhED,CAA0BC,WAAgB,CAgEzC;;;;"}