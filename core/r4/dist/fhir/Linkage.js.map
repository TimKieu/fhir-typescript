{"version":3,"file":"Linkage.js","sources":["../../src/fhir/Linkage.ts"],"sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4.core version: 4.0.1\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR Resource: Linkage\r\n\r\nimport * as fhir from '../fhir.js';\r\n\r\n// @ts-ignore\r\nimport { LinkageTypeCodings, LinkageTypeCodingType,} from '../fhirValueSets/LinkageTypeCodings.js';\r\n// @ts-ignore\r\nimport { LinkageTypeCodes,  LinkageTypeCodeType } from '../fhirValueSets/LinkageTypeCodes.js';\r\n// @ts-ignore\r\nimport { IssueTypeCodes } from '../fhirValueSets/IssueTypeCodes.js';\r\n// @ts-ignore\r\nimport { IssueSeverityCodes } from '../fhirValueSets/IssueSeverityCodes.js';\r\n/**\r\n * Valid arguments for the LinkageItem type.\r\n */\r\nexport interface LinkageItemArgs extends fhir.BackboneElementArgs {\r\n  /**\r\n   * Distinguishes which item is \"source of truth\" (if any) and which items are no longer considered to be current representations.\r\n   */\r\n  type: LinkageTypeCodeType|null;\r\n  /**\r\n   * The resource instance being linked as part of the group.\r\n   */\r\n  resource: fhir.ReferenceArgs|null;\r\n}\r\n\r\n/**\r\n * Identifies which record considered as the reference to the same real-world occurrence as well as how the items should be evaluated within the collection of linked items.\r\n */\r\nexport class LinkageItem extends fhir.BackboneElement {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'LinkageItem';\r\n  /**\r\n   * Distinguishes which item is \"source of truth\" (if any) and which items are no longer considered to be current representations.\r\n   */\r\n  public type: LinkageTypeCodeType|null;\r\n  /**\r\n   * The resource instance being linked as part of the group.\r\n   */\r\n  public resource: fhir.Reference|null;\r\n  /**\r\n   * Default constructor for LinkageItem - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<LinkageItemArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    if (source['type']) { this.type = source.type; }\r\n    else { this.type = null; }\r\n    if (source['resource']) { this.resource = new fhir.Reference(source.resource); }\r\n    else { this.resource = null; }\r\n  }\r\n  /**\r\n   * Required-bound Value Set for type (Linkage.item.type)\r\n   */\r\n  public static typeRequiredCoding():LinkageTypeCodingType {\r\n    return LinkageTypeCodings;\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (!this['type']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property type:LinkageTypeCodeType fhir: Linkage.item.type:code', }));\r\n    }\r\n    if (!this['resource']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property resource:fhir.Reference fhir: Linkage.item.resource:Reference', }));\r\n    }\r\n    if (this[\"resource\"]) { outcome.issue!.push(...this.resource.doModelValidation().issue!); }\r\n    return outcome;\r\n  }\r\n}\r\n/**\r\n * Valid arguments for the Linkage type.\r\n */\r\nexport interface LinkageArgs extends fhir.DomainResourceArgs {\r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  resourceType: \"Linkage\"|undefined;\r\n  /**\r\n   * If false, any asserted linkages should not be considered current/relevant/applicable.\r\n   */\r\n  active?: fhir.FhirBoolean|boolean|undefined;\r\n  /**\r\n   * Identifies the user or organization responsible for asserting the linkages as well as the user or organization who establishes the context in which the nature of each linkage is evaluated.\r\n   */\r\n  author?: fhir.ReferenceArgs|undefined;\r\n  /**\r\n   * Identifies which record considered as the reference to the same real-world occurrence as well as how the items should be evaluated within the collection of linked items.\r\n   */\r\n  item: fhir.LinkageItemArgs[]|null;\r\n}\r\n\r\n/**\r\n * Identifies two or more records (resource instances) that refer to the same real-world \"occurrence\".\r\n */\r\nexport class Linkage extends fhir.DomainResource {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'Linkage';\r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  public resourceType: \"Linkage\";\r\n  /**\r\n   * If false, any asserted linkages should not be considered current/relevant/applicable.\r\n   */\r\n  public active?: fhir.FhirBoolean|undefined;\r\n  /**\r\n   * Identifies the user or organization responsible for asserting the linkages as well as the user or organization who establishes the context in which the nature of each linkage is evaluated.\r\n   */\r\n  public author?: fhir.Reference|undefined;\r\n  /**\r\n   * Identifies which record considered as the reference to the same real-world occurrence as well as how the items should be evaluated within the collection of linked items.\r\n   */\r\n  public item: fhir.LinkageItem[];\r\n  /**\r\n   * Default constructor for Linkage - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<LinkageArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    this.resourceType = 'Linkage';\r\n    if (source['active']) { this.active = new fhir.FhirBoolean({value: source.active}); }\r\n    if (source['author']) { this.author = new fhir.Reference(source.author); }\r\n    if (source['item']) { this.item = source.item.map((x) => new fhir.LinkageItem(x)); }\r\n    else { this.item = []; }\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (!this['resourceType']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property resourceType:\"Linkage\" fhir: Linkage.resourceType:\"Linkage\"', }));\r\n    }\r\n    if (this[\"active\"]) { outcome.issue!.push(...this.active.doModelValidation().issue!); }\r\n    if (this[\"author\"]) { outcome.issue!.push(...this.author.doModelValidation().issue!); }\r\n    if (!this['item']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property item:fhir.LinkageItem[] fhir: Linkage.item:item', }));\r\n    } else if (!Array.isArray(this.item)) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.StructuralIssue,  diagnostics: 'Found scalar in array property item:fhir.LinkageItem[] fhir: Linkage.item:item', }));\r\n    } else if (this.item.length === 0) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property item:fhir.LinkageItem[] fhir: Linkage.item:item', }));\r\n    }\r\n    if (this[\"item\"]) { this.item.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    return outcome;\r\n  }\r\n}\r\n"],"names":["fhir.Reference","fhir.OperationOutcomeIssue","fhir.BackboneElement","fhir.FhirBoolean","fhir.LinkageItem","fhir.DomainResource"],"mappings":"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"}