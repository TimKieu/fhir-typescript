{"version":3,"file":"ParameterDefinition.js","sources":["../../src/fhir/ParameterDefinition.ts"],"sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4.core version: 4.0.1\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR ComplexType: ParameterDefinition\r\n\r\nimport * as fhir from '../fhir.js';\r\n\r\n// @ts-ignore\r\nimport { OperationParameterUseCodings, OperationParameterUseCodingType,} from '../fhirValueSets/OperationParameterUseCodings.js';\r\n// @ts-ignore\r\nimport { OperationParameterUseCodes,  OperationParameterUseCodeType } from '../fhirValueSets/OperationParameterUseCodes.js';\r\n// @ts-ignore\r\nimport { AllTypesCodings, AllTypesCodingType,} from '../fhirValueSets/AllTypesCodings.js';\r\n// @ts-ignore\r\nimport { AllTypesCodes,  AllTypesCodeType } from '../fhirValueSets/AllTypesCodes.js';\r\n// @ts-ignore\r\nimport { IssueTypeCodes } from '../fhirValueSets/IssueTypeCodes.js';\r\n// @ts-ignore\r\nimport { IssueSeverityCodes } from '../fhirValueSets/IssueSeverityCodes.js';\r\n/**\r\n * Valid arguments for the ParameterDefinition type.\r\n */\r\nexport interface ParameterDefinitionArgs extends fhir.FhirElementArgs {\r\n  /**\r\n   * The name of the parameter used to allow access to the value of the parameter in evaluation contexts.\r\n   */\r\n  name?: fhir.FhirCode|string|undefined;\r\n  /**\r\n   * Whether the parameter is input or output for the module.\r\n   */\r\n  use: OperationParameterUseCodeType|null;\r\n  /**\r\n   * The minimum number of times this parameter SHALL appear in the request or response.\r\n   */\r\n  min?: fhir.FhirInteger|number|undefined;\r\n  /**\r\n   * The maximum number of times this element is permitted to appear in the request or response.\r\n   */\r\n  max?: fhir.FhirString|string|undefined;\r\n  /**\r\n   * A brief discussion of what the parameter is for and how it is used by the module.\r\n   */\r\n  documentation?: fhir.FhirString|string|undefined;\r\n  /**\r\n   * The type of the parameter.\r\n   */\r\n  type: fhir.FhirCode|string|undefined;\r\n  /**\r\n   * If specified, this indicates a profile that the input data must conform to, or that the output data will conform to.\r\n   */\r\n  profile?: fhir.FhirCanonical|string|undefined;\r\n}\r\n\r\n/**\r\n * The parameters to the module. This collection specifies both the input and output parameters. Input parameters are provided by the caller as part of the $evaluate operation. Output parameters are included in the GuidanceResponse.\r\n */\r\nexport class ParameterDefinition extends fhir.FhirElement {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'ParameterDefinition';\r\n  /**\r\n   * The name of the parameter used to allow access to the value of the parameter in evaluation contexts.\r\n   */\r\n  public name?: fhir.FhirCode|undefined;\r\n  /**\r\n   * Whether the parameter is input or output for the module.\r\n   */\r\n  public use: OperationParameterUseCodeType|null;\r\n  /**\r\n   * The minimum number of times this parameter SHALL appear in the request or response.\r\n   */\r\n  public min?: fhir.FhirInteger|undefined;\r\n  /**\r\n   * The maximum number of times this element is permitted to appear in the request or response.\r\n   */\r\n  public max?: fhir.FhirString|undefined;\r\n  /**\r\n   * A brief discussion of what the parameter is for and how it is used by the module.\r\n   */\r\n  public documentation?: fhir.FhirString|undefined;\r\n  /**\r\n   * The type of the parameter.\r\n   */\r\n  public type: fhir.FhirCode|null;\r\n  /**\r\n   * If specified, this indicates a profile that the input data must conform to, or that the output data will conform to.\r\n   */\r\n  public profile?: fhir.FhirCanonical|undefined;\r\n  /**\r\n   * Default constructor for ParameterDefinition - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<ParameterDefinitionArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    if (source['name']) { this.name = new fhir.FhirCode({value: source.name}); }\r\n    if (source['use']) { this.use = source.use; }\r\n    else { this.use = null; }\r\n    if (source['min']) { this.min = new fhir.FhirInteger({value: source.min}); }\r\n    if (source['max']) { this.max = new fhir.FhirString({value: source.max}); }\r\n    if (source['documentation']) { this.documentation = new fhir.FhirString({value: source.documentation}); }\r\n    if (source['type']) { this.type = new fhir.FhirCode({value: source.type}); }\r\n    else { this.type = null; }\r\n    if (source['profile']) { this.profile = new fhir.FhirCanonical({value: source.profile}); }\r\n  }\r\n  /**\r\n   * Required-bound Value Set for use (ParameterDefinition.use)\r\n   */\r\n  public static useRequiredCoding():OperationParameterUseCodingType {\r\n    return OperationParameterUseCodings;\r\n  }\r\n  /**\r\n   * Required-bound Value Set for type (ParameterDefinition.type)\r\n   */\r\n  public static typeRequiredCoding():AllTypesCodingType {\r\n    return AllTypesCodings;\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (this[\"name\"]) { outcome.issue!.push(...this.name.doModelValidation().issue!); }\r\n    if (!this['use']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property use:OperationParameterUseCodeType fhir: ParameterDefinition.use:code', }));\r\n    }\r\n    if (this[\"min\"]) { outcome.issue!.push(...this.min.doModelValidation().issue!); }\r\n    if (this[\"max\"]) { outcome.issue!.push(...this.max.doModelValidation().issue!); }\r\n    if (this[\"documentation\"]) { outcome.issue!.push(...this.documentation.doModelValidation().issue!); }\r\n    if (!this['type']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property type:fhir.FhirCode fhir: ParameterDefinition.type:code', }));\r\n    }\r\n    if (this[\"type\"]) { outcome.issue!.push(...this.type.doModelValidation().issue!); }\r\n    if (this[\"profile\"]) { outcome.issue!.push(...this.profile.doModelValidation().issue!); }\r\n    return outcome;\r\n  }\r\n}\r\n"],"names":["fhir.FhirCode","fhir.FhirInteger","fhir.FhirString","fhir.FhirCanonical","fhir.OperationOutcomeIssue","fhir.FhirElement"],"mappings":"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"}