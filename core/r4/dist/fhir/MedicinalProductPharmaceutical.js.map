{"version":3,"file":"MedicinalProductPharmaceutical.js","sources":["../../src/fhir/MedicinalProductPharmaceutical.ts"],"sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4.core version: 4.0.1\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR Resource: MedicinalProductPharmaceutical\r\n\r\nimport * as fhir from '../fhir.js';\r\n\r\n// @ts-ignore\r\nimport { IssueTypeCodes } from '../fhirValueSets/IssueTypeCodes.js';\r\n// @ts-ignore\r\nimport { IssueSeverityCodes } from '../fhirValueSets/IssueSeverityCodes.js';\r\n/**\r\n * Valid arguments for the MedicinalProductPharmaceuticalCharacteristics type.\r\n */\r\nexport interface MedicinalProductPharmaceuticalCharacteristicsArgs extends fhir.BackboneElementArgs {\r\n  /**\r\n   * A coded characteristic.\r\n   */\r\n  code: fhir.CodeableConceptArgs|null;\r\n  /**\r\n   * The status of characteristic e.g. assigned or pending.\r\n   */\r\n  status?: fhir.CodeableConceptArgs|undefined;\r\n}\r\n\r\n/**\r\n * Characteristics e.g. a products onset of action.\r\n */\r\nexport class MedicinalProductPharmaceuticalCharacteristics extends fhir.BackboneElement {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'MedicinalProductPharmaceuticalCharacteristics';\r\n  /**\r\n   * A coded characteristic.\r\n   */\r\n  public code: fhir.CodeableConcept|null;\r\n  /**\r\n   * The status of characteristic e.g. assigned or pending.\r\n   */\r\n  public status?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * Default constructor for MedicinalProductPharmaceuticalCharacteristics - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<MedicinalProductPharmaceuticalCharacteristicsArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    if (source['code']) { this.code = new fhir.CodeableConcept(source.code); }\r\n    else { this.code = null; }\r\n    if (source['status']) { this.status = new fhir.CodeableConcept(source.status); }\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (!this['code']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property code:fhir.CodeableConcept fhir: MedicinalProductPharmaceutical.characteristics.code:CodeableConcept', }));\r\n    }\r\n    if (this[\"code\"]) { outcome.issue!.push(...this.code.doModelValidation().issue!); }\r\n    if (this[\"status\"]) { outcome.issue!.push(...this.status.doModelValidation().issue!); }\r\n    return outcome;\r\n  }\r\n}\r\n/**\r\n * Valid arguments for the MedicinalProductPharmaceuticalRouteOfAdministrationTargetSpeciesWithdrawalPeriod type.\r\n */\r\nexport interface MedicinalProductPharmaceuticalRouteOfAdministrationTargetSpeciesWithdrawalPeriodArgs extends fhir.BackboneElementArgs {\r\n  /**\r\n   * Coded expression for the type of tissue for which the withdrawal period applues, e.g. meat, milk.\r\n   */\r\n  tissue: fhir.CodeableConceptArgs|null;\r\n  /**\r\n   * A value for the time.\r\n   */\r\n  value: fhir.QuantityArgs|null;\r\n  /**\r\n   * Extra information about the withdrawal period.\r\n   */\r\n  supportingInformation?: fhir.FhirString|string|undefined;\r\n}\r\n\r\n/**\r\n * A species specific time during which consumption of animal product is not appropriate.\r\n */\r\nexport class MedicinalProductPharmaceuticalRouteOfAdministrationTargetSpeciesWithdrawalPeriod extends fhir.BackboneElement {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'MedicinalProductPharmaceuticalRouteOfAdministrationTargetSpeciesWithdrawalPeriod';\r\n  /**\r\n   * Coded expression for the type of tissue for which the withdrawal period applues, e.g. meat, milk.\r\n   */\r\n  public tissue: fhir.CodeableConcept|null;\r\n  /**\r\n   * A value for the time.\r\n   */\r\n  public value: fhir.Quantity|null;\r\n  /**\r\n   * Extra information about the withdrawal period.\r\n   */\r\n  public supportingInformation?: fhir.FhirString|undefined;\r\n  /**\r\n   * Default constructor for MedicinalProductPharmaceuticalRouteOfAdministrationTargetSpeciesWithdrawalPeriod - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<MedicinalProductPharmaceuticalRouteOfAdministrationTargetSpeciesWithdrawalPeriodArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    if (source['tissue']) { this.tissue = new fhir.CodeableConcept(source.tissue); }\r\n    else { this.tissue = null; }\r\n    if (source['value']) { this.value = new fhir.Quantity(source.value); }\r\n    else { this.value = null; }\r\n    if (source['supportingInformation']) { this.supportingInformation = new fhir.FhirString({value: source.supportingInformation}); }\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (!this['tissue']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property tissue:fhir.CodeableConcept fhir: MedicinalProductPharmaceutical.routeOfAdministration.targetSpecies.withdrawalPeriod.tissue:CodeableConcept', }));\r\n    }\r\n    if (this[\"tissue\"]) { outcome.issue!.push(...this.tissue.doModelValidation().issue!); }\r\n    if (!this['value']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property value:fhir.Quantity fhir: MedicinalProductPharmaceutical.routeOfAdministration.targetSpecies.withdrawalPeriod.value:Quantity', }));\r\n    }\r\n    if (this[\"value\"]) { outcome.issue!.push(...this.value.doModelValidation().issue!); }\r\n    if (this[\"supportingInformation\"]) { outcome.issue!.push(...this.supportingInformation.doModelValidation().issue!); }\r\n    return outcome;\r\n  }\r\n}\r\n/**\r\n * Valid arguments for the MedicinalProductPharmaceuticalRouteOfAdministrationTargetSpecies type.\r\n */\r\nexport interface MedicinalProductPharmaceuticalRouteOfAdministrationTargetSpeciesArgs extends fhir.BackboneElementArgs {\r\n  /**\r\n   * Coded expression for the species.\r\n   */\r\n  code: fhir.CodeableConceptArgs|null;\r\n  /**\r\n   * A species specific time during which consumption of animal product is not appropriate.\r\n   */\r\n  withdrawalPeriod?: fhir.MedicinalProductPharmaceuticalRouteOfAdministrationTargetSpeciesWithdrawalPeriodArgs[]|undefined;\r\n}\r\n\r\n/**\r\n * A species for which this route applies.\r\n */\r\nexport class MedicinalProductPharmaceuticalRouteOfAdministrationTargetSpecies extends fhir.BackboneElement {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'MedicinalProductPharmaceuticalRouteOfAdministrationTargetSpecies';\r\n  /**\r\n   * Coded expression for the species.\r\n   */\r\n  public code: fhir.CodeableConcept|null;\r\n  /**\r\n   * A species specific time during which consumption of animal product is not appropriate.\r\n   */\r\n  public withdrawalPeriod?: fhir.MedicinalProductPharmaceuticalRouteOfAdministrationTargetSpeciesWithdrawalPeriod[];\r\n  /**\r\n   * Default constructor for MedicinalProductPharmaceuticalRouteOfAdministrationTargetSpecies - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<MedicinalProductPharmaceuticalRouteOfAdministrationTargetSpeciesArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    if (source['code']) { this.code = new fhir.CodeableConcept(source.code); }\r\n    else { this.code = null; }\r\n    if (source['withdrawalPeriod']) { this.withdrawalPeriod = source.withdrawalPeriod.map((x) => new fhir.MedicinalProductPharmaceuticalRouteOfAdministrationTargetSpeciesWithdrawalPeriod(x)); }\r\n    else { this.withdrawalPeriod = []; }\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (!this['code']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property code:fhir.CodeableConcept fhir: MedicinalProductPharmaceutical.routeOfAdministration.targetSpecies.code:CodeableConcept', }));\r\n    }\r\n    if (this[\"code\"]) { outcome.issue!.push(...this.code.doModelValidation().issue!); }\r\n    if (this[\"withdrawalPeriod\"]) { this.withdrawalPeriod.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    return outcome;\r\n  }\r\n}\r\n/**\r\n * Valid arguments for the MedicinalProductPharmaceuticalRouteOfAdministration type.\r\n */\r\nexport interface MedicinalProductPharmaceuticalRouteOfAdministrationArgs extends fhir.BackboneElementArgs {\r\n  /**\r\n   * Coded expression for the route.\r\n   */\r\n  code: fhir.CodeableConceptArgs|null;\r\n  /**\r\n   * The first dose (dose quantity) administered in humans can be specified, for a product under investigation, using a numerical value and its unit of measurement.\r\n   */\r\n  firstDose?: fhir.QuantityArgs|undefined;\r\n  /**\r\n   * The maximum single dose that can be administered as per the protocol of a clinical trial can be specified using a numerical value and its unit of measurement.\r\n   */\r\n  maxSingleDose?: fhir.QuantityArgs|undefined;\r\n  /**\r\n   * The maximum dose per day (maximum dose quantity to be administered in any one 24-h period) that can be administered as per the protocol referenced in the clinical trial authorisation.\r\n   */\r\n  maxDosePerDay?: fhir.QuantityArgs|undefined;\r\n  /**\r\n   * The maximum dose per treatment period that can be administered as per the protocol referenced in the clinical trial authorisation.\r\n   */\r\n  maxDosePerTreatmentPeriod?: fhir.RatioArgs|undefined;\r\n  /**\r\n   * The maximum treatment period during which an Investigational Medicinal Product can be administered as per the protocol referenced in the clinical trial authorisation.\r\n   */\r\n  maxTreatmentPeriod?: fhir.DurationArgs|undefined;\r\n  /**\r\n   * A species for which this route applies.\r\n   */\r\n  targetSpecies?: fhir.MedicinalProductPharmaceuticalRouteOfAdministrationTargetSpeciesArgs[]|undefined;\r\n}\r\n\r\n/**\r\n * The path by which the pharmaceutical product is taken into or makes contact with the body.\r\n */\r\nexport class MedicinalProductPharmaceuticalRouteOfAdministration extends fhir.BackboneElement {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'MedicinalProductPharmaceuticalRouteOfAdministration';\r\n  /**\r\n   * Coded expression for the route.\r\n   */\r\n  public code: fhir.CodeableConcept|null;\r\n  /**\r\n   * The first dose (dose quantity) administered in humans can be specified, for a product under investigation, using a numerical value and its unit of measurement.\r\n   */\r\n  public firstDose?: fhir.Quantity|undefined;\r\n  /**\r\n   * The maximum single dose that can be administered as per the protocol of a clinical trial can be specified using a numerical value and its unit of measurement.\r\n   */\r\n  public maxSingleDose?: fhir.Quantity|undefined;\r\n  /**\r\n   * The maximum dose per day (maximum dose quantity to be administered in any one 24-h period) that can be administered as per the protocol referenced in the clinical trial authorisation.\r\n   */\r\n  public maxDosePerDay?: fhir.Quantity|undefined;\r\n  /**\r\n   * The maximum dose per treatment period that can be administered as per the protocol referenced in the clinical trial authorisation.\r\n   */\r\n  public maxDosePerTreatmentPeriod?: fhir.Ratio|undefined;\r\n  /**\r\n   * The maximum treatment period during which an Investigational Medicinal Product can be administered as per the protocol referenced in the clinical trial authorisation.\r\n   */\r\n  public maxTreatmentPeriod?: fhir.Duration|undefined;\r\n  /**\r\n   * A species for which this route applies.\r\n   */\r\n  public targetSpecies?: fhir.MedicinalProductPharmaceuticalRouteOfAdministrationTargetSpecies[];\r\n  /**\r\n   * Default constructor for MedicinalProductPharmaceuticalRouteOfAdministration - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<MedicinalProductPharmaceuticalRouteOfAdministrationArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    if (source['code']) { this.code = new fhir.CodeableConcept(source.code); }\r\n    else { this.code = null; }\r\n    if (source['firstDose']) { this.firstDose = new fhir.Quantity(source.firstDose); }\r\n    if (source['maxSingleDose']) { this.maxSingleDose = new fhir.Quantity(source.maxSingleDose); }\r\n    if (source['maxDosePerDay']) { this.maxDosePerDay = new fhir.Quantity(source.maxDosePerDay); }\r\n    if (source['maxDosePerTreatmentPeriod']) { this.maxDosePerTreatmentPeriod = new fhir.Ratio(source.maxDosePerTreatmentPeriod); }\r\n    if (source['maxTreatmentPeriod']) { this.maxTreatmentPeriod = new fhir.Duration(source.maxTreatmentPeriod); }\r\n    if (source['targetSpecies']) { this.targetSpecies = source.targetSpecies.map((x) => new fhir.MedicinalProductPharmaceuticalRouteOfAdministrationTargetSpecies(x)); }\r\n    else { this.targetSpecies = []; }\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (!this['code']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property code:fhir.CodeableConcept fhir: MedicinalProductPharmaceutical.routeOfAdministration.code:CodeableConcept', }));\r\n    }\r\n    if (this[\"code\"]) { outcome.issue!.push(...this.code.doModelValidation().issue!); }\r\n    if (this[\"firstDose\"]) { outcome.issue!.push(...this.firstDose.doModelValidation().issue!); }\r\n    if (this[\"maxSingleDose\"]) { outcome.issue!.push(...this.maxSingleDose.doModelValidation().issue!); }\r\n    if (this[\"maxDosePerDay\"]) { outcome.issue!.push(...this.maxDosePerDay.doModelValidation().issue!); }\r\n    if (this[\"maxDosePerTreatmentPeriod\"]) { outcome.issue!.push(...this.maxDosePerTreatmentPeriod.doModelValidation().issue!); }\r\n    if (this[\"maxTreatmentPeriod\"]) { outcome.issue!.push(...this.maxTreatmentPeriod.doModelValidation().issue!); }\r\n    if (this[\"targetSpecies\"]) { this.targetSpecies.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    return outcome;\r\n  }\r\n}\r\n/**\r\n * Valid arguments for the MedicinalProductPharmaceutical type.\r\n */\r\nexport interface MedicinalProductPharmaceuticalArgs extends fhir.DomainResourceArgs {\r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  resourceType: \"MedicinalProductPharmaceutical\"|undefined;\r\n  /**\r\n   * An identifier for the pharmaceutical medicinal product.\r\n   */\r\n  identifier?: fhir.IdentifierArgs[]|undefined;\r\n  /**\r\n   * The administrable dose form, after necessary reconstitution.\r\n   */\r\n  administrableDoseForm: fhir.CodeableConceptArgs|null;\r\n  /**\r\n   * Todo.\r\n   */\r\n  unitOfPresentation?: fhir.CodeableConceptArgs|undefined;\r\n  /**\r\n   * Ingredient.\r\n   */\r\n  ingredient?: fhir.ReferenceArgs[]|undefined;\r\n  /**\r\n   * Accompanying device.\r\n   */\r\n  device?: fhir.ReferenceArgs[]|undefined;\r\n  /**\r\n   * Characteristics e.g. a products onset of action.\r\n   */\r\n  characteristics?: fhir.MedicinalProductPharmaceuticalCharacteristicsArgs[]|undefined;\r\n  /**\r\n   * The path by which the pharmaceutical product is taken into or makes contact with the body.\r\n   */\r\n  routeOfAdministration: fhir.MedicinalProductPharmaceuticalRouteOfAdministrationArgs[]|null;\r\n}\r\n\r\n/**\r\n * A pharmaceutical product described in terms of its composition and dose form.\r\n */\r\nexport class MedicinalProductPharmaceutical extends fhir.DomainResource {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'MedicinalProductPharmaceutical';\r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  public resourceType: \"MedicinalProductPharmaceutical\";\r\n  /**\r\n   * An identifier for the pharmaceutical medicinal product.\r\n   */\r\n  public identifier?: fhir.Identifier[];\r\n  /**\r\n   * The administrable dose form, after necessary reconstitution.\r\n   */\r\n  public administrableDoseForm: fhir.CodeableConcept|null;\r\n  /**\r\n   * Todo.\r\n   */\r\n  public unitOfPresentation?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * Ingredient.\r\n   */\r\n  public ingredient?: fhir.Reference[];\r\n  /**\r\n   * Accompanying device.\r\n   */\r\n  public device?: fhir.Reference[];\r\n  /**\r\n   * Characteristics e.g. a products onset of action.\r\n   */\r\n  public characteristics?: fhir.MedicinalProductPharmaceuticalCharacteristics[];\r\n  /**\r\n   * The path by which the pharmaceutical product is taken into or makes contact with the body.\r\n   */\r\n  public routeOfAdministration: fhir.MedicinalProductPharmaceuticalRouteOfAdministration[];\r\n  /**\r\n   * Default constructor for MedicinalProductPharmaceutical - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<MedicinalProductPharmaceuticalArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    this.resourceType = 'MedicinalProductPharmaceutical';\r\n    if (source['identifier']) { this.identifier = source.identifier.map((x) => new fhir.Identifier(x)); }\r\n    else { this.identifier = []; }\r\n    if (source['administrableDoseForm']) { this.administrableDoseForm = new fhir.CodeableConcept(source.administrableDoseForm); }\r\n    else { this.administrableDoseForm = null; }\r\n    if (source['unitOfPresentation']) { this.unitOfPresentation = new fhir.CodeableConcept(source.unitOfPresentation); }\r\n    if (source['ingredient']) { this.ingredient = source.ingredient.map((x) => new fhir.Reference(x)); }\r\n    else { this.ingredient = []; }\r\n    if (source['device']) { this.device = source.device.map((x) => new fhir.Reference(x)); }\r\n    else { this.device = []; }\r\n    if (source['characteristics']) { this.characteristics = source.characteristics.map((x) => new fhir.MedicinalProductPharmaceuticalCharacteristics(x)); }\r\n    else { this.characteristics = []; }\r\n    if (source['routeOfAdministration']) { this.routeOfAdministration = source.routeOfAdministration.map((x) => new fhir.MedicinalProductPharmaceuticalRouteOfAdministration(x)); }\r\n    else { this.routeOfAdministration = []; }\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (!this['resourceType']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property resourceType:\"MedicinalProductPharmaceutical\" fhir: MedicinalProductPharmaceutical.resourceType:\"MedicinalProductPharmaceutical\"', }));\r\n    }\r\n    if (this[\"identifier\"]) { this.identifier.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (!this['administrableDoseForm']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property administrableDoseForm:fhir.CodeableConcept fhir: MedicinalProductPharmaceutical.administrableDoseForm:CodeableConcept', }));\r\n    }\r\n    if (this[\"administrableDoseForm\"]) { outcome.issue!.push(...this.administrableDoseForm.doModelValidation().issue!); }\r\n    if (this[\"unitOfPresentation\"]) { outcome.issue!.push(...this.unitOfPresentation.doModelValidation().issue!); }\r\n    if (this[\"ingredient\"]) { this.ingredient.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"device\"]) { this.device.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"characteristics\"]) { this.characteristics.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (!this['routeOfAdministration']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property routeOfAdministration:fhir.MedicinalProductPharmaceuticalRouteOfAdministration[] fhir: MedicinalProductPharmaceutical.routeOfAdministration:routeOfAdministration', }));\r\n    } else if (!Array.isArray(this.routeOfAdministration)) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.StructuralIssue,  diagnostics: 'Found scalar in array property routeOfAdministration:fhir.MedicinalProductPharmaceuticalRouteOfAdministration[] fhir: MedicinalProductPharmaceutical.routeOfAdministration:routeOfAdministration', }));\r\n    } else if (this.routeOfAdministration.length === 0) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property routeOfAdministration:fhir.MedicinalProductPharmaceuticalRouteOfAdministration[] fhir: MedicinalProductPharmaceutical.routeOfAdministration:routeOfAdministration', }));\r\n    }\r\n    if (this[\"routeOfAdministration\"]) { this.routeOfAdministration.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    return outcome;\r\n  }\r\n}\r\n"],"names":["fhir.CodeableConcept","fhir.OperationOutcomeIssue","fhir.BackboneElement","fhir.Quantity","fhir.FhirString","fhir.MedicinalProductPharmaceuticalRouteOfAdministrationTargetSpeciesWithdrawalPeriod","fhir.Ratio","fhir.Duration","fhir.MedicinalProductPharmaceuticalRouteOfAdministrationTargetSpecies","fhir.Identifier","fhir.Reference","fhir.MedicinalProductPharmaceuticalCharacteristics","fhir.MedicinalProductPharmaceuticalRouteOfAdministration","fhir.DomainResource"],"mappings":"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"}