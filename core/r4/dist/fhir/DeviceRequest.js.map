{"version":3,"file":"DeviceRequest.js","sources":["../../src/fhir/DeviceRequest.ts"],"sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4.core version: 4.0.1\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR Resource: DeviceRequest\r\n\r\nimport * as fhir from '../fhir.js';\r\n\r\n// @ts-ignore\r\nimport { RequestStatusCodings, RequestStatusCodingType,} from '../fhirValueSets/RequestStatusCodings.js';\r\n// @ts-ignore\r\nimport { RequestStatusCodes,  RequestStatusCodeType } from '../fhirValueSets/RequestStatusCodes.js';\r\n// @ts-ignore\r\nimport { RequestIntentCodings, RequestIntentCodingType,} from '../fhirValueSets/RequestIntentCodings.js';\r\n// @ts-ignore\r\nimport { RequestIntentCodes,  RequestIntentCodeType } from '../fhirValueSets/RequestIntentCodes.js';\r\n// @ts-ignore\r\nimport { RequestPriorityCodings, RequestPriorityCodingType,} from '../fhirValueSets/RequestPriorityCodings.js';\r\n// @ts-ignore\r\nimport { RequestPriorityCodes,  RequestPriorityCodeType } from '../fhirValueSets/RequestPriorityCodes.js';\r\n// @ts-ignore\r\nimport { ParticipantRoleCodings, ParticipantRoleCodingType,} from '../fhirValueSets/ParticipantRoleCodings.js';\r\n// @ts-ignore\r\nimport { ParticipantRoleCodes,  ParticipantRoleCodeType } from '../fhirValueSets/ParticipantRoleCodes.js';\r\n// @ts-ignore\r\nimport { ConditionCodeCodings, ConditionCodeCodingType,} from '../fhirValueSets/ConditionCodeCodings.js';\r\n// @ts-ignore\r\nimport { ConditionCodeCodes,  ConditionCodeCodeType } from '../fhirValueSets/ConditionCodeCodes.js';\r\n// @ts-ignore\r\nimport { IssueTypeCodes } from '../fhirValueSets/IssueTypeCodes.js';\r\n// @ts-ignore\r\nimport { IssueSeverityCodes } from '../fhirValueSets/IssueSeverityCodes.js';\r\n/**\r\n * Valid arguments for the DeviceRequestParameter type.\r\n */\r\nexport interface DeviceRequestParameterArgs extends fhir.BackboneElementArgs {\r\n  /**\r\n   * A code or string that identifies the device detail being asserted.\r\n   */\r\n  code?: fhir.CodeableConceptArgs|undefined;\r\n  /**\r\n   * Range means device should have a value that falls somewhere within the specified range.\r\n   */\r\n  value?: fhir.CodeableConcept|fhir.Quantity|fhir.Range|fhir.FhirBoolean|undefined;\r\n  /**\r\n   * Range means device should have a value that falls somewhere within the specified range.\r\n   */\r\n  valueCodeableConcept?: fhir.CodeableConceptArgs|undefined;\r\n  /**\r\n   * Range means device should have a value that falls somewhere within the specified range.\r\n   */\r\n  valueQuantity?: fhir.QuantityArgs|undefined;\r\n  /**\r\n   * Range means device should have a value that falls somewhere within the specified range.\r\n   */\r\n  valueRange?: fhir.RangeArgs|undefined;\r\n  /**\r\n   * Range means device should have a value that falls somewhere within the specified range.\r\n   */\r\n  valueBoolean?: fhir.FhirBoolean|boolean|undefined;\r\n}\r\n\r\n/**\r\n * Specific parameters for the ordered item.  For example, the prism value for lenses.\r\n */\r\nexport class DeviceRequestParameter extends fhir.BackboneElement {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'DeviceRequestParameter';\r\n  /**\r\n   * A code or string that identifies the device detail being asserted.\r\n   */\r\n  public code?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * Range means device should have a value that falls somewhere within the specified range.\r\n   */\r\n  public value?: (fhir.CodeableConcept|fhir.Quantity|fhir.Range|fhir.FhirBoolean)|undefined;\r\n  /**\r\n   * Internal flag to properly serialize choice-type element DeviceRequest.parameter.value[x]\r\n   */\r\n  protected static readonly _fts_valueIsChoice:true = true;\r\n  /**\r\n   * Default constructor for DeviceRequestParameter - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<DeviceRequestParameterArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    if (source['code']) { this.code = new fhir.CodeableConcept(source.code); }\r\n    if (source['value']) { this.value = source.value; }\r\n    else if (source['valueCodeableConcept']) { this.value = new fhir.CodeableConcept(source.valueCodeableConcept); }\r\n    else if (source['valueQuantity']) { this.value = new fhir.Quantity(source.valueQuantity); }\r\n    else if (source['valueRange']) { this.value = new fhir.Range(source.valueRange); }\r\n    else if (source['valueBoolean']) { this.value = new fhir.FhirBoolean({value: source.valueBoolean}); }\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (this[\"code\"]) { outcome.issue!.push(...this.code.doModelValidation().issue!); }\r\n    return outcome;\r\n  }\r\n}\r\n/**\r\n * Valid arguments for the DeviceRequest type.\r\n */\r\nexport interface DeviceRequestArgs extends fhir.DomainResourceArgs {\r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  resourceType: \"DeviceRequest\"|undefined;\r\n  /**\r\n   * Identifiers assigned to this order by the orderer or by the receiver.\r\n   */\r\n  identifier?: fhir.IdentifierArgs[]|undefined;\r\n  /**\r\n   * Note: This is a business identifier, not a resource identifier (see [discussion](resource.html#identifiers)).  It is best practice for the identifier to only appear on a single resource instance, however business practices may occasionally dictate that multiple resource instances with the same identifier can exist - possibly even with different resource types.  For example, multiple Patient and a Person resource instance might share the same social insurance number.\r\n   */\r\n  instantiatesCanonical?: fhir.FhirCanonical[]|string[]|undefined;\r\n  /**\r\n   * This might be an HTML page, PDF, etc. or could just be a non-resolvable URI identifier.\r\n   */\r\n  instantiatesUri?: fhir.FhirUri[]|string[]|undefined;\r\n  /**\r\n   * Plan/proposal/order fulfilled by this request.\r\n   */\r\n  basedOn?: fhir.ReferenceArgs[]|undefined;\r\n  /**\r\n   * The request takes the place of the referenced completed or terminated request(s).\r\n   */\r\n  priorRequest?: fhir.ReferenceArgs[]|undefined;\r\n  /**\r\n   * Composite request this is part of.\r\n   */\r\n  groupIdentifier?: fhir.IdentifierArgs|undefined;\r\n  /**\r\n   * This element is labeled as a modifier because the status contains the codes cancelled and entered-in-error that mark the request as not currently valid.\r\n   */\r\n  status?: RequestStatusCodeType|undefined;\r\n  /**\r\n   * Whether the request is a proposal, plan, an original order or a reflex order.\r\n   */\r\n  intent: RequestIntentCodeType|null;\r\n  /**\r\n   * Indicates how quickly the {{title}} should be addressed with respect to other requests.\r\n   */\r\n  priority?: RequestPriorityCodeType|undefined;\r\n  /**\r\n   * The details of the device to be used.\r\n   */\r\n  code?: fhir.Reference|fhir.CodeableConcept|undefined;\r\n  /**\r\n   * The details of the device to be used.\r\n   */\r\n  codeReference?: fhir.ReferenceArgs|undefined;\r\n  /**\r\n   * The details of the device to be used.\r\n   */\r\n  codeCodeableConcept?: fhir.CodeableConceptArgs|undefined;\r\n  /**\r\n   * Specific parameters for the ordered item.  For example, the prism value for lenses.\r\n   */\r\n  parameter?: fhir.DeviceRequestParameterArgs[]|undefined;\r\n  /**\r\n   * The patient who will use the device.\r\n   */\r\n  subject: fhir.ReferenceArgs|null;\r\n  /**\r\n   * An encounter that provides additional context in which this request is made.\r\n   */\r\n  encounter?: fhir.ReferenceArgs|undefined;\r\n  /**\r\n   * The timing schedule for the use of the device. The Schedule data type allows many different expressions, for example. \"Every 8 hours\"; \"Three times a day\"; \"1/2 an hour before breakfast for 10 days from 23-Dec 2011:\"; \"15 Oct 2013, 17 Oct 2013 and 1 Nov 2013\".\r\n   */\r\n  occurrence?: fhir.FhirDateTime|fhir.Period|fhir.Timing|undefined;\r\n  /**\r\n   * The timing schedule for the use of the device. The Schedule data type allows many different expressions, for example. \"Every 8 hours\"; \"Three times a day\"; \"1/2 an hour before breakfast for 10 days from 23-Dec 2011:\"; \"15 Oct 2013, 17 Oct 2013 and 1 Nov 2013\".\r\n   */\r\n  occurrenceDateTime?: fhir.FhirDateTime|string|undefined;\r\n  /**\r\n   * The timing schedule for the use of the device. The Schedule data type allows many different expressions, for example. \"Every 8 hours\"; \"Three times a day\"; \"1/2 an hour before breakfast for 10 days from 23-Dec 2011:\"; \"15 Oct 2013, 17 Oct 2013 and 1 Nov 2013\".\r\n   */\r\n  occurrencePeriod?: fhir.PeriodArgs|undefined;\r\n  /**\r\n   * The timing schedule for the use of the device. The Schedule data type allows many different expressions, for example. \"Every 8 hours\"; \"Three times a day\"; \"1/2 an hour before breakfast for 10 days from 23-Dec 2011:\"; \"15 Oct 2013, 17 Oct 2013 and 1 Nov 2013\".\r\n   */\r\n  occurrenceTiming?: fhir.TimingArgs|undefined;\r\n  /**\r\n   * When the request transitioned to being actionable.\r\n   */\r\n  authoredOn?: fhir.FhirDateTime|string|undefined;\r\n  /**\r\n   * The individual who initiated the request and has responsibility for its activation.\r\n   */\r\n  requester?: fhir.ReferenceArgs|undefined;\r\n  /**\r\n   * Desired type of performer for doing the diagnostic testing.\r\n   */\r\n  performerType?: fhir.CodeableConceptArgs|undefined;\r\n  /**\r\n   * The desired performer for doing the diagnostic testing.\r\n   */\r\n  performer?: fhir.ReferenceArgs|undefined;\r\n  /**\r\n   * Reason or justification for the use of this device.\r\n   */\r\n  reasonCode?: fhir.CodeableConceptArgs[]|undefined;\r\n  /**\r\n   * Reason or justification for the use of this device.\r\n   */\r\n  reasonReference?: fhir.ReferenceArgs[]|undefined;\r\n  /**\r\n   * Insurance plans, coverage extensions, pre-authorizations and/or pre-determinations that may be required for delivering the requested service.\r\n   */\r\n  insurance?: fhir.ReferenceArgs[]|undefined;\r\n  /**\r\n   * Additional clinical information about the patient that may influence the request fulfilment.  For example, this may include where on the subject's body the device will be used (i.e. the target site).\r\n   */\r\n  supportingInfo?: fhir.ReferenceArgs[]|undefined;\r\n  /**\r\n   * Details about this request that were not represented at all or sufficiently in one of the attributes provided in a class. These may include for example a comment, an instruction, or a note associated with the statement.\r\n   */\r\n  note?: fhir.AnnotationArgs[]|undefined;\r\n  /**\r\n   * This might not include provenances for all versions of the request - only those deemed \"relevant\" or important.\r\n   * This SHALL NOT include the Provenance associated with this current version of the resource.  (If that provenance is deemed to be a \"relevant\" change, it will need to be added as part of a later update.  Until then, it can be queried directly as the Provenance that points to this version using _revinclude\r\n   * All Provenances should have some historical version of this Request as their subject.\r\n   */\r\n  relevantHistory?: fhir.ReferenceArgs[]|undefined;\r\n}\r\n\r\n/**\r\n * Represents a request for a patient to employ a medical device. The device may be an implantable device, or an external assistive device, such as a walker.\r\n */\r\nexport class DeviceRequest extends fhir.DomainResource {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'DeviceRequest';\r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  public resourceType: \"DeviceRequest\";\r\n  /**\r\n   * Identifiers assigned to this order by the orderer or by the receiver.\r\n   */\r\n  public identifier?: fhir.Identifier[];\r\n  /**\r\n   * Note: This is a business identifier, not a resource identifier (see [discussion](resource.html#identifiers)).  It is best practice for the identifier to only appear on a single resource instance, however business practices may occasionally dictate that multiple resource instances with the same identifier can exist - possibly even with different resource types.  For example, multiple Patient and a Person resource instance might share the same social insurance number.\r\n   */\r\n  public instantiatesCanonical?: fhir.FhirCanonical[];\r\n  /**\r\n   * This might be an HTML page, PDF, etc. or could just be a non-resolvable URI identifier.\r\n   */\r\n  public instantiatesUri?: fhir.FhirUri[];\r\n  /**\r\n   * Plan/proposal/order fulfilled by this request.\r\n   */\r\n  public basedOn?: fhir.Reference[];\r\n  /**\r\n   * The request takes the place of the referenced completed or terminated request(s).\r\n   */\r\n  public priorRequest?: fhir.Reference[];\r\n  /**\r\n   * Composite request this is part of.\r\n   */\r\n  public groupIdentifier?: fhir.Identifier|undefined;\r\n  /**\r\n   * This element is labeled as a modifier because the status contains the codes cancelled and entered-in-error that mark the request as not currently valid.\r\n   */\r\n  public status?: RequestStatusCodeType|undefined;\r\n  /**\r\n   * Whether the request is a proposal, plan, an original order or a reflex order.\r\n   */\r\n  public intent: RequestIntentCodeType|null;\r\n  /**\r\n   * Indicates how quickly the {{title}} should be addressed with respect to other requests.\r\n   */\r\n  public priority?: RequestPriorityCodeType|undefined;\r\n  /**\r\n   * The details of the device to be used.\r\n   */\r\n  public code: (fhir.Reference|fhir.CodeableConcept)|null;\r\n  /**\r\n   * Internal flag to properly serialize choice-type element DeviceRequest.code[x]\r\n   */\r\n  protected static readonly _fts_codeIsChoice:true = true;\r\n  /**\r\n   * Specific parameters for the ordered item.  For example, the prism value for lenses.\r\n   */\r\n  public parameter?: fhir.DeviceRequestParameter[];\r\n  /**\r\n   * The patient who will use the device.\r\n   */\r\n  public subject: fhir.Reference|null;\r\n  /**\r\n   * An encounter that provides additional context in which this request is made.\r\n   */\r\n  public encounter?: fhir.Reference|undefined;\r\n  /**\r\n   * The timing schedule for the use of the device. The Schedule data type allows many different expressions, for example. \"Every 8 hours\"; \"Three times a day\"; \"1/2 an hour before breakfast for 10 days from 23-Dec 2011:\"; \"15 Oct 2013, 17 Oct 2013 and 1 Nov 2013\".\r\n   */\r\n  public occurrence?: (fhir.FhirDateTime|fhir.Period|fhir.Timing)|undefined;\r\n  /**\r\n   * Internal flag to properly serialize choice-type element DeviceRequest.occurrence[x]\r\n   */\r\n  protected static readonly _fts_occurrenceIsChoice:true = true;\r\n  /**\r\n   * When the request transitioned to being actionable.\r\n   */\r\n  public authoredOn?: fhir.FhirDateTime|undefined;\r\n  /**\r\n   * The individual who initiated the request and has responsibility for its activation.\r\n   */\r\n  public requester?: fhir.Reference|undefined;\r\n  /**\r\n   * Desired type of performer for doing the diagnostic testing.\r\n   */\r\n  public performerType?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * The desired performer for doing the diagnostic testing.\r\n   */\r\n  public performer?: fhir.Reference|undefined;\r\n  /**\r\n   * Reason or justification for the use of this device.\r\n   */\r\n  public reasonCode?: fhir.CodeableConcept[];\r\n  /**\r\n   * Reason or justification for the use of this device.\r\n   */\r\n  public reasonReference?: fhir.Reference[];\r\n  /**\r\n   * Insurance plans, coverage extensions, pre-authorizations and/or pre-determinations that may be required for delivering the requested service.\r\n   */\r\n  public insurance?: fhir.Reference[];\r\n  /**\r\n   * Additional clinical information about the patient that may influence the request fulfilment.  For example, this may include where on the subject's body the device will be used (i.e. the target site).\r\n   */\r\n  public supportingInfo?: fhir.Reference[];\r\n  /**\r\n   * Details about this request that were not represented at all or sufficiently in one of the attributes provided in a class. These may include for example a comment, an instruction, or a note associated with the statement.\r\n   */\r\n  public note?: fhir.Annotation[];\r\n  /**\r\n   * This might not include provenances for all versions of the request - only those deemed \"relevant\" or important.\r\n   * This SHALL NOT include the Provenance associated with this current version of the resource.  (If that provenance is deemed to be a \"relevant\" change, it will need to be added as part of a later update.  Until then, it can be queried directly as the Provenance that points to this version using _revinclude\r\n   * All Provenances should have some historical version of this Request as their subject.\r\n   */\r\n  public relevantHistory?: fhir.Reference[];\r\n  /**\r\n   * Default constructor for DeviceRequest - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<DeviceRequestArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    this.resourceType = 'DeviceRequest';\r\n    if (source['identifier']) { this.identifier = source.identifier.map((x) => new fhir.Identifier(x)); }\r\n    else { this.identifier = []; }\r\n    if (source['instantiatesCanonical']) { this.instantiatesCanonical = source.instantiatesCanonical.map((x) => new fhir.FhirCanonical({value: x})); }\r\n    else { this.instantiatesCanonical = []; }\r\n    if (source['instantiatesUri']) { this.instantiatesUri = source.instantiatesUri.map((x) => new fhir.FhirUri({value: x})); }\r\n    else { this.instantiatesUri = []; }\r\n    if (source['basedOn']) { this.basedOn = source.basedOn.map((x) => new fhir.Reference(x)); }\r\n    else { this.basedOn = []; }\r\n    if (source['priorRequest']) { this.priorRequest = source.priorRequest.map((x) => new fhir.Reference(x)); }\r\n    else { this.priorRequest = []; }\r\n    if (source['groupIdentifier']) { this.groupIdentifier = new fhir.Identifier(source.groupIdentifier); }\r\n    if (source['status']) { this.status = source.status; }\r\n    if (source['intent']) { this.intent = source.intent; }\r\n    else { this.intent = null; }\r\n    if (source['priority']) { this.priority = source.priority; }\r\n    if (source['code']) { this.code = source.code; }\r\n    else if (source['codeReference']) { this.code = new fhir.Reference(source.codeReference); }\r\n    else if (source['codeCodeableConcept']) { this.code = new fhir.CodeableConcept(source.codeCodeableConcept); }\r\n    else { this.code = null; }\r\n    if (source['parameter']) { this.parameter = source.parameter.map((x) => new fhir.DeviceRequestParameter(x)); }\r\n    else { this.parameter = []; }\r\n    if (source['subject']) { this.subject = new fhir.Reference(source.subject); }\r\n    else { this.subject = null; }\r\n    if (source['encounter']) { this.encounter = new fhir.Reference(source.encounter); }\r\n    if (source['occurrence']) { this.occurrence = source.occurrence; }\r\n    else if (source['occurrenceDateTime']) { this.occurrence = new fhir.FhirDateTime({value: source.occurrenceDateTime}); }\r\n    else if (source['occurrencePeriod']) { this.occurrence = new fhir.Period(source.occurrencePeriod); }\r\n    else if (source['occurrenceTiming']) { this.occurrence = new fhir.Timing(source.occurrenceTiming); }\r\n    if (source['authoredOn']) { this.authoredOn = new fhir.FhirDateTime({value: source.authoredOn}); }\r\n    if (source['requester']) { this.requester = new fhir.Reference(source.requester); }\r\n    if (source['performerType']) { this.performerType = new fhir.CodeableConcept(source.performerType); }\r\n    if (source['performer']) { this.performer = new fhir.Reference(source.performer); }\r\n    if (source['reasonCode']) { this.reasonCode = source.reasonCode.map((x) => new fhir.CodeableConcept(x)); }\r\n    else { this.reasonCode = []; }\r\n    if (source['reasonReference']) { this.reasonReference = source.reasonReference.map((x) => new fhir.Reference(x)); }\r\n    else { this.reasonReference = []; }\r\n    if (source['insurance']) { this.insurance = source.insurance.map((x) => new fhir.Reference(x)); }\r\n    else { this.insurance = []; }\r\n    if (source['supportingInfo']) { this.supportingInfo = source.supportingInfo.map((x) => new fhir.Reference(x)); }\r\n    else { this.supportingInfo = []; }\r\n    if (source['note']) { this.note = source.note.map((x) => new fhir.Annotation(x)); }\r\n    else { this.note = []; }\r\n    if (source['relevantHistory']) { this.relevantHistory = source.relevantHistory.map((x) => new fhir.Reference(x)); }\r\n    else { this.relevantHistory = []; }\r\n  }\r\n  /**\r\n   * Required-bound Value Set for status (DeviceRequest.status)\r\n   */\r\n  public static statusRequiredCoding():RequestStatusCodingType {\r\n    return RequestStatusCodings;\r\n  }\r\n  /**\r\n   * Required-bound Value Set for intent (DeviceRequest.intent)\r\n   */\r\n  public static intentRequiredCoding():RequestIntentCodingType {\r\n    return RequestIntentCodings;\r\n  }\r\n  /**\r\n   * Required-bound Value Set for priority (DeviceRequest.priority)\r\n   */\r\n  public static priorityRequiredCoding():RequestPriorityCodingType {\r\n    return RequestPriorityCodings;\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (!this['resourceType']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property resourceType:\"DeviceRequest\" fhir: DeviceRequest.resourceType:\"DeviceRequest\"', }));\r\n    }\r\n    if (this[\"identifier\"]) { this.identifier.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"instantiatesCanonical\"]) { this.instantiatesCanonical.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"instantiatesUri\"]) { this.instantiatesUri.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"basedOn\"]) { this.basedOn.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"priorRequest\"]) { this.priorRequest.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"groupIdentifier\"]) { outcome.issue!.push(...this.groupIdentifier.doModelValidation().issue!); }\r\n    if (!this['intent']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property intent:RequestIntentCodeType fhir: DeviceRequest.intent:code', }));\r\n    }\r\n    if (!this['code']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property code: fhir: DeviceRequest.code[x]:', }));\r\n    }\r\n    if (this[\"parameter\"]) { this.parameter.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (!this['subject']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property subject:fhir.Reference fhir: DeviceRequest.subject:Reference', }));\r\n    }\r\n    if (this[\"subject\"]) { outcome.issue!.push(...this.subject.doModelValidation().issue!); }\r\n    if (this[\"encounter\"]) { outcome.issue!.push(...this.encounter.doModelValidation().issue!); }\r\n    if (this[\"authoredOn\"]) { outcome.issue!.push(...this.authoredOn.doModelValidation().issue!); }\r\n    if (this[\"requester\"]) { outcome.issue!.push(...this.requester.doModelValidation().issue!); }\r\n    if (this[\"performerType\"]) { outcome.issue!.push(...this.performerType.doModelValidation().issue!); }\r\n    if (this[\"performer\"]) { outcome.issue!.push(...this.performer.doModelValidation().issue!); }\r\n    if (this[\"reasonCode\"]) { this.reasonCode.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"reasonReference\"]) { this.reasonReference.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"insurance\"]) { this.insurance.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"supportingInfo\"]) { this.supportingInfo.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"note\"]) { this.note.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"relevantHistory\"]) { this.relevantHistory.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    return outcome;\r\n  }\r\n}\r\n"],"names":["fhir.CodeableConcept","fhir.Quantity","fhir.Range","fhir.FhirBoolean","fhir.BackboneElement","fhir.Identifier","fhir.FhirCanonical","fhir.FhirUri","fhir.Reference","fhir.DeviceRequestParameter","fhir.FhirDateTime","fhir.Period","fhir.Timing","fhir.Annotation","fhir.OperationOutcomeIssue","fhir.DomainResource"],"mappings":"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"}