{"version":3,"file":"Parameters.js","sources":["../../src/fhir/Parameters.ts"],"sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4.core version: 4.0.1\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR Resource: Parameters\r\n\r\nimport * as fhir from '../fhir.js';\r\n\r\n// @ts-ignore\r\nimport { IssueTypeCodes } from '../fhirValueSets/IssueTypeCodes.js';\r\n// @ts-ignore\r\nimport { IssueSeverityCodes } from '../fhirValueSets/IssueSeverityCodes.js';\r\n/**\r\n * Valid arguments for the ParametersParameter type.\r\n */\r\nexport interface ParametersParameterArgs extends fhir.BackboneElementArgs {\r\n  /**\r\n   * The name of the parameter (reference to the operation definition).\r\n   */\r\n  name: fhir.FhirString|string|undefined;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  value?: fhir.FhirBase64Binary|fhir.FhirBoolean|fhir.FhirCanonical|fhir.FhirCode|fhir.FhirDate|fhir.FhirDateTime|fhir.FhirDecimal|fhir.FhirId|fhir.FhirInstant|fhir.FhirInteger|fhir.FhirMarkdown|fhir.FhirOid|fhir.FhirPositiveInt|fhir.FhirString|fhir.FhirTime|fhir.FhirUnsignedInt|fhir.FhirUri|fhir.FhirUrl|fhir.FhirUuid|fhir.Address|fhir.Age|fhir.Annotation|fhir.Attachment|fhir.CodeableConcept|fhir.Coding|fhir.ContactPoint|fhir.Count|fhir.Distance|fhir.Duration|fhir.HumanName|fhir.Identifier|fhir.Money|fhir.Period|fhir.Quantity|fhir.Range|fhir.Ratio|fhir.Reference|fhir.SampledData|fhir.Signature|fhir.Timing|fhir.ContactDetail|fhir.Contributor|fhir.DataRequirement|fhir.Expression|fhir.ParameterDefinition|fhir.RelatedArtifact|fhir.TriggerDefinition|fhir.UsageContext|fhir.Dosage|fhir.Meta|undefined;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  valueBase64Binary?: fhir.FhirBase64Binary|string|undefined;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  valueBoolean?: fhir.FhirBoolean|boolean|undefined;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  valueCanonical?: fhir.FhirCanonical|string|undefined;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  valueCode?: fhir.FhirCode|string|undefined;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  valueDate?: fhir.FhirDate|string|undefined;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  valueDateTime?: fhir.FhirDateTime|string|undefined;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  valueDecimal?: fhir.FhirDecimal|number|undefined;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  valueId?: fhir.FhirId|string|undefined;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  valueInstant?: fhir.FhirInstant|string|undefined;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  valueInteger?: fhir.FhirInteger|number|undefined;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  valueMarkdown?: fhir.FhirMarkdown|string|undefined;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  valueOid?: fhir.FhirOid|string|undefined;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  valuePositiveInt?: fhir.FhirPositiveInt|number|undefined;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  valueString?: fhir.FhirString|string|undefined;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  valueTime?: fhir.FhirTime|string|undefined;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  valueUnsignedInt?: fhir.FhirUnsignedInt|number|undefined;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  valueUri?: fhir.FhirUri|string|undefined;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  valueUrl?: fhir.FhirUrl|string|undefined;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  valueUuid?: fhir.FhirUuid|string|undefined;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  valueAddress?: fhir.AddressArgs|undefined;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  valueAge?: fhir.AgeArgs|undefined;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  valueAnnotation?: fhir.AnnotationArgs|undefined;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  valueAttachment?: fhir.AttachmentArgs|undefined;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  valueCodeableConcept?: fhir.CodeableConceptArgs|undefined;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  valueCoding?: fhir.CodingArgs|undefined;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  valueContactPoint?: fhir.ContactPointArgs|undefined;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  valueCount?: fhir.CountArgs|undefined;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  valueDistance?: fhir.DistanceArgs|undefined;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  valueDuration?: fhir.DurationArgs|undefined;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  valueHumanName?: fhir.HumanNameArgs|undefined;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  valueIdentifier?: fhir.IdentifierArgs|undefined;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  valueMoney?: fhir.MoneyArgs|undefined;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  valuePeriod?: fhir.PeriodArgs|undefined;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  valueQuantity?: fhir.QuantityArgs|undefined;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  valueRange?: fhir.RangeArgs|undefined;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  valueRatio?: fhir.RatioArgs|undefined;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  valueReference?: fhir.ReferenceArgs|undefined;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  valueSampledData?: fhir.SampledDataArgs|undefined;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  valueSignature?: fhir.SignatureArgs|undefined;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  valueTiming?: fhir.TimingArgs|undefined;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  valueContactDetail?: fhir.ContactDetailArgs|undefined;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  valueContributor?: fhir.ContributorArgs|undefined;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  valueDataRequirement?: fhir.DataRequirementArgs|undefined;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  valueExpression?: fhir.ExpressionArgs|undefined;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  valueParameterDefinition?: fhir.ParameterDefinitionArgs|undefined;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  valueRelatedArtifact?: fhir.RelatedArtifactArgs|undefined;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  valueTriggerDefinition?: fhir.TriggerDefinitionArgs|undefined;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  valueUsageContext?: fhir.UsageContextArgs|undefined;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  valueDosage?: fhir.DosageArgs|undefined;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  valueMeta?: fhir.MetaArgs|undefined;\r\n  /**\r\n   * When resolving references in resources, the operation definition may specify how references may be resolved between parameters. If a reference cannot be resolved between the parameters, the application should fall back to it's general resource resolution methods.\r\n   */\r\n  resource?: fhir.ResourceArgs|any|undefined;\r\n  /**\r\n   * Only one level of nested parameters is allowed.\r\n   */\r\n  part?: fhir.ParametersParameterArgs[]|undefined;\r\n}\r\n\r\n/**\r\n * A parameter passed to or received from the operation.\r\n */\r\nexport class ParametersParameter extends fhir.BackboneElement {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'ParametersParameter';\r\n  /**\r\n   * The name of the parameter (reference to the operation definition).\r\n   */\r\n  public name: fhir.FhirString|null;\r\n  /**\r\n   * If the parameter is a data type.\r\n   */\r\n  public value?: (fhir.FhirBase64Binary|fhir.FhirBoolean|fhir.FhirCanonical|fhir.FhirCode|fhir.FhirDate|fhir.FhirDateTime|fhir.FhirDecimal|fhir.FhirId|fhir.FhirInstant|fhir.FhirInteger|fhir.FhirMarkdown|fhir.FhirOid|fhir.FhirPositiveInt|fhir.FhirString|fhir.FhirTime|fhir.FhirUnsignedInt|fhir.FhirUri|fhir.FhirUrl|fhir.FhirUuid|fhir.Address|fhir.Age|fhir.Annotation|fhir.Attachment|fhir.CodeableConcept|fhir.Coding|fhir.ContactPoint|fhir.Count|fhir.Distance|fhir.Duration|fhir.HumanName|fhir.Identifier|fhir.Money|fhir.Period|fhir.Quantity|fhir.Range|fhir.Ratio|fhir.Reference|fhir.SampledData|fhir.Signature|fhir.Timing|fhir.ContactDetail|fhir.Contributor|fhir.DataRequirement|fhir.Expression|fhir.ParameterDefinition|fhir.RelatedArtifact|fhir.TriggerDefinition|fhir.UsageContext|fhir.Dosage|fhir.Meta)|undefined;\r\n  /**\r\n   * Internal flag to properly serialize choice-type element Parameters.parameter.value[x]\r\n   */\r\n  protected static readonly _fts_valueIsChoice:true = true;\r\n  /**\r\n   * When resolving references in resources, the operation definition may specify how references may be resolved between parameters. If a reference cannot be resolved between the parameters, the application should fall back to it's general resource resolution methods.\r\n   */\r\n  public resource?: fhir.FhirResource|undefined;\r\n  /**\r\n   * Only one level of nested parameters is allowed.\r\n   */\r\n  public part?: fhir.ParametersParameter[];\r\n  /**\r\n   * Default constructor for ParametersParameter - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<ParametersParameterArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    if (source['name']) { this.name = new fhir.FhirString({value: source.name}); }\r\n    else { this.name = null; }\r\n    if (source['value']) { this.value = source.value; }\r\n    else if (source['valueBase64Binary']) { this.value = new fhir.FhirBase64Binary({value: source.valueBase64Binary}); }\r\n    else if (source['valueBoolean']) { this.value = new fhir.FhirBoolean({value: source.valueBoolean}); }\r\n    else if (source['valueCanonical']) { this.value = new fhir.FhirCanonical({value: source.valueCanonical}); }\r\n    else if (source['valueCode']) { this.value = new fhir.FhirCode({value: source.valueCode}); }\r\n    else if (source['valueDate']) { this.value = new fhir.FhirDate({value: source.valueDate}); }\r\n    else if (source['valueDateTime']) { this.value = new fhir.FhirDateTime({value: source.valueDateTime}); }\r\n    else if (source['valueDecimal']) { this.value = new fhir.FhirDecimal({value: source.valueDecimal}); }\r\n    else if (source['valueId']) { this.value = new fhir.FhirId({value: source.valueId}); }\r\n    else if (source['valueInstant']) { this.value = new fhir.FhirInstant({value: source.valueInstant}); }\r\n    else if (source['valueInteger']) { this.value = new fhir.FhirInteger({value: source.valueInteger}); }\r\n    else if (source['valueMarkdown']) { this.value = new fhir.FhirMarkdown({value: source.valueMarkdown}); }\r\n    else if (source['valueOid']) { this.value = new fhir.FhirOid({value: source.valueOid}); }\r\n    else if (source['valuePositiveInt']) { this.value = new fhir.FhirPositiveInt({value: source.valuePositiveInt}); }\r\n    else if (source['valueString']) { this.value = new fhir.FhirString({value: source.valueString}); }\r\n    else if (source['valueTime']) { this.value = new fhir.FhirTime({value: source.valueTime}); }\r\n    else if (source['valueUnsignedInt']) { this.value = new fhir.FhirUnsignedInt({value: source.valueUnsignedInt}); }\r\n    else if (source['valueUri']) { this.value = new fhir.FhirUri({value: source.valueUri}); }\r\n    else if (source['valueUrl']) { this.value = new fhir.FhirUrl({value: source.valueUrl}); }\r\n    else if (source['valueUuid']) { this.value = new fhir.FhirUuid({value: source.valueUuid}); }\r\n    else if (source['valueAddress']) { this.value = new fhir.Address(source.valueAddress); }\r\n    else if (source['valueAge']) { this.value = new fhir.Age(source.valueAge); }\r\n    else if (source['valueAnnotation']) { this.value = new fhir.Annotation(source.valueAnnotation); }\r\n    else if (source['valueAttachment']) { this.value = new fhir.Attachment(source.valueAttachment); }\r\n    else if (source['valueCodeableConcept']) { this.value = new fhir.CodeableConcept(source.valueCodeableConcept); }\r\n    else if (source['valueCoding']) { this.value = new fhir.Coding(source.valueCoding); }\r\n    else if (source['valueContactPoint']) { this.value = new fhir.ContactPoint(source.valueContactPoint); }\r\n    else if (source['valueCount']) { this.value = new fhir.Count(source.valueCount); }\r\n    else if (source['valueDistance']) { this.value = new fhir.Distance(source.valueDistance); }\r\n    else if (source['valueDuration']) { this.value = new fhir.Duration(source.valueDuration); }\r\n    else if (source['valueHumanName']) { this.value = new fhir.HumanName(source.valueHumanName); }\r\n    else if (source['valueIdentifier']) { this.value = new fhir.Identifier(source.valueIdentifier); }\r\n    else if (source['valueMoney']) { this.value = new fhir.Money(source.valueMoney); }\r\n    else if (source['valuePeriod']) { this.value = new fhir.Period(source.valuePeriod); }\r\n    else if (source['valueQuantity']) { this.value = new fhir.Quantity(source.valueQuantity); }\r\n    else if (source['valueRange']) { this.value = new fhir.Range(source.valueRange); }\r\n    else if (source['valueRatio']) { this.value = new fhir.Ratio(source.valueRatio); }\r\n    else if (source['valueReference']) { this.value = new fhir.Reference(source.valueReference); }\r\n    else if (source['valueSampledData']) { this.value = new fhir.SampledData(source.valueSampledData); }\r\n    else if (source['valueSignature']) { this.value = new fhir.Signature(source.valueSignature); }\r\n    else if (source['valueTiming']) { this.value = new fhir.Timing(source.valueTiming); }\r\n    else if (source['valueContactDetail']) { this.value = new fhir.ContactDetail(source.valueContactDetail); }\r\n    else if (source['valueContributor']) { this.value = new fhir.Contributor(source.valueContributor); }\r\n    else if (source['valueDataRequirement']) { this.value = new fhir.DataRequirement(source.valueDataRequirement); }\r\n    else if (source['valueExpression']) { this.value = new fhir.Expression(source.valueExpression); }\r\n    else if (source['valueParameterDefinition']) { this.value = new fhir.ParameterDefinition(source.valueParameterDefinition); }\r\n    else if (source['valueRelatedArtifact']) { this.value = new fhir.RelatedArtifact(source.valueRelatedArtifact); }\r\n    else if (source['valueTriggerDefinition']) { this.value = new fhir.TriggerDefinition(source.valueTriggerDefinition); }\r\n    else if (source['valueUsageContext']) { this.value = new fhir.UsageContext(source.valueUsageContext); }\r\n    else if (source['valueDosage']) { this.value = new fhir.Dosage(source.valueDosage); }\r\n    else if (source['valueMeta']) { this.value = new fhir.Meta(source.valueMeta); }\r\n    if (source['resource']) { this.resource = (fhir.resourceFactory(source.resource) ?? undefined); }\r\n    if (source['part']) { this.part = source.part.map((x) => new fhir.ParametersParameter(x)); }\r\n    else { this.part = []; }\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (!this['name']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property name:fhir.FhirString fhir: Parameters.parameter.name:string', }));\r\n    }\r\n    if (this[\"name\"]) { outcome.issue!.push(...this.name.doModelValidation().issue!); }\r\n    if (this[\"resource\"]) { outcome.issue!.push(...this.resource.doModelValidation().issue!); }\r\n    if (this[\"part\"]) { this.part.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    return outcome;\r\n  }\r\n}\r\n/**\r\n * Valid arguments for the Parameters type.\r\n */\r\nexport interface ParametersArgs extends fhir.ResourceArgs {\r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  resourceType: \"Parameters\"|undefined;\r\n  /**\r\n   * A parameter passed to or received from the operation.\r\n   */\r\n  parameter?: fhir.ParametersParameterArgs[]|undefined;\r\n}\r\n\r\n/**\r\n * This resource is a non-persisted resource used to pass information into and back from an [operation](operations.html). It has no other use, and there is no RESTful endpoint associated with it.\r\n */\r\nexport class Parameters extends fhir.Resource {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'Parameters';\r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  public resourceType: \"Parameters\";\r\n  /**\r\n   * A parameter passed to or received from the operation.\r\n   */\r\n  public parameter?: fhir.ParametersParameter[];\r\n  /**\r\n   * Default constructor for Parameters - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<ParametersArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    this.resourceType = 'Parameters';\r\n    if (source['parameter']) { this.parameter = source.parameter.map((x) => new fhir.ParametersParameter(x)); }\r\n    else { this.parameter = []; }\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (!this['resourceType']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property resourceType:\"Parameters\" fhir: Parameters.resourceType:\"Parameters\"', }));\r\n    }\r\n    if (this[\"parameter\"]) { this.parameter.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    return outcome;\r\n  }\r\n}\r\n"],"names":["ParametersParameter","fhir.FhirString","fhir.FhirBase64Binary","fhir.FhirBoolean","fhir.FhirCanonical","fhir.FhirCode","fhir.FhirDate","fhir.FhirDateTime","fhir.FhirDecimal","fhir.FhirId","fhir.FhirInstant","fhir.FhirInteger","fhir.FhirMarkdown","fhir.FhirOid","fhir.FhirPositiveInt","fhir.FhirTime","fhir.FhirUnsignedInt","fhir.FhirUri","fhir.FhirUrl","fhir.FhirUuid","fhir.Address","fhir.Age","fhir.Annotation","fhir.Attachment","fhir.CodeableConcept","fhir.Coding","fhir.ContactPoint","fhir.Count","fhir.Distance","fhir.Duration","fhir.HumanName","fhir.Identifier","fhir.Money","fhir.Period","fhir.Quantity","fhir.Range","fhir.Ratio","fhir.Reference","fhir.SampledData","fhir.Signature","fhir.Timing","fhir.ContactDetail","fhir.Contributor","fhir.DataRequirement","fhir.Expression","fhir.ParameterDefinition","fhir.RelatedArtifact","fhir.TriggerDefinition","fhir.UsageContext","fhir.Dosage","fhir.Meta","fhir.resourceFactory","fhir.ParametersParameter","fhir.OperationOutcomeIssue","fhir.BackboneElement","fhir.Resource"],"mappings":"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"}