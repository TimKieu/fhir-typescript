/*! @fhir-typescript/r4-core v0.0.11-beta.2 2022-05-18 */
'use strict';
import { __extends } from '../_virtual/_tslib.js';
import { FhirElement } from './FhirElement.js';
import { FhirDateTime } from './FhirDateTime.js';

// <auto-generated/>
/**
 * A time period defined by a start and end date and optionally time.
 */
var Period = /** @class */ (function (_super) {
    __extends(Period, _super);
    /**
     * Default constructor for Period - initializes any required elements to null if a value is not provided.
     */
    function Period(source, options) {
        if (source === void 0) { source = {}; }
        if (options === void 0) { options = {}; }
        var _this = _super.call(this, source, options) || this;
        if (source['start']) {
            _this.start = new FhirDateTime({ value: source.start });
        }
        if (source['end']) {
            _this.end = new FhirDateTime({ value: source.end });
        }
        return _this;
    }
    /**
     * Function to perform basic model validation (e.g., check if required elements are present).
     */
    Period.prototype.doModelValidation = function () {
        var _a, _b;
        var outcome = _super.prototype.doModelValidation.call(this);
        if (this["start"]) {
            (_a = outcome.issue).push.apply(_a, this.start.doModelValidation().issue);
        }
        if (this["end"]) {
            (_b = outcome.issue).push.apply(_b, this.end.doModelValidation().issue);
        }
        return outcome;
    };
    /**
     * Mapping of this datatype to a FHIR equivalent
     */
    Period._fts_dataType = 'Period';
    return Period;
}(FhirElement));

export { Period };
//# sourceMappingURL=Period.js.map
