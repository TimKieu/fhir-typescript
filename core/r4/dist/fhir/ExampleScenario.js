/*! @fhir-typescript/r4-core v0.0.11-beta.2 2022-05-18 */
'use strict';
import { __extends } from '../_virtual/_tslib.js';
import { ExamplescenarioActorTypeCodings } from '../fhirValueSets/ExamplescenarioActorTypeCodings.js';
import { ResourceTypesCodings } from '../fhirValueSets/ResourceTypesCodings.js';
import { PublicationStatusCodings } from '../fhirValueSets/PublicationStatusCodings.js';
import { IssueTypeCodes } from '../fhirValueSets/IssueTypeCodes.js';
import { IssueSeverityCodes } from '../fhirValueSets/IssueSeverityCodes.js';
import { OperationOutcomeIssue } from './OperationOutcome.js';
import { BackboneElement } from './BackboneElement.js';
import { DomainResource } from './DomainResource.js';
import { FhirString } from './FhirString.js';
import { FhirMarkdown } from './FhirMarkdown.js';
import { FhirCode } from './FhirCode.js';
import { FhirBoolean } from './FhirBoolean.js';
import { FhirUri } from './FhirUri.js';
import { Identifier } from './Identifier.js';
import { FhirDateTime } from './FhirDateTime.js';
import { ContactDetail } from './ContactDetail.js';
import { UsageContext } from './UsageContext.js';
import { CodeableConcept } from './CodeableConcept.js';
import { FhirCanonical } from './FhirCanonical.js';

// <auto-generated/>
/**
 * Actor participating in the resource.
 */
var ExampleScenarioActor = /** @class */ (function (_super) {
    __extends(ExampleScenarioActor, _super);
    /**
     * Default constructor for ExampleScenarioActor - initializes any required elements to null if a value is not provided.
     */
    function ExampleScenarioActor(source, options) {
        if (source === void 0) { source = {}; }
        if (options === void 0) { options = {}; }
        var _this = _super.call(this, source, options) || this;
        if (source['actorId']) {
            _this.actorId = new FhirString({ value: source.actorId });
        }
        else {
            _this.actorId = null;
        }
        if (source['type']) {
            _this.type = source.type;
        }
        else {
            _this.type = null;
        }
        if (source['name']) {
            _this.name = new FhirString({ value: source.name });
        }
        if (source['description']) {
            _this.description = new FhirMarkdown({ value: source.description });
        }
        return _this;
    }
    /**
     * Required-bound Value Set for type (ExampleScenario.actor.type)
     */
    ExampleScenarioActor.typeRequiredCoding = function () {
        return ExamplescenarioActorTypeCodings;
    };
    /**
     * Function to perform basic model validation (e.g., check if required elements are present).
     */
    ExampleScenarioActor.prototype.doModelValidation = function () {
        var _a, _b, _c;
        var outcome = _super.prototype.doModelValidation.call(this);
        if (!this['actorId']) {
            outcome.issue.push(new OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing, diagnostics: 'Missing required property actorId:fhir.FhirString fhir: ExampleScenario.actor.actorId:string', }));
        }
        if (this["actorId"]) {
            (_a = outcome.issue).push.apply(_a, this.actorId.doModelValidation().issue);
        }
        if (!this['type']) {
            outcome.issue.push(new OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing, diagnostics: 'Missing required property type:ExamplescenarioActorTypeCodeType fhir: ExampleScenario.actor.type:code', }));
        }
        if (this["name"]) {
            (_b = outcome.issue).push.apply(_b, this.name.doModelValidation().issue);
        }
        if (this["description"]) {
            (_c = outcome.issue).push.apply(_c, this.description.doModelValidation().issue);
        }
        return outcome;
    };
    /**
     * Mapping of this datatype to a FHIR equivalent
     */
    ExampleScenarioActor._fts_dataType = 'ExampleScenarioActor';
    return ExampleScenarioActor;
}(BackboneElement));
/**
 * A specific version of the resource.
 */
var ExampleScenarioInstanceVersion = /** @class */ (function (_super) {
    __extends(ExampleScenarioInstanceVersion, _super);
    /**
     * Default constructor for ExampleScenarioInstanceVersion - initializes any required elements to null if a value is not provided.
     */
    function ExampleScenarioInstanceVersion(source, options) {
        if (source === void 0) { source = {}; }
        if (options === void 0) { options = {}; }
        var _this = _super.call(this, source, options) || this;
        if (source['versionId']) {
            _this.versionId = new FhirString({ value: source.versionId });
        }
        else {
            _this.versionId = null;
        }
        if (source['description']) {
            _this.description = new FhirMarkdown({ value: source.description });
        }
        else {
            _this.description = null;
        }
        return _this;
    }
    /**
     * Function to perform basic model validation (e.g., check if required elements are present).
     */
    ExampleScenarioInstanceVersion.prototype.doModelValidation = function () {
        var _a, _b;
        var outcome = _super.prototype.doModelValidation.call(this);
        if (!this['versionId']) {
            outcome.issue.push(new OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing, diagnostics: 'Missing required property versionId:fhir.FhirString fhir: ExampleScenario.instance.version.versionId:string', }));
        }
        if (this["versionId"]) {
            (_a = outcome.issue).push.apply(_a, this.versionId.doModelValidation().issue);
        }
        if (!this['description']) {
            outcome.issue.push(new OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing, diagnostics: 'Missing required property description:fhir.FhirMarkdown fhir: ExampleScenario.instance.version.description:markdown', }));
        }
        if (this["description"]) {
            (_b = outcome.issue).push.apply(_b, this.description.doModelValidation().issue);
        }
        return outcome;
    };
    /**
     * Mapping of this datatype to a FHIR equivalent
     */
    ExampleScenarioInstanceVersion._fts_dataType = 'ExampleScenarioInstanceVersion';
    return ExampleScenarioInstanceVersion;
}(BackboneElement));
/**
 * Resources contained in the instance (e.g. the observations contained in a bundle).
 */
var ExampleScenarioInstanceContainedInstance = /** @class */ (function (_super) {
    __extends(ExampleScenarioInstanceContainedInstance, _super);
    /**
     * Default constructor for ExampleScenarioInstanceContainedInstance - initializes any required elements to null if a value is not provided.
     */
    function ExampleScenarioInstanceContainedInstance(source, options) {
        if (source === void 0) { source = {}; }
        if (options === void 0) { options = {}; }
        var _this = _super.call(this, source, options) || this;
        if (source['resourceId']) {
            _this.resourceId = new FhirString({ value: source.resourceId });
        }
        else {
            _this.resourceId = null;
        }
        if (source['versionId']) {
            _this.versionId = new FhirString({ value: source.versionId });
        }
        return _this;
    }
    /**
     * Function to perform basic model validation (e.g., check if required elements are present).
     */
    ExampleScenarioInstanceContainedInstance.prototype.doModelValidation = function () {
        var _a, _b;
        var outcome = _super.prototype.doModelValidation.call(this);
        if (!this['resourceId']) {
            outcome.issue.push(new OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing, diagnostics: 'Missing required property resourceId:fhir.FhirString fhir: ExampleScenario.instance.containedInstance.resourceId:string', }));
        }
        if (this["resourceId"]) {
            (_a = outcome.issue).push.apply(_a, this.resourceId.doModelValidation().issue);
        }
        if (this["versionId"]) {
            (_b = outcome.issue).push.apply(_b, this.versionId.doModelValidation().issue);
        }
        return outcome;
    };
    /**
     * Mapping of this datatype to a FHIR equivalent
     */
    ExampleScenarioInstanceContainedInstance._fts_dataType = 'ExampleScenarioInstanceContainedInstance';
    return ExampleScenarioInstanceContainedInstance;
}(BackboneElement));
/**
 * Each resource and each version that is present in the workflow.
 */
var ExampleScenarioInstance = /** @class */ (function (_super) {
    __extends(ExampleScenarioInstance, _super);
    /**
     * Default constructor for ExampleScenarioInstance - initializes any required elements to null if a value is not provided.
     */
    function ExampleScenarioInstance(source, options) {
        if (source === void 0) { source = {}; }
        if (options === void 0) { options = {}; }
        var _this = _super.call(this, source, options) || this;
        if (source['resourceId']) {
            _this.resourceId = new FhirString({ value: source.resourceId });
        }
        else {
            _this.resourceId = null;
        }
        if (source['resourceType']) {
            _this.resourceType = new FhirCode({ value: source.resourceType });
        }
        else {
            _this.resourceType = null;
        }
        if (source['name']) {
            _this.name = new FhirString({ value: source.name });
        }
        if (source['description']) {
            _this.description = new FhirMarkdown({ value: source.description });
        }
        if (source['version']) {
            _this.version = source.version.map(function (x) { return new ExampleScenarioInstanceVersion(x); });
        }
        else {
            _this.version = [];
        }
        if (source['containedInstance']) {
            _this.containedInstance = source.containedInstance.map(function (x) { return new ExampleScenarioInstanceContainedInstance(x); });
        }
        else {
            _this.containedInstance = [];
        }
        return _this;
    }
    /**
     * Required-bound Value Set for resourceType (ExampleScenario.instance.resourceType)
     */
    ExampleScenarioInstance.resourceTypeRequiredCoding = function () {
        return ResourceTypesCodings;
    };
    /**
     * Function to perform basic model validation (e.g., check if required elements are present).
     */
    ExampleScenarioInstance.prototype.doModelValidation = function () {
        var _a, _b, _c, _d;
        var outcome = _super.prototype.doModelValidation.call(this);
        if (!this['resourceId']) {
            outcome.issue.push(new OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing, diagnostics: 'Missing required property resourceId:fhir.FhirString fhir: ExampleScenario.instance.resourceId:string', }));
        }
        if (this["resourceId"]) {
            (_a = outcome.issue).push.apply(_a, this.resourceId.doModelValidation().issue);
        }
        if (!this['resourceType']) {
            outcome.issue.push(new OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing, diagnostics: 'Missing required property resourceType:fhir.FhirCode fhir: ExampleScenario.instance.resourceType:code', }));
        }
        if (this["resourceType"]) {
            (_b = outcome.issue).push.apply(_b, this.resourceType.doModelValidation().issue);
        }
        if (this["name"]) {
            (_c = outcome.issue).push.apply(_c, this.name.doModelValidation().issue);
        }
        if (this["description"]) {
            (_d = outcome.issue).push.apply(_d, this.description.doModelValidation().issue);
        }
        if (this["version"]) {
            this.version.forEach(function (x) {
                var _a;
                (_a = outcome.issue).push.apply(_a, x.doModelValidation().issue);
            });
        }
        if (this["containedInstance"]) {
            this.containedInstance.forEach(function (x) {
                var _a;
                (_a = outcome.issue).push.apply(_a, x.doModelValidation().issue);
            });
        }
        return outcome;
    };
    /**
     * Mapping of this datatype to a FHIR equivalent
     */
    ExampleScenarioInstance._fts_dataType = 'ExampleScenarioInstance';
    return ExampleScenarioInstance;
}(BackboneElement));
/**
 * Each interaction or action.
 */
var ExampleScenarioProcessStepOperation = /** @class */ (function (_super) {
    __extends(ExampleScenarioProcessStepOperation, _super);
    /**
     * Default constructor for ExampleScenarioProcessStepOperation - initializes any required elements to null if a value is not provided.
     */
    function ExampleScenarioProcessStepOperation(source, options) {
        if (source === void 0) { source = {}; }
        if (options === void 0) { options = {}; }
        var _this = _super.call(this, source, options) || this;
        if (source['number']) {
            _this.number = new FhirString({ value: source.number });
        }
        else {
            _this.number = null;
        }
        if (source['type']) {
            _this.type = new FhirString({ value: source.type });
        }
        if (source['name']) {
            _this.name = new FhirString({ value: source.name });
        }
        if (source['initiator']) {
            _this.initiator = new FhirString({ value: source.initiator });
        }
        if (source['receiver']) {
            _this.receiver = new FhirString({ value: source.receiver });
        }
        if (source['description']) {
            _this.description = new FhirMarkdown({ value: source.description });
        }
        if (source['initiatorActive']) {
            _this.initiatorActive = new FhirBoolean({ value: source.initiatorActive });
        }
        if (source['receiverActive']) {
            _this.receiverActive = new FhirBoolean({ value: source.receiverActive });
        }
        if (source['request']) {
            _this.request = new ExampleScenarioInstanceContainedInstance(source.request);
        }
        if (source['response']) {
            _this.response = new ExampleScenarioInstanceContainedInstance(source.response);
        }
        return _this;
    }
    /**
     * Function to perform basic model validation (e.g., check if required elements are present).
     */
    ExampleScenarioProcessStepOperation.prototype.doModelValidation = function () {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;
        var outcome = _super.prototype.doModelValidation.call(this);
        if (!this['number']) {
            outcome.issue.push(new OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing, diagnostics: 'Missing required property number:fhir.FhirString fhir: ExampleScenario.process.step.operation.number:string', }));
        }
        if (this["number"]) {
            (_a = outcome.issue).push.apply(_a, this.number.doModelValidation().issue);
        }
        if (this["type"]) {
            (_b = outcome.issue).push.apply(_b, this.type.doModelValidation().issue);
        }
        if (this["name"]) {
            (_c = outcome.issue).push.apply(_c, this.name.doModelValidation().issue);
        }
        if (this["initiator"]) {
            (_d = outcome.issue).push.apply(_d, this.initiator.doModelValidation().issue);
        }
        if (this["receiver"]) {
            (_e = outcome.issue).push.apply(_e, this.receiver.doModelValidation().issue);
        }
        if (this["description"]) {
            (_f = outcome.issue).push.apply(_f, this.description.doModelValidation().issue);
        }
        if (this["initiatorActive"]) {
            (_g = outcome.issue).push.apply(_g, this.initiatorActive.doModelValidation().issue);
        }
        if (this["receiverActive"]) {
            (_h = outcome.issue).push.apply(_h, this.receiverActive.doModelValidation().issue);
        }
        if (this["request"]) {
            (_j = outcome.issue).push.apply(_j, this.request.doModelValidation().issue);
        }
        if (this["response"]) {
            (_k = outcome.issue).push.apply(_k, this.response.doModelValidation().issue);
        }
        return outcome;
    };
    /**
     * Mapping of this datatype to a FHIR equivalent
     */
    ExampleScenarioProcessStepOperation._fts_dataType = 'ExampleScenarioProcessStepOperation';
    return ExampleScenarioProcessStepOperation;
}(BackboneElement));
/**
 * Indicates an alternative step that can be taken instead of the operations on the base step in exceptional/atypical circumstances.
 */
var ExampleScenarioProcessStepAlternative = /** @class */ (function (_super) {
    __extends(ExampleScenarioProcessStepAlternative, _super);
    /**
     * Default constructor for ExampleScenarioProcessStepAlternative - initializes any required elements to null if a value is not provided.
     */
    function ExampleScenarioProcessStepAlternative(source, options) {
        if (source === void 0) { source = {}; }
        if (options === void 0) { options = {}; }
        var _this = _super.call(this, source, options) || this;
        if (source['title']) {
            _this.title = new FhirString({ value: source.title });
        }
        else {
            _this.title = null;
        }
        if (source['description']) {
            _this.description = new FhirMarkdown({ value: source.description });
        }
        if (source['step']) {
            _this.step = source.step.map(function (x) { return new ExampleScenarioProcessStep(x); });
        }
        else {
            _this.step = [];
        }
        return _this;
    }
    /**
     * Function to perform basic model validation (e.g., check if required elements are present).
     */
    ExampleScenarioProcessStepAlternative.prototype.doModelValidation = function () {
        var _a, _b;
        var outcome = _super.prototype.doModelValidation.call(this);
        if (!this['title']) {
            outcome.issue.push(new OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing, diagnostics: 'Missing required property title:fhir.FhirString fhir: ExampleScenario.process.step.alternative.title:string', }));
        }
        if (this["title"]) {
            (_a = outcome.issue).push.apply(_a, this.title.doModelValidation().issue);
        }
        if (this["description"]) {
            (_b = outcome.issue).push.apply(_b, this.description.doModelValidation().issue);
        }
        if (this["step"]) {
            this.step.forEach(function (x) {
                var _a;
                (_a = outcome.issue).push.apply(_a, x.doModelValidation().issue);
            });
        }
        return outcome;
    };
    /**
     * Mapping of this datatype to a FHIR equivalent
     */
    ExampleScenarioProcessStepAlternative._fts_dataType = 'ExampleScenarioProcessStepAlternative';
    return ExampleScenarioProcessStepAlternative;
}(BackboneElement));
/**
 * Each step of the process.
 */
var ExampleScenarioProcessStep = /** @class */ (function (_super) {
    __extends(ExampleScenarioProcessStep, _super);
    /**
     * Default constructor for ExampleScenarioProcessStep - initializes any required elements to null if a value is not provided.
     */
    function ExampleScenarioProcessStep(source, options) {
        if (source === void 0) { source = {}; }
        if (options === void 0) { options = {}; }
        var _this = _super.call(this, source, options) || this;
        if (source['process']) {
            _this.process = source.process.map(function (x) { return new ExampleScenarioProcess(x); });
        }
        else {
            _this.process = [];
        }
        if (source['pause']) {
            _this.pause = new FhirBoolean({ value: source.pause });
        }
        if (source['operation']) {
            _this.operation = new ExampleScenarioProcessStepOperation(source.operation);
        }
        if (source['alternative']) {
            _this.alternative = source.alternative.map(function (x) { return new ExampleScenarioProcessStepAlternative(x); });
        }
        else {
            _this.alternative = [];
        }
        return _this;
    }
    /**
     * Function to perform basic model validation (e.g., check if required elements are present).
     */
    ExampleScenarioProcessStep.prototype.doModelValidation = function () {
        var _a, _b;
        var outcome = _super.prototype.doModelValidation.call(this);
        if (this["process"]) {
            this.process.forEach(function (x) {
                var _a;
                (_a = outcome.issue).push.apply(_a, x.doModelValidation().issue);
            });
        }
        if (this["pause"]) {
            (_a = outcome.issue).push.apply(_a, this.pause.doModelValidation().issue);
        }
        if (this["operation"]) {
            (_b = outcome.issue).push.apply(_b, this.operation.doModelValidation().issue);
        }
        if (this["alternative"]) {
            this.alternative.forEach(function (x) {
                var _a;
                (_a = outcome.issue).push.apply(_a, x.doModelValidation().issue);
            });
        }
        return outcome;
    };
    /**
     * Mapping of this datatype to a FHIR equivalent
     */
    ExampleScenarioProcessStep._fts_dataType = 'ExampleScenarioProcessStep';
    return ExampleScenarioProcessStep;
}(BackboneElement));
/**
 * Each major process - a group of operations.
 */
var ExampleScenarioProcess = /** @class */ (function (_super) {
    __extends(ExampleScenarioProcess, _super);
    /**
     * Default constructor for ExampleScenarioProcess - initializes any required elements to null if a value is not provided.
     */
    function ExampleScenarioProcess(source, options) {
        if (source === void 0) { source = {}; }
        if (options === void 0) { options = {}; }
        var _this = _super.call(this, source, options) || this;
        if (source['title']) {
            _this.title = new FhirString({ value: source.title });
        }
        else {
            _this.title = null;
        }
        if (source['description']) {
            _this.description = new FhirMarkdown({ value: source.description });
        }
        if (source['preConditions']) {
            _this.preConditions = new FhirMarkdown({ value: source.preConditions });
        }
        if (source['postConditions']) {
            _this.postConditions = new FhirMarkdown({ value: source.postConditions });
        }
        if (source['step']) {
            _this.step = source.step.map(function (x) { return new ExampleScenarioProcessStep(x); });
        }
        else {
            _this.step = [];
        }
        return _this;
    }
    /**
     * Function to perform basic model validation (e.g., check if required elements are present).
     */
    ExampleScenarioProcess.prototype.doModelValidation = function () {
        var _a, _b, _c, _d;
        var outcome = _super.prototype.doModelValidation.call(this);
        if (!this['title']) {
            outcome.issue.push(new OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing, diagnostics: 'Missing required property title:fhir.FhirString fhir: ExampleScenario.process.title:string', }));
        }
        if (this["title"]) {
            (_a = outcome.issue).push.apply(_a, this.title.doModelValidation().issue);
        }
        if (this["description"]) {
            (_b = outcome.issue).push.apply(_b, this.description.doModelValidation().issue);
        }
        if (this["preConditions"]) {
            (_c = outcome.issue).push.apply(_c, this.preConditions.doModelValidation().issue);
        }
        if (this["postConditions"]) {
            (_d = outcome.issue).push.apply(_d, this.postConditions.doModelValidation().issue);
        }
        if (this["step"]) {
            this.step.forEach(function (x) {
                var _a;
                (_a = outcome.issue).push.apply(_a, x.doModelValidation().issue);
            });
        }
        return outcome;
    };
    /**
     * Mapping of this datatype to a FHIR equivalent
     */
    ExampleScenarioProcess._fts_dataType = 'ExampleScenarioProcess';
    return ExampleScenarioProcess;
}(BackboneElement));
/**
 * Example of workflow instance.
 */
var ExampleScenario = /** @class */ (function (_super) {
    __extends(ExampleScenario, _super);
    /**
     * Default constructor for ExampleScenario - initializes any required elements to null if a value is not provided.
     */
    function ExampleScenario(source, options) {
        if (source === void 0) { source = {}; }
        if (options === void 0) { options = {}; }
        var _this = _super.call(this, source, options) || this;
        _this.resourceType = 'ExampleScenario';
        if (source['url']) {
            _this.url = new FhirUri({ value: source.url });
        }
        if (source['identifier']) {
            _this.identifier = source.identifier.map(function (x) { return new Identifier(x); });
        }
        else {
            _this.identifier = [];
        }
        if (source['version']) {
            _this.version = new FhirString({ value: source.version });
        }
        if (source['name']) {
            _this.name = new FhirString({ value: source.name });
        }
        if (source['status']) {
            _this.status = source.status;
        }
        else {
            _this.status = null;
        }
        if (source['experimental']) {
            _this.experimental = new FhirBoolean({ value: source.experimental });
        }
        if (source['date']) {
            _this.date = new FhirDateTime({ value: source.date });
        }
        if (source['publisher']) {
            _this.publisher = new FhirString({ value: source.publisher });
        }
        if (source['contact']) {
            _this.contact = source.contact.map(function (x) { return new ContactDetail(x); });
        }
        else {
            _this.contact = [];
        }
        if (source['useContext']) {
            _this.useContext = source.useContext.map(function (x) { return new UsageContext(x); });
        }
        else {
            _this.useContext = [];
        }
        if (source['jurisdiction']) {
            _this.jurisdiction = source.jurisdiction.map(function (x) { return new CodeableConcept(x); });
        }
        else {
            _this.jurisdiction = [];
        }
        if (source['copyright']) {
            _this.copyright = new FhirMarkdown({ value: source.copyright });
        }
        if (source['purpose']) {
            _this.purpose = new FhirMarkdown({ value: source.purpose });
        }
        if (source['actor']) {
            _this.actor = source.actor.map(function (x) { return new ExampleScenarioActor(x); });
        }
        else {
            _this.actor = [];
        }
        if (source['instance']) {
            _this.instance = source.instance.map(function (x) { return new ExampleScenarioInstance(x); });
        }
        else {
            _this.instance = [];
        }
        if (source['process']) {
            _this.process = source.process.map(function (x) { return new ExampleScenarioProcess(x); });
        }
        else {
            _this.process = [];
        }
        if (source['workflow']) {
            _this.workflow = source.workflow.map(function (x) { return new FhirCanonical({ value: x }); });
        }
        else {
            _this.workflow = [];
        }
        return _this;
    }
    /**
     * Required-bound Value Set for status (ExampleScenario.status)
     */
    ExampleScenario.statusRequiredCoding = function () {
        return PublicationStatusCodings;
    };
    /**
     * Function to perform basic model validation (e.g., check if required elements are present).
     */
    ExampleScenario.prototype.doModelValidation = function () {
        var _a, _b, _c, _d, _e, _f, _g, _h;
        var outcome = _super.prototype.doModelValidation.call(this);
        if (!this['resourceType']) {
            outcome.issue.push(new OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing, diagnostics: 'Missing required property resourceType:"ExampleScenario" fhir: ExampleScenario.resourceType:"ExampleScenario"', }));
        }
        if (this["url"]) {
            (_a = outcome.issue).push.apply(_a, this.url.doModelValidation().issue);
        }
        if (this["identifier"]) {
            this.identifier.forEach(function (x) {
                var _a;
                (_a = outcome.issue).push.apply(_a, x.doModelValidation().issue);
            });
        }
        if (this["version"]) {
            (_b = outcome.issue).push.apply(_b, this.version.doModelValidation().issue);
        }
        if (this["name"]) {
            (_c = outcome.issue).push.apply(_c, this.name.doModelValidation().issue);
        }
        if (!this['status']) {
            outcome.issue.push(new OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing, diagnostics: 'Missing required property status:PublicationStatusCodeType fhir: ExampleScenario.status:code', }));
        }
        if (this["experimental"]) {
            (_d = outcome.issue).push.apply(_d, this.experimental.doModelValidation().issue);
        }
        if (this["date"]) {
            (_e = outcome.issue).push.apply(_e, this.date.doModelValidation().issue);
        }
        if (this["publisher"]) {
            (_f = outcome.issue).push.apply(_f, this.publisher.doModelValidation().issue);
        }
        if (this["contact"]) {
            this.contact.forEach(function (x) {
                var _a;
                (_a = outcome.issue).push.apply(_a, x.doModelValidation().issue);
            });
        }
        if (this["useContext"]) {
            this.useContext.forEach(function (x) {
                var _a;
                (_a = outcome.issue).push.apply(_a, x.doModelValidation().issue);
            });
        }
        if (this["jurisdiction"]) {
            this.jurisdiction.forEach(function (x) {
                var _a;
                (_a = outcome.issue).push.apply(_a, x.doModelValidation().issue);
            });
        }
        if (this["copyright"]) {
            (_g = outcome.issue).push.apply(_g, this.copyright.doModelValidation().issue);
        }
        if (this["purpose"]) {
            (_h = outcome.issue).push.apply(_h, this.purpose.doModelValidation().issue);
        }
        if (this["actor"]) {
            this.actor.forEach(function (x) {
                var _a;
                (_a = outcome.issue).push.apply(_a, x.doModelValidation().issue);
            });
        }
        if (this["instance"]) {
            this.instance.forEach(function (x) {
                var _a;
                (_a = outcome.issue).push.apply(_a, x.doModelValidation().issue);
            });
        }
        if (this["process"]) {
            this.process.forEach(function (x) {
                var _a;
                (_a = outcome.issue).push.apply(_a, x.doModelValidation().issue);
            });
        }
        if (this["workflow"]) {
            this.workflow.forEach(function (x) {
                var _a;
                (_a = outcome.issue).push.apply(_a, x.doModelValidation().issue);
            });
        }
        return outcome;
    };
    /**
     * Mapping of this datatype to a FHIR equivalent
     */
    ExampleScenario._fts_dataType = 'ExampleScenario';
    return ExampleScenario;
}(DomainResource));

export { ExampleScenario, ExampleScenarioActor, ExampleScenarioInstance, ExampleScenarioInstanceContainedInstance, ExampleScenarioInstanceVersion, ExampleScenarioProcess, ExampleScenarioProcessStep, ExampleScenarioProcessStepAlternative, ExampleScenarioProcessStepOperation };
//# sourceMappingURL=ExampleScenario.js.map
