{"version":3,"file":"UsageContext.js","sources":["../../src/fhir/UsageContext.ts"],"sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4.core version: 4.0.1\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR ComplexType: UsageContext\r\n\r\nimport * as fhir from '../fhir.js';\r\n\r\n// @ts-ignore\r\nimport { UsageContextTypeCodings, UsageContextTypeCodingType,} from '../fhirValueSets/UsageContextTypeCodings.js';\r\n// @ts-ignore\r\nimport { UsageContextTypeCodes,  UsageContextTypeCodeType } from '../fhirValueSets/UsageContextTypeCodes.js';\r\n// @ts-ignore\r\nimport { IssueTypeCodes } from '../fhirValueSets/IssueTypeCodes.js';\r\n// @ts-ignore\r\nimport { IssueSeverityCodes } from '../fhirValueSets/IssueSeverityCodes.js';\r\n/**\r\n * Valid arguments for the UsageContext type.\r\n */\r\nexport interface UsageContextArgs extends fhir.FhirElementArgs {\r\n  /**\r\n   * A code that identifies the type of context being specified by this usage context.\r\n   */\r\n  code: fhir.CodingArgs|null;\r\n  /**\r\n   * A value that defines the context specified in this context of use. The interpretation of the value is defined by the code.\r\n   */\r\n  value?: fhir.CodeableConcept|fhir.Quantity|fhir.Range|fhir.Reference|undefined;\r\n  /**\r\n   * A value that defines the context specified in this context of use. The interpretation of the value is defined by the code.\r\n   */\r\n  valueCodeableConcept?: fhir.CodeableConceptArgs|undefined;\r\n  /**\r\n   * A value that defines the context specified in this context of use. The interpretation of the value is defined by the code.\r\n   */\r\n  valueQuantity?: fhir.QuantityArgs|undefined;\r\n  /**\r\n   * A value that defines the context specified in this context of use. The interpretation of the value is defined by the code.\r\n   */\r\n  valueRange?: fhir.RangeArgs|undefined;\r\n  /**\r\n   * A value that defines the context specified in this context of use. The interpretation of the value is defined by the code.\r\n   */\r\n  valueReference?: fhir.ReferenceArgs|undefined;\r\n}\r\n\r\n/**\r\n * Specifies clinical/business/etc. metadata that can be used to retrieve, index and/or categorize an artifact. This metadata can either be specific to the applicable population (e.g., age category, DRG) or the specific context of care (e.g., venue, care setting, provider of care).\r\n */\r\nexport class UsageContext extends fhir.FhirElement {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'UsageContext';\r\n  /**\r\n   * A code that identifies the type of context being specified by this usage context.\r\n   */\r\n  public code: fhir.Coding|null;\r\n  /**\r\n   * A value that defines the context specified in this context of use. The interpretation of the value is defined by the code.\r\n   */\r\n  public value: (fhir.CodeableConcept|fhir.Quantity|fhir.Range|fhir.Reference)|null;\r\n  /**\r\n   * Internal flag to properly serialize choice-type element UsageContext.value[x]\r\n   */\r\n  protected static readonly _fts_valueIsChoice:true = true;\r\n  /**\r\n   * Default constructor for UsageContext - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<UsageContextArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    if (source['code']) { this.code = new fhir.Coding(source.code); }\r\n    else { this.code = null; }\r\n    if (source['value']) { this.value = source.value; }\r\n    else if (source['valueCodeableConcept']) { this.value = new fhir.CodeableConcept(source.valueCodeableConcept); }\r\n    else if (source['valueQuantity']) { this.value = new fhir.Quantity(source.valueQuantity); }\r\n    else if (source['valueRange']) { this.value = new fhir.Range(source.valueRange); }\r\n    else if (source['valueReference']) { this.value = new fhir.Reference(source.valueReference); }\r\n    else { this.value = null; }\r\n  }\r\n  /**\r\n   * Extensible-bound Value Set for code (UsageContext.code)\r\n   */\r\n  public static codeExtensibleCoding():UsageContextTypeCodingType {\r\n    return UsageContextTypeCodings;\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (!this['code']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property code:fhir.Coding fhir: UsageContext.code:Coding', }));\r\n    }\r\n    if (this[\"code\"]) { outcome.issue!.push(...this.code.doModelValidation().issue!); }\r\n    if (!this['value']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property value: fhir: UsageContext.value[x]:', }));\r\n    }\r\n    return outcome;\r\n  }\r\n}\r\n"],"names":["fhir.Coding","fhir.CodeableConcept","fhir.Quantity","fhir.Range","fhir.Reference","fhir.OperationOutcomeIssue","fhir.FhirElement"],"mappings":"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"}