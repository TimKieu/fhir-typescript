{"version":3,"file":"RiskAssessment.js","sources":["../../src/fhir/RiskAssessment.ts"],"sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4.core version: 4.0.1\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR Resource: RiskAssessment\r\n\r\nimport * as fhir from '../fhir.js';\r\n\r\n// @ts-ignore\r\nimport { RiskProbabilityCodings, RiskProbabilityCodingType,} from '../fhirValueSets/RiskProbabilityCodings.js';\r\n// @ts-ignore\r\nimport { RiskProbabilityCodes,  RiskProbabilityCodeType } from '../fhirValueSets/RiskProbabilityCodes.js';\r\n// @ts-ignore\r\nimport { ObservationStatusCodings, ObservationStatusCodingType,} from '../fhirValueSets/ObservationStatusCodings.js';\r\n// @ts-ignore\r\nimport { ObservationStatusCodes,  ObservationStatusCodeType } from '../fhirValueSets/ObservationStatusCodes.js';\r\n// @ts-ignore\r\nimport { IssueTypeCodes } from '../fhirValueSets/IssueTypeCodes.js';\r\n// @ts-ignore\r\nimport { IssueSeverityCodes } from '../fhirValueSets/IssueSeverityCodes.js';\r\n/**\r\n * Valid arguments for the RiskAssessmentPrediction type.\r\n */\r\nexport interface RiskAssessmentPredictionArgs extends fhir.BackboneElementArgs {\r\n  /**\r\n   * One of the potential outcomes for the patient (e.g. remission, death,  a particular condition).\r\n   */\r\n  outcome?: fhir.CodeableConceptArgs|undefined;\r\n  /**\r\n   * If range is used, it represents the lower and upper bounds of certainty; e.g. 40-60%  Decimal values are expressed as percentages as well (max = 100).\r\n   */\r\n  probability?: fhir.FhirDecimal|fhir.Range|undefined;\r\n  /**\r\n   * If range is used, it represents the lower and upper bounds of certainty; e.g. 40-60%  Decimal values are expressed as percentages as well (max = 100).\r\n   */\r\n  probabilityDecimal?: fhir.FhirDecimal|number|undefined;\r\n  /**\r\n   * If range is used, it represents the lower and upper bounds of certainty; e.g. 40-60%  Decimal values are expressed as percentages as well (max = 100).\r\n   */\r\n  probabilityRange?: fhir.RangeArgs|undefined;\r\n  /**\r\n   * Indicates how likely the outcome is (in the specified timeframe), expressed as a qualitative value (e.g. low, medium, or high).\r\n   */\r\n  qualitativeRisk?: fhir.CodeableConceptArgs|undefined;\r\n  /**\r\n   * Indicates the risk for this particular subject (with their specific characteristics) divided by the risk of the population in general.  (Numbers greater than 1 = higher risk than the population, numbers less than 1 = lower risk.).\r\n   */\r\n  relativeRisk?: fhir.FhirDecimal|number|undefined;\r\n  /**\r\n   * If not specified, the risk applies \"over the subject's lifespan\".\r\n   */\r\n  when?: fhir.Period|fhir.Range|undefined;\r\n  /**\r\n   * If not specified, the risk applies \"over the subject's lifespan\".\r\n   */\r\n  whenPeriod?: fhir.PeriodArgs|undefined;\r\n  /**\r\n   * If not specified, the risk applies \"over the subject's lifespan\".\r\n   */\r\n  whenRange?: fhir.RangeArgs|undefined;\r\n  /**\r\n   * Additional information explaining the basis for the prediction.\r\n   */\r\n  rationale?: fhir.FhirString|string|undefined;\r\n}\r\n\r\n/**\r\n * Multiple repetitions can be used to identify the same type of outcome in different timeframes as well as different types of outcomes.\r\n */\r\nexport class RiskAssessmentPrediction extends fhir.BackboneElement {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'RiskAssessmentPrediction';\r\n  /**\r\n   * One of the potential outcomes for the patient (e.g. remission, death,  a particular condition).\r\n   */\r\n  public outcome?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * If range is used, it represents the lower and upper bounds of certainty; e.g. 40-60%  Decimal values are expressed as percentages as well (max = 100).\r\n   */\r\n  public probability?: (fhir.FhirDecimal|fhir.Range)|undefined;\r\n  /**\r\n   * Internal flag to properly serialize choice-type element RiskAssessment.prediction.probability[x]\r\n   */\r\n  protected static readonly _fts_probabilityIsChoice:true = true;\r\n  /**\r\n   * Indicates how likely the outcome is (in the specified timeframe), expressed as a qualitative value (e.g. low, medium, or high).\r\n   */\r\n  public qualitativeRisk?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * Indicates the risk for this particular subject (with their specific characteristics) divided by the risk of the population in general.  (Numbers greater than 1 = higher risk than the population, numbers less than 1 = lower risk.).\r\n   */\r\n  public relativeRisk?: fhir.FhirDecimal|undefined;\r\n  /**\r\n   * If not specified, the risk applies \"over the subject's lifespan\".\r\n   */\r\n  public when?: (fhir.Period|fhir.Range)|undefined;\r\n  /**\r\n   * Internal flag to properly serialize choice-type element RiskAssessment.prediction.when[x]\r\n   */\r\n  protected static readonly _fts_whenIsChoice:true = true;\r\n  /**\r\n   * Additional information explaining the basis for the prediction.\r\n   */\r\n  public rationale?: fhir.FhirString|undefined;\r\n  /**\r\n   * Default constructor for RiskAssessmentPrediction - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<RiskAssessmentPredictionArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    if (source['outcome']) { this.outcome = new fhir.CodeableConcept(source.outcome); }\r\n    if (source['probability']) { this.probability = source.probability; }\r\n    else if (source['probabilityDecimal']) { this.probability = new fhir.FhirDecimal({value: source.probabilityDecimal}); }\r\n    else if (source['probabilityRange']) { this.probability = new fhir.Range(source.probabilityRange); }\r\n    if (source['qualitativeRisk']) { this.qualitativeRisk = new fhir.CodeableConcept(source.qualitativeRisk); }\r\n    if (source['relativeRisk']) { this.relativeRisk = new fhir.FhirDecimal({value: source.relativeRisk}); }\r\n    if (source['when']) { this.when = source.when; }\r\n    else if (source['whenPeriod']) { this.when = new fhir.Period(source.whenPeriod); }\r\n    else if (source['whenRange']) { this.when = new fhir.Range(source.whenRange); }\r\n    if (source['rationale']) { this.rationale = new fhir.FhirString({value: source.rationale}); }\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (this[\"outcome\"]) { outcome.issue!.push(...this.outcome.doModelValidation().issue!); }\r\n    if (this[\"qualitativeRisk\"]) { outcome.issue!.push(...this.qualitativeRisk.doModelValidation().issue!); }\r\n    if (this[\"relativeRisk\"]) { outcome.issue!.push(...this.relativeRisk.doModelValidation().issue!); }\r\n    if (this[\"rationale\"]) { outcome.issue!.push(...this.rationale.doModelValidation().issue!); }\r\n    return outcome;\r\n  }\r\n}\r\n/**\r\n * Valid arguments for the RiskAssessment type.\r\n */\r\nexport interface RiskAssessmentArgs extends fhir.DomainResourceArgs {\r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  resourceType: \"RiskAssessment\"|undefined;\r\n  /**\r\n   * Business identifier assigned to the risk assessment.\r\n   */\r\n  identifier?: fhir.IdentifierArgs[]|undefined;\r\n  /**\r\n   * A reference to the request that is fulfilled by this risk assessment.\r\n   */\r\n  basedOn?: fhir.ReferenceArgs|undefined;\r\n  /**\r\n   * A reference to a resource that this risk assessment is part of, such as a Procedure.\r\n   */\r\n  parent?: fhir.ReferenceArgs|undefined;\r\n  /**\r\n   * The status of the RiskAssessment, using the same statuses as an Observation.\r\n   */\r\n  status: ObservationStatusCodeType|null;\r\n  /**\r\n   * The algorithm, process or mechanism used to evaluate the risk.\r\n   */\r\n  method?: fhir.CodeableConceptArgs|undefined;\r\n  /**\r\n   * The type of the risk assessment performed.\r\n   */\r\n  code?: fhir.CodeableConceptArgs|undefined;\r\n  /**\r\n   * The patient or group the risk assessment applies to.\r\n   */\r\n  subject: fhir.ReferenceArgs|null;\r\n  /**\r\n   * The encounter where the assessment was performed.\r\n   */\r\n  encounter?: fhir.ReferenceArgs|undefined;\r\n  /**\r\n   * The date (and possibly time) the risk assessment was performed.\r\n   */\r\n  occurrence?: fhir.FhirDateTime|fhir.Period|undefined;\r\n  /**\r\n   * The date (and possibly time) the risk assessment was performed.\r\n   */\r\n  occurrenceDateTime?: fhir.FhirDateTime|string|undefined;\r\n  /**\r\n   * The date (and possibly time) the risk assessment was performed.\r\n   */\r\n  occurrencePeriod?: fhir.PeriodArgs|undefined;\r\n  /**\r\n   * For assessments or prognosis specific to a particular condition, indicates the condition being assessed.\r\n   */\r\n  condition?: fhir.ReferenceArgs|undefined;\r\n  /**\r\n   * The provider or software application that performed the assessment.\r\n   */\r\n  performer?: fhir.ReferenceArgs|undefined;\r\n  /**\r\n   * The reason the risk assessment was performed.\r\n   */\r\n  reasonCode?: fhir.CodeableConceptArgs[]|undefined;\r\n  /**\r\n   * Resources supporting the reason the risk assessment was performed.\r\n   */\r\n  reasonReference?: fhir.ReferenceArgs[]|undefined;\r\n  /**\r\n   * Indicates the source data considered as part of the assessment (for example, FamilyHistory, Observations, Procedures, Conditions, etc.).\r\n   */\r\n  basis?: fhir.ReferenceArgs[]|undefined;\r\n  /**\r\n   * Multiple repetitions can be used to identify the same type of outcome in different timeframes as well as different types of outcomes.\r\n   */\r\n  prediction?: fhir.RiskAssessmentPredictionArgs[]|undefined;\r\n  /**\r\n   * A description of the steps that might be taken to reduce the identified risk(s).\r\n   */\r\n  mitigation?: fhir.FhirString|string|undefined;\r\n  /**\r\n   * Additional comments about the risk assessment.\r\n   */\r\n  note?: fhir.AnnotationArgs[]|undefined;\r\n}\r\n\r\n/**\r\n * An assessment of the likely outcome(s) for a patient or other subject as well as the likelihood of each outcome.\r\n */\r\nexport class RiskAssessment extends fhir.DomainResource {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'RiskAssessment';\r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  public resourceType: \"RiskAssessment\";\r\n  /**\r\n   * Business identifier assigned to the risk assessment.\r\n   */\r\n  public identifier?: fhir.Identifier[];\r\n  /**\r\n   * A reference to the request that is fulfilled by this risk assessment.\r\n   */\r\n  public basedOn?: fhir.Reference|undefined;\r\n  /**\r\n   * A reference to a resource that this risk assessment is part of, such as a Procedure.\r\n   */\r\n  public parent?: fhir.Reference|undefined;\r\n  /**\r\n   * The status of the RiskAssessment, using the same statuses as an Observation.\r\n   */\r\n  public status: ObservationStatusCodeType|null;\r\n  /**\r\n   * The algorithm, process or mechanism used to evaluate the risk.\r\n   */\r\n  public method?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * The type of the risk assessment performed.\r\n   */\r\n  public code?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * The patient or group the risk assessment applies to.\r\n   */\r\n  public subject: fhir.Reference|null;\r\n  /**\r\n   * The encounter where the assessment was performed.\r\n   */\r\n  public encounter?: fhir.Reference|undefined;\r\n  /**\r\n   * The date (and possibly time) the risk assessment was performed.\r\n   */\r\n  public occurrence?: (fhir.FhirDateTime|fhir.Period)|undefined;\r\n  /**\r\n   * Internal flag to properly serialize choice-type element RiskAssessment.occurrence[x]\r\n   */\r\n  protected static readonly _fts_occurrenceIsChoice:true = true;\r\n  /**\r\n   * For assessments or prognosis specific to a particular condition, indicates the condition being assessed.\r\n   */\r\n  public condition?: fhir.Reference|undefined;\r\n  /**\r\n   * The provider or software application that performed the assessment.\r\n   */\r\n  public performer?: fhir.Reference|undefined;\r\n  /**\r\n   * The reason the risk assessment was performed.\r\n   */\r\n  public reasonCode?: fhir.CodeableConcept[];\r\n  /**\r\n   * Resources supporting the reason the risk assessment was performed.\r\n   */\r\n  public reasonReference?: fhir.Reference[];\r\n  /**\r\n   * Indicates the source data considered as part of the assessment (for example, FamilyHistory, Observations, Procedures, Conditions, etc.).\r\n   */\r\n  public basis?: fhir.Reference[];\r\n  /**\r\n   * Multiple repetitions can be used to identify the same type of outcome in different timeframes as well as different types of outcomes.\r\n   */\r\n  public prediction?: fhir.RiskAssessmentPrediction[];\r\n  /**\r\n   * A description of the steps that might be taken to reduce the identified risk(s).\r\n   */\r\n  public mitigation?: fhir.FhirString|undefined;\r\n  /**\r\n   * Additional comments about the risk assessment.\r\n   */\r\n  public note?: fhir.Annotation[];\r\n  /**\r\n   * Default constructor for RiskAssessment - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<RiskAssessmentArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    this.resourceType = 'RiskAssessment';\r\n    if (source['identifier']) { this.identifier = source.identifier.map((x) => new fhir.Identifier(x)); }\r\n    else { this.identifier = []; }\r\n    if (source['basedOn']) { this.basedOn = new fhir.Reference(source.basedOn); }\r\n    if (source['parent']) { this.parent = new fhir.Reference(source.parent); }\r\n    if (source['status']) { this.status = source.status; }\r\n    else { this.status = null; }\r\n    if (source['method']) { this.method = new fhir.CodeableConcept(source.method); }\r\n    if (source['code']) { this.code = new fhir.CodeableConcept(source.code); }\r\n    if (source['subject']) { this.subject = new fhir.Reference(source.subject); }\r\n    else { this.subject = null; }\r\n    if (source['encounter']) { this.encounter = new fhir.Reference(source.encounter); }\r\n    if (source['occurrence']) { this.occurrence = source.occurrence; }\r\n    else if (source['occurrenceDateTime']) { this.occurrence = new fhir.FhirDateTime({value: source.occurrenceDateTime}); }\r\n    else if (source['occurrencePeriod']) { this.occurrence = new fhir.Period(source.occurrencePeriod); }\r\n    if (source['condition']) { this.condition = new fhir.Reference(source.condition); }\r\n    if (source['performer']) { this.performer = new fhir.Reference(source.performer); }\r\n    if (source['reasonCode']) { this.reasonCode = source.reasonCode.map((x) => new fhir.CodeableConcept(x)); }\r\n    else { this.reasonCode = []; }\r\n    if (source['reasonReference']) { this.reasonReference = source.reasonReference.map((x) => new fhir.Reference(x)); }\r\n    else { this.reasonReference = []; }\r\n    if (source['basis']) { this.basis = source.basis.map((x) => new fhir.Reference(x)); }\r\n    else { this.basis = []; }\r\n    if (source['prediction']) { this.prediction = source.prediction.map((x) => new fhir.RiskAssessmentPrediction(x)); }\r\n    else { this.prediction = []; }\r\n    if (source['mitigation']) { this.mitigation = new fhir.FhirString({value: source.mitigation}); }\r\n    if (source['note']) { this.note = source.note.map((x) => new fhir.Annotation(x)); }\r\n    else { this.note = []; }\r\n  }\r\n  /**\r\n   * Required-bound Value Set for status (RiskAssessment.status)\r\n   */\r\n  public static statusRequiredCoding():ObservationStatusCodingType {\r\n    return ObservationStatusCodings;\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (!this['resourceType']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property resourceType:\"RiskAssessment\" fhir: RiskAssessment.resourceType:\"RiskAssessment\"', }));\r\n    }\r\n    if (this[\"identifier\"]) { this.identifier.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"basedOn\"]) { outcome.issue!.push(...this.basedOn.doModelValidation().issue!); }\r\n    if (this[\"parent\"]) { outcome.issue!.push(...this.parent.doModelValidation().issue!); }\r\n    if (!this['status']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property status:ObservationStatusCodeType fhir: RiskAssessment.status:code', }));\r\n    }\r\n    if (this[\"method\"]) { outcome.issue!.push(...this.method.doModelValidation().issue!); }\r\n    if (this[\"code\"]) { outcome.issue!.push(...this.code.doModelValidation().issue!); }\r\n    if (!this['subject']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property subject:fhir.Reference fhir: RiskAssessment.subject:Reference', }));\r\n    }\r\n    if (this[\"subject\"]) { outcome.issue!.push(...this.subject.doModelValidation().issue!); }\r\n    if (this[\"encounter\"]) { outcome.issue!.push(...this.encounter.doModelValidation().issue!); }\r\n    if (this[\"condition\"]) { outcome.issue!.push(...this.condition.doModelValidation().issue!); }\r\n    if (this[\"performer\"]) { outcome.issue!.push(...this.performer.doModelValidation().issue!); }\r\n    if (this[\"reasonCode\"]) { this.reasonCode.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"reasonReference\"]) { this.reasonReference.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"basis\"]) { this.basis.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"prediction\"]) { this.prediction.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"mitigation\"]) { outcome.issue!.push(...this.mitigation.doModelValidation().issue!); }\r\n    if (this[\"note\"]) { this.note.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    return outcome;\r\n  }\r\n}\r\n"],"names":["fhir.CodeableConcept","fhir.FhirDecimal","fhir.Range","fhir.Period","fhir.FhirString","fhir.BackboneElement","fhir.Identifier","fhir.Reference","fhir.FhirDateTime","fhir.RiskAssessmentPrediction","fhir.Annotation","fhir.OperationOutcomeIssue","fhir.DomainResource"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAiEA;;AAEG;AACH,IAAA,wBAAA,kBAAA,UAAA,MAAA,EAAA;IAA8C,SAAoB,CAAA,wBAAA,EAAA,MAAA,CAAA,CAAA;AAqChE;;AAEG;IACH,SAAY,wBAAA,CAAA,MAAiD,EAAE,OAAwC,EAAA;AAA3F,QAAA,IAAA,MAAA,KAAA,KAAA,CAAA,EAAA,EAAA,MAAiD,GAAA,EAAA,CAAA,EAAA;AAAE,QAAA,IAAA,OAAA,KAAA,KAAA,CAAA,EAAA,EAAA,OAAwC,GAAA,EAAA,CAAA,EAAA;AAAvG,QAAA,IAAA,KAAA,GACE,MAAM,CAAA,IAAA,CAAA,IAAA,EAAA,MAAM,EAAE,OAAO,CAAC,IAWvB,IAAA,CAAA;AAVC,QAAA,IAAI,MAAM,CAAC,SAAS,CAAC,EAAE;AAAE,YAAA,KAAI,CAAC,OAAO,GAAG,IAAIA,eAAoB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AAAE,SAAA;AACnF,QAAA,IAAI,MAAM,CAAC,aAAa,CAAC,EAAE;AAAE,YAAA,KAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;AAAE,SAAA;AAChE,aAAA,IAAI,MAAM,CAAC,oBAAoB,CAAC,EAAE;AAAE,YAAA,KAAI,CAAC,WAAW,GAAG,IAAIC,WAAgB,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,kBAAkB,EAAC,CAAC,CAAC;AAAE,SAAA;AAClH,aAAA,IAAI,MAAM,CAAC,kBAAkB,CAAC,EAAE;AAAE,YAAA,KAAI,CAAC,WAAW,GAAG,IAAIC,KAAU,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;AAAE,SAAA;AACpG,QAAA,IAAI,MAAM,CAAC,iBAAiB,CAAC,EAAE;AAAE,YAAA,KAAI,CAAC,eAAe,GAAG,IAAIF,eAAoB,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;AAAE,SAAA;AAC3G,QAAA,IAAI,MAAM,CAAC,cAAc,CAAC,EAAE;AAAE,YAAA,KAAI,CAAC,YAAY,GAAG,IAAIC,WAAgB,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,YAAY,EAAC,CAAC,CAAC;AAAE,SAAA;AACvG,QAAA,IAAI,MAAM,CAAC,MAAM,CAAC,EAAE;AAAE,YAAA,KAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;AAAE,SAAA;AAC3C,aAAA,IAAI,MAAM,CAAC,YAAY,CAAC,EAAE;AAAE,YAAA,KAAI,CAAC,IAAI,GAAG,IAAIE,MAAW,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;AAAE,SAAA;AAC7E,aAAA,IAAI,MAAM,CAAC,WAAW,CAAC,EAAE;AAAE,YAAA,KAAI,CAAC,IAAI,GAAG,IAAID,KAAU,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;AAAE,SAAA;AAC/E,QAAA,IAAI,MAAM,CAAC,WAAW,CAAC,EAAE;AAAE,YAAA,KAAI,CAAC,SAAS,GAAG,IAAIE,UAAe,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,SAAS,EAAC,CAAC,CAAC;AAAE,SAAA;;KAC9F;AACD;;AAEG;AACa,IAAA,wBAAA,CAAA,SAAA,CAAA,iBAAiB,GAAjC,YAAA;;AACE,QAAA,IAAI,OAAO,GAAyB,MAAM,CAAA,SAAA,CAAA,iBAAiB,WAAE,CAAC;AAC9D,QAAA,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE;AAAE,YAAA,CAAA,KAAA,OAAO,CAAC,KAAM,EAAC,IAAI,CAAA,KAAA,CAAA,EAAA,EAAI,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC,KAAM,CAAE,CAAA;AAAE,SAAA;AACzF,QAAA,IAAI,IAAI,CAAC,iBAAiB,CAAC,EAAE;AAAE,YAAA,CAAA,KAAA,OAAO,CAAC,KAAM,EAAC,IAAI,CAAA,KAAA,CAAA,EAAA,EAAI,IAAI,CAAC,eAAe,CAAC,iBAAiB,EAAE,CAAC,KAAM,CAAE,CAAA;AAAE,SAAA;AACzG,QAAA,IAAI,IAAI,CAAC,cAAc,CAAC,EAAE;AAAE,YAAA,CAAA,KAAA,OAAO,CAAC,KAAM,EAAC,IAAI,CAAA,KAAA,CAAA,EAAA,EAAI,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,CAAC,KAAM,CAAE,CAAA;AAAE,SAAA;AACnG,QAAA,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE;AAAE,YAAA,CAAA,KAAA,OAAO,CAAC,KAAM,EAAC,IAAI,CAAA,KAAA,CAAA,EAAA,EAAI,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC,KAAM,CAAE,CAAA;AAAE,SAAA;AAC7F,QAAA,OAAO,OAAO,CAAC;KAChB,CAAA;AA9DD;;AAEG;IACoB,wBAAa,CAAA,aAAA,GAAU,0BAA0B,CAAC;AASzE;;AAEG;IACuB,wBAAwB,CAAA,wBAAA,GAAQ,IAAI,CAAC;AAa/D;;AAEG;IACuB,wBAAiB,CAAA,iBAAA,GAAQ,IAAI,CAAC;IAgC1D,OAAC,wBAAA,CAAA;AAAA,CAhED,CAA8CC,eAAoB,CAgEjE,EAAA;AAuFD;;AAEG;AACH,IAAA,cAAA,kBAAA,UAAA,MAAA,EAAA;IAAoC,SAAmB,CAAA,cAAA,EAAA,MAAA,CAAA,CAAA;AAiFrD;;AAEG;IACH,SAAY,cAAA,CAAA,MAAuC,EAAE,OAAwC,EAAA;AAAjF,QAAA,IAAA,MAAA,KAAA,KAAA,CAAA,EAAA,EAAA,MAAuC,GAAA,EAAA,CAAA,EAAA;AAAE,QAAA,IAAA,OAAA,KAAA,KAAA,CAAA,EAAA,EAAA,OAAwC,GAAA,EAAA,CAAA,EAAA;AAA7F,QAAA,IAAA,KAAA,GACE,MAAM,CAAA,IAAA,CAAA,IAAA,EAAA,MAAM,EAAE,OAAO,CAAC,IA6BvB,IAAA,CAAA;AA5BC,QAAA,KAAI,CAAC,YAAY,GAAG,gBAAgB,CAAC;AACrC,QAAA,IAAI,MAAM,CAAC,YAAY,CAAC,EAAE;YAAE,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,UAAC,CAAC,IAAK,OAAA,IAAIC,UAAe,CAAC,CAAC,CAAC,CAAA,EAAA,CAAC,CAAC;AAAE,SAAA;AAChG,aAAA;AAAE,YAAA,KAAI,CAAC,UAAU,GAAG,EAAE,CAAC;AAAE,SAAA;AAC9B,QAAA,IAAI,MAAM,CAAC,SAAS,CAAC,EAAE;AAAE,YAAA,KAAI,CAAC,OAAO,GAAG,IAAIC,SAAc,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AAAE,SAAA;AAC7E,QAAA,IAAI,MAAM,CAAC,QAAQ,CAAC,EAAE;AAAE,YAAA,KAAI,CAAC,MAAM,GAAG,IAAIA,SAAc,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAAE,SAAA;AAC1E,QAAA,IAAI,MAAM,CAAC,QAAQ,CAAC,EAAE;AAAE,YAAA,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;AAAE,SAAA;AACjD,aAAA;AAAE,YAAA,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;AAAE,SAAA;AAC5B,QAAA,IAAI,MAAM,CAAC,QAAQ,CAAC,EAAE;AAAE,YAAA,KAAI,CAAC,MAAM,GAAG,IAAIP,eAAoB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAAE,SAAA;AAChF,QAAA,IAAI,MAAM,CAAC,MAAM,CAAC,EAAE;AAAE,YAAA,KAAI,CAAC,IAAI,GAAG,IAAIA,eAAoB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAAE,SAAA;AAC1E,QAAA,IAAI,MAAM,CAAC,SAAS,CAAC,EAAE;AAAE,YAAA,KAAI,CAAC,OAAO,GAAG,IAAIO,SAAc,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AAAE,SAAA;AACxE,aAAA;AAAE,YAAA,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;AAAE,SAAA;AAC7B,QAAA,IAAI,MAAM,CAAC,WAAW,CAAC,EAAE;AAAE,YAAA,KAAI,CAAC,SAAS,GAAG,IAAIA,SAAc,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;AAAE,SAAA;AACnF,QAAA,IAAI,MAAM,CAAC,YAAY,CAAC,EAAE;AAAE,YAAA,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;AAAE,SAAA;AAC7D,aAAA,IAAI,MAAM,CAAC,oBAAoB,CAAC,EAAE;AAAE,YAAA,KAAI,CAAC,UAAU,GAAG,IAAIC,YAAiB,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,kBAAkB,EAAC,CAAC,CAAC;AAAE,SAAA;AAClH,aAAA,IAAI,MAAM,CAAC,kBAAkB,CAAC,EAAE;AAAE,YAAA,KAAI,CAAC,UAAU,GAAG,IAAIL,MAAW,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;AAAE,SAAA;AACpG,QAAA,IAAI,MAAM,CAAC,WAAW,CAAC,EAAE;AAAE,YAAA,KAAI,CAAC,SAAS,GAAG,IAAII,SAAc,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;AAAE,SAAA;AACnF,QAAA,IAAI,MAAM,CAAC,WAAW,CAAC,EAAE;AAAE,YAAA,KAAI,CAAC,SAAS,GAAG,IAAIA,SAAc,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;AAAE,SAAA;AACnF,QAAA,IAAI,MAAM,CAAC,YAAY,CAAC,EAAE;YAAE,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,UAAC,CAAC,IAAK,OAAA,IAAIP,eAAoB,CAAC,CAAC,CAAC,CAAA,EAAA,CAAC,CAAC;AAAE,SAAA;AACrG,aAAA;AAAE,YAAA,KAAI,CAAC,UAAU,GAAG,EAAE,CAAC;AAAE,SAAA;AAC9B,QAAA,IAAI,MAAM,CAAC,iBAAiB,CAAC,EAAE;YAAE,KAAI,CAAC,eAAe,GAAG,MAAM,CAAC,eAAe,CAAC,GAAG,CAAC,UAAC,CAAC,IAAK,OAAA,IAAIO,SAAc,CAAC,CAAC,CAAC,CAAA,EAAA,CAAC,CAAC;AAAE,SAAA;AAC9G,aAAA;AAAE,YAAA,KAAI,CAAC,eAAe,GAAG,EAAE,CAAC;AAAE,SAAA;AACnC,QAAA,IAAI,MAAM,CAAC,OAAO,CAAC,EAAE;YAAE,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,UAAC,CAAC,IAAK,OAAA,IAAIA,SAAc,CAAC,CAAC,CAAC,CAAA,EAAA,CAAC,CAAC;AAAE,SAAA;AAChF,aAAA;AAAE,YAAA,KAAI,CAAC,KAAK,GAAG,EAAE,CAAC;AAAE,SAAA;AACzB,QAAA,IAAI,MAAM,CAAC,YAAY,CAAC,EAAE;YAAE,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,UAAC,CAAC,IAAK,OAAA,IAAIE,wBAA6B,CAAC,CAAC,CAAC,CAAA,EAAA,CAAC,CAAC;AAAE,SAAA;AAC9G,aAAA;AAAE,YAAA,KAAI,CAAC,UAAU,GAAG,EAAE,CAAC;AAAE,SAAA;AAC9B,QAAA,IAAI,MAAM,CAAC,YAAY,CAAC,EAAE;AAAE,YAAA,KAAI,CAAC,UAAU,GAAG,IAAIL,UAAe,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,UAAU,EAAC,CAAC,CAAC;AAAE,SAAA;AAChG,QAAA,IAAI,MAAM,CAAC,MAAM,CAAC,EAAE;YAAE,KAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,UAAC,CAAC,IAAK,OAAA,IAAIM,UAAe,CAAC,CAAC,CAAC,CAAA,EAAA,CAAC,CAAC;AAAE,SAAA;AAC9E,aAAA;AAAE,YAAA,KAAI,CAAC,IAAI,GAAG,EAAE,CAAC;AAAE,SAAA;;KACzB;AACD;;AAEG;AACW,IAAA,cAAA,CAAA,oBAAoB,GAAlC,YAAA;AACE,QAAA,OAAO,wBAAwB,CAAC;KACjC,CAAA;AACD;;AAEG;AACa,IAAA,cAAA,CAAA,SAAA,CAAA,iBAAiB,GAAjC,YAAA;;AACE,QAAA,IAAI,OAAO,GAAyB,MAAM,CAAA,SAAA,CAAA,iBAAiB,WAAE,CAAC;AAC9D,QAAA,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE;AACzB,YAAA,OAAO,CAAC,KAAM,CAAC,IAAI,CAAC,IAAIC,qBAA0B,CAAC,EAAE,QAAQ,EAAE,kBAAkB,CAAC,KAAK,EAAE,IAAI,EAAE,cAAc,CAAC,sBAAsB,EAAG,WAAW,EAAE,4GAA4G,GAAG,CAAC,CAAC,CAAC;AACvQ,SAAA;AACD,QAAA,IAAI,IAAI,CAAC,YAAY,CAAC,EAAE;AAAE,YAAA,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAC,CAAC,EAAA;;AAAO,gBAAA,CAAA,EAAA,GAAA,OAAO,CAAC,KAAM,EAAC,IAAI,CAAI,KAAA,CAAA,EAAA,EAAA,CAAC,CAAC,iBAAiB,EAAE,CAAC,KAAM,CAAE,CAAA;AAAC,aAAC,CAAC,CAAA;AAAE,SAAA;AACrH,QAAA,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE;AAAE,YAAA,CAAA,KAAA,OAAO,CAAC,KAAM,EAAC,IAAI,CAAA,KAAA,CAAA,EAAA,EAAI,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC,KAAM,CAAE,CAAA;AAAE,SAAA;AACzF,QAAA,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE;AAAE,YAAA,CAAA,KAAA,OAAO,CAAC,KAAM,EAAC,IAAI,CAAA,KAAA,CAAA,EAAA,EAAI,IAAI,CAAC,MAAM,CAAC,iBAAiB,EAAE,CAAC,KAAM,CAAE,CAAA;AAAE,SAAA;AACvF,QAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;AACnB,YAAA,OAAO,CAAC,KAAM,CAAC,IAAI,CAAC,IAAIA,qBAA0B,CAAC,EAAE,QAAQ,EAAE,kBAAkB,CAAC,KAAK,EAAE,IAAI,EAAE,cAAc,CAAC,sBAAsB,EAAG,WAAW,EAAE,6FAA6F,GAAG,CAAC,CAAC,CAAC;AACxP,SAAA;AACD,QAAA,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE;AAAE,YAAA,CAAA,KAAA,OAAO,CAAC,KAAM,EAAC,IAAI,CAAA,KAAA,CAAA,EAAA,EAAI,IAAI,CAAC,MAAM,CAAC,iBAAiB,EAAE,CAAC,KAAM,CAAE,CAAA;AAAE,SAAA;AACvF,QAAA,IAAI,IAAI,CAAC,MAAM,CAAC,EAAE;AAAE,YAAA,CAAA,KAAA,OAAO,CAAC,KAAM,EAAC,IAAI,CAAA,KAAA,CAAA,EAAA,EAAI,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,KAAM,CAAE,CAAA;AAAE,SAAA;AACnF,QAAA,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;AACpB,YAAA,OAAO,CAAC,KAAM,CAAC,IAAI,CAAC,IAAIA,qBAA0B,CAAC,EAAE,QAAQ,EAAE,kBAAkB,CAAC,KAAK,EAAE,IAAI,EAAE,cAAc,CAAC,sBAAsB,EAAG,WAAW,EAAE,yFAAyF,GAAG,CAAC,CAAC,CAAC;AACpP,SAAA;AACD,QAAA,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE;AAAE,YAAA,CAAA,KAAA,OAAO,CAAC,KAAM,EAAC,IAAI,CAAA,KAAA,CAAA,EAAA,EAAI,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC,KAAM,CAAE,CAAA;AAAE,SAAA;AACzF,QAAA,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE;AAAE,YAAA,CAAA,KAAA,OAAO,CAAC,KAAM,EAAC,IAAI,CAAA,KAAA,CAAA,EAAA,EAAI,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC,KAAM,CAAE,CAAA;AAAE,SAAA;AAC7F,QAAA,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE;AAAE,YAAA,CAAA,KAAA,OAAO,CAAC,KAAM,EAAC,IAAI,CAAA,KAAA,CAAA,EAAA,EAAI,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC,KAAM,CAAE,CAAA;AAAE,SAAA;AAC7F,QAAA,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE;AAAE,YAAA,CAAA,KAAA,OAAO,CAAC,KAAM,EAAC,IAAI,CAAA,KAAA,CAAA,EAAA,EAAI,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE,CAAC,KAAM,CAAE,CAAA;AAAE,SAAA;AAC7F,QAAA,IAAI,IAAI,CAAC,YAAY,CAAC,EAAE;AAAE,YAAA,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAC,CAAC,EAAA;;AAAO,gBAAA,CAAA,EAAA,GAAA,OAAO,CAAC,KAAM,EAAC,IAAI,CAAI,KAAA,CAAA,EAAA,EAAA,CAAC,CAAC,iBAAiB,EAAE,CAAC,KAAM,CAAE,CAAA;AAAC,aAAC,CAAC,CAAA;AAAE,SAAA;AACrH,QAAA,IAAI,IAAI,CAAC,iBAAiB,CAAC,EAAE;AAAE,YAAA,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,UAAC,CAAC,EAAA;;AAAO,gBAAA,CAAA,EAAA,GAAA,OAAO,CAAC,KAAM,EAAC,IAAI,CAAI,KAAA,CAAA,EAAA,EAAA,CAAC,CAAC,iBAAiB,EAAE,CAAC,KAAM,CAAE,CAAA;AAAC,aAAC,CAAC,CAAA;AAAE,SAAA;AAC/H,QAAA,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE;AAAE,YAAA,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAC,CAAC,EAAA;;AAAO,gBAAA,CAAA,EAAA,GAAA,OAAO,CAAC,KAAM,EAAC,IAAI,CAAI,KAAA,CAAA,EAAA,EAAA,CAAC,CAAC,iBAAiB,EAAE,CAAC,KAAM,CAAE,CAAA;AAAC,aAAC,CAAC,CAAA;AAAE,SAAA;AAC3G,QAAA,IAAI,IAAI,CAAC,YAAY,CAAC,EAAE;AAAE,YAAA,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAC,CAAC,EAAA;;AAAO,gBAAA,CAAA,EAAA,GAAA,OAAO,CAAC,KAAM,EAAC,IAAI,CAAI,KAAA,CAAA,EAAA,EAAA,CAAC,CAAC,iBAAiB,EAAE,CAAC,KAAM,CAAE,CAAA;AAAC,aAAC,CAAC,CAAA;AAAE,SAAA;AACrH,QAAA,IAAI,IAAI,CAAC,YAAY,CAAC,EAAE;AAAE,YAAA,CAAA,KAAA,OAAO,CAAC,KAAM,EAAC,IAAI,CAAA,KAAA,CAAA,EAAA,EAAI,IAAI,CAAC,UAAU,CAAC,iBAAiB,EAAE,CAAC,KAAM,CAAE,CAAA;AAAE,SAAA;AAC/F,QAAA,IAAI,IAAI,CAAC,MAAM,CAAC,EAAE;AAAE,YAAA,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,UAAC,CAAC,EAAA;;AAAO,gBAAA,CAAA,EAAA,GAAA,OAAO,CAAC,KAAM,EAAC,IAAI,CAAI,KAAA,CAAA,EAAA,EAAA,CAAC,CAAC,iBAAiB,EAAE,CAAC,KAAM,CAAE,CAAA;AAAC,aAAC,CAAC,CAAA;AAAE,SAAA;AACzG,QAAA,OAAO,OAAO,CAAC;KAChB,CAAA;AAtJD;;AAEG;IACoB,cAAa,CAAA,aAAA,GAAU,gBAAgB,CAAC;AAyC/D;;AAEG;IACuB,cAAuB,CAAA,uBAAA,GAAQ,IAAI,CAAC;IAwGhE,OAAC,cAAA,CAAA;AAAA,CAxJD,CAAoCC,cAAmB,CAwJtD;;;;"}