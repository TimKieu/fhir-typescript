{"version":3,"file":"Media.js","sources":["../../src/fhir/Media.ts"],"sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4.core version: 4.0.1\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR Resource: Media\r\n\r\nimport * as fhir from '../fhir.js';\r\n\r\n// @ts-ignore\r\nimport { EventStatusCodings, EventStatusCodingType,} from '../fhirValueSets/EventStatusCodings.js';\r\n// @ts-ignore\r\nimport { EventStatusCodes,  EventStatusCodeType } from '../fhirValueSets/EventStatusCodes.js';\r\n// @ts-ignore\r\nimport { MediaTypeCodings, MediaTypeCodingType,} from '../fhirValueSets/MediaTypeCodings.js';\r\n// @ts-ignore\r\nimport { MediaTypeCodes,  MediaTypeCodeType } from '../fhirValueSets/MediaTypeCodes.js';\r\n// @ts-ignore\r\nimport { MediaViewCodings, MediaViewCodingType,} from '../fhirValueSets/MediaViewCodings.js';\r\n// @ts-ignore\r\nimport { MediaViewCodes,  MediaViewCodeType } from '../fhirValueSets/MediaViewCodes.js';\r\n// @ts-ignore\r\nimport { ProcedureReasonCodings, ProcedureReasonCodingType,} from '../fhirValueSets/ProcedureReasonCodings.js';\r\n// @ts-ignore\r\nimport { ProcedureReasonCodes,  ProcedureReasonCodeType } from '../fhirValueSets/ProcedureReasonCodes.js';\r\n// @ts-ignore\r\nimport { BodySiteCodings, BodySiteCodingType,} from '../fhirValueSets/BodySiteCodings.js';\r\n// @ts-ignore\r\nimport { BodySiteCodes,  BodySiteCodeType } from '../fhirValueSets/BodySiteCodes.js';\r\n// @ts-ignore\r\nimport { IssueTypeCodes } from '../fhirValueSets/IssueTypeCodes.js';\r\n// @ts-ignore\r\nimport { IssueSeverityCodes } from '../fhirValueSets/IssueSeverityCodes.js';\r\n/**\r\n * Valid arguments for the Media type.\r\n */\r\nexport interface MediaArgs extends fhir.DomainResourceArgs {\r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  resourceType: \"Media\"|undefined;\r\n  /**\r\n   * The identifier label and use can be used to determine what kind of identifier it is.\r\n   */\r\n  identifier?: fhir.IdentifierArgs[]|undefined;\r\n  /**\r\n   * A procedure that is fulfilled in whole or in part by the creation of this media.\r\n   */\r\n  basedOn?: fhir.ReferenceArgs[]|undefined;\r\n  /**\r\n   * Not to be used to link an event to an Encounter - use Media.encounter for that.\r\n   * [The allowed reference resources may be adjusted as appropriate for the event resource].\r\n   */\r\n  partOf?: fhir.ReferenceArgs[]|undefined;\r\n  /**\r\n   * A nominal state-transition diagram can be found in the [[event.html#statemachine | Event pattern]] documentation\r\n   * Unknown does not represent \"other\" - one of the defined statuses must apply.  Unknown is used when the authoring system is not sure what the current status is.\r\n   */\r\n  status: EventStatusCodeType|null;\r\n  /**\r\n   * A code that classifies whether the media is an image, video or audio recording or some other media category.\r\n   */\r\n  type?: fhir.CodeableConceptArgs|undefined;\r\n  /**\r\n   * Details of the type of the media - usually, how it was acquired (what type of device). If images sourced from a DICOM system, are wrapped in a Media resource, then this is the modality.\r\n   */\r\n  modality?: fhir.CodeableConceptArgs|undefined;\r\n  /**\r\n   * The name of the imaging view e.g. Lateral or Antero-posterior (AP).\r\n   */\r\n  view?: fhir.CodeableConceptArgs|undefined;\r\n  /**\r\n   * Who/What this Media is a record of.\r\n   */\r\n  subject?: fhir.ReferenceArgs|undefined;\r\n  /**\r\n   * This will typically be the encounter the media occurred within.\r\n   */\r\n  encounter?: fhir.ReferenceArgs|undefined;\r\n  /**\r\n   * The date and time(s) at which the media was collected.\r\n   */\r\n  created?: fhir.FhirDateTime|fhir.Period|undefined;\r\n  /**\r\n   * The date and time(s) at which the media was collected.\r\n   */\r\n  createdDateTime?: fhir.FhirDateTime|string|undefined;\r\n  /**\r\n   * The date and time(s) at which the media was collected.\r\n   */\r\n  createdPeriod?: fhir.PeriodArgs|undefined;\r\n  /**\r\n   * It may be the same as the [`lastUpdated` ](resource-definitions.html#Meta.lastUpdated) time of the resource itself.  For Observations that do require review and verification for certain updates, it might not be the same as the `lastUpdated` time of the resource itself due to a non-clinically significant update that does not require the new version to be reviewed and verified again.\r\n   */\r\n  issued?: fhir.FhirInstant|string|undefined;\r\n  /**\r\n   * The person who administered the collection of the image.\r\n   */\r\n  operator?: fhir.ReferenceArgs|undefined;\r\n  /**\r\n   * Textual reasons can be captured using reasonCode.text.\r\n   */\r\n  reasonCode?: fhir.CodeableConceptArgs[]|undefined;\r\n  /**\r\n   * Only used if not implicit in code found in Observation.code.  In many systems, this may be represented as a related observation instead of an inline component.   \r\n   * If the use case requires BodySite to be handled as a separate resource (e.g. to identify and track separately) then use the standard extension[ bodySite](extension-bodysite.html).\r\n   */\r\n  bodySite?: fhir.CodeableConceptArgs|undefined;\r\n  /**\r\n   * The name of the device / manufacturer of the device  that was used to make the recording.\r\n   */\r\n  deviceName?: fhir.FhirString|string|undefined;\r\n  /**\r\n   * An extension should be used if further typing of the device is needed.  Secondary devices used to support collecting a media can be represented using either extension or through the Observation.related element.\r\n   */\r\n  device?: fhir.ReferenceArgs|undefined;\r\n  /**\r\n   * Height of the image in pixels (photo/video).\r\n   */\r\n  height?: fhir.FhirPositiveInt|number|undefined;\r\n  /**\r\n   * Width of the image in pixels (photo/video).\r\n   */\r\n  width?: fhir.FhirPositiveInt|number|undefined;\r\n  /**\r\n   * if the number of frames is not supplied, the value may be unknown. Applications should not assume that there is only one frame unless it is explicitly stated.\r\n   */\r\n  frames?: fhir.FhirPositiveInt|number|undefined;\r\n  /**\r\n   * The duration might differ from occurrencePeriod if recording was paused.\r\n   */\r\n  duration?: fhir.FhirDecimal|number|undefined;\r\n  /**\r\n   * Recommended content types: image/jpeg, image/png, image/tiff, video/mpeg, audio/mp4, application/dicom. Application/dicom can contain the transfer syntax as a parameter.  For media that covers a period of time (video/sound), the content.creationTime is the end time. Creation time is used for tracking, organizing versions and searching.\r\n   */\r\n  content: fhir.AttachmentArgs|null;\r\n  /**\r\n   * Not to be used for observations, conclusions, etc. Instead use an [Observation](observation.html) based on the Media/ImagingStudy resource.\r\n   */\r\n  note?: fhir.AnnotationArgs[]|undefined;\r\n}\r\n\r\n/**\r\n * A photo, video, or audio recording acquired or used in healthcare. The actual content may be inline or provided by direct reference.\r\n */\r\nexport class Media extends fhir.DomainResource {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'Media';\r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  public resourceType: \"Media\";\r\n  /**\r\n   * The identifier label and use can be used to determine what kind of identifier it is.\r\n   */\r\n  public identifier?: fhir.Identifier[];\r\n  /**\r\n   * A procedure that is fulfilled in whole or in part by the creation of this media.\r\n   */\r\n  public basedOn?: fhir.Reference[];\r\n  /**\r\n   * Not to be used to link an event to an Encounter - use Media.encounter for that.\r\n   * [The allowed reference resources may be adjusted as appropriate for the event resource].\r\n   */\r\n  public partOf?: fhir.Reference[];\r\n  /**\r\n   * A nominal state-transition diagram can be found in the [[event.html#statemachine | Event pattern]] documentation\r\n   * Unknown does not represent \"other\" - one of the defined statuses must apply.  Unknown is used when the authoring system is not sure what the current status is.\r\n   */\r\n  public status: EventStatusCodeType|null;\r\n  /**\r\n   * A code that classifies whether the media is an image, video or audio recording or some other media category.\r\n   */\r\n  public type?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * Details of the type of the media - usually, how it was acquired (what type of device). If images sourced from a DICOM system, are wrapped in a Media resource, then this is the modality.\r\n   */\r\n  public modality?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * The name of the imaging view e.g. Lateral or Antero-posterior (AP).\r\n   */\r\n  public view?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * Who/What this Media is a record of.\r\n   */\r\n  public subject?: fhir.Reference|undefined;\r\n  /**\r\n   * This will typically be the encounter the media occurred within.\r\n   */\r\n  public encounter?: fhir.Reference|undefined;\r\n  /**\r\n   * The date and time(s) at which the media was collected.\r\n   */\r\n  public created?: (fhir.FhirDateTime|fhir.Period)|undefined;\r\n  /**\r\n   * Internal flag to properly serialize choice-type element Media.created[x]\r\n   */\r\n  protected static readonly _fts_createdIsChoice:true = true;\r\n  /**\r\n   * It may be the same as the [`lastUpdated` ](resource-definitions.html#Meta.lastUpdated) time of the resource itself.  For Observations that do require review and verification for certain updates, it might not be the same as the `lastUpdated` time of the resource itself due to a non-clinically significant update that does not require the new version to be reviewed and verified again.\r\n   */\r\n  public issued?: fhir.FhirInstant|undefined;\r\n  /**\r\n   * The person who administered the collection of the image.\r\n   */\r\n  public operator?: fhir.Reference|undefined;\r\n  /**\r\n   * Textual reasons can be captured using reasonCode.text.\r\n   */\r\n  public reasonCode?: fhir.CodeableConcept[];\r\n  /**\r\n   * Only used if not implicit in code found in Observation.code.  In many systems, this may be represented as a related observation instead of an inline component.   \r\n   * If the use case requires BodySite to be handled as a separate resource (e.g. to identify and track separately) then use the standard extension[ bodySite](extension-bodysite.html).\r\n   */\r\n  public bodySite?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * The name of the device / manufacturer of the device  that was used to make the recording.\r\n   */\r\n  public deviceName?: fhir.FhirString|undefined;\r\n  /**\r\n   * An extension should be used if further typing of the device is needed.  Secondary devices used to support collecting a media can be represented using either extension or through the Observation.related element.\r\n   */\r\n  public device?: fhir.Reference|undefined;\r\n  /**\r\n   * Height of the image in pixels (photo/video).\r\n   */\r\n  public height?: fhir.FhirPositiveInt|undefined;\r\n  /**\r\n   * Width of the image in pixels (photo/video).\r\n   */\r\n  public width?: fhir.FhirPositiveInt|undefined;\r\n  /**\r\n   * if the number of frames is not supplied, the value may be unknown. Applications should not assume that there is only one frame unless it is explicitly stated.\r\n   */\r\n  public frames?: fhir.FhirPositiveInt|undefined;\r\n  /**\r\n   * The duration might differ from occurrencePeriod if recording was paused.\r\n   */\r\n  public duration?: fhir.FhirDecimal|undefined;\r\n  /**\r\n   * Recommended content types: image/jpeg, image/png, image/tiff, video/mpeg, audio/mp4, application/dicom. Application/dicom can contain the transfer syntax as a parameter.  For media that covers a period of time (video/sound), the content.creationTime is the end time. Creation time is used for tracking, organizing versions and searching.\r\n   */\r\n  public content: fhir.Attachment|null;\r\n  /**\r\n   * Not to be used for observations, conclusions, etc. Instead use an [Observation](observation.html) based on the Media/ImagingStudy resource.\r\n   */\r\n  public note?: fhir.Annotation[];\r\n  /**\r\n   * Default constructor for Media - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<MediaArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    this.resourceType = 'Media';\r\n    if (source['identifier']) { this.identifier = source.identifier.map((x) => new fhir.Identifier(x)); }\r\n    else { this.identifier = []; }\r\n    if (source['basedOn']) { this.basedOn = source.basedOn.map((x) => new fhir.Reference(x)); }\r\n    else { this.basedOn = []; }\r\n    if (source['partOf']) { this.partOf = source.partOf.map((x) => new fhir.Reference(x)); }\r\n    else { this.partOf = []; }\r\n    if (source['status']) { this.status = source.status; }\r\n    else { this.status = null; }\r\n    if (source['type']) { this.type = new fhir.CodeableConcept(source.type); }\r\n    if (source['modality']) { this.modality = new fhir.CodeableConcept(source.modality); }\r\n    if (source['view']) { this.view = new fhir.CodeableConcept(source.view); }\r\n    if (source['subject']) { this.subject = new fhir.Reference(source.subject); }\r\n    if (source['encounter']) { this.encounter = new fhir.Reference(source.encounter); }\r\n    if (source['created']) { this.created = source.created; }\r\n    else if (source['createdDateTime']) { this.created = new fhir.FhirDateTime({value: source.createdDateTime}); }\r\n    else if (source['createdPeriod']) { this.created = new fhir.Period(source.createdPeriod); }\r\n    if (source['issued']) { this.issued = new fhir.FhirInstant({value: source.issued}); }\r\n    if (source['operator']) { this.operator = new fhir.Reference(source.operator); }\r\n    if (source['reasonCode']) { this.reasonCode = source.reasonCode.map((x) => new fhir.CodeableConcept(x)); }\r\n    else { this.reasonCode = []; }\r\n    if (source['bodySite']) { this.bodySite = new fhir.CodeableConcept(source.bodySite); }\r\n    if (source['deviceName']) { this.deviceName = new fhir.FhirString({value: source.deviceName}); }\r\n    if (source['device']) { this.device = new fhir.Reference(source.device); }\r\n    if (source['height']) { this.height = new fhir.FhirPositiveInt({value: source.height}); }\r\n    if (source['width']) { this.width = new fhir.FhirPositiveInt({value: source.width}); }\r\n    if (source['frames']) { this.frames = new fhir.FhirPositiveInt({value: source.frames}); }\r\n    if (source['duration']) { this.duration = new fhir.FhirDecimal({value: source.duration}); }\r\n    if (source['content']) { this.content = new fhir.Attachment(source.content); }\r\n    else { this.content = null; }\r\n    if (source['note']) { this.note = source.note.map((x) => new fhir.Annotation(x)); }\r\n    else { this.note = []; }\r\n  }\r\n  /**\r\n   * Required-bound Value Set for status (Media.status)\r\n   */\r\n  public static statusRequiredCoding():EventStatusCodingType {\r\n    return EventStatusCodings;\r\n  }\r\n  /**\r\n   * Extensible-bound Value Set for type (Media.type)\r\n   */\r\n  public static typeExtensibleCoding():MediaTypeCodingType {\r\n    return MediaTypeCodings;\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (!this['resourceType']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property resourceType:\"Media\" fhir: Media.resourceType:\"Media\"', }));\r\n    }\r\n    if (this[\"identifier\"]) { this.identifier.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"basedOn\"]) { this.basedOn.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"partOf\"]) { this.partOf.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (!this['status']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property status:EventStatusCodeType fhir: Media.status:code', }));\r\n    }\r\n    if (this[\"type\"]) { outcome.issue!.push(...this.type.doModelValidation().issue!); }\r\n    if (this[\"modality\"]) { outcome.issue!.push(...this.modality.doModelValidation().issue!); }\r\n    if (this[\"view\"]) { outcome.issue!.push(...this.view.doModelValidation().issue!); }\r\n    if (this[\"subject\"]) { outcome.issue!.push(...this.subject.doModelValidation().issue!); }\r\n    if (this[\"encounter\"]) { outcome.issue!.push(...this.encounter.doModelValidation().issue!); }\r\n    if (this[\"issued\"]) { outcome.issue!.push(...this.issued.doModelValidation().issue!); }\r\n    if (this[\"operator\"]) { outcome.issue!.push(...this.operator.doModelValidation().issue!); }\r\n    if (this[\"reasonCode\"]) { this.reasonCode.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"bodySite\"]) { outcome.issue!.push(...this.bodySite.doModelValidation().issue!); }\r\n    if (this[\"deviceName\"]) { outcome.issue!.push(...this.deviceName.doModelValidation().issue!); }\r\n    if (this[\"device\"]) { outcome.issue!.push(...this.device.doModelValidation().issue!); }\r\n    if (this[\"height\"]) { outcome.issue!.push(...this.height.doModelValidation().issue!); }\r\n    if (this[\"width\"]) { outcome.issue!.push(...this.width.doModelValidation().issue!); }\r\n    if (this[\"frames\"]) { outcome.issue!.push(...this.frames.doModelValidation().issue!); }\r\n    if (this[\"duration\"]) { outcome.issue!.push(...this.duration.doModelValidation().issue!); }\r\n    if (!this['content']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property content:fhir.Attachment fhir: Media.content:Attachment', }));\r\n    }\r\n    if (this[\"content\"]) { outcome.issue!.push(...this.content.doModelValidation().issue!); }\r\n    if (this[\"note\"]) { this.note.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    return outcome;\r\n  }\r\n}\r\n"],"names":["fhir.Identifier","fhir.Reference","fhir.CodeableConcept","fhir.FhirDateTime","fhir.Period","fhir.FhirInstant","fhir.FhirString","fhir.FhirPositiveInt","fhir.FhirDecimal","fhir.Attachment","fhir.Annotation","fhir.OperationOutcomeIssue","fhir.DomainResource"],"mappings":"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"}