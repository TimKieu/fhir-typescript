{"version":3,"file":"CommunicationRequest.js","sources":["../../src/fhir/CommunicationRequest.ts"],"sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4.core version: 4.0.1\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR Resource: CommunicationRequest\r\n\r\nimport * as fhir from '../fhir.js';\r\n\r\n// @ts-ignore\r\nimport { RequestStatusCodings, RequestStatusCodingType,} from '../fhirValueSets/RequestStatusCodings.js';\r\n// @ts-ignore\r\nimport { RequestStatusCodes,  RequestStatusCodeType } from '../fhirValueSets/RequestStatusCodes.js';\r\n// @ts-ignore\r\nimport { CommunicationCategoryCodings, CommunicationCategoryCodingType,} from '../fhirValueSets/CommunicationCategoryCodings.js';\r\n// @ts-ignore\r\nimport { CommunicationCategoryCodes,  CommunicationCategoryCodeType } from '../fhirValueSets/CommunicationCategoryCodes.js';\r\n// @ts-ignore\r\nimport { RequestPriorityCodings, RequestPriorityCodingType,} from '../fhirValueSets/RequestPriorityCodings.js';\r\n// @ts-ignore\r\nimport { RequestPriorityCodes,  RequestPriorityCodeType } from '../fhirValueSets/RequestPriorityCodes.js';\r\n// @ts-ignore\r\nimport { V3ParticipationModeCodings, V3ParticipationModeCodingType,} from '../fhirValueSets/V3ParticipationModeCodings.js';\r\n// @ts-ignore\r\nimport { V3ParticipationModeCodes,  V3ParticipationModeCodeType } from '../fhirValueSets/V3ParticipationModeCodes.js';\r\n// @ts-ignore\r\nimport { V3ActReasonCodings, V3ActReasonCodingType,} from '../fhirValueSets/V3ActReasonCodings.js';\r\n// @ts-ignore\r\nimport { V3ActReasonCodes,  V3ActReasonCodeType } from '../fhirValueSets/V3ActReasonCodes.js';\r\n// @ts-ignore\r\nimport { IssueTypeCodes } from '../fhirValueSets/IssueTypeCodes.js';\r\n// @ts-ignore\r\nimport { IssueSeverityCodes } from '../fhirValueSets/IssueSeverityCodes.js';\r\n/**\r\n * Valid arguments for the CommunicationRequestPayload type.\r\n */\r\nexport interface CommunicationRequestPayloadArgs extends fhir.BackboneElementArgs {\r\n  /**\r\n   * The communicated content (or for multi-part communications, one portion of the communication).\r\n   */\r\n  content?: fhir.FhirString|fhir.Attachment|fhir.Reference|undefined;\r\n  /**\r\n   * The communicated content (or for multi-part communications, one portion of the communication).\r\n   */\r\n  contentString?: fhir.FhirString|string|undefined;\r\n  /**\r\n   * The communicated content (or for multi-part communications, one portion of the communication).\r\n   */\r\n  contentAttachment?: fhir.AttachmentArgs|undefined;\r\n  /**\r\n   * The communicated content (or for multi-part communications, one portion of the communication).\r\n   */\r\n  contentReference?: fhir.ReferenceArgs|undefined;\r\n}\r\n\r\n/**\r\n * Text, attachment(s), or resource(s) to be communicated to the recipient.\r\n */\r\nexport class CommunicationRequestPayload extends fhir.BackboneElement {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'CommunicationRequestPayload';\r\n  /**\r\n   * The communicated content (or for multi-part communications, one portion of the communication).\r\n   */\r\n  public content: (fhir.FhirString|fhir.Attachment|fhir.Reference)|null;\r\n  /**\r\n   * Internal flag to properly serialize choice-type element CommunicationRequest.payload.content[x]\r\n   */\r\n  protected static readonly _fts_contentIsChoice:true = true;\r\n  /**\r\n   * Default constructor for CommunicationRequestPayload - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<CommunicationRequestPayloadArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    if (source['content']) { this.content = source.content; }\r\n    else if (source['contentString']) { this.content = new fhir.FhirString({value: source.contentString}); }\r\n    else if (source['contentAttachment']) { this.content = new fhir.Attachment(source.contentAttachment); }\r\n    else if (source['contentReference']) { this.content = new fhir.Reference(source.contentReference); }\r\n    else { this.content = null; }\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (!this['content']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property content: fhir: CommunicationRequest.payload.content[x]:', }));\r\n    }\r\n    return outcome;\r\n  }\r\n}\r\n/**\r\n * Valid arguments for the CommunicationRequest type.\r\n */\r\nexport interface CommunicationRequestArgs extends fhir.DomainResourceArgs {\r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  resourceType: \"CommunicationRequest\"|undefined;\r\n  /**\r\n   * This is a business identifier, not a resource identifier (see [discussion](resource.html#identifiers)).  It is best practice for the identifier to only appear on a single resource instance, however business practices may occasionally dictate that multiple resource instances with the same identifier can exist - possibly even with different resource types.  For example, multiple Patient and a Person resource instance might share the same social insurance number.\r\n   */\r\n  identifier?: fhir.IdentifierArgs[]|undefined;\r\n  /**\r\n   * A plan or proposal that is fulfilled in whole or in part by this request.\r\n   */\r\n  basedOn?: fhir.ReferenceArgs[]|undefined;\r\n  /**\r\n   * The replacement could be because the initial request was immediately rejected (due to an issue) or because the previous request was completed, but the need for the action described by the request remains ongoing.\r\n   */\r\n  replaces?: fhir.ReferenceArgs[]|undefined;\r\n  /**\r\n   * Requests are linked either by a \"basedOn\" relationship (i.e. one request is fulfilling another) or by having a common requisition.  Requests that are part of the same requisition are generally treated independently from the perspective of changing their state or maintaining them after initial creation.\r\n   */\r\n  groupIdentifier?: fhir.IdentifierArgs|undefined;\r\n  /**\r\n   * The status of the proposal or order.\r\n   */\r\n  status: RequestStatusCodeType|null;\r\n  /**\r\n   * This is generally only used for \"exception\" statuses such as \"suspended\" or \"cancelled\".  The reason why the CommunicationRequest was created at all is captured in reasonCode, not here.  [distinct reason codes for different statuses can be enforced using invariants if they are universal bindings].\r\n   */\r\n  statusReason?: fhir.CodeableConceptArgs|undefined;\r\n  /**\r\n   * There may be multiple axes of categorization and one communication request may serve multiple purposes.\r\n   */\r\n  category?: fhir.CodeableConceptArgs[]|undefined;\r\n  /**\r\n   * Characterizes how quickly the proposed act must be initiated. Includes concepts such as stat, urgent, routine.\r\n   */\r\n  priority?: RequestPriorityCodeType|undefined;\r\n  /**\r\n   * The attributes provided with the request qualify what is not to be done.\r\n   */\r\n  doNotPerform?: fhir.FhirBoolean|boolean|undefined;\r\n  /**\r\n   * A channel that was used for this communication (e.g. email, fax).\r\n   */\r\n  medium?: fhir.CodeableConceptArgs[]|undefined;\r\n  /**\r\n   * The patient or group that is the focus of this communication request.\r\n   */\r\n  subject?: fhir.ReferenceArgs|undefined;\r\n  /**\r\n   * Don't use CommunicationRequest.about element when a more specific element exists, such as basedOn, reasonReference, or replaces.\r\n   */\r\n  about?: fhir.ReferenceArgs[]|undefined;\r\n  /**\r\n   * This will typically be the encounter the event occurred within, but some activities may be initiated prior to or after the official completion of an encounter but still be tied to the context of the encounter.\r\n   */\r\n  encounter?: fhir.ReferenceArgs|undefined;\r\n  /**\r\n   * Text, attachment(s), or resource(s) to be communicated to the recipient.\r\n   */\r\n  payload?: fhir.CommunicationRequestPayloadArgs[]|undefined;\r\n  /**\r\n   * The time when this communication is to occur.\r\n   */\r\n  occurrence?: fhir.FhirDateTime|fhir.Period|undefined;\r\n  /**\r\n   * The time when this communication is to occur.\r\n   */\r\n  occurrenceDateTime?: fhir.FhirDateTime|string|undefined;\r\n  /**\r\n   * The time when this communication is to occur.\r\n   */\r\n  occurrencePeriod?: fhir.PeriodArgs|undefined;\r\n  /**\r\n   * For draft requests, indicates the date of initial creation.  For requests with other statuses, indicates the date of activation.\r\n   */\r\n  authoredOn?: fhir.FhirDateTime|string|undefined;\r\n  /**\r\n   * The device, individual, or organization who initiated the request and has responsibility for its activation.\r\n   */\r\n  requester?: fhir.ReferenceArgs|undefined;\r\n  /**\r\n   * The entity (e.g. person, organization, clinical information system, device, group, or care team) which is the intended target of the communication.\r\n   */\r\n  recipient?: fhir.ReferenceArgs[]|undefined;\r\n  /**\r\n   * The entity (e.g. person, organization, clinical information system, or device) which is to be the source of the communication.\r\n   */\r\n  sender?: fhir.ReferenceArgs|undefined;\r\n  /**\r\n   * Textual reasons can be captured using reasonCode.text.\r\n   */\r\n  reasonCode?: fhir.CodeableConceptArgs[]|undefined;\r\n  /**\r\n   * Indicates another resource whose existence justifies this request.\r\n   */\r\n  reasonReference?: fhir.ReferenceArgs[]|undefined;\r\n  /**\r\n   * Comments made about the request by the requester, sender, recipient, subject or other participants.\r\n   */\r\n  note?: fhir.AnnotationArgs[]|undefined;\r\n}\r\n\r\n/**\r\n * A request to convey information; e.g. the CDS system proposes that an alert be sent to a responsible provider, the CDS system proposes that the public health agency be notified about a reportable condition.\r\n */\r\nexport class CommunicationRequest extends fhir.DomainResource {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'CommunicationRequest';\r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  public resourceType: \"CommunicationRequest\";\r\n  /**\r\n   * This is a business identifier, not a resource identifier (see [discussion](resource.html#identifiers)).  It is best practice for the identifier to only appear on a single resource instance, however business practices may occasionally dictate that multiple resource instances with the same identifier can exist - possibly even with different resource types.  For example, multiple Patient and a Person resource instance might share the same social insurance number.\r\n   */\r\n  public identifier?: fhir.Identifier[];\r\n  /**\r\n   * A plan or proposal that is fulfilled in whole or in part by this request.\r\n   */\r\n  public basedOn?: fhir.Reference[];\r\n  /**\r\n   * The replacement could be because the initial request was immediately rejected (due to an issue) or because the previous request was completed, but the need for the action described by the request remains ongoing.\r\n   */\r\n  public replaces?: fhir.Reference[];\r\n  /**\r\n   * Requests are linked either by a \"basedOn\" relationship (i.e. one request is fulfilling another) or by having a common requisition.  Requests that are part of the same requisition are generally treated independently from the perspective of changing their state or maintaining them after initial creation.\r\n   */\r\n  public groupIdentifier?: fhir.Identifier|undefined;\r\n  /**\r\n   * The status of the proposal or order.\r\n   */\r\n  public status: RequestStatusCodeType|null;\r\n  /**\r\n   * This is generally only used for \"exception\" statuses such as \"suspended\" or \"cancelled\".  The reason why the CommunicationRequest was created at all is captured in reasonCode, not here.  [distinct reason codes for different statuses can be enforced using invariants if they are universal bindings].\r\n   */\r\n  public statusReason?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * There may be multiple axes of categorization and one communication request may serve multiple purposes.\r\n   */\r\n  public category?: fhir.CodeableConcept[];\r\n  /**\r\n   * Characterizes how quickly the proposed act must be initiated. Includes concepts such as stat, urgent, routine.\r\n   */\r\n  public priority?: RequestPriorityCodeType|undefined;\r\n  /**\r\n   * The attributes provided with the request qualify what is not to be done.\r\n   */\r\n  public doNotPerform?: fhir.FhirBoolean|undefined;\r\n  /**\r\n   * A channel that was used for this communication (e.g. email, fax).\r\n   */\r\n  public medium?: fhir.CodeableConcept[];\r\n  /**\r\n   * The patient or group that is the focus of this communication request.\r\n   */\r\n  public subject?: fhir.Reference|undefined;\r\n  /**\r\n   * Don't use CommunicationRequest.about element when a more specific element exists, such as basedOn, reasonReference, or replaces.\r\n   */\r\n  public about?: fhir.Reference[];\r\n  /**\r\n   * This will typically be the encounter the event occurred within, but some activities may be initiated prior to or after the official completion of an encounter but still be tied to the context of the encounter.\r\n   */\r\n  public encounter?: fhir.Reference|undefined;\r\n  /**\r\n   * Text, attachment(s), or resource(s) to be communicated to the recipient.\r\n   */\r\n  public payload?: fhir.CommunicationRequestPayload[];\r\n  /**\r\n   * The time when this communication is to occur.\r\n   */\r\n  public occurrence?: (fhir.FhirDateTime|fhir.Period)|undefined;\r\n  /**\r\n   * Internal flag to properly serialize choice-type element CommunicationRequest.occurrence[x]\r\n   */\r\n  protected static readonly _fts_occurrenceIsChoice:true = true;\r\n  /**\r\n   * For draft requests, indicates the date of initial creation.  For requests with other statuses, indicates the date of activation.\r\n   */\r\n  public authoredOn?: fhir.FhirDateTime|undefined;\r\n  /**\r\n   * The device, individual, or organization who initiated the request and has responsibility for its activation.\r\n   */\r\n  public requester?: fhir.Reference|undefined;\r\n  /**\r\n   * The entity (e.g. person, organization, clinical information system, device, group, or care team) which is the intended target of the communication.\r\n   */\r\n  public recipient?: fhir.Reference[];\r\n  /**\r\n   * The entity (e.g. person, organization, clinical information system, or device) which is to be the source of the communication.\r\n   */\r\n  public sender?: fhir.Reference|undefined;\r\n  /**\r\n   * Textual reasons can be captured using reasonCode.text.\r\n   */\r\n  public reasonCode?: fhir.CodeableConcept[];\r\n  /**\r\n   * Indicates another resource whose existence justifies this request.\r\n   */\r\n  public reasonReference?: fhir.Reference[];\r\n  /**\r\n   * Comments made about the request by the requester, sender, recipient, subject or other participants.\r\n   */\r\n  public note?: fhir.Annotation[];\r\n  /**\r\n   * Default constructor for CommunicationRequest - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<CommunicationRequestArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    this.resourceType = 'CommunicationRequest';\r\n    if (source['identifier']) { this.identifier = source.identifier.map((x) => new fhir.Identifier(x)); }\r\n    else { this.identifier = []; }\r\n    if (source['basedOn']) { this.basedOn = source.basedOn.map((x) => new fhir.Reference(x)); }\r\n    else { this.basedOn = []; }\r\n    if (source['replaces']) { this.replaces = source.replaces.map((x) => new fhir.Reference(x)); }\r\n    else { this.replaces = []; }\r\n    if (source['groupIdentifier']) { this.groupIdentifier = new fhir.Identifier(source.groupIdentifier); }\r\n    if (source['status']) { this.status = source.status; }\r\n    else { this.status = null; }\r\n    if (source['statusReason']) { this.statusReason = new fhir.CodeableConcept(source.statusReason); }\r\n    if (source['category']) { this.category = source.category.map((x) => new fhir.CodeableConcept(x)); }\r\n    else { this.category = []; }\r\n    if (source['priority']) { this.priority = source.priority; }\r\n    if (source['doNotPerform']) { this.doNotPerform = new fhir.FhirBoolean({value: source.doNotPerform}); }\r\n    if (source['medium']) { this.medium = source.medium.map((x) => new fhir.CodeableConcept(x)); }\r\n    else { this.medium = []; }\r\n    if (source['subject']) { this.subject = new fhir.Reference(source.subject); }\r\n    if (source['about']) { this.about = source.about.map((x) => new fhir.Reference(x)); }\r\n    else { this.about = []; }\r\n    if (source['encounter']) { this.encounter = new fhir.Reference(source.encounter); }\r\n    if (source['payload']) { this.payload = source.payload.map((x) => new fhir.CommunicationRequestPayload(x)); }\r\n    else { this.payload = []; }\r\n    if (source['occurrence']) { this.occurrence = source.occurrence; }\r\n    else if (source['occurrenceDateTime']) { this.occurrence = new fhir.FhirDateTime({value: source.occurrenceDateTime}); }\r\n    else if (source['occurrencePeriod']) { this.occurrence = new fhir.Period(source.occurrencePeriod); }\r\n    if (source['authoredOn']) { this.authoredOn = new fhir.FhirDateTime({value: source.authoredOn}); }\r\n    if (source['requester']) { this.requester = new fhir.Reference(source.requester); }\r\n    if (source['recipient']) { this.recipient = source.recipient.map((x) => new fhir.Reference(x)); }\r\n    else { this.recipient = []; }\r\n    if (source['sender']) { this.sender = new fhir.Reference(source.sender); }\r\n    if (source['reasonCode']) { this.reasonCode = source.reasonCode.map((x) => new fhir.CodeableConcept(x)); }\r\n    else { this.reasonCode = []; }\r\n    if (source['reasonReference']) { this.reasonReference = source.reasonReference.map((x) => new fhir.Reference(x)); }\r\n    else { this.reasonReference = []; }\r\n    if (source['note']) { this.note = source.note.map((x) => new fhir.Annotation(x)); }\r\n    else { this.note = []; }\r\n  }\r\n  /**\r\n   * Required-bound Value Set for status (CommunicationRequest.status)\r\n   */\r\n  public static statusRequiredCoding():RequestStatusCodingType {\r\n    return RequestStatusCodings;\r\n  }\r\n  /**\r\n   * Required-bound Value Set for priority (CommunicationRequest.priority)\r\n   */\r\n  public static priorityRequiredCoding():RequestPriorityCodingType {\r\n    return RequestPriorityCodings;\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (!this['resourceType']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property resourceType:\"CommunicationRequest\" fhir: CommunicationRequest.resourceType:\"CommunicationRequest\"', }));\r\n    }\r\n    if (this[\"identifier\"]) { this.identifier.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"basedOn\"]) { this.basedOn.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"replaces\"]) { this.replaces.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"groupIdentifier\"]) { outcome.issue!.push(...this.groupIdentifier.doModelValidation().issue!); }\r\n    if (!this['status']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property status:RequestStatusCodeType fhir: CommunicationRequest.status:code', }));\r\n    }\r\n    if (this[\"statusReason\"]) { outcome.issue!.push(...this.statusReason.doModelValidation().issue!); }\r\n    if (this[\"category\"]) { this.category.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"doNotPerform\"]) { outcome.issue!.push(...this.doNotPerform.doModelValidation().issue!); }\r\n    if (this[\"medium\"]) { this.medium.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"subject\"]) { outcome.issue!.push(...this.subject.doModelValidation().issue!); }\r\n    if (this[\"about\"]) { this.about.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"encounter\"]) { outcome.issue!.push(...this.encounter.doModelValidation().issue!); }\r\n    if (this[\"payload\"]) { this.payload.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"authoredOn\"]) { outcome.issue!.push(...this.authoredOn.doModelValidation().issue!); }\r\n    if (this[\"requester\"]) { outcome.issue!.push(...this.requester.doModelValidation().issue!); }\r\n    if (this[\"recipient\"]) { this.recipient.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"sender\"]) { outcome.issue!.push(...this.sender.doModelValidation().issue!); }\r\n    if (this[\"reasonCode\"]) { this.reasonCode.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"reasonReference\"]) { this.reasonReference.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"note\"]) { this.note.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    return outcome;\r\n  }\r\n}\r\n"],"names":["fhir.FhirString","fhir.Attachment","fhir.Reference","fhir.OperationOutcomeIssue","fhir.BackboneElement","fhir.Identifier","fhir.CodeableConcept","fhir.FhirBoolean","fhir.CommunicationRequestPayload","fhir.FhirDateTime","fhir.Period","fhir.Annotation","fhir.DomainResource"],"mappings":"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"}