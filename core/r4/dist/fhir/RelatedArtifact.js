/*! @fhir-typescript/r4-core v0.0.11-beta.2 2022-05-18 */
'use strict';
import { __extends } from '../_virtual/_tslib.js';
import { RelatedArtifactTypeCodings } from '../fhirValueSets/RelatedArtifactTypeCodings.js';
import { IssueTypeCodes } from '../fhirValueSets/IssueTypeCodes.js';
import { IssueSeverityCodes } from '../fhirValueSets/IssueSeverityCodes.js';
import { OperationOutcomeIssue } from './OperationOutcome.js';
import { FhirElement } from './FhirElement.js';
import { FhirString } from './FhirString.js';
import { FhirMarkdown } from './FhirMarkdown.js';
import { FhirUrl } from './FhirUrl.js';
import { Attachment } from './Attachment.js';
import { FhirCanonical } from './FhirCanonical.js';

// <auto-generated/>
/**
 * Related artifacts such as additional documentation, justification, or bibliographic references.
 */
var RelatedArtifact = /** @class */ (function (_super) {
    __extends(RelatedArtifact, _super);
    /**
     * Default constructor for RelatedArtifact - initializes any required elements to null if a value is not provided.
     */
    function RelatedArtifact(source, options) {
        if (source === void 0) { source = {}; }
        if (options === void 0) { options = {}; }
        var _this = _super.call(this, source, options) || this;
        if (source['type']) {
            _this.type = source.type;
        }
        else {
            _this.type = null;
        }
        if (source['label']) {
            _this.label = new FhirString({ value: source.label });
        }
        if (source['display']) {
            _this.display = new FhirString({ value: source.display });
        }
        if (source['citation']) {
            _this.citation = new FhirMarkdown({ value: source.citation });
        }
        if (source['url']) {
            _this.url = new FhirUrl({ value: source.url });
        }
        if (source['document']) {
            _this.document = new Attachment(source.document);
        }
        if (source['resource']) {
            _this.resource = new FhirCanonical({ value: source.resource });
        }
        return _this;
    }
    /**
     * Required-bound Value Set for type (RelatedArtifact.type)
     */
    RelatedArtifact.typeRequiredCoding = function () {
        return RelatedArtifactTypeCodings;
    };
    /**
     * Function to perform basic model validation (e.g., check if required elements are present).
     */
    RelatedArtifact.prototype.doModelValidation = function () {
        var _a, _b, _c, _d, _e, _f;
        var outcome = _super.prototype.doModelValidation.call(this);
        if (!this['type']) {
            outcome.issue.push(new OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing, diagnostics: 'Missing required property type:RelatedArtifactTypeCodeType fhir: RelatedArtifact.type:code', }));
        }
        if (this["label"]) {
            (_a = outcome.issue).push.apply(_a, this.label.doModelValidation().issue);
        }
        if (this["display"]) {
            (_b = outcome.issue).push.apply(_b, this.display.doModelValidation().issue);
        }
        if (this["citation"]) {
            (_c = outcome.issue).push.apply(_c, this.citation.doModelValidation().issue);
        }
        if (this["url"]) {
            (_d = outcome.issue).push.apply(_d, this.url.doModelValidation().issue);
        }
        if (this["document"]) {
            (_e = outcome.issue).push.apply(_e, this.document.doModelValidation().issue);
        }
        if (this["resource"]) {
            (_f = outcome.issue).push.apply(_f, this.resource.doModelValidation().issue);
        }
        return outcome;
    };
    /**
     * Mapping of this datatype to a FHIR equivalent
     */
    RelatedArtifact._fts_dataType = 'RelatedArtifact';
    return RelatedArtifact;
}(FhirElement));

export { RelatedArtifact };
//# sourceMappingURL=RelatedArtifact.js.map
