{"version":3,"file":"MedicinalProductUndesirableEffect.js","sources":["../../src/fhir/MedicinalProductUndesirableEffect.ts"],"sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4.core version: 4.0.1\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR Resource: MedicinalProductUndesirableEffect\r\n\r\nimport * as fhir from '../fhir.js';\r\n\r\n// @ts-ignore\r\nimport { IssueTypeCodes } from '../fhirValueSets/IssueTypeCodes.js';\r\n// @ts-ignore\r\nimport { IssueSeverityCodes } from '../fhirValueSets/IssueSeverityCodes.js';\r\n/**\r\n * Valid arguments for the MedicinalProductUndesirableEffect type.\r\n */\r\nexport interface MedicinalProductUndesirableEffectArgs extends fhir.DomainResourceArgs {\r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  resourceType: \"MedicinalProductUndesirableEffect\"|undefined;\r\n  /**\r\n   * The medication for which this is an indication.\r\n   */\r\n  subject?: fhir.ReferenceArgs[]|undefined;\r\n  /**\r\n   * The symptom, condition or undesirable effect.\r\n   */\r\n  symptomConditionEffect?: fhir.CodeableConceptArgs|undefined;\r\n  /**\r\n   * Classification of the effect.\r\n   */\r\n  classification?: fhir.CodeableConceptArgs|undefined;\r\n  /**\r\n   * The frequency of occurrence of the effect.\r\n   */\r\n  frequencyOfOccurrence?: fhir.CodeableConceptArgs|undefined;\r\n  /**\r\n   * The population group to which this applies.\r\n   */\r\n  population?: fhir.PopulationArgs[]|undefined;\r\n}\r\n\r\n/**\r\n * Describe the undesirable effects of the medicinal product.\r\n */\r\nexport class MedicinalProductUndesirableEffect extends fhir.DomainResource {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'MedicinalProductUndesirableEffect';\r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  public resourceType: \"MedicinalProductUndesirableEffect\";\r\n  /**\r\n   * The medication for which this is an indication.\r\n   */\r\n  public subject?: fhir.Reference[];\r\n  /**\r\n   * The symptom, condition or undesirable effect.\r\n   */\r\n  public symptomConditionEffect?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * Classification of the effect.\r\n   */\r\n  public classification?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * The frequency of occurrence of the effect.\r\n   */\r\n  public frequencyOfOccurrence?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * The population group to which this applies.\r\n   */\r\n  public population?: fhir.Population[];\r\n  /**\r\n   * Default constructor for MedicinalProductUndesirableEffect - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<MedicinalProductUndesirableEffectArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    this.resourceType = 'MedicinalProductUndesirableEffect';\r\n    if (source['subject']) { this.subject = source.subject.map((x) => new fhir.Reference(x)); }\r\n    else { this.subject = []; }\r\n    if (source['symptomConditionEffect']) { this.symptomConditionEffect = new fhir.CodeableConcept(source.symptomConditionEffect); }\r\n    if (source['classification']) { this.classification = new fhir.CodeableConcept(source.classification); }\r\n    if (source['frequencyOfOccurrence']) { this.frequencyOfOccurrence = new fhir.CodeableConcept(source.frequencyOfOccurrence); }\r\n    if (source['population']) { this.population = source.population.map((x) => new fhir.Population(x)); }\r\n    else { this.population = []; }\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (!this['resourceType']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property resourceType:\"MedicinalProductUndesirableEffect\" fhir: MedicinalProductUndesirableEffect.resourceType:\"MedicinalProductUndesirableEffect\"', }));\r\n    }\r\n    if (this[\"subject\"]) { this.subject.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"symptomConditionEffect\"]) { outcome.issue!.push(...this.symptomConditionEffect.doModelValidation().issue!); }\r\n    if (this[\"classification\"]) { outcome.issue!.push(...this.classification.doModelValidation().issue!); }\r\n    if (this[\"frequencyOfOccurrence\"]) { outcome.issue!.push(...this.frequencyOfOccurrence.doModelValidation().issue!); }\r\n    if (this[\"population\"]) { this.population.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    return outcome;\r\n  }\r\n}\r\n"],"names":["fhir.Reference","fhir.CodeableConcept","fhir.Population","fhir.OperationOutcomeIssue","fhir.DomainResource"],"mappings":"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"}