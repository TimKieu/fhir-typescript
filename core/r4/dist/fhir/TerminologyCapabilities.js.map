{"version":3,"file":"TerminologyCapabilities.js","sources":["../../src/fhir/TerminologyCapabilities.ts"],"sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4.core version: 4.0.1\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR Resource: TerminologyCapabilities\r\n\r\nimport * as fhir from '../fhir.js';\r\n\r\n// @ts-ignore\r\nimport { PublicationStatusCodings, PublicationStatusCodingType,} from '../fhirValueSets/PublicationStatusCodings.js';\r\n// @ts-ignore\r\nimport { PublicationStatusCodes,  PublicationStatusCodeType } from '../fhirValueSets/PublicationStatusCodes.js';\r\n// @ts-ignore\r\nimport { CapabilityStatementKindCodings, CapabilityStatementKindCodingType,} from '../fhirValueSets/CapabilityStatementKindCodings.js';\r\n// @ts-ignore\r\nimport { CapabilityStatementKindCodes,  CapabilityStatementKindCodeType } from '../fhirValueSets/CapabilityStatementKindCodes.js';\r\n// @ts-ignore\r\nimport { CodeSearchSupportCodings, CodeSearchSupportCodingType,} from '../fhirValueSets/CodeSearchSupportCodings.js';\r\n// @ts-ignore\r\nimport { CodeSearchSupportCodes,  CodeSearchSupportCodeType } from '../fhirValueSets/CodeSearchSupportCodes.js';\r\n// @ts-ignore\r\nimport { IssueTypeCodes } from '../fhirValueSets/IssueTypeCodes.js';\r\n// @ts-ignore\r\nimport { IssueSeverityCodes } from '../fhirValueSets/IssueSeverityCodes.js';\r\n/**\r\n * Valid arguments for the TerminologyCapabilitiesSoftware type.\r\n */\r\nexport interface TerminologyCapabilitiesSoftwareArgs extends fhir.BackboneElementArgs {\r\n  /**\r\n   * Name the software is known by.\r\n   */\r\n  name: fhir.FhirString|string|undefined;\r\n  /**\r\n   * If possible, a version should be specified, as statements are likely to be different for different versions of software.\r\n   */\r\n  version?: fhir.FhirString|string|undefined;\r\n}\r\n\r\n/**\r\n * Software that is covered by this terminology capability statement.  It is used when the statement describes the capabilities of a particular software version, independent of an installation.\r\n */\r\nexport class TerminologyCapabilitiesSoftware extends fhir.BackboneElement {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'TerminologyCapabilitiesSoftware';\r\n  /**\r\n   * Name the software is known by.\r\n   */\r\n  public name: fhir.FhirString|null;\r\n  /**\r\n   * If possible, a version should be specified, as statements are likely to be different for different versions of software.\r\n   */\r\n  public version?: fhir.FhirString|undefined;\r\n  /**\r\n   * Default constructor for TerminologyCapabilitiesSoftware - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<TerminologyCapabilitiesSoftwareArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    if (source['name']) { this.name = new fhir.FhirString({value: source.name}); }\r\n    else { this.name = null; }\r\n    if (source['version']) { this.version = new fhir.FhirString({value: source.version}); }\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (!this['name']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property name:fhir.FhirString fhir: TerminologyCapabilities.software.name:string', }));\r\n    }\r\n    if (this[\"name\"]) { outcome.issue!.push(...this.name.doModelValidation().issue!); }\r\n    if (this[\"version\"]) { outcome.issue!.push(...this.version.doModelValidation().issue!); }\r\n    return outcome;\r\n  }\r\n}\r\n/**\r\n * Valid arguments for the TerminologyCapabilitiesImplementation type.\r\n */\r\nexport interface TerminologyCapabilitiesImplementationArgs extends fhir.BackboneElementArgs {\r\n  /**\r\n   * Information about the specific installation that this terminology capability statement relates to.\r\n   */\r\n  description: fhir.FhirString|string|undefined;\r\n  /**\r\n   * An absolute base URL for the implementation.\r\n   */\r\n  url?: fhir.FhirUrl|string|undefined;\r\n}\r\n\r\n/**\r\n * Identifies a specific implementation instance that is described by the terminology capability statement - i.e. a particular installation, rather than the capabilities of a software program.\r\n */\r\nexport class TerminologyCapabilitiesImplementation extends fhir.BackboneElement {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'TerminologyCapabilitiesImplementation';\r\n  /**\r\n   * Information about the specific installation that this terminology capability statement relates to.\r\n   */\r\n  public description: fhir.FhirString|null;\r\n  /**\r\n   * An absolute base URL for the implementation.\r\n   */\r\n  public url?: fhir.FhirUrl|undefined;\r\n  /**\r\n   * Default constructor for TerminologyCapabilitiesImplementation - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<TerminologyCapabilitiesImplementationArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    if (source['description']) { this.description = new fhir.FhirString({value: source.description}); }\r\n    else { this.description = null; }\r\n    if (source['url']) { this.url = new fhir.FhirUrl({value: source.url}); }\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (!this['description']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property description:fhir.FhirString fhir: TerminologyCapabilities.implementation.description:string', }));\r\n    }\r\n    if (this[\"description\"]) { outcome.issue!.push(...this.description.doModelValidation().issue!); }\r\n    if (this[\"url\"]) { outcome.issue!.push(...this.url.doModelValidation().issue!); }\r\n    return outcome;\r\n  }\r\n}\r\n/**\r\n * Valid arguments for the TerminologyCapabilitiesCodeSystemVersionFilter type.\r\n */\r\nexport interface TerminologyCapabilitiesCodeSystemVersionFilterArgs extends fhir.BackboneElementArgs {\r\n  /**\r\n   * Code of the property supported.\r\n   */\r\n  code: fhir.FhirCode|string|undefined;\r\n  /**\r\n   * Operations supported for the property.\r\n   */\r\n  op: fhir.FhirCode[]|string[]|undefined;\r\n}\r\n\r\n/**\r\n * Filter Properties supported.\r\n */\r\nexport class TerminologyCapabilitiesCodeSystemVersionFilter extends fhir.BackboneElement {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'TerminologyCapabilitiesCodeSystemVersionFilter';\r\n  /**\r\n   * Code of the property supported.\r\n   */\r\n  public code: fhir.FhirCode|null;\r\n  /**\r\n   * Operations supported for the property.\r\n   */\r\n  public op: fhir.FhirCode[];\r\n  /**\r\n   * Default constructor for TerminologyCapabilitiesCodeSystemVersionFilter - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<TerminologyCapabilitiesCodeSystemVersionFilterArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    if (source['code']) { this.code = new fhir.FhirCode({value: source.code}); }\r\n    else { this.code = null; }\r\n    if (source['op']) { this.op = source.op.map((x) => new fhir.FhirCode({value: x})); }\r\n    else { this.op = []; }\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (!this['code']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property code:fhir.FhirCode fhir: TerminologyCapabilities.codeSystem.version.filter.code:code', }));\r\n    }\r\n    if (this[\"code\"]) { outcome.issue!.push(...this.code.doModelValidation().issue!); }\r\n    if (!this['op']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property op:fhir.FhirCode[] fhir: TerminologyCapabilities.codeSystem.version.filter.op:code', }));\r\n    } else if (!Array.isArray(this.op)) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.StructuralIssue,  diagnostics: 'Found scalar in array property op:fhir.FhirCode[] fhir: TerminologyCapabilities.codeSystem.version.filter.op:code', }));\r\n    } else if (this.op.length === 0) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property op:fhir.FhirCode[] fhir: TerminologyCapabilities.codeSystem.version.filter.op:code', }));\r\n    }\r\n    if (this[\"op\"]) { this.op.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    return outcome;\r\n  }\r\n}\r\n/**\r\n * Valid arguments for the TerminologyCapabilitiesCodeSystemVersion type.\r\n */\r\nexport interface TerminologyCapabilitiesCodeSystemVersionArgs extends fhir.BackboneElementArgs {\r\n  /**\r\n   * For version-less code systems, there should be a single version with no identifier.\r\n   */\r\n  code?: fhir.FhirString|string|undefined;\r\n  /**\r\n   * If this is the default version for this code system.\r\n   */\r\n  isDefault?: fhir.FhirBoolean|boolean|undefined;\r\n  /**\r\n   * If the compositional grammar defined by the code system is supported.\r\n   */\r\n  compositional?: fhir.FhirBoolean|boolean|undefined;\r\n  /**\r\n   * Language Displays supported.\r\n   */\r\n  language?: fhir.FhirCode[]|string[]|undefined;\r\n  /**\r\n   * Filter Properties supported.\r\n   */\r\n  filter?: fhir.TerminologyCapabilitiesCodeSystemVersionFilterArgs[]|undefined;\r\n  /**\r\n   * Properties supported for $lookup.\r\n   */\r\n  property?: fhir.FhirCode[]|string[]|undefined;\r\n}\r\n\r\n/**\r\n * Language translations might not be available for all codes.\r\n */\r\nexport class TerminologyCapabilitiesCodeSystemVersion extends fhir.BackboneElement {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'TerminologyCapabilitiesCodeSystemVersion';\r\n  /**\r\n   * For version-less code systems, there should be a single version with no identifier.\r\n   */\r\n  public code?: fhir.FhirString|undefined;\r\n  /**\r\n   * If this is the default version for this code system.\r\n   */\r\n  public isDefault?: fhir.FhirBoolean|undefined;\r\n  /**\r\n   * If the compositional grammar defined by the code system is supported.\r\n   */\r\n  public compositional?: fhir.FhirBoolean|undefined;\r\n  /**\r\n   * Language Displays supported.\r\n   */\r\n  public language?: fhir.FhirCode[];\r\n  /**\r\n   * Filter Properties supported.\r\n   */\r\n  public filter?: fhir.TerminologyCapabilitiesCodeSystemVersionFilter[];\r\n  /**\r\n   * Properties supported for $lookup.\r\n   */\r\n  public property?: fhir.FhirCode[];\r\n  /**\r\n   * Default constructor for TerminologyCapabilitiesCodeSystemVersion - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<TerminologyCapabilitiesCodeSystemVersionArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    if (source['code']) { this.code = new fhir.FhirString({value: source.code}); }\r\n    if (source['isDefault']) { this.isDefault = new fhir.FhirBoolean({value: source.isDefault}); }\r\n    if (source['compositional']) { this.compositional = new fhir.FhirBoolean({value: source.compositional}); }\r\n    if (source['language']) { this.language = source.language.map((x) => new fhir.FhirCode({value: x})); }\r\n    else { this.language = []; }\r\n    if (source['filter']) { this.filter = source.filter.map((x) => new fhir.TerminologyCapabilitiesCodeSystemVersionFilter(x)); }\r\n    else { this.filter = []; }\r\n    if (source['property']) { this.property = source.property.map((x) => new fhir.FhirCode({value: x})); }\r\n    else { this.property = []; }\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (this[\"code\"]) { outcome.issue!.push(...this.code.doModelValidation().issue!); }\r\n    if (this[\"isDefault\"]) { outcome.issue!.push(...this.isDefault.doModelValidation().issue!); }\r\n    if (this[\"compositional\"]) { outcome.issue!.push(...this.compositional.doModelValidation().issue!); }\r\n    if (this[\"language\"]) { this.language.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"filter\"]) { this.filter.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"property\"]) { this.property.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    return outcome;\r\n  }\r\n}\r\n/**\r\n * Valid arguments for the TerminologyCapabilitiesCodeSystem type.\r\n */\r\nexport interface TerminologyCapabilitiesCodeSystemArgs extends fhir.BackboneElementArgs {\r\n  /**\r\n   * URI for the Code System.\r\n   */\r\n  uri?: fhir.FhirCanonical|string|undefined;\r\n  /**\r\n   * Language translations might not be available for all codes.\r\n   */\r\n  version?: fhir.TerminologyCapabilitiesCodeSystemVersionArgs[]|undefined;\r\n  /**\r\n   * True if subsumption is supported for this version of the code system.\r\n   */\r\n  subsumption?: fhir.FhirBoolean|boolean|undefined;\r\n}\r\n\r\n/**\r\n * The code system - identified by its system URL - may also be declared explicitly as a Code System Resource at /CodeSystem, but it might not be.\r\n */\r\nexport class TerminologyCapabilitiesCodeSystem extends fhir.BackboneElement {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'TerminologyCapabilitiesCodeSystem';\r\n  /**\r\n   * URI for the Code System.\r\n   */\r\n  public uri?: fhir.FhirCanonical|undefined;\r\n  /**\r\n   * Language translations might not be available for all codes.\r\n   */\r\n  public version?: fhir.TerminologyCapabilitiesCodeSystemVersion[];\r\n  /**\r\n   * True if subsumption is supported for this version of the code system.\r\n   */\r\n  public subsumption?: fhir.FhirBoolean|undefined;\r\n  /**\r\n   * Default constructor for TerminologyCapabilitiesCodeSystem - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<TerminologyCapabilitiesCodeSystemArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    if (source['uri']) { this.uri = new fhir.FhirCanonical({value: source.uri}); }\r\n    if (source['version']) { this.version = source.version.map((x) => new fhir.TerminologyCapabilitiesCodeSystemVersion(x)); }\r\n    else { this.version = []; }\r\n    if (source['subsumption']) { this.subsumption = new fhir.FhirBoolean({value: source.subsumption}); }\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (this[\"uri\"]) { outcome.issue!.push(...this.uri.doModelValidation().issue!); }\r\n    if (this[\"version\"]) { this.version.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"subsumption\"]) { outcome.issue!.push(...this.subsumption.doModelValidation().issue!); }\r\n    return outcome;\r\n  }\r\n}\r\n/**\r\n * Valid arguments for the TerminologyCapabilitiesExpansionParameter type.\r\n */\r\nexport interface TerminologyCapabilitiesExpansionParameterArgs extends fhir.BackboneElementArgs {\r\n  /**\r\n   * Expansion Parameter name.\r\n   */\r\n  name: fhir.FhirCode|string|undefined;\r\n  /**\r\n   * Description of support for parameter.\r\n   */\r\n  documentation?: fhir.FhirString|string|undefined;\r\n}\r\n\r\n/**\r\n * Supported expansion parameter.\r\n */\r\nexport class TerminologyCapabilitiesExpansionParameter extends fhir.BackboneElement {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'TerminologyCapabilitiesExpansionParameter';\r\n  /**\r\n   * Expansion Parameter name.\r\n   */\r\n  public name: fhir.FhirCode|null;\r\n  /**\r\n   * Description of support for parameter.\r\n   */\r\n  public documentation?: fhir.FhirString|undefined;\r\n  /**\r\n   * Default constructor for TerminologyCapabilitiesExpansionParameter - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<TerminologyCapabilitiesExpansionParameterArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    if (source['name']) { this.name = new fhir.FhirCode({value: source.name}); }\r\n    else { this.name = null; }\r\n    if (source['documentation']) { this.documentation = new fhir.FhirString({value: source.documentation}); }\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (!this['name']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property name:fhir.FhirCode fhir: TerminologyCapabilities.expansion.parameter.name:code', }));\r\n    }\r\n    if (this[\"name\"]) { outcome.issue!.push(...this.name.doModelValidation().issue!); }\r\n    if (this[\"documentation\"]) { outcome.issue!.push(...this.documentation.doModelValidation().issue!); }\r\n    return outcome;\r\n  }\r\n}\r\n/**\r\n * Valid arguments for the TerminologyCapabilitiesExpansion type.\r\n */\r\nexport interface TerminologyCapabilitiesExpansionArgs extends fhir.BackboneElementArgs {\r\n  /**\r\n   * Whether the server can return nested value sets.\r\n   */\r\n  hierarchical?: fhir.FhirBoolean|boolean|undefined;\r\n  /**\r\n   * Whether the server supports paging on expansion.\r\n   */\r\n  paging?: fhir.FhirBoolean|boolean|undefined;\r\n  /**\r\n   * Allow request for incomplete expansions?\r\n   */\r\n  incomplete?: fhir.FhirBoolean|boolean|undefined;\r\n  /**\r\n   * Supported expansion parameter.\r\n   */\r\n  parameter?: fhir.TerminologyCapabilitiesExpansionParameterArgs[]|undefined;\r\n  /**\r\n   * This documentation should cover things like case sensitivity,  use of punctuation if not ignored, what wild cards are supported (if any), whether text is starts with or contains, and whether word order matters.\r\n   */\r\n  textFilter?: fhir.FhirMarkdown|string|undefined;\r\n}\r\n\r\n/**\r\n * Information about the [ValueSet/$expand](valueset-operation-expand.html) operation.\r\n */\r\nexport class TerminologyCapabilitiesExpansion extends fhir.BackboneElement {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'TerminologyCapabilitiesExpansion';\r\n  /**\r\n   * Whether the server can return nested value sets.\r\n   */\r\n  public hierarchical?: fhir.FhirBoolean|undefined;\r\n  /**\r\n   * Whether the server supports paging on expansion.\r\n   */\r\n  public paging?: fhir.FhirBoolean|undefined;\r\n  /**\r\n   * Allow request for incomplete expansions?\r\n   */\r\n  public incomplete?: fhir.FhirBoolean|undefined;\r\n  /**\r\n   * Supported expansion parameter.\r\n   */\r\n  public parameter?: fhir.TerminologyCapabilitiesExpansionParameter[];\r\n  /**\r\n   * This documentation should cover things like case sensitivity,  use of punctuation if not ignored, what wild cards are supported (if any), whether text is starts with or contains, and whether word order matters.\r\n   */\r\n  public textFilter?: fhir.FhirMarkdown|undefined;\r\n  /**\r\n   * Default constructor for TerminologyCapabilitiesExpansion - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<TerminologyCapabilitiesExpansionArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    if (source['hierarchical']) { this.hierarchical = new fhir.FhirBoolean({value: source.hierarchical}); }\r\n    if (source['paging']) { this.paging = new fhir.FhirBoolean({value: source.paging}); }\r\n    if (source['incomplete']) { this.incomplete = new fhir.FhirBoolean({value: source.incomplete}); }\r\n    if (source['parameter']) { this.parameter = source.parameter.map((x) => new fhir.TerminologyCapabilitiesExpansionParameter(x)); }\r\n    else { this.parameter = []; }\r\n    if (source['textFilter']) { this.textFilter = new fhir.FhirMarkdown({value: source.textFilter}); }\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (this[\"hierarchical\"]) { outcome.issue!.push(...this.hierarchical.doModelValidation().issue!); }\r\n    if (this[\"paging\"]) { outcome.issue!.push(...this.paging.doModelValidation().issue!); }\r\n    if (this[\"incomplete\"]) { outcome.issue!.push(...this.incomplete.doModelValidation().issue!); }\r\n    if (this[\"parameter\"]) { this.parameter.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"textFilter\"]) { outcome.issue!.push(...this.textFilter.doModelValidation().issue!); }\r\n    return outcome;\r\n  }\r\n}\r\n/**\r\n * Valid arguments for the TerminologyCapabilitiesValidateCode type.\r\n */\r\nexport interface TerminologyCapabilitiesValidateCodeArgs extends fhir.BackboneElementArgs {\r\n  /**\r\n   * Whether translations are validated.\r\n   */\r\n  translations: fhir.FhirBoolean|boolean|undefined;\r\n}\r\n\r\n/**\r\n * Information about the [ValueSet/$validate-code](valueset-operation-validate-code.html) operation.\r\n */\r\nexport class TerminologyCapabilitiesValidateCode extends fhir.BackboneElement {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'TerminologyCapabilitiesValidateCode';\r\n  /**\r\n   * Whether translations are validated.\r\n   */\r\n  public translations: fhir.FhirBoolean|null;\r\n  /**\r\n   * Default constructor for TerminologyCapabilitiesValidateCode - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<TerminologyCapabilitiesValidateCodeArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    if (source['translations']) { this.translations = new fhir.FhirBoolean({value: source.translations}); }\r\n    else { this.translations = null; }\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (!this['translations']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property translations:fhir.FhirBoolean fhir: TerminologyCapabilities.validateCode.translations:boolean', }));\r\n    }\r\n    if (this[\"translations\"]) { outcome.issue!.push(...this.translations.doModelValidation().issue!); }\r\n    return outcome;\r\n  }\r\n}\r\n/**\r\n * Valid arguments for the TerminologyCapabilitiesTranslation type.\r\n */\r\nexport interface TerminologyCapabilitiesTranslationArgs extends fhir.BackboneElementArgs {\r\n  /**\r\n   * Whether the client must identify the map.\r\n   */\r\n  needsMap: fhir.FhirBoolean|boolean|undefined;\r\n}\r\n\r\n/**\r\n * Information about the [ConceptMap/$translate](conceptmap-operation-translate.html) operation.\r\n */\r\nexport class TerminologyCapabilitiesTranslation extends fhir.BackboneElement {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'TerminologyCapabilitiesTranslation';\r\n  /**\r\n   * Whether the client must identify the map.\r\n   */\r\n  public needsMap: fhir.FhirBoolean|null;\r\n  /**\r\n   * Default constructor for TerminologyCapabilitiesTranslation - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<TerminologyCapabilitiesTranslationArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    if (source['needsMap']) { this.needsMap = new fhir.FhirBoolean({value: source.needsMap}); }\r\n    else { this.needsMap = null; }\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (!this['needsMap']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property needsMap:fhir.FhirBoolean fhir: TerminologyCapabilities.translation.needsMap:boolean', }));\r\n    }\r\n    if (this[\"needsMap\"]) { outcome.issue!.push(...this.needsMap.doModelValidation().issue!); }\r\n    return outcome;\r\n  }\r\n}\r\n/**\r\n * Valid arguments for the TerminologyCapabilitiesClosure type.\r\n */\r\nexport interface TerminologyCapabilitiesClosureArgs extends fhir.BackboneElementArgs {\r\n  /**\r\n   * If cross-system closure is supported.\r\n   */\r\n  translation?: fhir.FhirBoolean|boolean|undefined;\r\n}\r\n\r\n/**\r\n * Whether the $closure operation is supported.\r\n */\r\nexport class TerminologyCapabilitiesClosure extends fhir.BackboneElement {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'TerminologyCapabilitiesClosure';\r\n  /**\r\n   * If cross-system closure is supported.\r\n   */\r\n  public translation?: fhir.FhirBoolean|undefined;\r\n  /**\r\n   * Default constructor for TerminologyCapabilitiesClosure - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<TerminologyCapabilitiesClosureArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    if (source['translation']) { this.translation = new fhir.FhirBoolean({value: source.translation}); }\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (this[\"translation\"]) { outcome.issue!.push(...this.translation.doModelValidation().issue!); }\r\n    return outcome;\r\n  }\r\n}\r\n/**\r\n * Valid arguments for the TerminologyCapabilities type.\r\n */\r\nexport interface TerminologyCapabilitiesArgs extends fhir.DomainResourceArgs {\r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  resourceType: \"TerminologyCapabilities\"|undefined;\r\n  /**\r\n   * Can be a urn:uuid: or a urn:oid: but real http: addresses are preferred.  Multiple instances may share the same URL if they have a distinct version.\r\n   * The determination of when to create a new version of a resource (same url, new version) vs. defining a new artifact is up to the author.  Considerations for making this decision are found in [Technical and Business Versions](resource.html#versions). \r\n   * In some cases, the resource can no longer be found at the stated url, but the url itself cannot change. Implementations can use the [meta.source](resource.html#meta) element to indicate where the current master source of the resource can be found.\r\n   */\r\n  url?: fhir.FhirUri|string|undefined;\r\n  /**\r\n   * There may be different terminology capabilities instances that have the same identifier but different versions.  The version can be appended to the url in a reference to allow a reference to a particular business version of the terminology capabilities with the format [url]|[version].\r\n   */\r\n  version?: fhir.FhirString|string|undefined;\r\n  /**\r\n   * The name is not expected to be globally unique. The name should be a simple alphanumeric type name to ensure that it is machine-processing friendly.\r\n   */\r\n  name?: fhir.FhirString|string|undefined;\r\n  /**\r\n   * This name does not need to be machine-processing friendly and may contain punctuation, white-space, etc.\r\n   */\r\n  title?: fhir.FhirString|string|undefined;\r\n  /**\r\n   * Allows filtering of terminology capabilitiess that are appropriate for use versus not.This is not intended for use with actual capability statements, but where capability statements are used to describe possible or desired systems.\r\n   */\r\n  status: PublicationStatusCodeType|null;\r\n  /**\r\n   * Allows filtering of terminology capabilitiess that are appropriate for use versus not.\r\n   */\r\n  experimental?: fhir.FhirBoolean|boolean|undefined;\r\n  /**\r\n   * Note that this is not the same as the resource last-modified-date, since the resource may be a secondary representation of the terminology capabilities. Additional specific dates may be added as extensions or be found by consulting Provenances associated with past versions of the resource.\r\n   */\r\n  date: fhir.FhirDateTime|string|undefined;\r\n  /**\r\n   * Usually an organization but may be an individual. The publisher (or steward) of the terminology capabilities is the organization or individual primarily responsible for the maintenance and upkeep of the terminology capabilities. This is not necessarily the same individual or organization that developed and initially authored the content. The publisher is the primary point of contact for questions or issues with the terminology capabilities. This item SHOULD be populated unless the information is available from context.\r\n   */\r\n  publisher?: fhir.FhirString|string|undefined;\r\n  /**\r\n   * May be a web site, an email address, a telephone number, etc.\r\n   */\r\n  contact?: fhir.ContactDetailArgs[]|undefined;\r\n  /**\r\n   * This description can be used to capture details such as why the terminology capabilities was built, comments about misuse, instructions for clinical use and interpretation, literature references, examples from the paper world, etc. It is not a rendering of the terminology capabilities as conveyed in the 'text' field of the resource itself. This item SHOULD be populated unless the information is available from context (e.g. the language of the terminology capabilities is presumed to be the predominant language in the place the terminology capabilities was created).This does not need to be populated if the description is adequately implied by the software or implementation details.\r\n   */\r\n  description?: fhir.FhirMarkdown|string|undefined;\r\n  /**\r\n   * When multiple useContexts are specified, there is no expectation that all or any of the contexts apply.\r\n   */\r\n  useContext?: fhir.UsageContextArgs[]|undefined;\r\n  /**\r\n   * It may be possible for the terminology capabilities to be used in jurisdictions other than those for which it was originally designed or intended.\r\n   */\r\n  jurisdiction?: fhir.CodeableConceptArgs[]|undefined;\r\n  /**\r\n   * This element does not describe the usage of the terminology capabilities. Instead, it provides traceability of ''why'' the resource is either needed or ''why'' it is defined as it is.  This may be used to point to source materials or specifications that drove the structure of this terminology capabilities.\r\n   */\r\n  purpose?: fhir.FhirMarkdown|string|undefined;\r\n  /**\r\n   * A copyright statement relating to the terminology capabilities and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the terminology capabilities.\r\n   */\r\n  copyright?: fhir.FhirMarkdown|string|undefined;\r\n  /**\r\n   * The way that this statement is intended to be used, to describe an actual running instance of software, a particular product (kind, not instance of software) or a class of implementation (e.g. a desired purchase).\r\n   */\r\n  kind: CapabilityStatementKindCodeType|null;\r\n  /**\r\n   * Software that is covered by this terminology capability statement.  It is used when the statement describes the capabilities of a particular software version, independent of an installation.\r\n   */\r\n  software?: fhir.TerminologyCapabilitiesSoftwareArgs|undefined;\r\n  /**\r\n   * Identifies a specific implementation instance that is described by the terminology capability statement - i.e. a particular installation, rather than the capabilities of a software program.\r\n   */\r\n  implementation?: fhir.TerminologyCapabilitiesImplementationArgs|undefined;\r\n  /**\r\n   * Whether the server supports lockedDate.\r\n   */\r\n  lockedDate?: fhir.FhirBoolean|boolean|undefined;\r\n  /**\r\n   * The code system - identified by its system URL - may also be declared explicitly as a Code System Resource at /CodeSystem, but it might not be.\r\n   */\r\n  codeSystem?: fhir.TerminologyCapabilitiesCodeSystemArgs[]|undefined;\r\n  /**\r\n   * Information about the [ValueSet/$expand](valueset-operation-expand.html) operation.\r\n   */\r\n  expansion?: fhir.TerminologyCapabilitiesExpansionArgs|undefined;\r\n  /**\r\n   * See notes on the [ValueSet](valueset.html#) resource.\r\n   */\r\n  codeSearch?: CodeSearchSupportCodeType|undefined;\r\n  /**\r\n   * Information about the [ValueSet/$validate-code](valueset-operation-validate-code.html) operation.\r\n   */\r\n  validateCode?: fhir.TerminologyCapabilitiesValidateCodeArgs|undefined;\r\n  /**\r\n   * Information about the [ConceptMap/$translate](conceptmap-operation-translate.html) operation.\r\n   */\r\n  translation?: fhir.TerminologyCapabilitiesTranslationArgs|undefined;\r\n  /**\r\n   * Whether the $closure operation is supported.\r\n   */\r\n  closure?: fhir.TerminologyCapabilitiesClosureArgs|undefined;\r\n}\r\n\r\n/**\r\n * A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.\r\n */\r\nexport class TerminologyCapabilities extends fhir.DomainResource {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'TerminologyCapabilities';\r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  public resourceType: \"TerminologyCapabilities\";\r\n  /**\r\n   * Can be a urn:uuid: or a urn:oid: but real http: addresses are preferred.  Multiple instances may share the same URL if they have a distinct version.\r\n   * The determination of when to create a new version of a resource (same url, new version) vs. defining a new artifact is up to the author.  Considerations for making this decision are found in [Technical and Business Versions](resource.html#versions). \r\n   * In some cases, the resource can no longer be found at the stated url, but the url itself cannot change. Implementations can use the [meta.source](resource.html#meta) element to indicate where the current master source of the resource can be found.\r\n   */\r\n  public url?: fhir.FhirUri|undefined;\r\n  /**\r\n   * There may be different terminology capabilities instances that have the same identifier but different versions.  The version can be appended to the url in a reference to allow a reference to a particular business version of the terminology capabilities with the format [url]|[version].\r\n   */\r\n  public version?: fhir.FhirString|undefined;\r\n  /**\r\n   * The name is not expected to be globally unique. The name should be a simple alphanumeric type name to ensure that it is machine-processing friendly.\r\n   */\r\n  public name?: fhir.FhirString|undefined;\r\n  /**\r\n   * This name does not need to be machine-processing friendly and may contain punctuation, white-space, etc.\r\n   */\r\n  public title?: fhir.FhirString|undefined;\r\n  /**\r\n   * Allows filtering of terminology capabilitiess that are appropriate for use versus not.This is not intended for use with actual capability statements, but where capability statements are used to describe possible or desired systems.\r\n   */\r\n  public status: PublicationStatusCodeType|null;\r\n  /**\r\n   * Allows filtering of terminology capabilitiess that are appropriate for use versus not.\r\n   */\r\n  public experimental?: fhir.FhirBoolean|undefined;\r\n  /**\r\n   * Note that this is not the same as the resource last-modified-date, since the resource may be a secondary representation of the terminology capabilities. Additional specific dates may be added as extensions or be found by consulting Provenances associated with past versions of the resource.\r\n   */\r\n  public date: fhir.FhirDateTime|null;\r\n  /**\r\n   * Usually an organization but may be an individual. The publisher (or steward) of the terminology capabilities is the organization or individual primarily responsible for the maintenance and upkeep of the terminology capabilities. This is not necessarily the same individual or organization that developed and initially authored the content. The publisher is the primary point of contact for questions or issues with the terminology capabilities. This item SHOULD be populated unless the information is available from context.\r\n   */\r\n  public publisher?: fhir.FhirString|undefined;\r\n  /**\r\n   * May be a web site, an email address, a telephone number, etc.\r\n   */\r\n  public contact?: fhir.ContactDetail[];\r\n  /**\r\n   * This description can be used to capture details such as why the terminology capabilities was built, comments about misuse, instructions for clinical use and interpretation, literature references, examples from the paper world, etc. It is not a rendering of the terminology capabilities as conveyed in the 'text' field of the resource itself. This item SHOULD be populated unless the information is available from context (e.g. the language of the terminology capabilities is presumed to be the predominant language in the place the terminology capabilities was created).This does not need to be populated if the description is adequately implied by the software or implementation details.\r\n   */\r\n  public description?: fhir.FhirMarkdown|undefined;\r\n  /**\r\n   * When multiple useContexts are specified, there is no expectation that all or any of the contexts apply.\r\n   */\r\n  public useContext?: fhir.UsageContext[];\r\n  /**\r\n   * It may be possible for the terminology capabilities to be used in jurisdictions other than those for which it was originally designed or intended.\r\n   */\r\n  public jurisdiction?: fhir.CodeableConcept[];\r\n  /**\r\n   * This element does not describe the usage of the terminology capabilities. Instead, it provides traceability of ''why'' the resource is either needed or ''why'' it is defined as it is.  This may be used to point to source materials or specifications that drove the structure of this terminology capabilities.\r\n   */\r\n  public purpose?: fhir.FhirMarkdown|undefined;\r\n  /**\r\n   * A copyright statement relating to the terminology capabilities and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the terminology capabilities.\r\n   */\r\n  public copyright?: fhir.FhirMarkdown|undefined;\r\n  /**\r\n   * The way that this statement is intended to be used, to describe an actual running instance of software, a particular product (kind, not instance of software) or a class of implementation (e.g. a desired purchase).\r\n   */\r\n  public kind: CapabilityStatementKindCodeType|null;\r\n  /**\r\n   * Software that is covered by this terminology capability statement.  It is used when the statement describes the capabilities of a particular software version, independent of an installation.\r\n   */\r\n  public software?: fhir.TerminologyCapabilitiesSoftware|undefined;\r\n  /**\r\n   * Identifies a specific implementation instance that is described by the terminology capability statement - i.e. a particular installation, rather than the capabilities of a software program.\r\n   */\r\n  public implementation?: fhir.TerminologyCapabilitiesImplementation|undefined;\r\n  /**\r\n   * Whether the server supports lockedDate.\r\n   */\r\n  public lockedDate?: fhir.FhirBoolean|undefined;\r\n  /**\r\n   * The code system - identified by its system URL - may also be declared explicitly as a Code System Resource at /CodeSystem, but it might not be.\r\n   */\r\n  public codeSystem?: fhir.TerminologyCapabilitiesCodeSystem[];\r\n  /**\r\n   * Information about the [ValueSet/$expand](valueset-operation-expand.html) operation.\r\n   */\r\n  public expansion?: fhir.TerminologyCapabilitiesExpansion|undefined;\r\n  /**\r\n   * See notes on the [ValueSet](valueset.html#) resource.\r\n   */\r\n  public codeSearch?: CodeSearchSupportCodeType|undefined;\r\n  /**\r\n   * Information about the [ValueSet/$validate-code](valueset-operation-validate-code.html) operation.\r\n   */\r\n  public validateCode?: fhir.TerminologyCapabilitiesValidateCode|undefined;\r\n  /**\r\n   * Information about the [ConceptMap/$translate](conceptmap-operation-translate.html) operation.\r\n   */\r\n  public translation?: fhir.TerminologyCapabilitiesTranslation|undefined;\r\n  /**\r\n   * Whether the $closure operation is supported.\r\n   */\r\n  public closure?: fhir.TerminologyCapabilitiesClosure|undefined;\r\n  /**\r\n   * Default constructor for TerminologyCapabilities - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<TerminologyCapabilitiesArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    this.resourceType = 'TerminologyCapabilities';\r\n    if (source['url']) { this.url = new fhir.FhirUri({value: source.url}); }\r\n    if (source['version']) { this.version = new fhir.FhirString({value: source.version}); }\r\n    if (source['name']) { this.name = new fhir.FhirString({value: source.name}); }\r\n    if (source['title']) { this.title = new fhir.FhirString({value: source.title}); }\r\n    if (source['status']) { this.status = source.status; }\r\n    else { this.status = null; }\r\n    if (source['experimental']) { this.experimental = new fhir.FhirBoolean({value: source.experimental}); }\r\n    if (source['date']) { this.date = new fhir.FhirDateTime({value: source.date}); }\r\n    else { this.date = null; }\r\n    if (source['publisher']) { this.publisher = new fhir.FhirString({value: source.publisher}); }\r\n    if (source['contact']) { this.contact = source.contact.map((x) => new fhir.ContactDetail(x)); }\r\n    else { this.contact = []; }\r\n    if (source['description']) { this.description = new fhir.FhirMarkdown({value: source.description}); }\r\n    if (source['useContext']) { this.useContext = source.useContext.map((x) => new fhir.UsageContext(x)); }\r\n    else { this.useContext = []; }\r\n    if (source['jurisdiction']) { this.jurisdiction = source.jurisdiction.map((x) => new fhir.CodeableConcept(x)); }\r\n    else { this.jurisdiction = []; }\r\n    if (source['purpose']) { this.purpose = new fhir.FhirMarkdown({value: source.purpose}); }\r\n    if (source['copyright']) { this.copyright = new fhir.FhirMarkdown({value: source.copyright}); }\r\n    if (source['kind']) { this.kind = source.kind; }\r\n    else { this.kind = null; }\r\n    if (source['software']) { this.software = new fhir.TerminologyCapabilitiesSoftware(source.software); }\r\n    if (source['implementation']) { this.implementation = new fhir.TerminologyCapabilitiesImplementation(source.implementation); }\r\n    if (source['lockedDate']) { this.lockedDate = new fhir.FhirBoolean({value: source.lockedDate}); }\r\n    if (source['codeSystem']) { this.codeSystem = source.codeSystem.map((x) => new fhir.TerminologyCapabilitiesCodeSystem(x)); }\r\n    else { this.codeSystem = []; }\r\n    if (source['expansion']) { this.expansion = new fhir.TerminologyCapabilitiesExpansion(source.expansion); }\r\n    if (source['codeSearch']) { this.codeSearch = source.codeSearch; }\r\n    if (source['validateCode']) { this.validateCode = new fhir.TerminologyCapabilitiesValidateCode(source.validateCode); }\r\n    if (source['translation']) { this.translation = new fhir.TerminologyCapabilitiesTranslation(source.translation); }\r\n    if (source['closure']) { this.closure = new fhir.TerminologyCapabilitiesClosure(source.closure); }\r\n  }\r\n  /**\r\n   * Required-bound Value Set for status (TerminologyCapabilities.status)\r\n   */\r\n  public static statusRequiredCoding():PublicationStatusCodingType {\r\n    return PublicationStatusCodings;\r\n  }\r\n  /**\r\n   * Required-bound Value Set for kind (TerminologyCapabilities.kind)\r\n   */\r\n  public static kindRequiredCoding():CapabilityStatementKindCodingType {\r\n    return CapabilityStatementKindCodings;\r\n  }\r\n  /**\r\n   * Required-bound Value Set for codeSearch (TerminologyCapabilities.codeSearch)\r\n   */\r\n  public static codeSearchRequiredCoding():CodeSearchSupportCodingType {\r\n    return CodeSearchSupportCodings;\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (!this['resourceType']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property resourceType:\"TerminologyCapabilities\" fhir: TerminologyCapabilities.resourceType:\"TerminologyCapabilities\"', }));\r\n    }\r\n    if (this[\"url\"]) { outcome.issue!.push(...this.url.doModelValidation().issue!); }\r\n    if (this[\"version\"]) { outcome.issue!.push(...this.version.doModelValidation().issue!); }\r\n    if (this[\"name\"]) { outcome.issue!.push(...this.name.doModelValidation().issue!); }\r\n    if (this[\"title\"]) { outcome.issue!.push(...this.title.doModelValidation().issue!); }\r\n    if (!this['status']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property status:PublicationStatusCodeType fhir: TerminologyCapabilities.status:code', }));\r\n    }\r\n    if (this[\"experimental\"]) { outcome.issue!.push(...this.experimental.doModelValidation().issue!); }\r\n    if (!this['date']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property date:fhir.FhirDateTime fhir: TerminologyCapabilities.date:dateTime', }));\r\n    }\r\n    if (this[\"date\"]) { outcome.issue!.push(...this.date.doModelValidation().issue!); }\r\n    if (this[\"publisher\"]) { outcome.issue!.push(...this.publisher.doModelValidation().issue!); }\r\n    if (this[\"contact\"]) { this.contact.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"description\"]) { outcome.issue!.push(...this.description.doModelValidation().issue!); }\r\n    if (this[\"useContext\"]) { this.useContext.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"jurisdiction\"]) { this.jurisdiction.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"purpose\"]) { outcome.issue!.push(...this.purpose.doModelValidation().issue!); }\r\n    if (this[\"copyright\"]) { outcome.issue!.push(...this.copyright.doModelValidation().issue!); }\r\n    if (!this['kind']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property kind:CapabilityStatementKindCodeType fhir: TerminologyCapabilities.kind:code', }));\r\n    }\r\n    if (this[\"software\"]) { outcome.issue!.push(...this.software.doModelValidation().issue!); }\r\n    if (this[\"implementation\"]) { outcome.issue!.push(...this.implementation.doModelValidation().issue!); }\r\n    if (this[\"lockedDate\"]) { outcome.issue!.push(...this.lockedDate.doModelValidation().issue!); }\r\n    if (this[\"codeSystem\"]) { this.codeSystem.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"expansion\"]) { outcome.issue!.push(...this.expansion.doModelValidation().issue!); }\r\n    if (this[\"validateCode\"]) { outcome.issue!.push(...this.validateCode.doModelValidation().issue!); }\r\n    if (this[\"translation\"]) { outcome.issue!.push(...this.translation.doModelValidation().issue!); }\r\n    if (this[\"closure\"]) { outcome.issue!.push(...this.closure.doModelValidation().issue!); }\r\n    return outcome;\r\n  }\r\n}\r\n"],"names":["fhir.FhirString","fhir.OperationOutcomeIssue","fhir.BackboneElement","fhir.FhirUrl","fhir.FhirCode","fhir.FhirBoolean","fhir.TerminologyCapabilitiesCodeSystemVersionFilter","fhir.FhirCanonical","fhir.TerminologyCapabilitiesCodeSystemVersion","fhir.TerminologyCapabilitiesExpansionParameter","fhir.FhirMarkdown","fhir.FhirUri","fhir.FhirDateTime","fhir.ContactDetail","fhir.UsageContext","fhir.CodeableConcept","fhir.TerminologyCapabilitiesSoftware","fhir.TerminologyCapabilitiesImplementation","fhir.TerminologyCapabilitiesCodeSystem","fhir.TerminologyCapabilitiesExpansion","fhir.TerminologyCapabilitiesValidateCode","fhir.TerminologyCapabilitiesTranslation","fhir.TerminologyCapabilitiesClosure","fhir.DomainResource"],"mappings":"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"}