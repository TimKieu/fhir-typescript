/*! @fhir-typescript/r4-core v0.0.11-beta.2 2022-05-18 */
'use strict';
import { __extends } from '../_virtual/_tslib.js';
import { FmStatusCodings } from '../fhirValueSets/FmStatusCodings.js';
import { RemittanceOutcomeCodings } from '../fhirValueSets/RemittanceOutcomeCodings.js';
import { IssueTypeCodes } from '../fhirValueSets/IssueTypeCodes.js';
import { IssueSeverityCodes } from '../fhirValueSets/IssueSeverityCodes.js';
import { OperationOutcomeIssue } from './OperationOutcome.js';
import { DomainResource } from './DomainResource.js';
import { Identifier } from './Identifier.js';
import { Reference } from './Reference.js';
import { FhirString } from './FhirString.js';
import { FhirDateTime } from './FhirDateTime.js';

// <auto-generated/>
/**
 * This resource provides enrollment and plan details from the processing of an EnrollmentRequest resource.
 */
var EnrollmentResponse = /** @class */ (function (_super) {
    __extends(EnrollmentResponse, _super);
    /**
     * Default constructor for EnrollmentResponse - initializes any required elements to null if a value is not provided.
     */
    function EnrollmentResponse(source, options) {
        if (source === void 0) { source = {}; }
        if (options === void 0) { options = {}; }
        var _this = _super.call(this, source, options) || this;
        _this.resourceType = 'EnrollmentResponse';
        if (source['identifier']) {
            _this.identifier = source.identifier.map(function (x) { return new Identifier(x); });
        }
        else {
            _this.identifier = [];
        }
        if (source['status']) {
            _this.status = source.status;
        }
        if (source['request']) {
            _this.request = new Reference(source.request);
        }
        if (source['outcome']) {
            _this.outcome = source.outcome;
        }
        if (source['disposition']) {
            _this.disposition = new FhirString({ value: source.disposition });
        }
        if (source['created']) {
            _this.created = new FhirDateTime({ value: source.created });
        }
        if (source['organization']) {
            _this.organization = new Reference(source.organization);
        }
        if (source['requestProvider']) {
            _this.requestProvider = new Reference(source.requestProvider);
        }
        return _this;
    }
    /**
     * Required-bound Value Set for status (EnrollmentResponse.status)
     */
    EnrollmentResponse.statusRequiredCoding = function () {
        return FmStatusCodings;
    };
    /**
     * Required-bound Value Set for outcome (EnrollmentResponse.outcome)
     */
    EnrollmentResponse.outcomeRequiredCoding = function () {
        return RemittanceOutcomeCodings;
    };
    /**
     * Function to perform basic model validation (e.g., check if required elements are present).
     */
    EnrollmentResponse.prototype.doModelValidation = function () {
        var _a, _b, _c, _d, _e;
        var outcome = _super.prototype.doModelValidation.call(this);
        if (!this['resourceType']) {
            outcome.issue.push(new OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing, diagnostics: 'Missing required property resourceType:"EnrollmentResponse" fhir: EnrollmentResponse.resourceType:"EnrollmentResponse"', }));
        }
        if (this["identifier"]) {
            this.identifier.forEach(function (x) {
                var _a;
                (_a = outcome.issue).push.apply(_a, x.doModelValidation().issue);
            });
        }
        if (this["request"]) {
            (_a = outcome.issue).push.apply(_a, this.request.doModelValidation().issue);
        }
        if (this["disposition"]) {
            (_b = outcome.issue).push.apply(_b, this.disposition.doModelValidation().issue);
        }
        if (this["created"]) {
            (_c = outcome.issue).push.apply(_c, this.created.doModelValidation().issue);
        }
        if (this["organization"]) {
            (_d = outcome.issue).push.apply(_d, this.organization.doModelValidation().issue);
        }
        if (this["requestProvider"]) {
            (_e = outcome.issue).push.apply(_e, this.requestProvider.doModelValidation().issue);
        }
        return outcome;
    };
    /**
     * Mapping of this datatype to a FHIR equivalent
     */
    EnrollmentResponse._fts_dataType = 'EnrollmentResponse';
    return EnrollmentResponse;
}(DomainResource));

export { EnrollmentResponse };
//# sourceMappingURL=EnrollmentResponse.js.map
