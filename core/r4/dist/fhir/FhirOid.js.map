{"version":3,"file":"FhirOid.js","sources":["../../src/fhir/FhirOid.ts"],"sourcesContent":["// Minimum TypeScript Version: 3.7\r\n// FHIR Primitive: oid\r\n\r\nimport * as fhir from '../fhir.js';\r\n\r\nimport { IssueTypeCodes } from '../fhirValueSets/IssueTypeCodes.js';\r\nimport { IssueSeverityCodes } from '../fhirValueSets/IssueSeverityCodes.js';\r\n\r\n/**\r\n * RFC 3001. See also ISO/IEC 8824:1990 €\r\n */\r\nexport interface FhirOidArgs extends fhir.FhirUriArgs {\r\n  /**\r\n   * RFC 3001. See also ISO/IEC 8824:1990 €\r\n   */\r\n  value?:FhirOid|string|undefined;\r\n}\r\n\r\n/**\r\n * RFC 3001. See also ISO/IEC 8824:1990 €\r\n */\r\nexport class FhirOid extends fhir.FhirUri {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'Oid';\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_jsonType:string = 'string';\r\n  // published regex: urn:oid:[0-2](\\.(0|[1-9][0-9]*))+\r\n  public static readonly _fts_regex:RegExp = /^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$/\r\n  /**\r\n   * A oid value, represented as a JS string\r\n   */\r\n  declare value?:string|null|undefined;\r\n  /**\r\n     * Create a FhirOid\r\n     * @param value RFC 3001. See also ISO/IEC 8824:1990 €\r\n     * @param id Unique id for inter-element referencing (uncommon on primitives)\r\n     * @param extension Additional content defined by implementations\r\n     * @param options Options to pass to extension constructors\r\n  */\r\n  constructor(source:Partial<FhirOidArgs> = {}, options:fhir.FhirConstructorOptions = { } ) {\r\n    super(source, options);\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if ((this.value) && (!FhirOid._fts_regex.test(this.value))) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.InvalidContent,  diagnostics: \"Invalid value in primitive type oid\", }));\r\n    }\r\n    return outcome;\r\n  }\r\n}\r\n"],"names":["fhir.OperationOutcomeIssue","fhir.FhirUri"],"mappings":";;;;;;;;AAAA;AAkBA;;AAEG;AACH,IAAA,OAAA,kBAAA,UAAA,MAAA,EAAA;IAA6B,SAAY,CAAA,OAAA,EAAA,MAAA,CAAA,CAAA;AAevC;;;;;;AAME;IACF,SAAY,OAAA,CAAA,MAAgC,EAAE,OAAyC,EAAA;AAA3E,QAAA,IAAA,MAAA,KAAA,KAAA,CAAA,EAAA,EAAA,MAAgC,GAAA,EAAA,CAAA,EAAA;AAAE,QAAA,IAAA,OAAA,KAAA,KAAA,CAAA,EAAA,EAAA,OAAyC,GAAA,EAAA,CAAA,EAAA;eACrF,MAAM,CAAA,IAAA,CAAA,IAAA,EAAA,MAAM,EAAE,OAAO,CAAC,IAAA,IAAA,CAAA;KACvB;AACD;;AAEG;AACa,IAAA,OAAA,CAAA,SAAA,CAAA,iBAAiB,GAAjC,YAAA;AACE,QAAA,IAAI,OAAO,GAAyB,MAAM,CAAA,SAAA,CAAA,iBAAiB,WAAE,CAAC;AAC9D,QAAA,IAAI,CAAC,IAAI,CAAC,KAAK,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;AAC1D,YAAA,OAAO,CAAC,KAAM,CAAC,IAAI,CAAC,IAAIA,qBAA0B,CAAC,EAAE,QAAQ,EAAE,kBAAkB,CAAC,KAAK,EAAE,IAAI,EAAE,cAAc,CAAC,cAAc,EAAG,WAAW,EAAE,qCAAqC,GAAG,CAAC,CAAC,CAAC;AACxL,SAAA;AACD,QAAA,OAAO,OAAO,CAAC;KAChB,CAAA;AAjCD;;AAEG;IACoB,OAAa,CAAA,aAAA,GAAU,KAAK,CAAC;AACpD;;AAEG;IACoB,OAAa,CAAA,aAAA,GAAU,QAAQ,CAAC;;IAEhC,OAAU,CAAA,UAAA,GAAU,qCAAqC,CAAA;IAyBlF,OAAC,OAAA,CAAA;AAAA,CAnCD,CAA6BC,OAAY,CAmCxC;;;;"}