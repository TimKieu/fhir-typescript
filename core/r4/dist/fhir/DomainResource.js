/*! @fhir-typescript/r4-core v0.0.11-beta.2 2022-05-18 */
'use strict';
import { __extends } from '../_virtual/_tslib.js';
import { resourceFactory } from '../fhir.js';
import { Resource } from './Resource.js';
import { Narrative } from './Narrative.js';
import { Extension } from './Extension.js';

// <auto-generated/>
/**
 * A resource that includes narrative, extensions, and contained resources.
 */
var DomainResource = /** @class */ (function (_super) {
    __extends(DomainResource, _super);
    /**
     * Default constructor for DomainResource - initializes any required elements to null if a value is not provided.
     */
    function DomainResource(source, options) {
        if (source === void 0) { source = {}; }
        if (options === void 0) { options = {}; }
        var _this = _super.call(this, source, options) || this;
        if (source['text']) {
            _this.text = new Narrative(source.text);
        }
        if (source['contained']) {
            _this.contained = [];
            source.contained.forEach(function (x) {
                var r = resourceFactory(x);
                if (r) {
                    _this.contained.push(r);
                }
            });
        }
        else {
            _this.contained = [];
        }
        if (source['extension']) {
            _this.extension = source.extension.map(function (x) { return new Extension(x); });
        }
        else {
            _this.extension = [];
        }
        if (source['modifierExtension']) {
            _this.modifierExtension = source.modifierExtension.map(function (x) { return new Extension(x); });
        }
        else {
            _this.modifierExtension = [];
        }
        return _this;
    }
    /**
     * Function to perform basic model validation (e.g., check if required elements are present).
     */
    DomainResource.prototype.doModelValidation = function () {
        var _a;
        var outcome = _super.prototype.doModelValidation.call(this);
        if (this["text"]) {
            (_a = outcome.issue).push.apply(_a, this.text.doModelValidation().issue);
        }
        if (this["contained"]) {
            this.contained.forEach(function (x) {
                var _a;
                (_a = outcome.issue).push.apply(_a, x.doModelValidation().issue);
            });
        }
        if (this["extension"]) {
            this.extension.forEach(function (x) {
                var _a;
                (_a = outcome.issue).push.apply(_a, x.doModelValidation().issue);
            });
        }
        if (this["modifierExtension"]) {
            this.modifierExtension.forEach(function (x) {
                var _a;
                (_a = outcome.issue).push.apply(_a, x.doModelValidation().issue);
            });
        }
        return outcome;
    };
    /**
     * Mapping of this datatype to a FHIR equivalent
     */
    DomainResource._fts_dataType = 'DomainResource';
    return DomainResource;
}(Resource));

export { DomainResource };
//# sourceMappingURL=DomainResource.js.map
