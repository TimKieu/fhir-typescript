/*! @fhir-typescript/r4-core v0.0.11-beta.2 2022-05-18 */
'use strict';
import { __extends } from '../_virtual/_tslib.js';
import { IssueTypeCodes } from '../fhirValueSets/IssueTypeCodes.js';
import { IssueSeverityCodes } from '../fhirValueSets/IssueSeverityCodes.js';
import { OperationOutcomeIssue } from './OperationOutcome.js';
import { BackboneElement } from './BackboneElement.js';
import { CodeableConcept } from './CodeableConcept.js';
import { Period } from './Period.js';
import { FhirDateTime } from './FhirDateTime.js';

// <auto-generated/>
/**
 * The marketing status describes the date when a medicinal product is actually put on the market or the date as of which it is no longer available.
 */
var MarketingStatus = /** @class */ (function (_super) {
    __extends(MarketingStatus, _super);
    /**
     * Default constructor for MarketingStatus - initializes any required elements to null if a value is not provided.
     */
    function MarketingStatus(source, options) {
        if (source === void 0) { source = {}; }
        if (options === void 0) { options = {}; }
        var _this = _super.call(this, source, options) || this;
        if (source['country']) {
            _this.country = new CodeableConcept(source.country);
        }
        else {
            _this.country = null;
        }
        if (source['jurisdiction']) {
            _this.jurisdiction = new CodeableConcept(source.jurisdiction);
        }
        if (source['status']) {
            _this.status = new CodeableConcept(source.status);
        }
        else {
            _this.status = null;
        }
        if (source['dateRange']) {
            _this.dateRange = new Period(source.dateRange);
        }
        else {
            _this.dateRange = null;
        }
        if (source['restoreDate']) {
            _this.restoreDate = new FhirDateTime({ value: source.restoreDate });
        }
        return _this;
    }
    /**
     * Function to perform basic model validation (e.g., check if required elements are present).
     */
    MarketingStatus.prototype.doModelValidation = function () {
        var _a, _b, _c, _d, _e;
        var outcome = _super.prototype.doModelValidation.call(this);
        if (!this['country']) {
            outcome.issue.push(new OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing, diagnostics: 'Missing required property country:fhir.CodeableConcept fhir: MarketingStatus.country:CodeableConcept', }));
        }
        if (this["country"]) {
            (_a = outcome.issue).push.apply(_a, this.country.doModelValidation().issue);
        }
        if (this["jurisdiction"]) {
            (_b = outcome.issue).push.apply(_b, this.jurisdiction.doModelValidation().issue);
        }
        if (!this['status']) {
            outcome.issue.push(new OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing, diagnostics: 'Missing required property status:fhir.CodeableConcept fhir: MarketingStatus.status:CodeableConcept', }));
        }
        if (this["status"]) {
            (_c = outcome.issue).push.apply(_c, this.status.doModelValidation().issue);
        }
        if (!this['dateRange']) {
            outcome.issue.push(new OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing, diagnostics: 'Missing required property dateRange:fhir.Period fhir: MarketingStatus.dateRange:Period', }));
        }
        if (this["dateRange"]) {
            (_d = outcome.issue).push.apply(_d, this.dateRange.doModelValidation().issue);
        }
        if (this["restoreDate"]) {
            (_e = outcome.issue).push.apply(_e, this.restoreDate.doModelValidation().issue);
        }
        return outcome;
    };
    /**
     * Mapping of this datatype to a FHIR equivalent
     */
    MarketingStatus._fts_dataType = 'MarketingStatus';
    return MarketingStatus;
}(BackboneElement));

export { MarketingStatus };
//# sourceMappingURL=MarketingStatus.js.map
