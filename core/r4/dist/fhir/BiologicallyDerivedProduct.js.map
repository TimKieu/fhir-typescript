{"version":3,"file":"BiologicallyDerivedProduct.js","sources":["../../src/fhir/BiologicallyDerivedProduct.ts"],"sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4.core version: 4.0.1\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR Resource: BiologicallyDerivedProduct\r\n\r\nimport * as fhir from '../fhir.js';\r\n\r\n// @ts-ignore\r\nimport { ProcedureCodeCodings, ProcedureCodeCodingType,} from '../fhirValueSets/ProcedureCodeCodings.js';\r\n// @ts-ignore\r\nimport { ProcedureCodeCodes,  ProcedureCodeCodeType } from '../fhirValueSets/ProcedureCodeCodes.js';\r\n// @ts-ignore\r\nimport { ProductStorageScaleCodings, ProductStorageScaleCodingType,} from '../fhirValueSets/ProductStorageScaleCodings.js';\r\n// @ts-ignore\r\nimport { ProductStorageScaleCodes,  ProductStorageScaleCodeType } from '../fhirValueSets/ProductStorageScaleCodes.js';\r\n// @ts-ignore\r\nimport { ProductCategoryCodings, ProductCategoryCodingType,} from '../fhirValueSets/ProductCategoryCodings.js';\r\n// @ts-ignore\r\nimport { ProductCategoryCodes,  ProductCategoryCodeType } from '../fhirValueSets/ProductCategoryCodes.js';\r\n// @ts-ignore\r\nimport { ProductStatusCodings, ProductStatusCodingType,} from '../fhirValueSets/ProductStatusCodings.js';\r\n// @ts-ignore\r\nimport { ProductStatusCodes,  ProductStatusCodeType } from '../fhirValueSets/ProductStatusCodes.js';\r\n// @ts-ignore\r\nimport { IssueTypeCodes } from '../fhirValueSets/IssueTypeCodes.js';\r\n// @ts-ignore\r\nimport { IssueSeverityCodes } from '../fhirValueSets/IssueSeverityCodes.js';\r\n/**\r\n * Valid arguments for the BiologicallyDerivedProductCollection type.\r\n */\r\nexport interface BiologicallyDerivedProductCollectionArgs extends fhir.BackboneElementArgs {\r\n  /**\r\n   * Healthcare professional who is performing the collection.\r\n   */\r\n  collector?: fhir.ReferenceArgs|undefined;\r\n  /**\r\n   * The patient or entity, such as a hospital or vendor in the case of a processed/manipulated/manufactured product, providing the product.\r\n   */\r\n  source?: fhir.ReferenceArgs|undefined;\r\n  /**\r\n   * Time of product collection.\r\n   */\r\n  collected?: fhir.FhirDateTime|fhir.Period|undefined;\r\n  /**\r\n   * Time of product collection.\r\n   */\r\n  collectedDateTime?: fhir.FhirDateTime|string|undefined;\r\n  /**\r\n   * Time of product collection.\r\n   */\r\n  collectedPeriod?: fhir.PeriodArgs|undefined;\r\n}\r\n\r\n/**\r\n * How this product was collected.\r\n */\r\nexport class BiologicallyDerivedProductCollection extends fhir.BackboneElement {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'BiologicallyDerivedProductCollection';\r\n  /**\r\n   * Healthcare professional who is performing the collection.\r\n   */\r\n  public collector?: fhir.Reference|undefined;\r\n  /**\r\n   * The patient or entity, such as a hospital or vendor in the case of a processed/manipulated/manufactured product, providing the product.\r\n   */\r\n  public source?: fhir.Reference|undefined;\r\n  /**\r\n   * Time of product collection.\r\n   */\r\n  public collected?: (fhir.FhirDateTime|fhir.Period)|undefined;\r\n  /**\r\n   * Internal flag to properly serialize choice-type element BiologicallyDerivedProduct.collection.collected[x]\r\n   */\r\n  protected static readonly _fts_collectedIsChoice:true = true;\r\n  /**\r\n   * Default constructor for BiologicallyDerivedProductCollection - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<BiologicallyDerivedProductCollectionArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    if (source['collector']) { this.collector = new fhir.Reference(source.collector); }\r\n    if (source['source']) { this.source = new fhir.Reference(source.source); }\r\n    if (source['collected']) { this.collected = source.collected; }\r\n    else if (source['collectedDateTime']) { this.collected = new fhir.FhirDateTime({value: source.collectedDateTime}); }\r\n    else if (source['collectedPeriod']) { this.collected = new fhir.Period(source.collectedPeriod); }\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (this[\"collector\"]) { outcome.issue!.push(...this.collector.doModelValidation().issue!); }\r\n    if (this[\"source\"]) { outcome.issue!.push(...this.source.doModelValidation().issue!); }\r\n    return outcome;\r\n  }\r\n}\r\n/**\r\n * Valid arguments for the BiologicallyDerivedProductProcessing type.\r\n */\r\nexport interface BiologicallyDerivedProductProcessingArgs extends fhir.BackboneElementArgs {\r\n  /**\r\n   * Description of of processing.\r\n   */\r\n  description?: fhir.FhirString|string|undefined;\r\n  /**\r\n   * Procesing code.\r\n   */\r\n  procedure?: fhir.CodeableConceptArgs|undefined;\r\n  /**\r\n   * Substance added during processing.\r\n   */\r\n  additive?: fhir.ReferenceArgs|undefined;\r\n  /**\r\n   * Time of processing.\r\n   */\r\n  time?: fhir.FhirDateTime|fhir.Period|undefined;\r\n  /**\r\n   * Time of processing.\r\n   */\r\n  timeDateTime?: fhir.FhirDateTime|string|undefined;\r\n  /**\r\n   * Time of processing.\r\n   */\r\n  timePeriod?: fhir.PeriodArgs|undefined;\r\n}\r\n\r\n/**\r\n * Any processing of the product during collection that does not change the fundamental nature of the product. For example adding anti-coagulants during the collection of Peripheral Blood Stem Cells.\r\n */\r\nexport class BiologicallyDerivedProductProcessing extends fhir.BackboneElement {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'BiologicallyDerivedProductProcessing';\r\n  /**\r\n   * Description of of processing.\r\n   */\r\n  public description?: fhir.FhirString|undefined;\r\n  /**\r\n   * Procesing code.\r\n   */\r\n  public procedure?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * Substance added during processing.\r\n   */\r\n  public additive?: fhir.Reference|undefined;\r\n  /**\r\n   * Time of processing.\r\n   */\r\n  public time?: (fhir.FhirDateTime|fhir.Period)|undefined;\r\n  /**\r\n   * Internal flag to properly serialize choice-type element BiologicallyDerivedProduct.processing.time[x]\r\n   */\r\n  protected static readonly _fts_timeIsChoice:true = true;\r\n  /**\r\n   * Default constructor for BiologicallyDerivedProductProcessing - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<BiologicallyDerivedProductProcessingArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    if (source['description']) { this.description = new fhir.FhirString({value: source.description}); }\r\n    if (source['procedure']) { this.procedure = new fhir.CodeableConcept(source.procedure); }\r\n    if (source['additive']) { this.additive = new fhir.Reference(source.additive); }\r\n    if (source['time']) { this.time = source.time; }\r\n    else if (source['timeDateTime']) { this.time = new fhir.FhirDateTime({value: source.timeDateTime}); }\r\n    else if (source['timePeriod']) { this.time = new fhir.Period(source.timePeriod); }\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (this[\"description\"]) { outcome.issue!.push(...this.description.doModelValidation().issue!); }\r\n    if (this[\"procedure\"]) { outcome.issue!.push(...this.procedure.doModelValidation().issue!); }\r\n    if (this[\"additive\"]) { outcome.issue!.push(...this.additive.doModelValidation().issue!); }\r\n    return outcome;\r\n  }\r\n}\r\n/**\r\n * Valid arguments for the BiologicallyDerivedProductManipulation type.\r\n */\r\nexport interface BiologicallyDerivedProductManipulationArgs extends fhir.BackboneElementArgs {\r\n  /**\r\n   * Description of manipulation.\r\n   */\r\n  description?: fhir.FhirString|string|undefined;\r\n  /**\r\n   * Time of manipulation.\r\n   */\r\n  time?: fhir.FhirDateTime|fhir.Period|undefined;\r\n  /**\r\n   * Time of manipulation.\r\n   */\r\n  timeDateTime?: fhir.FhirDateTime|string|undefined;\r\n  /**\r\n   * Time of manipulation.\r\n   */\r\n  timePeriod?: fhir.PeriodArgs|undefined;\r\n}\r\n\r\n/**\r\n * Any manipulation of product post-collection that is intended to alter the product.  For example a buffy-coat enrichment or CD8 reduction of Peripheral Blood Stem Cells to make it more suitable for infusion.\r\n */\r\nexport class BiologicallyDerivedProductManipulation extends fhir.BackboneElement {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'BiologicallyDerivedProductManipulation';\r\n  /**\r\n   * Description of manipulation.\r\n   */\r\n  public description?: fhir.FhirString|undefined;\r\n  /**\r\n   * Time of manipulation.\r\n   */\r\n  public time?: (fhir.FhirDateTime|fhir.Period)|undefined;\r\n  /**\r\n   * Internal flag to properly serialize choice-type element BiologicallyDerivedProduct.manipulation.time[x]\r\n   */\r\n  protected static readonly _fts_timeIsChoice:true = true;\r\n  /**\r\n   * Default constructor for BiologicallyDerivedProductManipulation - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<BiologicallyDerivedProductManipulationArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    if (source['description']) { this.description = new fhir.FhirString({value: source.description}); }\r\n    if (source['time']) { this.time = source.time; }\r\n    else if (source['timeDateTime']) { this.time = new fhir.FhirDateTime({value: source.timeDateTime}); }\r\n    else if (source['timePeriod']) { this.time = new fhir.Period(source.timePeriod); }\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (this[\"description\"]) { outcome.issue!.push(...this.description.doModelValidation().issue!); }\r\n    return outcome;\r\n  }\r\n}\r\n/**\r\n * Valid arguments for the BiologicallyDerivedProductStorage type.\r\n */\r\nexport interface BiologicallyDerivedProductStorageArgs extends fhir.BackboneElementArgs {\r\n  /**\r\n   * Description of storage.\r\n   */\r\n  description?: fhir.FhirString|string|undefined;\r\n  /**\r\n   * Storage temperature.\r\n   */\r\n  temperature?: fhir.FhirDecimal|number|undefined;\r\n  /**\r\n   * Temperature scale used.\r\n   */\r\n  scale?: ProductStorageScaleCodeType|undefined;\r\n  /**\r\n   * Storage timeperiod.\r\n   */\r\n  duration?: fhir.PeriodArgs|undefined;\r\n}\r\n\r\n/**\r\n * Product storage.\r\n */\r\nexport class BiologicallyDerivedProductStorage extends fhir.BackboneElement {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'BiologicallyDerivedProductStorage';\r\n  /**\r\n   * Description of storage.\r\n   */\r\n  public description?: fhir.FhirString|undefined;\r\n  /**\r\n   * Storage temperature.\r\n   */\r\n  public temperature?: fhir.FhirDecimal|undefined;\r\n  /**\r\n   * Temperature scale used.\r\n   */\r\n  public scale?: ProductStorageScaleCodeType|undefined;\r\n  /**\r\n   * Storage timeperiod.\r\n   */\r\n  public duration?: fhir.Period|undefined;\r\n  /**\r\n   * Default constructor for BiologicallyDerivedProductStorage - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<BiologicallyDerivedProductStorageArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    if (source['description']) { this.description = new fhir.FhirString({value: source.description}); }\r\n    if (source['temperature']) { this.temperature = new fhir.FhirDecimal({value: source.temperature}); }\r\n    if (source['scale']) { this.scale = source.scale; }\r\n    if (source['duration']) { this.duration = new fhir.Period(source.duration); }\r\n  }\r\n  /**\r\n   * Required-bound Value Set for scale (BiologicallyDerivedProduct.storage.scale)\r\n   */\r\n  public static scaleRequiredCoding():ProductStorageScaleCodingType {\r\n    return ProductStorageScaleCodings;\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (this[\"description\"]) { outcome.issue!.push(...this.description.doModelValidation().issue!); }\r\n    if (this[\"temperature\"]) { outcome.issue!.push(...this.temperature.doModelValidation().issue!); }\r\n    if (this[\"duration\"]) { outcome.issue!.push(...this.duration.doModelValidation().issue!); }\r\n    return outcome;\r\n  }\r\n}\r\n/**\r\n * Valid arguments for the BiologicallyDerivedProduct type.\r\n */\r\nexport interface BiologicallyDerivedProductArgs extends fhir.DomainResourceArgs {\r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  resourceType: \"BiologicallyDerivedProduct\"|undefined;\r\n  /**\r\n   * This records identifiers associated with this biologically derived product instance that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate (e.g. in CDA documents, or in written / printed documentation).\r\n   */\r\n  identifier?: fhir.IdentifierArgs[]|undefined;\r\n  /**\r\n   * Broad category of this product.\r\n   */\r\n  productCategory?: ProductCategoryCodeType|undefined;\r\n  /**\r\n   * A code that identifies the kind of this biologically derived product (SNOMED Ctcode).\r\n   */\r\n  productCode?: fhir.CodeableConceptArgs|undefined;\r\n  /**\r\n   * Whether the product is currently available.\r\n   */\r\n  status?: ProductStatusCodeType|undefined;\r\n  /**\r\n   * Procedure request to obtain this biologically derived product.\r\n   */\r\n  request?: fhir.ReferenceArgs[]|undefined;\r\n  /**\r\n   * Number of discrete units within this product.\r\n   */\r\n  quantity?: fhir.FhirInteger|number|undefined;\r\n  /**\r\n   * For products that have multiple collections. For example Peripheral Blood Stem Cells may be collected over several days from a single donor and the donation split into in multiple containers which must be linked to the parent donation.\r\n   */\r\n  parent?: fhir.ReferenceArgs[]|undefined;\r\n  /**\r\n   * How this product was collected.\r\n   */\r\n  collection?: fhir.BiologicallyDerivedProductCollectionArgs|undefined;\r\n  /**\r\n   * Any processing of the product during collection that does not change the fundamental nature of the product. For example adding anti-coagulants during the collection of Peripheral Blood Stem Cells.\r\n   */\r\n  processing?: fhir.BiologicallyDerivedProductProcessingArgs[]|undefined;\r\n  /**\r\n   * Any manipulation of product post-collection that is intended to alter the product.  For example a buffy-coat enrichment or CD8 reduction of Peripheral Blood Stem Cells to make it more suitable for infusion.\r\n   */\r\n  manipulation?: fhir.BiologicallyDerivedProductManipulationArgs|undefined;\r\n  /**\r\n   * Product storage.\r\n   */\r\n  storage?: fhir.BiologicallyDerivedProductStorageArgs[]|undefined;\r\n}\r\n\r\n/**\r\n * A material substance originating from a biological entity intended to be transplanted or infused\r\n * into another (possibly the same) biological entity.\r\n */\r\nexport class BiologicallyDerivedProduct extends fhir.DomainResource {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'BiologicallyDerivedProduct';\r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  public resourceType: \"BiologicallyDerivedProduct\";\r\n  /**\r\n   * This records identifiers associated with this biologically derived product instance that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate (e.g. in CDA documents, or in written / printed documentation).\r\n   */\r\n  public identifier?: fhir.Identifier[];\r\n  /**\r\n   * Broad category of this product.\r\n   */\r\n  public productCategory?: ProductCategoryCodeType|undefined;\r\n  /**\r\n   * A code that identifies the kind of this biologically derived product (SNOMED Ctcode).\r\n   */\r\n  public productCode?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * Whether the product is currently available.\r\n   */\r\n  public status?: ProductStatusCodeType|undefined;\r\n  /**\r\n   * Procedure request to obtain this biologically derived product.\r\n   */\r\n  public request?: fhir.Reference[];\r\n  /**\r\n   * Number of discrete units within this product.\r\n   */\r\n  public quantity?: fhir.FhirInteger|undefined;\r\n  /**\r\n   * For products that have multiple collections. For example Peripheral Blood Stem Cells may be collected over several days from a single donor and the donation split into in multiple containers which must be linked to the parent donation.\r\n   */\r\n  public parent?: fhir.Reference[];\r\n  /**\r\n   * How this product was collected.\r\n   */\r\n  public collection?: fhir.BiologicallyDerivedProductCollection|undefined;\r\n  /**\r\n   * Any processing of the product during collection that does not change the fundamental nature of the product. For example adding anti-coagulants during the collection of Peripheral Blood Stem Cells.\r\n   */\r\n  public processing?: fhir.BiologicallyDerivedProductProcessing[];\r\n  /**\r\n   * Any manipulation of product post-collection that is intended to alter the product.  For example a buffy-coat enrichment or CD8 reduction of Peripheral Blood Stem Cells to make it more suitable for infusion.\r\n   */\r\n  public manipulation?: fhir.BiologicallyDerivedProductManipulation|undefined;\r\n  /**\r\n   * Product storage.\r\n   */\r\n  public storage?: fhir.BiologicallyDerivedProductStorage[];\r\n  /**\r\n   * Default constructor for BiologicallyDerivedProduct - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<BiologicallyDerivedProductArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    this.resourceType = 'BiologicallyDerivedProduct';\r\n    if (source['identifier']) { this.identifier = source.identifier.map((x) => new fhir.Identifier(x)); }\r\n    else { this.identifier = []; }\r\n    if (source['productCategory']) { this.productCategory = source.productCategory; }\r\n    if (source['productCode']) { this.productCode = new fhir.CodeableConcept(source.productCode); }\r\n    if (source['status']) { this.status = source.status; }\r\n    if (source['request']) { this.request = source.request.map((x) => new fhir.Reference(x)); }\r\n    else { this.request = []; }\r\n    if (source['quantity']) { this.quantity = new fhir.FhirInteger({value: source.quantity}); }\r\n    if (source['parent']) { this.parent = source.parent.map((x) => new fhir.Reference(x)); }\r\n    else { this.parent = []; }\r\n    if (source['collection']) { this.collection = new fhir.BiologicallyDerivedProductCollection(source.collection); }\r\n    if (source['processing']) { this.processing = source.processing.map((x) => new fhir.BiologicallyDerivedProductProcessing(x)); }\r\n    else { this.processing = []; }\r\n    if (source['manipulation']) { this.manipulation = new fhir.BiologicallyDerivedProductManipulation(source.manipulation); }\r\n    if (source['storage']) { this.storage = source.storage.map((x) => new fhir.BiologicallyDerivedProductStorage(x)); }\r\n    else { this.storage = []; }\r\n  }\r\n  /**\r\n   * Required-bound Value Set for productCategory (BiologicallyDerivedProduct.productCategory)\r\n   */\r\n  public static productCategoryRequiredCoding():ProductCategoryCodingType {\r\n    return ProductCategoryCodings;\r\n  }\r\n  /**\r\n   * Required-bound Value Set for status (BiologicallyDerivedProduct.status)\r\n   */\r\n  public static statusRequiredCoding():ProductStatusCodingType {\r\n    return ProductStatusCodings;\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (!this['resourceType']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property resourceType:\"BiologicallyDerivedProduct\" fhir: BiologicallyDerivedProduct.resourceType:\"BiologicallyDerivedProduct\"', }));\r\n    }\r\n    if (this[\"identifier\"]) { this.identifier.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"productCode\"]) { outcome.issue!.push(...this.productCode.doModelValidation().issue!); }\r\n    if (this[\"request\"]) { this.request.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"quantity\"]) { outcome.issue!.push(...this.quantity.doModelValidation().issue!); }\r\n    if (this[\"parent\"]) { this.parent.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"collection\"]) { outcome.issue!.push(...this.collection.doModelValidation().issue!); }\r\n    if (this[\"processing\"]) { this.processing.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"manipulation\"]) { outcome.issue!.push(...this.manipulation.doModelValidation().issue!); }\r\n    if (this[\"storage\"]) { this.storage.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    return outcome;\r\n  }\r\n}\r\n"],"names":["fhir.Reference","fhir.FhirDateTime","fhir.Period","fhir.BackboneElement","fhir.FhirString","fhir.CodeableConcept","fhir.FhirDecimal","fhir.Identifier","fhir.FhirInteger","fhir.BiologicallyDerivedProductCollection","fhir.BiologicallyDerivedProductProcessing","fhir.BiologicallyDerivedProductManipulation","fhir.BiologicallyDerivedProductStorage","fhir.OperationOutcomeIssue","fhir.DomainResource"],"mappings":"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"}