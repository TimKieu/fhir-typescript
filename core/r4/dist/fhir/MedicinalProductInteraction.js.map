{"version":3,"file":"MedicinalProductInteraction.js","sources":["../../src/fhir/MedicinalProductInteraction.ts"],"sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4.core version: 4.0.1\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR Resource: MedicinalProductInteraction\r\n\r\nimport * as fhir from '../fhir.js';\r\n\r\n// @ts-ignore\r\nimport { IssueTypeCodes } from '../fhirValueSets/IssueTypeCodes.js';\r\n// @ts-ignore\r\nimport { IssueSeverityCodes } from '../fhirValueSets/IssueSeverityCodes.js';\r\n/**\r\n * Valid arguments for the MedicinalProductInteractionInteractant type.\r\n */\r\nexport interface MedicinalProductInteractionInteractantArgs extends fhir.BackboneElementArgs {\r\n  /**\r\n   * The specific medication, food or laboratory test that interacts.\r\n   */\r\n  item?: fhir.Reference|fhir.CodeableConcept|undefined;\r\n  /**\r\n   * The specific medication, food or laboratory test that interacts.\r\n   */\r\n  itemReference?: fhir.ReferenceArgs|undefined;\r\n  /**\r\n   * The specific medication, food or laboratory test that interacts.\r\n   */\r\n  itemCodeableConcept?: fhir.CodeableConceptArgs|undefined;\r\n}\r\n\r\n/**\r\n * The specific medication, food or laboratory test that interacts.\r\n */\r\nexport class MedicinalProductInteractionInteractant extends fhir.BackboneElement {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'MedicinalProductInteractionInteractant';\r\n  /**\r\n   * The specific medication, food or laboratory test that interacts.\r\n   */\r\n  public item: (fhir.Reference|fhir.CodeableConcept)|null;\r\n  /**\r\n   * Internal flag to properly serialize choice-type element MedicinalProductInteraction.interactant.item[x]\r\n   */\r\n  protected static readonly _fts_itemIsChoice:true = true;\r\n  /**\r\n   * Default constructor for MedicinalProductInteractionInteractant - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<MedicinalProductInteractionInteractantArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    if (source['item']) { this.item = source.item; }\r\n    else if (source['itemReference']) { this.item = new fhir.Reference(source.itemReference); }\r\n    else if (source['itemCodeableConcept']) { this.item = new fhir.CodeableConcept(source.itemCodeableConcept); }\r\n    else { this.item = null; }\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (!this['item']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property item: fhir: MedicinalProductInteraction.interactant.item[x]:', }));\r\n    }\r\n    return outcome;\r\n  }\r\n}\r\n/**\r\n * Valid arguments for the MedicinalProductInteraction type.\r\n */\r\nexport interface MedicinalProductInteractionArgs extends fhir.DomainResourceArgs {\r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  resourceType: \"MedicinalProductInteraction\"|undefined;\r\n  /**\r\n   * The medication for which this is a described interaction.\r\n   */\r\n  subject?: fhir.ReferenceArgs[]|undefined;\r\n  /**\r\n   * The interaction described.\r\n   */\r\n  description?: fhir.FhirString|string|undefined;\r\n  /**\r\n   * The specific medication, food or laboratory test that interacts.\r\n   */\r\n  interactant?: fhir.MedicinalProductInteractionInteractantArgs[]|undefined;\r\n  /**\r\n   * The type of the interaction e.g. drug-drug interaction, drug-food interaction, drug-lab test interaction.\r\n   */\r\n  type?: fhir.CodeableConceptArgs|undefined;\r\n  /**\r\n   * The effect of the interaction, for example \"reduced gastric absorption of primary medication\".\r\n   */\r\n  effect?: fhir.CodeableConceptArgs|undefined;\r\n  /**\r\n   * The incidence of the interaction, e.g. theoretical, observed.\r\n   */\r\n  incidence?: fhir.CodeableConceptArgs|undefined;\r\n  /**\r\n   * Actions for managing the interaction.\r\n   */\r\n  management?: fhir.CodeableConceptArgs|undefined;\r\n}\r\n\r\n/**\r\n * The interactions of the medicinal product with other medicinal products, or other forms of interactions.\r\n */\r\nexport class MedicinalProductInteraction extends fhir.DomainResource {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'MedicinalProductInteraction';\r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  public resourceType: \"MedicinalProductInteraction\";\r\n  /**\r\n   * The medication for which this is a described interaction.\r\n   */\r\n  public subject?: fhir.Reference[];\r\n  /**\r\n   * The interaction described.\r\n   */\r\n  public description?: fhir.FhirString|undefined;\r\n  /**\r\n   * The specific medication, food or laboratory test that interacts.\r\n   */\r\n  public interactant?: fhir.MedicinalProductInteractionInteractant[];\r\n  /**\r\n   * The type of the interaction e.g. drug-drug interaction, drug-food interaction, drug-lab test interaction.\r\n   */\r\n  public type?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * The effect of the interaction, for example \"reduced gastric absorption of primary medication\".\r\n   */\r\n  public effect?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * The incidence of the interaction, e.g. theoretical, observed.\r\n   */\r\n  public incidence?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * Actions for managing the interaction.\r\n   */\r\n  public management?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * Default constructor for MedicinalProductInteraction - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<MedicinalProductInteractionArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    this.resourceType = 'MedicinalProductInteraction';\r\n    if (source['subject']) { this.subject = source.subject.map((x) => new fhir.Reference(x)); }\r\n    else { this.subject = []; }\r\n    if (source['description']) { this.description = new fhir.FhirString({value: source.description}); }\r\n    if (source['interactant']) { this.interactant = source.interactant.map((x) => new fhir.MedicinalProductInteractionInteractant(x)); }\r\n    else { this.interactant = []; }\r\n    if (source['type']) { this.type = new fhir.CodeableConcept(source.type); }\r\n    if (source['effect']) { this.effect = new fhir.CodeableConcept(source.effect); }\r\n    if (source['incidence']) { this.incidence = new fhir.CodeableConcept(source.incidence); }\r\n    if (source['management']) { this.management = new fhir.CodeableConcept(source.management); }\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (!this['resourceType']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property resourceType:\"MedicinalProductInteraction\" fhir: MedicinalProductInteraction.resourceType:\"MedicinalProductInteraction\"', }));\r\n    }\r\n    if (this[\"subject\"]) { this.subject.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"description\"]) { outcome.issue!.push(...this.description.doModelValidation().issue!); }\r\n    if (this[\"interactant\"]) { this.interactant.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"type\"]) { outcome.issue!.push(...this.type.doModelValidation().issue!); }\r\n    if (this[\"effect\"]) { outcome.issue!.push(...this.effect.doModelValidation().issue!); }\r\n    if (this[\"incidence\"]) { outcome.issue!.push(...this.incidence.doModelValidation().issue!); }\r\n    if (this[\"management\"]) { outcome.issue!.push(...this.management.doModelValidation().issue!); }\r\n    return outcome;\r\n  }\r\n}\r\n"],"names":["fhir.Reference","fhir.CodeableConcept","fhir.OperationOutcomeIssue","fhir.BackboneElement","fhir.FhirString","fhir.MedicinalProductInteractionInteractant","fhir.DomainResource"],"mappings":"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"}