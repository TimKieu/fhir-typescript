/*! @fhir-typescript/r4-core v0.0.11-beta.2 2022-05-18 */
'use strict';
import { __extends } from '../_virtual/_tslib.js';
import { CurrenciesCodings } from '../fhirValueSets/CurrenciesCodings.js';
import { FhirElement } from './FhirElement.js';
import { FhirDecimal } from './FhirDecimal.js';
import { FhirCode } from './FhirCode.js';

// <auto-generated/>
/**
 * An amount of economic utility in some recognized currency.
 */
var Money = /** @class */ (function (_super) {
    __extends(Money, _super);
    /**
     * Default constructor for Money - initializes any required elements to null if a value is not provided.
     */
    function Money(source, options) {
        if (source === void 0) { source = {}; }
        if (options === void 0) { options = {}; }
        var _this = _super.call(this, source, options) || this;
        if (source['value']) {
            _this.value = new FhirDecimal({ value: source.value });
        }
        if (source['currency']) {
            _this.currency = new FhirCode({ value: source.currency });
        }
        return _this;
    }
    /**
     * Required-bound Value Set for currency (Money.currency)
     */
    Money.currencyRequiredCoding = function () {
        return CurrenciesCodings;
    };
    /**
     * Function to perform basic model validation (e.g., check if required elements are present).
     */
    Money.prototype.doModelValidation = function () {
        var _a, _b;
        var outcome = _super.prototype.doModelValidation.call(this);
        if (this["value"]) {
            (_a = outcome.issue).push.apply(_a, this.value.doModelValidation().issue);
        }
        if (this["currency"]) {
            (_b = outcome.issue).push.apply(_b, this.currency.doModelValidation().issue);
        }
        return outcome;
    };
    /**
     * Mapping of this datatype to a FHIR equivalent
     */
    Money._fts_dataType = 'Money';
    return Money;
}(FhirElement));

export { Money };
//# sourceMappingURL=Money.js.map
