{"version":3,"file":"Annotation.js","sources":["../../src/fhir/Annotation.ts"],"sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4.core version: 4.0.1\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR ComplexType: Annotation\r\n\r\nimport * as fhir from '../fhir.js';\r\n\r\n// @ts-ignore\r\nimport { IssueTypeCodes } from '../fhirValueSets/IssueTypeCodes.js';\r\n// @ts-ignore\r\nimport { IssueSeverityCodes } from '../fhirValueSets/IssueSeverityCodes.js';\r\n/**\r\n * Valid arguments for the Annotation type.\r\n */\r\nexport interface AnnotationArgs extends fhir.FhirElementArgs {\r\n  /**\r\n   * Organization is used when there's no need for specific attribution as to who made the comment.\r\n   */\r\n  author?: fhir.Reference|fhir.FhirString|undefined;\r\n  /**\r\n   * Organization is used when there's no need for specific attribution as to who made the comment.\r\n   */\r\n  authorReference?: fhir.ReferenceArgs|undefined;\r\n  /**\r\n   * Organization is used when there's no need for specific attribution as to who made the comment.\r\n   */\r\n  authorString?: fhir.FhirString|string|undefined;\r\n  /**\r\n   * Indicates when this particular annotation was made.\r\n   */\r\n  time?: fhir.FhirDateTime|string|undefined;\r\n  /**\r\n   * The text of the annotation in markdown format.\r\n   */\r\n  text: fhir.FhirMarkdown|string|undefined;\r\n}\r\n\r\n/**\r\n * A  text note which also  contains information about who made the statement and when.\r\n */\r\nexport class Annotation extends fhir.FhirElement {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'Annotation';\r\n  /**\r\n   * Organization is used when there's no need for specific attribution as to who made the comment.\r\n   */\r\n  public author?: (fhir.Reference|fhir.FhirString)|undefined;\r\n  /**\r\n   * Internal flag to properly serialize choice-type element Annotation.author[x]\r\n   */\r\n  protected static readonly _fts_authorIsChoice:true = true;\r\n  /**\r\n   * Indicates when this particular annotation was made.\r\n   */\r\n  public time?: fhir.FhirDateTime|undefined;\r\n  /**\r\n   * The text of the annotation in markdown format.\r\n   */\r\n  public text: fhir.FhirMarkdown|null;\r\n  /**\r\n   * Default constructor for Annotation - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<AnnotationArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    if (source['author']) { this.author = source.author; }\r\n    else if (source['authorReference']) { this.author = new fhir.Reference(source.authorReference); }\r\n    else if (source['authorString']) { this.author = new fhir.FhirString({value: source.authorString}); }\r\n    if (source['time']) { this.time = new fhir.FhirDateTime({value: source.time}); }\r\n    if (source['text']) { this.text = new fhir.FhirMarkdown({value: source.text}); }\r\n    else { this.text = null; }\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (this[\"time\"]) { outcome.issue!.push(...this.time.doModelValidation().issue!); }\r\n    if (!this['text']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property text:fhir.FhirMarkdown fhir: Annotation.text:markdown', }));\r\n    }\r\n    if (this[\"text\"]) { outcome.issue!.push(...this.text.doModelValidation().issue!); }\r\n    return outcome;\r\n  }\r\n}\r\n"],"names":["fhir.Reference","fhir.FhirString","fhir.FhirDateTime","fhir.FhirMarkdown","fhir.OperationOutcomeIssue","fhir.FhirElement"],"mappings":";;;;;;;;;;;;AAAA;AAqCA;;AAEG;AACH,IAAA,UAAA,kBAAA,UAAA,MAAA,EAAA;IAAgC,SAAgB,CAAA,UAAA,EAAA,MAAA,CAAA,CAAA;AAqB9C;;AAEG;IACH,SAAY,UAAA,CAAA,MAAmC,EAAE,OAAwC,EAAA;AAA7E,QAAA,IAAA,MAAA,KAAA,KAAA,CAAA,EAAA,EAAA,MAAmC,GAAA,EAAA,CAAA,EAAA;AAAE,QAAA,IAAA,OAAA,KAAA,KAAA,CAAA,EAAA,EAAA,OAAwC,GAAA,EAAA,CAAA,EAAA;AAAzF,QAAA,IAAA,KAAA,GACE,MAAM,CAAA,IAAA,CAAA,IAAA,EAAA,MAAM,EAAE,OAAO,CAAC,IAOvB,IAAA,CAAA;AANC,QAAA,IAAI,MAAM,CAAC,QAAQ,CAAC,EAAE;AAAE,YAAA,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;AAAE,SAAA;AACjD,aAAA,IAAI,MAAM,CAAC,iBAAiB,CAAC,EAAE;AAAE,YAAA,KAAI,CAAC,MAAM,GAAG,IAAIA,SAAc,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;AAAE,SAAA;AAC5F,aAAA,IAAI,MAAM,CAAC,cAAc,CAAC,EAAE;AAAE,YAAA,KAAI,CAAC,MAAM,GAAG,IAAIC,UAAe,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,YAAY,EAAC,CAAC,CAAC;AAAE,SAAA;AACrG,QAAA,IAAI,MAAM,CAAC,MAAM,CAAC,EAAE;AAAE,YAAA,KAAI,CAAC,IAAI,GAAG,IAAIC,YAAiB,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAC,CAAC,CAAC;AAAE,SAAA;AAChF,QAAA,IAAI,MAAM,CAAC,MAAM,CAAC,EAAE;AAAE,YAAA,KAAI,CAAC,IAAI,GAAG,IAAIC,YAAiB,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAC,CAAC,CAAC;AAAE,SAAA;AAC3E,aAAA;AAAE,YAAA,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AAAE,SAAA;;KAC3B;AACD;;AAEG;AACa,IAAA,UAAA,CAAA,SAAA,CAAA,iBAAiB,GAAjC,YAAA;;AACE,QAAA,IAAI,OAAO,GAAyB,MAAM,CAAA,SAAA,CAAA,iBAAiB,WAAE,CAAC;AAC9D,QAAA,IAAI,IAAI,CAAC,MAAM,CAAC,EAAE;AAAE,YAAA,CAAA,KAAA,OAAO,CAAC,KAAM,EAAC,IAAI,CAAA,KAAA,CAAA,EAAA,EAAI,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,KAAM,CAAE,CAAA;AAAE,SAAA;AACnF,QAAA,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;AACjB,YAAA,OAAO,CAAC,KAAM,CAAC,IAAI,CAAC,IAAIC,qBAA0B,CAAC,EAAE,QAAQ,EAAE,kBAAkB,CAAC,KAAK,EAAE,IAAI,EAAE,cAAc,CAAC,sBAAsB,EAAG,WAAW,EAAE,iFAAiF,GAAG,CAAC,CAAC,CAAC;AAC5O,SAAA;AACD,QAAA,IAAI,IAAI,CAAC,MAAM,CAAC,EAAE;AAAE,YAAA,CAAA,KAAA,OAAO,CAAC,KAAM,EAAC,IAAI,CAAA,KAAA,CAAA,EAAA,EAAI,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,KAAM,CAAE,CAAA;AAAE,SAAA;AACnF,QAAA,OAAO,OAAO,CAAC;KAChB,CAAA;AA3CD;;AAEG;IACoB,UAAa,CAAA,aAAA,GAAU,YAAY,CAAC;AAK3D;;AAEG;IACuB,UAAmB,CAAA,mBAAA,GAAQ,IAAI,CAAC;IAiC5D,OAAC,UAAA,CAAA;AAAA,CA7CD,CAAgCC,WAAgB,CA6C/C;;;;"}