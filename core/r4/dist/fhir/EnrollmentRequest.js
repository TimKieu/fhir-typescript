/*! @fhir-typescript/r4-core v0.0.11-beta.2 2022-05-18 */
'use strict';
import { __extends } from '../_virtual/_tslib.js';
import { FmStatusCodings } from '../fhirValueSets/FmStatusCodings.js';
import { IssueTypeCodes } from '../fhirValueSets/IssueTypeCodes.js';
import { IssueSeverityCodes } from '../fhirValueSets/IssueSeverityCodes.js';
import { OperationOutcomeIssue } from './OperationOutcome.js';
import { DomainResource } from './DomainResource.js';
import { Identifier } from './Identifier.js';
import { FhirDateTime } from './FhirDateTime.js';
import { Reference } from './Reference.js';

// <auto-generated/>
/**
 * This resource provides the insurance enrollment details to the insurer regarding a specified coverage.
 */
var EnrollmentRequest = /** @class */ (function (_super) {
    __extends(EnrollmentRequest, _super);
    /**
     * Default constructor for EnrollmentRequest - initializes any required elements to null if a value is not provided.
     */
    function EnrollmentRequest(source, options) {
        if (source === void 0) { source = {}; }
        if (options === void 0) { options = {}; }
        var _this = _super.call(this, source, options) || this;
        _this.resourceType = 'EnrollmentRequest';
        if (source['identifier']) {
            _this.identifier = source.identifier.map(function (x) { return new Identifier(x); });
        }
        else {
            _this.identifier = [];
        }
        if (source['status']) {
            _this.status = source.status;
        }
        if (source['created']) {
            _this.created = new FhirDateTime({ value: source.created });
        }
        if (source['insurer']) {
            _this.insurer = new Reference(source.insurer);
        }
        if (source['provider']) {
            _this.provider = new Reference(source.provider);
        }
        if (source['candidate']) {
            _this.candidate = new Reference(source.candidate);
        }
        if (source['coverage']) {
            _this.coverage = new Reference(source.coverage);
        }
        return _this;
    }
    /**
     * Required-bound Value Set for status (EnrollmentRequest.status)
     */
    EnrollmentRequest.statusRequiredCoding = function () {
        return FmStatusCodings;
    };
    /**
     * Function to perform basic model validation (e.g., check if required elements are present).
     */
    EnrollmentRequest.prototype.doModelValidation = function () {
        var _a, _b, _c, _d, _e;
        var outcome = _super.prototype.doModelValidation.call(this);
        if (!this['resourceType']) {
            outcome.issue.push(new OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing, diagnostics: 'Missing required property resourceType:"EnrollmentRequest" fhir: EnrollmentRequest.resourceType:"EnrollmentRequest"', }));
        }
        if (this["identifier"]) {
            this.identifier.forEach(function (x) {
                var _a;
                (_a = outcome.issue).push.apply(_a, x.doModelValidation().issue);
            });
        }
        if (this["created"]) {
            (_a = outcome.issue).push.apply(_a, this.created.doModelValidation().issue);
        }
        if (this["insurer"]) {
            (_b = outcome.issue).push.apply(_b, this.insurer.doModelValidation().issue);
        }
        if (this["provider"]) {
            (_c = outcome.issue).push.apply(_c, this.provider.doModelValidation().issue);
        }
        if (this["candidate"]) {
            (_d = outcome.issue).push.apply(_d, this.candidate.doModelValidation().issue);
        }
        if (this["coverage"]) {
            (_e = outcome.issue).push.apply(_e, this.coverage.doModelValidation().issue);
        }
        return outcome;
    };
    /**
     * Mapping of this datatype to a FHIR equivalent
     */
    EnrollmentRequest._fts_dataType = 'EnrollmentRequest';
    return EnrollmentRequest;
}(DomainResource));

export { EnrollmentRequest };
//# sourceMappingURL=EnrollmentRequest.js.map
