{"version":3,"file":"VisionPrescription.js","sources":["../../src/fhir/VisionPrescription.ts"],"sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4.core version: 4.0.1\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR Resource: VisionPrescription\r\n\r\nimport * as fhir from '../fhir.js';\r\n\r\n// @ts-ignore\r\nimport { VisionBaseCodesCodings, VisionBaseCodesCodingType,} from '../fhirValueSets/VisionBaseCodesCodings.js';\r\n// @ts-ignore\r\nimport { VisionBaseCodesCodes,  VisionBaseCodesCodeType } from '../fhirValueSets/VisionBaseCodesCodes.js';\r\n// @ts-ignore\r\nimport { VisionProductCodings, VisionProductCodingType,} from '../fhirValueSets/VisionProductCodings.js';\r\n// @ts-ignore\r\nimport { VisionProductCodes,  VisionProductCodeType } from '../fhirValueSets/VisionProductCodes.js';\r\n// @ts-ignore\r\nimport { VisionEyeCodesCodings, VisionEyeCodesCodingType,} from '../fhirValueSets/VisionEyeCodesCodings.js';\r\n// @ts-ignore\r\nimport { VisionEyeCodesCodes,  VisionEyeCodesCodeType } from '../fhirValueSets/VisionEyeCodesCodes.js';\r\n// @ts-ignore\r\nimport { FmStatusCodings, FmStatusCodingType,} from '../fhirValueSets/FmStatusCodings.js';\r\n// @ts-ignore\r\nimport { FmStatusCodes,  FmStatusCodeType } from '../fhirValueSets/FmStatusCodes.js';\r\n// @ts-ignore\r\nimport { IssueTypeCodes } from '../fhirValueSets/IssueTypeCodes.js';\r\n// @ts-ignore\r\nimport { IssueSeverityCodes } from '../fhirValueSets/IssueSeverityCodes.js';\r\n/**\r\n * Valid arguments for the VisionPrescriptionLensSpecificationPrism type.\r\n */\r\nexport interface VisionPrescriptionLensSpecificationPrismArgs extends fhir.BackboneElementArgs {\r\n  /**\r\n   * Amount of prism to compensate for eye alignment in fractional units.\r\n   */\r\n  amount: fhir.FhirDecimal|number|undefined;\r\n  /**\r\n   * The relative base, or reference lens edge, for the prism.\r\n   */\r\n  base: VisionBaseCodesCodeType|null;\r\n}\r\n\r\n/**\r\n * Allows for adjustment on two axis.\r\n */\r\nexport class VisionPrescriptionLensSpecificationPrism extends fhir.BackboneElement {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'VisionPrescriptionLensSpecificationPrism';\r\n  /**\r\n   * Amount of prism to compensate for eye alignment in fractional units.\r\n   */\r\n  public amount: fhir.FhirDecimal|null;\r\n  /**\r\n   * The relative base, or reference lens edge, for the prism.\r\n   */\r\n  public base: VisionBaseCodesCodeType|null;\r\n  /**\r\n   * Default constructor for VisionPrescriptionLensSpecificationPrism - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<VisionPrescriptionLensSpecificationPrismArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    if (source['amount']) { this.amount = new fhir.FhirDecimal({value: source.amount}); }\r\n    else { this.amount = null; }\r\n    if (source['base']) { this.base = source.base; }\r\n    else { this.base = null; }\r\n  }\r\n  /**\r\n   * Required-bound Value Set for base (VisionPrescription.lensSpecification.prism.base)\r\n   */\r\n  public static baseRequiredCoding():VisionBaseCodesCodingType {\r\n    return VisionBaseCodesCodings;\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (!this['amount']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property amount:fhir.FhirDecimal fhir: VisionPrescription.lensSpecification.prism.amount:decimal', }));\r\n    }\r\n    if (this[\"amount\"]) { outcome.issue!.push(...this.amount.doModelValidation().issue!); }\r\n    if (!this['base']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property base:VisionBaseCodesCodeType fhir: VisionPrescription.lensSpecification.prism.base:code', }));\r\n    }\r\n    return outcome;\r\n  }\r\n}\r\n/**\r\n * Valid arguments for the VisionPrescriptionLensSpecification type.\r\n */\r\nexport interface VisionPrescriptionLensSpecificationArgs extends fhir.BackboneElementArgs {\r\n  /**\r\n   * Identifies the type of vision correction product which is required for the patient.\r\n   */\r\n  product: fhir.CodeableConceptArgs|null;\r\n  /**\r\n   * May also appear as OD (oculus dexter) for the right eye and OS (oculus siniter) for the left eye.\r\n   */\r\n  eye: VisionEyeCodesCodeType|null;\r\n  /**\r\n   * The value is negative for near-sighted and positive for far sighted.\r\n   * Often insurance will not cover a lens with power between +75 and -75.\r\n   */\r\n  sphere?: fhir.FhirDecimal|number|undefined;\r\n  /**\r\n   * Power adjustment for astigmatism measured in dioptres (0.25 units).\r\n   */\r\n  cylinder?: fhir.FhirDecimal|number|undefined;\r\n  /**\r\n   * The limits are +180 and -180 degrees.\r\n   */\r\n  axis?: fhir.FhirInteger|number|undefined;\r\n  /**\r\n   * Allows for adjustment on two axis.\r\n   */\r\n  prism?: fhir.VisionPrescriptionLensSpecificationPrismArgs[]|undefined;\r\n  /**\r\n   * Power adjustment for multifocal lenses measured in dioptres (0.25 units).\r\n   */\r\n  add?: fhir.FhirDecimal|number|undefined;\r\n  /**\r\n   * Contact lens power measured in dioptres (0.25 units).\r\n   */\r\n  power?: fhir.FhirDecimal|number|undefined;\r\n  /**\r\n   * Back curvature measured in millimetres.\r\n   */\r\n  backCurve?: fhir.FhirDecimal|number|undefined;\r\n  /**\r\n   * Contact lens diameter measured in millimetres.\r\n   */\r\n  diameter?: fhir.FhirDecimal|number|undefined;\r\n  /**\r\n   * The recommended maximum wear period for the lens.\r\n   */\r\n  duration?: fhir.QuantityArgs|undefined;\r\n  /**\r\n   * Special color or pattern.\r\n   */\r\n  color?: fhir.FhirString|string|undefined;\r\n  /**\r\n   * Brand recommendations or restrictions.\r\n   */\r\n  brand?: fhir.FhirString|string|undefined;\r\n  /**\r\n   * Notes for special requirements such as coatings and lens materials.\r\n   */\r\n  note?: fhir.AnnotationArgs[]|undefined;\r\n}\r\n\r\n/**\r\n * Contain the details of  the individual lens specifications and serves as the authorization for the fullfillment by certified professionals.\r\n */\r\nexport class VisionPrescriptionLensSpecification extends fhir.BackboneElement {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'VisionPrescriptionLensSpecification';\r\n  /**\r\n   * Identifies the type of vision correction product which is required for the patient.\r\n   */\r\n  public product: fhir.CodeableConcept|null;\r\n  /**\r\n   * May also appear as OD (oculus dexter) for the right eye and OS (oculus siniter) for the left eye.\r\n   */\r\n  public eye: VisionEyeCodesCodeType|null;\r\n  /**\r\n   * The value is negative for near-sighted and positive for far sighted.\r\n   * Often insurance will not cover a lens with power between +75 and -75.\r\n   */\r\n  public sphere?: fhir.FhirDecimal|undefined;\r\n  /**\r\n   * Power adjustment for astigmatism measured in dioptres (0.25 units).\r\n   */\r\n  public cylinder?: fhir.FhirDecimal|undefined;\r\n  /**\r\n   * The limits are +180 and -180 degrees.\r\n   */\r\n  public axis?: fhir.FhirInteger|undefined;\r\n  /**\r\n   * Allows for adjustment on two axis.\r\n   */\r\n  public prism?: fhir.VisionPrescriptionLensSpecificationPrism[];\r\n  /**\r\n   * Power adjustment for multifocal lenses measured in dioptres (0.25 units).\r\n   */\r\n  public add?: fhir.FhirDecimal|undefined;\r\n  /**\r\n   * Contact lens power measured in dioptres (0.25 units).\r\n   */\r\n  public power?: fhir.FhirDecimal|undefined;\r\n  /**\r\n   * Back curvature measured in millimetres.\r\n   */\r\n  public backCurve?: fhir.FhirDecimal|undefined;\r\n  /**\r\n   * Contact lens diameter measured in millimetres.\r\n   */\r\n  public diameter?: fhir.FhirDecimal|undefined;\r\n  /**\r\n   * The recommended maximum wear period for the lens.\r\n   */\r\n  public duration?: fhir.Quantity|undefined;\r\n  /**\r\n   * Special color or pattern.\r\n   */\r\n  public color?: fhir.FhirString|undefined;\r\n  /**\r\n   * Brand recommendations or restrictions.\r\n   */\r\n  public brand?: fhir.FhirString|undefined;\r\n  /**\r\n   * Notes for special requirements such as coatings and lens materials.\r\n   */\r\n  public note?: fhir.Annotation[];\r\n  /**\r\n   * Default constructor for VisionPrescriptionLensSpecification - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<VisionPrescriptionLensSpecificationArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    if (source['product']) { this.product = new fhir.CodeableConcept(source.product); }\r\n    else { this.product = null; }\r\n    if (source['eye']) { this.eye = source.eye; }\r\n    else { this.eye = null; }\r\n    if (source['sphere']) { this.sphere = new fhir.FhirDecimal({value: source.sphere}); }\r\n    if (source['cylinder']) { this.cylinder = new fhir.FhirDecimal({value: source.cylinder}); }\r\n    if (source['axis']) { this.axis = new fhir.FhirInteger({value: source.axis}); }\r\n    if (source['prism']) { this.prism = source.prism.map((x) => new fhir.VisionPrescriptionLensSpecificationPrism(x)); }\r\n    else { this.prism = []; }\r\n    if (source['add']) { this.add = new fhir.FhirDecimal({value: source.add}); }\r\n    if (source['power']) { this.power = new fhir.FhirDecimal({value: source.power}); }\r\n    if (source['backCurve']) { this.backCurve = new fhir.FhirDecimal({value: source.backCurve}); }\r\n    if (source['diameter']) { this.diameter = new fhir.FhirDecimal({value: source.diameter}); }\r\n    if (source['duration']) { this.duration = new fhir.Quantity(source.duration); }\r\n    if (source['color']) { this.color = new fhir.FhirString({value: source.color}); }\r\n    if (source['brand']) { this.brand = new fhir.FhirString({value: source.brand}); }\r\n    if (source['note']) { this.note = source.note.map((x) => new fhir.Annotation(x)); }\r\n    else { this.note = []; }\r\n  }\r\n  /**\r\n   * Required-bound Value Set for eye (VisionPrescription.lensSpecification.eye)\r\n   */\r\n  public static eyeRequiredCoding():VisionEyeCodesCodingType {\r\n    return VisionEyeCodesCodings;\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (!this['product']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property product:fhir.CodeableConcept fhir: VisionPrescription.lensSpecification.product:CodeableConcept', }));\r\n    }\r\n    if (this[\"product\"]) { outcome.issue!.push(...this.product.doModelValidation().issue!); }\r\n    if (!this['eye']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property eye:VisionEyeCodesCodeType fhir: VisionPrescription.lensSpecification.eye:code', }));\r\n    }\r\n    if (this[\"sphere\"]) { outcome.issue!.push(...this.sphere.doModelValidation().issue!); }\r\n    if (this[\"cylinder\"]) { outcome.issue!.push(...this.cylinder.doModelValidation().issue!); }\r\n    if (this[\"axis\"]) { outcome.issue!.push(...this.axis.doModelValidation().issue!); }\r\n    if (this[\"prism\"]) { this.prism.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"add\"]) { outcome.issue!.push(...this.add.doModelValidation().issue!); }\r\n    if (this[\"power\"]) { outcome.issue!.push(...this.power.doModelValidation().issue!); }\r\n    if (this[\"backCurve\"]) { outcome.issue!.push(...this.backCurve.doModelValidation().issue!); }\r\n    if (this[\"diameter\"]) { outcome.issue!.push(...this.diameter.doModelValidation().issue!); }\r\n    if (this[\"duration\"]) { outcome.issue!.push(...this.duration.doModelValidation().issue!); }\r\n    if (this[\"color\"]) { outcome.issue!.push(...this.color.doModelValidation().issue!); }\r\n    if (this[\"brand\"]) { outcome.issue!.push(...this.brand.doModelValidation().issue!); }\r\n    if (this[\"note\"]) { this.note.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    return outcome;\r\n  }\r\n}\r\n/**\r\n * Valid arguments for the VisionPrescription type.\r\n */\r\nexport interface VisionPrescriptionArgs extends fhir.DomainResourceArgs {\r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  resourceType: \"VisionPrescription\"|undefined;\r\n  /**\r\n   * A unique identifier assigned to this vision prescription.\r\n   */\r\n  identifier?: fhir.IdentifierArgs[]|undefined;\r\n  /**\r\n   * This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid.\r\n   */\r\n  status: FmStatusCodeType|null;\r\n  /**\r\n   * The date this resource was created.\r\n   */\r\n  created: fhir.FhirDateTime|string|undefined;\r\n  /**\r\n   * A resource reference to the person to whom the vision prescription applies.\r\n   */\r\n  patient: fhir.ReferenceArgs|null;\r\n  /**\r\n   * A reference to a resource that identifies the particular occurrence of contact between patient and health care provider during which the prescription was issued.\r\n   */\r\n  encounter?: fhir.ReferenceArgs|undefined;\r\n  /**\r\n   * Jurisdictions determine the valid lifetime of a prescription. Typically vision prescriptions are valid for two years from the date written.\r\n   */\r\n  dateWritten: fhir.FhirDateTime|string|undefined;\r\n  /**\r\n   * The healthcare professional responsible for authorizing the prescription.\r\n   */\r\n  prescriber: fhir.ReferenceArgs|null;\r\n  /**\r\n   * Contain the details of  the individual lens specifications and serves as the authorization for the fullfillment by certified professionals.\r\n   */\r\n  lensSpecification: fhir.VisionPrescriptionLensSpecificationArgs[]|null;\r\n}\r\n\r\n/**\r\n * An authorization for the provision of glasses and/or contact lenses to a patient.\r\n */\r\nexport class VisionPrescription extends fhir.DomainResource {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'VisionPrescription';\r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  public resourceType: \"VisionPrescription\";\r\n  /**\r\n   * A unique identifier assigned to this vision prescription.\r\n   */\r\n  public identifier?: fhir.Identifier[];\r\n  /**\r\n   * This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid.\r\n   */\r\n  public status: FmStatusCodeType|null;\r\n  /**\r\n   * The date this resource was created.\r\n   */\r\n  public created: fhir.FhirDateTime|null;\r\n  /**\r\n   * A resource reference to the person to whom the vision prescription applies.\r\n   */\r\n  public patient: fhir.Reference|null;\r\n  /**\r\n   * A reference to a resource that identifies the particular occurrence of contact between patient and health care provider during which the prescription was issued.\r\n   */\r\n  public encounter?: fhir.Reference|undefined;\r\n  /**\r\n   * Jurisdictions determine the valid lifetime of a prescription. Typically vision prescriptions are valid for two years from the date written.\r\n   */\r\n  public dateWritten: fhir.FhirDateTime|null;\r\n  /**\r\n   * The healthcare professional responsible for authorizing the prescription.\r\n   */\r\n  public prescriber: fhir.Reference|null;\r\n  /**\r\n   * Contain the details of  the individual lens specifications and serves as the authorization for the fullfillment by certified professionals.\r\n   */\r\n  public lensSpecification: fhir.VisionPrescriptionLensSpecification[];\r\n  /**\r\n   * Default constructor for VisionPrescription - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<VisionPrescriptionArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    this.resourceType = 'VisionPrescription';\r\n    if (source['identifier']) { this.identifier = source.identifier.map((x) => new fhir.Identifier(x)); }\r\n    else { this.identifier = []; }\r\n    if (source['status']) { this.status = source.status; }\r\n    else { this.status = null; }\r\n    if (source['created']) { this.created = new fhir.FhirDateTime({value: source.created}); }\r\n    else { this.created = null; }\r\n    if (source['patient']) { this.patient = new fhir.Reference(source.patient); }\r\n    else { this.patient = null; }\r\n    if (source['encounter']) { this.encounter = new fhir.Reference(source.encounter); }\r\n    if (source['dateWritten']) { this.dateWritten = new fhir.FhirDateTime({value: source.dateWritten}); }\r\n    else { this.dateWritten = null; }\r\n    if (source['prescriber']) { this.prescriber = new fhir.Reference(source.prescriber); }\r\n    else { this.prescriber = null; }\r\n    if (source['lensSpecification']) { this.lensSpecification = source.lensSpecification.map((x) => new fhir.VisionPrescriptionLensSpecification(x)); }\r\n    else { this.lensSpecification = []; }\r\n  }\r\n  /**\r\n   * Required-bound Value Set for status (VisionPrescription.status)\r\n   */\r\n  public static statusRequiredCoding():FmStatusCodingType {\r\n    return FmStatusCodings;\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (!this['resourceType']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property resourceType:\"VisionPrescription\" fhir: VisionPrescription.resourceType:\"VisionPrescription\"', }));\r\n    }\r\n    if (this[\"identifier\"]) { this.identifier.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (!this['status']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property status:FmStatusCodeType fhir: VisionPrescription.status:code', }));\r\n    }\r\n    if (!this['created']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property created:fhir.FhirDateTime fhir: VisionPrescription.created:dateTime', }));\r\n    }\r\n    if (this[\"created\"]) { outcome.issue!.push(...this.created.doModelValidation().issue!); }\r\n    if (!this['patient']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property patient:fhir.Reference fhir: VisionPrescription.patient:Reference', }));\r\n    }\r\n    if (this[\"patient\"]) { outcome.issue!.push(...this.patient.doModelValidation().issue!); }\r\n    if (this[\"encounter\"]) { outcome.issue!.push(...this.encounter.doModelValidation().issue!); }\r\n    if (!this['dateWritten']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property dateWritten:fhir.FhirDateTime fhir: VisionPrescription.dateWritten:dateTime', }));\r\n    }\r\n    if (this[\"dateWritten\"]) { outcome.issue!.push(...this.dateWritten.doModelValidation().issue!); }\r\n    if (!this['prescriber']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property prescriber:fhir.Reference fhir: VisionPrescription.prescriber:Reference', }));\r\n    }\r\n    if (this[\"prescriber\"]) { outcome.issue!.push(...this.prescriber.doModelValidation().issue!); }\r\n    if (!this['lensSpecification']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property lensSpecification:fhir.VisionPrescriptionLensSpecification[] fhir: VisionPrescription.lensSpecification:lensSpecification', }));\r\n    } else if (!Array.isArray(this.lensSpecification)) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.StructuralIssue,  diagnostics: 'Found scalar in array property lensSpecification:fhir.VisionPrescriptionLensSpecification[] fhir: VisionPrescription.lensSpecification:lensSpecification', }));\r\n    } else if (this.lensSpecification.length === 0) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property lensSpecification:fhir.VisionPrescriptionLensSpecification[] fhir: VisionPrescription.lensSpecification:lensSpecification', }));\r\n    }\r\n    if (this[\"lensSpecification\"]) { this.lensSpecification.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    return outcome;\r\n  }\r\n}\r\n"],"names":["fhir.FhirDecimal","fhir.OperationOutcomeIssue","fhir.BackboneElement","fhir.CodeableConcept","fhir.FhirInteger","fhir.VisionPrescriptionLensSpecificationPrism","fhir.Quantity","fhir.FhirString","fhir.Annotation","fhir.Identifier","fhir.FhirDateTime","fhir.Reference","fhir.VisionPrescriptionLensSpecification","fhir.DomainResource"],"mappings":"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"}