{"version":3,"file":"EnrollmentResponse.js","sources":["../../src/fhir/EnrollmentResponse.ts"],"sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4.core version: 4.0.1\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR Resource: EnrollmentResponse\r\n\r\nimport * as fhir from '../fhir.js';\r\n\r\n// @ts-ignore\r\nimport { FmStatusCodings, FmStatusCodingType,} from '../fhirValueSets/FmStatusCodings.js';\r\n// @ts-ignore\r\nimport { FmStatusCodes,  FmStatusCodeType } from '../fhirValueSets/FmStatusCodes.js';\r\n// @ts-ignore\r\nimport { RemittanceOutcomeCodings, RemittanceOutcomeCodingType,} from '../fhirValueSets/RemittanceOutcomeCodings.js';\r\n// @ts-ignore\r\nimport { RemittanceOutcomeCodes,  RemittanceOutcomeCodeType } from '../fhirValueSets/RemittanceOutcomeCodes.js';\r\n// @ts-ignore\r\nimport { IssueTypeCodes } from '../fhirValueSets/IssueTypeCodes.js';\r\n// @ts-ignore\r\nimport { IssueSeverityCodes } from '../fhirValueSets/IssueSeverityCodes.js';\r\n/**\r\n * Valid arguments for the EnrollmentResponse type.\r\n */\r\nexport interface EnrollmentResponseArgs extends fhir.DomainResourceArgs {\r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  resourceType: \"EnrollmentResponse\"|undefined;\r\n  /**\r\n   * The Response business identifier.\r\n   */\r\n  identifier?: fhir.IdentifierArgs[]|undefined;\r\n  /**\r\n   * This element is labeled as a modifier because the status contains codes that mark the response as not currently valid.\r\n   */\r\n  status?: FmStatusCodeType|undefined;\r\n  /**\r\n   * Original request resource reference.\r\n   */\r\n  request?: fhir.ReferenceArgs|undefined;\r\n  /**\r\n   * Processing status: error, complete.\r\n   */\r\n  outcome?: RemittanceOutcomeCodeType|undefined;\r\n  /**\r\n   * A description of the status of the adjudication.\r\n   */\r\n  disposition?: fhir.FhirString|string|undefined;\r\n  /**\r\n   * The date when the enclosed suite of services were performed or completed.\r\n   */\r\n  created?: fhir.FhirDateTime|string|undefined;\r\n  /**\r\n   * The Insurer who produced this adjudicated response.\r\n   */\r\n  organization?: fhir.ReferenceArgs|undefined;\r\n  /**\r\n   * The practitioner who is responsible for the services rendered to the patient.\r\n   */\r\n  requestProvider?: fhir.ReferenceArgs|undefined;\r\n}\r\n\r\n/**\r\n * This resource provides enrollment and plan details from the processing of an EnrollmentRequest resource.\r\n */\r\nexport class EnrollmentResponse extends fhir.DomainResource {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'EnrollmentResponse';\r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  public resourceType: \"EnrollmentResponse\";\r\n  /**\r\n   * The Response business identifier.\r\n   */\r\n  public identifier?: fhir.Identifier[];\r\n  /**\r\n   * This element is labeled as a modifier because the status contains codes that mark the response as not currently valid.\r\n   */\r\n  public status?: FmStatusCodeType|undefined;\r\n  /**\r\n   * Original request resource reference.\r\n   */\r\n  public request?: fhir.Reference|undefined;\r\n  /**\r\n   * Processing status: error, complete.\r\n   */\r\n  public outcome?: RemittanceOutcomeCodeType|undefined;\r\n  /**\r\n   * A description of the status of the adjudication.\r\n   */\r\n  public disposition?: fhir.FhirString|undefined;\r\n  /**\r\n   * The date when the enclosed suite of services were performed or completed.\r\n   */\r\n  public created?: fhir.FhirDateTime|undefined;\r\n  /**\r\n   * The Insurer who produced this adjudicated response.\r\n   */\r\n  public organization?: fhir.Reference|undefined;\r\n  /**\r\n   * The practitioner who is responsible for the services rendered to the patient.\r\n   */\r\n  public requestProvider?: fhir.Reference|undefined;\r\n  /**\r\n   * Default constructor for EnrollmentResponse - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<EnrollmentResponseArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    this.resourceType = 'EnrollmentResponse';\r\n    if (source['identifier']) { this.identifier = source.identifier.map((x) => new fhir.Identifier(x)); }\r\n    else { this.identifier = []; }\r\n    if (source['status']) { this.status = source.status; }\r\n    if (source['request']) { this.request = new fhir.Reference(source.request); }\r\n    if (source['outcome']) { this.outcome = source.outcome; }\r\n    if (source['disposition']) { this.disposition = new fhir.FhirString({value: source.disposition}); }\r\n    if (source['created']) { this.created = new fhir.FhirDateTime({value: source.created}); }\r\n    if (source['organization']) { this.organization = new fhir.Reference(source.organization); }\r\n    if (source['requestProvider']) { this.requestProvider = new fhir.Reference(source.requestProvider); }\r\n  }\r\n  /**\r\n   * Required-bound Value Set for status (EnrollmentResponse.status)\r\n   */\r\n  public static statusRequiredCoding():FmStatusCodingType {\r\n    return FmStatusCodings;\r\n  }\r\n  /**\r\n   * Required-bound Value Set for outcome (EnrollmentResponse.outcome)\r\n   */\r\n  public static outcomeRequiredCoding():RemittanceOutcomeCodingType {\r\n    return RemittanceOutcomeCodings;\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (!this['resourceType']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property resourceType:\"EnrollmentResponse\" fhir: EnrollmentResponse.resourceType:\"EnrollmentResponse\"', }));\r\n    }\r\n    if (this[\"identifier\"]) { this.identifier.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"request\"]) { outcome.issue!.push(...this.request.doModelValidation().issue!); }\r\n    if (this[\"disposition\"]) { outcome.issue!.push(...this.disposition.doModelValidation().issue!); }\r\n    if (this[\"created\"]) { outcome.issue!.push(...this.created.doModelValidation().issue!); }\r\n    if (this[\"organization\"]) { outcome.issue!.push(...this.organization.doModelValidation().issue!); }\r\n    if (this[\"requestProvider\"]) { outcome.issue!.push(...this.requestProvider.doModelValidation().issue!); }\r\n    return outcome;\r\n  }\r\n}\r\n"],"names":["fhir.Identifier","fhir.Reference","fhir.FhirString","fhir.FhirDateTime","fhir.OperationOutcomeIssue","fhir.DomainResource"],"mappings":"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"}