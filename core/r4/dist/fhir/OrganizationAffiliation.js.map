{"version":3,"file":"OrganizationAffiliation.js","sources":["../../src/fhir/OrganizationAffiliation.ts"],"sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4.core version: 4.0.1\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR Resource: OrganizationAffiliation\r\n\r\nimport * as fhir from '../fhir.js';\r\n\r\n// @ts-ignore\r\nimport { OrganizationRoleCodings, OrganizationRoleCodingType,} from '../fhirValueSets/OrganizationRoleCodings.js';\r\n// @ts-ignore\r\nimport { OrganizationRoleCodes,  OrganizationRoleCodeType } from '../fhirValueSets/OrganizationRoleCodes.js';\r\n// @ts-ignore\r\nimport { C80PracticeCodesCodings, C80PracticeCodesCodingType,} from '../fhirValueSets/C80PracticeCodesCodings.js';\r\n// @ts-ignore\r\nimport { C80PracticeCodesCodes,  C80PracticeCodesCodeType } from '../fhirValueSets/C80PracticeCodesCodes.js';\r\n// @ts-ignore\r\nimport { IssueTypeCodes } from '../fhirValueSets/IssueTypeCodes.js';\r\n// @ts-ignore\r\nimport { IssueSeverityCodes } from '../fhirValueSets/IssueSeverityCodes.js';\r\n/**\r\n * Valid arguments for the OrganizationAffiliation type.\r\n */\r\nexport interface OrganizationAffiliationArgs extends fhir.DomainResourceArgs {\r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  resourceType: \"OrganizationAffiliation\"|undefined;\r\n  /**\r\n   * Business identifiers that are specific to this role.\r\n   */\r\n  identifier?: fhir.IdentifierArgs[]|undefined;\r\n  /**\r\n   * If this value is false, you may refer to the period to see when the role was in active use. If there is no period specified, no inference can be made about when it was active.\r\n   */\r\n  active?: fhir.FhirBoolean|boolean|undefined;\r\n  /**\r\n   * The period during which the participatingOrganization is affiliated with the primary organization.\r\n   */\r\n  period?: fhir.PeriodArgs|undefined;\r\n  /**\r\n   * Organization where the role is available (primary organization/has members).\r\n   */\r\n  organization?: fhir.ReferenceArgs|undefined;\r\n  /**\r\n   * The Participating Organization provides/performs the role(s) defined by the code to the Primary Organization (e.g. providing services or is a member of).\r\n   */\r\n  participatingOrganization?: fhir.ReferenceArgs|undefined;\r\n  /**\r\n   * Health insurance provider network in which the participatingOrganization provides the role's services (if defined) at the indicated locations (if defined).\r\n   */\r\n  network?: fhir.ReferenceArgs[]|undefined;\r\n  /**\r\n   * Definition of the role the participatingOrganization plays in the association.\r\n   */\r\n  code?: fhir.CodeableConceptArgs[]|undefined;\r\n  /**\r\n   * Specific specialty of the participatingOrganization in the context of the role.\r\n   */\r\n  specialty?: fhir.CodeableConceptArgs[]|undefined;\r\n  /**\r\n   * The location(s) at which the role occurs.\r\n   */\r\n  location?: fhir.ReferenceArgs[]|undefined;\r\n  /**\r\n   * Healthcare services provided through the role.\r\n   */\r\n  healthcareService?: fhir.ReferenceArgs[]|undefined;\r\n  /**\r\n   * Contact details at the participatingOrganization relevant to this Affiliation.\r\n   */\r\n  telecom?: fhir.ContactPointArgs[]|undefined;\r\n  /**\r\n   * Technical endpoints providing access to services operated for this role.\r\n   */\r\n  endpoint?: fhir.ReferenceArgs[]|undefined;\r\n}\r\n\r\n/**\r\n * Defines an affiliation/assotiation/relationship between 2 distinct oganizations, that is not a part-of relationship/sub-division relationship.\r\n */\r\nexport class OrganizationAffiliation extends fhir.DomainResource {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'OrganizationAffiliation';\r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  public resourceType: \"OrganizationAffiliation\";\r\n  /**\r\n   * Business identifiers that are specific to this role.\r\n   */\r\n  public identifier?: fhir.Identifier[];\r\n  /**\r\n   * If this value is false, you may refer to the period to see when the role was in active use. If there is no period specified, no inference can be made about when it was active.\r\n   */\r\n  public active?: fhir.FhirBoolean|undefined;\r\n  /**\r\n   * The period during which the participatingOrganization is affiliated with the primary organization.\r\n   */\r\n  public period?: fhir.Period|undefined;\r\n  /**\r\n   * Organization where the role is available (primary organization/has members).\r\n   */\r\n  public organization?: fhir.Reference|undefined;\r\n  /**\r\n   * The Participating Organization provides/performs the role(s) defined by the code to the Primary Organization (e.g. providing services or is a member of).\r\n   */\r\n  public participatingOrganization?: fhir.Reference|undefined;\r\n  /**\r\n   * Health insurance provider network in which the participatingOrganization provides the role's services (if defined) at the indicated locations (if defined).\r\n   */\r\n  public network?: fhir.Reference[];\r\n  /**\r\n   * Definition of the role the participatingOrganization plays in the association.\r\n   */\r\n  public code?: fhir.CodeableConcept[];\r\n  /**\r\n   * Specific specialty of the participatingOrganization in the context of the role.\r\n   */\r\n  public specialty?: fhir.CodeableConcept[];\r\n  /**\r\n   * The location(s) at which the role occurs.\r\n   */\r\n  public location?: fhir.Reference[];\r\n  /**\r\n   * Healthcare services provided through the role.\r\n   */\r\n  public healthcareService?: fhir.Reference[];\r\n  /**\r\n   * Contact details at the participatingOrganization relevant to this Affiliation.\r\n   */\r\n  public telecom?: fhir.ContactPoint[];\r\n  /**\r\n   * Technical endpoints providing access to services operated for this role.\r\n   */\r\n  public endpoint?: fhir.Reference[];\r\n  /**\r\n   * Default constructor for OrganizationAffiliation - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<OrganizationAffiliationArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    this.resourceType = 'OrganizationAffiliation';\r\n    if (source['identifier']) { this.identifier = source.identifier.map((x) => new fhir.Identifier(x)); }\r\n    else { this.identifier = []; }\r\n    if (source['active']) { this.active = new fhir.FhirBoolean({value: source.active}); }\r\n    if (source['period']) { this.period = new fhir.Period(source.period); }\r\n    if (source['organization']) { this.organization = new fhir.Reference(source.organization); }\r\n    if (source['participatingOrganization']) { this.participatingOrganization = new fhir.Reference(source.participatingOrganization); }\r\n    if (source['network']) { this.network = source.network.map((x) => new fhir.Reference(x)); }\r\n    else { this.network = []; }\r\n    if (source['code']) { this.code = source.code.map((x) => new fhir.CodeableConcept(x)); }\r\n    else { this.code = []; }\r\n    if (source['specialty']) { this.specialty = source.specialty.map((x) => new fhir.CodeableConcept(x)); }\r\n    else { this.specialty = []; }\r\n    if (source['location']) { this.location = source.location.map((x) => new fhir.Reference(x)); }\r\n    else { this.location = []; }\r\n    if (source['healthcareService']) { this.healthcareService = source.healthcareService.map((x) => new fhir.Reference(x)); }\r\n    else { this.healthcareService = []; }\r\n    if (source['telecom']) { this.telecom = source.telecom.map((x) => new fhir.ContactPoint(x)); }\r\n    else { this.telecom = []; }\r\n    if (source['endpoint']) { this.endpoint = source.endpoint.map((x) => new fhir.Reference(x)); }\r\n    else { this.endpoint = []; }\r\n  }\r\n  /**\r\n   * Preferred-bound Value Set for specialty (OrganizationAffiliation.specialty)\r\n   */\r\n  public static specialtyPreferredCoding():C80PracticeCodesCodingType {\r\n    return C80PracticeCodesCodings;\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (!this['resourceType']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property resourceType:\"OrganizationAffiliation\" fhir: OrganizationAffiliation.resourceType:\"OrganizationAffiliation\"', }));\r\n    }\r\n    if (this[\"identifier\"]) { this.identifier.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"active\"]) { outcome.issue!.push(...this.active.doModelValidation().issue!); }\r\n    if (this[\"period\"]) { outcome.issue!.push(...this.period.doModelValidation().issue!); }\r\n    if (this[\"organization\"]) { outcome.issue!.push(...this.organization.doModelValidation().issue!); }\r\n    if (this[\"participatingOrganization\"]) { outcome.issue!.push(...this.participatingOrganization.doModelValidation().issue!); }\r\n    if (this[\"network\"]) { this.network.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"code\"]) { this.code.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"specialty\"]) { this.specialty.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"location\"]) { this.location.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"healthcareService\"]) { this.healthcareService.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"telecom\"]) { this.telecom.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"endpoint\"]) { this.endpoint.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    return outcome;\r\n  }\r\n}\r\n"],"names":["fhir.Identifier","fhir.FhirBoolean","fhir.Period","fhir.Reference","fhir.CodeableConcept","fhir.ContactPoint","fhir.OperationOutcomeIssue","fhir.DomainResource"],"mappings":"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"}