{"version":3,"file":"FhirElement.js","sources":["../../src/fhir/FhirElement.ts"],"sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4.core version: 4.0.1\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR ComplexType: Element\r\n\r\nimport * as fhir from '../fhir.js';\r\n\r\n// @ts-ignore\r\nimport { IssueTypeCodes } from '../fhirValueSets/IssueTypeCodes.js';\r\n// @ts-ignore\r\nimport { IssueSeverityCodes } from '../fhirValueSets/IssueSeverityCodes.js';\r\n/**\r\n * Valid arguments for the FhirElement type.\r\n */\r\nexport interface FhirElementArgs extends fhir.FhirBaseArgs {\r\n  /**\r\n   * Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.\r\n   */\r\n  id?: fhir.FhirString|string|undefined;\r\n  /**\r\n   * There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.\r\n   */\r\n  extension?: fhir.ExtensionArgs[]|undefined;\r\n}\r\n\r\n/**\r\n * Base definition for all elements in a resource.\r\n */\r\nexport class FhirElement extends fhir.FhirBase {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'Element';\r\n  /**\r\n   * Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.\r\n   */\r\n  public id?: fhir.FhirString|undefined;\r\n  /**\r\n   * There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.\r\n   */\r\n  public extension?: fhir.Extension[];\r\n  /**\r\n   * Default constructor for FhirElement - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<FhirElementArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    if (source['id']) { this.id = new fhir.FhirString({value: source.id}); }\r\n    if (source['extension']) { this.extension = source.extension.map((x) => new fhir.Extension(x)); }\r\n    else { this.extension = []; }\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (this[\"id\"]) { outcome.issue!.push(...this.id.doModelValidation().issue!); }\r\n    if (this[\"extension\"]) { this.extension.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    return outcome;\r\n  }\r\n}\r\n"],"names":["fhir.FhirString","fhir.Extension","fhir.FhirBase"],"mappings":";;;;;;;AAAA;AAyBA;;AAEG;AACH,IAAA,WAAA,kBAAA,UAAA,MAAA,EAAA;IAAiC,SAAa,CAAA,WAAA,EAAA,MAAA,CAAA,CAAA;AAa5C;;AAEG;IACH,SAAY,WAAA,CAAA,MAAoC,EAAE,OAAwC,EAAA;AAA9E,QAAA,IAAA,MAAA,KAAA,KAAA,CAAA,EAAA,EAAA,MAAoC,GAAA,EAAA,CAAA,EAAA;AAAE,QAAA,IAAA,OAAA,KAAA,KAAA,CAAA,EAAA,EAAA,OAAwC,GAAA,EAAA,CAAA,EAAA;AAA1F,QAAA,IAAA,KAAA,GACE,MAAM,CAAA,IAAA,CAAA,IAAA,EAAA,MAAM,EAAE,OAAO,CAAC,IAIvB,IAAA,CAAA;AAHC,QAAA,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE;AAAE,YAAA,KAAI,CAAC,EAAE,GAAG,IAAIA,UAAe,CAAC,EAAC,KAAK,EAAE,MAAM,CAAC,EAAE,EAAC,CAAC,CAAC;AAAE,SAAA;AACxE,QAAA,IAAI,MAAM,CAAC,WAAW,CAAC,EAAE;YAAE,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,UAAC,CAAC,IAAK,OAAA,IAAIC,SAAc,CAAC,CAAC,CAAC,CAAA,EAAA,CAAC,CAAC;AAAE,SAAA;AAC5F,aAAA;AAAE,YAAA,KAAI,CAAC,SAAS,GAAG,EAAE,CAAC;AAAE,SAAA;;KAC9B;AACD;;AAEG;AACa,IAAA,WAAA,CAAA,SAAA,CAAA,iBAAiB,GAAjC,YAAA;;AACE,QAAA,IAAI,OAAO,GAAyB,MAAM,CAAA,SAAA,CAAA,iBAAiB,WAAE,CAAC;AAC9D,QAAA,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE;AAAE,YAAA,CAAA,KAAA,OAAO,CAAC,KAAM,EAAC,IAAI,CAAA,KAAA,CAAA,EAAA,EAAI,IAAI,CAAC,EAAE,CAAC,iBAAiB,EAAE,CAAC,KAAM,CAAE,CAAA;AAAE,SAAA;AAC/E,QAAA,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE;AAAE,YAAA,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAC,CAAC,EAAA;;AAAO,gBAAA,CAAA,EAAA,GAAA,OAAO,CAAC,KAAM,EAAC,IAAI,CAAI,KAAA,CAAA,EAAA,EAAA,CAAC,CAAC,iBAAiB,EAAE,CAAC,KAAM,CAAE,CAAA;AAAC,aAAC,CAAC,CAAA;AAAE,SAAA;AACnH,QAAA,OAAO,OAAO,CAAC;KAChB,CAAA;AA7BD;;AAEG;IACoB,WAAa,CAAA,aAAA,GAAU,SAAS,CAAC;IA2B1D,OAAC,WAAA,CAAA;AAAA,CA/BD,CAAiCC,QAAa,CA+B7C;;;;"}