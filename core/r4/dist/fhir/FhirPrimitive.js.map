{"version":3,"file":"FhirPrimitive.js","sources":["../../src/fhir/FhirPrimitive.ts"],"sourcesContent":["// Minimum TypeScript Version: 3.7\r\n\r\nimport * as fhir from '../fhir.js';\r\n\r\nimport { IssueTypeCodes } from '../fhirValueSets/IssueTypeCodes.js';\r\nimport { IssueSeverityCodes } from '../fhirValueSets/IssueSeverityCodes.js';\r\n\r\nexport interface FhirPrimitiveArgs {\r\n  /**\r\n   * Value of the primitive - constrained by decendant classes.\r\n   */\r\n   value?:any|null|undefined;\r\n\r\n   /**\r\n     * Unique id for inter-element referencing\r\n     */\r\n   id?:string|undefined;\r\n \r\n   /**\r\n     * Additional content defined by implementations\r\n     */\r\n   extension?:(fhir.Extension|null)[]|undefined;\r\n }\r\n\r\nexport class FhirPrimitive extends fhir.FhirBase  {\r\n  public readonly _fts_isPrimitive:boolean = true;\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public readonly _fts_dataType:string='PrimitiveType';\r\n  public readonly _fts_jsonType:string='any';\r\n\r\n  /**\r\n   * Value of the primitive - constrained by decendant classes.\r\n   */\r\n  value?:boolean|number|bigint|string|null|undefined;\r\n\r\n  /**\r\n    * Unique id for inter-element referencing\r\n    */\r\n  id?:string|undefined;\r\n\r\n  /**\r\n    * Additional content defined by implementations\r\n    */\r\n  extension?:(fhir.Extension|null)[]|undefined;\r\n\r\n  /**\r\n   * Constructor for FHIR primitive type elements\r\n   * @param value \r\n   * @param id \r\n   * @param extension \r\n   * @param options \r\n   */\r\n  constructor(source:Partial<FhirPrimitiveArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super();\r\n    if (source) {\r\n      if ((source.value) && (source.value['_fts_dataType'])) {\r\n        this.value = source.value.value ?? null;\r\n        this.id = source.value.id ?? undefined;\r\n        if ((source.value.extension) && (source.value.extension.length > 0)) {\r\n          this.extension = [];\r\n          source.value.extension!.forEach((e:any) => {\r\n            if (e === null) { this.extension!.push(null); }\r\n            else { this.extension!.push(new fhir.Extension(e, options)); }\r\n          });\r\n        }\r\n      } else if (source.value) {\r\n        this.value = source.value;\r\n      }\r\n  \r\n      if (source.id) { this.id = source.id; }\r\n      if ((source.extension) && (source.extension.length > 0)) {\r\n        if (!this.extension) { this.extension = []; }\r\n        source.extension!.forEach((e:any) => {\r\n          if (e === null) { this.extension!.push(null); }\r\n          else { this.extension!.push(new fhir.Extension(e, options)); }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = new fhir.OperationOutcome({issue:[]});\r\n    if ((!this.value) && (!this.id) && ((!this.extension) || (this.extension.length === 0))) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({\r\n        severity: IssueSeverityCodes.Error,\r\n        code: IssueTypeCodes.RequiredElementMissing,\r\n        diagnostics: \"Primitive values must have a value, id, or extensions.\",\r\n      }));\r\n    }\r\n    return outcome;\r\n  }\r\n\r\n  /**\r\n   * Add an extension with the desired URL and FHIR value\r\n   * @param url \r\n   * @param value \r\n   */\r\n  addExtension(url:string, value:fhir.FhirBase) {\r\n    if (this.extension === undefined) {\r\n      this.extension = [];\r\n    }\r\n\r\n    this.extension.push(fhir.Extension.fromValue(url, value));\r\n  }\r\n}"],"names":["fhir.Extension","fhir.OperationOutcome","fhir.OperationOutcomeIssue","fhir.FhirBase"],"mappings":"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"}