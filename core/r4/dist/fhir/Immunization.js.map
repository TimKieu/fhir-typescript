{"version":3,"file":"Immunization.js","sources":["../../src/fhir/Immunization.ts"],"sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4.core version: 4.0.1\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR Resource: Immunization\r\n\r\nimport * as fhir from '../fhir.js';\r\n\r\n// @ts-ignore\r\nimport { ImmunizationFunctionCodings, ImmunizationFunctionCodingType,} from '../fhirValueSets/ImmunizationFunctionCodings.js';\r\n// @ts-ignore\r\nimport { ImmunizationFunctionCodes,  ImmunizationFunctionCodeType } from '../fhirValueSets/ImmunizationFunctionCodes.js';\r\n// @ts-ignore\r\nimport { ImmunizationTargetDiseaseCodings, ImmunizationTargetDiseaseCodingType,} from '../fhirValueSets/ImmunizationTargetDiseaseCodings.js';\r\n// @ts-ignore\r\nimport { ImmunizationTargetDiseaseCodes,  ImmunizationTargetDiseaseCodeType } from '../fhirValueSets/ImmunizationTargetDiseaseCodes.js';\r\n// @ts-ignore\r\nimport { ImmunizationStatusCodings, ImmunizationStatusCodingType,} from '../fhirValueSets/ImmunizationStatusCodings.js';\r\n// @ts-ignore\r\nimport { ImmunizationStatusCodes,  ImmunizationStatusCodeType } from '../fhirValueSets/ImmunizationStatusCodes.js';\r\n// @ts-ignore\r\nimport { ImmunizationStatusReasonCodings, ImmunizationStatusReasonCodingType,} from '../fhirValueSets/ImmunizationStatusReasonCodings.js';\r\n// @ts-ignore\r\nimport { ImmunizationStatusReasonCodes,  ImmunizationStatusReasonCodeType } from '../fhirValueSets/ImmunizationStatusReasonCodes.js';\r\n// @ts-ignore\r\nimport { VaccineCodeCodings, VaccineCodeCodingType,} from '../fhirValueSets/VaccineCodeCodings.js';\r\n// @ts-ignore\r\nimport { VaccineCodeCodes,  VaccineCodeCodeType } from '../fhirValueSets/VaccineCodeCodes.js';\r\n// @ts-ignore\r\nimport { ImmunizationOriginCodings, ImmunizationOriginCodingType,} from '../fhirValueSets/ImmunizationOriginCodings.js';\r\n// @ts-ignore\r\nimport { ImmunizationOriginCodes,  ImmunizationOriginCodeType } from '../fhirValueSets/ImmunizationOriginCodes.js';\r\n// @ts-ignore\r\nimport { ImmunizationSiteCodings, ImmunizationSiteCodingType,} from '../fhirValueSets/ImmunizationSiteCodings.js';\r\n// @ts-ignore\r\nimport { ImmunizationSiteCodes,  ImmunizationSiteCodeType } from '../fhirValueSets/ImmunizationSiteCodes.js';\r\n// @ts-ignore\r\nimport { ImmunizationRouteCodings, ImmunizationRouteCodingType,} from '../fhirValueSets/ImmunizationRouteCodings.js';\r\n// @ts-ignore\r\nimport { ImmunizationRouteCodes,  ImmunizationRouteCodeType } from '../fhirValueSets/ImmunizationRouteCodes.js';\r\n// @ts-ignore\r\nimport { ImmunizationReasonCodings, ImmunizationReasonCodingType,} from '../fhirValueSets/ImmunizationReasonCodings.js';\r\n// @ts-ignore\r\nimport { ImmunizationReasonCodes,  ImmunizationReasonCodeType } from '../fhirValueSets/ImmunizationReasonCodes.js';\r\n// @ts-ignore\r\nimport { ImmunizationSubpotentReasonCodings, ImmunizationSubpotentReasonCodingType,} from '../fhirValueSets/ImmunizationSubpotentReasonCodings.js';\r\n// @ts-ignore\r\nimport { ImmunizationSubpotentReasonCodes,  ImmunizationSubpotentReasonCodeType } from '../fhirValueSets/ImmunizationSubpotentReasonCodes.js';\r\n// @ts-ignore\r\nimport { ImmunizationProgramEligibilityCodings, ImmunizationProgramEligibilityCodingType,} from '../fhirValueSets/ImmunizationProgramEligibilityCodings.js';\r\n// @ts-ignore\r\nimport { ImmunizationProgramEligibilityCodes,  ImmunizationProgramEligibilityCodeType } from '../fhirValueSets/ImmunizationProgramEligibilityCodes.js';\r\n// @ts-ignore\r\nimport { ImmunizationFundingSourceCodings, ImmunizationFundingSourceCodingType,} from '../fhirValueSets/ImmunizationFundingSourceCodings.js';\r\n// @ts-ignore\r\nimport { ImmunizationFundingSourceCodes,  ImmunizationFundingSourceCodeType } from '../fhirValueSets/ImmunizationFundingSourceCodes.js';\r\n// @ts-ignore\r\nimport { IssueTypeCodes } from '../fhirValueSets/IssueTypeCodes.js';\r\n// @ts-ignore\r\nimport { IssueSeverityCodes } from '../fhirValueSets/IssueSeverityCodes.js';\r\n/**\r\n * Valid arguments for the ImmunizationPerformer type.\r\n */\r\nexport interface ImmunizationPerformerArgs extends fhir.BackboneElementArgs {\r\n  /**\r\n   * Describes the type of performance (e.g. ordering provider, administering provider, etc.).\r\n   */\r\n  function?: fhir.CodeableConceptArgs|undefined;\r\n  /**\r\n   * When the individual practitioner who performed the action is known, it is best to send.\r\n   */\r\n  actor: fhir.ReferenceArgs|null;\r\n}\r\n\r\n/**\r\n * Indicates who performed the immunization event.\r\n */\r\nexport class ImmunizationPerformer extends fhir.BackboneElement {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'ImmunizationPerformer';\r\n  /**\r\n   * Describes the type of performance (e.g. ordering provider, administering provider, etc.).\r\n   */\r\n  public function?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * When the individual practitioner who performed the action is known, it is best to send.\r\n   */\r\n  public actor: fhir.Reference|null;\r\n  /**\r\n   * Default constructor for ImmunizationPerformer - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<ImmunizationPerformerArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    if (source['function']) { this.function = new fhir.CodeableConcept(source.function); }\r\n    if (source['actor']) { this.actor = new fhir.Reference(source.actor); }\r\n    else { this.actor = null; }\r\n  }\r\n  /**\r\n   * Extensible-bound Value Set for function (Immunization.performer.function)\r\n   */\r\n  public static functionExtensibleCoding():ImmunizationFunctionCodingType {\r\n    return ImmunizationFunctionCodings;\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (this[\"function\"]) { outcome.issue!.push(...this.function.doModelValidation().issue!); }\r\n    if (!this['actor']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property actor:fhir.Reference fhir: Immunization.performer.actor:Reference', }));\r\n    }\r\n    if (this[\"actor\"]) { outcome.issue!.push(...this.actor.doModelValidation().issue!); }\r\n    return outcome;\r\n  }\r\n}\r\n/**\r\n * Valid arguments for the ImmunizationEducation type.\r\n */\r\nexport interface ImmunizationEducationArgs extends fhir.BackboneElementArgs {\r\n  /**\r\n   * Identifier of the material presented to the patient.\r\n   */\r\n  documentType?: fhir.FhirString|string|undefined;\r\n  /**\r\n   * Reference pointer to the educational material given to the patient if the information was on line.\r\n   */\r\n  reference?: fhir.FhirUri|string|undefined;\r\n  /**\r\n   * Date the educational material was published.\r\n   */\r\n  publicationDate?: fhir.FhirDateTime|string|undefined;\r\n  /**\r\n   * Date the educational material was given to the patient.\r\n   */\r\n  presentationDate?: fhir.FhirDateTime|string|undefined;\r\n}\r\n\r\n/**\r\n * Educational material presented to the patient (or guardian) at the time of vaccine administration.\r\n */\r\nexport class ImmunizationEducation extends fhir.BackboneElement {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'ImmunizationEducation';\r\n  /**\r\n   * Identifier of the material presented to the patient.\r\n   */\r\n  public documentType?: fhir.FhirString|undefined;\r\n  /**\r\n   * Reference pointer to the educational material given to the patient if the information was on line.\r\n   */\r\n  public reference?: fhir.FhirUri|undefined;\r\n  /**\r\n   * Date the educational material was published.\r\n   */\r\n  public publicationDate?: fhir.FhirDateTime|undefined;\r\n  /**\r\n   * Date the educational material was given to the patient.\r\n   */\r\n  public presentationDate?: fhir.FhirDateTime|undefined;\r\n  /**\r\n   * Default constructor for ImmunizationEducation - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<ImmunizationEducationArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    if (source['documentType']) { this.documentType = new fhir.FhirString({value: source.documentType}); }\r\n    if (source['reference']) { this.reference = new fhir.FhirUri({value: source.reference}); }\r\n    if (source['publicationDate']) { this.publicationDate = new fhir.FhirDateTime({value: source.publicationDate}); }\r\n    if (source['presentationDate']) { this.presentationDate = new fhir.FhirDateTime({value: source.presentationDate}); }\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (this[\"documentType\"]) { outcome.issue!.push(...this.documentType.doModelValidation().issue!); }\r\n    if (this[\"reference\"]) { outcome.issue!.push(...this.reference.doModelValidation().issue!); }\r\n    if (this[\"publicationDate\"]) { outcome.issue!.push(...this.publicationDate.doModelValidation().issue!); }\r\n    if (this[\"presentationDate\"]) { outcome.issue!.push(...this.presentationDate.doModelValidation().issue!); }\r\n    return outcome;\r\n  }\r\n}\r\n/**\r\n * Valid arguments for the ImmunizationReaction type.\r\n */\r\nexport interface ImmunizationReactionArgs extends fhir.BackboneElementArgs {\r\n  /**\r\n   * Date of reaction to the immunization.\r\n   */\r\n  date?: fhir.FhirDateTime|string|undefined;\r\n  /**\r\n   * Details of the reaction.\r\n   */\r\n  detail?: fhir.ReferenceArgs|undefined;\r\n  /**\r\n   * Self-reported indicator.\r\n   */\r\n  reported?: fhir.FhirBoolean|boolean|undefined;\r\n}\r\n\r\n/**\r\n * A reaction may be an indication of an allergy or intolerance and, if this is determined to be the case, it should be recorded as a new AllergyIntolerance resource instance as most systems will not query against past Immunization.reaction elements.\r\n */\r\nexport class ImmunizationReaction extends fhir.BackboneElement {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'ImmunizationReaction';\r\n  /**\r\n   * Date of reaction to the immunization.\r\n   */\r\n  public date?: fhir.FhirDateTime|undefined;\r\n  /**\r\n   * Details of the reaction.\r\n   */\r\n  public detail?: fhir.Reference|undefined;\r\n  /**\r\n   * Self-reported indicator.\r\n   */\r\n  public reported?: fhir.FhirBoolean|undefined;\r\n  /**\r\n   * Default constructor for ImmunizationReaction - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<ImmunizationReactionArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    if (source['date']) { this.date = new fhir.FhirDateTime({value: source.date}); }\r\n    if (source['detail']) { this.detail = new fhir.Reference(source.detail); }\r\n    if (source['reported']) { this.reported = new fhir.FhirBoolean({value: source.reported}); }\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (this[\"date\"]) { outcome.issue!.push(...this.date.doModelValidation().issue!); }\r\n    if (this[\"detail\"]) { outcome.issue!.push(...this.detail.doModelValidation().issue!); }\r\n    if (this[\"reported\"]) { outcome.issue!.push(...this.reported.doModelValidation().issue!); }\r\n    return outcome;\r\n  }\r\n}\r\n/**\r\n * Valid arguments for the ImmunizationProtocolApplied type.\r\n */\r\nexport interface ImmunizationProtocolAppliedArgs extends fhir.BackboneElementArgs {\r\n  /**\r\n   * One possible path to achieve presumed immunity against a disease - within the context of an authority.\r\n   */\r\n  series?: fhir.FhirString|string|undefined;\r\n  /**\r\n   * Indicates the authority who published the protocol (e.g. ACIP) that is being followed.\r\n   */\r\n  authority?: fhir.ReferenceArgs|undefined;\r\n  /**\r\n   * The vaccine preventable disease the dose is being administered against.\r\n   */\r\n  targetDisease?: fhir.CodeableConceptArgs[]|undefined;\r\n  /**\r\n   * The use of an integer is preferred if known. A string should only be used in cases where an integer is not available (such as when documenting a recurring booster dose).\r\n   */\r\n  doseNumber?: fhir.FhirPositiveInt|fhir.FhirString|undefined;\r\n  /**\r\n   * The use of an integer is preferred if known. A string should only be used in cases where an integer is not available (such as when documenting a recurring booster dose).\r\n   */\r\n  doseNumberPositiveInt?: fhir.FhirPositiveInt|number|undefined;\r\n  /**\r\n   * The use of an integer is preferred if known. A string should only be used in cases where an integer is not available (such as when documenting a recurring booster dose).\r\n   */\r\n  doseNumberString?: fhir.FhirString|string|undefined;\r\n  /**\r\n   * The use of an integer is preferred if known. A string should only be used in cases where an integer is not available (such as when documenting a recurring booster dose).\r\n   */\r\n  seriesDoses?: fhir.FhirPositiveInt|fhir.FhirString|undefined;\r\n  /**\r\n   * The use of an integer is preferred if known. A string should only be used in cases where an integer is not available (such as when documenting a recurring booster dose).\r\n   */\r\n  seriesDosesPositiveInt?: fhir.FhirPositiveInt|number|undefined;\r\n  /**\r\n   * The use of an integer is preferred if known. A string should only be used in cases where an integer is not available (such as when documenting a recurring booster dose).\r\n   */\r\n  seriesDosesString?: fhir.FhirString|string|undefined;\r\n}\r\n\r\n/**\r\n * The protocol (set of recommendations) being followed by the provider who administered the dose.\r\n */\r\nexport class ImmunizationProtocolApplied extends fhir.BackboneElement {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'ImmunizationProtocolApplied';\r\n  /**\r\n   * One possible path to achieve presumed immunity against a disease - within the context of an authority.\r\n   */\r\n  public series?: fhir.FhirString|undefined;\r\n  /**\r\n   * Indicates the authority who published the protocol (e.g. ACIP) that is being followed.\r\n   */\r\n  public authority?: fhir.Reference|undefined;\r\n  /**\r\n   * The vaccine preventable disease the dose is being administered against.\r\n   */\r\n  public targetDisease?: fhir.CodeableConcept[];\r\n  /**\r\n   * The use of an integer is preferred if known. A string should only be used in cases where an integer is not available (such as when documenting a recurring booster dose).\r\n   */\r\n  public doseNumber: (fhir.FhirPositiveInt|fhir.FhirString)|null;\r\n  /**\r\n   * Internal flag to properly serialize choice-type element Immunization.protocolApplied.doseNumber[x]\r\n   */\r\n  protected static readonly _fts_doseNumberIsChoice:true = true;\r\n  /**\r\n   * The use of an integer is preferred if known. A string should only be used in cases where an integer is not available (such as when documenting a recurring booster dose).\r\n   */\r\n  public seriesDoses?: (fhir.FhirPositiveInt|fhir.FhirString)|undefined;\r\n  /**\r\n   * Internal flag to properly serialize choice-type element Immunization.protocolApplied.seriesDoses[x]\r\n   */\r\n  protected static readonly _fts_seriesDosesIsChoice:true = true;\r\n  /**\r\n   * Default constructor for ImmunizationProtocolApplied - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<ImmunizationProtocolAppliedArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    if (source['series']) { this.series = new fhir.FhirString({value: source.series}); }\r\n    if (source['authority']) { this.authority = new fhir.Reference(source.authority); }\r\n    if (source['targetDisease']) { this.targetDisease = source.targetDisease.map((x) => new fhir.CodeableConcept(x)); }\r\n    else { this.targetDisease = []; }\r\n    if (source['doseNumber']) { this.doseNumber = source.doseNumber; }\r\n    else if (source['doseNumberPositiveInt']) { this.doseNumber = new fhir.FhirPositiveInt({value: source.doseNumberPositiveInt}); }\r\n    else if (source['doseNumberString']) { this.doseNumber = new fhir.FhirString({value: source.doseNumberString}); }\r\n    else { this.doseNumber = null; }\r\n    if (source['seriesDoses']) { this.seriesDoses = source.seriesDoses; }\r\n    else if (source['seriesDosesPositiveInt']) { this.seriesDoses = new fhir.FhirPositiveInt({value: source.seriesDosesPositiveInt}); }\r\n    else if (source['seriesDosesString']) { this.seriesDoses = new fhir.FhirString({value: source.seriesDosesString}); }\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (this[\"series\"]) { outcome.issue!.push(...this.series.doModelValidation().issue!); }\r\n    if (this[\"authority\"]) { outcome.issue!.push(...this.authority.doModelValidation().issue!); }\r\n    if (this[\"targetDisease\"]) { this.targetDisease.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (!this['doseNumber']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property doseNumber: fhir: Immunization.protocolApplied.doseNumber[x]:', }));\r\n    }\r\n    return outcome;\r\n  }\r\n}\r\n/**\r\n * Valid arguments for the Immunization type.\r\n */\r\nexport interface ImmunizationArgs extends fhir.DomainResourceArgs {\r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  resourceType: \"Immunization\"|undefined;\r\n  /**\r\n   * A unique identifier assigned to this immunization record.\r\n   */\r\n  identifier?: fhir.IdentifierArgs[]|undefined;\r\n  /**\r\n   * Will generally be set to show that the immunization has been completed or not done.  This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid.\r\n   */\r\n  status: ImmunizationStatusCodeType|null;\r\n  /**\r\n   * This is generally only used for the status of \"not-done\". The reason for performing the immunization event is captured in reasonCode, not here.\r\n   */\r\n  statusReason?: fhir.CodeableConceptArgs|undefined;\r\n  /**\r\n   * Vaccine that was administered or was to be administered.\r\n   */\r\n  vaccineCode: fhir.CodeableConceptArgs|null;\r\n  /**\r\n   * The patient who either received or did not receive the immunization.\r\n   */\r\n  patient: fhir.ReferenceArgs|null;\r\n  /**\r\n   * The visit or admission or other contact between patient and health care provider the immunization was performed as part of.\r\n   */\r\n  encounter?: fhir.ReferenceArgs|undefined;\r\n  /**\r\n   * When immunizations are given a specific date and time should always be known.   When immunizations are patient reported, a specific date might not be known.  Although partial dates are allowed, an adult patient might not be able to recall the year a childhood immunization was given. An exact date is always preferable, but the use of the String data type is acceptable when an exact date is not known. A small number of vaccines (e.g. live oral typhoid vaccine) are given as a series of patient self-administered dose over a span of time. In cases like this, often, only the first dose (typically a provider supervised dose) is recorded with the occurrence indicating the date/time of the first dose.\r\n   */\r\n  occurrence?: fhir.FhirDateTime|fhir.FhirString|undefined;\r\n  /**\r\n   * When immunizations are given a specific date and time should always be known.   When immunizations are patient reported, a specific date might not be known.  Although partial dates are allowed, an adult patient might not be able to recall the year a childhood immunization was given. An exact date is always preferable, but the use of the String data type is acceptable when an exact date is not known. A small number of vaccines (e.g. live oral typhoid vaccine) are given as a series of patient self-administered dose over a span of time. In cases like this, often, only the first dose (typically a provider supervised dose) is recorded with the occurrence indicating the date/time of the first dose.\r\n   */\r\n  occurrenceDateTime?: fhir.FhirDateTime|string|undefined;\r\n  /**\r\n   * When immunizations are given a specific date and time should always be known.   When immunizations are patient reported, a specific date might not be known.  Although partial dates are allowed, an adult patient might not be able to recall the year a childhood immunization was given. An exact date is always preferable, but the use of the String data type is acceptable when an exact date is not known. A small number of vaccines (e.g. live oral typhoid vaccine) are given as a series of patient self-administered dose over a span of time. In cases like this, often, only the first dose (typically a provider supervised dose) is recorded with the occurrence indicating the date/time of the first dose.\r\n   */\r\n  occurrenceString?: fhir.FhirString|string|undefined;\r\n  /**\r\n   * The date the occurrence of the immunization was first captured in the record - potentially significantly after the occurrence of the event.\r\n   */\r\n  recorded?: fhir.FhirDateTime|string|undefined;\r\n  /**\r\n   * Reflects the “reliability” of the content.\r\n   */\r\n  primarySource?: fhir.FhirBoolean|boolean|undefined;\r\n  /**\r\n   * Should not be populated if primarySource = True, not required even if primarySource = False.\r\n   */\r\n  reportOrigin?: fhir.CodeableConceptArgs|undefined;\r\n  /**\r\n   * The service delivery location where the vaccine administration occurred.\r\n   */\r\n  location?: fhir.ReferenceArgs|undefined;\r\n  /**\r\n   * Name of vaccine manufacturer.\r\n   */\r\n  manufacturer?: fhir.ReferenceArgs|undefined;\r\n  /**\r\n   * Lot number of the  vaccine product.\r\n   */\r\n  lotNumber?: fhir.FhirString|string|undefined;\r\n  /**\r\n   * Date vaccine batch expires.\r\n   */\r\n  expirationDate?: fhir.FhirDate|string|undefined;\r\n  /**\r\n   * Body site where vaccine was administered.\r\n   */\r\n  site?: fhir.CodeableConceptArgs|undefined;\r\n  /**\r\n   * The path by which the vaccine product is taken into the body.\r\n   */\r\n  route?: fhir.CodeableConceptArgs|undefined;\r\n  /**\r\n   * The quantity of vaccine product that was administered.\r\n   */\r\n  doseQuantity?: fhir.QuantityArgs|undefined;\r\n  /**\r\n   * Indicates who performed the immunization event.\r\n   */\r\n  performer?: fhir.ImmunizationPerformerArgs[]|undefined;\r\n  /**\r\n   * Extra information about the immunization that is not conveyed by the other attributes.\r\n   */\r\n  note?: fhir.AnnotationArgs[]|undefined;\r\n  /**\r\n   * Reasons why the vaccine was administered.\r\n   */\r\n  reasonCode?: fhir.CodeableConceptArgs[]|undefined;\r\n  /**\r\n   * Condition, Observation or DiagnosticReport that supports why the immunization was administered.\r\n   */\r\n  reasonReference?: fhir.ReferenceArgs[]|undefined;\r\n  /**\r\n   * Typically, the recognition of the dose being sub-potent is retrospective, after the administration (ex. notification of a manufacturer recall after administration). However, in the case of a partial administration (the patient moves unexpectedly and only some of the dose is actually administered), subpotency may be recognized immediately, but it is still important to record the event.\r\n   */\r\n  isSubpotent?: fhir.FhirBoolean|boolean|undefined;\r\n  /**\r\n   * Reason why a dose is considered to be subpotent.\r\n   */\r\n  subpotentReason?: fhir.CodeableConceptArgs[]|undefined;\r\n  /**\r\n   * Educational material presented to the patient (or guardian) at the time of vaccine administration.\r\n   */\r\n  education?: fhir.ImmunizationEducationArgs[]|undefined;\r\n  /**\r\n   * Indicates a patient's eligibility for a funding program.\r\n   */\r\n  programEligibility?: fhir.CodeableConceptArgs[]|undefined;\r\n  /**\r\n   * Indicates the source of the vaccine actually administered. This may be different than the patient eligibility (e.g. the patient may be eligible for a publically purchased vaccine but due to inventory issues, vaccine purchased with private funds was actually administered).\r\n   */\r\n  fundingSource?: fhir.CodeableConceptArgs|undefined;\r\n  /**\r\n   * A reaction may be an indication of an allergy or intolerance and, if this is determined to be the case, it should be recorded as a new AllergyIntolerance resource instance as most systems will not query against past Immunization.reaction elements.\r\n   */\r\n  reaction?: fhir.ImmunizationReactionArgs[]|undefined;\r\n  /**\r\n   * The protocol (set of recommendations) being followed by the provider who administered the dose.\r\n   */\r\n  protocolApplied?: fhir.ImmunizationProtocolAppliedArgs[]|undefined;\r\n}\r\n\r\n/**\r\n * Describes the event of a patient being administered a vaccine or a record of an immunization as reported by a patient, a clinician or another party.\r\n */\r\nexport class Immunization extends fhir.DomainResource {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'Immunization';\r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  public resourceType: \"Immunization\";\r\n  /**\r\n   * A unique identifier assigned to this immunization record.\r\n   */\r\n  public identifier?: fhir.Identifier[];\r\n  /**\r\n   * Will generally be set to show that the immunization has been completed or not done.  This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid.\r\n   */\r\n  public status: ImmunizationStatusCodeType|null;\r\n  /**\r\n   * This is generally only used for the status of \"not-done\". The reason for performing the immunization event is captured in reasonCode, not here.\r\n   */\r\n  public statusReason?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * Vaccine that was administered or was to be administered.\r\n   */\r\n  public vaccineCode: fhir.CodeableConcept|null;\r\n  /**\r\n   * The patient who either received or did not receive the immunization.\r\n   */\r\n  public patient: fhir.Reference|null;\r\n  /**\r\n   * The visit or admission or other contact between patient and health care provider the immunization was performed as part of.\r\n   */\r\n  public encounter?: fhir.Reference|undefined;\r\n  /**\r\n   * When immunizations are given a specific date and time should always be known.   When immunizations are patient reported, a specific date might not be known.  Although partial dates are allowed, an adult patient might not be able to recall the year a childhood immunization was given. An exact date is always preferable, but the use of the String data type is acceptable when an exact date is not known. A small number of vaccines (e.g. live oral typhoid vaccine) are given as a series of patient self-administered dose over a span of time. In cases like this, often, only the first dose (typically a provider supervised dose) is recorded with the occurrence indicating the date/time of the first dose.\r\n   */\r\n  public occurrence: (fhir.FhirDateTime|fhir.FhirString)|null;\r\n  /**\r\n   * Internal flag to properly serialize choice-type element Immunization.occurrence[x]\r\n   */\r\n  protected static readonly _fts_occurrenceIsChoice:true = true;\r\n  /**\r\n   * The date the occurrence of the immunization was first captured in the record - potentially significantly after the occurrence of the event.\r\n   */\r\n  public recorded?: fhir.FhirDateTime|undefined;\r\n  /**\r\n   * Reflects the “reliability” of the content.\r\n   */\r\n  public primarySource?: fhir.FhirBoolean|undefined;\r\n  /**\r\n   * Should not be populated if primarySource = True, not required even if primarySource = False.\r\n   */\r\n  public reportOrigin?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * The service delivery location where the vaccine administration occurred.\r\n   */\r\n  public location?: fhir.Reference|undefined;\r\n  /**\r\n   * Name of vaccine manufacturer.\r\n   */\r\n  public manufacturer?: fhir.Reference|undefined;\r\n  /**\r\n   * Lot number of the  vaccine product.\r\n   */\r\n  public lotNumber?: fhir.FhirString|undefined;\r\n  /**\r\n   * Date vaccine batch expires.\r\n   */\r\n  public expirationDate?: fhir.FhirDate|undefined;\r\n  /**\r\n   * Body site where vaccine was administered.\r\n   */\r\n  public site?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * The path by which the vaccine product is taken into the body.\r\n   */\r\n  public route?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * The quantity of vaccine product that was administered.\r\n   */\r\n  public doseQuantity?: fhir.Quantity|undefined;\r\n  /**\r\n   * Indicates who performed the immunization event.\r\n   */\r\n  public performer?: fhir.ImmunizationPerformer[];\r\n  /**\r\n   * Extra information about the immunization that is not conveyed by the other attributes.\r\n   */\r\n  public note?: fhir.Annotation[];\r\n  /**\r\n   * Reasons why the vaccine was administered.\r\n   */\r\n  public reasonCode?: fhir.CodeableConcept[];\r\n  /**\r\n   * Condition, Observation or DiagnosticReport that supports why the immunization was administered.\r\n   */\r\n  public reasonReference?: fhir.Reference[];\r\n  /**\r\n   * Typically, the recognition of the dose being sub-potent is retrospective, after the administration (ex. notification of a manufacturer recall after administration). However, in the case of a partial administration (the patient moves unexpectedly and only some of the dose is actually administered), subpotency may be recognized immediately, but it is still important to record the event.\r\n   */\r\n  public isSubpotent?: fhir.FhirBoolean|undefined;\r\n  /**\r\n   * Reason why a dose is considered to be subpotent.\r\n   */\r\n  public subpotentReason?: fhir.CodeableConcept[];\r\n  /**\r\n   * Educational material presented to the patient (or guardian) at the time of vaccine administration.\r\n   */\r\n  public education?: fhir.ImmunizationEducation[];\r\n  /**\r\n   * Indicates a patient's eligibility for a funding program.\r\n   */\r\n  public programEligibility?: fhir.CodeableConcept[];\r\n  /**\r\n   * Indicates the source of the vaccine actually administered. This may be different than the patient eligibility (e.g. the patient may be eligible for a publically purchased vaccine but due to inventory issues, vaccine purchased with private funds was actually administered).\r\n   */\r\n  public fundingSource?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * A reaction may be an indication of an allergy or intolerance and, if this is determined to be the case, it should be recorded as a new AllergyIntolerance resource instance as most systems will not query against past Immunization.reaction elements.\r\n   */\r\n  public reaction?: fhir.ImmunizationReaction[];\r\n  /**\r\n   * The protocol (set of recommendations) being followed by the provider who administered the dose.\r\n   */\r\n  public protocolApplied?: fhir.ImmunizationProtocolApplied[];\r\n  /**\r\n   * Default constructor for Immunization - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<ImmunizationArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    this.resourceType = 'Immunization';\r\n    if (source['identifier']) { this.identifier = source.identifier.map((x) => new fhir.Identifier(x)); }\r\n    else { this.identifier = []; }\r\n    if (source['status']) { this.status = source.status; }\r\n    else { this.status = null; }\r\n    if (source['statusReason']) { this.statusReason = new fhir.CodeableConcept(source.statusReason); }\r\n    if (source['vaccineCode']) { this.vaccineCode = new fhir.CodeableConcept(source.vaccineCode); }\r\n    else { this.vaccineCode = null; }\r\n    if (source['patient']) { this.patient = new fhir.Reference(source.patient); }\r\n    else { this.patient = null; }\r\n    if (source['encounter']) { this.encounter = new fhir.Reference(source.encounter); }\r\n    if (source['occurrence']) { this.occurrence = source.occurrence; }\r\n    else if (source['occurrenceDateTime']) { this.occurrence = new fhir.FhirDateTime({value: source.occurrenceDateTime}); }\r\n    else if (source['occurrenceString']) { this.occurrence = new fhir.FhirString({value: source.occurrenceString}); }\r\n    else { this.occurrence = null; }\r\n    if (source['recorded']) { this.recorded = new fhir.FhirDateTime({value: source.recorded}); }\r\n    if (source['primarySource']) { this.primarySource = new fhir.FhirBoolean({value: source.primarySource}); }\r\n    if (source['reportOrigin']) { this.reportOrigin = new fhir.CodeableConcept(source.reportOrigin); }\r\n    if (source['location']) { this.location = new fhir.Reference(source.location); }\r\n    if (source['manufacturer']) { this.manufacturer = new fhir.Reference(source.manufacturer); }\r\n    if (source['lotNumber']) { this.lotNumber = new fhir.FhirString({value: source.lotNumber}); }\r\n    if (source['expirationDate']) { this.expirationDate = new fhir.FhirDate({value: source.expirationDate}); }\r\n    if (source['site']) { this.site = new fhir.CodeableConcept(source.site); }\r\n    if (source['route']) { this.route = new fhir.CodeableConcept(source.route); }\r\n    if (source['doseQuantity']) { this.doseQuantity = new fhir.Quantity(source.doseQuantity); }\r\n    if (source['performer']) { this.performer = source.performer.map((x) => new fhir.ImmunizationPerformer(x)); }\r\n    else { this.performer = []; }\r\n    if (source['note']) { this.note = source.note.map((x) => new fhir.Annotation(x)); }\r\n    else { this.note = []; }\r\n    if (source['reasonCode']) { this.reasonCode = source.reasonCode.map((x) => new fhir.CodeableConcept(x)); }\r\n    else { this.reasonCode = []; }\r\n    if (source['reasonReference']) { this.reasonReference = source.reasonReference.map((x) => new fhir.Reference(x)); }\r\n    else { this.reasonReference = []; }\r\n    if (source['isSubpotent']) { this.isSubpotent = new fhir.FhirBoolean({value: source.isSubpotent}); }\r\n    if (source['subpotentReason']) { this.subpotentReason = source.subpotentReason.map((x) => new fhir.CodeableConcept(x)); }\r\n    else { this.subpotentReason = []; }\r\n    if (source['education']) { this.education = source.education.map((x) => new fhir.ImmunizationEducation(x)); }\r\n    else { this.education = []; }\r\n    if (source['programEligibility']) { this.programEligibility = source.programEligibility.map((x) => new fhir.CodeableConcept(x)); }\r\n    else { this.programEligibility = []; }\r\n    if (source['fundingSource']) { this.fundingSource = new fhir.CodeableConcept(source.fundingSource); }\r\n    if (source['reaction']) { this.reaction = source.reaction.map((x) => new fhir.ImmunizationReaction(x)); }\r\n    else { this.reaction = []; }\r\n    if (source['protocolApplied']) { this.protocolApplied = source.protocolApplied.map((x) => new fhir.ImmunizationProtocolApplied(x)); }\r\n    else { this.protocolApplied = []; }\r\n  }\r\n  /**\r\n   * Required-bound Value Set for status (Immunization.status)\r\n   */\r\n  public static statusRequiredCoding():ImmunizationStatusCodingType {\r\n    return ImmunizationStatusCodings;\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (!this['resourceType']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property resourceType:\"Immunization\" fhir: Immunization.resourceType:\"Immunization\"', }));\r\n    }\r\n    if (this[\"identifier\"]) { this.identifier.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (!this['status']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property status:ImmunizationStatusCodeType fhir: Immunization.status:code', }));\r\n    }\r\n    if (this[\"statusReason\"]) { outcome.issue!.push(...this.statusReason.doModelValidation().issue!); }\r\n    if (!this['vaccineCode']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property vaccineCode:fhir.CodeableConcept fhir: Immunization.vaccineCode:CodeableConcept', }));\r\n    }\r\n    if (this[\"vaccineCode\"]) { outcome.issue!.push(...this.vaccineCode.doModelValidation().issue!); }\r\n    if (!this['patient']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property patient:fhir.Reference fhir: Immunization.patient:Reference', }));\r\n    }\r\n    if (this[\"patient\"]) { outcome.issue!.push(...this.patient.doModelValidation().issue!); }\r\n    if (this[\"encounter\"]) { outcome.issue!.push(...this.encounter.doModelValidation().issue!); }\r\n    if (!this['occurrence']) {\r\n      outcome.issue!.push(new fhir.OperationOutcomeIssue({ severity: IssueSeverityCodes.Error, code: IssueTypeCodes.RequiredElementMissing,  diagnostics: 'Missing required property occurrence: fhir: Immunization.occurrence[x]:', }));\r\n    }\r\n    if (this[\"recorded\"]) { outcome.issue!.push(...this.recorded.doModelValidation().issue!); }\r\n    if (this[\"primarySource\"]) { outcome.issue!.push(...this.primarySource.doModelValidation().issue!); }\r\n    if (this[\"reportOrigin\"]) { outcome.issue!.push(...this.reportOrigin.doModelValidation().issue!); }\r\n    if (this[\"location\"]) { outcome.issue!.push(...this.location.doModelValidation().issue!); }\r\n    if (this[\"manufacturer\"]) { outcome.issue!.push(...this.manufacturer.doModelValidation().issue!); }\r\n    if (this[\"lotNumber\"]) { outcome.issue!.push(...this.lotNumber.doModelValidation().issue!); }\r\n    if (this[\"expirationDate\"]) { outcome.issue!.push(...this.expirationDate.doModelValidation().issue!); }\r\n    if (this[\"site\"]) { outcome.issue!.push(...this.site.doModelValidation().issue!); }\r\n    if (this[\"route\"]) { outcome.issue!.push(...this.route.doModelValidation().issue!); }\r\n    if (this[\"doseQuantity\"]) { outcome.issue!.push(...this.doseQuantity.doModelValidation().issue!); }\r\n    if (this[\"performer\"]) { this.performer.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"note\"]) { this.note.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"reasonCode\"]) { this.reasonCode.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"reasonReference\"]) { this.reasonReference.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"isSubpotent\"]) { outcome.issue!.push(...this.isSubpotent.doModelValidation().issue!); }\r\n    if (this[\"subpotentReason\"]) { this.subpotentReason.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"education\"]) { this.education.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"programEligibility\"]) { this.programEligibility.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"fundingSource\"]) { outcome.issue!.push(...this.fundingSource.doModelValidation().issue!); }\r\n    if (this[\"reaction\"]) { this.reaction.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    if (this[\"protocolApplied\"]) { this.protocolApplied.forEach((x) => { outcome.issue!.push(...x.doModelValidation().issue!); }) }\r\n    return outcome;\r\n  }\r\n}\r\n"],"names":["fhir.CodeableConcept","fhir.Reference","fhir.OperationOutcomeIssue","fhir.BackboneElement","fhir.FhirString","fhir.FhirUri","fhir.FhirDateTime","fhir.FhirBoolean","fhir.FhirPositiveInt","fhir.Identifier","fhir.FhirDate","fhir.Quantity","fhir.ImmunizationPerformer","fhir.Annotation","fhir.ImmunizationEducation","fhir.ImmunizationReaction","fhir.ImmunizationProtocolApplied","fhir.DomainResource"],"mappings":"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"}