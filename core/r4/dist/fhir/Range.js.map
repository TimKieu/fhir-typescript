{"version":3,"file":"Range.js","sources":["../../src/fhir/Range.ts"],"sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4.core version: 4.0.1\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR ComplexType: Range\r\n\r\nimport * as fhir from '../fhir.js';\r\n\r\n// @ts-ignore\r\nimport { IssueTypeCodes } from '../fhirValueSets/IssueTypeCodes.js';\r\n// @ts-ignore\r\nimport { IssueSeverityCodes } from '../fhirValueSets/IssueSeverityCodes.js';\r\n/**\r\n * Valid arguments for the Range type.\r\n */\r\nexport interface RangeArgs extends fhir.FhirElementArgs {\r\n  /**\r\n   * If the low element is missing, the low boundary is not known.\r\n   */\r\n  low?: fhir.QuantityArgs|undefined;\r\n  /**\r\n   * If the high element is missing, the high boundary is not known.\r\n   */\r\n  high?: fhir.QuantityArgs|undefined;\r\n}\r\n\r\n/**\r\n * A set of ordered Quantities defined by a low and high limit.\r\n */\r\nexport class Range extends fhir.FhirElement {\r\n  /**\r\n   * Mapping of this datatype to a FHIR equivalent\r\n   */\r\n  public static readonly _fts_dataType:string = 'Range';\r\n  /**\r\n   * If the low element is missing, the low boundary is not known.\r\n   */\r\n  public low?: fhir.Quantity|undefined;\r\n  /**\r\n   * If the high element is missing, the high boundary is not known.\r\n   */\r\n  public high?: fhir.Quantity|undefined;\r\n  /**\r\n   * Default constructor for Range - initializes any required elements to null if a value is not provided.\r\n   */\r\n  constructor(source:Partial<RangeArgs> = {}, options:fhir.FhirConstructorOptions = {}) {\r\n    super(source, options);\r\n    if (source['low']) { this.low = new fhir.Quantity(source.low); }\r\n    if (source['high']) { this.high = new fhir.Quantity(source.high); }\r\n  }\r\n  /**\r\n   * Function to perform basic model validation (e.g., check if required elements are present).\r\n   */\r\n  public override doModelValidation():fhir.OperationOutcome {\r\n    var outcome:fhir.OperationOutcome = super.doModelValidation();\r\n    if (this[\"low\"]) { outcome.issue!.push(...this.low.doModelValidation().issue!); }\r\n    if (this[\"high\"]) { outcome.issue!.push(...this.high.doModelValidation().issue!); }\r\n    return outcome;\r\n  }\r\n}\r\n"],"names":["fhir.Quantity","fhir.FhirElement"],"mappings":";;;;;;AAAA;AAyBA;;AAEG;AACH,IAAA,KAAA,kBAAA,UAAA,MAAA,EAAA;IAA2B,SAAgB,CAAA,KAAA,EAAA,MAAA,CAAA,CAAA;AAazC;;AAEG;IACH,SAAY,KAAA,CAAA,MAA8B,EAAE,OAAwC,EAAA;AAAxE,QAAA,IAAA,MAAA,KAAA,KAAA,CAAA,EAAA,EAAA,MAA8B,GAAA,EAAA,CAAA,EAAA;AAAE,QAAA,IAAA,OAAA,KAAA,KAAA,CAAA,EAAA,EAAA,OAAwC,GAAA,EAAA,CAAA,EAAA;AAApF,QAAA,IAAA,KAAA,GACE,MAAM,CAAA,IAAA,CAAA,IAAA,EAAA,MAAM,EAAE,OAAO,CAAC,IAGvB,IAAA,CAAA;AAFC,QAAA,IAAI,MAAM,CAAC,KAAK,CAAC,EAAE;AAAE,YAAA,KAAI,CAAC,GAAG,GAAG,IAAIA,QAAa,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AAAE,SAAA;AAChE,QAAA,IAAI,MAAM,CAAC,MAAM,CAAC,EAAE;AAAE,YAAA,KAAI,CAAC,IAAI,GAAG,IAAIA,QAAa,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAAE,SAAA;;KACpE;AACD;;AAEG;AACa,IAAA,KAAA,CAAA,SAAA,CAAA,iBAAiB,GAAjC,YAAA;;AACE,QAAA,IAAI,OAAO,GAAyB,MAAM,CAAA,SAAA,CAAA,iBAAiB,WAAE,CAAC;AAC9D,QAAA,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE;AAAE,YAAA,CAAA,KAAA,OAAO,CAAC,KAAM,EAAC,IAAI,CAAA,KAAA,CAAA,EAAA,EAAI,IAAI,CAAC,GAAG,CAAC,iBAAiB,EAAE,CAAC,KAAM,CAAE,CAAA;AAAE,SAAA;AACjF,QAAA,IAAI,IAAI,CAAC,MAAM,CAAC,EAAE;AAAE,YAAA,CAAA,KAAA,OAAO,CAAC,KAAM,EAAC,IAAI,CAAA,KAAA,CAAA,EAAA,EAAI,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,KAAM,CAAE,CAAA;AAAE,SAAA;AACnF,QAAA,OAAO,OAAO,CAAC;KAChB,CAAA;AA5BD;;AAEG;IACoB,KAAa,CAAA,aAAA,GAAU,OAAO,CAAC;IA0BxD,OAAC,KAAA,CAAA;AAAA,CA9BD,CAA2BC,WAAgB,CA8B1C;;;;"}