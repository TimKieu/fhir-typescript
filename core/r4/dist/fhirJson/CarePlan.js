// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR Resource: CarePlan
export {};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ2FyZVBsYW4uanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlySnNvbi9DYXJlUGxhbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQywwQkFBMEIiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjQuY29yZSB2ZXJzaW9uOiA0LjAuMVxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgUmVzb3VyY2U6IENhcmVQbGFuXHJcblxyXG5pbXBvcnQgKiBhcyBmaGlyIGZyb20gJy4uL2ZoaXJKc29uLmpzJztcclxuXHJcblxyXG4vKipcclxuICogQSBzaW1wbGUgc3VtbWFyeSBvZiBhIHBsYW5uZWQgYWN0aXZpdHkgc3VpdGFibGUgZm9yIGEgZ2VuZXJhbCBjYXJlIHBsYW4gc3lzdGVtIChlLmcuIGZvcm0gZHJpdmVuKSB0aGF0IGRvZXNuJ3Qga25vdyBhYm91dCBzcGVjaWZpYyByZXNvdXJjZXMgc3VjaCBhcyBwcm9jZWR1cmUgZXRjLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBDYXJlUGxhbkFjdGl2aXR5RGV0YWlsIGV4dGVuZHMgZmhpci5CYWNrYm9uZUVsZW1lbnQgeyBcclxuICAvKipcclxuICAgKiBBIGRlc2NyaXB0aW9uIG9mIHRoZSBraW5kIG9mIHJlc291cmNlIHRoZSBpbi1saW5lIGRlZmluaXRpb24gb2YgYSBjYXJlIHBsYW4gYWN0aXZpdHkgaXMgcmVwcmVzZW50aW5nLiAgVGhlIENhcmVQbGFuLmFjdGl2aXR5LmRldGFpbCBpcyBhbiBpbi1saW5lIGRlZmluaXRpb24gd2hlbiBhIHJlc291cmNlIGlzIG5vdCByZWZlcmVuY2VkIHVzaW5nIENhcmVQbGFuLmFjdGl2aXR5LnJlZmVyZW5jZS4gIEZvciBleGFtcGxlLCBhIE1lZGljYXRpb25SZXF1ZXN0LCBhIFNlcnZpY2VSZXF1ZXN0LCBvciBhIENvbW11bmljYXRpb25SZXF1ZXN0LlxyXG4gICAqL1xyXG4gIGtpbmQ/OiAnQXBwb2ludG1lbnQnfCdDb21tdW5pY2F0aW9uUmVxdWVzdCd8J0RldmljZVJlcXVlc3QnfCdNZWRpY2F0aW9uUmVxdWVzdCd8J051dHJpdGlvbk9yZGVyJ3wnU2VydmljZVJlcXVlc3QnfCdUYXNrJ3wnVmlzaW9uUHJlc2NyaXB0aW9uJ3x1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogVGhlIFVSTCBwb2ludGluZyB0byBhIEZISVItZGVmaW5lZCBwcm90b2NvbCwgZ3VpZGVsaW5lLCBxdWVzdGlvbm5haXJlIG9yIG90aGVyIGRlZmluaXRpb24gdGhhdCBpcyBhZGhlcmVkIHRvIGluIHdob2xlIG9yIGluIHBhcnQgYnkgdGhpcyBDYXJlUGxhbiBhY3Rpdml0eS5cclxuICAgKi9cclxuICBpbnN0YW50aWF0ZXNDYW5vbmljYWw/OiBzdHJpbmdbXXx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IENhcmVQbGFuLmFjdGl2aXR5LmRldGFpbC5pbnN0YW50aWF0ZXNDYW5vbmljYWxcclxuICAgKi9cclxuICBfaW5zdGFudGlhdGVzQ2Fub25pY2FsPzooZmhpci5GaGlyRWxlbWVudHxudWxsKVtdO1xyXG4gIC8qKlxyXG4gICAqIFRoaXMgbWlnaHQgYmUgYW4gSFRNTCBwYWdlLCBQREYsIGV0Yy4gb3IgY291bGQganVzdCBiZSBhIG5vbi1yZXNvbHZhYmxlIFVSSSBpZGVudGlmaWVyLlxyXG4gICAqL1xyXG4gIGluc3RhbnRpYXRlc1VyaT86IHN0cmluZ1tdfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogQ2FyZVBsYW4uYWN0aXZpdHkuZGV0YWlsLmluc3RhbnRpYXRlc1VyaVxyXG4gICAqL1xyXG4gIF9pbnN0YW50aWF0ZXNVcmk/OihmaGlyLkZoaXJFbGVtZW50fG51bGwpW107XHJcbiAgLyoqXHJcbiAgICogVGVuZHMgdG8gYmUgbGVzcyByZWxldmFudCBmb3IgYWN0aXZpdGllcyBpbnZvbHZpbmcgcGFydGljdWxhciBwcm9kdWN0cy4gIENvZGVzIHNob3VsZCBub3QgY29udmV5IG5lZ2F0aW9uIC0gdXNlIFwicHJvaGliaXRlZFwiIGluc3RlYWQuXHJcbiAgICovXHJcbiAgY29kZT86IGZoaXIuQ29kZWFibGVDb25jZXB0fHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBUaGlzIGNvdWxkIGJlIGEgZGlhZ25vc2lzIGNvZGUuICBJZiBhIGZ1bGwgY29uZGl0aW9uIHJlY29yZCBleGlzdHMgb3IgYWRkaXRpb25hbCBkZXRhaWwgaXMgbmVlZGVkLCB1c2UgcmVhc29uQ29uZGl0aW9uIGluc3RlYWQuXHJcbiAgICovXHJcbiAgcmVhc29uQ29kZT86IGZoaXIuQ29kZWFibGVDb25jZXB0W118dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIENvbmRpdGlvbnMgY2FuIGJlIGlkZW50aWZpZWQgYXQgdGhlIGFjdGl2aXR5IGxldmVsIHRoYXQgYXJlIG5vdCBpZGVudGlmaWVkIGFzIHJlYXNvbnMgZm9yIHRoZSBvdmVyYWxsIHBsYW4uXHJcbiAgICovXHJcbiAgcmVhc29uUmVmZXJlbmNlPzogZmhpci5SZWZlcmVuY2VbXXx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogSW50ZXJuYWwgcmVmZXJlbmNlIHRoYXQgaWRlbnRpZmllcyB0aGUgZ29hbHMgdGhhdCB0aGlzIGFjdGl2aXR5IGlzIGludGVuZGVkIHRvIGNvbnRyaWJ1dGUgdG93YXJkcyBtZWV0aW5nLlxyXG4gICAqL1xyXG4gIGdvYWw/OiBmaGlyLlJlZmVyZW5jZVtdfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBTb21lIGFzcGVjdHMgb2Ygc3RhdHVzIGNhbiBiZSBpbmZlcnJlZCBiYXNlZCBvbiB0aGUgcmVzb3VyY2VzIGxpbmtlZCBpbiBhY3Rpb25UYWtlbi4gIE5vdGUgdGhhdCBcInN0YXR1c1wiIGlzIG9ubHkgYXMgY3VycmVudCBhcyB0aGUgcGxhbiB3YXMgbW9zdCByZWNlbnRseSB1cGRhdGVkLiAgXHJcbiAgICogVGhlIHVua25vd24gY29kZSBpcyBub3QgdG8gYmUgdXNlZCB0byBjb252ZXkgb3RoZXIgc3RhdHVzZXMuICBUaGUgdW5rbm93biBjb2RlIHNob3VsZCBiZSB1c2VkIHdoZW4gb25lIG9mIHRoZSBzdGF0dXNlcyBhcHBsaWVzLCBidXQgdGhlIGF1dGhvcmluZyBzeXN0ZW0gZG9lc24ndCBrbm93IHRoZSBjdXJyZW50IHN0YXRlIG9mIHRoZSBhY3Rpdml0eS5cclxuICAgKi9cclxuICBzdGF0dXM6ICdjYW5jZWxsZWQnfCdjb21wbGV0ZWQnfCdlbnRlcmVkLWluLWVycm9yJ3wnaW4tcHJvZ3Jlc3MnfCdub3Qtc3RhcnRlZCd8J29uLWhvbGQnfCdzY2hlZHVsZWQnfCdzdG9wcGVkJ3wndW5rbm93bid8bnVsbDtcclxuICAvKipcclxuICAgKiBXaWxsIGdlbmVyYWxseSBub3QgYmUgcHJlc2VudCBpZiBzdGF0dXMgaXMgXCJjb21wbGV0ZVwiLiAgQmUgc3VyZSB0byBwcm9tcHQgdG8gdXBkYXRlIHRoaXMgKG9yIGF0IGxlYXN0IHJlbW92ZSB0aGUgZXhpc3RpbmcgdmFsdWUpIGlmIHRoZSBzdGF0dXMgaXMgY2hhbmdlZC5cclxuICAgKi9cclxuICBzdGF0dXNSZWFzb24/OiBmaGlyLkNvZGVhYmxlQ29uY2VwdHx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogVGhpcyBlbGVtZW50IGlzIGxhYmVsZWQgYXMgYSBtb2RpZmllciBiZWNhdXNlIGl0IG1hcmtzIGFuIGFjdGl2aXR5IGFzIGFuIGFjdGl2aXR5IHRoYXQgaXMgbm90IHRvIGJlIHBlcmZvcm1lZC5cclxuICAgKi9cclxuICBkb05vdFBlcmZvcm0/OiBib29sZWFufHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogQ2FyZVBsYW4uYWN0aXZpdHkuZGV0YWlsLmRvTm90UGVyZm9ybVxyXG4gICAqL1xyXG4gIF9kb05vdFBlcmZvcm0/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbiAgLyoqXHJcbiAgICogVGhlIHBlcmlvZCwgdGltaW5nIG9yIGZyZXF1ZW5jeSB1cG9uIHdoaWNoIHRoZSBkZXNjcmliZWQgYWN0aXZpdHkgaXMgdG8gb2NjdXIuXHJcbiAgICovXHJcbiAgc2NoZWR1bGVkVGltaW5nPzogZmhpci5UaW1pbmd8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIFRoZSBwZXJpb2QsIHRpbWluZyBvciBmcmVxdWVuY3kgdXBvbiB3aGljaCB0aGUgZGVzY3JpYmVkIGFjdGl2aXR5IGlzIHRvIG9jY3VyLlxyXG4gICAqL1xyXG4gIHNjaGVkdWxlZFBlcmlvZD86IGZoaXIuUGVyaW9kfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBUaGUgcGVyaW9kLCB0aW1pbmcgb3IgZnJlcXVlbmN5IHVwb24gd2hpY2ggdGhlIGRlc2NyaWJlZCBhY3Rpdml0eSBpcyB0byBvY2N1ci5cclxuICAgKi9cclxuICBzY2hlZHVsZWRTdHJpbmc/OiBzdHJpbmd8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBDYXJlUGxhbi5hY3Rpdml0eS5kZXRhaWwuc2NoZWR1bGVkW3hdXHJcbiAgICovXHJcbiAgX3NjaGVkdWxlZFN0cmluZz86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBNYXkgcmVmZXJlbmNlIGEgc3BlY2lmaWMgY2xpbmljYWwgbG9jYXRpb24gb3IgbWF5IGlkZW50aWZ5IGEgdHlwZSBvZiBsb2NhdGlvbi5cclxuICAgKi9cclxuICBsb2NhdGlvbj86IGZoaXIuUmVmZXJlbmNlfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBBIHBlcmZvcm1lciBNQVkgYWxzbyBiZSBhIHBhcnRpY2lwYW50IGluIHRoZSBjYXJlIHBsYW4uXHJcbiAgICovXHJcbiAgcGVyZm9ybWVyPzogZmhpci5SZWZlcmVuY2VbXXx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogSWRlbnRpZmllcyB0aGUgZm9vZCwgZHJ1ZyBvciBvdGhlciBwcm9kdWN0IHRvIGJlIGNvbnN1bWVkIG9yIHN1cHBsaWVkIGluIHRoZSBhY3Rpdml0eS5cclxuICAgKi9cclxuICBwcm9kdWN0Q29kZWFibGVDb25jZXB0PzogZmhpci5Db2RlYWJsZUNvbmNlcHR8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIElkZW50aWZpZXMgdGhlIGZvb2QsIGRydWcgb3Igb3RoZXIgcHJvZHVjdCB0byBiZSBjb25zdW1lZCBvciBzdXBwbGllZCBpbiB0aGUgYWN0aXZpdHkuXHJcbiAgICovXHJcbiAgcHJvZHVjdFJlZmVyZW5jZT86IGZoaXIuUmVmZXJlbmNlfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBJZGVudGlmaWVzIHRoZSBxdWFudGl0eSBleHBlY3RlZCB0byBiZSBjb25zdW1lZCBpbiBhIGdpdmVuIGRheS5cclxuICAgKi9cclxuICBkYWlseUFtb3VudD86IGZoaXIuUXVhbnRpdHl8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIElkZW50aWZpZXMgdGhlIHF1YW50aXR5IGV4cGVjdGVkIHRvIGJlIHN1cHBsaWVkLCBhZG1pbmlzdGVyZWQgb3IgY29uc3VtZWQgYnkgdGhlIHN1YmplY3QuXHJcbiAgICovXHJcbiAgcXVhbnRpdHk/OiBmaGlyLlF1YW50aXR5fHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBUaGlzIHByb3ZpZGVzIGEgdGV4dHVhbCBkZXNjcmlwdGlvbiBvZiBjb25zdHJhaW50cyBvbiB0aGUgaW50ZW5kZWQgYWN0aXZpdHkgb2NjdXJyZW5jZSwgaW5jbHVkaW5nIHJlbGF0aW9uIHRvIG90aGVyIGFjdGl2aXRpZXMuICBJdCBtYXkgYWxzbyBpbmNsdWRlIG9iamVjdGl2ZXMsIHByZS1jb25kaXRpb25zIGFuZCBlbmQtY29uZGl0aW9ucy4gIEZpbmFsbHksIGl0IG1heSBjb252ZXkgc3BlY2lmaWNzIGFib3V0IHRoZSBhY3Rpdml0eSBzdWNoIGFzIGJvZHkgc2l0ZSwgbWV0aG9kLCByb3V0ZSwgZXRjLlxyXG4gICAqL1xyXG4gIGRlc2NyaXB0aW9uPzogc3RyaW5nfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogQ2FyZVBsYW4uYWN0aXZpdHkuZGV0YWlsLmRlc2NyaXB0aW9uXHJcbiAgICovXHJcbiAgX2Rlc2NyaXB0aW9uPzpmaGlyLkZoaXJFbGVtZW50O1xyXG59XHJcblxyXG4vKipcclxuICogSWRlbnRpZmllcyBhIHBsYW5uZWQgYWN0aW9uIHRvIG9jY3VyIGFzIHBhcnQgb2YgdGhlIHBsYW4uICBGb3IgZXhhbXBsZSwgYSBtZWRpY2F0aW9uIHRvIGJlIHVzZWQsIGxhYiB0ZXN0cyB0byBwZXJmb3JtLCBzZWxmLW1vbml0b3JpbmcsIGVkdWNhdGlvbiwgZXRjLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBDYXJlUGxhbkFjdGl2aXR5IGV4dGVuZHMgZmhpci5CYWNrYm9uZUVsZW1lbnQgeyBcclxuICAvKipcclxuICAgKiBOb3RlIHRoYXQgdGhpcyBzaG91bGQgbm90IGR1cGxpY2F0ZSB0aGUgYWN0aXZpdHkgc3RhdHVzIChlLmcuIGNvbXBsZXRlZCBvciBpbiBwcm9ncmVzcykuXHJcbiAgICovXHJcbiAgb3V0Y29tZUNvZGVhYmxlQ29uY2VwdD86IGZoaXIuQ29kZWFibGVDb25jZXB0W118dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIFRoZSBhY3Rpdml0eSBvdXRjb21lIGlzIGluZGVwZW5kZW50IG9mIHRoZSBvdXRjb21lIG9mIHRoZSByZWxhdGVkIGdvYWwocykuICBGb3IgZXhhbXBsZSwgaWYgdGhlIGdvYWwgaXMgdG8gYWNoaWV2ZSBhIHRhcmdldCBib2R5IHdlaWdodCBvZiAxNTAgbGJzIGFuZCBhbiBhY3Rpdml0eSBpcyBkZWZpbmVkIHRvIGRpZXQsIHRoZW4gdGhlIGFjdGl2aXR5IG91dGNvbWUgY291bGQgYmUgY2Fsb3JpZXMgY29uc3VtZWQgd2hlcmVhcyB0aGUgZ29hbCBvdXRjb21lIGlzIGFuIG9ic2VydmF0aW9uIGZvciB0aGUgYWN0dWFsIGJvZHkgd2VpZ2h0IG1lYXN1cmVkLlxyXG4gICAqL1xyXG4gIG91dGNvbWVSZWZlcmVuY2U/OiBmaGlyLlJlZmVyZW5jZVtdfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBUaGlzIGVsZW1lbnQgc2hvdWxkIE5PVCBiZSB1c2VkIHRvIGRlc2NyaWJlIHRoZSBhY3Rpdml0eSB0byBiZSBwZXJmb3JtZWQgLSB0aGF0IG9jY3VycyBlaXRoZXIgd2l0aGluIHRoZSByZXNvdXJjZSBwb2ludGVkIHRvIGJ5IGFjdGl2aXR5LmRldGFpbC5yZWZlcmVuY2Ugb3IgaW4gYWN0aXZpdHkuZGV0YWlsLmRlc2NyaXB0aW9uLlxyXG4gICAqL1xyXG4gIHByb2dyZXNzPzogZmhpci5Bbm5vdGF0aW9uW118dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIFN0YW5kYXJkIGV4dGVuc2lvbiBleGlzdHMgKFtyZXNvdXJjZS1wZXJ0YWluc1RvR29hbF0oZXh0ZW5zaW9uLXJlc291cmNlLXBlcnRhaW5zdG9nb2FsLmh0bWwpKSB0aGF0IGFsbG93cyBnb2FscyB0byBiZSByZWZlcmVuY2VkIGZyb20gYW55IG9mIHRoZSByZWZlcmVuY2VkIHJlc291cmNlcyBpbiBDYXJlUGxhbi5hY3Rpdml0eS5yZWZlcmVuY2UuICBcclxuICAgKiBUaGUgZ29hbCBzaG91bGQgYmUgdmlzaWJsZSB3aGVuIHRoZSByZXNvdXJjZSByZWZlcmVuY2VkIGJ5IENhcmVQbGFuLmFjdGl2aXR5LnJlZmVyZW5jZSBpcyB2aWV3ZWQgaW5kZXBlbmRlbnRseSBmcm9tIHRoZSBDYXJlUGxhbi4gIFJlcXVlc3RzIHRoYXQgYXJlIHBvaW50ZWQgdG8gYnkgYSBDYXJlUGxhbiB1c2luZyB0aGlzIGVsZW1lbnQgc2hvdWxkICpub3QqIHBvaW50IHRvIHRoaXMgQ2FyZVBsYW4gdXNpbmcgdGhlIFwiYmFzZWRPblwiIGVsZW1lbnQuICBpLmUuIFJlcXVlc3RzIHRoYXQgYXJlIHBhcnQgb2YgYSBDYXJlUGxhbiBhcmUgbm90IFwiYmFzZWQgb25cIiB0aGUgQ2FyZVBsYW4uXHJcbiAgICovXHJcbiAgcmVmZXJlbmNlPzogZmhpci5SZWZlcmVuY2V8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEEgc2ltcGxlIHN1bW1hcnkgb2YgYSBwbGFubmVkIGFjdGl2aXR5IHN1aXRhYmxlIGZvciBhIGdlbmVyYWwgY2FyZSBwbGFuIHN5c3RlbSAoZS5nLiBmb3JtIGRyaXZlbikgdGhhdCBkb2Vzbid0IGtub3cgYWJvdXQgc3BlY2lmaWMgcmVzb3VyY2VzIHN1Y2ggYXMgcHJvY2VkdXJlIGV0Yy5cclxuICAgKi9cclxuICBkZXRhaWw/OiBmaGlyLkNhcmVQbGFuQWN0aXZpdHlEZXRhaWx8dW5kZWZpbmVkO1xyXG59XHJcblxyXG4vKipcclxuICogRGVzY3JpYmVzIHRoZSBpbnRlbnRpb24gb2YgaG93IG9uZSBvciBtb3JlIHByYWN0aXRpb25lcnMgaW50ZW5kIHRvIGRlbGl2ZXIgY2FyZSBmb3IgYSBwYXJ0aWN1bGFyIHBhdGllbnQsIGdyb3VwIG9yIGNvbW11bml0eSBmb3IgYSBwZXJpb2Qgb2YgdGltZSwgcG9zc2libHkgbGltaXRlZCB0byBjYXJlIGZvciBhIHNwZWNpZmljIGNvbmRpdGlvbiBvciBzZXQgb2YgY29uZGl0aW9ucy5cclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgQ2FyZVBsYW4gZXh0ZW5kcyBmaGlyLkRvbWFpblJlc291cmNlIHsgXHJcbiAgLyoqXHJcbiAgICogUmVzb3VyY2UgVHlwZSBOYW1lXHJcbiAgICovXHJcbiAgcmVzb3VyY2VUeXBlOiBcIkNhcmVQbGFuXCI7XHJcbiAgLyoqXHJcbiAgICogVGhpcyBpcyBhIGJ1c2luZXNzIGlkZW50aWZpZXIsIG5vdCBhIHJlc291cmNlIGlkZW50aWZpZXIgKHNlZSBbZGlzY3Vzc2lvbl0ocmVzb3VyY2UuaHRtbCNpZGVudGlmaWVycykpLiAgSXQgaXMgYmVzdCBwcmFjdGljZSBmb3IgdGhlIGlkZW50aWZpZXIgdG8gb25seSBhcHBlYXIgb24gYSBzaW5nbGUgcmVzb3VyY2UgaW5zdGFuY2UsIGhvd2V2ZXIgYnVzaW5lc3MgcHJhY3RpY2VzIG1heSBvY2Nhc2lvbmFsbHkgZGljdGF0ZSB0aGF0IG11bHRpcGxlIHJlc291cmNlIGluc3RhbmNlcyB3aXRoIHRoZSBzYW1lIGlkZW50aWZpZXIgY2FuIGV4aXN0IC0gcG9zc2libHkgZXZlbiB3aXRoIGRpZmZlcmVudCByZXNvdXJjZSB0eXBlcy4gIEZvciBleGFtcGxlLCBtdWx0aXBsZSBQYXRpZW50IGFuZCBhIFBlcnNvbiByZXNvdXJjZSBpbnN0YW5jZSBtaWdodCBzaGFyZSB0aGUgc2FtZSBzb2NpYWwgaW5zdXJhbmNlIG51bWJlci5cclxuICAgKi9cclxuICBpZGVudGlmaWVyPzogZmhpci5JZGVudGlmaWVyW118dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIFRoZSBVUkwgcG9pbnRpbmcgdG8gYSBGSElSLWRlZmluZWQgcHJvdG9jb2wsIGd1aWRlbGluZSwgcXVlc3Rpb25uYWlyZSBvciBvdGhlciBkZWZpbml0aW9uIHRoYXQgaXMgYWRoZXJlZCB0byBpbiB3aG9sZSBvciBpbiBwYXJ0IGJ5IHRoaXMgQ2FyZVBsYW4uXHJcbiAgICovXHJcbiAgaW5zdGFudGlhdGVzQ2Fub25pY2FsPzogc3RyaW5nW118dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBDYXJlUGxhbi5pbnN0YW50aWF0ZXNDYW5vbmljYWxcclxuICAgKi9cclxuICBfaW5zdGFudGlhdGVzQ2Fub25pY2FsPzooZmhpci5GaGlyRWxlbWVudHxudWxsKVtdO1xyXG4gIC8qKlxyXG4gICAqIFRoaXMgbWlnaHQgYmUgYW4gSFRNTCBwYWdlLCBQREYsIGV0Yy4gb3IgY291bGQganVzdCBiZSBhIG5vbi1yZXNvbHZhYmxlIFVSSSBpZGVudGlmaWVyLlxyXG4gICAqL1xyXG4gIGluc3RhbnRpYXRlc1VyaT86IHN0cmluZ1tdfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogQ2FyZVBsYW4uaW5zdGFudGlhdGVzVXJpXHJcbiAgICovXHJcbiAgX2luc3RhbnRpYXRlc1VyaT86KGZoaXIuRmhpckVsZW1lbnR8bnVsbClbXTtcclxuICAvKipcclxuICAgKiBBIGNhcmUgcGxhbiB0aGF0IGlzIGZ1bGZpbGxlZCBpbiB3aG9sZSBvciBpbiBwYXJ0IGJ5IHRoaXMgY2FyZSBwbGFuLlxyXG4gICAqL1xyXG4gIGJhc2VkT24/OiBmaGlyLlJlZmVyZW5jZVtdfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBUaGUgcmVwbGFjZW1lbnQgY291bGQgYmUgYmVjYXVzZSB0aGUgaW5pdGlhbCBjYXJlIHBsYW4gd2FzIGltbWVkaWF0ZWx5IHJlamVjdGVkIChkdWUgdG8gYW4gaXNzdWUpIG9yIGJlY2F1c2UgdGhlIHByZXZpb3VzIGNhcmUgcGxhbiB3YXMgY29tcGxldGVkLCBidXQgdGhlIG5lZWQgZm9yIHRoZSBhY3Rpb24gZGVzY3JpYmVkIGJ5IHRoZSBjYXJlIHBsYW4gcmVtYWlucyBvbmdvaW5nLlxyXG4gICAqL1xyXG4gIHJlcGxhY2VzPzogZmhpci5SZWZlcmVuY2VbXXx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRWFjaCBjYXJlIHBsYW4gaXMgYW4gaW5kZXBlbmRlbnQgcmVxdWVzdCwgc3VjaCB0aGF0IGhhdmluZyBhIGNhcmUgcGxhbiBiZSBwYXJ0IG9mIGFub3RoZXIgY2FyZSBwbGFuIGNhbiBjYXVzZSBpc3N1ZXMgd2l0aCBjYXNjYWRpbmcgc3RhdHVzZXMuICBBcyBzdWNoLCB0aGlzIGVsZW1lbnQgaXMgc3RpbGwgYmVpbmcgZGlzY3Vzc2VkLlxyXG4gICAqL1xyXG4gIHBhcnRPZj86IGZoaXIuUmVmZXJlbmNlW118dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIFRoZSB1bmtub3duIGNvZGUgaXMgbm90IHRvIGJlIHVzZWQgdG8gY29udmV5IG90aGVyIHN0YXR1c2VzLiAgVGhlIHVua25vd24gY29kZSBzaG91bGQgYmUgdXNlZCB3aGVuIG9uZSBvZiB0aGUgc3RhdHVzZXMgYXBwbGllcywgYnV0IHRoZSBhdXRob3Jpbmcgc3lzdGVtIGRvZXNuJ3Qga25vdyB0aGUgY3VycmVudCBzdGF0ZSBvZiB0aGUgY2FyZSBwbGFuLlxyXG4gICAqIFRoaXMgZWxlbWVudCBpcyBsYWJlbGVkIGFzIGEgbW9kaWZpZXIgYmVjYXVzZSB0aGUgc3RhdHVzIGNvbnRhaW5zIHRoZSBjb2RlIGVudGVyZWQtaW4tZXJyb3IgdGhhdCBtYXJrcyB0aGUgcGxhbiBhcyBub3QgY3VycmVudGx5IHZhbGlkLlxyXG4gICAqL1xyXG4gIHN0YXR1czogJ2FjdGl2ZSd8J2NvbXBsZXRlZCd8J2RyYWZ0J3wnZW50ZXJlZC1pbi1lcnJvcid8J29uLWhvbGQnfCdyZXZva2VkJ3wndW5rbm93bid8bnVsbDtcclxuICAvKipcclxuICAgKiBUaGlzIGVsZW1lbnQgaXMgbGFiZWxlZCBhcyBhIG1vZGlmaWVyIGJlY2F1c2UgdGhlIGludGVudCBhbHRlcnMgd2hlbiBhbmQgaG93IHRoZSByZXNvdXJjZSBpcyBhY3R1YWxseSBhcHBsaWNhYmxlLlxyXG4gICAqL1xyXG4gIGludGVudDogJ29wdGlvbid8J29yZGVyJ3wncGxhbid8J3Byb3Bvc2FsJ3xudWxsO1xyXG4gIC8qKlxyXG4gICAqIFRoZXJlIG1heSBiZSBtdWx0aXBsZSBheGVzIG9mIGNhdGVnb3JpemF0aW9uIGFuZCBvbmUgcGxhbiBtYXkgc2VydmUgbXVsdGlwbGUgcHVycG9zZXMuICBJbiBzb21lIGNhc2VzLCB0aGlzIG1heSBiZSByZWR1bmRhbnQgd2l0aCByZWZlcmVuY2VzIHRvIENhcmVQbGFuLmNvbmNlcm4uXHJcbiAgICovXHJcbiAgY2F0ZWdvcnk/OiBmaGlyLkNvZGVhYmxlQ29uY2VwdFtdfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBIdW1hbi1mcmllbmRseSBuYW1lIGZvciB0aGUgY2FyZSBwbGFuLlxyXG4gICAqL1xyXG4gIHRpdGxlPzogc3RyaW5nfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogQ2FyZVBsYW4udGl0bGVcclxuICAgKi9cclxuICBfdGl0bGU/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbiAgLyoqXHJcbiAgICogQSBkZXNjcmlwdGlvbiBvZiB0aGUgc2NvcGUgYW5kIG5hdHVyZSBvZiB0aGUgcGxhbi5cclxuICAgKi9cclxuICBkZXNjcmlwdGlvbj86IHN0cmluZ3x1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IENhcmVQbGFuLmRlc2NyaXB0aW9uXHJcbiAgICovXHJcbiAgX2Rlc2NyaXB0aW9uPzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIElkZW50aWZpZXMgdGhlIHBhdGllbnQgb3IgZ3JvdXAgd2hvc2UgaW50ZW5kZWQgY2FyZSBpcyBkZXNjcmliZWQgYnkgdGhlIHBsYW4uXHJcbiAgICovXHJcbiAgc3ViamVjdDogZmhpci5SZWZlcmVuY2V8bnVsbDtcclxuICAvKipcclxuICAgKiBUaGlzIHdpbGwgdHlwaWNhbGx5IGJlIHRoZSBlbmNvdW50ZXIgdGhlIGV2ZW50IG9jY3VycmVkIHdpdGhpbiwgYnV0IHNvbWUgYWN0aXZpdGllcyBtYXkgYmUgaW5pdGlhdGVkIHByaW9yIHRvIG9yIGFmdGVyIHRoZSBvZmZpY2lhbCBjb21wbGV0aW9uIG9mIGFuIGVuY291bnRlciBidXQgc3RpbGwgYmUgdGllZCB0byB0aGUgY29udGV4dCBvZiB0aGUgZW5jb3VudGVyLiBDYXJlUGxhbiBhY3Rpdml0aWVzIGNvbmR1Y3RlZCBhcyBhIHJlc3VsdCBvZiB0aGUgY2FyZSBwbGFuIG1heSB3ZWxsIG9jY3VyIGFzIHBhcnQgb2Ygb3RoZXIgZW5jb3VudGVycy5cclxuICAgKi9cclxuICBlbmNvdW50ZXI/OiBmaGlyLlJlZmVyZW5jZXx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogQW55IGFjdGl2aXRpZXMgc2NoZWR1bGVkIGFzIHBhcnQgb2YgdGhlIHBsYW4gc2hvdWxkIGJlIGNvbnN0cmFpbmVkIHRvIHRoZSBzcGVjaWZpZWQgcGVyaW9kIHJlZ2FyZGxlc3Mgb2Ygd2hldGhlciB0aGUgYWN0aXZpdGllcyBhcmUgcGxhbm5lZCB3aXRoaW4gYSBzaW5nbGUgZW5jb3VudGVyL2VwaXNvZGUgb3IgYWNyb3NzIG11bHRpcGxlIGVuY291bnRlcnMvZXBpc29kZXMgKGUuZy4gdGhlIGxvbmdpdHVkaW5hbCBtYW5hZ2VtZW50IG9mIGEgY2hyb25pYyBjb25kaXRpb24pLlxyXG4gICAqL1xyXG4gIHBlcmlvZD86IGZoaXIuUGVyaW9kfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBSZXByZXNlbnRzIHdoZW4gdGhpcyBwYXJ0aWN1bGFyIENhcmVQbGFuIHJlY29yZCB3YXMgY3JlYXRlZCBpbiB0aGUgc3lzdGVtLCB3aGljaCBpcyBvZnRlbiBhIHN5c3RlbS1nZW5lcmF0ZWQgZGF0ZS5cclxuICAgKi9cclxuICBjcmVhdGVkPzogc3RyaW5nfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogQ2FyZVBsYW4uY3JlYXRlZFxyXG4gICAqL1xyXG4gIF9jcmVhdGVkPzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIFRoZSBhdXRob3IgbWF5IGFsc28gYmUgYSBjb250cmlidXRvci4gIEZvciBleGFtcGxlLCBhbiBvcmdhbml6YXRpb24gY2FuIGJlIGFuIGF1dGhvciwgYnV0IG5vdCBsaXN0ZWQgYXMgYSBjb250cmlidXRvci5cclxuICAgKi9cclxuICBhdXRob3I/OiBmaGlyLlJlZmVyZW5jZXx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogQ29sbGFib3JhdGl2ZSBjYXJlIHBsYW5zIG1heSBoYXZlIG11bHRpcGxlIGNvbnRyaWJ1dG9ycy5cclxuICAgKi9cclxuICBjb250cmlidXRvcj86IGZoaXIuUmVmZXJlbmNlW118dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIElkZW50aWZpZXMgYWxsIHBlb3BsZSBhbmQgb3JnYW5pemF0aW9ucyB3aG8gYXJlIGV4cGVjdGVkIHRvIGJlIGludm9sdmVkIGluIHRoZSBjYXJlIGVudmlzaW9uZWQgYnkgdGhpcyBwbGFuLlxyXG4gICAqL1xyXG4gIGNhcmVUZWFtPzogZmhpci5SZWZlcmVuY2VbXXx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogV2hlbiB0aGUgZGlhZ25vc2lzIGlzIHJlbGF0ZWQgdG8gYW4gYWxsZXJneSBvciBpbnRvbGVyYW5jZSwgdGhlIENvbmRpdGlvbiBhbmQgQWxsZXJneUludG9sZXJhbmNlIHJlc291cmNlcyBjYW4gYm90aCBiZSB1c2VkLiBIb3dldmVyLCB0byBiZSBhY3Rpb25hYmxlIGZvciBkZWNpc2lvbiBzdXBwb3J0LCB1c2luZyBDb25kaXRpb24gYWxvbmUgaXMgbm90IHN1ZmZpY2llbnQgYXMgdGhlIGFsbGVyZ3kgb3IgaW50b2xlcmFuY2UgY29uZGl0aW9uIG5lZWRzIHRvIGJlIHJlcHJlc2VudGVkIGFzIGFuIEFsbGVyZ3lJbnRvbGVyYW5jZS5cclxuICAgKi9cclxuICBhZGRyZXNzZXM/OiBmaGlyLlJlZmVyZW5jZVtdfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBVc2UgXCJjb25jZXJuXCIgdG8gaWRlbnRpZnkgc3BlY2lmaWMgY29uZGl0aW9ucyBhZGRyZXNzZWQgYnkgdGhlIGNhcmUgcGxhbi5cclxuICAgKi9cclxuICBzdXBwb3J0aW5nSW5mbz86IGZoaXIuUmVmZXJlbmNlW118dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEdvYWwgY2FuIGJlIGFjaGlldmluZyBhIHBhcnRpY3VsYXIgY2hhbmdlIG9yIG1lcmVseSBtYWludGFpbmluZyBhIGN1cnJlbnQgc3RhdGUgb3IgZXZlbiBzbG93aW5nIGEgZGVjbGluZS5cclxuICAgKi9cclxuICBnb2FsPzogZmhpci5SZWZlcmVuY2VbXXx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogSWRlbnRpZmllcyBhIHBsYW5uZWQgYWN0aW9uIHRvIG9jY3VyIGFzIHBhcnQgb2YgdGhlIHBsYW4uICBGb3IgZXhhbXBsZSwgYSBtZWRpY2F0aW9uIHRvIGJlIHVzZWQsIGxhYiB0ZXN0cyB0byBwZXJmb3JtLCBzZWxmLW1vbml0b3JpbmcsIGVkdWNhdGlvbiwgZXRjLlxyXG4gICAqL1xyXG4gIGFjdGl2aXR5PzogZmhpci5DYXJlUGxhbkFjdGl2aXR5W118dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEdlbmVyYWwgbm90ZXMgYWJvdXQgdGhlIGNhcmUgcGxhbiBub3QgY292ZXJlZCBlbHNld2hlcmUuXHJcbiAgICovXHJcbiAgbm90ZT86IGZoaXIuQW5ub3RhdGlvbltdfHVuZGVmaW5lZDtcclxufVxyXG4iXX0=