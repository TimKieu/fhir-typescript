// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR Resource: OperationDefinition
export {};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiT3BlcmF0aW9uRGVmaW5pdGlvbi5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJKc29uL09wZXJhdGlvbkRlZmluaXRpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLCtDQUErQztBQUMvQyxrQ0FBa0M7QUFDbEMscUNBQXFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0LmNvcmUgdmVyc2lvbjogNC4wLjFcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFJlc291cmNlOiBPcGVyYXRpb25EZWZpbml0aW9uXHJcblxyXG5pbXBvcnQgKiBhcyBmaGlyIGZyb20gJy4uL2ZoaXJKc29uLmpzJztcclxuXHJcblxyXG4vKipcclxuICogQmluZHMgdG8gYSB2YWx1ZSBzZXQgaWYgdGhpcyBwYXJhbWV0ZXIgaXMgY29kZWQgKGNvZGUsIENvZGluZywgQ29kZWFibGVDb25jZXB0KS5cclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgT3BlcmF0aW9uRGVmaW5pdGlvblBhcmFtZXRlckJpbmRpbmcgZXh0ZW5kcyBmaGlyLkJhY2tib25lRWxlbWVudCB7IFxyXG4gIC8qKlxyXG4gICAqIEZvciBmdXJ0aGVyIGRpc2N1c3Npb24sIHNlZSBbVXNpbmcgVGVybWlub2xvZ2llc10odGVybWlub2xvZ2llcy5odG1sKS5cclxuICAgKi9cclxuICBzdHJlbmd0aDogJ2V4YW1wbGUnfCdleHRlbnNpYmxlJ3wncHJlZmVycmVkJ3wncmVxdWlyZWQnfG51bGw7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IE9wZXJhdGlvbkRlZmluaXRpb24ucGFyYW1ldGVyLmJpbmRpbmcuc3RyZW5ndGhcclxuICAgKi9cclxuICBfc3RyZW5ndGg/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbiAgLyoqXHJcbiAgICogRm9yIHZhbHVlIHNldHMgd2l0aCBhIHJlZmVyZW5jZVJlc291cmNlLCB0aGUgZGlzcGxheSBjYW4gY29udGFpbiB0aGUgdmFsdWUgc2V0IGRlc2NyaXB0aW9uLiAgVGhlIHJlZmVyZW5jZSBtYXkgYmUgdmVyc2lvbi1zcGVjaWZpYyBvciBub3QuXHJcbiAgICovXHJcbiAgdmFsdWVTZXQ6IHN0cmluZ3xudWxsO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBPcGVyYXRpb25EZWZpbml0aW9uLnBhcmFtZXRlci5iaW5kaW5nLnZhbHVlU2V0XHJcbiAgICovXHJcbiAgX3ZhbHVlU2V0PzpmaGlyLkZoaXJFbGVtZW50O1xyXG59XHJcblxyXG4vKipcclxuICogUmVzb2x1dGlvbiBhcHBsaWVzIGlmIHRoZSByZWZlcmVuY2VkIHBhcmFtZXRlciBleGlzdHMuXHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIE9wZXJhdGlvbkRlZmluaXRpb25QYXJhbWV0ZXJSZWZlcmVuY2VkRnJvbSBleHRlbmRzIGZoaXIuQmFja2JvbmVFbGVtZW50IHsgXHJcbiAgLyoqXHJcbiAgICogVGhlIG5hbWUgb2YgdGhlIHBhcmFtZXRlciBvciBkb3Qtc2VwYXJhdGVkIHBhdGggb2YgcGFyYW1ldGVyIG5hbWVzIHBvaW50aW5nIHRvIHRoZSByZXNvdXJjZSBwYXJhbWV0ZXIgdGhhdCBpcyBleHBlY3RlZCB0byBjb250YWluIGEgcmVmZXJlbmNlIHRvIHRoaXMgcmVzb3VyY2UuXHJcbiAgICovXHJcbiAgc291cmNlOiBzdHJpbmd8bnVsbDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogT3BlcmF0aW9uRGVmaW5pdGlvbi5wYXJhbWV0ZXIucmVmZXJlbmNlZEZyb20uc291cmNlXHJcbiAgICovXHJcbiAgX3NvdXJjZT86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBUaGUgaWQgb2YgdGhlIGVsZW1lbnQgaW4gdGhlIHJlZmVyZW5jaW5nIHJlc291cmNlIHRoYXQgaXMgZXhwZWN0ZWQgdG8gcmVzb2x2ZSB0byB0aGlzIHJlc291cmNlLlxyXG4gICAqL1xyXG4gIHNvdXJjZUlkPzogc3RyaW5nfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogT3BlcmF0aW9uRGVmaW5pdGlvbi5wYXJhbWV0ZXIucmVmZXJlbmNlZEZyb20uc291cmNlSWRcclxuICAgKi9cclxuICBfc291cmNlSWQ/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBRdWVyeSBEZWZpbml0aW9ucyBvbmx5IGhhdmUgb25lIG91dHB1dCBwYXJhbWV0ZXIsIG5hbWVkIFwicmVzdWx0XCIuIFRoaXMgbWlnaHQgbm90IGJlIGRlc2NyaWJlZCwgYnV0IGNhbiBiZSB0byBhbGxvdyBhIHByb2ZpbGUgdG8gYmUgZGVmaW5lZC5cclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgT3BlcmF0aW9uRGVmaW5pdGlvblBhcmFtZXRlciBleHRlbmRzIGZoaXIuQmFja2JvbmVFbGVtZW50IHsgXHJcbiAgLyoqXHJcbiAgICogVGhpcyBuYW1lIG11c3QgYmUgYSB0b2tlbiAoc3RhcnQgd2l0aCBhIGxldHRlciBpbiBhLi56LCBhbmQgb25seSBjb250YWluIGxldHRlcnMsIG51bWVyYWxzLCBhbmQgdW5kZXJzY29yZS4gTm90ZSB0aGF0IGZvciBzZWFyY2ggcGFyYW1ldGVycyAodHlwZSA9IHN0cmluZywgd2l0aCBhIHNlYXJjaCB0eXBlKSwgdGhlIG5hbWUgbWF5IGJlIGFsdGVyZWQgYnkgdGhlIHNlYXJjaCBtb2RpZmllcnMuXHJcbiAgICovXHJcbiAgbmFtZTogc3RyaW5nfG51bGw7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IE9wZXJhdGlvbkRlZmluaXRpb24ucGFyYW1ldGVyLm5hbWVcclxuICAgKi9cclxuICBfbmFtZT86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBJZiBhIHBhcmFtZXRlciBuYW1lIGlzIHVzZWQgZm9yIGJvdGggYW4gaW5wdXQgYW5kIGFuIG91dHB1dCBwYXJhbWV0ZXIsIHRoZSBwYXJhbWV0ZXIgc2hvdWxkIGJlIGRlZmluZWQgdHdpY2UuXHJcbiAgICovXHJcbiAgdXNlOiAnaW4nfCdvdXQnfG51bGw7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IE9wZXJhdGlvbkRlZmluaXRpb24ucGFyYW1ldGVyLnVzZVxyXG4gICAqL1xyXG4gIF91c2U/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbiAgLyoqXHJcbiAgICogVGhlIG1pbmltdW0gbnVtYmVyIG9mIHRpbWVzIHRoaXMgcGFyYW1ldGVyIFNIQUxMIGFwcGVhciBpbiB0aGUgcmVxdWVzdCBvciByZXNwb25zZS5cclxuICAgKi9cclxuICBtaW46IG51bWJlcnxudWxsO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBPcGVyYXRpb25EZWZpbml0aW9uLnBhcmFtZXRlci5taW5cclxuICAgKi9cclxuICBfbWluPzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIFRoZSBtYXhpbXVtIG51bWJlciBvZiB0aW1lcyB0aGlzIGVsZW1lbnQgaXMgcGVybWl0dGVkIHRvIGFwcGVhciBpbiB0aGUgcmVxdWVzdCBvciByZXNwb25zZS5cclxuICAgKi9cclxuICBtYXg6IHN0cmluZ3xudWxsO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBPcGVyYXRpb25EZWZpbml0aW9uLnBhcmFtZXRlci5tYXhcclxuICAgKi9cclxuICBfbWF4PzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIERlc2NyaWJlcyB0aGUgbWVhbmluZyBvciB1c2Ugb2YgdGhpcyBwYXJhbWV0ZXIuXHJcbiAgICovXHJcbiAgZG9jdW1lbnRhdGlvbj86IHN0cmluZ3x1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IE9wZXJhdGlvbkRlZmluaXRpb24ucGFyYW1ldGVyLmRvY3VtZW50YXRpb25cclxuICAgKi9cclxuICBfZG9jdW1lbnRhdGlvbj86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBpZiB0aGVyZSBpcyBubyBzdGF0ZWQgcGFyYW1ldGVyLCB0aGVuIHRoZSBwYXJhbWV0ZXIgaXMgYSBtdWx0aS1wYXJ0IHBhcmFtZXRlcjsgdHlwZSBhbmQgbXVzdCBoYXZlIGF0IGxlYXN0IG9uZSBwYXJ0IGRlZmluZWQuXHJcbiAgICovXHJcbiAgdHlwZT86ICdBY2NvdW50J3wnQWN0aXZpdHlEZWZpbml0aW9uJ3wnQWRkcmVzcyd8J0FkdmVyc2VFdmVudCd8J0FnZSd8J0FsbGVyZ3lJbnRvbGVyYW5jZSd8J0Fubm90YXRpb24nfCdBbnknfCdBcHBvaW50bWVudCd8J0FwcG9pbnRtZW50UmVzcG9uc2UnfCdBdHRhY2htZW50J3wnQXVkaXRFdmVudCd8J0JhY2tib25lRWxlbWVudCd8J2Jhc2U2NEJpbmFyeSd8J0Jhc2ljJ3wnQmluYXJ5J3wnQmlvbG9naWNhbGx5RGVyaXZlZFByb2R1Y3QnfCdCb2R5U3RydWN0dXJlJ3wnYm9vbGVhbid8J0J1bmRsZSd8J2Nhbm9uaWNhbCd8J0NhcGFiaWxpdHlTdGF0ZW1lbnQnfCdDYXJlUGxhbid8J0NhcmVUZWFtJ3wnQ2F0YWxvZ0VudHJ5J3wnQ2hhcmdlSXRlbSd8J0NoYXJnZUl0ZW1EZWZpbml0aW9uJ3wnQ2xhaW0nfCdDbGFpbVJlc3BvbnNlJ3wnQ2xpbmljYWxJbXByZXNzaW9uJ3wnY29kZSd8J0NvZGVhYmxlQ29uY2VwdCd8J0NvZGVTeXN0ZW0nfCdDb2RpbmcnfCdDb21tdW5pY2F0aW9uJ3wnQ29tbXVuaWNhdGlvblJlcXVlc3QnfCdDb21wYXJ0bWVudERlZmluaXRpb24nfCdDb21wb3NpdGlvbid8J0NvbmNlcHRNYXAnfCdDb25kaXRpb24nfCdDb25zZW50J3wnQ29udGFjdERldGFpbCd8J0NvbnRhY3RQb2ludCd8J0NvbnRyYWN0J3wnQ29udHJpYnV0b3InfCdDb3VudCd8J0NvdmVyYWdlJ3wnQ292ZXJhZ2VFbGlnaWJpbGl0eVJlcXVlc3QnfCdDb3ZlcmFnZUVsaWdpYmlsaXR5UmVzcG9uc2UnfCdEYXRhUmVxdWlyZW1lbnQnfCdkYXRlJ3wnZGF0ZVRpbWUnfCdkZWNpbWFsJ3wnRGV0ZWN0ZWRJc3N1ZSd8J0RldmljZSd8J0RldmljZURlZmluaXRpb24nfCdEZXZpY2VNZXRyaWMnfCdEZXZpY2VSZXF1ZXN0J3wnRGV2aWNlVXNlU3RhdGVtZW50J3wnRGlhZ25vc3RpY1JlcG9ydCd8J0Rpc3RhbmNlJ3wnRG9jdW1lbnRNYW5pZmVzdCd8J0RvY3VtZW50UmVmZXJlbmNlJ3wnRG9tYWluUmVzb3VyY2UnfCdEb3NhZ2UnfCdEdXJhdGlvbid8J0VmZmVjdEV2aWRlbmNlU3ludGhlc2lzJ3wnRWxlbWVudCd8J0VsZW1lbnREZWZpbml0aW9uJ3wnRW5jb3VudGVyJ3wnRW5kcG9pbnQnfCdFbnJvbGxtZW50UmVxdWVzdCd8J0Vucm9sbG1lbnRSZXNwb25zZSd8J0VwaXNvZGVPZkNhcmUnfCdFdmVudERlZmluaXRpb24nfCdFdmlkZW5jZSd8J0V2aWRlbmNlVmFyaWFibGUnfCdFeGFtcGxlU2NlbmFyaW8nfCdFeHBsYW5hdGlvbk9mQmVuZWZpdCd8J0V4cHJlc3Npb24nfCdFeHRlbnNpb24nfCdGYW1pbHlNZW1iZXJIaXN0b3J5J3wnRmxhZyd8J0dvYWwnfCdHcmFwaERlZmluaXRpb24nfCdHcm91cCd8J0d1aWRhbmNlUmVzcG9uc2UnfCdIZWFsdGhjYXJlU2VydmljZSd8J0h1bWFuTmFtZSd8J2lkJ3wnSWRlbnRpZmllcid8J0ltYWdpbmdTdHVkeSd8J0ltbXVuaXphdGlvbid8J0ltbXVuaXphdGlvbkV2YWx1YXRpb24nfCdJbW11bml6YXRpb25SZWNvbW1lbmRhdGlvbid8J0ltcGxlbWVudGF0aW9uR3VpZGUnfCdpbnN0YW50J3wnSW5zdXJhbmNlUGxhbid8J2ludGVnZXInfCdJbnZvaWNlJ3wnTGlicmFyeSd8J0xpbmthZ2UnfCdMaXN0J3wnTG9jYXRpb24nfCdtYXJrZG93bid8J01hcmtldGluZ1N0YXR1cyd8J01lYXN1cmUnfCdNZWFzdXJlUmVwb3J0J3wnTWVkaWEnfCdNZWRpY2F0aW9uJ3wnTWVkaWNhdGlvbkFkbWluaXN0cmF0aW9uJ3wnTWVkaWNhdGlvbkRpc3BlbnNlJ3wnTWVkaWNhdGlvbktub3dsZWRnZSd8J01lZGljYXRpb25SZXF1ZXN0J3wnTWVkaWNhdGlvblN0YXRlbWVudCd8J01lZGljaW5hbFByb2R1Y3QnfCdNZWRpY2luYWxQcm9kdWN0QXV0aG9yaXphdGlvbid8J01lZGljaW5hbFByb2R1Y3RDb250cmFpbmRpY2F0aW9uJ3wnTWVkaWNpbmFsUHJvZHVjdEluZGljYXRpb24nfCdNZWRpY2luYWxQcm9kdWN0SW5ncmVkaWVudCd8J01lZGljaW5hbFByb2R1Y3RJbnRlcmFjdGlvbid8J01lZGljaW5hbFByb2R1Y3RNYW51ZmFjdHVyZWQnfCdNZWRpY2luYWxQcm9kdWN0UGFja2FnZWQnfCdNZWRpY2luYWxQcm9kdWN0UGhhcm1hY2V1dGljYWwnfCdNZWRpY2luYWxQcm9kdWN0VW5kZXNpcmFibGVFZmZlY3QnfCdNZXNzYWdlRGVmaW5pdGlvbid8J01lc3NhZ2VIZWFkZXInfCdNZXRhJ3wnTW9sZWN1bGFyU2VxdWVuY2UnfCdNb25leSd8J01vbmV5UXVhbnRpdHknfCdOYW1pbmdTeXN0ZW0nfCdOYXJyYXRpdmUnfCdOdXRyaXRpb25PcmRlcid8J09ic2VydmF0aW9uJ3wnT2JzZXJ2YXRpb25EZWZpbml0aW9uJ3wnb2lkJ3wnT3BlcmF0aW9uRGVmaW5pdGlvbid8J09wZXJhdGlvbk91dGNvbWUnfCdPcmdhbml6YXRpb24nfCdPcmdhbml6YXRpb25BZmZpbGlhdGlvbid8J1BhcmFtZXRlckRlZmluaXRpb24nfCdQYXJhbWV0ZXJzJ3wnUGF0aWVudCd8J1BheW1lbnROb3RpY2UnfCdQYXltZW50UmVjb25jaWxpYXRpb24nfCdQZXJpb2QnfCdQZXJzb24nfCdQbGFuRGVmaW5pdGlvbid8J1BvcHVsYXRpb24nfCdwb3NpdGl2ZUludCd8J1ByYWN0aXRpb25lcid8J1ByYWN0aXRpb25lclJvbGUnfCdQcm9jZWR1cmUnfCdQcm9kQ2hhcmFjdGVyaXN0aWMnfCdQcm9kdWN0U2hlbGZMaWZlJ3wnUHJvdmVuYW5jZSd8J1F1YW50aXR5J3wnUXVlc3Rpb25uYWlyZSd8J1F1ZXN0aW9ubmFpcmVSZXNwb25zZSd8J1JhbmdlJ3wnUmF0aW8nfCdSZWZlcmVuY2UnfCdSZWxhdGVkQXJ0aWZhY3QnfCdSZWxhdGVkUGVyc29uJ3wnUmVxdWVzdEdyb3VwJ3wnUmVzZWFyY2hEZWZpbml0aW9uJ3wnUmVzZWFyY2hFbGVtZW50RGVmaW5pdGlvbid8J1Jlc2VhcmNoU3R1ZHknfCdSZXNlYXJjaFN1YmplY3QnfCdSZXNvdXJjZSd8J1Jpc2tBc3Nlc3NtZW50J3wnUmlza0V2aWRlbmNlU3ludGhlc2lzJ3wnU2FtcGxlZERhdGEnfCdTY2hlZHVsZSd8J1NlYXJjaFBhcmFtZXRlcid8J1NlcnZpY2VSZXF1ZXN0J3wnU2lnbmF0dXJlJ3wnU2ltcGxlUXVhbnRpdHknfCdTbG90J3wnU3BlY2ltZW4nfCdTcGVjaW1lbkRlZmluaXRpb24nfCdzdHJpbmcnfCdTdHJ1Y3R1cmVEZWZpbml0aW9uJ3wnU3RydWN0dXJlTWFwJ3wnU3Vic2NyaXB0aW9uJ3wnU3Vic3RhbmNlJ3wnU3Vic3RhbmNlQW1vdW50J3wnU3Vic3RhbmNlTnVjbGVpY0FjaWQnfCdTdWJzdGFuY2VQb2x5bWVyJ3wnU3Vic3RhbmNlUHJvdGVpbid8J1N1YnN0YW5jZVJlZmVyZW5jZUluZm9ybWF0aW9uJ3wnU3Vic3RhbmNlU291cmNlTWF0ZXJpYWwnfCdTdWJzdGFuY2VTcGVjaWZpY2F0aW9uJ3wnU3VwcGx5RGVsaXZlcnknfCdTdXBwbHlSZXF1ZXN0J3wnVGFzayd8J1Rlcm1pbm9sb2d5Q2FwYWJpbGl0aWVzJ3wnVGVzdFJlcG9ydCd8J1Rlc3RTY3JpcHQnfCd0aW1lJ3wnVGltaW5nJ3wnVHJpZ2dlckRlZmluaXRpb24nfCdUeXBlJ3wndW5zaWduZWRJbnQnfCd1cmknfCd1cmwnfCdVc2FnZUNvbnRleHQnfCd1dWlkJ3wnVmFsdWVTZXQnfCdWZXJpZmljYXRpb25SZXN1bHQnfCdWaXNpb25QcmVzY3JpcHRpb24nfCd4aHRtbCd8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBPcGVyYXRpb25EZWZpbml0aW9uLnBhcmFtZXRlci50eXBlXHJcbiAgICovXHJcbiAgX3R5cGU/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbiAgLyoqXHJcbiAgICogT2Z0ZW4sIHRoZXNlIHByb2ZpbGVzIGFyZSB0aGUgYmFzZSBkZWZpbml0aW9ucyBmcm9tIHRoZSBzcGVjIChlLmcuIGh0dHA6Ly9obDcub3JnL2ZoaXIvU3RydWN0dXJlRGVmaW5pdGlvbi9QYXRpZW50KS5cclxuICAgKi9cclxuICB0YXJnZXRQcm9maWxlPzogKHN0cmluZ3xudWxsKVtdfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogT3BlcmF0aW9uRGVmaW5pdGlvbi5wYXJhbWV0ZXIudGFyZ2V0UHJvZmlsZVxyXG4gICAqL1xyXG4gIF90YXJnZXRQcm9maWxlPzooZmhpci5GaGlyRWxlbWVudHxudWxsKVtdO1xyXG4gIC8qKlxyXG4gICAqIEhvdyB0aGUgcGFyYW1ldGVyIGlzIHVuZGVyc3Rvb2QgYXMgYSBzZWFyY2ggcGFyYW1ldGVyLiBUaGlzIGlzIG9ubHkgdXNlZCBpZiB0aGUgcGFyYW1ldGVyIHR5cGUgaXMgJ3N0cmluZycuXHJcbiAgICovXHJcbiAgc2VhcmNoVHlwZT86ICdjb21wb3NpdGUnfCdkYXRlJ3wnbnVtYmVyJ3wncXVhbnRpdHknfCdyZWZlcmVuY2UnfCdzcGVjaWFsJ3wnc3RyaW5nJ3wndG9rZW4nfCd1cmknfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogT3BlcmF0aW9uRGVmaW5pdGlvbi5wYXJhbWV0ZXIuc2VhcmNoVHlwZVxyXG4gICAqL1xyXG4gIF9zZWFyY2hUeXBlPzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIEJpbmRzIHRvIGEgdmFsdWUgc2V0IGlmIHRoaXMgcGFyYW1ldGVyIGlzIGNvZGVkIChjb2RlLCBDb2RpbmcsIENvZGVhYmxlQ29uY2VwdCkuXHJcbiAgICovXHJcbiAgYmluZGluZz86IGZoaXIuT3BlcmF0aW9uRGVmaW5pdGlvblBhcmFtZXRlckJpbmRpbmd8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIFJlc29sdXRpb24gYXBwbGllcyBpZiB0aGUgcmVmZXJlbmNlZCBwYXJhbWV0ZXIgZXhpc3RzLlxyXG4gICAqL1xyXG4gIHJlZmVyZW5jZWRGcm9tPzogKGZoaXIuT3BlcmF0aW9uRGVmaW5pdGlvblBhcmFtZXRlclJlZmVyZW5jZWRGcm9tfG51bGwpW118dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIFF1ZXJ5IERlZmluaXRpb25zIG9ubHkgaGF2ZSBvbmUgb3V0cHV0IHBhcmFtZXRlciwgbmFtZWQgXCJyZXN1bHRcIi4gVGhpcyBtaWdodCBub3QgYmUgZGVzY3JpYmVkLCBidXQgY2FuIGJlIHRvIGFsbG93IGEgcHJvZmlsZSB0byBiZSBkZWZpbmVkLlxyXG4gICAqL1xyXG4gIHBhcnQ/OiAoZmhpci5PcGVyYXRpb25EZWZpbml0aW9uUGFyYW1ldGVyfG51bGwpW118dW5kZWZpbmVkO1xyXG59XHJcblxyXG4vKipcclxuICogVGhlIGNvbWJpbmF0aW9ucyBhcmUgc3VnZ2VzdGlvbnMgYXMgdG8gd2hpY2ggc2V0cyBvZiBwYXJhbWV0ZXJzIHRvIHVzZSB0b2dldGhlciwgYnV0IHRoZSBjb21iaW5hdGlvbnMgYXJlIG5vdCBpbnRlbmRlZCB0byBiZSBhdXRob3JpdGF0aXZlLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBPcGVyYXRpb25EZWZpbml0aW9uT3ZlcmxvYWQgZXh0ZW5kcyBmaGlyLkJhY2tib25lRWxlbWVudCB7IFxyXG4gIC8qKlxyXG4gICAqIE5hbWUgb2YgcGFyYW1ldGVyIHRvIGluY2x1ZGUgaW4gb3ZlcmxvYWQuXHJcbiAgICovXHJcbiAgcGFyYW1ldGVyTmFtZT86IChzdHJpbmd8bnVsbClbXXx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IE9wZXJhdGlvbkRlZmluaXRpb24ub3ZlcmxvYWQucGFyYW1ldGVyTmFtZVxyXG4gICAqL1xyXG4gIF9wYXJhbWV0ZXJOYW1lPzooZmhpci5GaGlyRWxlbWVudHxudWxsKVtdO1xyXG4gIC8qKlxyXG4gICAqIENvbW1lbnRzIHRvIGdvIG9uIG92ZXJsb2FkLlxyXG4gICAqL1xyXG4gIGNvbW1lbnQ/OiBzdHJpbmd8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBPcGVyYXRpb25EZWZpbml0aW9uLm92ZXJsb2FkLmNvbW1lbnRcclxuICAgKi9cclxuICBfY29tbWVudD86Zmhpci5GaGlyRWxlbWVudDtcclxufVxyXG5cclxuLyoqXHJcbiAqIEEgZm9ybWFsIGNvbXB1dGFibGUgZGVmaW5pdGlvbiBvZiBhbiBvcGVyYXRpb24gKG9uIHRoZSBSRVNUZnVsIGludGVyZmFjZSkgb3IgYSBuYW1lZCBxdWVyeSAodXNpbmcgdGhlIHNlYXJjaCBpbnRlcmFjdGlvbikuXHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIE9wZXJhdGlvbkRlZmluaXRpb24gZXh0ZW5kcyBmaGlyLkRvbWFpblJlc291cmNlIHsgXHJcbiAgLyoqXHJcbiAgICogUmVzb3VyY2UgVHlwZSBOYW1lXHJcbiAgICovXHJcbiAgcmVzb3VyY2VUeXBlOiBcIk9wZXJhdGlvbkRlZmluaXRpb25cInxudWxsO1xyXG4gIC8qKlxyXG4gICAqIENhbiBiZSBhIHVybjp1dWlkOiBvciBhIHVybjpvaWQ6IGJ1dCByZWFsIGh0dHA6IGFkZHJlc3NlcyBhcmUgcHJlZmVycmVkLiAgTXVsdGlwbGUgaW5zdGFuY2VzIG1heSBzaGFyZSB0aGUgc2FtZSBVUkwgaWYgdGhleSBoYXZlIGEgZGlzdGluY3QgdmVyc2lvbi5cclxuICAgKiBUaGUgZGV0ZXJtaW5hdGlvbiBvZiB3aGVuIHRvIGNyZWF0ZSBhIG5ldyB2ZXJzaW9uIG9mIGEgcmVzb3VyY2UgKHNhbWUgdXJsLCBuZXcgdmVyc2lvbikgdnMuIGRlZmluaW5nIGEgbmV3IGFydGlmYWN0IGlzIHVwIHRvIHRoZSBhdXRob3IuICBDb25zaWRlcmF0aW9ucyBmb3IgbWFraW5nIHRoaXMgZGVjaXNpb24gYXJlIGZvdW5kIGluIFtUZWNobmljYWwgYW5kIEJ1c2luZXNzIFZlcnNpb25zXShyZXNvdXJjZS5odG1sI3ZlcnNpb25zKS4gXHJcbiAgICogSW4gc29tZSBjYXNlcywgdGhlIHJlc291cmNlIGNhbiBubyBsb25nZXIgYmUgZm91bmQgYXQgdGhlIHN0YXRlZCB1cmwsIGJ1dCB0aGUgdXJsIGl0c2VsZiBjYW5ub3QgY2hhbmdlLiBJbXBsZW1lbnRhdGlvbnMgY2FuIHVzZSB0aGUgW21ldGEuc291cmNlXShyZXNvdXJjZS5odG1sI21ldGEpIGVsZW1lbnQgdG8gaW5kaWNhdGUgd2hlcmUgdGhlIGN1cnJlbnQgbWFzdGVyIHNvdXJjZSBvZiB0aGUgcmVzb3VyY2UgY2FuIGJlIGZvdW5kLlxyXG4gICAqL1xyXG4gIHVybD86IHN0cmluZ3x1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IE9wZXJhdGlvbkRlZmluaXRpb24udXJsXHJcbiAgICovXHJcbiAgX3VybD86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBUaGVyZSBtYXkgYmUgZGlmZmVyZW50IG9wZXJhdGlvbiBkZWZpbml0aW9uIGluc3RhbmNlcyB0aGF0IGhhdmUgdGhlIHNhbWUgaWRlbnRpZmllciBidXQgZGlmZmVyZW50IHZlcnNpb25zLiAgVGhlIHZlcnNpb24gY2FuIGJlIGFwcGVuZGVkIHRvIHRoZSB1cmwgaW4gYSByZWZlcmVuY2UgdG8gYWxsb3cgYSByZWZlcmVuY2UgdG8gYSBwYXJ0aWN1bGFyIGJ1c2luZXNzIHZlcnNpb24gb2YgdGhlIG9wZXJhdGlvbiBkZWZpbml0aW9uIHdpdGggdGhlIGZvcm1hdCBbdXJsXXxbdmVyc2lvbl0uXHJcbiAgICovXHJcbiAgdmVyc2lvbj86IHN0cmluZ3x1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IE9wZXJhdGlvbkRlZmluaXRpb24udmVyc2lvblxyXG4gICAqL1xyXG4gIF92ZXJzaW9uPzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIFRoZSBuYW1lIGlzIG5vdCBleHBlY3RlZCB0byBiZSBnbG9iYWxseSB1bmlxdWUuIFRoZSBuYW1lIHNob3VsZCBiZSBhIHNpbXBsZSBhbHBoYW51bWVyaWMgdHlwZSBuYW1lIHRvIGVuc3VyZSB0aGF0IGl0IGlzIG1hY2hpbmUtcHJvY2Vzc2luZyBmcmllbmRseS5cclxuICAgKi9cclxuICBuYW1lOiBzdHJpbmd8bnVsbDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogT3BlcmF0aW9uRGVmaW5pdGlvbi5uYW1lXHJcbiAgICovXHJcbiAgX25hbWU/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbiAgLyoqXHJcbiAgICogVGhpcyBuYW1lIGRvZXMgbm90IG5lZWQgdG8gYmUgbWFjaGluZS1wcm9jZXNzaW5nIGZyaWVuZGx5IGFuZCBtYXkgY29udGFpbiBwdW5jdHVhdGlvbiwgd2hpdGUtc3BhY2UsIGV0Yy5cclxuICAgKi9cclxuICB0aXRsZT86IHN0cmluZ3x1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IE9wZXJhdGlvbkRlZmluaXRpb24udGl0bGVcclxuICAgKi9cclxuICBfdGl0bGU/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbiAgLyoqXHJcbiAgICogQWxsb3dzIGZpbHRlcmluZyBvZiBvcGVyYXRpb24gZGVmaW5pdGlvbnMgdGhhdCBhcmUgYXBwcm9wcmlhdGUgZm9yIHVzZSB2ZXJzdXMgbm90LlxyXG4gICAqL1xyXG4gIHN0YXR1czogJ2FjdGl2ZSd8J2RyYWZ0J3wncmV0aXJlZCd8J3Vua25vd24nfG51bGw7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IE9wZXJhdGlvbkRlZmluaXRpb24uc3RhdHVzXHJcbiAgICovXHJcbiAgX3N0YXR1cz86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBOYW1lZCBxdWVyaWVzIGFyZSBpbnZva2VkIGRpZmZlcmVudGx5LCBhbmQgaGF2ZSBkaWZmZXJlbnQgY2FwYWJpbGl0aWVzLlxyXG4gICAqL1xyXG4gIGtpbmQ6ICdvcGVyYXRpb24nfCdxdWVyeSd8bnVsbDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogT3BlcmF0aW9uRGVmaW5pdGlvbi5raW5kXHJcbiAgICovXHJcbiAgX2tpbmQ/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbiAgLyoqXHJcbiAgICogQWxsb3dzIGZpbHRlcmluZyBvZiBvcGVyYXRpb24gZGVmaW5pdGlvbnMgdGhhdCBhcmUgYXBwcm9wcmlhdGUgZm9yIHVzZSB2ZXJzdXMgbm90LlxyXG4gICAqL1xyXG4gIGV4cGVyaW1lbnRhbD86IGJvb2xlYW58dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBPcGVyYXRpb25EZWZpbml0aW9uLmV4cGVyaW1lbnRhbFxyXG4gICAqL1xyXG4gIF9leHBlcmltZW50YWw/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbiAgLyoqXHJcbiAgICogTm90ZSB0aGF0IHRoaXMgaXMgbm90IHRoZSBzYW1lIGFzIHRoZSByZXNvdXJjZSBsYXN0LW1vZGlmaWVkLWRhdGUsIHNpbmNlIHRoZSByZXNvdXJjZSBtYXkgYmUgYSBzZWNvbmRhcnkgcmVwcmVzZW50YXRpb24gb2YgdGhlIG9wZXJhdGlvbiBkZWZpbml0aW9uLiBBZGRpdGlvbmFsIHNwZWNpZmljIGRhdGVzIG1heSBiZSBhZGRlZCBhcyBleHRlbnNpb25zIG9yIGJlIGZvdW5kIGJ5IGNvbnN1bHRpbmcgUHJvdmVuYW5jZXMgYXNzb2NpYXRlZCB3aXRoIHBhc3QgdmVyc2lvbnMgb2YgdGhlIHJlc291cmNlLlxyXG4gICAqL1xyXG4gIGRhdGU/OiBzdHJpbmd8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBPcGVyYXRpb25EZWZpbml0aW9uLmRhdGVcclxuICAgKi9cclxuICBfZGF0ZT86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBVc3VhbGx5IGFuIG9yZ2FuaXphdGlvbiBidXQgbWF5IGJlIGFuIGluZGl2aWR1YWwuIFRoZSBwdWJsaXNoZXIgKG9yIHN0ZXdhcmQpIG9mIHRoZSBvcGVyYXRpb24gZGVmaW5pdGlvbiBpcyB0aGUgb3JnYW5pemF0aW9uIG9yIGluZGl2aWR1YWwgcHJpbWFyaWx5IHJlc3BvbnNpYmxlIGZvciB0aGUgbWFpbnRlbmFuY2UgYW5kIHVwa2VlcCBvZiB0aGUgb3BlcmF0aW9uIGRlZmluaXRpb24uIFRoaXMgaXMgbm90IG5lY2Vzc2FyaWx5IHRoZSBzYW1lIGluZGl2aWR1YWwgb3Igb3JnYW5pemF0aW9uIHRoYXQgZGV2ZWxvcGVkIGFuZCBpbml0aWFsbHkgYXV0aG9yZWQgdGhlIGNvbnRlbnQuIFRoZSBwdWJsaXNoZXIgaXMgdGhlIHByaW1hcnkgcG9pbnQgb2YgY29udGFjdCBmb3IgcXVlc3Rpb25zIG9yIGlzc3VlcyB3aXRoIHRoZSBvcGVyYXRpb24gZGVmaW5pdGlvbi4gVGhpcyBpdGVtIFNIT1VMRCBiZSBwb3B1bGF0ZWQgdW5sZXNzIHRoZSBpbmZvcm1hdGlvbiBpcyBhdmFpbGFibGUgZnJvbSBjb250ZXh0LlxyXG4gICAqL1xyXG4gIHB1Ymxpc2hlcj86IHN0cmluZ3x1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IE9wZXJhdGlvbkRlZmluaXRpb24ucHVibGlzaGVyXHJcbiAgICovXHJcbiAgX3B1Ymxpc2hlcj86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBNYXkgYmUgYSB3ZWIgc2l0ZSwgYW4gZW1haWwgYWRkcmVzcywgYSB0ZWxlcGhvbmUgbnVtYmVyLCBldGMuXHJcbiAgICovXHJcbiAgY29udGFjdD86IChmaGlyLkNvbnRhY3REZXRhaWx8bnVsbClbXXx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogVGhpcyBkZXNjcmlwdGlvbiBjYW4gYmUgdXNlZCB0byBjYXB0dXJlIGRldGFpbHMgc3VjaCBhcyB3aHkgdGhlIG9wZXJhdGlvbiBkZWZpbml0aW9uIHdhcyBidWlsdCwgY29tbWVudHMgYWJvdXQgbWlzdXNlLCBpbnN0cnVjdGlvbnMgZm9yIGNsaW5pY2FsIHVzZSBhbmQgaW50ZXJwcmV0YXRpb24sIGxpdGVyYXR1cmUgcmVmZXJlbmNlcywgZXhhbXBsZXMgZnJvbSB0aGUgcGFwZXIgd29ybGQsIGV0Yy4gSXQgaXMgbm90IGEgcmVuZGVyaW5nIG9mIHRoZSBvcGVyYXRpb24gZGVmaW5pdGlvbiBhcyBjb252ZXllZCBpbiB0aGUgJ3RleHQnIGZpZWxkIG9mIHRoZSByZXNvdXJjZSBpdHNlbGYuIFRoaXMgaXRlbSBTSE9VTEQgYmUgcG9wdWxhdGVkIHVubGVzcyB0aGUgaW5mb3JtYXRpb24gaXMgYXZhaWxhYmxlIGZyb20gY29udGV4dCAoZS5nLiB0aGUgbGFuZ3VhZ2Ugb2YgdGhlIG9wZXJhdGlvbiBkZWZpbml0aW9uIGlzIHByZXN1bWVkIHRvIGJlIHRoZSBwcmVkb21pbmFudCBsYW5ndWFnZSBpbiB0aGUgcGxhY2UgdGhlIG9wZXJhdGlvbiBkZWZpbml0aW9uIHdhcyBjcmVhdGVkKS5cclxuICAgKi9cclxuICBkZXNjcmlwdGlvbj86IHN0cmluZ3x1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IE9wZXJhdGlvbkRlZmluaXRpb24uZGVzY3JpcHRpb25cclxuICAgKi9cclxuICBfZGVzY3JpcHRpb24/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbiAgLyoqXHJcbiAgICogV2hlbiBtdWx0aXBsZSB1c2VDb250ZXh0cyBhcmUgc3BlY2lmaWVkLCB0aGVyZSBpcyBubyBleHBlY3RhdGlvbiB0aGF0IGFsbCBvciBhbnkgb2YgdGhlIGNvbnRleHRzIGFwcGx5LlxyXG4gICAqL1xyXG4gIHVzZUNvbnRleHQ/OiAoZmhpci5Vc2FnZUNvbnRleHR8bnVsbClbXXx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogSXQgbWF5IGJlIHBvc3NpYmxlIGZvciB0aGUgb3BlcmF0aW9uIGRlZmluaXRpb24gdG8gYmUgdXNlZCBpbiBqdXJpc2RpY3Rpb25zIG90aGVyIHRoYW4gdGhvc2UgZm9yIHdoaWNoIGl0IHdhcyBvcmlnaW5hbGx5IGRlc2lnbmVkIG9yIGludGVuZGVkLlxyXG4gICAqL1xyXG4gIGp1cmlzZGljdGlvbj86IChmaGlyLkNvZGVhYmxlQ29uY2VwdHxudWxsKVtdfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBUaGlzIGVsZW1lbnQgZG9lcyBub3QgZGVzY3JpYmUgdGhlIHVzYWdlIG9mIHRoZSBvcGVyYXRpb24gZGVmaW5pdGlvbi4gSW5zdGVhZCwgaXQgcHJvdmlkZXMgdHJhY2VhYmlsaXR5IG9mICcnd2h5JycgdGhlIHJlc291cmNlIGlzIGVpdGhlciBuZWVkZWQgb3IgJyd3aHknJyBpdCBpcyBkZWZpbmVkIGFzIGl0IGlzLiAgVGhpcyBtYXkgYmUgdXNlZCB0byBwb2ludCB0byBzb3VyY2UgbWF0ZXJpYWxzIG9yIHNwZWNpZmljYXRpb25zIHRoYXQgZHJvdmUgdGhlIHN0cnVjdHVyZSBvZiB0aGlzIG9wZXJhdGlvbiBkZWZpbml0aW9uLlxyXG4gICAqL1xyXG4gIHB1cnBvc2U/OiBzdHJpbmd8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBPcGVyYXRpb25EZWZpbml0aW9uLnB1cnBvc2VcclxuICAgKi9cclxuICBfcHVycG9zZT86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBXaGF0IGh0dHAgbWV0aG9kcyBjYW4gYmUgdXNlZCBmb3IgdGhlIG9wZXJhdGlvbiBkZXBlbmRzIG9uIHRoZSAuYWZmZWN0c1N0YXRlIHZhbHVlIGFuZCB3aGV0aGVyIHRoZSBpbnB1dCBwYXJhbWV0ZXJzIGFyZSBwcmltaXRpdmUgb3IgY29tcGxleDpcclxuICAgKiAxLiBTZXJ2ZXJzIFNIQUxMIHN1cHBvcnQgUE9TVCBtZXRob2QgZm9yIGFsbCBvcGVyYXRpb25zLlxyXG4gICAqIDIuIFNlcnZlcnMgU0hBTEwgc3VwcG9ydCBHRVQgbWV0aG9kIGlmIGFsbCB0aGUgcGFyYW1ldGVycyBmb3IgdGhlIG9wZXJhdGlvbiBhcmUgcHJpbWl0aXZlIG9yIHRoZXJlIGFyZSBubyBwYXJhbWV0ZXJzIGFuZCB0aGUgb3BlcmF0aW9uIGhhcyBhZmZlY3RzU3RhdGUgPSBmYWxzZS5cclxuICAgKi9cclxuICBhZmZlY3RzU3RhdGU/OiBib29sZWFufHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogT3BlcmF0aW9uRGVmaW5pdGlvbi5hZmZlY3RzU3RhdGVcclxuICAgKi9cclxuICBfYWZmZWN0c1N0YXRlPzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIFRoZSBuYW1lIHVzZWQgdG8gaW52b2tlIHRoZSBvcGVyYXRpb24uXHJcbiAgICovXHJcbiAgY29kZTogc3RyaW5nfG51bGw7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IE9wZXJhdGlvbkRlZmluaXRpb24uY29kZVxyXG4gICAqL1xyXG4gIF9jb2RlPzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIEFkZGl0aW9uYWwgaW5mb3JtYXRpb24gYWJvdXQgaG93IHRvIHVzZSB0aGlzIG9wZXJhdGlvbiBvciBuYW1lZCBxdWVyeS5cclxuICAgKi9cclxuICBjb21tZW50Pzogc3RyaW5nfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogT3BlcmF0aW9uRGVmaW5pdGlvbi5jb21tZW50XHJcbiAgICovXHJcbiAgX2NvbW1lbnQ/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbiAgLyoqXHJcbiAgICogQSBjb25zdHJhaW5lZCBwcm9maWxlIGNhbiBtYWtlIG9wdGlvbmFsIHBhcmFtZXRlcnMgcmVxdWlyZWQgb3Igbm90IHVzZWQgYW5kIGNsYXJpZnkgZG9jdW1lbnRhdGlvbi5cclxuICAgKi9cclxuICBiYXNlPzogc3RyaW5nfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogT3BlcmF0aW9uRGVmaW5pdGlvbi5iYXNlXHJcbiAgICovXHJcbiAgX2Jhc2U/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbiAgLyoqXHJcbiAgICogSWYgdGhlIHR5cGUgaXMgYW4gYWJzdHJhY3QgcmVzb3VyY2UgKFwiUmVzb3VyY2VcIiBvciBcIkRvbWFpblJlc291cmNlXCIpIHRoZW4gdGhlIG9wZXJhdGlvbiBjYW4gYmUgaW52b2tlZCBvbiBhbnkgY29uY3JldGUgc3BlY2lhbGl6YXRpb24uXHJcbiAgICovXHJcbiAgcmVzb3VyY2U/OiAoKCdBY2NvdW50J3wnQWN0aXZpdHlEZWZpbml0aW9uJ3wnQWR2ZXJzZUV2ZW50J3wnQWxsZXJneUludG9sZXJhbmNlJ3wnQXBwb2ludG1lbnQnfCdBcHBvaW50bWVudFJlc3BvbnNlJ3wnQXVkaXRFdmVudCd8J0Jhc2ljJ3wnQmluYXJ5J3wnQmlvbG9naWNhbGx5RGVyaXZlZFByb2R1Y3QnfCdCb2R5U3RydWN0dXJlJ3wnQnVuZGxlJ3wnQ2FwYWJpbGl0eVN0YXRlbWVudCd8J0NhcmVQbGFuJ3wnQ2FyZVRlYW0nfCdDYXRhbG9nRW50cnknfCdDaGFyZ2VJdGVtJ3wnQ2hhcmdlSXRlbURlZmluaXRpb24nfCdDbGFpbSd8J0NsYWltUmVzcG9uc2UnfCdDbGluaWNhbEltcHJlc3Npb24nfCdDb2RlU3lzdGVtJ3wnQ29tbXVuaWNhdGlvbid8J0NvbW11bmljYXRpb25SZXF1ZXN0J3wnQ29tcGFydG1lbnREZWZpbml0aW9uJ3wnQ29tcG9zaXRpb24nfCdDb25jZXB0TWFwJ3wnQ29uZGl0aW9uJ3wnQ29uc2VudCd8J0NvbnRyYWN0J3wnQ292ZXJhZ2UnfCdDb3ZlcmFnZUVsaWdpYmlsaXR5UmVxdWVzdCd8J0NvdmVyYWdlRWxpZ2liaWxpdHlSZXNwb25zZSd8J0RldGVjdGVkSXNzdWUnfCdEZXZpY2UnfCdEZXZpY2VEZWZpbml0aW9uJ3wnRGV2aWNlTWV0cmljJ3wnRGV2aWNlUmVxdWVzdCd8J0RldmljZVVzZVN0YXRlbWVudCd8J0RpYWdub3N0aWNSZXBvcnQnfCdEb2N1bWVudE1hbmlmZXN0J3wnRG9jdW1lbnRSZWZlcmVuY2UnfCdEb21haW5SZXNvdXJjZSd8J0VmZmVjdEV2aWRlbmNlU3ludGhlc2lzJ3wnRW5jb3VudGVyJ3wnRW5kcG9pbnQnfCdFbnJvbGxtZW50UmVxdWVzdCd8J0Vucm9sbG1lbnRSZXNwb25zZSd8J0VwaXNvZGVPZkNhcmUnfCdFdmVudERlZmluaXRpb24nfCdFdmlkZW5jZSd8J0V2aWRlbmNlVmFyaWFibGUnfCdFeGFtcGxlU2NlbmFyaW8nfCdFeHBsYW5hdGlvbk9mQmVuZWZpdCd8J0ZhbWlseU1lbWJlckhpc3RvcnknfCdGbGFnJ3wnR29hbCd8J0dyYXBoRGVmaW5pdGlvbid8J0dyb3VwJ3wnR3VpZGFuY2VSZXNwb25zZSd8J0hlYWx0aGNhcmVTZXJ2aWNlJ3wnSW1hZ2luZ1N0dWR5J3wnSW1tdW5pemF0aW9uJ3wnSW1tdW5pemF0aW9uRXZhbHVhdGlvbid8J0ltbXVuaXphdGlvblJlY29tbWVuZGF0aW9uJ3wnSW1wbGVtZW50YXRpb25HdWlkZSd8J0luc3VyYW5jZVBsYW4nfCdJbnZvaWNlJ3wnTGlicmFyeSd8J0xpbmthZ2UnfCdMaXN0J3wnTG9jYXRpb24nfCdNZWFzdXJlJ3wnTWVhc3VyZVJlcG9ydCd8J01lZGlhJ3wnTWVkaWNhdGlvbid8J01lZGljYXRpb25BZG1pbmlzdHJhdGlvbid8J01lZGljYXRpb25EaXNwZW5zZSd8J01lZGljYXRpb25Lbm93bGVkZ2UnfCdNZWRpY2F0aW9uUmVxdWVzdCd8J01lZGljYXRpb25TdGF0ZW1lbnQnfCdNZWRpY2luYWxQcm9kdWN0J3wnTWVkaWNpbmFsUHJvZHVjdEF1dGhvcml6YXRpb24nfCdNZWRpY2luYWxQcm9kdWN0Q29udHJhaW5kaWNhdGlvbid8J01lZGljaW5hbFByb2R1Y3RJbmRpY2F0aW9uJ3wnTWVkaWNpbmFsUHJvZHVjdEluZ3JlZGllbnQnfCdNZWRpY2luYWxQcm9kdWN0SW50ZXJhY3Rpb24nfCdNZWRpY2luYWxQcm9kdWN0TWFudWZhY3R1cmVkJ3wnTWVkaWNpbmFsUHJvZHVjdFBhY2thZ2VkJ3wnTWVkaWNpbmFsUHJvZHVjdFBoYXJtYWNldXRpY2FsJ3wnTWVkaWNpbmFsUHJvZHVjdFVuZGVzaXJhYmxlRWZmZWN0J3wnTWVzc2FnZURlZmluaXRpb24nfCdNZXNzYWdlSGVhZGVyJ3wnTW9sZWN1bGFyU2VxdWVuY2UnfCdOYW1pbmdTeXN0ZW0nfCdOdXRyaXRpb25PcmRlcid8J09ic2VydmF0aW9uJ3wnT2JzZXJ2YXRpb25EZWZpbml0aW9uJ3wnT3BlcmF0aW9uRGVmaW5pdGlvbid8J09wZXJhdGlvbk91dGNvbWUnfCdPcmdhbml6YXRpb24nfCdPcmdhbml6YXRpb25BZmZpbGlhdGlvbid8J1BhcmFtZXRlcnMnfCdQYXRpZW50J3wnUGF5bWVudE5vdGljZSd8J1BheW1lbnRSZWNvbmNpbGlhdGlvbid8J1BlcnNvbid8J1BsYW5EZWZpbml0aW9uJ3wnUHJhY3RpdGlvbmVyJ3wnUHJhY3RpdGlvbmVyUm9sZSd8J1Byb2NlZHVyZSd8J1Byb3ZlbmFuY2UnfCdRdWVzdGlvbm5haXJlJ3wnUXVlc3Rpb25uYWlyZVJlc3BvbnNlJ3wnUmVsYXRlZFBlcnNvbid8J1JlcXVlc3RHcm91cCd8J1Jlc2VhcmNoRGVmaW5pdGlvbid8J1Jlc2VhcmNoRWxlbWVudERlZmluaXRpb24nfCdSZXNlYXJjaFN0dWR5J3wnUmVzZWFyY2hTdWJqZWN0J3wnUmVzb3VyY2UnfCdSaXNrQXNzZXNzbWVudCd8J1Jpc2tFdmlkZW5jZVN5bnRoZXNpcyd8J1NjaGVkdWxlJ3wnU2VhcmNoUGFyYW1ldGVyJ3wnU2VydmljZVJlcXVlc3QnfCdTbG90J3wnU3BlY2ltZW4nfCdTcGVjaW1lbkRlZmluaXRpb24nfCdTdHJ1Y3R1cmVEZWZpbml0aW9uJ3wnU3RydWN0dXJlTWFwJ3wnU3Vic2NyaXB0aW9uJ3wnU3Vic3RhbmNlJ3wnU3Vic3RhbmNlTnVjbGVpY0FjaWQnfCdTdWJzdGFuY2VQb2x5bWVyJ3wnU3Vic3RhbmNlUHJvdGVpbid8J1N1YnN0YW5jZVJlZmVyZW5jZUluZm9ybWF0aW9uJ3wnU3Vic3RhbmNlU291cmNlTWF0ZXJpYWwnfCdTdWJzdGFuY2VTcGVjaWZpY2F0aW9uJ3wnU3VwcGx5RGVsaXZlcnknfCdTdXBwbHlSZXF1ZXN0J3wnVGFzayd8J1Rlcm1pbm9sb2d5Q2FwYWJpbGl0aWVzJ3wnVGVzdFJlcG9ydCd8J1Rlc3RTY3JpcHQnfCdWYWx1ZVNldCd8J1ZlcmlmaWNhdGlvblJlc3VsdCd8J1Zpc2lvblByZXNjcmlwdGlvbicpfG51bGwpW118dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBPcGVyYXRpb25EZWZpbml0aW9uLnJlc291cmNlXHJcbiAgICovXHJcbiAgX3Jlc291cmNlPzooZmhpci5GaGlyRWxlbWVudHxudWxsKVtdO1xyXG4gIC8qKlxyXG4gICAqIEluZGljYXRlcyB3aGV0aGVyIHRoaXMgb3BlcmF0aW9uIG9yIG5hbWVkIHF1ZXJ5IGNhbiBiZSBpbnZva2VkIGF0IHRoZSBzeXN0ZW0gbGV2ZWwgKGUuZy4gd2l0aG91dCBuZWVkaW5nIHRvIGNob29zZSBhIHJlc291cmNlIHR5cGUgZm9yIHRoZSBjb250ZXh0KS5cclxuICAgKi9cclxuICBzeXN0ZW06IGJvb2xlYW58bnVsbDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogT3BlcmF0aW9uRGVmaW5pdGlvbi5zeXN0ZW1cclxuICAgKi9cclxuICBfc3lzdGVtPzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIEluZGljYXRlcyB3aGV0aGVyIHRoaXMgb3BlcmF0aW9uIG9yIG5hbWVkIHF1ZXJ5IGNhbiBiZSBpbnZva2VkIGF0IHRoZSByZXNvdXJjZSB0eXBlIGxldmVsIGZvciBhbnkgZ2l2ZW4gcmVzb3VyY2UgdHlwZSBsZXZlbCAoZS5nLiB3aXRob3V0IG5lZWRpbmcgdG8gY2hvb3NlIGEgc3BlY2lmaWMgcmVzb3VyY2UgaWQgZm9yIHRoZSBjb250ZXh0KS5cclxuICAgKi9cclxuICB0eXBlOiBib29sZWFufG51bGw7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IE9wZXJhdGlvbkRlZmluaXRpb24udHlwZVxyXG4gICAqL1xyXG4gIF90eXBlPzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIEluZGljYXRlcyB3aGV0aGVyIHRoaXMgb3BlcmF0aW9uIGNhbiBiZSBpbnZva2VkIG9uIGEgcGFydGljdWxhciBpbnN0YW5jZSBvZiBvbmUgb2YgdGhlIGdpdmVuIHR5cGVzLlxyXG4gICAqL1xyXG4gIGluc3RhbmNlOiBib29sZWFufG51bGw7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IE9wZXJhdGlvbkRlZmluaXRpb24uaW5zdGFuY2VcclxuICAgKi9cclxuICBfaW5zdGFuY2U/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbiAgLyoqXHJcbiAgICogSWYgcHJlc2VudCB0aGUgcHJvZmlsZSBzaGFsbCBub3QgY29uZmxpY3Qgd2l0aCB3aGF0IGlzIHNwZWNpZmllZCBpbiB0aGUgcGFyYW1ldGVycyBpbiB0aGUgb3BlcmF0aW9uIGRlZmluaXRpb24gKG1heC9taW4gZXRjLiksIHRob3VnaCBpdCBtYXkgcHJvdmlkZSBhZGRpdGlvbmFsIGNvbnN0cmFpbnRzLiBUaGUgY29uc3RyYWludHMgZXhwcmVzc2VkIGluIHRoZSBwcm9maWxlIGFwcGx5IHdoZXRoZXIgdGhlIG9wZXJhdGlvbiBpcyBpbnZva2VkIGJ5IGEgUE9TVCB3aWggcGFyYW1ldGVycyBvciBub3QuXHJcbiAgICovXHJcbiAgaW5wdXRQcm9maWxlPzogc3RyaW5nfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogT3BlcmF0aW9uRGVmaW5pdGlvbi5pbnB1dFByb2ZpbGVcclxuICAgKi9cclxuICBfaW5wdXRQcm9maWxlPzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIElmIHByZXNlbnQgdGhlIHByb2ZpbGUgc2hhbGwgbm90IGNvbmZsaWN0IHdpdGggd2hhdCBpcyBzcGVjaWZpZWQgaW4gdGhlIHBhcmFtZXRlcnMgaW4gdGhlIG9wZXJhdGlvbiBkZWZpbml0aW9uIChtYXgvbWluIGV0Yy4pLCB0aG91Z2ggaXQgbWF5IHByb3ZpZGUgYWRkaXRpb25hbCBjb25zdHJhaW50cy4gVGhlIGNvbnN0cmFpbnRzIGV4cHJlc3NlZCBpbiB0aGUgcHJvZmlsZSBhcHBseSB3aGV0aGVyIHRoZSBvcGVyYXRpb24gaXMgaW52b2tlZCBieSBhIFBPU1Qgd2loIHBhcmFtZXRlcnMgb3Igbm90LlxyXG4gICAqL1xyXG4gIG91dHB1dFByb2ZpbGU/OiBzdHJpbmd8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBPcGVyYXRpb25EZWZpbml0aW9uLm91dHB1dFByb2ZpbGVcclxuICAgKi9cclxuICBfb3V0cHV0UHJvZmlsZT86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBRdWVyeSBEZWZpbml0aW9ucyBvbmx5IGhhdmUgb25lIG91dHB1dCBwYXJhbWV0ZXIsIG5hbWVkIFwicmVzdWx0XCIuIFRoaXMgbWlnaHQgbm90IGJlIGRlc2NyaWJlZCwgYnV0IGNhbiBiZSB0byBhbGxvdyBhIHByb2ZpbGUgdG8gYmUgZGVmaW5lZC5cclxuICAgKi9cclxuICBwYXJhbWV0ZXI/OiAoZmhpci5PcGVyYXRpb25EZWZpbml0aW9uUGFyYW1ldGVyfG51bGwpW118dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIFRoZSBjb21iaW5hdGlvbnMgYXJlIHN1Z2dlc3Rpb25zIGFzIHRvIHdoaWNoIHNldHMgb2YgcGFyYW1ldGVycyB0byB1c2UgdG9nZXRoZXIsIGJ1dCB0aGUgY29tYmluYXRpb25zIGFyZSBub3QgaW50ZW5kZWQgdG8gYmUgYXV0aG9yaXRhdGl2ZS5cclxuICAgKi9cclxuICBvdmVybG9hZD86IChmaGlyLk9wZXJhdGlvbkRlZmluaXRpb25PdmVybG9hZHxudWxsKVtdfHVuZGVmaW5lZDtcclxufVxyXG4iXX0=