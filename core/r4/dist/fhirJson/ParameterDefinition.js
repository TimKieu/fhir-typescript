// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ComplexType: ParameterDefinition
export {};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUGFyYW1ldGVyRGVmaW5pdGlvbi5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJKc29uL1BhcmFtZXRlckRlZmluaXRpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLCtDQUErQztBQUMvQyxrQ0FBa0M7QUFDbEMsd0NBQXdDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0LmNvcmUgdmVyc2lvbjogNC4wLjFcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIENvbXBsZXhUeXBlOiBQYXJhbWV0ZXJEZWZpbml0aW9uXHJcblxyXG5pbXBvcnQgKiBhcyBmaGlyIGZyb20gJy4uL2ZoaXJKc29uLmpzJztcclxuXHJcblxyXG4vKipcclxuICogVGhlIHBhcmFtZXRlcnMgdG8gdGhlIG1vZHVsZS4gVGhpcyBjb2xsZWN0aW9uIHNwZWNpZmllcyBib3RoIHRoZSBpbnB1dCBhbmQgb3V0cHV0IHBhcmFtZXRlcnMuIElucHV0IHBhcmFtZXRlcnMgYXJlIHByb3ZpZGVkIGJ5IHRoZSBjYWxsZXIgYXMgcGFydCBvZiB0aGUgJGV2YWx1YXRlIG9wZXJhdGlvbi4gT3V0cHV0IHBhcmFtZXRlcnMgYXJlIGluY2x1ZGVkIGluIHRoZSBHdWlkYW5jZVJlc3BvbnNlLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBQYXJhbWV0ZXJEZWZpbml0aW9uIGV4dGVuZHMgZmhpci5GaGlyRWxlbWVudCB7IFxyXG4gIC8qKlxyXG4gICAqIFRoZSBuYW1lIG9mIHRoZSBwYXJhbWV0ZXIgdXNlZCB0byBhbGxvdyBhY2Nlc3MgdG8gdGhlIHZhbHVlIG9mIHRoZSBwYXJhbWV0ZXIgaW4gZXZhbHVhdGlvbiBjb250ZXh0cy5cclxuICAgKi9cclxuICBuYW1lPzogc3RyaW5nfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogUGFyYW1ldGVyRGVmaW5pdGlvbi5uYW1lXHJcbiAgICovXHJcbiAgX25hbWU/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbiAgLyoqXHJcbiAgICogV2hldGhlciB0aGUgcGFyYW1ldGVyIGlzIGlucHV0IG9yIG91dHB1dCBmb3IgdGhlIG1vZHVsZS5cclxuICAgKi9cclxuICB1c2U6ICdpbid8J291dCd8bnVsbDtcclxuICAvKipcclxuICAgKiBUaGUgbWluaW11bSBudW1iZXIgb2YgdGltZXMgdGhpcyBwYXJhbWV0ZXIgU0hBTEwgYXBwZWFyIGluIHRoZSByZXF1ZXN0IG9yIHJlc3BvbnNlLlxyXG4gICAqL1xyXG4gIG1pbj86IG51bWJlcnx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IFBhcmFtZXRlckRlZmluaXRpb24ubWluXHJcbiAgICovXHJcbiAgX21pbj86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBUaGUgbWF4aW11bSBudW1iZXIgb2YgdGltZXMgdGhpcyBlbGVtZW50IGlzIHBlcm1pdHRlZCB0byBhcHBlYXIgaW4gdGhlIHJlcXVlc3Qgb3IgcmVzcG9uc2UuXHJcbiAgICovXHJcbiAgbWF4Pzogc3RyaW5nfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogUGFyYW1ldGVyRGVmaW5pdGlvbi5tYXhcclxuICAgKi9cclxuICBfbWF4PzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIEEgYnJpZWYgZGlzY3Vzc2lvbiBvZiB3aGF0IHRoZSBwYXJhbWV0ZXIgaXMgZm9yIGFuZCBob3cgaXQgaXMgdXNlZCBieSB0aGUgbW9kdWxlLlxyXG4gICAqL1xyXG4gIGRvY3VtZW50YXRpb24/OiBzdHJpbmd8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBQYXJhbWV0ZXJEZWZpbml0aW9uLmRvY3VtZW50YXRpb25cclxuICAgKi9cclxuICBfZG9jdW1lbnRhdGlvbj86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBUaGUgdHlwZSBvZiB0aGUgcGFyYW1ldGVyLlxyXG4gICAqL1xyXG4gIHR5cGU6ICdBY2NvdW50J3wnQWN0aXZpdHlEZWZpbml0aW9uJ3wnQWRkcmVzcyd8J0FkdmVyc2VFdmVudCd8J0FnZSd8J0FsbGVyZ3lJbnRvbGVyYW5jZSd8J0Fubm90YXRpb24nfCdBbnknfCdBcHBvaW50bWVudCd8J0FwcG9pbnRtZW50UmVzcG9uc2UnfCdBdHRhY2htZW50J3wnQXVkaXRFdmVudCd8J0JhY2tib25lRWxlbWVudCd8J2Jhc2U2NEJpbmFyeSd8J0Jhc2ljJ3wnQmluYXJ5J3wnQmlvbG9naWNhbGx5RGVyaXZlZFByb2R1Y3QnfCdCb2R5U3RydWN0dXJlJ3wnYm9vbGVhbid8J0J1bmRsZSd8J2Nhbm9uaWNhbCd8J0NhcGFiaWxpdHlTdGF0ZW1lbnQnfCdDYXJlUGxhbid8J0NhcmVUZWFtJ3wnQ2F0YWxvZ0VudHJ5J3wnQ2hhcmdlSXRlbSd8J0NoYXJnZUl0ZW1EZWZpbml0aW9uJ3wnQ2xhaW0nfCdDbGFpbVJlc3BvbnNlJ3wnQ2xpbmljYWxJbXByZXNzaW9uJ3wnY29kZSd8J0NvZGVhYmxlQ29uY2VwdCd8J0NvZGVTeXN0ZW0nfCdDb2RpbmcnfCdDb21tdW5pY2F0aW9uJ3wnQ29tbXVuaWNhdGlvblJlcXVlc3QnfCdDb21wYXJ0bWVudERlZmluaXRpb24nfCdDb21wb3NpdGlvbid8J0NvbmNlcHRNYXAnfCdDb25kaXRpb24nfCdDb25zZW50J3wnQ29udGFjdERldGFpbCd8J0NvbnRhY3RQb2ludCd8J0NvbnRyYWN0J3wnQ29udHJpYnV0b3InfCdDb3VudCd8J0NvdmVyYWdlJ3wnQ292ZXJhZ2VFbGlnaWJpbGl0eVJlcXVlc3QnfCdDb3ZlcmFnZUVsaWdpYmlsaXR5UmVzcG9uc2UnfCdEYXRhUmVxdWlyZW1lbnQnfCdkYXRlJ3wnZGF0ZVRpbWUnfCdkZWNpbWFsJ3wnRGV0ZWN0ZWRJc3N1ZSd8J0RldmljZSd8J0RldmljZURlZmluaXRpb24nfCdEZXZpY2VNZXRyaWMnfCdEZXZpY2VSZXF1ZXN0J3wnRGV2aWNlVXNlU3RhdGVtZW50J3wnRGlhZ25vc3RpY1JlcG9ydCd8J0Rpc3RhbmNlJ3wnRG9jdW1lbnRNYW5pZmVzdCd8J0RvY3VtZW50UmVmZXJlbmNlJ3wnRG9tYWluUmVzb3VyY2UnfCdEb3NhZ2UnfCdEdXJhdGlvbid8J0VmZmVjdEV2aWRlbmNlU3ludGhlc2lzJ3wnRWxlbWVudCd8J0VsZW1lbnREZWZpbml0aW9uJ3wnRW5jb3VudGVyJ3wnRW5kcG9pbnQnfCdFbnJvbGxtZW50UmVxdWVzdCd8J0Vucm9sbG1lbnRSZXNwb25zZSd8J0VwaXNvZGVPZkNhcmUnfCdFdmVudERlZmluaXRpb24nfCdFdmlkZW5jZSd8J0V2aWRlbmNlVmFyaWFibGUnfCdFeGFtcGxlU2NlbmFyaW8nfCdFeHBsYW5hdGlvbk9mQmVuZWZpdCd8J0V4cHJlc3Npb24nfCdFeHRlbnNpb24nfCdGYW1pbHlNZW1iZXJIaXN0b3J5J3wnRmxhZyd8J0dvYWwnfCdHcmFwaERlZmluaXRpb24nfCdHcm91cCd8J0d1aWRhbmNlUmVzcG9uc2UnfCdIZWFsdGhjYXJlU2VydmljZSd8J0h1bWFuTmFtZSd8J2lkJ3wnSWRlbnRpZmllcid8J0ltYWdpbmdTdHVkeSd8J0ltbXVuaXphdGlvbid8J0ltbXVuaXphdGlvbkV2YWx1YXRpb24nfCdJbW11bml6YXRpb25SZWNvbW1lbmRhdGlvbid8J0ltcGxlbWVudGF0aW9uR3VpZGUnfCdpbnN0YW50J3wnSW5zdXJhbmNlUGxhbid8J2ludGVnZXInfCdJbnZvaWNlJ3wnTGlicmFyeSd8J0xpbmthZ2UnfCdMaXN0J3wnTG9jYXRpb24nfCdtYXJrZG93bid8J01hcmtldGluZ1N0YXR1cyd8J01lYXN1cmUnfCdNZWFzdXJlUmVwb3J0J3wnTWVkaWEnfCdNZWRpY2F0aW9uJ3wnTWVkaWNhdGlvbkFkbWluaXN0cmF0aW9uJ3wnTWVkaWNhdGlvbkRpc3BlbnNlJ3wnTWVkaWNhdGlvbktub3dsZWRnZSd8J01lZGljYXRpb25SZXF1ZXN0J3wnTWVkaWNhdGlvblN0YXRlbWVudCd8J01lZGljaW5hbFByb2R1Y3QnfCdNZWRpY2luYWxQcm9kdWN0QXV0aG9yaXphdGlvbid8J01lZGljaW5hbFByb2R1Y3RDb250cmFpbmRpY2F0aW9uJ3wnTWVkaWNpbmFsUHJvZHVjdEluZGljYXRpb24nfCdNZWRpY2luYWxQcm9kdWN0SW5ncmVkaWVudCd8J01lZGljaW5hbFByb2R1Y3RJbnRlcmFjdGlvbid8J01lZGljaW5hbFByb2R1Y3RNYW51ZmFjdHVyZWQnfCdNZWRpY2luYWxQcm9kdWN0UGFja2FnZWQnfCdNZWRpY2luYWxQcm9kdWN0UGhhcm1hY2V1dGljYWwnfCdNZWRpY2luYWxQcm9kdWN0VW5kZXNpcmFibGVFZmZlY3QnfCdNZXNzYWdlRGVmaW5pdGlvbid8J01lc3NhZ2VIZWFkZXInfCdNZXRhJ3wnTW9sZWN1bGFyU2VxdWVuY2UnfCdNb25leSd8J01vbmV5UXVhbnRpdHknfCdOYW1pbmdTeXN0ZW0nfCdOYXJyYXRpdmUnfCdOdXRyaXRpb25PcmRlcid8J09ic2VydmF0aW9uJ3wnT2JzZXJ2YXRpb25EZWZpbml0aW9uJ3wnb2lkJ3wnT3BlcmF0aW9uRGVmaW5pdGlvbid8J09wZXJhdGlvbk91dGNvbWUnfCdPcmdhbml6YXRpb24nfCdPcmdhbml6YXRpb25BZmZpbGlhdGlvbid8J1BhcmFtZXRlckRlZmluaXRpb24nfCdQYXJhbWV0ZXJzJ3wnUGF0aWVudCd8J1BheW1lbnROb3RpY2UnfCdQYXltZW50UmVjb25jaWxpYXRpb24nfCdQZXJpb2QnfCdQZXJzb24nfCdQbGFuRGVmaW5pdGlvbid8J1BvcHVsYXRpb24nfCdwb3NpdGl2ZUludCd8J1ByYWN0aXRpb25lcid8J1ByYWN0aXRpb25lclJvbGUnfCdQcm9jZWR1cmUnfCdQcm9kQ2hhcmFjdGVyaXN0aWMnfCdQcm9kdWN0U2hlbGZMaWZlJ3wnUHJvdmVuYW5jZSd8J1F1YW50aXR5J3wnUXVlc3Rpb25uYWlyZSd8J1F1ZXN0aW9ubmFpcmVSZXNwb25zZSd8J1JhbmdlJ3wnUmF0aW8nfCdSZWZlcmVuY2UnfCdSZWxhdGVkQXJ0aWZhY3QnfCdSZWxhdGVkUGVyc29uJ3wnUmVxdWVzdEdyb3VwJ3wnUmVzZWFyY2hEZWZpbml0aW9uJ3wnUmVzZWFyY2hFbGVtZW50RGVmaW5pdGlvbid8J1Jlc2VhcmNoU3R1ZHknfCdSZXNlYXJjaFN1YmplY3QnfCdSZXNvdXJjZSd8J1Jpc2tBc3Nlc3NtZW50J3wnUmlza0V2aWRlbmNlU3ludGhlc2lzJ3wnU2FtcGxlZERhdGEnfCdTY2hlZHVsZSd8J1NlYXJjaFBhcmFtZXRlcid8J1NlcnZpY2VSZXF1ZXN0J3wnU2lnbmF0dXJlJ3wnU2ltcGxlUXVhbnRpdHknfCdTbG90J3wnU3BlY2ltZW4nfCdTcGVjaW1lbkRlZmluaXRpb24nfCdzdHJpbmcnfCdTdHJ1Y3R1cmVEZWZpbml0aW9uJ3wnU3RydWN0dXJlTWFwJ3wnU3Vic2NyaXB0aW9uJ3wnU3Vic3RhbmNlJ3wnU3Vic3RhbmNlQW1vdW50J3wnU3Vic3RhbmNlTnVjbGVpY0FjaWQnfCdTdWJzdGFuY2VQb2x5bWVyJ3wnU3Vic3RhbmNlUHJvdGVpbid8J1N1YnN0YW5jZVJlZmVyZW5jZUluZm9ybWF0aW9uJ3wnU3Vic3RhbmNlU291cmNlTWF0ZXJpYWwnfCdTdWJzdGFuY2VTcGVjaWZpY2F0aW9uJ3wnU3VwcGx5RGVsaXZlcnknfCdTdXBwbHlSZXF1ZXN0J3wnVGFzayd8J1Rlcm1pbm9sb2d5Q2FwYWJpbGl0aWVzJ3wnVGVzdFJlcG9ydCd8J1Rlc3RTY3JpcHQnfCd0aW1lJ3wnVGltaW5nJ3wnVHJpZ2dlckRlZmluaXRpb24nfCdUeXBlJ3wndW5zaWduZWRJbnQnfCd1cmknfCd1cmwnfCdVc2FnZUNvbnRleHQnfCd1dWlkJ3wnVmFsdWVTZXQnfCdWZXJpZmljYXRpb25SZXN1bHQnfCdWaXNpb25QcmVzY3JpcHRpb24nfCd4aHRtbCd8bnVsbDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogUGFyYW1ldGVyRGVmaW5pdGlvbi50eXBlXHJcbiAgICovXHJcbiAgX3R5cGU/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbiAgLyoqXHJcbiAgICogSWYgc3BlY2lmaWVkLCB0aGlzIGluZGljYXRlcyBhIHByb2ZpbGUgdGhhdCB0aGUgaW5wdXQgZGF0YSBtdXN0IGNvbmZvcm0gdG8sIG9yIHRoYXQgdGhlIG91dHB1dCBkYXRhIHdpbGwgY29uZm9ybSB0by5cclxuICAgKi9cclxuICBwcm9maWxlPzogc3RyaW5nfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogUGFyYW1ldGVyRGVmaW5pdGlvbi5wcm9maWxlXHJcbiAgICovXHJcbiAgX3Byb2ZpbGU/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbn1cclxuIl19