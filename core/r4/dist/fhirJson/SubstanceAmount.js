// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ComplexType: SubstanceAmount
export {};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3Vic3RhbmNlQW1vdW50LmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpckpzb24vU3Vic3RhbmNlQW1vdW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQiwrQ0FBK0M7QUFDL0Msa0NBQWtDO0FBQ2xDLG9DQUFvQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNC5jb3JlIHZlcnNpb246IDQuMC4xXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBDb21wbGV4VHlwZTogU3Vic3RhbmNlQW1vdW50XHJcblxyXG5pbXBvcnQgKiBhcyBmaGlyIGZyb20gJy4uL2ZoaXJKc29uLmpzJztcclxuXHJcblxyXG4vKipcclxuICogUmVmZXJlbmNlIHJhbmdlIG9mIHBvc3NpYmxlIG9yIGV4cGVjdGVkIHZhbHVlcy5cclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgU3Vic3RhbmNlQW1vdW50UmVmZXJlbmNlUmFuZ2UgZXh0ZW5kcyBmaGlyLkZoaXJFbGVtZW50IHsgXHJcbiAgLyoqXHJcbiAgICogTG93ZXIgbGltaXQgcG9zc2libGUgb3IgZXhwZWN0ZWQuXHJcbiAgICovXHJcbiAgbG93TGltaXQ/OiBmaGlyLlF1YW50aXR5fHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBVcHBlciBsaW1pdCBwb3NzaWJsZSBvciBleHBlY3RlZC5cclxuICAgKi9cclxuICBoaWdoTGltaXQ/OiBmaGlyLlF1YW50aXR5fHVuZGVmaW5lZDtcclxufVxyXG5cclxuLyoqXHJcbiAqIENoZW1pY2FsIHN1YnN0YW5jZXMgYXJlIGEgc2luZ2xlIHN1YnN0YW5jZSB0eXBlIHdob3NlIHByaW1hcnkgZGVmaW5pbmcgZWxlbWVudCBpcyB0aGUgbW9sZWN1bGFyIHN0cnVjdHVyZS4gQ2hlbWljYWwgc3Vic3RhbmNlcyBzaGFsbCBiZSBkZWZpbmVkIG9uIHRoZSBiYXNpcyBvZiB0aGVpciBjb21wbGV0ZSBjb3ZhbGVudCBtb2xlY3VsYXIgc3RydWN0dXJlOyB0aGUgcHJlc2VuY2Ugb2YgYSBzYWx0IChjb3VudGVyLWlvbikgYW5kL29yIHNvbHZhdGVzICh3YXRlciwgYWxjb2hvbHMpIGlzIGFsc28gY2FwdHVyZWQuIFB1cml0eSwgZ3JhZGUsIHBoeXNpY2FsIGZvcm0gb3IgcGFydGljbGUgc2l6ZSBhcmUgbm90IHRha2VuIGludG8gYWNjb3VudCBpbiB0aGUgZGVmaW5pdGlvbiBvZiBhIGNoZW1pY2FsIHN1YnN0YW5jZSBvciBpbiB0aGUgYXNzaWdubWVudCBvZiBhIFN1YnN0YW5jZSBJRC5cclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgU3Vic3RhbmNlQW1vdW50IGV4dGVuZHMgZmhpci5CYWNrYm9uZUVsZW1lbnQgeyBcclxuICAvKipcclxuICAgKiBVc2VkIHRvIGNhcHR1cmUgcXVhbnRpdGF0aXZlIHZhbHVlcyBmb3IgYSB2YXJpZXR5IG9mIGVsZW1lbnRzLiBJZiBvbmx5IGxpbWl0cyBhcmUgZ2l2ZW4sIHRoZSBhcml0aG1ldGljIG1lYW4gd291bGQgYmUgdGhlIGF2ZXJhZ2UuIElmIG9ubHkgYSBzaW5nbGUgZGVmaW5pdGUgdmFsdWUgZm9yIGEgZ2l2ZW4gZWxlbWVudCBpcyBnaXZlbiwgaXQgd291bGQgYmUgY2FwdHVyZWQgaW4gdGhpcyBmaWVsZC5cclxuICAgKi9cclxuICBhbW91bnRRdWFudGl0eT86IGZoaXIuUXVhbnRpdHl8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIFVzZWQgdG8gY2FwdHVyZSBxdWFudGl0YXRpdmUgdmFsdWVzIGZvciBhIHZhcmlldHkgb2YgZWxlbWVudHMuIElmIG9ubHkgbGltaXRzIGFyZSBnaXZlbiwgdGhlIGFyaXRobWV0aWMgbWVhbiB3b3VsZCBiZSB0aGUgYXZlcmFnZS4gSWYgb25seSBhIHNpbmdsZSBkZWZpbml0ZSB2YWx1ZSBmb3IgYSBnaXZlbiBlbGVtZW50IGlzIGdpdmVuLCBpdCB3b3VsZCBiZSBjYXB0dXJlZCBpbiB0aGlzIGZpZWxkLlxyXG4gICAqL1xyXG4gIGFtb3VudFJhbmdlPzogZmhpci5SYW5nZXx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogVXNlZCB0byBjYXB0dXJlIHF1YW50aXRhdGl2ZSB2YWx1ZXMgZm9yIGEgdmFyaWV0eSBvZiBlbGVtZW50cy4gSWYgb25seSBsaW1pdHMgYXJlIGdpdmVuLCB0aGUgYXJpdGhtZXRpYyBtZWFuIHdvdWxkIGJlIHRoZSBhdmVyYWdlLiBJZiBvbmx5IGEgc2luZ2xlIGRlZmluaXRlIHZhbHVlIGZvciBhIGdpdmVuIGVsZW1lbnQgaXMgZ2l2ZW4sIGl0IHdvdWxkIGJlIGNhcHR1cmVkIGluIHRoaXMgZmllbGQuXHJcbiAgICovXHJcbiAgYW1vdW50U3RyaW5nPzogc3RyaW5nfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogU3Vic3RhbmNlQW1vdW50LmFtb3VudFt4XVxyXG4gICAqL1xyXG4gIF9hbW91bnRTdHJpbmc/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbiAgLyoqXHJcbiAgICogTW9zdCBlbGVtZW50cyB0aGF0IHJlcXVpcmUgYSBxdWFudGl0YXRpdmUgdmFsdWUgd2lsbCBhbHNvIGhhdmUgYSBmaWVsZCBjYWxsZWQgYW1vdW50IHR5cGUuIEFtb3VudCB0eXBlIHNob3VsZCBhbHdheXMgYmUgc3BlY2lmaWVkIGJlY2F1c2UgdGhlIGFjdHVhbCB2YWx1ZSBvZiB0aGUgYW1vdW50IGlzIG9mdGVuIGRlcGVuZGVudCBvbiBpdC4gRVhBTVBMRTogSW4gY2FwdHVyaW5nIHRoZSBhY3R1YWwgcmVsYXRpdmUgYW1vdW50cyBvZiBzdWJzdGFuY2VzIG9yIG1vbGVjdWxhciBmcmFnbWVudHMgaXQgaXMgZXNzZW50aWFsIHRvIGluZGljYXRlIHdoZXRoZXIgdGhlIGFtb3VudCByZWZlcnMgdG8gYSBtb2xlIHJhdGlvIG9yIHdlaWdodCByYXRpby4gRm9yIGFueSBnaXZlbiBlbGVtZW50IGFuIGVmZm9ydCBzaG91bGQgYmUgbWFkZSB0byB1c2Ugc2FtZSB0aGUgYW1vdW50IHR5cGUgZm9yIGFsbCByZWxhdGVkIGRlZmluaXRpb25hbCBlbGVtZW50cy5cclxuICAgKi9cclxuICBhbW91bnRUeXBlPzogZmhpci5Db2RlYWJsZUNvbmNlcHR8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEEgdGV4dHVhbCBjb21tZW50IG9uIGEgbnVtZXJpYyB2YWx1ZS5cclxuICAgKi9cclxuICBhbW91bnRUZXh0Pzogc3RyaW5nfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogU3Vic3RhbmNlQW1vdW50LmFtb3VudFRleHRcclxuICAgKi9cclxuICBfYW1vdW50VGV4dD86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBSZWZlcmVuY2UgcmFuZ2Ugb2YgcG9zc2libGUgb3IgZXhwZWN0ZWQgdmFsdWVzLlxyXG4gICAqL1xyXG4gIHJlZmVyZW5jZVJhbmdlPzogZmhpci5TdWJzdGFuY2VBbW91bnRSZWZlcmVuY2VSYW5nZXx1bmRlZmluZWQ7XHJcbn1cclxuIl19