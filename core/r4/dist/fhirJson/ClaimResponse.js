// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR Resource: ClaimResponse
export {};
//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"ClaimResponse.js","sourceRoot":"./src/","sources":["fhirJson/ClaimResponse.ts"],"names":[],"mappings":"AAAA,oBAAoB;AACpB,+CAA+C;AAC/C,kCAAkC;AAClC,+BAA+B","sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4.core version: 4.0.1\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR Resource: ClaimResponse\r\n\r\nimport * as fhir from '../fhirJson.js';\r\n\r\n\r\n/**\r\n * If this item is a group then the values here are a summary of the adjudication of the detail items. If this item is a simple product or service then this is the result of the adjudication of this item.\r\n */\r\nexport interface ClaimResponseItemAdjudication extends fhir.BackboneElement { \r\n  /**\r\n   * For example codes indicating: Co-Pay, deductible, eligible, benefit, tax, etc.\r\n   */\r\n  category: fhir.CodeableConcept|null;\r\n  /**\r\n   * For example may indicate that the funds for this benefit type have been exhausted.\r\n   */\r\n  reason?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * For example: amount submitted, eligible amount, co-payment, and benefit payable.\r\n   */\r\n  amount?: fhir.Money|undefined;\r\n  /**\r\n   * For example: eligible percentage or co-payment percentage.\r\n   */\r\n  value?: number|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ClaimResponse.item.adjudication.value\r\n   */\r\n  _value?:fhir.FhirElement;\r\n}\r\n\r\n/**\r\n * A sub-detail adjudication of a simple product or service.\r\n */\r\nexport interface ClaimResponseItemDetailSubDetail extends fhir.BackboneElement { \r\n  /**\r\n   * A number to uniquely reference the claim sub-detail entry.\r\n   */\r\n  subDetailSequence: number|null;\r\n  /**\r\n   * Extended properties for primitive element: ClaimResponse.item.detail.subDetail.subDetailSequence\r\n   */\r\n  _subDetailSequence?:fhir.FhirElement;\r\n  /**\r\n   * The numbers associated with notes below which apply to the adjudication of this item.\r\n   */\r\n  noteNumber?: number[]|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ClaimResponse.item.detail.subDetail.noteNumber\r\n   */\r\n  _noteNumber?:(fhir.FhirElement|null)[];\r\n  /**\r\n   * The adjudication results.\r\n   */\r\n  adjudication?: fhir.ClaimResponseItemAdjudication[]|undefined;\r\n}\r\n\r\n/**\r\n * A claim detail. Either a simple (a product or service) or a 'group' of sub-details which are simple items.\r\n */\r\nexport interface ClaimResponseItemDetail extends fhir.BackboneElement { \r\n  /**\r\n   * A number to uniquely reference the claim detail entry.\r\n   */\r\n  detailSequence: number|null;\r\n  /**\r\n   * Extended properties for primitive element: ClaimResponse.item.detail.detailSequence\r\n   */\r\n  _detailSequence?:fhir.FhirElement;\r\n  /**\r\n   * The numbers associated with notes below which apply to the adjudication of this item.\r\n   */\r\n  noteNumber?: number[]|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ClaimResponse.item.detail.noteNumber\r\n   */\r\n  _noteNumber?:(fhir.FhirElement|null)[];\r\n  /**\r\n   * The adjudication results.\r\n   */\r\n  adjudication: fhir.ClaimResponseItemAdjudication[]|null;\r\n  /**\r\n   * A sub-detail adjudication of a simple product or service.\r\n   */\r\n  subDetail?: fhir.ClaimResponseItemDetailSubDetail[]|undefined;\r\n}\r\n\r\n/**\r\n * A claim line. Either a simple (a product or service) or a 'group' of details which can also be a simple items or groups of sub-details.\r\n */\r\nexport interface ClaimResponseItem extends fhir.BackboneElement { \r\n  /**\r\n   * A number to uniquely reference the claim item entries.\r\n   */\r\n  itemSequence: number|null;\r\n  /**\r\n   * Extended properties for primitive element: ClaimResponse.item.itemSequence\r\n   */\r\n  _itemSequence?:fhir.FhirElement;\r\n  /**\r\n   * The numbers associated with notes below which apply to the adjudication of this item.\r\n   */\r\n  noteNumber?: number[]|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ClaimResponse.item.noteNumber\r\n   */\r\n  _noteNumber?:(fhir.FhirElement|null)[];\r\n  /**\r\n   * If this item is a group then the values here are a summary of the adjudication of the detail items. If this item is a simple product or service then this is the result of the adjudication of this item.\r\n   */\r\n  adjudication: fhir.ClaimResponseItemAdjudication[]|null;\r\n  /**\r\n   * A claim detail. Either a simple (a product or service) or a 'group' of sub-details which are simple items.\r\n   */\r\n  detail?: fhir.ClaimResponseItemDetail[]|undefined;\r\n}\r\n\r\n/**\r\n * The third-tier service adjudications for payor added services.\r\n */\r\nexport interface ClaimResponseAddItemDetailSubDetail extends fhir.BackboneElement { \r\n  /**\r\n   * If this is an actual service or product line, i.e. not a Group, then use code to indicate the Professional Service or Product supplied (e.g. CTP, HCPCS, USCLS, ICD10, NCPDP, DIN, RxNorm, ACHI, CCI). If a grouping item then use a group code to indicate the type of thing being grouped e.g. 'glasses' or 'compound'.\r\n   */\r\n  productOrService: fhir.CodeableConcept|null;\r\n  /**\r\n   * For example in Oral whether the treatment is cosmetic or associated with TMJ, or for Medical whether the treatment was outside the clinic or outside of office hours.\r\n   */\r\n  modifier?: fhir.CodeableConcept[]|undefined;\r\n  /**\r\n   * The number of repetitions of a service or product.\r\n   */\r\n  quantity?: fhir.Quantity|undefined;\r\n  /**\r\n   * If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.\r\n   */\r\n  unitPrice?: fhir.Money|undefined;\r\n  /**\r\n   * To show a 10% senior's discount, the value entered is: 0.90 (1.00 - 0.10).\r\n   */\r\n  factor?: number|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ClaimResponse.addItem.detail.subDetail.factor\r\n   */\r\n  _factor?:fhir.FhirElement;\r\n  /**\r\n   * For example, the formula: quantity * unitPrice * factor  = net. Quantity and factor are assumed to be 1 if not supplied.\r\n   */\r\n  net?: fhir.Money|undefined;\r\n  /**\r\n   * The numbers associated with notes below which apply to the adjudication of this item.\r\n   */\r\n  noteNumber?: number[]|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ClaimResponse.addItem.detail.subDetail.noteNumber\r\n   */\r\n  _noteNumber?:(fhir.FhirElement|null)[];\r\n  /**\r\n   * The adjudication results.\r\n   */\r\n  adjudication: fhir.ClaimResponseItemAdjudication[]|null;\r\n}\r\n\r\n/**\r\n * The second-tier service adjudications for payor added services.\r\n */\r\nexport interface ClaimResponseAddItemDetail extends fhir.BackboneElement { \r\n  /**\r\n   * If this is an actual service or product line, i.e. not a Group, then use code to indicate the Professional Service or Product supplied (e.g. CTP, HCPCS, USCLS, ICD10, NCPDP, DIN, RxNorm, ACHI, CCI). If a grouping item then use a group code to indicate the type of thing being grouped e.g. 'glasses' or 'compound'.\r\n   */\r\n  productOrService: fhir.CodeableConcept|null;\r\n  /**\r\n   * For example in Oral whether the treatment is cosmetic or associated with TMJ, or for Medical whether the treatment was outside the clinic or outside of office hours.\r\n   */\r\n  modifier?: fhir.CodeableConcept[]|undefined;\r\n  /**\r\n   * The number of repetitions of a service or product.\r\n   */\r\n  quantity?: fhir.Quantity|undefined;\r\n  /**\r\n   * If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.\r\n   */\r\n  unitPrice?: fhir.Money|undefined;\r\n  /**\r\n   * To show a 10% senior's discount, the value entered is: 0.90 (1.00 - 0.10).\r\n   */\r\n  factor?: number|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ClaimResponse.addItem.detail.factor\r\n   */\r\n  _factor?:fhir.FhirElement;\r\n  /**\r\n   * For example, the formula: quantity * unitPrice * factor  = net. Quantity and factor are assumed to be 1 if not supplied.\r\n   */\r\n  net?: fhir.Money|undefined;\r\n  /**\r\n   * The numbers associated with notes below which apply to the adjudication of this item.\r\n   */\r\n  noteNumber?: number[]|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ClaimResponse.addItem.detail.noteNumber\r\n   */\r\n  _noteNumber?:(fhir.FhirElement|null)[];\r\n  /**\r\n   * The adjudication results.\r\n   */\r\n  adjudication: fhir.ClaimResponseItemAdjudication[]|null;\r\n  /**\r\n   * The third-tier service adjudications for payor added services.\r\n   */\r\n  subDetail?: fhir.ClaimResponseAddItemDetailSubDetail[]|undefined;\r\n}\r\n\r\n/**\r\n * The first-tier service adjudications for payor added product or service lines.\r\n */\r\nexport interface ClaimResponseAddItem extends fhir.BackboneElement { \r\n  /**\r\n   * Claim items which this service line is intended to replace.\r\n   */\r\n  itemSequence?: number[]|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ClaimResponse.addItem.itemSequence\r\n   */\r\n  _itemSequence?:(fhir.FhirElement|null)[];\r\n  /**\r\n   * The sequence number of the details within the claim item which this line is intended to replace.\r\n   */\r\n  detailSequence?: number[]|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ClaimResponse.addItem.detailSequence\r\n   */\r\n  _detailSequence?:(fhir.FhirElement|null)[];\r\n  /**\r\n   * The sequence number of the sub-details within the details within the claim item which this line is intended to replace.\r\n   */\r\n  subdetailSequence?: number[]|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ClaimResponse.addItem.subdetailSequence\r\n   */\r\n  _subdetailSequence?:(fhir.FhirElement|null)[];\r\n  /**\r\n   * The providers who are authorized for the services rendered to the patient.\r\n   */\r\n  provider?: fhir.Reference[]|undefined;\r\n  /**\r\n   * If this is an actual service or product line, i.e. not a Group, then use code to indicate the Professional Service or Product supplied (e.g. CTP, HCPCS, USCLS, ICD10, NCPDP, DIN, RxNorm, ACHI, CCI). If a grouping item then use a group code to indicate the type of thing being grouped e.g. 'glasses' or 'compound'.\r\n   */\r\n  productOrService: fhir.CodeableConcept|null;\r\n  /**\r\n   * For example in Oral whether the treatment is cosmetic or associated with TMJ, or for Medical whether the treatment was outside the clinic or outside of office hours.\r\n   */\r\n  modifier?: fhir.CodeableConcept[]|undefined;\r\n  /**\r\n   * For example: Neonatal program, child dental program or drug users recovery program.\r\n   */\r\n  programCode?: fhir.CodeableConcept[]|undefined;\r\n  /**\r\n   * The date or dates when the service or product was supplied, performed or completed.\r\n   */\r\n  servicedDate?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ClaimResponse.addItem.serviced[x]\r\n   */\r\n  _servicedDate?:fhir.FhirElement;\r\n  /**\r\n   * The date or dates when the service or product was supplied, performed or completed.\r\n   */\r\n  servicedPeriod?: fhir.Period|undefined;\r\n  /**\r\n   * Where the product or service was provided.\r\n   */\r\n  locationCodeableConcept?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * Where the product or service was provided.\r\n   */\r\n  locationAddress?: fhir.Address|undefined;\r\n  /**\r\n   * Where the product or service was provided.\r\n   */\r\n  locationReference?: fhir.Reference|undefined;\r\n  /**\r\n   * The number of repetitions of a service or product.\r\n   */\r\n  quantity?: fhir.Quantity|undefined;\r\n  /**\r\n   * If the item is not a group then this is the fee for the product or service, otherwise this is the total of the fees for the details of the group.\r\n   */\r\n  unitPrice?: fhir.Money|undefined;\r\n  /**\r\n   * To show a 10% senior's discount, the value entered is: 0.90 (1.00 - 0.10).\r\n   */\r\n  factor?: number|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ClaimResponse.addItem.factor\r\n   */\r\n  _factor?:fhir.FhirElement;\r\n  /**\r\n   * For example, the formula: quantity * unitPrice * factor  = net. Quantity and factor are assumed to be 1 if not supplied.\r\n   */\r\n  net?: fhir.Money|undefined;\r\n  /**\r\n   * For example: Providing a tooth code allows an insurer to identify a provider performing a filling on a tooth that was previously removed.\r\n   */\r\n  bodySite?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * A region or surface of the bodySite, e.g. limb region or tooth surface(s).\r\n   */\r\n  subSite?: fhir.CodeableConcept[]|undefined;\r\n  /**\r\n   * The numbers associated with notes below which apply to the adjudication of this item.\r\n   */\r\n  noteNumber?: number[]|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ClaimResponse.addItem.noteNumber\r\n   */\r\n  _noteNumber?:(fhir.FhirElement|null)[];\r\n  /**\r\n   * The adjudication results.\r\n   */\r\n  adjudication: fhir.ClaimResponseItemAdjudication[]|null;\r\n  /**\r\n   * The second-tier service adjudications for payor added services.\r\n   */\r\n  detail?: fhir.ClaimResponseAddItemDetail[]|undefined;\r\n}\r\n\r\n/**\r\n * Totals for amounts submitted, co-pays, benefits payable etc.\r\n */\r\nexport interface ClaimResponseTotal extends fhir.BackboneElement { \r\n  /**\r\n   * For example codes indicating: Co-Pay, deductible, eligible, benefit, tax, etc.\r\n   */\r\n  category: fhir.CodeableConcept|null;\r\n  /**\r\n   * Monetary total amount associated with the category.\r\n   */\r\n  amount: fhir.Money|null;\r\n}\r\n\r\n/**\r\n * Payment details for the adjudication of the claim.\r\n */\r\nexport interface ClaimResponsePayment extends fhir.BackboneElement { \r\n  /**\r\n   * Whether this represents partial or complete payment of the benefits payable.\r\n   */\r\n  type: fhir.CodeableConcept|null;\r\n  /**\r\n   * Insurers will deduct amounts owing from the provider (adjustment), such as a prior overpayment, from the amount owing to the provider (benefits payable) when payment is made to the provider.\r\n   */\r\n  adjustment?: fhir.Money|undefined;\r\n  /**\r\n   * Reason for the payment adjustment.\r\n   */\r\n  adjustmentReason?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * Estimated date the payment will be issued or the actual issue date of payment.\r\n   */\r\n  date?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ClaimResponse.payment.date\r\n   */\r\n  _date?:fhir.FhirElement;\r\n  /**\r\n   * Benefits payable less any payment adjustment.\r\n   */\r\n  amount: fhir.Money|null;\r\n  /**\r\n   * For example: EFT number or check number.\r\n   */\r\n  identifier?: fhir.Identifier|undefined;\r\n}\r\n\r\n/**\r\n * A note that describes or explains adjudication results in a human readable form.\r\n */\r\nexport interface ClaimResponseProcessNote extends fhir.BackboneElement { \r\n  /**\r\n   * A number to uniquely identify a note entry.\r\n   */\r\n  number?: number|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ClaimResponse.processNote.number\r\n   */\r\n  _number?:fhir.FhirElement;\r\n  /**\r\n   * The business purpose of the note text.\r\n   */\r\n  type?: 'display'|'print'|'printoper'|undefined;\r\n  /**\r\n   * The explanation or description associated with the processing.\r\n   */\r\n  text: string|null;\r\n  /**\r\n   * Extended properties for primitive element: ClaimResponse.processNote.text\r\n   */\r\n  _text?:fhir.FhirElement;\r\n  /**\r\n   * Only required if the language is different from the resource language.\r\n   */\r\n  language?: fhir.CodeableConcept|undefined;\r\n}\r\n\r\n/**\r\n * All insurance coverages for the patient which may be applicable for reimbursement, of the products and services listed in the claim, are typically provided in the claim to allow insurers to confirm the ordering of the insurance coverages relative to local 'coordination of benefit' rules. One coverage (and only one) with 'focal=true' is to be used in the adjudication of this claim. Coverages appearing before the focal Coverage in the list, and where 'subrogation=false', should provide a reference to the ClaimResponse containing the adjudication results of the prior claim.\r\n */\r\nexport interface ClaimResponseInsurance extends fhir.BackboneElement { \r\n  /**\r\n   * A number to uniquely identify insurance entries and provide a sequence of coverages to convey coordination of benefit order.\r\n   */\r\n  sequence: number|null;\r\n  /**\r\n   * Extended properties for primitive element: ClaimResponse.insurance.sequence\r\n   */\r\n  _sequence?:fhir.FhirElement;\r\n  /**\r\n   * A patient may (will) have multiple insurance policies which provide reimbursement for healthcare services and products. For example a person may also be covered by their spouse's policy and both appear in the list (and may be from the same insurer). This flag will be set to true for only one of the listed policies and that policy will be used for adjudicating this claim. Other claims would be created to request adjudication against the other listed policies.\r\n   */\r\n  focal: boolean|null;\r\n  /**\r\n   * Extended properties for primitive element: ClaimResponse.insurance.focal\r\n   */\r\n  _focal?:fhir.FhirElement;\r\n  /**\r\n   * Reference to the insurance card level information contained in the Coverage resource. The coverage issuing insurer will use these details to locate the patient's actual coverage within the insurer's information system.\r\n   */\r\n  coverage: fhir.Reference|null;\r\n  /**\r\n   * A business agreement number established between the provider and the insurer for special business processing purposes.\r\n   */\r\n  businessArrangement?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ClaimResponse.insurance.businessArrangement\r\n   */\r\n  _businessArrangement?:fhir.FhirElement;\r\n  /**\r\n   * Must not be specified when 'focal=true' for this insurance.\r\n   */\r\n  claimResponse?: fhir.Reference|undefined;\r\n}\r\n\r\n/**\r\n * If the request contains errors then an error element should be provided and no adjudication related sections (item, addItem, or payment) should be present.\r\n */\r\nexport interface ClaimResponseError extends fhir.BackboneElement { \r\n  /**\r\n   * The sequence number of the line item submitted which contains the error. This value is omitted when the error occurs outside of the item structure.\r\n   */\r\n  itemSequence?: number|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ClaimResponse.error.itemSequence\r\n   */\r\n  _itemSequence?:fhir.FhirElement;\r\n  /**\r\n   * The sequence number of the detail within the line item submitted which contains the error. This value is omitted when the error occurs outside of the item structure.\r\n   */\r\n  detailSequence?: number|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ClaimResponse.error.detailSequence\r\n   */\r\n  _detailSequence?:fhir.FhirElement;\r\n  /**\r\n   * The sequence number of the sub-detail within the detail within the line item submitted which contains the error. This value is omitted when the error occurs outside of the item structure.\r\n   */\r\n  subDetailSequence?: number|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ClaimResponse.error.subDetailSequence\r\n   */\r\n  _subDetailSequence?:fhir.FhirElement;\r\n  /**\r\n   * An error code, from a specified code system, which details why the claim could not be adjudicated.\r\n   */\r\n  code: fhir.CodeableConcept|null;\r\n}\r\n\r\n/**\r\n * This resource provides the adjudication details from the processing of a Claim resource.\r\n */\r\nexport interface ClaimResponse extends fhir.DomainResource { \r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  resourceType: \"ClaimResponse\";\r\n  /**\r\n   * A unique identifier assigned to this claim response.\r\n   */\r\n  identifier?: fhir.Identifier[]|undefined;\r\n  /**\r\n   * This element is labeled as a modifier because the status contains codes that mark the resource as not currently valid.\r\n   */\r\n  status: 'active'|'cancelled'|'draft'|'entered-in-error'|null;\r\n  /**\r\n   * This may contain the local bill type codes, for example the US UB-04 bill type code or the CMS bill type.\r\n   */\r\n  type: fhir.CodeableConcept|null;\r\n  /**\r\n   * This may contain the local bill type codes, for example the US UB-04 bill type code or the CMS bill type.\r\n   */\r\n  subType?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * A code to indicate whether the nature of the request is: to request adjudication of products and services previously rendered; or requesting authorization and adjudication for provision in the future; or requesting the non-binding adjudication of the listed products and services which could be provided in the future.\r\n   */\r\n  use: 'claim'|'preauthorization'|'predetermination'|null;\r\n  /**\r\n   * The party to whom the professional services and/or products have been supplied or are being considered and for whom actual for facast reimbursement is sought.\r\n   */\r\n  patient: fhir.Reference|null;\r\n  /**\r\n   * The date this resource was created.\r\n   */\r\n  created: string|null;\r\n  /**\r\n   * Extended properties for primitive element: ClaimResponse.created\r\n   */\r\n  _created?:fhir.FhirElement;\r\n  /**\r\n   * The party responsible for authorization, adjudication and reimbursement.\r\n   */\r\n  insurer: fhir.Reference|null;\r\n  /**\r\n   * Typically this field would be 1..1 where this party is responsible for the claim but not necessarily professionally responsible for the provision of the individual products and services listed below.\r\n   */\r\n  requestor?: fhir.Reference|undefined;\r\n  /**\r\n   * Original request resource reference.\r\n   */\r\n  request?: fhir.Reference|undefined;\r\n  /**\r\n   * The resource may be used to indicate that: the request has been held (queued) for processing; that it has been processed and errors found (error); that no errors were found and that some of the adjudication has been undertaken (partial) or that all of the adjudication has been undertaken (complete).\r\n   */\r\n  outcome: 'complete'|'error'|'partial'|'queued'|null;\r\n  /**\r\n   * A human readable description of the status of the adjudication.\r\n   */\r\n  disposition?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ClaimResponse.disposition\r\n   */\r\n  _disposition?:fhir.FhirElement;\r\n  /**\r\n   * This value is only present on preauthorization adjudications.\r\n   */\r\n  preAuthRef?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: ClaimResponse.preAuthRef\r\n   */\r\n  _preAuthRef?:fhir.FhirElement;\r\n  /**\r\n   * The time frame during which this authorization is effective.\r\n   */\r\n  preAuthPeriod?: fhir.Period|undefined;\r\n  /**\r\n   * Type of Party to be reimbursed: subscriber, provider, other.\r\n   */\r\n  payeeType?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * A claim line. Either a simple (a product or service) or a 'group' of details which can also be a simple items or groups of sub-details.\r\n   */\r\n  item?: fhir.ClaimResponseItem[]|undefined;\r\n  /**\r\n   * The first-tier service adjudications for payor added product or service lines.\r\n   */\r\n  addItem?: fhir.ClaimResponseAddItem[]|undefined;\r\n  /**\r\n   * The adjudication results which are presented at the header level rather than at the line-item or add-item levels.\r\n   */\r\n  adjudication?: fhir.ClaimResponseItemAdjudication[]|undefined;\r\n  /**\r\n   * Totals for amounts submitted, co-pays, benefits payable etc.\r\n   */\r\n  total?: fhir.ClaimResponseTotal[]|undefined;\r\n  /**\r\n   * Payment details for the adjudication of the claim.\r\n   */\r\n  payment?: fhir.ClaimResponsePayment|undefined;\r\n  /**\r\n   * Fund would be release by a future claim quoting the preAuthRef of this response. Examples of values include: provider, patient, none.\r\n   */\r\n  fundsReserve?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * May be needed to identify specific jurisdictional forms.\r\n   */\r\n  formCode?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * Needed to permit insurers to include the actual form.\r\n   */\r\n  form?: fhir.Attachment|undefined;\r\n  /**\r\n   * A note that describes or explains adjudication results in a human readable form.\r\n   */\r\n  processNote?: fhir.ClaimResponseProcessNote[]|undefined;\r\n  /**\r\n   * For example: professional reports, documents, images, clinical resources, or accident reports.\r\n   */\r\n  communicationRequest?: fhir.Reference[]|undefined;\r\n  /**\r\n   * All insurance coverages for the patient which may be applicable for reimbursement, of the products and services listed in the claim, are typically provided in the claim to allow insurers to confirm the ordering of the insurance coverages relative to local 'coordination of benefit' rules. One coverage (and only one) with 'focal=true' is to be used in the adjudication of this claim. Coverages appearing before the focal Coverage in the list, and where 'subrogation=false', should provide a reference to the ClaimResponse containing the adjudication results of the prior claim.\r\n   */\r\n  insurance?: fhir.ClaimResponseInsurance[]|undefined;\r\n  /**\r\n   * If the request contains errors then an error element should be provided and no adjudication related sections (item, addItem, or payment) should be present.\r\n   */\r\n  error?: fhir.ClaimResponseError[]|undefined;\r\n}\r\n"]}