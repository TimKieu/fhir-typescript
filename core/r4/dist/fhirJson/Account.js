// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR Resource: Account
export {};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQWNjb3VudC5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJKc29uL0FjY291bnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLCtDQUErQztBQUMvQyxrQ0FBa0M7QUFDbEMseUJBQXlCIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0LmNvcmUgdmVyc2lvbjogNC4wLjFcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFJlc291cmNlOiBBY2NvdW50XHJcblxyXG5pbXBvcnQgKiBhcyBmaGlyIGZyb20gJy4uL2ZoaXJKc29uLmpzJztcclxuXHJcblxyXG4vKipcclxuICogVHlwaWNhbGx5LiB0aGlzIG1heSBiZSBzb21lIGZvcm0gb2YgaW5zdXJhbmNlLCBpbnRlcm5hbCBjaGFyZ2VzLCBvciBzZWxmLXBheS5cclxuICogTG9jYWwgb3IganVyaXNkaWN0aW9uYWwgYnVzaW5lc3MgcnVsZXMgbWF5IGRldGVybWluZSB3aGljaCBjb3ZlcmFnZSBjb3ZlcnMgd2hpY2ggdHlwZXMgb2YgYmlsbGFibGUgaXRlbXMgY2hhcmdlZCB0byB0aGUgYWNjb3VudCwgYW5kIGluIHdoaWNoIG9yZGVyLlxyXG4gKiBXaGVyZSB0aGUgb3JkZXIgaXMgaW1wb3J0YW50LCBhIGxvY2FsL2p1cmlzZGljdGlvbmFsIGV4dGVuc2lvbiBtYXkgYmUgZGVmaW5lZCB0byBzcGVjaWZ5IHRoZSBvcmRlciBmb3IgdGhlIHR5cGUgb2YgY2hhcmdlLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBBY2NvdW50Q292ZXJhZ2UgZXh0ZW5kcyBmaGlyLkJhY2tib25lRWxlbWVudCB7IFxyXG4gIC8qKlxyXG4gICAqIFRoZSBwYXJ0eShzKSB0aGF0IGNvbnRyaWJ1dGUgdG8gcGF5bWVudCAob3IgcGFydCBvZikgb2YgdGhlIGNoYXJnZXMgYXBwbGllZCB0byB0aGlzIGFjY291bnQgKGluY2x1ZGluZyBzZWxmLXBheSkuXHJcbiAgICogQSBjb3ZlcmFnZSBtYXkgb25seSBiZSByZXNwb25zaWJsZSBmb3Igc3BlY2lmaWMgdHlwZXMgb2YgY2hhcmdlcywgYW5kIHRoZSBzZXF1ZW5jZSBvZiB0aGUgY292ZXJhZ2VzIGluIHRoZSBhY2NvdW50IGNvdWxkIGJlIGltcG9ydGFudCB3aGVuIHByb2Nlc3NpbmcgYmlsbGluZy5cclxuICAgKi9cclxuICBjb3ZlcmFnZTogZmhpci5SZWZlcmVuY2V8bnVsbDtcclxuICAvKipcclxuICAgKiBJdCBpcyBjb21tb24gaW4gc29tZSBqdXJpc2RpY3Rpb25zIGZvciB0aGVyZSB0byBiZSBtdWx0aXBsZSBjb3ZlcmFnZXMgYWxsb2NhdGVkIHRvIGFuIGFjY291bnQsIGFuZCBhIHNlcXVlbmNlIGlzIHJlcXVpcmVkIHRvIG9yZGVyIHRoZSBzZXR0bGluZyBvZiB0aGUgYWNjb3VudCAob2Z0ZW4gd2l0aCBpbnN1cmFuY2UgY2xhaW1pbmcpLlxyXG4gICAqL1xyXG4gIHByaW9yaXR5PzogbnVtYmVyfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogQWNjb3VudC5jb3ZlcmFnZS5wcmlvcml0eVxyXG4gICAqL1xyXG4gIF9wcmlvcml0eT86Zmhpci5GaGlyRWxlbWVudDtcclxufVxyXG5cclxuLyoqXHJcbiAqIFRoZSBwYXJ0aWVzIHJlc3BvbnNpYmxlIGZvciBiYWxhbmNpbmcgdGhlIGFjY291bnQgaWYgb3RoZXIgcGF5bWVudCBvcHRpb25zIGZhbGwgc2hvcnQuXHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIEFjY291bnRHdWFyYW50b3IgZXh0ZW5kcyBmaGlyLkJhY2tib25lRWxlbWVudCB7IFxyXG4gIC8qKlxyXG4gICAqIFRoZSBlbnRpdHkgd2hvIGlzIHJlc3BvbnNpYmxlLlxyXG4gICAqL1xyXG4gIHBhcnR5OiBmaGlyLlJlZmVyZW5jZXxudWxsO1xyXG4gIC8qKlxyXG4gICAqIEEgZ3VhcmFudG9yIG1heSBiZSBwbGFjZWQgb24gY3JlZGl0IGhvbGQgb3Igb3RoZXJ3aXNlIGhhdmUgdGhlaXIgcm9sZSB0ZW1wb3JhcmlseSBzdXNwZW5kZWQuXHJcbiAgICovXHJcbiAgb25Ib2xkPzogYm9vbGVhbnx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IEFjY291bnQuZ3VhcmFudG9yLm9uSG9sZFxyXG4gICAqL1xyXG4gIF9vbkhvbGQ/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbiAgLyoqXHJcbiAgICogVGhlIHRpbWVmcmFtZSBkdXJpbmcgd2hpY2ggdGhlIGd1YXJhbnRvciBhY2NlcHRzIHJlc3BvbnNpYmlsaXR5IGZvciB0aGUgYWNjb3VudC5cclxuICAgKi9cclxuICBwZXJpb2Q/OiBmaGlyLlBlcmlvZHx1bmRlZmluZWQ7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBBIGZpbmFuY2lhbCB0b29sIGZvciB0cmFja2luZyB2YWx1ZSBhY2NydWVkIGZvciBhIHBhcnRpY3VsYXIgcHVycG9zZS4gIEluIHRoZSBoZWFsdGhjYXJlIGZpZWxkLCB1c2VkIHRvIHRyYWNrIGNoYXJnZXMgZm9yIGEgcGF0aWVudCwgY29zdCBjZW50ZXJzLCBldGMuXHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIEFjY291bnQgZXh0ZW5kcyBmaGlyLkRvbWFpblJlc291cmNlIHsgXHJcbiAgLyoqXHJcbiAgICogUmVzb3VyY2UgVHlwZSBOYW1lXHJcbiAgICovXHJcbiAgcmVzb3VyY2VUeXBlOiBcIkFjY291bnRcIjtcclxuICAvKipcclxuICAgKiBVbmlxdWUgaWRlbnRpZmllciB1c2VkIHRvIHJlZmVyZW5jZSB0aGUgYWNjb3VudC4gIE1pZ2h0IG9yIG1pZ2h0IG5vdCBiZSBpbnRlbmRlZCBmb3IgaHVtYW4gdXNlIChlLmcuIGNyZWRpdCBjYXJkIG51bWJlcikuXHJcbiAgICovXHJcbiAgaWRlbnRpZmllcj86IGZoaXIuSWRlbnRpZmllcltdfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBUaGlzIGVsZW1lbnQgaXMgbGFiZWxlZCBhcyBhIG1vZGlmaWVyIGJlY2F1c2UgdGhlIHN0YXR1cyBjb250YWlucyB0aGUgY29kZXMgaW5hY3RpdmUgYW5kIGVudGVyZWQtaW4tZXJyb3IgdGhhdCBtYXJrIHRoZSBBY2NvdW50IGFzIG5vdCBjdXJyZW50bHkgdmFsaWQuXHJcbiAgICovXHJcbiAgc3RhdHVzOiAnYWN0aXZlJ3wnZW50ZXJlZC1pbi1lcnJvcid8J2luYWN0aXZlJ3wnb24taG9sZCd8J3Vua25vd24nfG51bGw7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IEFjY291bnQuc3RhdHVzXHJcbiAgICovXHJcbiAgX3N0YXR1cz86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBDYXRlZ29yaXplcyB0aGUgYWNjb3VudCBmb3IgcmVwb3J0aW5nIGFuZCBzZWFyY2hpbmcgcHVycG9zZXMuXHJcbiAgICovXHJcbiAgdHlwZT86IGZoaXIuQ29kZWFibGVDb25jZXB0fHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBOYW1lIHVzZWQgZm9yIHRoZSBhY2NvdW50IHdoZW4gZGlzcGxheWluZyBpdCB0byBodW1hbnMgaW4gcmVwb3J0cywgZXRjLlxyXG4gICAqL1xyXG4gIG5hbWU/OiBzdHJpbmd8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBBY2NvdW50Lm5hbWVcclxuICAgKi9cclxuICBfbmFtZT86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBBY2NvdW50cyBjYW4gYmUgYXBwbGllZCB0byBub24tcGF0aWVudHMgZm9yIHRyYWNraW5nIG90aGVyIG5vbi1wYXRpZW50IHJlbGF0ZWQgYWN0aXZpdGllcywgc3VjaCBhcyBncm91cCBzZXJ2aWNlcyAocGF0aWVudHMgbm90IHRyYWNrZWQsIGFuZCBjb3N0cyBjaGFyZ2VkIHRvIGFub3RoZXIgYm9keSksIG9yIG1pZ2h0IG5vdCBiZSBhbGxvY2F0ZWQuXHJcbiAgICovXHJcbiAgc3ViamVjdD86IGZoaXIuUmVmZXJlbmNlW118dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEl0IGlzIHBvc3NpYmxlIGZvciB0cmFuc2FjdGlvbnMgdG8gYmUgcG9zdGVkIG91dHNpZGUgdGhlIHNlcnZpY2UgcGVyaW9kLCBhcyBsb25nIGFzIHRoZSBzZXJ2aWNlIHdhcyBwcm92aWRlZCB3aXRoaW4gdGhlIGRlZmluZWQgc2VydmljZSBwZXJpb2QuXHJcbiAgICovXHJcbiAgc2VydmljZVBlcmlvZD86IGZoaXIuUGVyaW9kfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBUeXBpY2FsbHkuIHRoaXMgbWF5IGJlIHNvbWUgZm9ybSBvZiBpbnN1cmFuY2UsIGludGVybmFsIGNoYXJnZXMsIG9yIHNlbGYtcGF5LlxyXG4gICAqIExvY2FsIG9yIGp1cmlzZGljdGlvbmFsIGJ1c2luZXNzIHJ1bGVzIG1heSBkZXRlcm1pbmUgd2hpY2ggY292ZXJhZ2UgY292ZXJzIHdoaWNoIHR5cGVzIG9mIGJpbGxhYmxlIGl0ZW1zIGNoYXJnZWQgdG8gdGhlIGFjY291bnQsIGFuZCBpbiB3aGljaCBvcmRlci5cclxuICAgKiBXaGVyZSB0aGUgb3JkZXIgaXMgaW1wb3J0YW50LCBhIGxvY2FsL2p1cmlzZGljdGlvbmFsIGV4dGVuc2lvbiBtYXkgYmUgZGVmaW5lZCB0byBzcGVjaWZ5IHRoZSBvcmRlciBmb3IgdGhlIHR5cGUgb2YgY2hhcmdlLlxyXG4gICAqL1xyXG4gIGNvdmVyYWdlPzogZmhpci5BY2NvdW50Q292ZXJhZ2VbXXx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogSW5kaWNhdGVzIHRoZSBzZXJ2aWNlIGFyZWEsIGhvc3BpdGFsLCBkZXBhcnRtZW50LCBldGMuIHdpdGggcmVzcG9uc2liaWxpdHkgZm9yIG1hbmFnaW5nIHRoZSBBY2NvdW50LlxyXG4gICAqL1xyXG4gIG93bmVyPzogZmhpci5SZWZlcmVuY2V8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIFByb3ZpZGVzIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24gYWJvdXQgd2hhdCB0aGUgYWNjb3VudCB0cmFja3MgYW5kIGhvdyBpdCBpcyB1c2VkLlxyXG4gICAqL1xyXG4gIGRlc2NyaXB0aW9uPzogc3RyaW5nfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogQWNjb3VudC5kZXNjcmlwdGlvblxyXG4gICAqL1xyXG4gIF9kZXNjcmlwdGlvbj86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBUaGUgcGFydGllcyByZXNwb25zaWJsZSBmb3IgYmFsYW5jaW5nIHRoZSBhY2NvdW50IGlmIG90aGVyIHBheW1lbnQgb3B0aW9ucyBmYWxsIHNob3J0LlxyXG4gICAqL1xyXG4gIGd1YXJhbnRvcj86IGZoaXIuQWNjb3VudEd1YXJhbnRvcltdfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBSZWZlcmVuY2UgdG8gYSBwYXJlbnQgQWNjb3VudC5cclxuICAgKi9cclxuICBwYXJ0T2Y/OiBmaGlyLlJlZmVyZW5jZXx1bmRlZmluZWQ7XHJcbn1cclxuIl19