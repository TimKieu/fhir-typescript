// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR Resource: NutritionOrder
export {};
//# sourceMappingURL=data:application/json;base64,