// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR Resource: Resource
export {};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVzb3VyY2UuanMiLCJzb3VyY2VSb290IjoiLi9zcmMvIiwic291cmNlcyI6WyJmaGlySnNvbi9SZXNvdXJjZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0I7QUFDcEIsK0NBQStDO0FBQy9DLGtDQUFrQztBQUNsQywwQkFBMEIiLCJzb3VyY2VzQ29udGVudCI6WyIvLyA8YXV0by1nZW5lcmF0ZWQvPlxyXG4vLyBDb250ZW50cyBvZjogaGw3LmZoaXIucjQuY29yZSB2ZXJzaW9uOiA0LjAuMVxyXG4vLyBNaW5pbXVtIFR5cGVTY3JpcHQgVmVyc2lvbjogMy43XHJcbi8vIEZISVIgUmVzb3VyY2U6IFJlc291cmNlXHJcblxyXG5pbXBvcnQgKiBhcyBmaGlyIGZyb20gJy4uL2ZoaXJKc29uLmpzJztcclxuXHJcblxyXG4vKipcclxuICogVGhpcyBpcyB0aGUgYmFzZSByZXNvdXJjZSB0eXBlIGZvciBldmVyeXRoaW5nLlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBSZXNvdXJjZSB7XHJcbiAgLyoqXHJcbiAgICogUmVzb3VyY2UgVHlwZSBOYW1lXHJcbiAgICovXHJcbiAgcmVzb3VyY2VUeXBlOiBzdHJpbmd8bnVsbDtcclxuICAvKipcclxuICAgKiBUaGUgb25seSB0aW1lIHRoYXQgYSByZXNvdXJjZSBkb2VzIG5vdCBoYXZlIGFuIGlkIGlzIHdoZW4gaXQgaXMgYmVpbmcgc3VibWl0dGVkIHRvIHRoZSBzZXJ2ZXIgdXNpbmcgYSBjcmVhdGUgb3BlcmF0aW9uLlxyXG4gICAqL1xyXG4gIGlkPzogc3RyaW5nfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogUmVzb3VyY2UuaWRcclxuICAgKi9cclxuICBfaWQ/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbiAgLyoqXHJcbiAgICogVGhlIG1ldGFkYXRhIGFib3V0IHRoZSByZXNvdXJjZS4gVGhpcyBpcyBjb250ZW50IHRoYXQgaXMgbWFpbnRhaW5lZCBieSB0aGUgaW5mcmFzdHJ1Y3R1cmUuIENoYW5nZXMgdG8gdGhlIGNvbnRlbnQgbWlnaHQgbm90IGFsd2F5cyBiZSBhc3NvY2lhdGVkIHdpdGggdmVyc2lvbiBjaGFuZ2VzIHRvIHRoZSByZXNvdXJjZS5cclxuICAgKi9cclxuICBtZXRhPzogZmhpci5NZXRhfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBBc3NlcnRpbmcgdGhpcyBydWxlIHNldCByZXN0cmljdHMgdGhlIGNvbnRlbnQgdG8gYmUgb25seSB1bmRlcnN0b29kIGJ5IGEgbGltaXRlZCBzZXQgb2YgdHJhZGluZyBwYXJ0bmVycy4gVGhpcyBpbmhlcmVudGx5IGxpbWl0cyB0aGUgdXNlZnVsbmVzcyBvZiB0aGUgZGF0YSBpbiB0aGUgbG9uZyB0ZXJtLiBIb3dldmVyLCB0aGUgZXhpc3RpbmcgaGVhbHRoIGVjby1zeXN0ZW0gaXMgaGlnaGx5IGZyYWN0dXJlZCwgYW5kIG5vdCB5ZXQgcmVhZHkgdG8gZGVmaW5lLCBjb2xsZWN0LCBhbmQgZXhjaGFuZ2UgZGF0YSBpbiBhIGdlbmVyYWxseSBjb21wdXRhYmxlIHNlbnNlLiBXaGVyZXZlciBwb3NzaWJsZSwgaW1wbGVtZW50ZXJzIGFuZC9vciBzcGVjaWZpY2F0aW9uIHdyaXRlcnMgc2hvdWxkIGF2b2lkIHVzaW5nIHRoaXMgZWxlbWVudC4gT2Z0ZW4sIHdoZW4gdXNlZCwgdGhlIFVSTCBpcyBhIHJlZmVyZW5jZSB0byBhbiBpbXBsZW1lbnRhdGlvbiBndWlkZSB0aGF0IGRlZmluZXMgdGhlc2Ugc3BlY2lhbCBydWxlcyBhcyBwYXJ0IG9mIGl0J3MgbmFycmF0aXZlIGFsb25nIHdpdGggb3RoZXIgcHJvZmlsZXMsIHZhbHVlIHNldHMsIGV0Yy5cclxuICAgKi9cclxuICBpbXBsaWNpdFJ1bGVzPzogc3RyaW5nfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogUmVzb3VyY2UuaW1wbGljaXRSdWxlc1xyXG4gICAqL1xyXG4gIF9pbXBsaWNpdFJ1bGVzPzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIExhbmd1YWdlIGlzIHByb3ZpZGVkIHRvIHN1cHBvcnQgaW5kZXhpbmcgYW5kIGFjY2Vzc2liaWxpdHkgKHR5cGljYWxseSwgc2VydmljZXMgc3VjaCBhcyB0ZXh0IHRvIHNwZWVjaCB1c2UgdGhlIGxhbmd1YWdlIHRhZykuIFRoZSBodG1sIGxhbmd1YWdlIHRhZyBpbiB0aGUgbmFycmF0aXZlIGFwcGxpZXMgIHRvIHRoZSBuYXJyYXRpdmUuIFRoZSBsYW5ndWFnZSB0YWcgb24gdGhlIHJlc291cmNlIG1heSBiZSB1c2VkIHRvIHNwZWNpZnkgdGhlIGxhbmd1YWdlIG9mIG90aGVyIHByZXNlbnRhdGlvbnMgZ2VuZXJhdGVkIGZyb20gdGhlIGRhdGEgaW4gdGhlIHJlc291cmNlLiBOb3QgYWxsIHRoZSBjb250ZW50IGhhcyB0byBiZSBpbiB0aGUgYmFzZSBsYW5ndWFnZS4gVGhlIFJlc291cmNlLmxhbmd1YWdlIHNob3VsZCBub3QgYmUgYXNzdW1lZCB0byBhcHBseSB0byB0aGUgbmFycmF0aXZlIGF1dG9tYXRpY2FsbHkuIElmIGEgbGFuZ3VhZ2UgaXMgc3BlY2lmaWVkLCBpdCBzaG91bGQgaXQgYWxzbyBiZSBzcGVjaWZpZWQgb24gdGhlIGRpdiBlbGVtZW50IGluIHRoZSBodG1sIChzZWUgcnVsZXMgaW4gSFRNTDUgZm9yIGluZm9ybWF0aW9uIGFib3V0IHRoZSByZWxhdGlvbnNoaXAgYmV0d2VlbiB4bWw6bGFuZyBhbmQgdGhlIGh0bWwgbGFuZyBhdHRyaWJ1dGUpLlxyXG4gICAqL1xyXG4gIGxhbmd1YWdlPzogc3RyaW5nfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogUmVzb3VyY2UubGFuZ3VhZ2VcclxuICAgKi9cclxuICBfbGFuZ3VhZ2U/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbn1cclxuIl19