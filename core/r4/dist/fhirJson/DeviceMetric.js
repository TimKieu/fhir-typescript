// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR Resource: DeviceMetric
export {};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGV2aWNlTWV0cmljLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpckpzb24vRGV2aWNlTWV0cmljLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQiwrQ0FBK0M7QUFDL0Msa0NBQWtDO0FBQ2xDLDhCQUE4QiIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNC5jb3JlIHZlcnNpb246IDQuMC4xXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBSZXNvdXJjZTogRGV2aWNlTWV0cmljXHJcblxyXG5pbXBvcnQgKiBhcyBmaGlyIGZyb20gJy4uL2ZoaXJKc29uLmpzJztcclxuXHJcblxyXG4vKipcclxuICogRGVzY3JpYmVzIHRoZSBjYWxpYnJhdGlvbnMgdGhhdCBoYXZlIGJlZW4gcGVyZm9ybWVkIG9yIHRoYXQgYXJlIHJlcXVpcmVkIHRvIGJlIHBlcmZvcm1lZC5cclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgRGV2aWNlTWV0cmljQ2FsaWJyYXRpb24gZXh0ZW5kcyBmaGlyLkJhY2tib25lRWxlbWVudCB7IFxyXG4gIC8qKlxyXG4gICAqIERlc2NyaWJlcyB0aGUgdHlwZSBvZiB0aGUgY2FsaWJyYXRpb24gbWV0aG9kLlxyXG4gICAqL1xyXG4gIHR5cGU/OiAnZ2Fpbid8J29mZnNldCd8J3R3by1wb2ludCd8J3Vuc3BlY2lmaWVkJ3x1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRGVzY3JpYmVzIHRoZSBzdGF0ZSBvZiB0aGUgY2FsaWJyYXRpb24uXHJcbiAgICovXHJcbiAgc3RhdGU/OiAnY2FsaWJyYXRlZCd8J2NhbGlicmF0aW9uLXJlcXVpcmVkJ3wnbm90LWNhbGlicmF0ZWQnfCd1bnNwZWNpZmllZCd8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIERlc2NyaWJlcyB0aGUgdGltZSBsYXN0IGNhbGlicmF0aW9uIGhhcyBiZWVuIHBlcmZvcm1lZC5cclxuICAgKi9cclxuICB0aW1lPzogc3RyaW5nfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogRGV2aWNlTWV0cmljLmNhbGlicmF0aW9uLnRpbWVcclxuICAgKi9cclxuICBfdGltZT86Zmhpci5GaGlyRWxlbWVudDtcclxufVxyXG5cclxuLyoqXHJcbiAqIERlc2NyaWJlcyBhIG1lYXN1cmVtZW50LCBjYWxjdWxhdGlvbiBvciBzZXR0aW5nIGNhcGFiaWxpdHkgb2YgYSBtZWRpY2FsIGRldmljZS5cclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgRGV2aWNlTWV0cmljIGV4dGVuZHMgZmhpci5Eb21haW5SZXNvdXJjZSB7IFxyXG4gIC8qKlxyXG4gICAqIFJlc291cmNlIFR5cGUgTmFtZVxyXG4gICAqL1xyXG4gIHJlc291cmNlVHlwZTogXCJEZXZpY2VNZXRyaWNcIjtcclxuICAvKipcclxuICAgKiBGb3IgaWRlbnRpZmllcnMgYXNzaWduZWQgdG8gYSBkZXZpY2UgYnkgdGhlIGRldmljZSBvciBnYXRld2F5IHNvZnR3YXJlLCB0aGUgYHN5c3RlbWAgZWxlbWVudCBvZiB0aGUgaWRlbnRpZmllciBzaG91bGQgYmUgc2V0IHRvIHRoZSB1bmlxdWUgaWRlbnRpZmllciBvZiB0aGUgZGV2aWNlLlxyXG4gICAqL1xyXG4gIGlkZW50aWZpZXI/OiBmaGlyLklkZW50aWZpZXJbXXx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRGV2aWNlTWV0cmljLnR5cGUgY2FuIGJlIHJlZmVycmVkIHRvIGVpdGhlciBJRUVFIDExMDczLTEwMTAxIG9yIExPSU5DLlxyXG4gICAqL1xyXG4gIHR5cGU6IGZoaXIuQ29kZWFibGVDb25jZXB0fG51bGw7XHJcbiAgLyoqXHJcbiAgICogRGV2aWNlTWV0cmljLnVuaXQgY2FuIHJlZmVyIHRvIGVpdGhlciBVQ1VNIG9yIHByZWZlcmFibGUgYSBSVE1NUyBjb2Rpbmcgc3lzdGVtLlxyXG4gICAqL1xyXG4gIHVuaXQ/OiBmaGlyLkNvZGVhYmxlQ29uY2VwdHx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRGVzY3JpYmVzIHRoZSBsaW5rIHRvIHRoZSAgRGV2aWNlIHRoYXQgdGhpcyBEZXZpY2VNZXRyaWMgYmVsb25ncyB0byBhbmQgdGhhdCBjb250YWlucyBhZG1pbmlzdHJhdGl2ZSBkZXZpY2UgaW5mb3JtYXRpb24gc3VjaCBhcyBtYW51ZmFjdHVyZXIsIHNlcmlhbCBudW1iZXIsIGV0Yy5cclxuICAgKi9cclxuICBzb3VyY2U/OiBmaGlyLlJlZmVyZW5jZXx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRGVzY3JpYmVzIHRoZSBsaW5rIHRvIHRoZSAgRGV2aWNlIHRoYXQgdGhpcyBEZXZpY2VNZXRyaWMgYmVsb25ncyB0byBhbmQgdGhhdCBwcm92aWRlIGluZm9ybWF0aW9uIGFib3V0IHRoZSBsb2NhdGlvbiBvZiB0aGlzIERldmljZU1ldHJpYyBpbiB0aGUgY29udGFpbm1lbnQgc3RydWN0dXJlIG9mIHRoZSBwYXJlbnQgRGV2aWNlLiBBbiBleGFtcGxlIHdvdWxkIGJlIGEgRGV2aWNlIHRoYXQgcmVwcmVzZW50cyBhIENoYW5uZWwuIFRoaXMgcmVmZXJlbmNlIGNhbiBiZSB1c2VkIGJ5IGEgY2xpZW50IGFwcGxpY2F0aW9uIHRvIGRpc3Rpbmd1aXNoIERldmljZU1ldHJpY3MgdGhhdCBoYXZlIHRoZSBzYW1lIHR5cGUsIGJ1dCBzaG91bGQgYmUgaW50ZXJwcmV0ZWQgYmFzZWQgb24gdGhlaXIgY29udGFpbm1lbnQgbG9jYXRpb24uXHJcbiAgICovXHJcbiAgcGFyZW50PzogZmhpci5SZWZlcmVuY2V8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEluZGljYXRlcyBjdXJyZW50IG9wZXJhdGlvbmFsIHN0YXRlIG9mIHRoZSBkZXZpY2UuIEZvciBleGFtcGxlOiBPbiwgT2ZmLCBTdGFuZGJ5LCBldGMuXHJcbiAgICovXHJcbiAgb3BlcmF0aW9uYWxTdGF0dXM/OiAnZW50ZXJlZC1pbi1lcnJvcid8J29mZid8J29uJ3wnc3RhbmRieSd8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIERlc2NyaWJlcyB0aGUgY29sb3IgcmVwcmVzZW50YXRpb24gZm9yIHRoZSBtZXRyaWMuIFRoaXMgaXMgb2Z0ZW4gdXNlZCB0byBhaWQgY2xpbmljaWFucyB0byB0cmFjayBhbmQgaWRlbnRpZnkgcGFyYW1ldGVyIHR5cGVzIGJ5IGNvbG9yLiBJbiBwcmFjdGljZSwgY29uc2lkZXIgYSBQYXRpZW50IE1vbml0b3IgdGhhdCBoYXMgRUNHL0hSIGFuZCBQbGV0aCBmb3IgZXhhbXBsZTsgdGhlIHBhcmFtZXRlcnMgYXJlIGRpc3BsYXllZCBpbiBkaWZmZXJlbnQgY2hhcmFjdGVyaXN0aWMgY29sb3JzLCBzdWNoIGFzIEhSLWJsdWUsIEJQLWdyZWVuLCBhbmQgUFIgYW5kIFNwTzItIG1hZ2VudGEuXHJcbiAgICovXHJcbiAgY29sb3I/OiAnYmxhY2snfCdibHVlJ3wnY3lhbid8J2dyZWVuJ3wnbWFnZW50YSd8J3JlZCd8J3doaXRlJ3wneWVsbG93J3x1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogSW5kaWNhdGVzIHRoZSBjYXRlZ29yeSBvZiB0aGUgb2JzZXJ2YXRpb24gZ2VuZXJhdGlvbiBwcm9jZXNzLiBBIERldmljZU1ldHJpYyBjYW4gYmUgZm9yIGV4YW1wbGUgYSBzZXR0aW5nLCBtZWFzdXJlbWVudCwgb3IgY2FsY3VsYXRpb24uXHJcbiAgICovXHJcbiAgY2F0ZWdvcnk6ICdjYWxjdWxhdGlvbid8J21lYXN1cmVtZW50J3wnc2V0dGluZyd8J3Vuc3BlY2lmaWVkJ3xudWxsO1xyXG4gIC8qKlxyXG4gICAqIERlc2NyaWJlcyB0aGUgbWVhc3VyZW1lbnQgcmVwZXRpdGlvbiB0aW1lLiBUaGlzIGlzIG5vdCBuZWNlc3NhcmlseSB0aGUgc2FtZSBhcyB0aGUgdXBkYXRlIHBlcmlvZC4gVGhlIG1lYXN1cmVtZW50IHJlcGV0aXRpb24gdGltZSBjYW4gcmFuZ2UgZnJvbSBtaWxsaXNlY29uZHMgdXAgdG8gaG91cnMuIEFuIGV4YW1wbGUgZm9yIGEgbWVhc3VyZW1lbnQgcmVwZXRpdGlvbiB0aW1lIGluIHRoZSByYW5nZSBvZiBtaWxsaXNlY29uZHMgaXMgdGhlIHNhbXBsaW5nIHJhdGUgb2YgYW4gRUNHLiBBbiBleGFtcGxlIGZvciBhIG1lYXN1cmVtZW50IHJlcGV0aXRpb24gdGltZSBpbiB0aGUgcmFuZ2Ugb2YgaG91cnMgaXMgYSBOSUJQIHRoYXQgaXMgdHJpZ2dlcmVkIGF1dG9tYXRpY2FsbHkgZXZlcnkgaG91ci4gVGhlIHVwZGF0ZSBwZXJpb2QgbWF5IGJlIGRpZmZlcmVudCB0aGFuIHRoZSBtZWFzdXJlbWVudCByZXBldGl0aW9uIHRpbWUsIGlmIHRoZSBkZXZpY2UgZG9lcyBub3QgdXBkYXRlIHRoZSBwdWJsaXNoZWQgb2JzZXJ2ZWQgdmFsdWUgd2l0aCB0aGUgc2FtZSBmcmVxdWVuY3kgYXMgaXQgd2FzIG1lYXN1cmVkLlxyXG4gICAqL1xyXG4gIG1lYXN1cmVtZW50UGVyaW9kPzogZmhpci5UaW1pbmd8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIERlc2NyaWJlcyB0aGUgY2FsaWJyYXRpb25zIHRoYXQgaGF2ZSBiZWVuIHBlcmZvcm1lZCBvciB0aGF0IGFyZSByZXF1aXJlZCB0byBiZSBwZXJmb3JtZWQuXHJcbiAgICovXHJcbiAgY2FsaWJyYXRpb24/OiBmaGlyLkRldmljZU1ldHJpY0NhbGlicmF0aW9uW118dW5kZWZpbmVkO1xyXG59XHJcbiJdfQ==