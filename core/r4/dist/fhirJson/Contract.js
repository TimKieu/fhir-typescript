// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR Resource: Contract
export {};
//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"Contract.js","sourceRoot":"./src/","sources":["fhirJson/Contract.ts"],"names":[],"mappings":"AAAA,oBAAoB;AACpB,+CAA+C;AAC/C,kCAAkC;AAClC,0BAA0B","sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4.core version: 4.0.1\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR Resource: Contract\r\n\r\nimport * as fhir from '../fhirJson.js';\r\n\r\n\r\n/**\r\n * Precusory content developed with a focus and intent of supporting the formation a Contract instance, which may be associated with and transformable into a Contract.\r\n */\r\nexport interface ContractContentDefinition extends fhir.BackboneElement { \r\n  /**\r\n   * Precusory content structure and use, i.e., a boilerplate, template, application for a contract such as an insurance policy or benefits under a program, e.g., workers compensation.\r\n   */\r\n  type: fhir.CodeableConcept|null;\r\n  /**\r\n   * Detailed Precusory content type.\r\n   */\r\n  subType?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * The  individual or organization that published the Contract precursor content.\r\n   */\r\n  publisher?: fhir.Reference|undefined;\r\n  /**\r\n   * The date (and optionally time) when the contract was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the contract changes.\r\n   */\r\n  publicationDate?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Contract.contentDefinition.publicationDate\r\n   */\r\n  _publicationDate?:fhir.FhirElement;\r\n  /**\r\n   * amended | appended | cancelled | disputed | entered-in-error | executable | executed | negotiable | offered | policy | rejected | renewed | revoked | resolved | terminated.\r\n   */\r\n  publicationStatus: 'amended'|'appended'|'cancelled'|'disputed'|'entered-in-error'|'executable'|'executed'|'negotiable'|'offered'|'policy'|'rejected'|'renewed'|'resolved'|'revoked'|'terminated'|null;\r\n  /**\r\n   * Extended properties for primitive element: Contract.contentDefinition.publicationStatus\r\n   */\r\n  _publicationStatus?:fhir.FhirElement;\r\n  /**\r\n   * A copyright statement relating to Contract precursor content. Copyright statements are generally legal restrictions on the use and publishing of the Contract precursor content.\r\n   */\r\n  copyright?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Contract.contentDefinition.copyright\r\n   */\r\n  _copyright?:fhir.FhirElement;\r\n}\r\n\r\n/**\r\n * Security labels that protect the handling of information about the term and its elements, which may be specifically identified..\r\n */\r\nexport interface ContractTermSecurityLabel extends fhir.BackboneElement { \r\n  /**\r\n   * Number used to link this term or term element to the applicable Security Label.\r\n   */\r\n  number?: (number|null)[]|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Contract.term.securityLabel.number\r\n   */\r\n  _number?:(fhir.FhirElement|null)[];\r\n  /**\r\n   * Security label privacy tag that species the level of confidentiality protection required for this term and/or term elements.\r\n   */\r\n  classification: fhir.Coding|null;\r\n  /**\r\n   * Security label privacy tag that species the applicable privacy and security policies governing this term and/or term elements.\r\n   */\r\n  category?: (fhir.Coding|null)[]|undefined;\r\n  /**\r\n   * Security label privacy tag that species the manner in which term and/or term elements are to be protected.\r\n   */\r\n  control?: (fhir.Coding|null)[]|undefined;\r\n}\r\n\r\n/**\r\n * Offer Recipient.\r\n */\r\nexport interface ContractTermOfferParty extends fhir.BackboneElement { \r\n  /**\r\n   * Participant in the offer.\r\n   */\r\n  reference: (fhir.Reference|null)[]|null;\r\n  /**\r\n   * How the party participates in the offer.\r\n   */\r\n  role: fhir.CodeableConcept|null;\r\n}\r\n\r\n/**\r\n * Response to offer text.\r\n */\r\nexport interface ContractTermOfferAnswer extends fhir.BackboneElement { \r\n  /**\r\n   * Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research.\r\n   */\r\n  valueBoolean?: boolean|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Contract.term.offer.answer.value[x]\r\n   */\r\n  _valueBoolean?:fhir.FhirElement;\r\n  /**\r\n   * Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research.\r\n   */\r\n  valueDecimal?: number|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Contract.term.offer.answer.value[x]\r\n   */\r\n  _valueDecimal?:fhir.FhirElement;\r\n  /**\r\n   * Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research.\r\n   */\r\n  valueInteger?: number|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Contract.term.offer.answer.value[x]\r\n   */\r\n  _valueInteger?:fhir.FhirElement;\r\n  /**\r\n   * Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research.\r\n   */\r\n  valueDate?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Contract.term.offer.answer.value[x]\r\n   */\r\n  _valueDate?:fhir.FhirElement;\r\n  /**\r\n   * Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research.\r\n   */\r\n  valueDateTime?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Contract.term.offer.answer.value[x]\r\n   */\r\n  _valueDateTime?:fhir.FhirElement;\r\n  /**\r\n   * Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research.\r\n   */\r\n  valueTime?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Contract.term.offer.answer.value[x]\r\n   */\r\n  _valueTime?:fhir.FhirElement;\r\n  /**\r\n   * Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research.\r\n   */\r\n  valueString?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Contract.term.offer.answer.value[x]\r\n   */\r\n  _valueString?:fhir.FhirElement;\r\n  /**\r\n   * Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research.\r\n   */\r\n  valueUri?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Contract.term.offer.answer.value[x]\r\n   */\r\n  _valueUri?:fhir.FhirElement;\r\n  /**\r\n   * Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research.\r\n   */\r\n  valueAttachment?: fhir.Attachment|undefined;\r\n  /**\r\n   * Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research.\r\n   */\r\n  valueCoding?: fhir.Coding|undefined;\r\n  /**\r\n   * Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research.\r\n   */\r\n  valueQuantity?: fhir.Quantity|undefined;\r\n  /**\r\n   * Response to an offer clause or question text,  which enables selection of values to be agreed to, e.g., the period of participation, the date of occupancy of a rental, warrently duration, or whether biospecimen may be used for further research.\r\n   */\r\n  valueReference?: fhir.Reference|undefined;\r\n}\r\n\r\n/**\r\n * The matter of concern in the context of this provision of the agrement.\r\n */\r\nexport interface ContractTermOffer extends fhir.BackboneElement { \r\n  /**\r\n   * Unique identifier for this particular Contract Provision.\r\n   */\r\n  identifier?: (fhir.Identifier|null)[]|undefined;\r\n  /**\r\n   * Offer Recipient.\r\n   */\r\n  party?: (fhir.ContractTermOfferParty|null)[]|undefined;\r\n  /**\r\n   * The Contract.topic may be an application for or offer of a policy or service (e.g., uri to a consent directive form or a health insurance policy), which becomes the Contract once accepted by both the grantor and grantee. \r\n   * The Contract Resource may function simply as the computable representation of the executed contract, which may be the attached to the Contract Resource as the “binding” or as the “friendly” electronic form.  For example, a Contract Resource may be automatically populated with the values expressed in a related QuestionnaireResponse. \r\n   * However, the Contract Resource may be considered the legally binding contract if it is the only “executed” form of this contract, and includes the signatures as *The Contract Resource may function as the computable representation of an application or offer in a pre-executed Contract if the grantor has not entered any values.  In this case, it is populated with values in a “legal” form of the application or offer or by the values in an associated Questionnaire.  If the grantor has filled in the legal form or the associated Questionnaire Response, then these values are used to populate a pre-executed Contract Resource.\r\n   * If the Contract.topic is considered an application or offer, then the policy is often required to be attached as the “legal” basis for the application to ensure “informed consent” to the contract, and that any discrepancy between the application and the policy are interpreted against the policy.  Implementers should check organizational and jurisdictional policies to determine the relationship among multiple representations of a contract pre- and post-execution.\r\n   */\r\n  topic?: fhir.Reference|undefined;\r\n  /**\r\n   * Type of Contract Provision such as specific requirements, purposes for actions, obligations, prohibitions, e.g. life time maximum benefit.\r\n   */\r\n  type?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * Type of choice made by accepting party with respect to an offer made by an offeror/ grantee.\r\n   */\r\n  decision?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * How the decision about a Contract was conveyed.\r\n   */\r\n  decisionMode?: (fhir.CodeableConcept|null)[]|undefined;\r\n  /**\r\n   * Response to offer text.\r\n   */\r\n  answer?: (fhir.ContractTermOfferAnswer|null)[]|undefined;\r\n  /**\r\n   * Human readable form of this Contract Offer.\r\n   */\r\n  text?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Contract.term.offer.text\r\n   */\r\n  _text?:fhir.FhirElement;\r\n  /**\r\n   * The id of the clause or question text of the offer in the referenced questionnaire/response.\r\n   */\r\n  linkId?: (string|null)[]|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Contract.term.offer.linkId\r\n   */\r\n  _linkId?:(fhir.FhirElement|null)[];\r\n  /**\r\n   * Security labels that protects the offer.\r\n   */\r\n  securityLabelNumber?: (number|null)[]|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Contract.term.offer.securityLabelNumber\r\n   */\r\n  _securityLabelNumber?:(fhir.FhirElement|null)[];\r\n}\r\n\r\n/**\r\n * Circumstance of the asset.\r\n */\r\nexport interface ContractTermAssetContext extends fhir.BackboneElement { \r\n  /**\r\n   * Asset context reference may include the creator, custodian, or owning Person or Organization (e.g., bank, repository),  location held, e.g., building,  jurisdiction.\r\n   */\r\n  reference?: fhir.Reference|undefined;\r\n  /**\r\n   * Coded representation of the context generally or of the Referenced entity, such as the asset holder type or location.\r\n   */\r\n  code?: (fhir.CodeableConcept|null)[]|undefined;\r\n  /**\r\n   * Context description.\r\n   */\r\n  text?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Contract.term.asset.context.text\r\n   */\r\n  _text?:fhir.FhirElement;\r\n}\r\n\r\n/**\r\n * Contract Valued Item List.\r\n */\r\nexport interface ContractTermAssetValuedItem extends fhir.BackboneElement { \r\n  /**\r\n   * Specific type of Contract Valued Item that may be priced.\r\n   */\r\n  entityCodeableConcept?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * Specific type of Contract Valued Item that may be priced.\r\n   */\r\n  entityReference?: fhir.Reference|undefined;\r\n  /**\r\n   * Identifies a Contract Valued Item instance.\r\n   */\r\n  identifier?: fhir.Identifier|undefined;\r\n  /**\r\n   * Indicates the time during which this Contract ValuedItem information is effective.\r\n   */\r\n  effectiveTime?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Contract.term.asset.valuedItem.effectiveTime\r\n   */\r\n  _effectiveTime?:fhir.FhirElement;\r\n  /**\r\n   * Specifies the units by which the Contract Valued Item is measured or counted, and quantifies the countable or measurable Contract Valued Item instances.\r\n   */\r\n  quantity?: fhir.Quantity|undefined;\r\n  /**\r\n   * A Contract Valued Item unit valuation measure.\r\n   */\r\n  unitPrice?: fhir.Money|undefined;\r\n  /**\r\n   * A real number that represents a multiplier used in determining the overall value of the Contract Valued Item delivered. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.\r\n   */\r\n  factor?: number|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Contract.term.asset.valuedItem.factor\r\n   */\r\n  _factor?:fhir.FhirElement;\r\n  /**\r\n   * An amount that expresses the weighting (based on difficulty, cost and/or resource intensiveness) associated with the Contract Valued Item delivered. The concept of Points allows for assignment of point values for a Contract Valued Item, such that a monetary amount can be assigned to each point.\r\n   */\r\n  points?: number|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Contract.term.asset.valuedItem.points\r\n   */\r\n  _points?:fhir.FhirElement;\r\n  /**\r\n   * Expresses the product of the Contract Valued Item unitQuantity and the unitPriceAmt. For example, the formula: unit Quantity * unit Price (Cost per Point) * factor Number  * points = net Amount. Quantity, factor and points are assumed to be 1 if not supplied.\r\n   */\r\n  net?: fhir.Money|undefined;\r\n  /**\r\n   * Terms of valuation.\r\n   */\r\n  payment?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Contract.term.asset.valuedItem.payment\r\n   */\r\n  _payment?:fhir.FhirElement;\r\n  /**\r\n   * When payment is due.\r\n   */\r\n  paymentDate?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Contract.term.asset.valuedItem.paymentDate\r\n   */\r\n  _paymentDate?:fhir.FhirElement;\r\n  /**\r\n   * Who will make payment.\r\n   */\r\n  responsible?: fhir.Reference|undefined;\r\n  /**\r\n   * Who will receive payment.\r\n   */\r\n  recipient?: fhir.Reference|undefined;\r\n  /**\r\n   * Id  of the clause or question text related to the context of this valuedItem in the referenced form or QuestionnaireResponse.\r\n   */\r\n  linkId?: (string|null)[]|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Contract.term.asset.valuedItem.linkId\r\n   */\r\n  _linkId?:(fhir.FhirElement|null)[];\r\n  /**\r\n   * A set of security labels that define which terms are controlled by this condition.\r\n   */\r\n  securityLabelNumber?: (number|null)[]|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Contract.term.asset.valuedItem.securityLabelNumber\r\n   */\r\n  _securityLabelNumber?:(fhir.FhirElement|null)[];\r\n}\r\n\r\n/**\r\n * Contract Term Asset List.\r\n */\r\nexport interface ContractTermAsset extends fhir.BackboneElement { \r\n  /**\r\n   * Differentiates the kind of the asset .\r\n   */\r\n  scope?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * Target entity type about which the term may be concerned.\r\n   */\r\n  type?: (fhir.CodeableConcept|null)[]|undefined;\r\n  /**\r\n   * Associated entities.\r\n   */\r\n  typeReference?: (fhir.Reference|null)[]|undefined;\r\n  /**\r\n   * May be a subtype or part of an offered asset.\r\n   */\r\n  subtype?: (fhir.CodeableConcept|null)[]|undefined;\r\n  /**\r\n   * Specifies the applicability of the term to an asset resource instance, and instances it refers to orinstances that refer to it, and/or are owned by the offeree.\r\n   */\r\n  relationship?: fhir.Coding|undefined;\r\n  /**\r\n   * Circumstance of the asset.\r\n   */\r\n  context?: (fhir.ContractTermAssetContext|null)[]|undefined;\r\n  /**\r\n   * Description of the quality and completeness of the asset that imay be a factor in its valuation.\r\n   */\r\n  condition?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Contract.term.asset.condition\r\n   */\r\n  _condition?:fhir.FhirElement;\r\n  /**\r\n   * Type of Asset availability for use or ownership.\r\n   */\r\n  periodType?: (fhir.CodeableConcept|null)[]|undefined;\r\n  /**\r\n   * Asset relevant contractual time period.\r\n   */\r\n  period?: (fhir.Period|null)[]|undefined;\r\n  /**\r\n   * Time period of asset use.\r\n   */\r\n  usePeriod?: (fhir.Period|null)[]|undefined;\r\n  /**\r\n   * Clause or question text (Prose Object) concerning the asset in a linked form, such as a QuestionnaireResponse used in the formation of the contract.\r\n   */\r\n  text?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Contract.term.asset.text\r\n   */\r\n  _text?:fhir.FhirElement;\r\n  /**\r\n   * Id [identifier??] of the clause or question text about the asset in the referenced form or QuestionnaireResponse.\r\n   */\r\n  linkId?: (string|null)[]|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Contract.term.asset.linkId\r\n   */\r\n  _linkId?:(fhir.FhirElement|null)[];\r\n  /**\r\n   * Response to assets.\r\n   */\r\n  answer?: (fhir.ContractTermOfferAnswer|null)[]|undefined;\r\n  /**\r\n   * Security labels that protects the asset.\r\n   */\r\n  securityLabelNumber?: (number|null)[]|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Contract.term.asset.securityLabelNumber\r\n   */\r\n  _securityLabelNumber?:(fhir.FhirElement|null)[];\r\n  /**\r\n   * Contract Valued Item List.\r\n   */\r\n  valuedItem?: (fhir.ContractTermAssetValuedItem|null)[]|undefined;\r\n}\r\n\r\n/**\r\n * Entity of the action.\r\n */\r\nexport interface ContractTermActionSubject extends fhir.BackboneElement { \r\n  /**\r\n   * The entity the action is performed or not performed on or for.\r\n   */\r\n  reference: (fhir.Reference|null)[]|null;\r\n  /**\r\n   * Role type of agent assigned roles in this Contract.\r\n   */\r\n  role?: fhir.CodeableConcept|undefined;\r\n}\r\n\r\n/**\r\n * Several agents may be associated (i.e. has some responsibility for an activity) with an activity and vice-versa.\r\n * For example, in cases of actions initiated by one user for other users, or in events that involve more than one user, hardware device, software, or system process. However, only one user may be the initiator/requestor for the event.\r\n */\r\nexport interface ContractTermAction extends fhir.BackboneElement { \r\n  /**\r\n   * True if the term prohibits the  action.\r\n   */\r\n  doNotPerform?: boolean|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Contract.term.action.doNotPerform\r\n   */\r\n  _doNotPerform?:fhir.FhirElement;\r\n  /**\r\n   * Activity or service obligation to be done or not done, performed or not performed, effectuated or not by this Contract term.\r\n   */\r\n  type: fhir.CodeableConcept|null;\r\n  /**\r\n   * Entity of the action.\r\n   */\r\n  subject?: (fhir.ContractTermActionSubject|null)[]|undefined;\r\n  /**\r\n   * Reason or purpose for the action stipulated by this Contract Provision.\r\n   */\r\n  intent: fhir.CodeableConcept|null;\r\n  /**\r\n   * Id [identifier??] of the clause or question text related to this action in the referenced form or QuestionnaireResponse.\r\n   */\r\n  linkId?: (string|null)[]|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Contract.term.action.linkId\r\n   */\r\n  _linkId?:(fhir.FhirElement|null)[];\r\n  /**\r\n   * Current state of the term action.\r\n   */\r\n  status: fhir.CodeableConcept|null;\r\n  /**\r\n   * Encounter or Episode with primary association to specified term activity.\r\n   */\r\n  context?: fhir.Reference|undefined;\r\n  /**\r\n   * Id [identifier??] of the clause or question text related to the requester of this action in the referenced form or QuestionnaireResponse.\r\n   */\r\n  contextLinkId?: (string|null)[]|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Contract.term.action.contextLinkId\r\n   */\r\n  _contextLinkId?:(fhir.FhirElement|null)[];\r\n  /**\r\n   * When action happens.\r\n   */\r\n  occurrenceDateTime?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Contract.term.action.occurrence[x]\r\n   */\r\n  _occurrenceDateTime?:fhir.FhirElement;\r\n  /**\r\n   * When action happens.\r\n   */\r\n  occurrencePeriod?: fhir.Period|undefined;\r\n  /**\r\n   * When action happens.\r\n   */\r\n  occurrenceTiming?: fhir.Timing|undefined;\r\n  /**\r\n   * Who or what initiated the action and has responsibility for its activation.\r\n   */\r\n  requester?: (fhir.Reference|null)[]|undefined;\r\n  /**\r\n   * Id [identifier??] of the clause or question text related to the requester of this action in the referenced form or QuestionnaireResponse.\r\n   */\r\n  requesterLinkId?: (string|null)[]|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Contract.term.action.requesterLinkId\r\n   */\r\n  _requesterLinkId?:(fhir.FhirElement|null)[];\r\n  /**\r\n   * The type of individual that is desired or required to perform or not perform the action.\r\n   */\r\n  performerType?: (fhir.CodeableConcept|null)[]|undefined;\r\n  /**\r\n   * The type of role or competency of an individual desired or required to perform or not perform the action.\r\n   */\r\n  performerRole?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * Indicates who or what is being asked to perform (or not perform) the ction.\r\n   */\r\n  performer?: fhir.Reference|undefined;\r\n  /**\r\n   * Id [identifier??] of the clause or question text related to the reason type or reference of this  action in the referenced form or QuestionnaireResponse.\r\n   */\r\n  performerLinkId?: (string|null)[]|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Contract.term.action.performerLinkId\r\n   */\r\n  _performerLinkId?:(fhir.FhirElement|null)[];\r\n  /**\r\n   * Rationale for the action to be performed or not performed. Describes why the action is permitted or prohibited.\r\n   */\r\n  reasonCode?: (fhir.CodeableConcept|null)[]|undefined;\r\n  /**\r\n   * Indicates another resource whose existence justifies permitting or not permitting this action.\r\n   */\r\n  reasonReference?: (fhir.Reference|null)[]|undefined;\r\n  /**\r\n   * Describes why the action is to be performed or not performed in textual form.\r\n   */\r\n  reason?: (string|null)[]|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Contract.term.action.reason\r\n   */\r\n  _reason?:(fhir.FhirElement|null)[];\r\n  /**\r\n   * Id [identifier??] of the clause or question text related to the reason type or reference of this  action in the referenced form or QuestionnaireResponse.\r\n   */\r\n  reasonLinkId?: (string|null)[]|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Contract.term.action.reasonLinkId\r\n   */\r\n  _reasonLinkId?:(fhir.FhirElement|null)[];\r\n  /**\r\n   * Comments made about the term action made by the requester, performer, subject or other participants.\r\n   */\r\n  note?: (fhir.Annotation|null)[]|undefined;\r\n  /**\r\n   * Security labels that protects the action.\r\n   */\r\n  securityLabelNumber?: (number|null)[]|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Contract.term.action.securityLabelNumber\r\n   */\r\n  _securityLabelNumber?:(fhir.FhirElement|null)[];\r\n}\r\n\r\n/**\r\n * One or more Contract Provisions, which may be related and conveyed as a group, and may contain nested groups.\r\n */\r\nexport interface ContractTerm extends fhir.BackboneElement { \r\n  /**\r\n   * Unique identifier for this particular Contract Provision.\r\n   */\r\n  identifier?: fhir.Identifier|undefined;\r\n  /**\r\n   * When this Contract Provision was issued.\r\n   */\r\n  issued?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Contract.term.issued\r\n   */\r\n  _issued?:fhir.FhirElement;\r\n  /**\r\n   * Relevant time or time-period when this Contract Provision is applicable.\r\n   */\r\n  applies?: fhir.Period|undefined;\r\n  /**\r\n   * The entity that the term applies to.\r\n   */\r\n  topicCodeableConcept?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * The entity that the term applies to.\r\n   */\r\n  topicReference?: fhir.Reference|undefined;\r\n  /**\r\n   * A legal clause or condition contained within a contract that requires one or both parties to perform a particular requirement by some specified time or prevents one or both parties from performing a particular requirement by some specified time.\r\n   */\r\n  type?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * A specialized legal clause or condition based on overarching contract type.\r\n   */\r\n  subType?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * Statement of a provision in a policy or a contract.\r\n   */\r\n  text?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Contract.term.text\r\n   */\r\n  _text?:fhir.FhirElement;\r\n  /**\r\n   * Security labels that protect the handling of information about the term and its elements, which may be specifically identified..\r\n   */\r\n  securityLabel?: (fhir.ContractTermSecurityLabel|null)[]|undefined;\r\n  /**\r\n   * The matter of concern in the context of this provision of the agrement.\r\n   */\r\n  offer: fhir.ContractTermOffer|null;\r\n  /**\r\n   * Contract Term Asset List.\r\n   */\r\n  asset?: (fhir.ContractTermAsset|null)[]|undefined;\r\n  /**\r\n   * Several agents may be associated (i.e. has some responsibility for an activity) with an activity and vice-versa.\r\n   * For example, in cases of actions initiated by one user for other users, or in events that involve more than one user, hardware device, software, or system process. However, only one user may be the initiator/requestor for the event.\r\n   */\r\n  action?: (fhir.ContractTermAction|null)[]|undefined;\r\n  /**\r\n   * Nested group of Contract Provisions.\r\n   */\r\n  group?: (fhir.ContractTerm|null)[]|undefined;\r\n}\r\n\r\n/**\r\n * Signers who are principal parties to the contract are bound by the Contract.activity related to the Contract.topic, and the Contract.term(s), which either extend or restrict the overall action on the topic by, for example, stipulating specific policies or obligations constraining actions, action reason, or agents with respect to some or all of the topic.\r\n * For example, specifying how policies or obligations shall constrain actions and action reasons permitted or denied on all or a subset of the Contract.topic (e.g., all or a portion of property being transferred by the contract), agents (e.g., who can resell, assign interests, or alter the property being transferred by the contract), actions, and action reasons; or with respect to Contract.terms, stipulating, extending, or limiting the Contract.period of applicability or valuation of items under consideration.\r\n */\r\nexport interface ContractSigner extends fhir.BackboneElement { \r\n  /**\r\n   * Role of this Contract signer, e.g. notary, grantee.\r\n   */\r\n  type: fhir.Coding|null;\r\n  /**\r\n   * Party which is a signator to this Contract.\r\n   */\r\n  party: fhir.Reference|null;\r\n  /**\r\n   * Legally binding Contract DSIG signature contents in Base64.\r\n   */\r\n  signature: (fhir.Signature|null)[]|null;\r\n}\r\n\r\n/**\r\n * The \"patient friendly language\" versionof the Contract in whole or in parts. \"Patient friendly language\" means the representation of the Contract and Contract Provisions in a manner that is readily accessible and understandable by a layperson in accordance with best practices for communication styles that ensure that those agreeing to or signing the Contract understand the roles, actions, obligations, responsibilities, and implication of the agreement.\r\n */\r\nexport interface ContractFriendly extends fhir.BackboneElement { \r\n  /**\r\n   * Human readable rendering of this Contract in a format and representation intended to enhance comprehension and ensure understandability.\r\n   */\r\n  contentAttachment?: fhir.Attachment|undefined;\r\n  /**\r\n   * Human readable rendering of this Contract in a format and representation intended to enhance comprehension and ensure understandability.\r\n   */\r\n  contentReference?: fhir.Reference|undefined;\r\n}\r\n\r\n/**\r\n * List of Legal expressions or representations of this Contract.\r\n */\r\nexport interface ContractLegal extends fhir.BackboneElement { \r\n  /**\r\n   * Contract legal text in human renderable form.\r\n   */\r\n  contentAttachment?: fhir.Attachment|undefined;\r\n  /**\r\n   * Contract legal text in human renderable form.\r\n   */\r\n  contentReference?: fhir.Reference|undefined;\r\n}\r\n\r\n/**\r\n * List of Computable Policy Rule Language Representations of this Contract.\r\n */\r\nexport interface ContractRule extends fhir.BackboneElement { \r\n  /**\r\n   * Computable Contract conveyed using a policy rule language (e.g. XACML, DKAL, SecPal).\r\n   */\r\n  contentAttachment?: fhir.Attachment|undefined;\r\n  /**\r\n   * Computable Contract conveyed using a policy rule language (e.g. XACML, DKAL, SecPal).\r\n   */\r\n  contentReference?: fhir.Reference|undefined;\r\n}\r\n\r\n/**\r\n * Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.\r\n */\r\nexport interface Contract extends fhir.DomainResource { \r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  resourceType: \"Contract\"|null;\r\n  /**\r\n   * Unique identifier for this Contract or a derivative that references a Source Contract.\r\n   */\r\n  identifier?: (fhir.Identifier|null)[]|undefined;\r\n  /**\r\n   * Used in a domain that uses a supplied contract repository.\r\n   */\r\n  url?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Contract.url\r\n   */\r\n  _url?:fhir.FhirElement;\r\n  /**\r\n   * Note -  This is a business versionId, not a resource version id (see discussion http://build.fhir.org/resource.html#versions) \r\n   * Comments - There may be different contract instances that have the same identifier but different versions. The version can be appended to the url in a reference to allow a reference to a particular business version of the plan definition with the format [url]|[version].\r\n   */\r\n  version?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Contract.version\r\n   */\r\n  _version?:fhir.FhirElement;\r\n  /**\r\n   * This element is labeled as a modifier because the status contains codes that mark the contract as not currently valid or active.\r\n   */\r\n  status?: 'amended'|'appended'|'cancelled'|'disputed'|'entered-in-error'|'executable'|'executed'|'negotiable'|'offered'|'policy'|'rejected'|'renewed'|'resolved'|'revoked'|'terminated'|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Contract.status\r\n   */\r\n  _status?:fhir.FhirElement;\r\n  /**\r\n   * Legal states of the formation of a legal instrument, which is a formally executed written document that can be formally attributed to its author, records and formally expresses a legally enforceable act, process, or contractual duty, obligation, or right, and therefore evidences that act, process, or agreement.\r\n   */\r\n  legalState?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * The URL pointing to a FHIR-defined Contract Definition that is adhered to in whole or part by this Contract.\r\n   */\r\n  instantiatesCanonical?: fhir.Reference|undefined;\r\n  /**\r\n   * The URL pointing to an externally maintained definition that is adhered to in whole or in part by this Contract.\r\n   */\r\n  instantiatesUri?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Contract.instantiatesUri\r\n   */\r\n  _instantiatesUri?:fhir.FhirElement;\r\n  /**\r\n   * The minimal content derived from the basal information source at a specific stage in its lifecycle.\r\n   */\r\n  contentDerivative?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * When this  Contract was issued.\r\n   */\r\n  issued?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Contract.issued\r\n   */\r\n  _issued?:fhir.FhirElement;\r\n  /**\r\n   * Relevant time or time-period when this Contract is applicable.\r\n   */\r\n  applies?: fhir.Period|undefined;\r\n  /**\r\n   * Event resulting in discontinuation or termination of this Contract instance by one or more parties to the contract.\r\n   */\r\n  expirationType?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * The Contract.subject is an entity that has some role with respect to the Contract.topic and Contract.topic.term, which is of focal interest to the parties to the contract and likely impacted in a significant way by the Contract.action/Contract.action.reason and the Contract.term.action/Contract.action.reason. \r\n   * In many cases, the Contract.subject is a Contract.signer if the subject is an adult; has a legal interest in the contract; and incompetent to participate in the contract agreement.\r\n   */\r\n  subject?: (fhir.Reference|null)[]|undefined;\r\n  /**\r\n   * A formally or informally recognized grouping of people, principals, organizations, or jurisdictions formed for the purpose of achieving some form of collective action such as the promulgation, administration and enforcement of contracts and policies.\r\n   */\r\n  authority?: (fhir.Reference|null)[]|undefined;\r\n  /**\r\n   * Recognized governance framework or system operating with a circumscribed scope in accordance with specified principles, policies, processes or procedures for managing rights, actions, or behaviors of parties or principals relative to resources.\r\n   */\r\n  domain?: (fhir.Reference|null)[]|undefined;\r\n  /**\r\n   * Sites in which the contract is complied with,  exercised, or in force.\r\n   */\r\n  site?: (fhir.Reference|null)[]|undefined;\r\n  /**\r\n   * The name is not expected to be globally unique. The name should be a simple alphanumeric type name to ensure that it is machine-processing friendly.\r\n   */\r\n  name?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Contract.name\r\n   */\r\n  _name?:fhir.FhirElement;\r\n  /**\r\n   * A short, descriptive, user-friendly title for this Contract definition, derivative, or instance in any legal state.t giving additional information about its content.\r\n   */\r\n  title?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Contract.title\r\n   */\r\n  _title?:fhir.FhirElement;\r\n  /**\r\n   * An explanatory or alternate user-friendly title for this Contract definition, derivative, or instance in any legal state.t giving additional information about its content.\r\n   */\r\n  subtitle?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Contract.subtitle\r\n   */\r\n  _subtitle?:fhir.FhirElement;\r\n  /**\r\n   * Alternative representation of the title for this Contract definition, derivative, or instance in any legal state., e.g., a domain specific contract number related to legislation.\r\n   */\r\n  alias?: (string|null)[]|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Contract.alias\r\n   */\r\n  _alias?:(fhir.FhirElement|null)[];\r\n  /**\r\n   * The individual or organization that authored the Contract definition, derivative, or instance in any legal state.\r\n   */\r\n  author?: fhir.Reference|undefined;\r\n  /**\r\n   * A selector of legal concerns for this Contract definition, derivative, or instance in any legal state.\r\n   */\r\n  scope?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * Narrows the range of legal concerns to focus on the achievement of specific contractual objectives.\r\n   */\r\n  topicCodeableConcept?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * Narrows the range of legal concerns to focus on the achievement of specific contractual objectives.\r\n   */\r\n  topicReference?: fhir.Reference|undefined;\r\n  /**\r\n   * A high-level category for the legal instrument, whether constructed as a Contract definition, derivative, or instance in any legal state.  Provides additional information about its content within the context of the Contract's scope to distinguish the kinds of systems that would be interested in the contract.\r\n   */\r\n  type?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * Sub-category for the Contract that distinguishes the kinds of systems that would be interested in the Contract within the context of the Contract's scope.\r\n   */\r\n  subType?: (fhir.CodeableConcept|null)[]|undefined;\r\n  /**\r\n   * Precusory content developed with a focus and intent of supporting the formation a Contract instance, which may be associated with and transformable into a Contract.\r\n   */\r\n  contentDefinition?: fhir.ContractContentDefinition|undefined;\r\n  /**\r\n   * One or more Contract Provisions, which may be related and conveyed as a group, and may contain nested groups.\r\n   */\r\n  term?: (fhir.ContractTerm|null)[]|undefined;\r\n  /**\r\n   * Information that may be needed by/relevant to the performer in their execution of this term action.\r\n   */\r\n  supportingInfo?: (fhir.Reference|null)[]|undefined;\r\n  /**\r\n   * Links to Provenance records for past versions of this Contract definition, derivative, or instance, which identify key state transitions or updates that are likely to be relevant to a user looking at the current version of the Contract.  The Provence.entity indicates the target that was changed in the update. http://build.fhir.org/provenance-definitions.html#Provenance.entity.\r\n   */\r\n  relevantHistory?: (fhir.Reference|null)[]|undefined;\r\n  /**\r\n   * Signers who are principal parties to the contract are bound by the Contract.activity related to the Contract.topic, and the Contract.term(s), which either extend or restrict the overall action on the topic by, for example, stipulating specific policies or obligations constraining actions, action reason, or agents with respect to some or all of the topic.\r\n   * For example, specifying how policies or obligations shall constrain actions and action reasons permitted or denied on all or a subset of the Contract.topic (e.g., all or a portion of property being transferred by the contract), agents (e.g., who can resell, assign interests, or alter the property being transferred by the contract), actions, and action reasons; or with respect to Contract.terms, stipulating, extending, or limiting the Contract.period of applicability or valuation of items under consideration.\r\n   */\r\n  signer?: (fhir.ContractSigner|null)[]|undefined;\r\n  /**\r\n   * The \"patient friendly language\" versionof the Contract in whole or in parts. \"Patient friendly language\" means the representation of the Contract and Contract Provisions in a manner that is readily accessible and understandable by a layperson in accordance with best practices for communication styles that ensure that those agreeing to or signing the Contract understand the roles, actions, obligations, responsibilities, and implication of the agreement.\r\n   */\r\n  friendly?: (fhir.ContractFriendly|null)[]|undefined;\r\n  /**\r\n   * List of Legal expressions or representations of this Contract.\r\n   */\r\n  legal?: (fhir.ContractLegal|null)[]|undefined;\r\n  /**\r\n   * List of Computable Policy Rule Language Representations of this Contract.\r\n   */\r\n  rule?: (fhir.ContractRule|null)[]|undefined;\r\n  /**\r\n   * Legally binding Contract: This is the signed and legally recognized representation of the Contract, which is considered the \"source of truth\" and which would be the basis for legal action related to enforcement of this Contract.\r\n   */\r\n  legallyBindingAttachment?: fhir.Attachment|undefined;\r\n  /**\r\n   * Legally binding Contract: This is the signed and legally recognized representation of the Contract, which is considered the \"source of truth\" and which would be the basis for legal action related to enforcement of this Contract.\r\n   */\r\n  legallyBindingReference?: fhir.Reference|undefined;\r\n}\r\n"]}