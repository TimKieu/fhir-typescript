// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR Resource: MessageHeader
export {};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWVzc2FnZUhlYWRlci5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJKc29uL01lc3NhZ2VIZWFkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLCtDQUErQztBQUMvQyxrQ0FBa0M7QUFDbEMsK0JBQStCIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0LmNvcmUgdmVyc2lvbjogNC4wLjFcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFJlc291cmNlOiBNZXNzYWdlSGVhZGVyXHJcblxyXG5pbXBvcnQgKiBhcyBmaGlyIGZyb20gJy4uL2ZoaXJKc29uLmpzJztcclxuXHJcblxyXG4vKipcclxuICogVGhlcmUgU0hPVUxEIGJlIGF0IGxlYXN0IG9uZSBkZXN0aW5hdGlvbiwgYnV0IGluIHNvbWUgY2lyY3Vtc3RhbmNlcywgdGhlIHNvdXJjZSBzeXN0ZW0gaXMgdW5hd2FyZSBvZiBhbnkgcGFydGljdWxhciBkZXN0aW5hdGlvbiBzeXN0ZW0uXHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIE1lc3NhZ2VIZWFkZXJEZXN0aW5hdGlvbiBleHRlbmRzIGZoaXIuQmFja2JvbmVFbGVtZW50IHsgXHJcbiAgLyoqXHJcbiAgICogSHVtYW4tcmVhZGFibGUgbmFtZSBmb3IgdGhlIHRhcmdldCBzeXN0ZW0uXHJcbiAgICovXHJcbiAgbmFtZT86IHN0cmluZ3x1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IE1lc3NhZ2VIZWFkZXIuZGVzdGluYXRpb24ubmFtZVxyXG4gICAqL1xyXG4gIF9uYW1lPzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIElkZW50aWZpZXMgdGhlIHRhcmdldCBlbmQgc3lzdGVtIGluIHNpdHVhdGlvbnMgd2hlcmUgdGhlIGluaXRpYWwgbWVzc2FnZSB0cmFuc21pc3Npb24gaXMgdG8gYW4gaW50ZXJtZWRpYXJ5IHN5c3RlbS5cclxuICAgKi9cclxuICB0YXJnZXQ/OiBmaGlyLlJlZmVyZW5jZXx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogVGhlIGlkIG1heSBiZSBhIG5vbi1yZXNvbHZhYmxlIFVSSSBmb3Igc3lzdGVtcyB0aGF0IGRvIG5vdCB1c2Ugc3RhbmRhcmQgbmV0d29yay1iYXNlZCBhZGRyZXNzZXMuXHJcbiAgICovXHJcbiAgZW5kcG9pbnQ6IHN0cmluZ3xudWxsO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBNZXNzYWdlSGVhZGVyLmRlc3RpbmF0aW9uLmVuZHBvaW50XHJcbiAgICovXHJcbiAgX2VuZHBvaW50PzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIEFsbG93cyBkYXRhIGNvbnZleWVkIGJ5IGEgbWVzc2FnZSB0byBiZSBhZGRyZXNzZWQgdG8gYSBwYXJ0aWN1bGFyIHBlcnNvbiBvciBkZXBhcnRtZW50IHdoZW4gcm91dGluZyB0byBhIHNwZWNpZmljIGFwcGxpY2F0aW9uIGlzbid0IHN1ZmZpY2llbnQuXHJcbiAgICovXHJcbiAgcmVjZWl2ZXI/OiBmaGlyLlJlZmVyZW5jZXx1bmRlZmluZWQ7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBUaGUgc291cmNlIGFwcGxpY2F0aW9uIGZyb20gd2hpY2ggdGhpcyBtZXNzYWdlIG9yaWdpbmF0ZWQuXHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIE1lc3NhZ2VIZWFkZXJTb3VyY2UgZXh0ZW5kcyBmaGlyLkJhY2tib25lRWxlbWVudCB7IFxyXG4gIC8qKlxyXG4gICAqIEh1bWFuLXJlYWRhYmxlIG5hbWUgZm9yIHRoZSBzb3VyY2Ugc3lzdGVtLlxyXG4gICAqL1xyXG4gIG5hbWU/OiBzdHJpbmd8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBNZXNzYWdlSGVhZGVyLnNvdXJjZS5uYW1lXHJcbiAgICovXHJcbiAgX25hbWU/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbiAgLyoqXHJcbiAgICogTWF5IGluY2x1ZGUgY29uZmlndXJhdGlvbiBvciBvdGhlciBpbmZvcm1hdGlvbiB1c2VmdWwgaW4gZGVidWdnaW5nLlxyXG4gICAqL1xyXG4gIHNvZnR3YXJlPzogc3RyaW5nfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogTWVzc2FnZUhlYWRlci5zb3VyY2Uuc29mdHdhcmVcclxuICAgKi9cclxuICBfc29mdHdhcmU/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbiAgLyoqXHJcbiAgICogQ2FuIGNvbnZleSB2ZXJzaW9ucyBvZiBtdWx0aXBsZSBzeXN0ZW1zIGluIHNpdHVhdGlvbnMgd2hlcmUgYSBtZXNzYWdlIHBhc3NlcyB0aHJvdWdoIG11bHRpcGxlIGhhbmRzLlxyXG4gICAqL1xyXG4gIHZlcnNpb24/OiBzdHJpbmd8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBNZXNzYWdlSGVhZGVyLnNvdXJjZS52ZXJzaW9uXHJcbiAgICovXHJcbiAgX3ZlcnNpb24/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbiAgLyoqXHJcbiAgICogQW4gZS1tYWlsLCBwaG9uZSwgd2Vic2l0ZSBvciBvdGhlciBjb250YWN0IHBvaW50IHRvIHVzZSB0byByZXNvbHZlIGlzc3VlcyB3aXRoIG1lc3NhZ2UgY29tbXVuaWNhdGlvbnMuXHJcbiAgICovXHJcbiAgY29udGFjdD86IGZoaXIuQ29udGFjdFBvaW50fHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBUaGUgaWQgbWF5IGJlIGEgbm9uLXJlc29sdmFibGUgVVJJIGZvciBzeXN0ZW1zIHRoYXQgZG8gbm90IHVzZSBzdGFuZGFyZCBuZXR3b3JrLWJhc2VkIGFkZHJlc3Nlcy5cclxuICAgKi9cclxuICBlbmRwb2ludDogc3RyaW5nfG51bGw7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IE1lc3NhZ2VIZWFkZXIuc291cmNlLmVuZHBvaW50XHJcbiAgICovXHJcbiAgX2VuZHBvaW50PzpmaGlyLkZoaXJFbGVtZW50O1xyXG59XHJcblxyXG4vKipcclxuICogSW5mb3JtYXRpb24gYWJvdXQgdGhlIG1lc3NhZ2UgdGhhdCB0aGlzIG1lc3NhZ2UgaXMgYSByZXNwb25zZSB0by4gIE9ubHkgcHJlc2VudCBpZiB0aGlzIG1lc3NhZ2UgaXMgYSByZXNwb25zZS5cclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgTWVzc2FnZUhlYWRlclJlc3BvbnNlIGV4dGVuZHMgZmhpci5CYWNrYm9uZUVsZW1lbnQgeyBcclxuICAvKipcclxuICAgKiBUaGUgTWVzc2FnZUhlYWRlci5pZCBvZiB0aGUgbWVzc2FnZSB0byB3aGljaCB0aGlzIG1lc3NhZ2UgaXMgYSByZXNwb25zZS5cclxuICAgKi9cclxuICBpZGVudGlmaWVyOiBzdHJpbmd8bnVsbDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogTWVzc2FnZUhlYWRlci5yZXNwb25zZS5pZGVudGlmaWVyXHJcbiAgICovXHJcbiAgX2lkZW50aWZpZXI/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbiAgLyoqXHJcbiAgICogVGhpcyBpcyBhIGdlbmVyaWMgcmVzcG9uc2UgdG8gdGhlIHJlcXVlc3QgbWVzc2FnZS4gU3BlY2lmaWMgZGF0YSBmb3IgdGhlIHJlc3BvbnNlIHdpbGwgYmUgZm91bmQgaW4gTWVzc2FnZUhlYWRlci5mb2N1cy5cclxuICAgKi9cclxuICBjb2RlOiAnZmF0YWwtZXJyb3InfCdvayd8J3RyYW5zaWVudC1lcnJvcid8bnVsbDtcclxuICAvKipcclxuICAgKiBUaGlzIFNIQUxMIGJlIGNvbnRhaW5lZCBpbiB0aGUgYnVuZGxlLiBJZiBhbnkgb2YgdGhlIGlzc3VlcyBhcmUgZXJyb3JzLCB0aGUgcmVzcG9uc2UgY29kZSBTSEFMTCBiZSBhbiBlcnJvci5cclxuICAgKi9cclxuICBkZXRhaWxzPzogZmhpci5SZWZlcmVuY2V8dW5kZWZpbmVkO1xyXG59XHJcblxyXG4vKipcclxuICogVGhlIGhlYWRlciBmb3IgYSBtZXNzYWdlIGV4Y2hhbmdlIHRoYXQgaXMgZWl0aGVyIHJlcXVlc3Rpbmcgb3IgcmVzcG9uZGluZyB0byBhbiBhY3Rpb24uICBUaGUgcmVmZXJlbmNlKHMpIHRoYXQgYXJlIHRoZSBzdWJqZWN0IG9mIHRoZSBhY3Rpb24gYXMgd2VsbCBhcyBvdGhlciBpbmZvcm1hdGlvbiByZWxhdGVkIHRvIHRoZSBhY3Rpb24gYXJlIHR5cGljYWxseSB0cmFuc21pdHRlZCBpbiBhIGJ1bmRsZSBpbiB3aGljaCB0aGUgTWVzc2FnZUhlYWRlciByZXNvdXJjZSBpbnN0YW5jZSBpcyB0aGUgZmlyc3QgcmVzb3VyY2UgaW4gdGhlIGJ1bmRsZS5cclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgTWVzc2FnZUhlYWRlciBleHRlbmRzIGZoaXIuRG9tYWluUmVzb3VyY2UgeyBcclxuICAvKipcclxuICAgKiBSZXNvdXJjZSBUeXBlIE5hbWVcclxuICAgKi9cclxuICByZXNvdXJjZVR5cGU6IFwiTWVzc2FnZUhlYWRlclwiO1xyXG4gIC8qKlxyXG4gICAqIFRoZSB0aW1lIG9mIHRoZSBldmVudCB3aWxsIGJlIGZvdW5kIGluIHRoZSBmb2N1cyByZXNvdXJjZS4gVGhlIHRpbWUgb2YgdGhlIG1lc3NhZ2Ugd2lsbCBiZSBmb3VuZCBpbiBbQnVuZGxlLnRpbWVzdGFtcF0oYnVuZGxlLWRlZmluaXRpb25zLmh0bWwjQnVuZGxlLnRpbWVzdGFtcCkuXHJcbiAgICovXHJcbiAgZXZlbnRDb2Rpbmc/OiBmaGlyLkNvZGluZ3x1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogVGhlIHRpbWUgb2YgdGhlIGV2ZW50IHdpbGwgYmUgZm91bmQgaW4gdGhlIGZvY3VzIHJlc291cmNlLiBUaGUgdGltZSBvZiB0aGUgbWVzc2FnZSB3aWxsIGJlIGZvdW5kIGluIFtCdW5kbGUudGltZXN0YW1wXShidW5kbGUtZGVmaW5pdGlvbnMuaHRtbCNCdW5kbGUudGltZXN0YW1wKS5cclxuICAgKi9cclxuICBldmVudFVyaT86IHN0cmluZ3x1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IE1lc3NhZ2VIZWFkZXIuZXZlbnRbeF1cclxuICAgKi9cclxuICBfZXZlbnRVcmk/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbiAgLyoqXHJcbiAgICogVGhlcmUgU0hPVUxEIGJlIGF0IGxlYXN0IG9uZSBkZXN0aW5hdGlvbiwgYnV0IGluIHNvbWUgY2lyY3Vtc3RhbmNlcywgdGhlIHNvdXJjZSBzeXN0ZW0gaXMgdW5hd2FyZSBvZiBhbnkgcGFydGljdWxhciBkZXN0aW5hdGlvbiBzeXN0ZW0uXHJcbiAgICovXHJcbiAgZGVzdGluYXRpb24/OiBmaGlyLk1lc3NhZ2VIZWFkZXJEZXN0aW5hdGlvbltdfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBVc2UgY2FzZSBpcyBmb3Igd2hlcmUgYSAodHJ1c3RlZCkgc2VuZGluZyBzeXN0ZW0gaXMgcmVzcG9uc2libGUgZm9yIG11bHRpcGxlIG9yZ2FuaXphdGlvbnMsIGFuZCB0aGVyZWZvcmUgY2Fubm90IGRpZmZlcmVudGlhdGUgYmFzZWQgb24gc291cmNlIGVuZHBvaW50IC8gYXV0aGVudGljYXRpb24gYWxvbmUuXHJcbiAgICovXHJcbiAgc2VuZGVyPzogZmhpci5SZWZlcmVuY2V8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIFVzdWFsbHkgb25seSBmb3IgdGhlIHJlcXVlc3QgYnV0IGNhbiBiZSB1c2VkIGluIGEgcmVzcG9uc2UuXHJcbiAgICovXHJcbiAgZW50ZXJlcj86IGZoaXIuUmVmZXJlbmNlfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBVc3VhbGx5IG9ubHkgZm9yIHRoZSByZXF1ZXN0IGJ1dCBjYW4gYmUgdXNlZCBpbiBhIHJlc3BvbnNlLlxyXG4gICAqL1xyXG4gIGF1dGhvcj86IGZoaXIuUmVmZXJlbmNlfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBUaGUgc291cmNlIGFwcGxpY2F0aW9uIGZyb20gd2hpY2ggdGhpcyBtZXNzYWdlIG9yaWdpbmF0ZWQuXHJcbiAgICovXHJcbiAgc291cmNlOiBmaGlyLk1lc3NhZ2VIZWFkZXJTb3VyY2V8bnVsbDtcclxuICAvKipcclxuICAgKiBVc3VhbGx5IG9ubHkgZm9yIHRoZSByZXF1ZXN0IGJ1dCBjYW4gYmUgdXNlZCBpbiBhIHJlc3BvbnNlLlxyXG4gICAqL1xyXG4gIHJlc3BvbnNpYmxlPzogZmhpci5SZWZlcmVuY2V8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIENvZGVkIGluZGljYXRpb24gb2YgdGhlIGNhdXNlIGZvciB0aGUgZXZlbnQgLSBpbmRpY2F0ZXMgIGEgcmVhc29uIGZvciB0aGUgb2NjdXJyZW5jZSBvZiB0aGUgZXZlbnQgdGhhdCBpcyBhIGZvY3VzIG9mIHRoaXMgbWVzc2FnZS5cclxuICAgKi9cclxuICByZWFzb24/OiBmaGlyLkNvZGVhYmxlQ29uY2VwdHx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogSW5mb3JtYXRpb24gYWJvdXQgdGhlIG1lc3NhZ2UgdGhhdCB0aGlzIG1lc3NhZ2UgaXMgYSByZXNwb25zZSB0by4gIE9ubHkgcHJlc2VudCBpZiB0aGlzIG1lc3NhZ2UgaXMgYSByZXNwb25zZS5cclxuICAgKi9cclxuICByZXNwb25zZT86IGZoaXIuTWVzc2FnZUhlYWRlclJlc3BvbnNlfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBUaGUgZGF0YSBpcyBkZWZpbmVkIHdoZXJlIHRoZSB0cmFuc2FjdGlvbiB0eXBlIGlzIGRlZmluZWQuIFRoZSB0cmFuc2FjdGlvbiBkYXRhIGlzIGFsd2F5cyBpbmNsdWRlZCBpbiB0aGUgYnVuZGxlIHRoYXQgaXMgdGhlIGZ1bGwgbWVzc2FnZS4gIE9ubHkgdGhlIHJvb3QgcmVzb3VyY2UgaXMgc3BlY2lmaWVkLiAgVGhlIHJlc291cmNlcyBpdCByZWZlcmVuY2VzIHNob3VsZCBiZSBjb250YWluZWQgaW4gdGhlIGJ1bmRsZSBidXQgYXJlIG5vdCBhbHNvIGxpc3RlZCBoZXJlLiAgTXVsdGlwbGUgcmVwZXRpdGlvbnMgYXJlIGFsbG93ZWQgdG8gY2F0ZXIgZm9yIG1lcmdlcyBhbmQgb3RoZXIgc2l0dWF0aW9ucyB3aXRoIG11bHRpcGxlIGZvY2FsIHRhcmdldHMuXHJcbiAgICovXHJcbiAgZm9jdXM/OiBmaGlyLlJlZmVyZW5jZVtdfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBQZXJtYW5lbnQgbGluayB0byB0aGUgTWVzc2FnZURlZmluaXRpb24gZm9yIHRoaXMgbWVzc2FnZS5cclxuICAgKi9cclxuICBkZWZpbml0aW9uPzogc3RyaW5nfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogTWVzc2FnZUhlYWRlci5kZWZpbml0aW9uXHJcbiAgICovXHJcbiAgX2RlZmluaXRpb24/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbn1cclxuIl19