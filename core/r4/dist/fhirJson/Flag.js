// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR Resource: Flag
export {};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRmxhZy5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJKc29uL0ZsYWcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLCtDQUErQztBQUMvQyxrQ0FBa0M7QUFDbEMsc0JBQXNCIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0LmNvcmUgdmVyc2lvbjogNC4wLjFcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFJlc291cmNlOiBGbGFnXHJcblxyXG5pbXBvcnQgKiBhcyBmaGlyIGZyb20gJy4uL2ZoaXJKc29uLmpzJztcclxuXHJcblxyXG4vKipcclxuICogUHJvc3BlY3RpdmUgd2FybmluZ3Mgb2YgcG90ZW50aWFsIGlzc3VlcyB3aGVuIHByb3ZpZGluZyBjYXJlIHRvIHRoZSBwYXRpZW50LlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBGbGFnIGV4dGVuZHMgZmhpci5Eb21haW5SZXNvdXJjZSB7IFxyXG4gIC8qKlxyXG4gICAqIFJlc291cmNlIFR5cGUgTmFtZVxyXG4gICAqL1xyXG4gIHJlc291cmNlVHlwZTogXCJGbGFnXCJ8bnVsbDtcclxuICAvKipcclxuICAgKiBUaGlzIGlzIGEgYnVzaW5lc3MgaWRlbnRpZmllciwgbm90IGEgcmVzb3VyY2UgaWRlbnRpZmllciAoc2VlIFtkaXNjdXNzaW9uXShyZXNvdXJjZS5odG1sI2lkZW50aWZpZXJzKSkuICBJdCBpcyBiZXN0IHByYWN0aWNlIGZvciB0aGUgaWRlbnRpZmllciB0byBvbmx5IGFwcGVhciBvbiBhIHNpbmdsZSByZXNvdXJjZSBpbnN0YW5jZSwgaG93ZXZlciBidXNpbmVzcyBwcmFjdGljZXMgbWF5IG9jY2FzaW9uYWxseSBkaWN0YXRlIHRoYXQgbXVsdGlwbGUgcmVzb3VyY2UgaW5zdGFuY2VzIHdpdGggdGhlIHNhbWUgaWRlbnRpZmllciBjYW4gZXhpc3QgLSBwb3NzaWJseSBldmVuIHdpdGggZGlmZmVyZW50IHJlc291cmNlIHR5cGVzLiAgRm9yIGV4YW1wbGUsIG11bHRpcGxlIFBhdGllbnQgYW5kIGEgUGVyc29uIHJlc291cmNlIGluc3RhbmNlIG1pZ2h0IHNoYXJlIHRoZSBzYW1lIHNvY2lhbCBpbnN1cmFuY2UgbnVtYmVyLlxyXG4gICAqL1xyXG4gIGlkZW50aWZpZXI/OiAoZmhpci5JZGVudGlmaWVyfG51bGwpW118dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIFRoaXMgZWxlbWVudCBpcyBsYWJlbGVkIGFzIGEgbW9kaWZpZXIgYmVjYXVzZSB0aGUgc3RhdHVzIGNvbnRhaW5zIGNvZGVzIHRoYXQgbWFyayB0aGUgcmVzb3VyY2UgYXMgbm90IGN1cnJlbnRseSB2YWxpZC5cclxuICAgKi9cclxuICBzdGF0dXM6ICdhY3RpdmUnfCdlbnRlcmVkLWluLWVycm9yJ3wnaW5hY3RpdmUnfG51bGw7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IEZsYWcuc3RhdHVzXHJcbiAgICovXHJcbiAgX3N0YXR1cz86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBUaGUgdmFsdWUgc2V0IHdpbGwgb2Z0ZW4gbmVlZCB0byBiZSBhZGp1c3RlZCBiYXNlZCBvbiBsb2NhbCBidXNpbmVzcyBydWxlcyBhbmQgdXNhZ2UgY29udGV4dC5cclxuICAgKi9cclxuICBjYXRlZ29yeT86IChmaGlyLkNvZGVhYmxlQ29uY2VwdHxudWxsKVtdfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBJZiBub24tY29kZWQsIHVzZSBDb2RlYWJsZUNvbmNlcHQudGV4dC4gIFRoaXMgZWxlbWVudCBzaG91bGQgYWx3YXlzIGJlIGluY2x1ZGVkIGluIHRoZSBuYXJyYXRpdmUuXHJcbiAgICovXHJcbiAgY29kZTogZmhpci5Db2RlYWJsZUNvbmNlcHR8bnVsbDtcclxuICAvKipcclxuICAgKiBUaGUgcGF0aWVudCwgbG9jYXRpb24sIGdyb3VwLCBvcmdhbml6YXRpb24sIG9yIHByYWN0aXRpb25lciBldGMuIHRoaXMgaXMgYWJvdXQgcmVjb3JkIHRoaXMgZmxhZyBpcyBhc3NvY2lhdGVkIHdpdGguXHJcbiAgICovXHJcbiAgc3ViamVjdDogZmhpci5SZWZlcmVuY2V8bnVsbDtcclxuICAvKipcclxuICAgKiBUaGUgcGVyaW9kIG9mIHRpbWUgZnJvbSB0aGUgYWN0aXZhdGlvbiBvZiB0aGUgZmxhZyB0byBpbmFjdGl2YXRpb24gb2YgdGhlIGZsYWcuIElmIHRoZSBmbGFnIGlzIGFjdGl2ZSwgdGhlIGVuZCBvZiB0aGUgcGVyaW9kIHNob3VsZCBiZSB1bnNwZWNpZmllZC5cclxuICAgKi9cclxuICBwZXJpb2Q/OiBmaGlyLlBlcmlvZHx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogSWYgYm90aCBGbGFnLmVuY291bnRlciBhbmQgRmxhZy5wZXJpb2QgYXJlIHZhbHVlZCwgdGhlbiBGbGFnLnBlcmlvZC5zdGFydCBzaGFsbCBub3QgYmUgYmVmb3JlIEVuY291bnRlci5wZXJpb2Quc3RhcnQgYW5kIEZsYWcucGVyaW9kLmVuZCBzaGFsbCBub3QgYmUgYWZ0ZXIgRW5jb3VudGVyLnBlcmlvZC5lbmQuXHJcbiAgICovXHJcbiAgZW5jb3VudGVyPzogZmhpci5SZWZlcmVuY2V8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIFRoZSBwZXJzb24sIG9yZ2FuaXphdGlvbiBvciBkZXZpY2UgdGhhdCBjcmVhdGVkIHRoZSBmbGFnLlxyXG4gICAqL1xyXG4gIGF1dGhvcj86IGZoaXIuUmVmZXJlbmNlfHVuZGVmaW5lZDtcclxufVxyXG4iXX0=