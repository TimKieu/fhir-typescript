// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ComplexType: Signature
export {};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2lnbmF0dXJlLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpckpzb24vU2lnbmF0dXJlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQiwrQ0FBK0M7QUFDL0Msa0NBQWtDO0FBQ2xDLDhCQUE4QiIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNC5jb3JlIHZlcnNpb246IDQuMC4xXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBDb21wbGV4VHlwZTogU2lnbmF0dXJlXHJcblxyXG5pbXBvcnQgKiBhcyBmaGlyIGZyb20gJy4uL2ZoaXJKc29uLmpzJztcclxuXHJcblxyXG4vKipcclxuICogQSBzaWduYXR1cmUgYWxvbmcgd2l0aCBzdXBwb3J0aW5nIGNvbnRleHQuIFRoZSBzaWduYXR1cmUgbWF5IGJlIGEgZGlnaXRhbCBzaWduYXR1cmUgdGhhdCBpcyBjcnlwdG9ncmFwaGljIGluIG5hdHVyZSwgb3Igc29tZSBvdGhlciBzaWduYXR1cmUgYWNjZXB0YWJsZSB0byB0aGUgZG9tYWluLiBUaGlzIG90aGVyIHNpZ25hdHVyZSBtYXkgYmUgYXMgc2ltcGxlIGFzIGEgZ3JhcGhpY2FsIGltYWdlIHJlcHJlc2VudGluZyBhIGhhbmQtd3JpdHRlbiBzaWduYXR1cmUsIG9yIGEgc2lnbmF0dXJlIGNlcmVtb255IERpZmZlcmVudCBzaWduYXR1cmUgYXBwcm9hY2hlcyBoYXZlIGRpZmZlcmVudCB1dGlsaXRpZXMuXHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIFNpZ25hdHVyZSBleHRlbmRzIGZoaXIuRmhpckVsZW1lbnQgeyBcclxuICAvKipcclxuICAgKiBFeGFtcGxlcyBpbmNsdWRlIGF0dGVzdGluZyB0bzogYXV0aG9yc2hpcCwgY29ycmVjdCB0cmFuc2NyaXB0aW9uLCBhbmQgd2l0bmVzcyBvZiBzcGVjaWZpYyBldmVudC4gQWxzbyBrbm93biBhcyBhICZhbXA7cXVvdDtDb21taXRtZW50IFR5cGUgSW5kaWNhdGlvbiZhbXA7cXVvdDsuXHJcbiAgICovXHJcbiAgdHlwZTogZmhpci5Db2RpbmdbXXxudWxsO1xyXG4gIC8qKlxyXG4gICAqIFRoaXMgc2hvdWxkIGFncmVlIHdpdGggdGhlIGluZm9ybWF0aW9uIGluIHRoZSBzaWduYXR1cmUuXHJcbiAgICovXHJcbiAgd2hlbjogc3RyaW5nfG51bGw7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IFNpZ25hdHVyZS53aGVuXHJcbiAgICovXHJcbiAgX3doZW4/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbiAgLyoqXHJcbiAgICogVGhpcyBzaG91bGQgYWdyZWUgd2l0aCB0aGUgaW5mb3JtYXRpb24gaW4gdGhlIHNpZ25hdHVyZS5cclxuICAgKi9cclxuICB3aG86IGZoaXIuUmVmZXJlbmNlfG51bGw7XHJcbiAgLyoqXHJcbiAgICogVGhlIHBhcnR5IHRoYXQgY2FuJ3Qgc2lnbi4gRm9yIGV4YW1wbGUgYSBjaGlsZC5cclxuICAgKi9cclxuICBvbkJlaGFsZk9mPzogZmhpci5SZWZlcmVuY2V8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIFwieG1sXCIsIFwianNvblwiIGFuZCBcInR0bFwiIGFyZSBhbGxvd2VkLCB3aGljaCBkZXNjcmliZSB0aGUgc2ltcGxlIGVuY29kaW5ncyBkZXNjcmliZWQgaW4gdGhlIHNwZWNpZmljYXRpb24gKGFuZCBpbXBseSBhcHByb3ByaWF0ZSBidW5kbGUgc3VwcG9ydCkuIE90aGVyd2lzZSwgbWltZSB0eXBlcyBhcmUgbGVnYWwgaGVyZS5cclxuICAgKi9cclxuICB0YXJnZXRGb3JtYXQ/OiBzdHJpbmd8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBTaWduYXR1cmUudGFyZ2V0Rm9ybWF0XHJcbiAgICovXHJcbiAgX3RhcmdldEZvcm1hdD86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBBIG1pbWUgdHlwZSB0aGF0IGluZGljYXRlcyB0aGUgdGVjaG5pY2FsIGZvcm1hdCBvZiB0aGUgc2lnbmF0dXJlLiBJbXBvcnRhbnQgbWltZSB0eXBlcyBhcmUgYXBwbGljYXRpb24vc2lnbmF0dXJlK3htbCBmb3IgWCBNTCBEaWdTaWcsIGFwcGxpY2F0aW9uL2pvc2UgZm9yIEpXUywgYW5kIGltYWdlLyogZm9yIGEgZ3JhcGhpY2FsIGltYWdlIG9mIGEgc2lnbmF0dXJlLCBldGMuXHJcbiAgICovXHJcbiAgc2lnRm9ybWF0Pzogc3RyaW5nfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogU2lnbmF0dXJlLnNpZ0Zvcm1hdFxyXG4gICAqL1xyXG4gIF9zaWdGb3JtYXQ/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbiAgLyoqXHJcbiAgICogV2hlcmUgdGhlIHNpZ25hdHVyZSB0eXBlIGlzIGFuIFhNTCBEaWdTaWcsIHRoZSBzaWduZWQgY29udGVudCBpcyBhIEZISVIgUmVzb3VyY2UocyksIHRoZSBzaWduYXR1cmUgaXMgb2YgdGhlIFhNTCBmb3JtIG9mIHRoZSBSZXNvdXJjZShzKSB1c2luZyAgWE1MLVNpZ25hdHVyZSAoWE1MRElHKSBcIkRldGFjaGVkIFNpZ25hdHVyZVwiIGZvcm0uXHJcbiAgICovXHJcbiAgZGF0YT86IHN0cmluZ3x1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IFNpZ25hdHVyZS5kYXRhXHJcbiAgICovXHJcbiAgX2RhdGE/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbn1cclxuIl19