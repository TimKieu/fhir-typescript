// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR Resource: Person
export {};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUGVyc29uLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjLyIsInNvdXJjZXMiOlsiZmhpckpzb24vUGVyc29uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQiwrQ0FBK0M7QUFDL0Msa0NBQWtDO0FBQ2xDLHdCQUF3QiIsInNvdXJjZXNDb250ZW50IjpbIi8vIDxhdXRvLWdlbmVyYXRlZC8+XHJcbi8vIENvbnRlbnRzIG9mOiBobDcuZmhpci5yNC5jb3JlIHZlcnNpb246IDQuMC4xXHJcbi8vIE1pbmltdW0gVHlwZVNjcmlwdCBWZXJzaW9uOiAzLjdcclxuLy8gRkhJUiBSZXNvdXJjZTogUGVyc29uXHJcblxyXG5pbXBvcnQgKiBhcyBmaGlyIGZyb20gJy4uL2ZoaXJKc29uLmpzJztcclxuXHJcblxyXG4vKipcclxuICogTGluayB0byBhIHJlc291cmNlIHRoYXQgY29uY2VybnMgdGhlIHNhbWUgYWN0dWFsIHBlcnNvbi5cclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgUGVyc29uTGluayBleHRlbmRzIGZoaXIuQmFja2JvbmVFbGVtZW50IHsgXHJcbiAgLyoqXHJcbiAgICogVGhlIHJlc291cmNlIHRvIHdoaWNoIHRoaXMgYWN0dWFsIHBlcnNvbiBpcyBhc3NvY2lhdGVkLlxyXG4gICAqL1xyXG4gIHRhcmdldDogZmhpci5SZWZlcmVuY2V8bnVsbDtcclxuICAvKipcclxuICAgKiBMZXZlbCBvZiBhc3N1cmFuY2UgdGhhdCB0aGlzIGxpbmsgaXMgYXNzb2NpYXRlZCB3aXRoIHRoZSB0YXJnZXQgcmVzb3VyY2UuXHJcbiAgICovXHJcbiAgYXNzdXJhbmNlPzogJ2xldmVsMSd8J2xldmVsMid8J2xldmVsMyd8J2xldmVsNCd8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBQZXJzb24ubGluay5hc3N1cmFuY2VcclxuICAgKi9cclxuICBfYXNzdXJhbmNlPzpmaGlyLkZoaXJFbGVtZW50O1xyXG59XHJcblxyXG4vKipcclxuICogRGVtb2dyYXBoaWNzIGFuZCBhZG1pbmlzdHJhdGl2ZSBpbmZvcm1hdGlvbiBhYm91dCBhIHBlcnNvbiBpbmRlcGVuZGVudCBvZiBhIHNwZWNpZmljIGhlYWx0aC1yZWxhdGVkIGNvbnRleHQuXHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIFBlcnNvbiBleHRlbmRzIGZoaXIuRG9tYWluUmVzb3VyY2UgeyBcclxuICAvKipcclxuICAgKiBSZXNvdXJjZSBUeXBlIE5hbWVcclxuICAgKi9cclxuICByZXNvdXJjZVR5cGU6IFwiUGVyc29uXCJ8bnVsbDtcclxuICAvKipcclxuICAgKiBJZGVudGlmaWVyIGZvciBhIHBlcnNvbiB3aXRoaW4gYSBwYXJ0aWN1bGFyIHNjb3BlLlxyXG4gICAqL1xyXG4gIGlkZW50aWZpZXI/OiAoZmhpci5JZGVudGlmaWVyfG51bGwpW118dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIFBlcnNvbiBtYXkgaGF2ZSBtdWx0aXBsZSBuYW1lcyB3aXRoIGRpZmZlcmVudCB1c2VzIG9yIGFwcGxpY2FibGUgcGVyaW9kcy5cclxuICAgKi9cclxuICBuYW1lPzogKGZoaXIuSHVtYW5OYW1lfG51bGwpW118dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIFBlcnNvbiBtYXkgaGF2ZSBtdWx0aXBsZSB3YXlzIHRvIGJlIGNvbnRhY3RlZCB3aXRoIGRpZmZlcmVudCB1c2VzIG9yIGFwcGxpY2FibGUgcGVyaW9kcy4gIE1heSBuZWVkIHRvIGhhdmUgb3B0aW9ucyBmb3IgY29udGFjdGluZyB0aGUgcGVyc29uIHVyZ2VudGx5IGFuZCBhbHNvIHRvIGhlbHAgd2l0aCBpZGVudGlmaWNhdGlvbi5cclxuICAgKi9cclxuICB0ZWxlY29tPzogKGZoaXIuQ29udGFjdFBvaW50fG51bGwpW118dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIFRoZSBnZW5kZXIgbWlnaHQgbm90IG1hdGNoIHRoZSBiaW9sb2dpY2FsIHNleCBhcyBkZXRlcm1pbmVkIGJ5IGdlbmV0aWNzLCBvciB0aGUgaW5kaXZpZHVhbCdzIHByZWZlcnJlZCBpZGVudGlmaWNhdGlvbi4gTm90ZSB0aGF0IGZvciBib3RoIGh1bWFucyBhbmQgcGFydGljdWxhcmx5IGFuaW1hbHMsIHRoZXJlIGFyZSBvdGhlciBsZWdpdGltYXRlIHBvc3NpYmlsaXRpZXMgdGhhbiBNIGFuZCBGLCB0aG91Z2ggYSBjbGVhciBtYWpvcml0eSBvZiBzeXN0ZW1zIGFuZCBjb250ZXh0cyBvbmx5IHN1cHBvcnQgTSBhbmQgRi5cclxuICAgKi9cclxuICBnZW5kZXI/OiAnZmVtYWxlJ3wnbWFsZSd8J290aGVyJ3wndW5rbm93bid8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBQZXJzb24uZ2VuZGVyXHJcbiAgICovXHJcbiAgX2dlbmRlcj86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBBdCBsZWFzdCBhbiBlc3RpbWF0ZWQgeWVhciBzaG91bGQgYmUgcHJvdmlkZWQgYXMgYSBndWVzcyBpZiB0aGUgcmVhbCBET0IgaXMgdW5rbm93bi5cclxuICAgKi9cclxuICBiaXJ0aERhdGU/OiBzdHJpbmd8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBQZXJzb24uYmlydGhEYXRlXHJcbiAgICovXHJcbiAgX2JpcnRoRGF0ZT86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBQZXJzb24gbWF5IGhhdmUgbXVsdGlwbGUgYWRkcmVzc2VzIHdpdGggZGlmZmVyZW50IHVzZXMgb3IgYXBwbGljYWJsZSBwZXJpb2RzLlxyXG4gICAqL1xyXG4gIGFkZHJlc3M/OiAoZmhpci5BZGRyZXNzfG51bGwpW118dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEFuIGltYWdlIHRoYXQgY2FuIGJlIGRpc3BsYXllZCBhcyBhIHRodW1ibmFpbCBvZiB0aGUgcGVyc29uIHRvIGVuaGFuY2UgdGhlIGlkZW50aWZpY2F0aW9uIG9mIHRoZSBpbmRpdmlkdWFsLlxyXG4gICAqL1xyXG4gIHBob3RvPzogZmhpci5BdHRhY2htZW50fHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBUaGUgb3JnYW5pemF0aW9uIHRoYXQgaXMgdGhlIGN1c3RvZGlhbiBvZiB0aGUgcGVyc29uIHJlY29yZC5cclxuICAgKi9cclxuICBtYW5hZ2luZ09yZ2FuaXphdGlvbj86IGZoaXIuUmVmZXJlbmNlfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBXaGV0aGVyIHRoaXMgcGVyc29uJ3MgcmVjb3JkIGlzIGluIGFjdGl2ZSB1c2UuXHJcbiAgICovXHJcbiAgYWN0aXZlPzogYm9vbGVhbnx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IFBlcnNvbi5hY3RpdmVcclxuICAgKi9cclxuICBfYWN0aXZlPzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIExpbmsgdG8gYSByZXNvdXJjZSB0aGF0IGNvbmNlcm5zIHRoZSBzYW1lIGFjdHVhbCBwZXJzb24uXHJcbiAgICovXHJcbiAgbGluaz86IChmaGlyLlBlcnNvbkxpbmt8bnVsbClbXXx1bmRlZmluZWQ7XHJcbn1cclxuIl19