// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR Resource: Task
export {};
//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"Task.js","sourceRoot":"./src/","sources":["fhirJson/Task.ts"],"names":[],"mappings":"AAAA,oBAAoB;AACpB,+CAA+C;AAC/C,kCAAkC;AAClC,sBAAsB","sourcesContent":["// <auto-generated/>\r\n// Contents of: hl7.fhir.r4.core version: 4.0.1\r\n// Minimum TypeScript Version: 3.7\r\n// FHIR Resource: Task\r\n\r\nimport * as fhir from '../fhirJson.js';\r\n\r\n\r\n/**\r\n * If the Task.focus is a request resource and the task is seeking fulfillment (i.e. is asking for the request to be actioned), this element identifies any limitations on what parts of the referenced request should be actioned.\r\n */\r\nexport interface TaskRestriction extends fhir.BackboneElement { \r\n  /**\r\n   * Indicates the number of times the requested action should occur.\r\n   */\r\n  repetitions?: number|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Task.restriction.repetitions\r\n   */\r\n  _repetitions?:fhir.FhirElement;\r\n  /**\r\n   * Note that period.high is the due date representing the time by which the task should be completed.\r\n   */\r\n  period?: fhir.Period|undefined;\r\n  /**\r\n   * For requests that are targeted to more than on potential recipient/target, for whom is fulfillment sought?\r\n   */\r\n  recipient?: fhir.Reference[]|undefined;\r\n}\r\n\r\n/**\r\n * Additional information that may be needed in the execution of the task.\r\n */\r\nexport interface TaskInput extends fhir.BackboneElement { \r\n  /**\r\n   * If referencing a BPMN workflow or Protocol, the \"system\" is the URL for the workflow definition and the code is the \"name\" of the required input.\r\n   */\r\n  type: fhir.CodeableConcept|null;\r\n  /**\r\n   * The value of the input parameter as a basic type.\r\n   */\r\n  valueBase64Binary?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Task.input.value[x]\r\n   */\r\n  _valueBase64Binary?:fhir.FhirElement;\r\n  /**\r\n   * The value of the input parameter as a basic type.\r\n   */\r\n  valueBoolean?: boolean|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Task.input.value[x]\r\n   */\r\n  _valueBoolean?:fhir.FhirElement;\r\n  /**\r\n   * The value of the input parameter as a basic type.\r\n   */\r\n  valueCanonical?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Task.input.value[x]\r\n   */\r\n  _valueCanonical?:fhir.FhirElement;\r\n  /**\r\n   * The value of the input parameter as a basic type.\r\n   */\r\n  valueCode?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Task.input.value[x]\r\n   */\r\n  _valueCode?:fhir.FhirElement;\r\n  /**\r\n   * The value of the input parameter as a basic type.\r\n   */\r\n  valueDate?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Task.input.value[x]\r\n   */\r\n  _valueDate?:fhir.FhirElement;\r\n  /**\r\n   * The value of the input parameter as a basic type.\r\n   */\r\n  valueDateTime?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Task.input.value[x]\r\n   */\r\n  _valueDateTime?:fhir.FhirElement;\r\n  /**\r\n   * The value of the input parameter as a basic type.\r\n   */\r\n  valueDecimal?: number|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Task.input.value[x]\r\n   */\r\n  _valueDecimal?:fhir.FhirElement;\r\n  /**\r\n   * The value of the input parameter as a basic type.\r\n   */\r\n  valueId?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Task.input.value[x]\r\n   */\r\n  _valueId?:fhir.FhirElement;\r\n  /**\r\n   * The value of the input parameter as a basic type.\r\n   */\r\n  valueInstant?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Task.input.value[x]\r\n   */\r\n  _valueInstant?:fhir.FhirElement;\r\n  /**\r\n   * The value of the input parameter as a basic type.\r\n   */\r\n  valueInteger?: number|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Task.input.value[x]\r\n   */\r\n  _valueInteger?:fhir.FhirElement;\r\n  /**\r\n   * The value of the input parameter as a basic type.\r\n   */\r\n  valueMarkdown?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Task.input.value[x]\r\n   */\r\n  _valueMarkdown?:fhir.FhirElement;\r\n  /**\r\n   * The value of the input parameter as a basic type.\r\n   */\r\n  valueOid?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Task.input.value[x]\r\n   */\r\n  _valueOid?:fhir.FhirElement;\r\n  /**\r\n   * The value of the input parameter as a basic type.\r\n   */\r\n  valuePositiveInt?: number|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Task.input.value[x]\r\n   */\r\n  _valuePositiveInt?:fhir.FhirElement;\r\n  /**\r\n   * The value of the input parameter as a basic type.\r\n   */\r\n  valueString?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Task.input.value[x]\r\n   */\r\n  _valueString?:fhir.FhirElement;\r\n  /**\r\n   * The value of the input parameter as a basic type.\r\n   */\r\n  valueTime?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Task.input.value[x]\r\n   */\r\n  _valueTime?:fhir.FhirElement;\r\n  /**\r\n   * The value of the input parameter as a basic type.\r\n   */\r\n  valueUnsignedInt?: number|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Task.input.value[x]\r\n   */\r\n  _valueUnsignedInt?:fhir.FhirElement;\r\n  /**\r\n   * The value of the input parameter as a basic type.\r\n   */\r\n  valueUri?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Task.input.value[x]\r\n   */\r\n  _valueUri?:fhir.FhirElement;\r\n  /**\r\n   * The value of the input parameter as a basic type.\r\n   */\r\n  valueUrl?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Task.input.value[x]\r\n   */\r\n  _valueUrl?:fhir.FhirElement;\r\n  /**\r\n   * The value of the input parameter as a basic type.\r\n   */\r\n  valueUuid?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Task.input.value[x]\r\n   */\r\n  _valueUuid?:fhir.FhirElement;\r\n  /**\r\n   * The value of the input parameter as a basic type.\r\n   */\r\n  valueAddress?: fhir.Address|undefined;\r\n  /**\r\n   * The value of the input parameter as a basic type.\r\n   */\r\n  valueAge?: fhir.Age|undefined;\r\n  /**\r\n   * The value of the input parameter as a basic type.\r\n   */\r\n  valueAnnotation?: fhir.Annotation|undefined;\r\n  /**\r\n   * The value of the input parameter as a basic type.\r\n   */\r\n  valueAttachment?: fhir.Attachment|undefined;\r\n  /**\r\n   * The value of the input parameter as a basic type.\r\n   */\r\n  valueCodeableConcept?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * The value of the input parameter as a basic type.\r\n   */\r\n  valueCoding?: fhir.Coding|undefined;\r\n  /**\r\n   * The value of the input parameter as a basic type.\r\n   */\r\n  valueContactPoint?: fhir.ContactPoint|undefined;\r\n  /**\r\n   * The value of the input parameter as a basic type.\r\n   */\r\n  valueCount?: fhir.Count|undefined;\r\n  /**\r\n   * The value of the input parameter as a basic type.\r\n   */\r\n  valueDistance?: fhir.Distance|undefined;\r\n  /**\r\n   * The value of the input parameter as a basic type.\r\n   */\r\n  valueDuration?: fhir.Duration|undefined;\r\n  /**\r\n   * The value of the input parameter as a basic type.\r\n   */\r\n  valueHumanName?: fhir.HumanName|undefined;\r\n  /**\r\n   * The value of the input parameter as a basic type.\r\n   */\r\n  valueIdentifier?: fhir.Identifier|undefined;\r\n  /**\r\n   * The value of the input parameter as a basic type.\r\n   */\r\n  valueMoney?: fhir.Money|undefined;\r\n  /**\r\n   * The value of the input parameter as a basic type.\r\n   */\r\n  valuePeriod?: fhir.Period|undefined;\r\n  /**\r\n   * The value of the input parameter as a basic type.\r\n   */\r\n  valueQuantity?: fhir.Quantity|undefined;\r\n  /**\r\n   * The value of the input parameter as a basic type.\r\n   */\r\n  valueRange?: fhir.Range|undefined;\r\n  /**\r\n   * The value of the input parameter as a basic type.\r\n   */\r\n  valueRatio?: fhir.Ratio|undefined;\r\n  /**\r\n   * The value of the input parameter as a basic type.\r\n   */\r\n  valueReference?: fhir.Reference|undefined;\r\n  /**\r\n   * The value of the input parameter as a basic type.\r\n   */\r\n  valueSampledData?: fhir.SampledData|undefined;\r\n  /**\r\n   * The value of the input parameter as a basic type.\r\n   */\r\n  valueSignature?: fhir.Signature|undefined;\r\n  /**\r\n   * The value of the input parameter as a basic type.\r\n   */\r\n  valueTiming?: fhir.Timing|undefined;\r\n  /**\r\n   * The value of the input parameter as a basic type.\r\n   */\r\n  valueContactDetail?: fhir.ContactDetail|undefined;\r\n  /**\r\n   * The value of the input parameter as a basic type.\r\n   */\r\n  valueContributor?: fhir.Contributor|undefined;\r\n  /**\r\n   * The value of the input parameter as a basic type.\r\n   */\r\n  valueDataRequirement?: fhir.DataRequirement|undefined;\r\n  /**\r\n   * The value of the input parameter as a basic type.\r\n   */\r\n  valueExpression?: fhir.Expression|undefined;\r\n  /**\r\n   * The value of the input parameter as a basic type.\r\n   */\r\n  valueParameterDefinition?: fhir.ParameterDefinition|undefined;\r\n  /**\r\n   * The value of the input parameter as a basic type.\r\n   */\r\n  valueRelatedArtifact?: fhir.RelatedArtifact|undefined;\r\n  /**\r\n   * The value of the input parameter as a basic type.\r\n   */\r\n  valueTriggerDefinition?: fhir.TriggerDefinition|undefined;\r\n  /**\r\n   * The value of the input parameter as a basic type.\r\n   */\r\n  valueUsageContext?: fhir.UsageContext|undefined;\r\n  /**\r\n   * The value of the input parameter as a basic type.\r\n   */\r\n  valueDosage?: fhir.Dosage|undefined;\r\n  /**\r\n   * The value of the input parameter as a basic type.\r\n   */\r\n  valueMeta?: fhir.Meta|undefined;\r\n}\r\n\r\n/**\r\n * Outputs produced by the Task.\r\n */\r\nexport interface TaskOutput extends fhir.BackboneElement { \r\n  /**\r\n   * The name of the Output parameter.\r\n   */\r\n  type: fhir.CodeableConcept|null;\r\n  /**\r\n   * The value of the Output parameter as a basic type.\r\n   */\r\n  valueBase64Binary?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Task.output.value[x]\r\n   */\r\n  _valueBase64Binary?:fhir.FhirElement;\r\n  /**\r\n   * The value of the Output parameter as a basic type.\r\n   */\r\n  valueBoolean?: boolean|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Task.output.value[x]\r\n   */\r\n  _valueBoolean?:fhir.FhirElement;\r\n  /**\r\n   * The value of the Output parameter as a basic type.\r\n   */\r\n  valueCanonical?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Task.output.value[x]\r\n   */\r\n  _valueCanonical?:fhir.FhirElement;\r\n  /**\r\n   * The value of the Output parameter as a basic type.\r\n   */\r\n  valueCode?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Task.output.value[x]\r\n   */\r\n  _valueCode?:fhir.FhirElement;\r\n  /**\r\n   * The value of the Output parameter as a basic type.\r\n   */\r\n  valueDate?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Task.output.value[x]\r\n   */\r\n  _valueDate?:fhir.FhirElement;\r\n  /**\r\n   * The value of the Output parameter as a basic type.\r\n   */\r\n  valueDateTime?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Task.output.value[x]\r\n   */\r\n  _valueDateTime?:fhir.FhirElement;\r\n  /**\r\n   * The value of the Output parameter as a basic type.\r\n   */\r\n  valueDecimal?: number|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Task.output.value[x]\r\n   */\r\n  _valueDecimal?:fhir.FhirElement;\r\n  /**\r\n   * The value of the Output parameter as a basic type.\r\n   */\r\n  valueId?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Task.output.value[x]\r\n   */\r\n  _valueId?:fhir.FhirElement;\r\n  /**\r\n   * The value of the Output parameter as a basic type.\r\n   */\r\n  valueInstant?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Task.output.value[x]\r\n   */\r\n  _valueInstant?:fhir.FhirElement;\r\n  /**\r\n   * The value of the Output parameter as a basic type.\r\n   */\r\n  valueInteger?: number|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Task.output.value[x]\r\n   */\r\n  _valueInteger?:fhir.FhirElement;\r\n  /**\r\n   * The value of the Output parameter as a basic type.\r\n   */\r\n  valueMarkdown?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Task.output.value[x]\r\n   */\r\n  _valueMarkdown?:fhir.FhirElement;\r\n  /**\r\n   * The value of the Output parameter as a basic type.\r\n   */\r\n  valueOid?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Task.output.value[x]\r\n   */\r\n  _valueOid?:fhir.FhirElement;\r\n  /**\r\n   * The value of the Output parameter as a basic type.\r\n   */\r\n  valuePositiveInt?: number|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Task.output.value[x]\r\n   */\r\n  _valuePositiveInt?:fhir.FhirElement;\r\n  /**\r\n   * The value of the Output parameter as a basic type.\r\n   */\r\n  valueString?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Task.output.value[x]\r\n   */\r\n  _valueString?:fhir.FhirElement;\r\n  /**\r\n   * The value of the Output parameter as a basic type.\r\n   */\r\n  valueTime?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Task.output.value[x]\r\n   */\r\n  _valueTime?:fhir.FhirElement;\r\n  /**\r\n   * The value of the Output parameter as a basic type.\r\n   */\r\n  valueUnsignedInt?: number|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Task.output.value[x]\r\n   */\r\n  _valueUnsignedInt?:fhir.FhirElement;\r\n  /**\r\n   * The value of the Output parameter as a basic type.\r\n   */\r\n  valueUri?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Task.output.value[x]\r\n   */\r\n  _valueUri?:fhir.FhirElement;\r\n  /**\r\n   * The value of the Output parameter as a basic type.\r\n   */\r\n  valueUrl?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Task.output.value[x]\r\n   */\r\n  _valueUrl?:fhir.FhirElement;\r\n  /**\r\n   * The value of the Output parameter as a basic type.\r\n   */\r\n  valueUuid?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Task.output.value[x]\r\n   */\r\n  _valueUuid?:fhir.FhirElement;\r\n  /**\r\n   * The value of the Output parameter as a basic type.\r\n   */\r\n  valueAddress?: fhir.Address|undefined;\r\n  /**\r\n   * The value of the Output parameter as a basic type.\r\n   */\r\n  valueAge?: fhir.Age|undefined;\r\n  /**\r\n   * The value of the Output parameter as a basic type.\r\n   */\r\n  valueAnnotation?: fhir.Annotation|undefined;\r\n  /**\r\n   * The value of the Output parameter as a basic type.\r\n   */\r\n  valueAttachment?: fhir.Attachment|undefined;\r\n  /**\r\n   * The value of the Output parameter as a basic type.\r\n   */\r\n  valueCodeableConcept?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * The value of the Output parameter as a basic type.\r\n   */\r\n  valueCoding?: fhir.Coding|undefined;\r\n  /**\r\n   * The value of the Output parameter as a basic type.\r\n   */\r\n  valueContactPoint?: fhir.ContactPoint|undefined;\r\n  /**\r\n   * The value of the Output parameter as a basic type.\r\n   */\r\n  valueCount?: fhir.Count|undefined;\r\n  /**\r\n   * The value of the Output parameter as a basic type.\r\n   */\r\n  valueDistance?: fhir.Distance|undefined;\r\n  /**\r\n   * The value of the Output parameter as a basic type.\r\n   */\r\n  valueDuration?: fhir.Duration|undefined;\r\n  /**\r\n   * The value of the Output parameter as a basic type.\r\n   */\r\n  valueHumanName?: fhir.HumanName|undefined;\r\n  /**\r\n   * The value of the Output parameter as a basic type.\r\n   */\r\n  valueIdentifier?: fhir.Identifier|undefined;\r\n  /**\r\n   * The value of the Output parameter as a basic type.\r\n   */\r\n  valueMoney?: fhir.Money|undefined;\r\n  /**\r\n   * The value of the Output parameter as a basic type.\r\n   */\r\n  valuePeriod?: fhir.Period|undefined;\r\n  /**\r\n   * The value of the Output parameter as a basic type.\r\n   */\r\n  valueQuantity?: fhir.Quantity|undefined;\r\n  /**\r\n   * The value of the Output parameter as a basic type.\r\n   */\r\n  valueRange?: fhir.Range|undefined;\r\n  /**\r\n   * The value of the Output parameter as a basic type.\r\n   */\r\n  valueRatio?: fhir.Ratio|undefined;\r\n  /**\r\n   * The value of the Output parameter as a basic type.\r\n   */\r\n  valueReference?: fhir.Reference|undefined;\r\n  /**\r\n   * The value of the Output parameter as a basic type.\r\n   */\r\n  valueSampledData?: fhir.SampledData|undefined;\r\n  /**\r\n   * The value of the Output parameter as a basic type.\r\n   */\r\n  valueSignature?: fhir.Signature|undefined;\r\n  /**\r\n   * The value of the Output parameter as a basic type.\r\n   */\r\n  valueTiming?: fhir.Timing|undefined;\r\n  /**\r\n   * The value of the Output parameter as a basic type.\r\n   */\r\n  valueContactDetail?: fhir.ContactDetail|undefined;\r\n  /**\r\n   * The value of the Output parameter as a basic type.\r\n   */\r\n  valueContributor?: fhir.Contributor|undefined;\r\n  /**\r\n   * The value of the Output parameter as a basic type.\r\n   */\r\n  valueDataRequirement?: fhir.DataRequirement|undefined;\r\n  /**\r\n   * The value of the Output parameter as a basic type.\r\n   */\r\n  valueExpression?: fhir.Expression|undefined;\r\n  /**\r\n   * The value of the Output parameter as a basic type.\r\n   */\r\n  valueParameterDefinition?: fhir.ParameterDefinition|undefined;\r\n  /**\r\n   * The value of the Output parameter as a basic type.\r\n   */\r\n  valueRelatedArtifact?: fhir.RelatedArtifact|undefined;\r\n  /**\r\n   * The value of the Output parameter as a basic type.\r\n   */\r\n  valueTriggerDefinition?: fhir.TriggerDefinition|undefined;\r\n  /**\r\n   * The value of the Output parameter as a basic type.\r\n   */\r\n  valueUsageContext?: fhir.UsageContext|undefined;\r\n  /**\r\n   * The value of the Output parameter as a basic type.\r\n   */\r\n  valueDosage?: fhir.Dosage|undefined;\r\n  /**\r\n   * The value of the Output parameter as a basic type.\r\n   */\r\n  valueMeta?: fhir.Meta|undefined;\r\n}\r\n\r\n/**\r\n * A task to be performed.\r\n */\r\nexport interface Task extends fhir.DomainResource { \r\n  /**\r\n   * Resource Type Name\r\n   */\r\n  resourceType: \"Task\";\r\n  /**\r\n   * The business identifier for this task.\r\n   */\r\n  identifier?: fhir.Identifier[]|undefined;\r\n  /**\r\n   * The URL pointing to a *FHIR*-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this Task.\r\n   */\r\n  instantiatesCanonical?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Task.instantiatesCanonical\r\n   */\r\n  _instantiatesCanonical?:fhir.FhirElement;\r\n  /**\r\n   * The URL pointing to an *externally* maintained  protocol, guideline, orderset or other definition that is adhered to in whole or in part by this Task.\r\n   */\r\n  instantiatesUri?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Task.instantiatesUri\r\n   */\r\n  _instantiatesUri?:fhir.FhirElement;\r\n  /**\r\n   * BasedOn refers to a higher-level authorization that triggered the creation of the task.  It references a \"request\" resource such as a ServiceRequest, MedicationRequest, ServiceRequest, CarePlan, etc. which is distinct from the \"request\" resource the task is seeking to fulfill.  This latter resource is referenced by FocusOn.  For example, based on a ServiceRequest (= BasedOn), a task is created to fulfill a procedureRequest ( = FocusOn ) to collect a specimen from a patient.\r\n   */\r\n  basedOn?: fhir.Reference[]|undefined;\r\n  /**\r\n   * An identifier that links together multiple tasks and other requests that were created in the same context.\r\n   */\r\n  groupIdentifier?: fhir.Identifier|undefined;\r\n  /**\r\n   * This should usually be 0..1.\r\n   */\r\n  partOf?: fhir.Reference[]|undefined;\r\n  /**\r\n   * The current status of the task.\r\n   */\r\n  status: 'accepted'|'cancelled'|'completed'|'draft'|'entered-in-error'|'failed'|'in-progress'|'on-hold'|'ready'|'received'|'rejected'|'requested'|null;\r\n  /**\r\n   * This applies to the current status.  Look at the history of the task to see reasons for past statuses.\r\n   */\r\n  statusReason?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * Contains business-specific nuances of the business state.\r\n   */\r\n  businessStatus?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * This element is immutable.  Proposed tasks, planned tasks, etc. must be distinct instances.\r\n   * In most cases, Tasks will have an intent of \"order\".\r\n   */\r\n  intent: 'filler-order'|'instance-order'|'option'|'order'|'original-order'|'plan'|'proposal'|'reflex-order'|'unknown'|null;\r\n  /**\r\n   * Indicates how quickly the Task should be addressed with respect to other requests.\r\n   */\r\n  priority?: 'asap'|'routine'|'stat'|'urgent'|undefined;\r\n  /**\r\n   * The title (eg \"My Tasks\", \"Outstanding Tasks for Patient X\") should go into the code.\r\n   */\r\n  code?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * A free-text description of what is to be performed.\r\n   */\r\n  description?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Task.description\r\n   */\r\n  _description?:fhir.FhirElement;\r\n  /**\r\n   * If multiple resources need to be manipulated, use sub-tasks.  (This ensures that status can be tracked independently for each referenced resource.).\r\n   */\r\n  focus?: fhir.Reference|undefined;\r\n  /**\r\n   * The entity who benefits from the performance of the service specified in the task (e.g., the patient).\r\n   */\r\n  for?: fhir.Reference|undefined;\r\n  /**\r\n   * The healthcare event  (e.g. a patient and healthcare provider interaction) during which this task was created.\r\n   */\r\n  encounter?: fhir.Reference|undefined;\r\n  /**\r\n   * Identifies the time action was first taken against the task (start) and/or the time final action was taken against the task prior to marking it as completed (end).\r\n   */\r\n  executionPeriod?: fhir.Period|undefined;\r\n  /**\r\n   * The date and time this task was created.\r\n   */\r\n  authoredOn?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Task.authoredOn\r\n   */\r\n  _authoredOn?:fhir.FhirElement;\r\n  /**\r\n   * The date and time of last modification to this task.\r\n   */\r\n  lastModified?: string|undefined;\r\n  /**\r\n   * Extended properties for primitive element: Task.lastModified\r\n   */\r\n  _lastModified?:fhir.FhirElement;\r\n  /**\r\n   * The creator of the task.\r\n   */\r\n  requester?: fhir.Reference|undefined;\r\n  /**\r\n   * The kind of participant that should perform the task.\r\n   */\r\n  performerType?: fhir.CodeableConcept[]|undefined;\r\n  /**\r\n   * Tasks may be created with an owner not yet identified.\r\n   */\r\n  owner?: fhir.Reference|undefined;\r\n  /**\r\n   * Principal physical location where the this task is performed.\r\n   */\r\n  location?: fhir.Reference|undefined;\r\n  /**\r\n   * This should only be included if there is no focus or if it differs from the reason indicated on the focus.\r\n   */\r\n  reasonCode?: fhir.CodeableConcept|undefined;\r\n  /**\r\n   * Tasks might be justified based on an Observation, a Condition, a past or planned procedure, etc.   This should only be included if there is no focus or if it differs from the reason indicated on the focus.    Use the CodeableConcept text element in `Task.reasonCode` if the data is free (uncoded) text.\r\n   */\r\n  reasonReference?: fhir.Reference|undefined;\r\n  /**\r\n   * Insurance plans, coverage extensions, pre-authorizations and/or pre-determinations that may be relevant to the Task.\r\n   */\r\n  insurance?: fhir.Reference[]|undefined;\r\n  /**\r\n   * Free-text information captured about the task as it progresses.\r\n   */\r\n  note?: fhir.Annotation[]|undefined;\r\n  /**\r\n   * This element does not point to the Provenance associated with the *current* version of the resource - as it would be created after this version existed.  The Provenance for the current version can be retrieved with a _revinclude.\r\n   */\r\n  relevantHistory?: fhir.Reference[]|undefined;\r\n  /**\r\n   * If the Task.focus is a request resource and the task is seeking fulfillment (i.e. is asking for the request to be actioned), this element identifies any limitations on what parts of the referenced request should be actioned.\r\n   */\r\n  restriction?: fhir.TaskRestriction|undefined;\r\n  /**\r\n   * Additional information that may be needed in the execution of the task.\r\n   */\r\n  input?: fhir.TaskInput[]|undefined;\r\n  /**\r\n   * Outputs produced by the Task.\r\n   */\r\n  output?: fhir.TaskOutput[]|undefined;\r\n}\r\n"]}