// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR Resource: List
export {};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTGlzdC5qcyIsInNvdXJjZVJvb3QiOiIuL3NyYy8iLCJzb3VyY2VzIjpbImZoaXJKc29uL0xpc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0FBQ3BCLCtDQUErQztBQUMvQyxrQ0FBa0M7QUFDbEMsc0JBQXNCIiwic291cmNlc0NvbnRlbnQiOlsiLy8gPGF1dG8tZ2VuZXJhdGVkLz5cclxuLy8gQ29udGVudHMgb2Y6IGhsNy5maGlyLnI0LmNvcmUgdmVyc2lvbjogNC4wLjFcclxuLy8gTWluaW11bSBUeXBlU2NyaXB0IFZlcnNpb246IDMuN1xyXG4vLyBGSElSIFJlc291cmNlOiBMaXN0XHJcblxyXG5pbXBvcnQgKiBhcyBmaGlyIGZyb20gJy4uL2ZoaXJKc29uLmpzJztcclxuXHJcblxyXG4vKipcclxuICogSWYgdGhlcmUgYXJlIG5vIGVudHJpZXMgaW4gdGhlIGxpc3QsIGFuIGVtcHR5UmVhc29uIFNIT1VMRCBiZSBwcm92aWRlZC5cclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgTGlzdEVudHJ5IGV4dGVuZHMgZmhpci5CYWNrYm9uZUVsZW1lbnQgeyBcclxuICAvKipcclxuICAgKiBUaGUgZmxhZyBjYW4gb25seSBiZSB1bmRlcnN0b29kIGluIHRoZSBjb250ZXh0IG9mIHRoZSBMaXN0LmNvZGUuIElmIHRoZSBmbGFnIG1lYW5zIHRoYXQgdGhlIGVudHJ5IGhhcyBhY3R1YWxseSBiZWVuIGRlbGV0ZWQgZnJvbSB0aGUgbGlzdCwgdGhlIGRlbGV0ZWQgZWxlbWVudCBTSEFMTCBiZSB0cnVlLiBEZWxldGVkIGNhbiBvbmx5IGJlIHVzZWQgaWYgdGhlIExpc3QubW9kZSBpcyBcImNoYW5nZXNcIi5cclxuICAgKi9cclxuICBmbGFnPzogZmhpci5Db2RlYWJsZUNvbmNlcHR8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIElmIHRoZSBmbGFnIG1lYW5zIHRoYXQgdGhlIGVudHJ5IGhhcyBhY3R1YWxseSBiZWVuIGRlbGV0ZWQgZnJvbSB0aGUgbGlzdCwgdGhlIGRlbGV0ZWQgZWxlbWVudCBTSEFMTCBiZSB0cnVlLiBCb3RoIGZsYWcgYW5kIGRlbGV0ZWQgY2FuIG9ubHkgYmUgdXNlZCBpZiB0aGUgTGlzdC5tb2RlIGlzIFwiY2hhbmdlc1wiLiBBIGRlbGV0ZWQgZW50cnkgc2hvdWxkIGJlIGRpc3BsYXllZCBpbiBuYXJyYXRpdmUgYXMgZGVsZXRlZC4gIFRoaXMgZWxlbWVudCBpcyBsYWJlbGVkIGFzIGEgbW9kaWZpZXIgYmVjYXVzZSBpdCBpbmRpY2F0ZXMgdGhhdCBhbiBpdGVtIGlzICh0byBiZSkgbm8gbG9uZ2VyIGluIHRoZSBsaXN0LlxyXG4gICAqL1xyXG4gIGRlbGV0ZWQ/OiBib29sZWFufHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBFeHRlbmRlZCBwcm9wZXJ0aWVzIGZvciBwcmltaXRpdmUgZWxlbWVudDogTGlzdC5lbnRyeS5kZWxldGVkXHJcbiAgICovXHJcbiAgX2RlbGV0ZWQ/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbiAgLyoqXHJcbiAgICogV2hlbiB0aGlzIGl0ZW0gd2FzIGFkZGVkIHRvIHRoZSBsaXN0LlxyXG4gICAqL1xyXG4gIGRhdGU/OiBzdHJpbmd8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBMaXN0LmVudHJ5LmRhdGVcclxuICAgKi9cclxuICBfZGF0ZT86Zmhpci5GaGlyRWxlbWVudDtcclxuICAvKipcclxuICAgKiBBIHJlZmVyZW5jZSB0byB0aGUgYWN0dWFsIHJlc291cmNlIGZyb20gd2hpY2ggZGF0YSB3YXMgZGVyaXZlZC5cclxuICAgKi9cclxuICBpdGVtOiBmaGlyLlJlZmVyZW5jZXxudWxsO1xyXG59XHJcblxyXG4vKipcclxuICogQSBsaXN0IGlzIGEgY3VyYXRlZCBjb2xsZWN0aW9uIG9mIHJlc291cmNlcy5cclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgTGlzdCBleHRlbmRzIGZoaXIuRG9tYWluUmVzb3VyY2UgeyBcclxuICAvKipcclxuICAgKiBSZXNvdXJjZSBUeXBlIE5hbWVcclxuICAgKi9cclxuICByZXNvdXJjZVR5cGU6IFwiTGlzdFwifG51bGw7XHJcbiAgLyoqXHJcbiAgICogSWRlbnRpZmllciBmb3IgdGhlIExpc3QgYXNzaWduZWQgZm9yIGJ1c2luZXNzIHB1cnBvc2VzIG91dHNpZGUgdGhlIGNvbnRleHQgb2YgRkhJUi5cclxuICAgKi9cclxuICBpZGVudGlmaWVyPzogKGZoaXIuSWRlbnRpZmllcnxudWxsKVtdfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBUaGlzIGVsZW1lbnQgaXMgbGFiZWxlZCBhcyBhIG1vZGlmaWVyIGJlY2F1c2UgdGhlIHN0YXR1cyBjb250YWlucyBjb2RlcyB0aGF0IG1hcmsgdGhlIHJlc291cmNlIGFzIG5vdCBjdXJyZW50bHkgdmFsaWQuXHJcbiAgICovXHJcbiAgc3RhdHVzOiAnY3VycmVudCd8J2VudGVyZWQtaW4tZXJyb3InfCdyZXRpcmVkJ3xudWxsO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBMaXN0LnN0YXR1c1xyXG4gICAqL1xyXG4gIF9zdGF0dXM/OmZoaXIuRmhpckVsZW1lbnQ7XHJcbiAgLyoqXHJcbiAgICogVGhpcyBlbGVtZW50IGlzIGxhYmVsZWQgYXMgYSBtb2RpZmllciBiZWNhdXNlIGEgY2hhbmdlIGxpc3QgbXVzdCBub3QgYmUgbWlzdW5kZXJzdG9vZCBhcyBhIGNvbXBsZXRlIGxpc3QuXHJcbiAgICovXHJcbiAgbW9kZTogJ2NoYW5nZXMnfCdzbmFwc2hvdCd8J3dvcmtpbmcnfG51bGw7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IExpc3QubW9kZVxyXG4gICAqL1xyXG4gIF9tb2RlPzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIEEgbGFiZWwgZm9yIHRoZSBsaXN0IGFzc2lnbmVkIGJ5IHRoZSBhdXRob3IuXHJcbiAgICovXHJcbiAgdGl0bGU/OiBzdHJpbmd8dW5kZWZpbmVkO1xyXG4gIC8qKlxyXG4gICAqIEV4dGVuZGVkIHByb3BlcnRpZXMgZm9yIHByaW1pdGl2ZSBlbGVtZW50OiBMaXN0LnRpdGxlXHJcbiAgICovXHJcbiAgX3RpdGxlPzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIElmIHRoZXJlIGlzIG5vIGNvZGUsIHRoZSBwdXJwb3NlIG9mIHRoZSBsaXN0IGlzIGltcGxpZWQgd2hlcmUgaXQgaXMgdXNlZCwgc3VjaCBhcyBpbiBhIGRvY3VtZW50IHNlY3Rpb24gdXNpbmcgRG9jdW1lbnQuc2VjdGlvbi5jb2RlLlxyXG4gICAqL1xyXG4gIGNvZGU/OiBmaGlyLkNvZGVhYmxlQ29uY2VwdHx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogU29tZSBwdXJlbHkgYXJiaXRyYXJ5IGxpc3RzIGRvIG5vdCBoYXZlIGEgY29tbW9uIHN1YmplY3QsIHNvIHRoaXMgaXMgb3B0aW9uYWwuXHJcbiAgICovXHJcbiAgc3ViamVjdD86IGZoaXIuUmVmZXJlbmNlfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBUaGUgZW5jb3VudGVyIHRoYXQgaXMgdGhlIGNvbnRleHQgaW4gd2hpY2ggdGhpcyBsaXN0IHdhcyBjcmVhdGVkLlxyXG4gICAqL1xyXG4gIGVuY291bnRlcj86IGZoaXIuUmVmZXJlbmNlfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBUaGUgYWN0dWFsIGltcG9ydGFudCBkYXRlIGlzIHRoZSBkYXRlIG9mIGN1cnJlbmN5IG9mIHRoZSByZXNvdXJjZXMgdGhhdCB3ZXJlIHN1bW1hcml6ZWQsIGJ1dCBpdCBpcyB1c3VhbGx5IGFzc3VtZWQgdGhhdCB0aGVzZSBhcmUgY3VycmVudCB3aGVuIHRoZSBwcmVwYXJhdGlvbiBvY2N1cnMuXHJcbiAgICovXHJcbiAgZGF0ZT86IHN0cmluZ3x1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogRXh0ZW5kZWQgcHJvcGVydGllcyBmb3IgcHJpbWl0aXZlIGVsZW1lbnQ6IExpc3QuZGF0ZVxyXG4gICAqL1xyXG4gIF9kYXRlPzpmaGlyLkZoaXJFbGVtZW50O1xyXG4gIC8qKlxyXG4gICAqIFRoZSBwcmltYXJ5IHNvdXJjZSBpcyB0aGUgZW50aXR5IHRoYXQgbWFkZSB0aGUgZGVjaXNpb25zIHdoYXQgaXRlbXMgYXJlIGluIHRoZSBsaXN0LiBUaGlzIG1heSBiZSBzb2Z0d2FyZSBvciB1c2VyLlxyXG4gICAqL1xyXG4gIHNvdXJjZT86IGZoaXIuUmVmZXJlbmNlfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBBcHBsaWNhdGlvbnMgU0hPVUxEIHJlbmRlciBvcmRlcmVkIGxpc3RzIGluIHRoZSBvcmRlciBwcm92aWRlZCwgYnV0IE1BWSBhbGxvdyB1c2VycyB0byByZS1vcmRlciBiYXNlZCBvbiB0aGVpciBvd24gcHJlZmVyZW5jZXMgYXMgd2VsbC4gSWYgdGhlcmUgaXMgbm8gb3JkZXIgc3BlY2lmaWVkLCB0aGUgb3JkZXIgaXMgdW5rbm93biwgdGhvdWdoIHRoZXJlIG1heSBzdGlsbCBiZSBzb21lIG9yZGVyLlxyXG4gICAqL1xyXG4gIG9yZGVyZWRCeT86IGZoaXIuQ29kZWFibGVDb25jZXB0fHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBDb21tZW50cyB0aGF0IGFwcGx5IHRvIHRoZSBvdmVyYWxsIGxpc3QuXHJcbiAgICovXHJcbiAgbm90ZT86IChmaGlyLkFubm90YXRpb258bnVsbClbXXx1bmRlZmluZWQ7XHJcbiAgLyoqXHJcbiAgICogSWYgdGhlcmUgYXJlIG5vIGVudHJpZXMgaW4gdGhlIGxpc3QsIGFuIGVtcHR5UmVhc29uIFNIT1VMRCBiZSBwcm92aWRlZC5cclxuICAgKi9cclxuICBlbnRyeT86IChmaGlyLkxpc3RFbnRyeXxudWxsKVtdfHVuZGVmaW5lZDtcclxuICAvKipcclxuICAgKiBUaGUgdmFyaW91cyByZWFzb25zIGZvciBhbiBlbXB0eSBsaXN0IG1ha2UgYSBzaWduaWZpY2FudCBpbnRlcnByZXRhdGlvbiB0byBpdHMgaW50ZXJwcmV0YXRpb24uIE5vdGUgdGhhdCB0aGlzIGNvZGUgaXMgZm9yIHVzZSB3aGVuIHRoZSBlbnRpcmUgbGlzdCBoYXMgYmVlbiBzdXBwcmVzc2VkLCBhbmQgbm90IGZvciB3aGVuIGluZGl2aWR1YWwgaXRlbXMgYXJlIG9taXR0ZWQgLSBpbXBsZW1lbnRlcnMgbWF5IGNvbnNpZGVyIHVzaW5nIGEgdGV4dCBub3RlIG9yIGEgZmxhZyBvbiBhbiBlbnRyeSBpbiB0aGVzZSBjYXNlcy5cclxuICAgKi9cclxuICBlbXB0eVJlYXNvbj86IGZoaXIuQ29kZWFibGVDb25jZXB0fHVuZGVmaW5lZDtcclxufVxyXG4iXX0=