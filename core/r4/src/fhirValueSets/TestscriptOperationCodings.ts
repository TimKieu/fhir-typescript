// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR ValueSet: http://hl7.org/fhir/ValueSet/testscript-operation-codes|4.0.1

import { CodingArgs } from '../fhir/Coding.js'

/**
 * This value set defines a set of codes that are used to indicate the supported operations of a testing engine or tool.
 */
export type TestscriptOperationCodingType = {
  /**
   * apply: Realizes an ActivityDefinition in a specific context
   */
  Apply: CodingArgs;
  /**
   * batch: Update, create or delete a set of resources as independent actions.
   */
  Batch: CodingArgs;
  /**
   * capabilities: Get a capability statement for the system.
   */
  Capabilities: CodingArgs;
  /**
   * closure: Closure Table Maintenance
   */
  Closure: CodingArgs;
  /**
   * conforms: Compare two systems CapabilityStatements
   */
  Conforms: CodingArgs;
  /**
   * create: Create a new resource with a server assigned id.
   */
  Create: CodingArgs;
  /**
   * data-requirements: Aggregates and returns the parameters and data requirements for a resource and all its dependencies as a single module definition
   */
  DataRequirements: CodingArgs;
  /**
   * delete: Delete a resource.
   */
  Delete: CodingArgs;
  /**
   * deleteCondMultiple: Conditionally delete one or more resources based on search parameters.
   */
  DeleteCondMultiple: CodingArgs;
  /**
   * deleteCondSingle: Conditionally delete a single resource based on search parameters.
   */
  DeleteCondSingle: CodingArgs;
  /**
   * document: Generate a Document
   */
  Document: CodingArgs;
  /**
   * evaluate: Request clinical decision support guidance based on a specific decision support module
   */
  Evaluate: CodingArgs;
  /**
   * evaluate-measure: Invoke an eMeasure and obtain the results
   */
  EvaluateMeasure: CodingArgs;
  /**
   * everything: Return all the related information as described in the Encounter or Patient
   */
  Everything: CodingArgs;
  /**
   * expand: Value Set Expansion
   */
  Expand: CodingArgs;
  /**
   * find: Find a functional list
   */
  Find: CodingArgs;
  /**
   * find-matches: Finding Codes based on supplied properties
   */
  FindMatches: CodingArgs;
  /**
   * graphql: Invoke a GraphQL query
   */
  Graphql: CodingArgs;
  /**
   * history: Retrieve the change history for a particular resource or resource type.
   */
  History: CodingArgs;
  /**
   * implements: Test if a server implements a client's required operations
   */
  Implements: CodingArgs;
  /**
   * lastn: Last N Observations Query
   */
  Lastn: CodingArgs;
  /**
   * lookup: Concept Look Up and Decomposition
   */
  Lookup: CodingArgs;
  /**
   * match: Find patient matches using MPI based logic
   */
  Match: CodingArgs;
  /**
   * meta: Access a list of profiles, tags, and security labels
   */
  Meta: CodingArgs;
  /**
   * meta-add: Add profiles, tags, and security labels to a resource
   */
  MetaAdd: CodingArgs;
  /**
   * meta-delete: Delete profiles, tags, and security labels for a resource
   */
  MetaDelete: CodingArgs;
  /**
   * patch: Patch an existing resource by its id.
   */
  Patch: CodingArgs;
  /**
   * populate: Populate Questionnaire
   */
  Populate: CodingArgs;
  /**
   * populatehtml: Generate HTML for Questionnaire
   */
  Populatehtml: CodingArgs;
  /**
   * populatelink: Generate a link to a Questionnaire completion webpage
   */
  Populatelink: CodingArgs;
  /**
   * process-message: Process a message according to the defined event
   */
  ProcessMessage: CodingArgs;
  /**
   * questionnaire: Build Questionnaire
   */
  Questionnaire: CodingArgs;
  /**
   * read: Read the current state of the resource.
   */
  Read: CodingArgs;
  /**
   * search: Search based on some filter criteria.
   */
  Search: CodingArgs;
  /**
   * stats: Observation Statistics
   */
  Stats: CodingArgs;
  /**
   * subset: Fetch a subset of the CapabilityStatement resource
   */
  Subset: CodingArgs;
  /**
   * subsumes: CodeSystem Subsumption Testing
   */
  Subsumes: CodingArgs;
  /**
   * transaction: Update, create or delete a set of resources as a single transaction.
   */
  Transaction: CodingArgs;
  /**
   * transform: Model Instance Transformation
   */
  Transform: CodingArgs;
  /**
   * translate: Concept Translation
   */
  Translate: CodingArgs;
  /**
   * update: Update an existing resource by its id.
   */
  Update: CodingArgs;
  /**
   * updateCreate: Update an existing resource by its id (or create it if it is new).
   */
  UpdateCreate: CodingArgs;
  /**
   * validate: Validate a resource
   */
  Validate: CodingArgs;
  /**
   * validate-code: ValueSet based Validation
   */
  ValidateCode: CodingArgs;
  /**
   * vread: Read the state of a specific version of the resource.
   */
  Vread: CodingArgs;
}

/**
 * This value set defines a set of codes that are used to indicate the supported operations of a testing engine or tool.
 */
export const TestscriptOperationCodings:TestscriptOperationCodingType = {
  /**
   * apply: Realizes an ActivityDefinition in a specific context
   */
  Apply: {
    display: "$apply",
    code: "apply",
    system: "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
  },
  /**
   * batch: Update, create or delete a set of resources as independent actions.
   */
  Batch: {
    display: "Batch",
    code: "batch",
    system: "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
  },
  /**
   * capabilities: Get a capability statement for the system.
   */
  Capabilities: {
    display: "Capabilities",
    code: "capabilities",
    system: "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
  },
  /**
   * closure: Closure Table Maintenance
   */
  Closure: {
    display: "$closure",
    code: "closure",
    system: "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
  },
  /**
   * conforms: Compare two systems CapabilityStatements
   */
  Conforms: {
    display: "$conforms",
    code: "conforms",
    system: "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
  },
  /**
   * create: Create a new resource with a server assigned id.
   */
  Create: {
    display: "Create",
    code: "create",
    system: "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
  },
  /**
   * data-requirements: Aggregates and returns the parameters and data requirements for a resource and all its dependencies as a single module definition
   */
  DataRequirements: {
    display: "$data-requirements",
    code: "data-requirements",
    system: "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
  },
  /**
   * delete: Delete a resource.
   */
  Delete: {
    display: "Delete",
    code: "delete",
    system: "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
  },
  /**
   * deleteCondMultiple: Conditionally delete one or more resources based on search parameters.
   */
  DeleteCondMultiple: {
    display: "Conditional Delete Multiple",
    code: "deleteCondMultiple",
    system: "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
  },
  /**
   * deleteCondSingle: Conditionally delete a single resource based on search parameters.
   */
  DeleteCondSingle: {
    display: "Conditional Delete Single",
    code: "deleteCondSingle",
    system: "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
  },
  /**
   * document: Generate a Document
   */
  Document: {
    display: "$document",
    code: "document",
    system: "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
  },
  /**
   * evaluate: Request clinical decision support guidance based on a specific decision support module
   */
  Evaluate: {
    display: "$evaluate",
    code: "evaluate",
    system: "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
  },
  /**
   * evaluate-measure: Invoke an eMeasure and obtain the results
   */
  EvaluateMeasure: {
    display: "$evaluate-measure",
    code: "evaluate-measure",
    system: "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
  },
  /**
   * everything: Return all the related information as described in the Encounter or Patient
   */
  Everything: {
    display: "$everything",
    code: "everything",
    system: "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
  },
  /**
   * expand: Value Set Expansion
   */
  Expand: {
    display: "$expand",
    code: "expand",
    system: "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
  },
  /**
   * find: Find a functional list
   */
  Find: {
    display: "$find",
    code: "find",
    system: "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
  },
  /**
   * find-matches: Finding Codes based on supplied properties
   */
  FindMatches: {
    display: "$find-matches",
    code: "find-matches",
    system: "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
  },
  /**
   * graphql: Invoke a GraphQL query
   */
  Graphql: {
    display: "$graphql",
    code: "graphql",
    system: "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
  },
  /**
   * history: Retrieve the change history for a particular resource or resource type.
   */
  History: {
    display: "History",
    code: "history",
    system: "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
  },
  /**
   * implements: Test if a server implements a client's required operations
   */
  Implements: {
    display: "$implements",
    code: "implements",
    system: "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
  },
  /**
   * lastn: Last N Observations Query
   */
  Lastn: {
    display: "$lastn",
    code: "lastn",
    system: "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
  },
  /**
   * lookup: Concept Look Up and Decomposition
   */
  Lookup: {
    display: "$lookup",
    code: "lookup",
    system: "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
  },
  /**
   * match: Find patient matches using MPI based logic
   */
  Match: {
    display: "$match",
    code: "match",
    system: "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
  },
  /**
   * meta: Access a list of profiles, tags, and security labels
   */
  Meta: {
    display: "$meta",
    code: "meta",
    system: "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
  },
  /**
   * meta-add: Add profiles, tags, and security labels to a resource
   */
  MetaAdd: {
    display: "$meta-add",
    code: "meta-add",
    system: "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
  },
  /**
   * meta-delete: Delete profiles, tags, and security labels for a resource
   */
  MetaDelete: {
    display: "$meta-delete",
    code: "meta-delete",
    system: "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
  },
  /**
   * patch: Patch an existing resource by its id.
   */
  Patch: {
    display: "Patch",
    code: "patch",
    system: "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
  },
  /**
   * populate: Populate Questionnaire
   */
  Populate: {
    display: "$populate",
    code: "populate",
    system: "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
  },
  /**
   * populatehtml: Generate HTML for Questionnaire
   */
  Populatehtml: {
    display: "$populatehtml",
    code: "populatehtml",
    system: "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
  },
  /**
   * populatelink: Generate a link to a Questionnaire completion webpage
   */
  Populatelink: {
    display: "$populatelink",
    code: "populatelink",
    system: "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
  },
  /**
   * process-message: Process a message according to the defined event
   */
  ProcessMessage: {
    display: "$process-message",
    code: "process-message",
    system: "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
  },
  /**
   * questionnaire: Build Questionnaire
   */
  Questionnaire: {
    display: "$questionnaire",
    code: "questionnaire",
    system: "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
  },
  /**
   * read: Read the current state of the resource.
   */
  Read: {
    display: "Read",
    code: "read",
    system: "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
  },
  /**
   * search: Search based on some filter criteria.
   */
  Search: {
    display: "Search",
    code: "search",
    system: "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
  },
  /**
   * stats: Observation Statistics
   */
  Stats: {
    display: "$stats",
    code: "stats",
    system: "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
  },
  /**
   * subset: Fetch a subset of the CapabilityStatement resource
   */
  Subset: {
    display: "$subset",
    code: "subset",
    system: "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
  },
  /**
   * subsumes: CodeSystem Subsumption Testing
   */
  Subsumes: {
    display: "$subsumes",
    code: "subsumes",
    system: "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
  },
  /**
   * transaction: Update, create or delete a set of resources as a single transaction.
   */
  Transaction: {
    display: "Transaction",
    code: "transaction",
    system: "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
  },
  /**
   * transform: Model Instance Transformation
   */
  Transform: {
    display: "$transform",
    code: "transform",
    system: "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
  },
  /**
   * translate: Concept Translation
   */
  Translate: {
    display: "$translate",
    code: "translate",
    system: "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
  },
  /**
   * update: Update an existing resource by its id.
   */
  Update: {
    display: "Update",
    code: "update",
    system: "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
  },
  /**
   * updateCreate: Update an existing resource by its id (or create it if it is new).
   */
  UpdateCreate: {
    display: "Create using Update",
    code: "updateCreate",
    system: "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
  },
  /**
   * validate: Validate a resource
   */
  Validate: {
    display: "$validate",
    code: "validate",
    system: "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
  },
  /**
   * validate-code: ValueSet based Validation
   */
  ValidateCode: {
    display: "$validate-code",
    code: "validate-code",
    system: "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
  },
  /**
   * vread: Read the state of a specific version of the resource.
   */
  Vread: {
    display: "Version Read",
    code: "vread",
    system: "http://terminology.hl7.org/CodeSystem/testscript-operation-codes",
  },
} as const;
