// <auto-generated/>
// Contents of: hl7.fhir.r4.core version: 4.0.1
// Minimum TypeScript Version: 3.7
// FHIR Resource: ResearchSubject

import * as fhir from '../fhir.js';

// @ts-ignore
import { ResearchSubjectStatusCodings, ResearchSubjectStatusCodingType,} from '../fhirValueSets/ResearchSubjectStatusCodings.js';
// @ts-ignore
import { ResearchSubjectStatusCodes,  ResearchSubjectStatusCodeType } from '../fhirValueSets/ResearchSubjectStatusCodes.js';
/**
 * Valid arguments for the ResearchSubject type.
 */
export interface ResearchSubjectArgs extends fhir.DomainResourceArgs {
  /**
   * Resource Type Name
   */
  resourceType: "ResearchSubject"|undefined;
  /**
   * Identifiers assigned to this research subject for a study.
   */
  identifier?: fhir.IdentifierArgs[]|undefined;
  /**
   * The current state of the subject.
   */
  status: fhir.FhirCode<ResearchSubjectStatusCodeType>|string|undefined;
  /**
   * The dates the subject began and ended their participation in the study.
   */
  period?: fhir.PeriodArgs|undefined;
  /**
   * Reference to the study the subject is participating in.
   */
  study: fhir.ReferenceArgs|null;
  /**
   * The record of the person or animal who is involved in the study.
   */
  individual: fhir.ReferenceArgs|null;
  /**
   * The name of the arm in the study the subject is expected to follow as part of this study.
   */
  assignedArm?: fhir.FhirString|string|undefined;
  /**
   * The name of the arm in the study the subject actually followed as part of this study.
   */
  actualArm?: fhir.FhirString|string|undefined;
  /**
   * A record of the patient's informed agreement to participate in the study.
   */
  consent?: fhir.ReferenceArgs|undefined;
}

/**
 * A physical entity which is the primary unit of operational and/or administrative interest in a study.
 */
export class ResearchSubject extends fhir.DomainResource {
  /**
   * Mapping of this datatype to a FHIR equivalent
   */
  public static override readonly _fts_dataType:string = 'ResearchSubject';
  /**
   * Resource Type Name
   */
  public override resourceType: "ResearchSubject";
  /**
   * Identifiers assigned to this research subject for a study.
   */
  public identifier: fhir.Identifier[];
  /**
   * The current state of the subject.
   */
  public status: fhir.FhirCode<ResearchSubjectStatusCodeType>|null;
  /**
   * The dates the subject began and ended their participation in the study.
   */
  public period?: fhir.Period|undefined;
  /**
   * Reference to the study the subject is participating in.
   */
  public study: fhir.Reference|null;
  /**
   * The record of the person or animal who is involved in the study.
   */
  public individual: fhir.Reference|null;
  /**
   * The name of the arm in the study the subject is expected to follow as part of this study.
   */
  public assignedArm?: fhir.FhirString|undefined;
  /**
   * The name of the arm in the study the subject actually followed as part of this study.
   */
  public actualArm?: fhir.FhirString|undefined;
  /**
   * A record of the patient's informed agreement to participate in the study.
   */
  public consent?: fhir.Reference|undefined;
  /**
   * Default constructor for ResearchSubject - initializes any required elements to null if a value is not provided.
   */
  constructor(source:Partial<ResearchSubjectArgs> = {}, options:fhir.FhirConstructorOptions = {}) {
    super(source, options);
    this.resourceType = 'ResearchSubject';
    if (source['identifier']) { this.identifier = source.identifier.map((x) => new fhir.Identifier(x)); }
    else { this.identifier = []; }
    if (source['status']) { this.status = new fhir.FhirCode<ResearchSubjectStatusCodeType>({value: source.status}); }
    else { this.status = null; }
    if (source['period']) { this.period = new fhir.Period(source.period); }
    if (source['study']) { this.study = new fhir.Reference(source.study); }
    else { this.study = null; }
    if (source['individual']) { this.individual = new fhir.Reference(source.individual); }
    else { this.individual = null; }
    if (source['assignedArm']) { this.assignedArm = new fhir.FhirString({value: source.assignedArm}); }
    if (source['actualArm']) { this.actualArm = new fhir.FhirString({value: source.actualArm}); }
    if (source['consent']) { this.consent = new fhir.Reference(source.consent); }
  }
  /**
   * Required-bound Value Set for status (ResearchSubject.status)
   */
  public static get statusRequiredCodes() {
    return ResearchSubjectStatusCodes;
  }
  /**
   * Function to perform basic model validation (e.g., check if required elements are present).
   */
  public override doModelValidation():fhir.FtsIssue[] {
    let issues:fhir.FtsIssue[] = super.doModelValidation();
    if (!this['resourceType']) {
      issues.push({ severity: 'error', code: 'required', diagnostics: 'Missing required property resourceType:"ResearchSubject" fhir: ResearchSubject.resourceType:"ResearchSubject"' });
    }
    if (this["identifier"]) { this.identifier.forEach((x) => { issues.push(...x.doModelValidation()); }) }
    if (!this['status']) {
      issues.push({ severity: 'error', code: 'required', diagnostics: 'Missing required property status:fhir.FhirCode<ResearchSubjectStatusCodeType> fhir: ResearchSubject.status:code' });
    }
    if (this['status'] && (!Object.values(ResearchSubjectStatusCodes).includes(this.status as any))) {
      issues.push({ severity: 'error', code: 'code-invalid', diagnostics: 'Invalid code property status:fhir.FhirCode<ResearchSubjectStatusCodeType> fhir: ResearchSubject.status:code Required binding to: ResearchSubjectStatus' });
    }
    if (this["status"]) { issues.push(...this.status.doModelValidation()); }
    if (this["period"]) { issues.push(...this.period.doModelValidation()); }
    if (!this['study']) {
      issues.push({ severity: 'error', code: 'required', diagnostics: 'Missing required property study:fhir.Reference fhir: ResearchSubject.study:Reference' });
    }
    if (this["study"]) { issues.push(...this.study.doModelValidation()); }
    if (!this['individual']) {
      issues.push({ severity: 'error', code: 'required', diagnostics: 'Missing required property individual:fhir.Reference fhir: ResearchSubject.individual:Reference' });
    }
    if (this["individual"]) { issues.push(...this.individual.doModelValidation()); }
    if (this["assignedArm"]) { issues.push(...this.assignedArm.doModelValidation()); }
    if (this["actualArm"]) { issues.push(...this.actualArm.doModelValidation()); }
    if (this["consent"]) { issues.push(...this.consent.doModelValidation()); }
    return issues;
  }
}
